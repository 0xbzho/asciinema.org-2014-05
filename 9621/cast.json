[[0.146648,{"lines":{"0":[["[root@localhost ~]#                                                                                                                                             ",{}]],"1":[["                                                                                                                                                                ",{}]],"2":[["                                                                                                                                                                ",{}]],"3":[["                                                                                                                                                                ",{}]],"4":[["                                                                                                                                                                ",{}]],"5":[["                                                                                                                                                                ",{}]],"6":[["                                                                                                                                                                ",{}]],"7":[["                                                                                                                                                                ",{}]],"8":[["                                                                                                                                                                ",{}]],"9":[["                                                                                                                                                                ",{}]],"10":[["                                                                                                                                                                ",{}]],"11":[["                                                                                                                                                                ",{}]],"12":[["                                                                                                                                                                ",{}]],"13":[["                                                                                                                                                                ",{}]],"14":[["                                                                                                                                                                ",{}]],"15":[["                                                                                                                                                                ",{}]],"16":[["                                                                                                                                                                ",{}]],"17":[["                                                                                                                                                                ",{}]],"18":[["                                                                                                                                                                ",{}]],"19":[["                                                                                                                                                                ",{}]],"20":[["                                                                                                                                                                ",{}]],"21":[["                                                                                                                                                                ",{}]],"22":[["                                                                                                                                                                ",{}]],"23":[["                                                                                                                                                                ",{}]],"24":[["                                                                                                                                                                ",{}]],"25":[["                                                                                                                                                                ",{}]],"26":[["                                                                                                                                                                ",{}]],"27":[["                                                                                                                                                                ",{}]],"28":[["                                                                                                                                                                ",{}]],"29":[["                                                                                                                                                                ",{}]],"30":[["                                                                                                                                                                ",{}]],"31":[["                                                                                                                                                                ",{}]],"32":[["                                                                                                                                                                ",{}]],"33":[["                                                                                                                                                                ",{}]],"34":[["                                                                                                                                                                ",{}]],"35":[["                                                                                                                                                                ",{}]],"36":[["                                                                                                                                                                ",{}]],"37":[["                                                                                                                                                                ",{}]],"38":[["                                                                                                                                                                ",{}]],"39":[["                                                                                                                                                                ",{}]],"40":[["                                                                                                                                                                ",{}]],"41":[["                                                                                                                                                                ",{}]],"42":[["                                                                                                                                                                ",{}]],"43":[["                                                                                                                                                                ",{}]],"44":[["                                                                                                                                                                ",{}]],"45":[["                                                                                                                                                                ",{}]],"46":[["                                                                                                                                                                ",{}]],"47":[["                                                                                                                                                                ",{}]]},"cursor":{"x":20,"y":0,"visible":true}}],[6.326195,{"lines":{"0":[["[root@localhost ~]# v                                                                                                                                           ",{}]]},"cursor":{"x":21}}],[0.044487,{"lines":{"0":[["[root@localhost ~]# vi                                                                                                                                          ",{}]]},"cursor":{"x":22}}],[0.063858,{"lines":{"0":[["[root@localhost ~]# vim                                                                                                                                         ",{}]]},"cursor":{"x":23}}],[0.071732,{"cursor":{"x":24}}],[0.098231,{"lines":{"0":[["[root@localhost ~]# vim t                                                                                                                                       ",{}]]},"cursor":{"x":25}}],[0.084784,{"lines":{"0":[["[root@localhost ~]# vim te                                                                                                                                      ",{}]]},"cursor":{"x":26}}],[0.015906,{"lines":{"0":[["[root@localhost ~]# vim tes                                                                                                                                     ",{}]]},"cursor":{"x":27}}],[0.119562,{"lines":{"0":[["[root@localhost ~]# vim test                                                                                                                                    ",{}]]},"cursor":{"x":28}}],[0.297957,{"lines":{"0":[["[root@localhost ~]# vim test.                                                                                                                                   ",{}]]},"cursor":{"x":29}}],[0.205243,{"lines":{"0":[["[root@localhost ~]# vim test.c                                                                                                                                  ",{}]]},"cursor":{"x":30}}],[0.116709,{"lines":{"0":[["[root@localhost ~]# vim test.cp                                                                                                                                 ",{}]]},"cursor":{"x":31}}],[0.165077,{"lines":{"0":[["[root@localhost ~]# vim test.cpp                                                                                                                                ",{}]]},"cursor":{"x":32}}],[0.23852,{"cursor":{"x":0,"y":1}}],[0.167527,{"lines":{"0":[["  oot@localhost ~]# vim test.cpp                                                                                                                                ",{}]],"1":[["▽                                                                                                                                                               ",{}]]},"cursor":{"y":0}}],[0.010416,{"lines":{"0":[["                                                                                                                                                                ",{}]],"1":[["                                                                                                                                                                ",{}]],"47":[["\"test.cpp\" 71L, 1060C                                                                                                                                           ",{}]]},"cursor":{"x":21,"y":47,"visible":false}}],[0.36204,{"lines":{"0":[["  6 ",{"fg":3,"bold":true}],["struct",{"fg":2,"bold":true}],[" First                                                                                                                                                ",{}]],"1":[["  7 ",{"fg":3,"bold":true}],["{                                                                                                                                                           ",{}]],"2":[["  8 ",{"fg":3,"bold":true}],["    ",{}],["virtual",{"fg":2,"bold":true}],[" ",{}],["void",{"fg":2,"bold":true}],[" FirstRun(",{}],["void",{"fg":2,"bold":true}],[") = ",{}],["0",{"fg":5,"bold":true}],[";                                                                                                                        ",{}]],"3":[["  9 ",{"fg":3,"bold":true}],["    ",{}],["virtual",{"fg":2,"bold":true}],[" ",{}],["void",{"fg":2,"bold":true}],[" FirstRun2(",{}],["void",{"fg":2,"bold":true}],[") = ",{}],["0",{"fg":5,"bold":true}],[";                                                                                                                       ",{}]],"4":[[" 10 ",{"fg":3,"bold":true}],["};                                                                                                                                                          ",{}]],"5":[[" 11 ",{"fg":3,"bold":true}],["                                                                                                                                                            ",{}]],"6":[[" 12 ",{"fg":3,"bold":true}],["struct",{"fg":2,"bold":true}],[" Second                                                                                                                                               ",{}]],"7":[[" 13 ",{"fg":3,"bold":true}],["{                                                                                                                                                           ",{}]],"8":[[" 14 ",{"fg":3,"bold":true}],["    ",{}],["virtual",{"fg":2,"bold":true}],[" ",{}],["void",{"fg":2,"bold":true}],[" SecondRun(",{}],["void",{"fg":2,"bold":true}],[") = ",{}],["0",{"fg":5,"bold":true}],[";                                                                                                                       ",{}]],"9":[[" 15 ",{"fg":3,"bold":true}],["    ",{}],["virtual",{"fg":2,"bold":true}],[" ",{}],["void",{"fg":2,"bold":true}],[" SecondRun2(",{}],["void",{"fg":2,"bold":true}],[") = ",{}],["0",{"fg":5,"bold":true}],[";                                                                                                                      ",{}]],"10":[[" 16 ",{"fg":3,"bold":true}],["};                                                                                                                                                          ",{}]],"11":[[" 17 ",{"fg":3,"bold":true}],["                                                                                                                                                            ",{}]],"12":[[" 18 ",{"fg":3,"bold":true}],["struct",{"fg":2,"bold":true}],[" Last: ",{}],["public",{"fg":3,"bold":true}],[" First,                                                                                                                                  ",{}]],"13":[[" 19 ",{"fg":3,"bold":true}],["    ",{}],["public",{"fg":3,"bold":true}],[" Second                                                                                                                                           ",{}]],"14":[[" 20 ",{"fg":3,"bold":true}],["{                                                                                                                                                           ",{}]],"15":[[" 21 ",{"fg":3,"bold":true}],["    ",{}],["// 基类First的虚方法",{"fg":6,"bold":true}],["                                                                                                                                    ",{}]],"16":[[" 22 ",{"fg":3,"bold":true}],["    ",{}],["virtual",{"fg":2,"bold":true}],[" ",{}],["void",{"fg":2,"bold":true}],[" FirstRun(",{}],["void",{"fg":2,"bold":true}],[")                                                                                                                             ",{}]],"17":[[" 23 ",{"fg":3,"bold":true}],["    {                                                                                                                                                       ",{}]],"18":[[" 24 ",{"fg":3,"bold":true}],["    ",{}],["|",{"fg":2,"bold":true}],["   cout << ",{}],["\"First\"",{"fg":5,"bold":true}],[" << endl;                                                                                                                            ",{}]],"19":[[" 2",{"fg":3,"bold":true}],["                                                                                                                                                              ",{}]]},"cursor":{"x":2,"y":19}}],[0.003639,{"lines":{"19":[[" 25 ",{"fg":3,"bold":true}],["    }                                                                                                                                                       ",{}]],"20":[[" 26 ",{"fg":3,"bold":true}],["                                                                                                                                                            ",{}]],"21":[[" 27 ",{"fg":3,"bold":true}],["    ",{}],["virtual",{"fg":2,"bold":true}],[" ",{}],["void",{"fg":2,"bold":true}],[" FirstRun2(",{}],["void",{"fg":2,"bold":true}],[")                                                                                                                            ",{}]],"22":[[" 28 ",{"fg":3,"bold":true}],["    {                                                                                                                                                       ",{}]],"23":[[" 29 ",{"fg":3,"bold":true}],["    ",{}],["|",{"fg":2,"bold":true}],["   cout << ",{}],["\"First2\"",{"fg":5,"bold":true}],[" << endl;                                                                                                                           ",{}]],"24":[[" 30 ",{"fg":3,"bold":true}],["    }                                                                                                                                                       ",{}]],"25":[[" 31 ",{"fg":3,"bold":true}],["                                                                                                                                                            ",{}]],"26":[[" 32 ",{"fg":3,"bold":true}],["    ",{}],["// 基类Second虚方法",{"fg":6,"bold":true}],["                                                                                                                                     ",{}]],"27":[[" 33 ",{"fg":3,"bold":true}],["    ",{}],["virtual",{"fg":2,"bold":true}],[" ",{}],["void",{"fg":2,"bold":true}],[" SecondRun(",{}],["void",{"fg":2,"bold":true}],[")                                                                                                                            ",{}]],"28":[[" 34 ",{"fg":3,"bold":true}],["    {                                                                                                                                                       ",{}]],"29":[[" 35 ",{"fg":3,"bold":true}],["    ",{}],["|",{"fg":2,"bold":true}],["   cout <<",{}],["\"Second\"",{"fg":5,"bold":true}],[" << endl;                                                                                                                            ",{}]],"30":[[" 36 ",{"fg":3,"bold":true}],["    }                                                                                                                                                       ",{}]],"31":[[" 37 ",{"fg":3,"bold":true}],["                                                                                                                                                            ",{}]],"32":[[" 38 ",{"fg":3,"bold":true}],["    ",{}],["virtual",{"fg":2,"bold":true}],[" ",{}],["void",{"fg":2,"bold":true}],[" SecondRun2(",{}],["void",{"fg":2,"bold":true}],[")                                                                                                                           ",{}]],"33":[[" 39 ",{"fg":3,"bold":true}],["    {                                                                                                                                                       ",{}]],"34":[[" 40 ",{"fg":3,"bold":true}],["    ",{}],["|",{"fg":2,"bold":true}],["   cout <<",{}],["\"Second2\"",{"fg":5,"bold":true}],[" << endl;                                                                                                                           ",{}]],"35":[[" 41 ",{"fg":3,"bold":true}],["    }                                                                                                                                                       ",{}]],"36":[[" 42 ",{"fg":3,"bold":true}],["                                                                                                                                                            ",{}]],"37":[[" 43 ",{"fg":3,"bold":true}],["    ",{}],["virtual",{"fg":2,"bold":true}],[" ~Last()                                                                                                                                         ",{}]],"38":[[" 44 ",{"fg":3,"bold":true}],["    {                                                                                                                                                       ",{}]],"39":[[" 45 ",{"fg":3,"bold":true}],["                                                                                                                                                            ",{}]],"40":[[" 46 ",{"fg":3,"bold":true}],["    }                                                                                                                                                       ",{}]],"41":[[" 47 ",{"fg":3,"bold":true}],["                                                                                                                                                            ",{}]],"42":[[" 48 ",{"fg":3,"bold":true}],["};                                                                                                                                                          ",{}]],"43":[[" 49 ",{"fg":3,"bold":true}],["                                                                                                                                                            ",{}]],"44":[[" 50 ",{"fg":3,"bold":true}],["                                                                                                                                                            ",{}]],"45":[[" 51 ",{"fg":3,"bold":true}],["int",{"fg":2,"bold":true,"underline":true}],[" main(",{"underline":true}],["int",{"fg":2,"bold":true,"underline":true}],[" argc, ",{"underline":true}],["char",{"fg":2,"bold":true,"underline":true}],["* argv[])                                                                                                                            ",{"underline":true}]]},"cursor":{"x":160,"y":45}}],[0.145144,{"lines":{"46":[[" NORMAL ",{"bold":true}],[" ",{}],["test.cpp ",{"bold":true}],[" main()                                                                                                  unix │ utf-8 │ cpp │  71% ",{}],[" LN  51",{"bold":true}],[":11 ",{}]]},"cursor":{"x":14,"visible":true}}],[1.951738,{"lines":{"47":[["\"test.cpp\" 71L, 1060C                                                                                                                                ,          ",{}]]}}],[0.490864,{"lines":{"47":[["\"test.cpp\" 71L, 1060C                                                                                                                                ,t         ",{}]]}}],[0.859941,{"lines":{"47":[["\"test.cpp\" 71L, 1060C                                                                                                                                           ",{}]]},"cursor":{"visible":false}}],[0.0564,{"lines":{"0":[["\" Press <F1> for hel",{"fg":6,"bold":true,"underline":true}],["|",{"inverse":true}],["                                                                                                                                           ",{}]],"1":[["                    ",{}],["|",{"inverse":true}],["                                                                                                                                           ",{}]],"2":[["▼",{"fg":3,"bold":true}],[" First",{"fg":5,"bold":true}],[" : ",{}],["struct",{"fg":2,"bold":true}],["    ",{}],["|",{"inverse":true}],["FirstRun(",{}],["void",{"fg":2,"bold":true}],[") = ",{}],["0",{"fg":5,"bold":true}],[";                                                                                                                        ",{}]],"3":[["    [prototypes]",{"fg":6,"bold":true}],["    ",{}],["|",{"inverse":true}],["FirstRun2(",{}],["void",{"fg":2,"bold":true}],[") = ",{}],["0",{"fg":5,"bold":true}],[";                                                                                                                       ",{}]],"4":[["   ",{}],["+",{"fg":2,"bold":true}],["FirstRun(void)  ",{}],["|",{"inverse":true}],["                                                                                                                                           ",{}]],"5":[["   ",{}],["+",{"fg":2,"bold":true}],["FirstRun2(void) ",{}],["|",{"inverse":true}],["                                                                                                                                           ",{}]],"6":[["                    ",{}],["|",{"inverse":true}],["                                                                                                                                           ",{}]],"7":[["▼",{"fg":3,"bold":true}],[" Last",{"fg":5,"bold":true}],[" : ",{}],["struct",{"fg":2,"bold":true}],["     ",{}],["|",{"inverse":true}],["                                                                                                                                           ",{}]],"8":[["    [functions]",{"fg":6,"bold":true}],["     ",{}],["|",{"inverse":true}],["SecondRun(",{}],["void",{"fg":2,"bold":true}],[") = ",{}],["0",{"fg":5,"bold":true}],[";                                                                                                                       ",{}]],"9":[["   ",{}],["+",{"fg":2,"bold":true}],["FirstRun(void)  ",{}],["|",{"inverse":true}],["SecondRun2(",{}],["void",{"fg":2,"bold":true}],[") = ",{}],["0",{"fg":5,"bold":true}],[";                                                                                                                      ",{}]],"10":[["   ",{}],["+",{"fg":2,"bold":true}],["FirstRun2(void) ",{}],["|",{"inverse":true}],["                                                                                                                                           ",{}]],"11":[["   ",{}],["+",{"fg":2,"bold":true}],["~Last()         ",{}],["|",{"inverse":true}],["                                                                                                                                           ",{}]],"12":[["   ",{}],["+",{"fg":2,"bold":true}],["SecondRun(void) ",{}],["|",{"inverse":true}],["ic",{"fg":3,"bold":true}],[" First,                                                                                                                                  ",{}]],"13":[["   ",{}],["+",{"fg":2,"bold":true}],["SecondRun2(void)",{}],["|",{"inverse":true}],["                                                                                                                                           ",{}]],"14":[["                    ",{}],["|",{"inverse":true}],["                                                                                                                                           ",{}]],"15":[["▼",{"fg":3,"bold":true}],[" Second",{"fg":5,"bold":true}],[" : ",{}],["struct",{"fg":2,"bold":true}],["   ",{}],["|",{"inverse":true}],["虚方法",{"fg":6,"bold":true}],["                                                                                                                                    ",{}]],"16":[["    [prototypes]",{"fg":6,"bold":true}],["    ",{}],["|",{"inverse":true}],["FirstRun(",{}],["void",{"fg":2,"bold":true}],[")                                                                                                                             ",{}]],"17":[["   ",{}],["+",{"fg":2,"bold":true}],["SecondRun(void) ",{}],["|",{"inverse":true}],["                                                                                                                                           ",{}]],"18":[["   ",{}],["+",{"fg":2,"bold":true}],["SecondRun2(void)",{}],["|",{"inverse":true}],["First\"",{"fg":5,"bold":true}],[" << endl;                                                                                                                            ",{}]],"19":[["                    ",{}],["|",{"inverse":true}],["                                                                                                                                           ",{}]],"20":[["▼",{"fg":3,"bold":true}],[" ",{}],["functions",{"fg":6,"bold":true}],["         ",{}],["|",{"inverse":true}],["                                                                                                                                           ",{}]],"21":[["    main(int argc, c",{}],["|",{"inverse":true}],["FirstRun2(",{}],["void",{"fg":2,"bold":true}],[")                                                                                                                            ",{}]],"22":[[" 28 ",{"fg":3,"bold":true}],["    {           ",{}],["|",{"inverse":true}],["                                                                                                                                           ",{}]],"23":[[" 29 ",{"fg":3,"bold":true}],["    ",{}],["|",{"fg":2,"bold":true}],["   cout << ",{}],["|",{"inverse":true}],["First2\"",{"fg":5,"bold":true}],[" << endl;                                                                                                                           ",{}]],"24":[[" 30 ",{"fg":3,"bold":true}],["    }           ",{}],["|",{"inverse":true}],["                                                                                                                                           ",{}]],"25":[[" 31 ",{"fg":3,"bold":true}],["                ",{}],["|",{"inverse":true}],["                                                                                                                                           ",{}]],"26":[[" 32 ",{"fg":3,"bold":true}],["    ",{}],["// 基类Secon",{"fg":6,"bold":true}],["|",{"inverse":true}],["虚方法",{"fg":6,"bold":true}],["                                                                                                                                     ",{}]]},"cursor":{"x":21,"y":26}}],[0.00162,{"lines":{"0":[["\" Press <F1> for hel",{"fg":6,"bold":true,"underline":true}],["|",{"inverse":true}],["  6 ",{"fg":3,"bold":true}],["struct",{"fg":2,"bold":true}],[" First                                                                                                                           ",{}]],"1":[["                    ",{}],["|",{"inverse":true}],["  7 ",{"fg":3,"bold":true}],["{                                                                                                                                      ",{}]],"2":[["▼",{"fg":3,"bold":true}],[" First",{"fg":5,"bold":true}],[" : ",{}],["struct",{"fg":2,"bold":true}],["    ",{}],["|",{"inverse":true}],["  8 ",{"fg":3,"bold":true}],["    ",{}],["virtual",{"fg":2,"bold":true}],[" ",{}],["void",{"fg":2,"bold":true}],[" FirstRun(",{}],["void",{"fg":2,"bold":true}],[") = ",{}],["0",{"fg":5,"bold":true}],[";                                                                                                   ",{}]],"3":[["    [prototypes]",{"fg":6,"bold":true}],["    ",{}],["|",{"inverse":true}],["  9 ",{"fg":3,"bold":true}],["    ",{}],["virtual",{"fg":2,"bold":true}],[" ",{}],["void",{"fg":2,"bold":true}],[" FirstRun2(",{}],["void",{"fg":2,"bold":true}],[") = ",{}],["0",{"fg":5,"bold":true}],[";                                                                                                  ",{}]],"4":[["   ",{}],["+",{"fg":2,"bold":true}],["FirstRun(void)  ",{}],["|",{"inverse":true}],[" 10 ",{"fg":3,"bold":true}],["};                                                                                                                                     ",{}]],"5":[["   ",{}],["+",{"fg":2,"bold":true}],["FirstRun2(void) ",{}],["|",{"inverse":true}],[" 11 ",{"fg":3,"bold":true}],["                                                                                                                                       ",{}]],"6":[["                    ",{}],["|",{"inverse":true}],[" 12 ",{"fg":3,"bold":true}],["struct",{"fg":2,"bold":true}],[" Second                                                                                                                          ",{}]],"7":[["▼",{"fg":3,"bold":true}],[" Last",{"fg":5,"bold":true}],[" : ",{}],["struct",{"fg":2,"bold":true}],["     ",{}],["|",{"inverse":true}],[" 13 ",{"fg":3,"bold":true}],["{                                                                                                                                      ",{}]],"8":[["    [functions]",{"fg":6,"bold":true}],["     ",{}],["|",{"inverse":true}],[" 14 ",{"fg":3,"bold":true}],["    ",{}],["virtual",{"fg":2,"bold":true}],[" ",{}],["void",{"fg":2,"bold":true}],[" SecondRun(",{}],["void",{"fg":2,"bold":true}],[") = ",{}],["0",{"fg":5,"bold":true}],[";                                                                                                  ",{}]],"9":[["   ",{}],["+",{"fg":2,"bold":true}],["FirstRun(void)  ",{}],["|",{"inverse":true}],[" 15 ",{"fg":3,"bold":true}],["    ",{}],["virtual",{"fg":2,"bold":true}],[" ",{}],["void",{"fg":2,"bold":true}],[" SecondRun2(",{}],["void",{"fg":2,"bold":true}],[") = ",{}],["0",{"fg":5,"bold":true}],[";                                                                                                 ",{}]],"10":[["   ",{}],["+",{"fg":2,"bold":true}],["FirstRun2(void) ",{}],["|",{"inverse":true}],[" 16 ",{"fg":3,"bold":true}],["};                                                                                                                                     ",{}]],"11":[["   ",{}],["+",{"fg":2,"bold":true}],["~Last()         ",{}],["|",{"inverse":true}],[" 17 ",{"fg":3,"bold":true}],["                                                                                                                                       ",{}]],"12":[["   ",{}],["+",{"fg":2,"bold":true}],["SecondRun(void) ",{}],["|",{"inverse":true}],[" 18 ",{"fg":3,"bold":true}],["struct",{"fg":2,"bold":true}],[" Last: ",{}],["public",{"fg":3,"bold":true}],[" First,                                                                                                             ",{}]],"13":[["   ",{}],["+",{"fg":2,"bold":true}],["SecondRun2(void)",{}],["|",{"inverse":true}],[" 19 ",{"fg":3,"bold":true}],["    ",{}],["public",{"fg":3,"bold":true}],[" Second                                                                                                                      ",{}]],"14":[["                    ",{}],["|",{"inverse":true}],[" 20 ",{"fg":3,"bold":true}],["{                                                                                                                                      ",{}]],"15":[["▼",{"fg":3,"bold":true}],[" Second",{"fg":5,"bold":true}],[" : ",{}],["struct",{"fg":2,"bold":true}],["   ",{}],["|",{"inverse":true}],[" 21 ",{"fg":3,"bold":true}],["    ",{}],["// 基类First的虚方法",{"fg":6,"bold":true}],["                                                                                                               ",{}]],"16":[["    [prototypes]",{"fg":6,"bold":true}],["    ",{}],["|",{"inverse":true}],[" 22 ",{"fg":3,"bold":true}],["    ",{}],["virtual",{"fg":2,"bold":true}],[" ",{}],["void",{"fg":2,"bold":true}],[" FirstRun(",{}],["void",{"fg":2,"bold":true}],[")                                                                                                        ",{}]],"17":[["   ",{}],["+",{"fg":2,"bold":true}],["SecondRun(void) ",{}],["|",{"inverse":true}],[" 23 ",{"fg":3,"bold":true}],["    {                                                                                                                                  ",{}]],"18":[["   ",{}],["+",{"fg":2,"bold":true}],["SecondRun2(void)",{}],["|",{"inverse":true}],[" 24 ",{"fg":3,"bold":true}],["    ",{}],["|",{"fg":2,"bold":true}],["   cout << ",{}],["\"First\"",{"fg":5,"bold":true}],[" << endl;                                                                                                       ",{}]],"19":[["                    ",{}],["|",{"inverse":true}],[" 25 ",{"fg":3,"bold":true}],["    }                                                                                                                                  ",{}]],"20":[["▼",{"fg":3,"bold":true}],[" ",{}],["functions",{"fg":6,"bold":true}],["         ",{}],["|",{"inverse":true}],[" 26 ",{"fg":3,"bold":true}],["                                                                                                                                       ",{}]],"21":[["    main(int argc, c",{}],["|",{"inverse":true}],[" 27 ",{"fg":3,"bold":true}],["    ",{}],["virtual",{"fg":2,"bold":true}],[" ",{}],["void",{"fg":2,"bold":true}],[" FirstRun2(",{}],["void",{"fg":2,"bold":true}],[")                                                                                                       ",{}]],"22":[["~                   ",{"fg":4,"bold":true}],["|",{"inverse":true}],[" 28 ",{"fg":3,"bold":true}],["    {                                                                                                                                  ",{}]],"23":[["~                   ",{"fg":4,"bold":true}],["|",{"inverse":true}],[" 29 ",{"fg":3,"bold":true}],["    ",{}],["|",{"fg":2,"bold":true}],["   cout << ",{}],["\"First2\"",{"fg":5,"bold":true}],[" << endl;                                                                                                      ",{}]],"24":[["~                   ",{"fg":4,"bold":true}],["|",{"inverse":true}],[" 30 ",{"fg":3,"bold":true}],["    }                                                                                                                                  ",{}]],"25":[["~                   ",{"fg":4,"bold":true}],["|",{"inverse":true}],[" 31 ",{"fg":3,"bold":true}],["                                                                                                                                       ",{}]],"26":[["~                   ",{"fg":4,"bold":true}],["|",{"inverse":true}],[" 32 ",{"fg":3,"bold":true}],["    ",{}],["// 基类Second虚方法",{"fg":6,"bold":true}],["                                                                                                                ",{}]],"27":[["~                   ",{"fg":4,"bold":true}],["|",{"inverse":true}],[" 33 ",{"fg":3,"bold":true}],["    ",{}],["virtual",{"fg":2,"bold":true}],[" ",{}],["void",{"fg":2,"bold":true}],[" SecondRun(",{}],["void",{"fg":2,"bold":true}],[")                                                                                                       ",{}]],"28":[["~                   ",{"fg":4,"bold":true}],["|",{"inverse":true}],[" 34 ",{"fg":3,"bold":true}],["    {                                                                                                                                  ",{}]],"29":[["~                   ",{"fg":4,"bold":true}],["|",{"inverse":true}],[" 35 ",{"fg":3,"bold":true}],["    ",{}],["|",{"fg":2,"bold":true}],["   cout <<",{}],["\"Second\"",{"fg":5,"bold":true}],[" << endl;                                                                                                       ",{}]],"30":[["~                   ",{"fg":4,"bold":true}],["|",{"inverse":true}],[" 36 ",{"fg":3,"bold":true}],["    }                                                                                                                                  ",{}]],"31":[["~                   ",{"fg":4,"bold":true}],["|",{"inverse":true}],[" 37 ",{"fg":3,"bold":true}],["                                                                                                                                       ",{}]],"32":[["~                   ",{"fg":4,"bold":true}],["|",{"inverse":true}],[" 38 ",{"fg":3,"bold":true}],["    ",{}],["virtual",{"fg":2,"bold":true}],[" ",{}],["void",{"fg":2,"bold":true}],[" SecondRun2(",{}],["void",{"fg":2,"bold":true}],[")                                                                                                      ",{}]],"33":[["~                   ",{"fg":4,"bold":true}],["|",{"inverse":true}],[" 39 ",{"fg":3,"bold":true}],["    {                                                                                                                                  ",{}]],"34":[["~                   ",{"fg":4,"bold":true}],["|",{"inverse":true}],[" 40 ",{"fg":3,"bold":true}],["    ",{}],["|",{"fg":2,"bold":true}],["   cout <<",{}],["\"Second2\"",{"fg":5,"bold":true}],[" << endl;                                                                                                      ",{}]],"35":[["~                   ",{"fg":4,"bold":true}],["|",{"inverse":true}],[" 41 ",{"fg":3,"bold":true}],["    }                                                                                                                                  ",{}]],"36":[["~                   ",{"fg":4,"bold":true}],["|",{"inverse":true}],[" 42 ",{"fg":3,"bold":true}],["                                                                                                                                       ",{}]],"37":[["~                   ",{"fg":4,"bold":true}],["|",{"inverse":true}],[" 43 ",{"fg":3,"bold":true}],["    ",{}],["virtual",{"fg":2,"bold":true}],[" ~Last()                                                                                                                    ",{}]],"38":[["~                   ",{"fg":4,"bold":true}],["|",{"inverse":true}],[" 44 ",{"fg":3,"bold":true}],["    {                                                                                                                                  ",{}]],"39":[["~                   ",{"fg":4,"bold":true}],["|",{"inverse":true}],[" 45 ",{"fg":3,"bold":true}],["                                                                                                                                       ",{}]],"40":[["~                   ",{"fg":4,"bold":true}],["|",{"inverse":true}],[" 46 ",{"fg":3,"bold":true}],["    }                                                                                                                                  ",{}]],"41":[["~                   ",{"fg":4,"bold":true}],["|",{"inverse":true}],[" 47 ",{"fg":3,"bold":true}],["                                                                                                                                       ",{}]],"42":[["~                   ",{"fg":4,"bold":true}],["|",{"inverse":true}],[" 48 ",{"fg":3,"bold":true}],["};                                                                                                                                     ",{}]],"43":[["~                   ",{"fg":4,"bold":true}],["|",{"inverse":true}],[" 49 ",{"fg":3,"bold":true}],["                                                                                                                                       ",{}]],"44":[["~                   ",{"fg":4,"bold":true}],["|",{"inverse":true}],[" 50 ",{"fg":3,"bold":true}],["                                                                                                                                       ",{}]],"45":[["~                   ",{"fg":4,"bold":true}],["|",{"inverse":true}],[" 51 ",{"fg":3,"bold":true}],["int",{"fg":2,"bold":true,"underline":true}],[" main(",{"underline":true}],["int",{"fg":2,"bold":true,"underline":true}],[" argc, ",{"underline":true}],["char",{"fg":2,"bold":true,"underline":true}],["* argv[])                                                                                                       ",{"underline":true}]],"46":[["[Name] test.cpp      ",{"bold":true,"inverse":true}],[" ",{"inverse":true}],["test.cpp ",{"bold":true}],["                                                                                                                 71% ",{}],["│ LN  51",{"bold":true}],[":11 ",{}]]},"cursor":{"x":160,"y":46}}],[0.02353,{"lines":{"0":[["\" Press <F1> for hel",{"fg":6,"bold":true}],["|",{"inverse":true}],["  6 ",{"fg":3,"bold":true}],["struct",{"fg":2,"bold":true}],[" First                                                                                                                           ",{}]],"21":[["    ",{"underline":true}],["main",{"fg":0,"bg":3}],["(int argc, c",{"underline":true}],["|",{"inverse":true}],[" 27 ",{"fg":3,"bold":true}],["    ",{}],["virtual",{"fg":2,"bold":true}],[" ",{}],["void",{"fg":2,"bold":true}],[" FirstRun2(",{}],["void",{"fg":2,"bold":true}],[")                                                                                                       ",{}]]},"cursor":{"x":20,"y":21}}],[0.059269,{"lines":{"0":[["\" Press <F1> for hel",{"fg":6,"bold":true}],["|",{"inverse":true}],["  ",{"fg":6,"bg":0,"bold":true}],["  6 ",{"fg":3,"bold":true}],["struct",{"fg":2,"bold":true}],[" First                                                                                                                         ",{}]],"1":[["                    ",{}],["|",{"inverse":true}],["  ",{"fg":6,"bg":0,"bold":true}],["  7 ",{"fg":3,"bold":true}],["{                                                                                                                                    ",{}]],"2":[["▼",{"fg":3,"bold":true}],[" First",{"fg":5,"bold":true}],[" : ",{}],["struct",{"fg":2,"bold":true}],["    ",{}],["|",{"inverse":true}],["  ",{"fg":6,"bg":0,"bold":true}],["  8 ",{"fg":3,"bold":true}],["    ",{}],["virtual",{"fg":2,"bold":true}],[" ",{}],["void",{"fg":2,"bold":true}],[" FirstRun(",{}],["void",{"fg":2,"bold":true}],[") = ",{}],["0",{"fg":5,"bold":true}],[";                                                                                                 ",{}]],"3":[["    [prototypes]",{"fg":6,"bold":true}],["    ",{}],["|",{"inverse":true}],["  ",{"fg":6,"bg":0,"bold":true}],["  9 ",{"fg":3,"bold":true}],["    ",{}],["virtual",{"fg":2,"bold":true}],[" ",{}],["void",{"fg":2,"bold":true}],[" FirstRun2(",{}],["void",{"fg":2,"bold":true}],[") = ",{}],["0",{"fg":5,"bold":true}],[";                                                                                                ",{}]],"4":[["   ",{}],["+",{"fg":2,"bold":true}],["FirstRun(void)  ",{}],["|",{"inverse":true}],["  ",{"fg":6,"bg":0,"bold":true}],[" 10 ",{"fg":3,"bold":true}],["};                                                                                                                                   ",{}]],"5":[["   ",{}],["+",{"fg":2,"bold":true}],["FirstRun2(void) ",{}],["|",{"inverse":true}],["  ",{"fg":6,"bg":0,"bold":true}],[" 11 ",{"fg":3,"bold":true}],["                                                                                                                                     ",{}]],"6":[["                    ",{}],["|",{"inverse":true}],["  ",{"fg":6,"bg":0,"bold":true}],[" 12 ",{"fg":3,"bold":true}],["struct",{"fg":2,"bold":true}],[" Second                                                                                                                        ",{}]],"7":[["▼",{"fg":3,"bold":true}],[" Last",{"fg":5,"bold":true}],[" : ",{}],["struct",{"fg":2,"bold":true}],["     ",{}],["|",{"inverse":true}],["  ",{"fg":6,"bg":0,"bold":true}],[" 13 ",{"fg":3,"bold":true}],["{                                                                                                                                    ",{}]],"8":[["    [functions]",{"fg":6,"bold":true}],["     ",{}],["|",{"inverse":true}],["  ",{"fg":6,"bg":0,"bold":true}],[" 14 ",{"fg":3,"bold":true}],["    ",{}],["virtual",{"fg":2,"bold":true}],[" ",{}],["void",{"fg":2,"bold":true}],[" SecondRun(",{}],["void",{"fg":2,"bold":true}],[") = ",{}],["0",{"fg":5,"bold":true}],[";                                                                                                ",{}]],"9":[["   ",{}],["+",{"fg":2,"bold":true}],["FirstRun(void)  ",{}],["|",{"inverse":true}],["  ",{"fg":6,"bg":0,"bold":true}],[" 15 ",{"fg":3,"bold":true}],["    ",{}],["virtual",{"fg":2,"bold":true}],[" ",{}],["void",{"fg":2,"bold":true}],[" SecondRun2(",{}],["void",{"fg":2,"bold":true}],[") = ",{}],["0",{"fg":5,"bold":true}],[";                                                                                               ",{}]],"10":[["   ",{}],["+",{"fg":2,"bold":true}],["FirstRun2(void) ",{}],["|",{"inverse":true}],["  ",{"fg":6,"bg":0,"bold":true}],[" 16 ",{"fg":3,"bold":true}],["};                                                                                                                                   ",{}]],"11":[["   ",{}],["+",{"fg":2,"bold":true}],["~Last()         ",{}],["|",{"inverse":true}],["  ",{"fg":6,"bg":0,"bold":true}],[" 17 ",{"fg":3,"bold":true}],["                                                                                                                                     ",{}]],"12":[["   ",{}],["+",{"fg":2,"bold":true}],["SecondRun(void) ",{}],["|",{"inverse":true}],["  ",{"fg":6,"bg":0,"bold":true}],[" 18 ",{"fg":3,"bold":true}],["struct",{"fg":2,"bold":true}],[" Last: ",{}],["blic",{"fg":3,"bold":true}],[" First,                                                                                                             ",{}]]},"cursor":{"x":40,"y":12}}],[0.000327,{"lines":{"12":[["   ",{}],["+",{"fg":2,"bold":true}],["SecondRun(void) ",{}],["|",{"inverse":true}],["  ",{"fg":6,"bg":0,"bold":true}],[" 18 ",{"fg":3,"bold":true}],["struct",{"fg":2,"bold":true}],[" Last: ",{}],["public",{"fg":3,"bold":true}],[" First,                                                                                                           ",{}]],"13":[["   ",{}],["+",{"fg":2,"bold":true}],["SecondRun2(void)",{}],["|",{"inverse":true}],["  ",{"fg":6,"bg":0,"bold":true}],[" 19 ",{"fg":3,"bold":true}],["    ",{}],["public",{"fg":3,"bold":true}],[" Second                                                                                                                    ",{}]],"14":[["                    ",{}],["|",{"inverse":true}],["  ",{"fg":6,"bg":0,"bold":true}],[" 20 ",{"fg":3,"bold":true}],["{                                                                                                                                    ",{}]],"15":[["▼",{"fg":3,"bold":true}],[" Second",{"fg":5,"bold":true}],[" : ",{}],["struct",{"fg":2,"bold":true}],["   ",{}],["|",{"inverse":true}],["  ",{"fg":6,"bg":0,"bold":true}],[" 21 ",{"fg":3,"bold":true}],["    ",{}],["// 基类First的虚方法",{"fg":6,"bold":true}],["                                                                                                             ",{}]],"16":[["    [prototypes]",{"fg":6,"bold":true}],["    ",{}],["|",{"inverse":true}],["  ",{"fg":6,"bg":0,"bold":true}],[" 22 ",{"fg":3,"bold":true}],["    ",{}],["virtual",{"fg":2,"bold":true}],[" ",{}],["void",{"fg":2,"bold":true}],[" FirstRun(",{}],["void",{"fg":2,"bold":true}],[")                                                                                                      ",{}]],"17":[["   ",{}],["+",{"fg":2,"bold":true}],["SecondRun(void) ",{}],["|",{"inverse":true}],["  ",{"fg":6,"bg":0,"bold":true}],[" 23 ",{"fg":3,"bold":true}],["    {                                                                                                                                ",{}]],"18":[["   ",{}],["+",{"fg":2,"bold":true}],["SecondRun2(void)",{}],["|",{"inverse":true}],["  ",{"fg":6,"bg":0,"bold":true}],[" 24 ",{"fg":3,"bold":true}],["    ",{}],["|",{"fg":2,"bold":true}],["   cout << ",{}],["\"First\"",{"fg":5,"bold":true}],[" << endl;                                                                                                     ",{}]],"19":[["                    ",{}],["|",{"inverse":true}],["  ",{"fg":6,"bg":0,"bold":true}],[" 25 ",{"fg":3,"bold":true}],["    }                                                                                                                                ",{}]],"20":[["▼",{"fg":3,"bold":true}],[" ",{}],["functions",{"fg":6,"bold":true}],["         ",{}],["|",{"inverse":true}],["  ",{"fg":6,"bg":0,"bold":true}],[" 26 ",{"fg":3,"bold":true}],["                                                                                                                                     ",{}]],"21":[["    ",{"underline":true}],["main",{"fg":0,"bg":3}],["(int argc, c",{"underline":true}],["|",{"inverse":true}],["  ",{"fg":6,"bg":0,"bold":true}],[" 27 ",{"fg":3,"bold":true}],["    ",{}],["virtual",{"fg":2,"bold":true}],[" ",{}],["void",{"fg":2,"bold":true}],[" FirstRun2(",{}],["void",{"fg":2,"bold":true}],[")                                                                                                     ",{}]],"22":[["~                   ",{"fg":4,"bold":true}],["|",{"inverse":true}],["  ",{"fg":6,"bg":0,"bold":true}],[" 28 ",{"fg":3,"bold":true}],["    {                                                                                                                                ",{}]],"23":[["~                   ",{"fg":4,"bold":true}],["|",{"inverse":true}],["  ",{"fg":6,"bg":0,"bold":true}],[" 29 ",{"fg":3,"bold":true}],["    ",{}],["|",{"fg":2,"bold":true}],["   cout << ",{}],["\"First2\"",{"fg":5,"bold":true}],[" << endl;                                                                                                    ",{}]],"24":[["~                   ",{"fg":4,"bold":true}],["|",{"inverse":true}],["  ",{"fg":6,"bg":0,"bold":true}],[" 30 ",{"fg":3,"bold":true}],["    }                                                                                                                                ",{}]],"25":[["~                   ",{"fg":4,"bold":true}],["|",{"inverse":true}],["  ",{"fg":6,"bg":0,"bold":true}],[" 31 ",{"fg":3,"bold":true}],["                                                                                                                                     ",{}]],"26":[["~                   ",{"fg":4,"bold":true}],["|",{"inverse":true}],["  ",{"fg":6,"bg":0,"bold":true}],[" 32 ",{"fg":3,"bold":true}],["    ",{}],[" 基类Second虚方法",{"fg":6,"bold":true}],["                                                                                                                ",{}]]},"cursor":{"x":31,"y":26}}],[0.026139,{"lines":{"26":[["~                   ",{"fg":4,"bold":true}],["|",{"inverse":true}],["  ",{"fg":6,"bg":0,"bold":true}],[" 32 ",{"fg":3,"bold":true}],["    ",{}],["// 基类Second虚方法",{"fg":6,"bold":true}],["                                                                                                              ",{}]],"27":[["~                   ",{"fg":4,"bold":true}],["|",{"inverse":true}],["  ",{"fg":6,"bg":0,"bold":true}],[" 33 ",{"fg":3,"bold":true}],["    ",{}],["virtual",{"fg":2,"bold":true}],[" ",{}],["void",{"fg":2,"bold":true}],[" SecondRun(",{}],["void",{"fg":2,"bold":true}],[")                                                                                                     ",{}]],"28":[["~                   ",{"fg":4,"bold":true}],["|",{"inverse":true}],["  ",{"fg":6,"bg":0,"bold":true}],[" 34 ",{"fg":3,"bold":true}],["    {                                                                                                                                ",{}]],"29":[["~                   ",{"fg":4,"bold":true}],["|",{"inverse":true}],["  ",{"fg":6,"bg":0,"bold":true}],[" 35 ",{"fg":3,"bold":true}],["    ",{}],["|",{"fg":2,"bold":true}],["   cout <<",{}],["\"Second\"",{"fg":5,"bold":true}],[" << endl;                                                                                                     ",{}]],"30":[["~                   ",{"fg":4,"bold":true}],["|",{"inverse":true}],["  ",{"fg":6,"bg":0,"bold":true}],[" 36 ",{"fg":3,"bold":true}],["    }                                                                                                                                ",{}]],"31":[["~                   ",{"fg":4,"bold":true}],["|",{"inverse":true}],["  ",{"fg":6,"bg":0,"bold":true}],[" 37 ",{"fg":3,"bold":true}],["                                                                                                                                     ",{}]],"32":[["~                   ",{"fg":4,"bold":true}],["|",{"inverse":true}],["  ",{"fg":6,"bg":0,"bold":true}],[" 38 ",{"fg":3,"bold":true}],["    ",{}],["virtual",{"fg":2,"bold":true}],[" ",{}],["void",{"fg":2,"bold":true}],[" SecondRun2(",{}],["void",{"fg":2,"bold":true}],[")                                                                                                    ",{}]],"33":[["~                   ",{"fg":4,"bold":true}],["|",{"inverse":true}],["  ",{"fg":6,"bg":0,"bold":true}],[" 39 ",{"fg":3,"bold":true}],["    {                                                                                                                                ",{}]],"34":[["~                   ",{"fg":4,"bold":true}],["|",{"inverse":true}],["  ",{"fg":6,"bg":0,"bold":true}],[" 40 ",{"fg":3,"bold":true}],["    ",{}],["|",{"fg":2,"bold":true}],["   cout <<",{}],["\"Second2\"",{"fg":5,"bold":true}],[" << endl;                                                                                                    ",{}]],"35":[["~                   ",{"fg":4,"bold":true}],["|",{"inverse":true}],["  ",{"fg":6,"bg":0,"bold":true}],[" 41 ",{"fg":3,"bold":true}],["    }                                                                                                                                ",{}]],"36":[["~                   ",{"fg":4,"bold":true}],["|",{"inverse":true}],["  ",{"fg":6,"bg":0,"bold":true}],[" 42 ",{"fg":3,"bold":true}],["                                                                                                                                     ",{}]],"37":[["~                   ",{"fg":4,"bold":true}],["|",{"inverse":true}],["  ",{"fg":6,"bg":0,"bold":true}],[" 43 ",{"fg":3,"bold":true}],["    ",{}],["virtual",{"fg":2,"bold":true}],[" ~Last()                                                                                                                  ",{}]],"38":[["~                   ",{"fg":4,"bold":true}],["|",{"inverse":true}],["  ",{"fg":6,"bg":0,"bold":true}],[" 44 ",{"fg":3,"bold":true}],["    {                                                                                                                                ",{}]],"39":[["~                   ",{"fg":4,"bold":true}],["|",{"inverse":true}],["  ",{"fg":6,"bg":0,"bold":true}],[" 45 ",{"fg":3,"bold":true}],["                                                                                                                                     ",{}]],"40":[["~                   ",{"fg":4,"bold":true}],["|",{"inverse":true}],["  ",{"fg":6,"bg":0,"bold":true}],[" 46 ",{"fg":3,"bold":true}],["    }                                                                                                                                ",{}]],"41":[["~                   ",{"fg":4,"bold":true}],["|",{"inverse":true}],["  ",{"fg":6,"bg":0,"bold":true}],["7 ",{"fg":3,"bold":true}],["                                                                                                                                       ",{}]]},"cursor":{"x":23,"y":41}}],[0.000223,{"lines":{"41":[["~                   ",{"fg":4,"bold":true}],["|",{"inverse":true}],["  ",{"fg":6,"bg":0,"bold":true}],[" 47 ",{"fg":3,"bold":true}],["                                                                                                                                     ",{}]],"42":[["~                   ",{"fg":4,"bold":true}],["|",{"inverse":true}],["  ",{"fg":6,"bg":0,"bold":true}],[" 48 ",{"fg":3,"bold":true}],["};                                                                                                                                   ",{}]],"43":[["~                   ",{"fg":4,"bold":true}],["|",{"inverse":true}],["  ",{"fg":6,"bg":0,"bold":true}],[" 49 ",{"fg":3,"bold":true}],["                                                                                                                                     ",{}]],"44":[["~                   ",{"fg":4,"bold":true}],["|",{"inverse":true}],["  ",{"fg":6,"bg":0,"bold":true}],[" 50 ",{"fg":3,"bold":true}],["                                                                                                                                     ",{}]],"45":[["~                   ",{"fg":4,"bold":true}],["|",{"inverse":true}],[">>",{"fg":7,"bg":1,"bold":true}],[" 51 ",{"fg":3,"bold":true}],["int",{"fg":2,"bold":true,"underline":true}],[" main(",{"underline":true}],["int",{"fg":2,"bold":true,"underline":true}],[" ",{"underline":true}],["argc",{"bg":1}],[", ",{"underline":true}],["char",{"fg":2,"bold":true,"underline":true}],["* ",{"underline":true}],["argv",{"bg":1}],["[])                                                                                                     ",{"underline":true}]],"46":[["[Name] test.cpp      ",{"inverse":true}],[" NORMAL ",{"bold":true}],[" ",{}],["test.cpp ",{"bold":true}],[" main()                                                                             unix │ utf-8 │ cpp │  71% ",{}],[" LN  51",{"bold":true}],[":11 ",{}]]},"cursor":{"x":37,"y":45,"visible":true}}],[1.124102,{"lines":{"47":[["\"test.cpp\" 71L, 1060C                                                                                                                                ,          ",{}]]}}],[0.218242,{"lines":{"47":[["\"test.cpp\" 71L, 1060C                                                                                                                                ,n         ",{}]]}}],[0.088894,{"lines":{"47":[[":NERDTreeToggle                                                                                                                                                 ",{}]]},"cursor":{"x":0,"y":47,"visible":false}}],[0.121139,{"lines":{"0":[["\" Press <F1> for hel",{"fg":6,"bold":true}],["|",{"inverse":true}],["  ",{"fg":6,"bg":0,"bold":true}],["  6 ",{"fg":3,"bold":true}],["struct",{"fg":2,"bold":true}],[" First                                                                                                  ",{}],["|",{"inverse":true}],["  1 ",{"fg":3,"bold":true}],["\" Press ? for help",{"fg":5,"bold":true}]],"1":[["                    ",{}],["|",{"inverse":true}],["  ",{"fg":6,"bg":0,"bold":true}],["  7 ",{"fg":3,"bold":true}],["{                                                                                                             ",{}],["|",{"inverse":true}],["  2 ",{"fg":3,"bold":true}],["                  ",{}]],"2":[["▼",{"fg":3,"bold":true}],[" First",{"fg":5,"bold":true}],[" : ",{}],["struct",{"fg":2,"bold":true}],["    ",{}],["|",{"inverse":true}],["  ",{"fg":6,"bg":0,"bold":true}],["  8 ",{"fg":3,"bold":true}],["    ",{}],["virtual",{"fg":2,"bold":true}],[" ",{}],["void",{"fg":2,"bold":true}],[" FirstRun(",{}],["void",{"fg":2,"bold":true}],[") = ",{}],["0",{"fg":5,"bold":true}],[";                                                                          ",{}],["|",{"inverse":true}],["  3 ",{"fg":3,"bold":true}],[".. (up a dir)",{"fg":6,"bold":true}],["     ",{}]],"3":[["    [prototypes]",{"fg":6,"bold":true}],["    ",{}],["|",{"inverse":true}],["  ",{"fg":6,"bg":0,"bold":true}],["  9 ",{"fg":3,"bold":true}],["    ",{}],["virtual",{"fg":2,"bold":true}],[" ",{}],["void",{"fg":2,"bold":true}],[" FirstRun2(",{}],["void",{"fg":2,"bold":true}],[") = ",{}],["0",{"fg":5,"bold":true}],[";                                                                         ",{}],["|",{"inverse":true}],["  4 ",{"fg":3,"bold":true}],["/root/",{"fg":3,"bold":true,"underline":true}],["            ",{"underline":true}]],"4":[["   ",{}],["+",{"fg":2,"bold":true}],["FirstRun(void)  ",{}],["|",{"inverse":true}],["  ",{"fg":6,"bg":0,"bold":true}],[" 10 ",{"fg":3,"bold":true}],["};                                                                                                            ",{}],["|",{"inverse":true}],["  5 ",{"fg":3,"bold":true}],["▸ diary/",{"fg":6,"bold":true}],["          ",{}]],"5":[["   ",{}],["+",{"fg":2,"bold":true}],["FirstRun2(void) ",{}],["|",{"inverse":true}],["  ",{"fg":6,"bg":0,"bold":true}],[" 11 ",{"fg":3,"bold":true}],["                                                                                                              ",{}],["|",{"inverse":true}],["  6 ",{"fg":3,"bold":true}],["▸ temp/",{"fg":6,"bold":true}],["           ",{}]],"6":[["                    ",{}],["|",{"inverse":true}],["  ",{"fg":6,"bg":0,"bold":true}],[" 12 ",{"fg":3,"bold":true}],["struct",{"fg":2,"bold":true}],[" Second                                                                                                 ",{}],["|",{"inverse":true}],["  7 ",{"fg":3,"bold":true}],["  anaconda-ks.cfg ",{}]],"7":[["▼",{"fg":3,"bold":true}],[" Last",{"fg":5,"bold":true}],[" : ",{}],["struct",{"fg":2,"bold":true}],["     ",{}],["|",{"inverse":true}],["  ",{"fg":6,"bg":0,"bold":true}],[" 13 ",{"fg":3,"bold":true}],["{                                                                                                             ",{}],["|",{"inverse":true}],["  8 ",{"fg":3,"bold":true}],["  initial-setup-ks",{}]],"8":[["    [functions]",{"fg":6,"bold":true}],["     ",{}],["|",{"inverse":true}],["  ",{"fg":6,"bg":0,"bold":true}],[" 14 ",{"fg":3,"bold":true}],["    ",{}],["virtual",{"fg":2,"bold":true}],[" ",{}],["void",{"fg":2,"bold":true}],[" SecondRun(",{}],["void",{"fg":2,"bold":true}],[") = ",{}],["0",{"fg":5,"bold":true}],[";                                                                         ",{}],["|",{"inverse":true}],["  9 ",{"fg":3,"bold":true}],["                  ",{}]],"9":[["   ",{}],["+",{"fg":2,"bold":true}],["FirstRun(void)  ",{}],["|",{"inverse":true}],["  ",{"fg":6,"bg":0,"bold":true}],[" 15 ",{"fg":3,"bold":true}],["    ",{}],["virtual",{"fg":2,"bold":true}],[" ",{}],["void",{"fg":2,"bold":true}],[" SecondRun2(",{}],["void",{"fg":2,"bold":true}],[") = ",{}],["0",{"fg":5,"bold":true}],[";                                                                        ",{}],["|",{"inverse":true}],["                      ",{}]],"10":[["   ",{}],["+",{"fg":2,"bold":true}],["FirstRun2(void) ",{}],["|",{"inverse":true}],["  ",{"fg":6,"bg":0,"bold":true}],[" 16 ",{"fg":3,"bold":true}],["};                                                                                                            ",{}],["|",{"inverse":true}],["                      ",{}]],"11":[["   ",{}],["+",{"fg":2,"bold":true}],["~Last()         ",{}],["|",{"inverse":true}],["  ",{"fg":6,"bg":0,"bold":true}],[" 17 ",{"fg":3,"bold":true}],["                                                                                                              ",{}],["|",{"inverse":true}],["                      ",{}]],"12":[["   ",{}],["+",{"fg":2,"bold":true}],["SecondRun(void) ",{}],["|",{"inverse":true}],["  ",{"fg":6,"bg":0,"bold":true}],[" 18 ",{"fg":3,"bold":true}],["struct",{"fg":2,"bold":true}],[" Last: ",{}],["public",{"fg":3,"bold":true}],[" First,                                                                                    ",{}],["|",{"inverse":true}],["                      ",{}]],"13":[["   ",{}],["+",{"fg":2,"bold":true}],["SecondRun2(void)",{}],["|",{"inverse":true}],["  ",{"fg":6,"bg":0,"bold":true}],[" 19 ",{"fg":3,"bold":true}],["    ",{}],["public",{"fg":3,"bold":true}],[" Second                                                                                             ",{}],["|",{"inverse":true}],["                      ",{}]],"14":[["                    ",{}],["|",{"inverse":true}],["  ",{"fg":6,"bg":0,"bold":true}],[" 20 ",{"fg":3,"bold":true}],["{                                                                                                             ",{}],["|",{"inverse":true}],["                      ",{}]],"15":[["▼",{"fg":3,"bold":true}],[" Second",{"fg":5,"bold":true}],[" : ",{}],["struct",{"fg":2,"bold":true}],["   ",{}],["|",{"inverse":true}],["  ",{"fg":6,"bg":0,"bold":true}],[" 21 ",{"fg":3,"bold":true}],["    ",{}],["// 基类First的虚方法",{"fg":6,"bold":true}],["                                                                                      ",{}],["|",{"inverse":true}],["                      ",{}]],"16":[["    [prototypes]",{"fg":6,"bold":true}],["    ",{}],["|",{"inverse":true}],["  ",{"fg":6,"bg":0,"bold":true}],[" 22 ",{"fg":3,"bold":true}],["    ",{}],["virtual",{"fg":2,"bold":true}],[" ",{}],["void",{"fg":2,"bold":true}],[" FirstRun(",{}],["void",{"fg":2,"bold":true}],[")                                                                               ",{}],["|",{"inverse":true}],["                      ",{}]],"17":[["   ",{}],["+",{"fg":2,"bold":true}],["SecondRun(void) ",{}],["|",{"inverse":true}],["  ",{"fg":6,"bg":0,"bold":true}],[" 23 ",{"fg":3,"bold":true}],["    {                                                                                                         ",{}],["|",{"inverse":true}],["                      ",{}]],"18":[["   ",{}],["+",{"fg":2,"bold":true}],["SecondRun2(void)",{}],["|",{"inverse":true}],["  ",{"fg":6,"bg":0,"bold":true}],[" 24 ",{"fg":3,"bold":true}],["    ",{}],["|",{"fg":2,"bold":true}],["   cout << ",{}],["\"First\"",{"fg":5,"bold":true}],[" << endl;                                                                              ",{}],["|",{"inverse":true}],["                      ",{}]],"19":[["                    ",{}],["|",{"inverse":true}],["  ",{"fg":6,"bg":0,"bold":true}],[" 25 ",{"fg":3,"bold":true}],["    }                                                                                                         ",{}],["|",{"inverse":true}],["                      ",{}]],"20":[["▼",{"fg":3,"bold":true}],[" ",{}],["functions",{"fg":6,"bold":true}],["         ",{}],["|",{"inverse":true}],["  ",{"fg":6,"bg":0,"bold":true}],[" 26 ",{"fg":3,"bold":true}],["                                                                                                              ",{}],["|",{"inverse":true}],["                      ",{}]],"21":[["    ",{"underline":true}],["main",{"fg":0,"bg":3}],["(int argc, c",{"underline":true}],["|",{"inverse":true}],["  ",{"fg":6,"bg":0,"bold":true}],[" 27 ",{"fg":3,"bold":true}],["    ",{}],["virtual",{"fg":2,"bold":true}],[" ",{}],["void",{"fg":2,"bold":true}],[" FirstRun2(",{}],["void",{"fg":2,"bold":true}],[")                                                                              ",{}],["|",{"inverse":true}],["                      ",{}]],"22":[["~                   ",{"fg":4,"bold":true}],["|",{"inverse":true}],["  ",{"fg":6,"bg":0,"bold":true}],[" 28 ",{"fg":3,"bold":true}],["    {                                                                                                         ",{}],["|",{"inverse":true}],["                      ",{}]],"23":[["~                   ",{"fg":4,"bold":true}],["|",{"inverse":true}],["  ",{"fg":6,"bg":0,"bold":true}],[" 29 ",{"fg":3,"bold":true}],["    ",{}],["|",{"fg":2,"bold":true}],["   cout << ",{}],["\"First2\"",{"fg":5,"bold":true}],[" << endl;                                                                             ",{}],["|",{"inverse":true}],["                      ",{}]],"24":[["~                   ",{"fg":4,"bold":true}],["|",{"inverse":true}],["  ",{"fg":6,"bg":0,"bold":true}],[" 30 ",{"fg":3,"bold":true}],["    }                                                                                                         ",{}],["|",{"inverse":true}],["                      ",{}]],"25":[["~                   ",{"fg":4,"bold":true}],["|",{"inverse":true}],["  ",{"fg":6,"bg":0,"bold":true}],[" 31 ",{"fg":3,"bold":true}],["                                                                                                              ",{}],["|",{"inverse":true}],["                      ",{}]],"26":[["~                   ",{"fg":4,"bold":true}],["|",{"inverse":true}],["  ",{"fg":6,"bg":0,"bold":true}],[" 32 ",{"fg":3,"bold":true}],["    ",{}],["// 基类Second虚方法",{"fg":6,"bold":true}],["                                                                                       ",{}],["|",{"inverse":true}],["                      ",{}]],"27":[["~                   ",{"fg":4,"bold":true}],["|",{"inverse":true}],["  ",{"fg":6,"bg":0,"bold":true}],[" 33 ",{"fg":3,"bold":true}],["    ",{}],["virtual",{"fg":2,"bold":true}],[" ",{}],["void",{"fg":2,"bold":true}],[" SecondRun(",{}],["void",{"fg":2,"bold":true}],[")                                                                              ",{}],["|",{"inverse":true}],["                      ",{}]],"28":[["~                   ",{"fg":4,"bold":true}],["|",{"inverse":true}],["  ",{"fg":6,"bg":0,"bold":true}],[" 34 ",{"fg":3,"bold":true}],["    {                                                                                                         ",{}],["|",{"inverse":true}],["                      ",{}]],"29":[["~                   ",{"fg":4,"bold":true}],["|",{"inverse":true}],["  ",{"fg":6,"bg":0,"bold":true}],[" 35 ",{"fg":3,"bold":true}],["    ",{}],["|",{"fg":2,"bold":true}],["   cout <<",{}],["\"Second\"",{"fg":5,"bold":true}],[" << endl;                                                                              ",{}],["|",{"inverse":true}],["                      ",{}]],"30":[["~                   ",{"fg":4,"bold":true}],["|",{"inverse":true}],["  ",{"fg":6,"bg":0,"bold":true}],[" 36 ",{"fg":3,"bold":true}],["    }                                                                                                         ",{}],["|",{"inverse":true}],["                      ",{}]],"31":[["~                   ",{"fg":4,"bold":true}],["|",{"inverse":true}],["  ",{"fg":6,"bg":0,"bold":true}],[" 37 ",{"fg":3,"bold":true}],["                                                                                                              ",{}],["|",{"inverse":true}],["                      ",{}]],"32":[["~                   ",{"fg":4,"bold":true}],["|",{"inverse":true}],["  ",{"fg":6,"bg":0,"bold":true}],[" 38 ",{"fg":3,"bold":true}],["    ",{}],["virtual",{"fg":2,"bold":true}],[" ",{}],["void",{"fg":2,"bold":true}],[" SecondRun2(",{}],["void",{"fg":2,"bold":true}],[")                                                                             ",{}],["|",{"inverse":true}],["                      ",{}]],"33":[["~                   ",{"fg":4,"bold":true}],["|",{"inverse":true}],["  ",{"fg":6,"bg":0,"bold":true}],[" 39 ",{"fg":3,"bold":true}],["    {                                                                                                         ",{}],["|",{"inverse":true}],["                      ",{}]],"34":[["~                   ",{"fg":4,"bold":true}],["|",{"inverse":true}],["  ",{"fg":6,"bg":0,"bold":true}],[" 40 ",{"fg":3,"bold":true}],["    ",{}],["|",{"fg":2,"bold":true}],["   cout <<",{}],["\"Second2\"",{"fg":5,"bold":true}],[" << endl;                                                                             ",{}],["|",{"inverse":true}],["                      ",{}]],"35":[["~                   ",{"fg":4,"bold":true}],["|",{"inverse":true}],["  ",{"fg":6,"bg":0,"bold":true}],[" 41 ",{"fg":3,"bold":true}],["    }                                                                                                         ",{}],["|",{"inverse":true}],["                      ",{}]],"36":[["~                   ",{"fg":4,"bold":true}],["|",{"inverse":true}],["  ",{"fg":6,"bg":0,"bold":true}],[" 42 ",{"fg":3,"bold":true}],["                                                                                                              ",{}],["|",{"inverse":true}],["                      ",{}]],"37":[["~                   ",{"fg":4,"bold":true}],["|",{"inverse":true}],["  ",{"fg":6,"bg":0,"bold":true}],[" 43 ",{"fg":3,"bold":true}],["    ",{}],["virtual",{"fg":2,"bold":true}],[" ~Last()                                                                                           ",{}],["|",{"inverse":true}],["                      ",{}]],"38":[["~                   ",{"fg":4,"bold":true}],["|",{"inverse":true}],["  ",{"fg":6,"bg":0,"bold":true}],[" 44 ",{"fg":3,"bold":true}],["    {                                                                                                         ",{}],["|",{"inverse":true}],["                      ",{}]],"39":[["~                   ",{"fg":4,"bold":true}],["|",{"inverse":true}],["  ",{"fg":6,"bg":0,"bold":true}],[" 45 ",{"fg":3,"bold":true}],["                                                                                                              ",{}],["|",{"inverse":true}],["                      ",{}]],"40":[["~                   ",{"fg":4,"bold":true}],["|",{"inverse":true}],["  ",{"fg":6,"bg":0,"bold":true}],[" 46 ",{"fg":3,"bold":true}],["    }                                                                                                         ",{}],["|",{"inverse":true}],["                      ",{}]],"41":[["~                   ",{"fg":4,"bold":true}],["|",{"inverse":true}],["  ",{"fg":6,"bg":0,"bold":true}],[" 47 ",{"fg":3,"bold":true}],["                                                                                                              ",{}],["|",{"inverse":true}],["                      ",{}]],"42":[["~                   ",{"fg":4,"bold":true}],["|",{"inverse":true}],["  ",{"fg":6,"bg":0,"bold":true}],[" 48 ",{"fg":3,"bold":true}],["};                                                                                                            ",{}],["|",{"inverse":true}],["                      ",{}]],"43":[["~                   ",{"fg":4,"bold":true}],["|",{"inverse":true}],["  ",{"fg":6,"bg":0,"bold":true}],[" 49 ",{"fg":3,"bold":true}],["                                                                                                              ",{}],["|",{"inverse":true}],["                      ",{}]],"44":[["~                   ",{"fg":4,"bold":true}],["|",{"inverse":true}],["  ",{"fg":6,"bg":0,"bold":true}],[" 50 ",{"fg":3,"bold":true}],["                                                                                                              ",{}],["|",{"inverse":true}],["                      ",{}]],"45":[["~                   ",{"fg":4,"bold":true}],["|",{"inverse":true}],[">>",{"fg":7,"bg":1,"bold":true}],[" 51 ",{"fg":3,"bold":true}],["int",{"fg":2,"bold":true,"underline":true}],[" main(",{"underline":true}],["int",{"fg":2,"bold":true,"underline":true}],[" ",{"underline":true}],["argc",{"bg":1}],[", ",{"underline":true}],["char",{"fg":2,"bold":true,"underline":true}],["* ",{"underline":true}],["argv",{"bg":1}],["[])                                                                              ",{"underline":true}],["|",{"inverse":true}],["                      ",{"underline":true}]],"46":[["[Name] test.cpp       ",{"inverse":true}],["test.cpp ",{"bold":true}],["                                                                                          71% ",{}],["│ LN  51",{"bold":true}],[":11 ",{}],[" ",{"inverse":true}],["cpp │  71% ",{}],[" LN  51",{"bold":true}],[":11 ",{}]]},"cursor":{"x":143,"y":8}}],[0.001165,{"lines":{"8":[["    [functions]",{"fg":6,"bold":true}],["     ",{}],["|",{"inverse":true}],["  ",{"fg":6,"bg":0,"bold":true}],[" 14 ",{"fg":3,"bold":true}],["    ",{}],["virtual",{"fg":2,"bold":true}],[" ",{}],["void",{"fg":2,"bold":true}],[" SecondRun(",{}],["void",{"fg":2,"bold":true}],[") = ",{}],["0",{"fg":5,"bold":true}],[";                                                                         ",{}],["|",{"inverse":true}],["  9 ",{"fg":3,"bold":true}],["  test.c          ",{}]],"9":[["   ",{}],["+",{"fg":2,"bold":true}],["FirstRun(void)  ",{}],["|",{"inverse":true}],["  ",{"fg":6,"bg":0,"bold":true}],[" 15 ",{"fg":3,"bold":true}],["    ",{}],["virtual",{"fg":2,"bold":true}],[" ",{}],["void",{"fg":2,"bold":true}],[" SecondRun2(",{}],["void",{"fg":2,"bold":true}],[") = ",{}],["0",{"fg":5,"bold":true}],[";                                                                        ",{}],["|",{"inverse":true}],[" 10 ",{"fg":3,"bold":true}],["  test.cpp        ",{}]],"10":[["   ",{}],["+",{"fg":2,"bold":true}],["FirstRun2(void) ",{}],["|",{"inverse":true}],["  ",{"fg":6,"bg":0,"bold":true}],[" 16 ",{"fg":3,"bold":true}],["};                                                                                                            ",{}],["|",{"inverse":true}],["~                     ",{"fg":4,"bold":true}]],"11":[["   ",{}],["+",{"fg":2,"bold":true}],["~Last()         ",{}],["|",{"inverse":true}],["  ",{"fg":6,"bg":0,"bold":true}],[" 17 ",{"fg":3,"bold":true}],["                                                                                                              ",{}],["|",{"inverse":true}],["~                     ",{"fg":4,"bold":true}]],"12":[["   ",{}],["+",{"fg":2,"bold":true}],["SecondRun(void) ",{}],["|",{"inverse":true}],["  ",{"fg":6,"bg":0,"bold":true}],[" 18 ",{"fg":3,"bold":true}],["struct",{"fg":2,"bold":true}],[" Last: ",{}],["public",{"fg":3,"bold":true}],[" First,                                                                                    ",{}],["|",{"inverse":true}],["~                     ",{"fg":4,"bold":true}]],"13":[["   ",{}],["+",{"fg":2,"bold":true}],["SecondRun2(void)",{}],["|",{"inverse":true}],["  ",{"fg":6,"bg":0,"bold":true}],[" 19 ",{"fg":3,"bold":true}],["    ",{}],["public",{"fg":3,"bold":true}],[" Second                                                                                             ",{}],["|",{"inverse":true}],["~                     ",{"fg":4,"bold":true}]],"14":[["                    ",{}],["|",{"inverse":true}],["  ",{"fg":6,"bg":0,"bold":true}],[" 20 ",{"fg":3,"bold":true}],["{                                                                                                             ",{}],["|",{"inverse":true}],["~                     ",{"fg":4,"bold":true}]],"15":[["▼",{"fg":3,"bold":true}],[" Second",{"fg":5,"bold":true}],[" : ",{}],["struct",{"fg":2,"bold":true}],["   ",{}],["|",{"inverse":true}],["  ",{"fg":6,"bg":0,"bold":true}],[" 21 ",{"fg":3,"bold":true}],["    ",{}],["// 基类First的虚方法",{"fg":6,"bold":true}],["                                                                                      ",{}],["|",{"inverse":true}],["~                     ",{"fg":4,"bold":true}]],"16":[["    [prototypes]",{"fg":6,"bold":true}],["    ",{}],["|",{"inverse":true}],["  ",{"fg":6,"bg":0,"bold":true}],[" 22 ",{"fg":3,"bold":true}],["    ",{}],["virtual",{"fg":2,"bold":true}],[" ",{}],["void",{"fg":2,"bold":true}],[" FirstRun(",{}],["void",{"fg":2,"bold":true}],[")                                                                               ",{}],["|",{"inverse":true}],["~                     ",{"fg":4,"bold":true}]],"17":[["   ",{}],["+",{"fg":2,"bold":true}],["SecondRun(void) ",{}],["|",{"inverse":true}],["  ",{"fg":6,"bg":0,"bold":true}],[" 23 ",{"fg":3,"bold":true}],["    {                                                                                                         ",{}],["|",{"inverse":true}],["~                     ",{"fg":4,"bold":true}]],"18":[["   ",{}],["+",{"fg":2,"bold":true}],["SecondRun2(void)",{}],["|",{"inverse":true}],["  ",{"fg":6,"bg":0,"bold":true}],[" 24 ",{"fg":3,"bold":true}],["    ",{}],["|",{"fg":2,"bold":true}],["   cout << ",{}],["\"First\"",{"fg":5,"bold":true}],[" << endl;                                                                              ",{}],["|",{"inverse":true}],["~                     ",{"fg":4,"bold":true}]],"19":[["                    ",{}],["|",{"inverse":true}],["  ",{"fg":6,"bg":0,"bold":true}],[" 25 ",{"fg":3,"bold":true}],["    }                                                                                                         ",{}],["|",{"inverse":true}],["~                     ",{"fg":4,"bold":true}]],"20":[["▼",{"fg":3,"bold":true}],[" ",{}],["functions",{"fg":6,"bold":true}],["         ",{}],["|",{"inverse":true}],["  ",{"fg":6,"bg":0,"bold":true}],[" 26 ",{"fg":3,"bold":true}],["                                                                                                              ",{}],["|",{"inverse":true}],["~                     ",{"fg":4,"bold":true}]],"21":[["    ",{"underline":true}],["main",{"fg":0,"bg":3}],["(int argc, c",{"underline":true}],["|",{"inverse":true}],["  ",{"fg":6,"bg":0,"bold":true}],[" 27 ",{"fg":3,"bold":true}],["    ",{}],["virtual",{"fg":2,"bold":true}],[" ",{}],["void",{"fg":2,"bold":true}],[" FirstRun2(",{}],["void",{"fg":2,"bold":true}],[")                                                                              ",{}],["|",{"inverse":true}],["~                     ",{"fg":4,"bold":true}]],"22":[["~                   ",{"fg":4,"bold":true}],["|",{"inverse":true}],["  ",{"fg":6,"bg":0,"bold":true}],[" 28 ",{"fg":3,"bold":true}],["    {                                                                                                         ",{}],["|",{"inverse":true}],["~                     ",{"fg":4,"bold":true}]],"23":[["~                   ",{"fg":4,"bold":true}],["|",{"inverse":true}],["  ",{"fg":6,"bg":0,"bold":true}],[" 29 ",{"fg":3,"bold":true}],["    ",{}],["|",{"fg":2,"bold":true}],["   cout << ",{}],["\"First2\"",{"fg":5,"bold":true}],[" << endl;                                                                             ",{}],["|",{"inverse":true}],["~                     ",{"fg":4,"bold":true}]],"24":[["~                   ",{"fg":4,"bold":true}],["|",{"inverse":true}],["  ",{"fg":6,"bg":0,"bold":true}],[" 30 ",{"fg":3,"bold":true}],["    }                                                                                                         ",{}],["|",{"inverse":true}],["~                     ",{"fg":4,"bold":true}]],"25":[["~                   ",{"fg":4,"bold":true}],["|",{"inverse":true}],["  ",{"fg":6,"bg":0,"bold":true}],[" 31 ",{"fg":3,"bold":true}],["                                                                                                              ",{}],["|",{"inverse":true}],["~                     ",{"fg":4,"bold":true}]],"26":[["~                   ",{"fg":4,"bold":true}],["|",{"inverse":true}],["  ",{"fg":6,"bg":0,"bold":true}],[" 32 ",{"fg":3,"bold":true}],["    ",{}],["// 基类Second虚方法",{"fg":6,"bold":true}],["                                                                                       ",{}],["|",{"inverse":true}],["~                     ",{"fg":4,"bold":true}]],"27":[["~                   ",{"fg":4,"bold":true}],["|",{"inverse":true}],["  ",{"fg":6,"bg":0,"bold":true}],[" 33 ",{"fg":3,"bold":true}],["    ",{}],["virtual",{"fg":2,"bold":true}],[" ",{}],["void",{"fg":2,"bold":true}],[" SecondRun(",{}],["void",{"fg":2,"bold":true}],[")                                                                              ",{}],["|",{"inverse":true}],["~                     ",{"fg":4,"bold":true}]],"28":[["~                   ",{"fg":4,"bold":true}],["|",{"inverse":true}],["  ",{"fg":6,"bg":0,"bold":true}],[" 34 ",{"fg":3,"bold":true}],["    {                                                                                                         ",{}],["|",{"inverse":true}],["~                     ",{"fg":4,"bold":true}]],"29":[["~                   ",{"fg":4,"bold":true}],["|",{"inverse":true}],["  ",{"fg":6,"bg":0,"bold":true}],[" 35 ",{"fg":3,"bold":true}],["    ",{}],["|",{"fg":2,"bold":true}],["   cout <<",{}],["\"Second\"",{"fg":5,"bold":true}],[" << endl;                                                                              ",{}],["|",{"inverse":true}],["~                     ",{"fg":4,"bold":true}]],"30":[["~                   ",{"fg":4,"bold":true}],["|",{"inverse":true}],["  ",{"fg":6,"bg":0,"bold":true}],[" 36 ",{"fg":3,"bold":true}],["    }                                                                                                         ",{}],["|",{"inverse":true}],["~                     ",{"fg":4,"bold":true}]],"31":[["~                   ",{"fg":4,"bold":true}],["|",{"inverse":true}],["  ",{"fg":6,"bg":0,"bold":true}],[" 37 ",{"fg":3,"bold":true}],["                                                                                                              ",{}],["|",{"inverse":true}],["~                     ",{"fg":4,"bold":true}]],"32":[["~                   ",{"fg":4,"bold":true}],["|",{"inverse":true}],["  ",{"fg":6,"bg":0,"bold":true}],[" 38 ",{"fg":3,"bold":true}],["    ",{}],["virtual",{"fg":2,"bold":true}],[" ",{}],["void",{"fg":2,"bold":true}],[" SecondRun2(",{}],["void",{"fg":2,"bold":true}],[")                                                                             ",{}],["|",{"inverse":true}],["~                     ",{"fg":4,"bold":true}]],"33":[["~                   ",{"fg":4,"bold":true}],["|",{"inverse":true}],["  ",{"fg":6,"bg":0,"bold":true}],[" 39 ",{"fg":3,"bold":true}],["    {                                                                                                         ",{}],["|",{"inverse":true}],["~                     ",{"fg":4,"bold":true}]],"34":[["~                   ",{"fg":4,"bold":true}],["|",{"inverse":true}],["  ",{"fg":6,"bg":0,"bold":true}],[" 40 ",{"fg":3,"bold":true}],["    ",{}],["|",{"fg":2,"bold":true}],["   cout <<",{}],["\"Second2\"",{"fg":5,"bold":true}],[" << endl;                                                                             ",{}],["|",{"inverse":true}],["~                     ",{"fg":4,"bold":true}]],"35":[["~                   ",{"fg":4,"bold":true}],["|",{"inverse":true}],["  ",{"fg":6,"bg":0,"bold":true}],[" 41 ",{"fg":3,"bold":true}],["    }                                                                                                         ",{}],["|",{"inverse":true}],["~                     ",{"fg":4,"bold":true}]],"36":[["~                   ",{"fg":4,"bold":true}],["|",{"inverse":true}],["  ",{"fg":6,"bg":0,"bold":true}],[" 42 ",{"fg":3,"bold":true}],["                                                                                                              ",{}],["|",{"inverse":true}],["~                     ",{"fg":4,"bold":true}]],"37":[["~                   ",{"fg":4,"bold":true}],["|",{"inverse":true}],["  ",{"fg":6,"bg":0,"bold":true}],[" 43 ",{"fg":3,"bold":true}],["    ",{}],["virtual",{"fg":2,"bold":true}],[" ~Last()                                                                                           ",{}],["|",{"inverse":true}],["~                     ",{"fg":4,"bold":true}]],"38":[["~                   ",{"fg":4,"bold":true}],["|",{"inverse":true}],["  ",{"fg":6,"bg":0,"bold":true}],[" 44 ",{"fg":3,"bold":true}],["    {                                                                                                         ",{}],["|",{"inverse":true}],["~                     ",{"fg":4,"bold":true}]],"39":[["~                   ",{"fg":4,"bold":true}],["|",{"inverse":true}],["  ",{"fg":6,"bg":0,"bold":true}],[" 45 ",{"fg":3,"bold":true}],["                                                                                                              ",{}],["|",{"inverse":true}],["~                     ",{"fg":4,"bold":true}]],"40":[["~                   ",{"fg":4,"bold":true}],["|",{"inverse":true}],["  ",{"fg":6,"bg":0,"bold":true}],[" 46 ",{"fg":3,"bold":true}],["    }                                                                                                         ",{}],["|",{"inverse":true}],["~                     ",{"fg":4,"bold":true}]],"41":[["~                   ",{"fg":4,"bold":true}],["|",{"inverse":true}],["  ",{"fg":6,"bg":0,"bold":true}],[" 47 ",{"fg":3,"bold":true}],["                                                                                                              ",{}],["|",{"inverse":true}],["~                     ",{"fg":4,"bold":true}]],"42":[["~                   ",{"fg":4,"bold":true}],["|",{"inverse":true}],["  ",{"fg":6,"bg":0,"bold":true}],[" 48 ",{"fg":3,"bold":true}],["};                                                                                                            ",{}],["|",{"inverse":true}],["~                     ",{"fg":4,"bold":true}]],"43":[["~                   ",{"fg":4,"bold":true}],["|",{"inverse":true}],["  ",{"fg":6,"bg":0,"bold":true}],[" 49 ",{"fg":3,"bold":true}],["                                                                                                              ",{}],["|",{"inverse":true}],["~                     ",{"fg":4,"bold":true}]],"44":[["~                   ",{"fg":4,"bold":true}],["|",{"inverse":true}],["  ",{"fg":6,"bg":0,"bold":true}],[" 50 ",{"fg":3,"bold":true}],["                                                                                                              ",{}],["|",{"inverse":true}],["~                     ",{"fg":4,"bold":true}]],"45":[["~                   ",{"fg":4,"bold":true}],["|",{"inverse":true}],[">>",{"fg":7,"bg":1,"bold":true}],[" 51 ",{"fg":3,"bold":true}],["int",{"fg":2,"bold":true,"underline":true}],[" main(",{"underline":true}],["int",{"fg":2,"bold":true,"underline":true}],[" ",{"underline":true}],["argc",{"bg":1}],[", ",{"underline":true}],["char",{"fg":2,"bold":true,"underline":true}],["* ",{"underline":true}],["argv",{"bg":1}],["[])                                                                              ",{"underline":true}],["|",{"inverse":true}],["~                     ",{"fg":4,"bold":true}]],"46":[["[Name] test.cpp       ",{"inverse":true}],["test.cpp ",{"bold":true}],["                                                                                          71% ",{}],["│ LN  51",{"bold":true}],[":11 ",{}],[" ",{"inverse":true}],[" ~/NERD_tree_1 ",{"bold":true}],["       ",{}]]},"cursor":{"x":142,"y":3,"visible":true}}],[1.025699,{"lines":{"3":[["    [prototypes]",{"fg":6,"bold":true}],["    ",{}],["|",{"inverse":true}],["  ",{"fg":6,"bg":0,"bold":true}],["  9 ",{"fg":3,"bold":true}],["    ",{}],["virtual",{"fg":2,"bold":true}],[" ",{}],["void",{"fg":2,"bold":true}],[" FirstRun2(",{}],["void",{"fg":2,"bold":true}],[") = ",{}],["0",{"fg":5,"bold":true}],[";                                                                         ",{}],["|",{"inverse":true}],["  4 /root/",{"fg":3,"bold":true}],["            ",{}]],"4":[["   ",{}],["+",{"fg":2,"bold":true}],["FirstRun(void)  ",{}],["|",{"inverse":true}],["  ",{"fg":6,"bg":0,"bold":true}],[" 10 ",{"fg":3,"bold":true}],["};                                                                                                            ",{}],["|",{"inverse":true}],["  5 ",{"fg":3,"bold":true}],["▸ diary/",{"fg":6,"bold":true,"underline":true}],["          ",{"underline":true}]]},"cursor":{"y":4}}],[0.66551,{"lines":{"47":[[":NERDTreeToggle                                                                                                                                      ^W         ",{}]]}}],[0.278576,{"lines":{"47":[[":NERDTreeToggle                                                                                                                                      ^Wh        ",{}]]},"cursor":{"visible":false}}],[0.031237,{"lines":{"46":[["[Name] test.cpp      ",{"inverse":true}],[" NORMAL ",{"bold":true}],[" ",{}],["test.cpp ",{"bold":true}],[" main()                                                      unix │ utf-8 │ cpp │  71% ",{}],[" LN  51",{"bold":true}],[":11 ",{}],[" ",{"bold":true,"inverse":true}],[" ~/NERD_tree_1 ",{"bold":true}],["       ",{}]],"47":[[":NERDTreeToggle                                                                                                                                                 ",{}]]},"cursor":{"x":37,"y":45,"visible":true}}],[0.337557,{"lines":{"0":[["\" Press <F1> for hel",{"fg":6,"bold":true}],["|",{"inverse":true}],["  ",{"fg":6,"bg":0,"bold":true}],["  7 ",{"fg":3,"bold":true}],["{                                                                                                             ",{}],["|",{"inverse":true}],["  1 ",{"fg":3,"bold":true}],["\" Press ? for help",{"fg":5,"bold":true}]],"1":[["                    ",{}],["|",{"inverse":true}],["  ",{"fg":6,"bg":0,"bold":true}],["  8 ",{"fg":3,"bold":true}],["    ",{}],["virtual",{"fg":2,"bold":true}],[" ",{}],["void",{"fg":2,"bold":true}],[" FirstRun(",{}],["void",{"fg":2,"bold":true}],[") = ",{}],["0",{"fg":5,"bold":true}],[";                                                                          ",{}],["|",{"inverse":true}],["  2 ",{"fg":3,"bold":true}],["                  ",{}]],"2":[["▼",{"fg":3,"bold":true}],[" First",{"fg":5,"bold":true}],[" : ",{}],["struct",{"fg":2,"bold":true}],["    ",{}],["|",{"inverse":true}],["  ",{"fg":6,"bg":0,"bold":true}],["  9 ",{"fg":3,"bold":true}],["    ",{}],["virtual",{"fg":2,"bold":true}],[" ",{}],["void",{"fg":2,"bold":true}],[" FirstRun2(",{}],["void",{"fg":2,"bold":true}],[") = ",{}],["0",{"fg":5,"bold":true}],[";                                                                         ",{}],["|",{"inverse":true}],["  3 ",{"fg":3,"bold":true}],[".. (up a dir)",{"fg":6,"bold":true}],["     ",{}]],"3":[["    [prototypes]",{"fg":6,"bold":true}],["    ",{}],["|",{"inverse":true}],["  ",{"fg":6,"bg":0,"bold":true}],[" 10 ",{"fg":3,"bold":true}],["};                                                                                                            ",{}],["|",{"inverse":true}],["  4 /root/",{"fg":3,"bold":true}],["            ",{}]],"4":[["   ",{}],["+",{"fg":2,"bold":true}],["FirstRun(void)  ",{}],["|",{"inverse":true}],["  ",{"fg":6,"bg":0,"bold":true}],[" 11 ",{"fg":3,"bold":true}],["                                                                                                              ",{}],["|",{"inverse":true}],["  5 ",{"fg":3,"bold":true}],["▸ diary/",{"fg":6,"bold":true,"underline":true}],["          ",{"underline":true}]],"5":[["   ",{}],["+",{"fg":2,"bold":true}],["FirstRun2(void) ",{}],["|",{"inverse":true}],["  ",{"fg":6,"bg":0,"bold":true}],[" 12 ",{"fg":3,"bold":true}],["struct",{"fg":2,"bold":true}],[" Second                                                                                                 ",{}],["|",{"inverse":true}],["  6 ",{"fg":3,"bold":true}],["▸ temp/",{"fg":6,"bold":true}],["           ",{}]]},"cursor":{"x":69,"y":5,"visible":false}}],[0.008303999999999999,{"lines":{"6":[["                    ",{}],["|",{"inverse":true}],["  ",{"fg":6,"bg":0,"bold":true}],[" 13 ",{"fg":3,"bold":true}],["{                                                                                                             ",{}],["|",{"inverse":true}],["  7 ",{"fg":3,"bold":true}],["  anaconda-ks.cfg ",{}]],"7":[["▼",{"fg":3,"bold":true}],[" Last",{"fg":5,"bold":true}],[" : ",{}],["struct",{"fg":2,"bold":true}],["     ",{}],["|",{"inverse":true}],["  ",{"fg":6,"bg":0,"bold":true}],[" 14 ",{"fg":3,"bold":true}],["    ",{}],["virtual",{"fg":2,"bold":true}],[" ",{}],["void",{"fg":2,"bold":true}],[" SecondRun(",{}],["void",{"fg":2,"bold":true}],[") = ",{}],["0",{"fg":5,"bold":true}],[";                                                                         ",{}],["|",{"inverse":true}],["  8 ",{"fg":3,"bold":true}],["  initial-setup-ks",{}]],"8":[["    [functions]",{"fg":6,"bold":true}],["     ",{}],["|",{"inverse":true}],["  ",{"fg":6,"bg":0,"bold":true}],[" 15 ",{"fg":3,"bold":true}],["    ",{}],["virtual",{"fg":2,"bold":true}],[" ",{}],["void",{"fg":2,"bold":true}],[" SecondRun2(",{}],["void",{"fg":2,"bold":true}],[") = ",{}],["0",{"fg":5,"bold":true}],[";                                                                        ",{}],["|",{"inverse":true}],["  9 ",{"fg":3,"bold":true}],["  test.c          ",{}]],"9":[["   ",{}],["+",{"fg":2,"bold":true}],["FirstRun(void)  ",{}],["|",{"inverse":true}],["  ",{"fg":6,"bg":0,"bold":true}],[" 16 ",{"fg":3,"bold":true}],["};                                                                                                            ",{}],["|",{"inverse":true}],[" 10 ",{"fg":3,"bold":true}],["  test.cpp        ",{}]],"10":[["   ",{}],["+",{"fg":2,"bold":true}],["FirstRun2(void) ",{}],["|",{"inverse":true}],["  ",{"fg":6,"bg":0,"bold":true}],[" 17 ",{"fg":3,"bold":true}],["                                                                                                              ",{}],["|",{"inverse":true}],["~                     ",{"fg":4,"bold":true}]],"11":[["   ",{}],["+",{"fg":2,"bold":true}],["~Last()         ",{}],["|",{"inverse":true}],["  ",{"fg":6,"bg":0,"bold":true}],[" 18 ",{"fg":3,"bold":true}],["struct",{"fg":2,"bold":true}],[" Last: ",{}],["public",{"fg":3,"bold":true}],[" First,                                                                                    ",{}],["|",{"inverse":true}],["~                     ",{"fg":4,"bold":true}]],"12":[["   ",{}],["+",{"fg":2,"bold":true}],["SecondRun(void) ",{}],["|",{"inverse":true}],["  ",{"fg":6,"bg":0,"bold":true}],[" 19 ",{"fg":3,"bold":true}],["    ",{}],["public",{"fg":3,"bold":true}],[" Second                                                                                             ",{}],["|",{"inverse":true}],["~                     ",{"fg":4,"bold":true}]],"13":[["   ",{}],["+",{"fg":2,"bold":true}],["SecondRun2(void)",{}],["|",{"inverse":true}],["  ",{"fg":6,"bg":0,"bold":true}],[" 20 ",{"fg":3,"bold":true}],["{                                                                                                             ",{}],["|",{"inverse":true}],["~                     ",{"fg":4,"bold":true}]],"14":[["                    ",{}],["|",{"inverse":true}],["  ",{"fg":6,"bg":0,"bold":true}],[" 21 ",{"fg":3,"bold":true}],["    ",{}],["// 基类First的虚方法",{"fg":6,"bold":true}],["                                                                                      ",{}],["|",{"inverse":true}],["~                     ",{"fg":4,"bold":true}]],"15":[["▼",{"fg":3,"bold":true}],[" Second",{"fg":5,"bold":true}],[" : ",{}],["struct",{"fg":2,"bold":true}],["   ",{}],["|",{"inverse":true}],["  ",{"fg":6,"bg":0,"bold":true}],[" 22 ",{"fg":3,"bold":true}],["    ",{}],["virtual",{"fg":2,"bold":true}],[" ",{}],["void",{"fg":2,"bold":true}],[" FirstRun(",{}],["void",{"fg":2,"bold":true}],[")                                                                               ",{}],["|",{"inverse":true}],["~                     ",{"fg":4,"bold":true}]],"16":[["    [prototypes]",{"fg":6,"bold":true}],["    ",{}],["|",{"inverse":true}],["  ",{"fg":6,"bg":0,"bold":true}],[" 23 ",{"fg":3,"bold":true}],["    {                                                                                                         ",{}],["|",{"inverse":true}],["~                     ",{"fg":4,"bold":true}]],"17":[["   ",{}],["+",{"fg":2,"bold":true}],["SecondRun(void) ",{}],["|",{"inverse":true}],["  ",{"fg":6,"bg":0,"bold":true}],[" 24 ",{"fg":3,"bold":true}],["    ",{}],["|",{"fg":2,"bold":true}],["   cout << ",{}],["\"First\"",{"fg":5,"bold":true}],[" << endl;                                                                              ",{}],["|",{"inverse":true}],["~                     ",{"fg":4,"bold":true}]],"18":[["   ",{}],["+",{"fg":2,"bold":true}],["SecondRun2(void)",{}],["|",{"inverse":true}],["  ",{"fg":6,"bg":0,"bold":true}],[" 25 ",{"fg":3,"bold":true}],["    }                                                                                                         ",{}],["|",{"inverse":true}],["~                     ",{"fg":4,"bold":true}]],"19":[["                    ",{}],["|",{"inverse":true}],["  ",{"fg":6,"bg":0,"bold":true}],[" 26 ",{"fg":3,"bold":true}],["                                                                                                              ",{}],["|",{"inverse":true}],["~                     ",{"fg":4,"bold":true}]],"20":[["▼",{"fg":3,"bold":true}],[" ",{}],["functions",{"fg":6,"bold":true}],["         ",{}],["|",{"inverse":true}],["  ",{"fg":6,"bg":0,"bold":true}],[" 27 ",{"fg":3,"bold":true}],["    ",{}],["virtual",{"fg":2,"bold":true}],[" ",{}],["void",{"fg":2,"bold":true}],[" FirstRun2(",{}],["void",{"fg":2,"bold":true}],[")                                                                              ",{}],["|",{"inverse":true}],["~                     ",{"fg":4,"bold":true}]],"21":[["    ",{"underline":true}],["main",{"fg":0,"bg":3}],["(int argc, c",{"underline":true}],["|",{"inverse":true}],["  ",{"fg":6,"bg":0,"bold":true}],[" 28 ",{"fg":3,"bold":true}],["    {                                                                                                         ",{}],["|",{"inverse":true}],["~                     ",{"fg":4,"bold":true}]],"22":[["~                   ",{"fg":4,"bold":true}],["|",{"inverse":true}],["  ",{"fg":6,"bg":0,"bold":true}],[" 29 ",{"fg":3,"bold":true}],["    ",{}],["|",{"fg":2,"bold":true}],["   cout << ",{}],["\"First2\"",{"fg":5,"bold":true}],[" << endl;                                                                             ",{}],["|",{"inverse":true}],["~                     ",{"fg":4,"bold":true}]],"23":[["~                   ",{"fg":4,"bold":true}],["|",{"inverse":true}],["  ",{"fg":6,"bg":0,"bold":true}],[" 30 ",{"fg":3,"bold":true}],["    }                                                                                                         ",{}],["|",{"inverse":true}],["~                     ",{"fg":4,"bold":true}]],"24":[["~                   ",{"fg":4,"bold":true}],["|",{"inverse":true}],["  ",{"fg":6,"bg":0,"bold":true}],[" 31 ",{"fg":3,"bold":true}],["                                                                                                              ",{}],["|",{"inverse":true}],["~                     ",{"fg":4,"bold":true}]],"25":[["~                   ",{"fg":4,"bold":true}],["|",{"inverse":true}],["  ",{"fg":6,"bg":0,"bold":true}],[" 32 ",{"fg":3,"bold":true}],["    ",{}],["// 基类Second虚方法",{"fg":6,"bold":true}],["                                                                                       ",{}],["|",{"inverse":true}],["~                     ",{"fg":4,"bold":true}]],"26":[["~                   ",{"fg":4,"bold":true}],["|",{"inverse":true}],["  ",{"fg":6,"bg":0,"bold":true}],[" 33 ",{"fg":3,"bold":true}],["    ",{}],["virtual",{"fg":2,"bold":true}],[" ",{}],["void",{"fg":2,"bold":true}],[" SecondRun(",{}],["void",{"fg":2,"bold":true}],[")                                                                              ",{}],["|",{"inverse":true}],["~                     ",{"fg":4,"bold":true}]],"27":[["~                   ",{"fg":4,"bold":true}],["|",{"inverse":true}],["  ",{"fg":6,"bg":0,"bold":true}],[" 34 ",{"fg":3,"bold":true}],["    {                                                                                                         ",{}],["|",{"inverse":true}],["~                     ",{"fg":4,"bold":true}]],"28":[["~                   ",{"fg":4,"bold":true}],["|",{"inverse":true}],["  ",{"fg":6,"bg":0,"bold":true}],[" 35 ",{"fg":3,"bold":true}],["    ",{}],["|",{"fg":2,"bold":true}],["   cout <<",{}],["\"Second\"",{"fg":5,"bold":true}],[" << endl;                                                                              ",{}],["|",{"inverse":true}],["~                     ",{"fg":4,"bold":true}]],"29":[["~                   ",{"fg":4,"bold":true}],["|",{"inverse":true}],["  ",{"fg":6,"bg":0,"bold":true}],[" 36 ",{"fg":3,"bold":true}],["    }                                                                                                         ",{}],["|",{"inverse":true}],["~                     ",{"fg":4,"bold":true}]],"30":[["~                   ",{"fg":4,"bold":true}],["|",{"inverse":true}],["  ",{"fg":6,"bg":0,"bold":true}],[" 37 ",{"fg":3,"bold":true}],["                                                                                                              ",{}],["|",{"inverse":true}],["~                     ",{"fg":4,"bold":true}]],"31":[["~                   ",{"fg":4,"bold":true}],["|",{"inverse":true}],["  ",{"fg":6,"bg":0,"bold":true}],[" 38 ",{"fg":3,"bold":true}],["    ",{}],["virtual",{"fg":2,"bold":true}],[" ",{}],["void",{"fg":2,"bold":true}],[" SecondRun2(",{}],["void",{"fg":2,"bold":true}],[")                                                                             ",{}],["|",{"inverse":true}],["~                     ",{"fg":4,"bold":true}]],"32":[["~                   ",{"fg":4,"bold":true}],["|",{"inverse":true}],["  ",{"fg":6,"bg":0,"bold":true}],[" 39 ",{"fg":3,"bold":true}],["    {                                                                                                         ",{}],["|",{"inverse":true}],["~                     ",{"fg":4,"bold":true}]],"33":[["~                   ",{"fg":4,"bold":true}],["|",{"inverse":true}],["  ",{"fg":6,"bg":0,"bold":true}],[" 40 ",{"fg":3,"bold":true}],["    ",{}],["|",{"fg":2,"bold":true}],["   cout <<",{}],["\"Second2\"",{"fg":5,"bold":true}],[" << endl;                                                                             ",{}],["|",{"inverse":true}],["~                     ",{"fg":4,"bold":true}]],"34":[["~                   ",{"fg":4,"bold":true}],["|",{"inverse":true}],["  ",{"fg":6,"bg":0,"bold":true}],[" 41 ",{"fg":3,"bold":true}],["    }                                                                                                         ",{}],["|",{"inverse":true}],["~                     ",{"fg":4,"bold":true}]],"35":[["~                   ",{"fg":4,"bold":true}],["|",{"inverse":true}],["  ",{"fg":6,"bg":0,"bold":true}],[" 42 ",{"fg":3,"bold":true}],["                                                                                                              ",{}],["|",{"inverse":true}],["~                     ",{"fg":4,"bold":true}]]},"cursor":{"x":132,"y":35}}],[0.013279,{"lines":{"36":[["~                   ",{"fg":4,"bold":true}],["|",{"inverse":true}],["  ",{"fg":6,"bg":0,"bold":true}],[" 43 ",{"fg":3,"bold":true}],["    ",{}],["virtual",{"fg":2,"bold":true}],[" ~Last()                                                                                           ",{}],["|",{"inverse":true}],["~                     ",{"fg":4,"bold":true}]],"37":[["~                   ",{"fg":4,"bold":true}],["|",{"inverse":true}],["  ",{"fg":6,"bg":0,"bold":true}],[" 44 ",{"fg":3,"bold":true}],["    {                                                                                                         ",{}],["|",{"inverse":true}],["~                     ",{"fg":4,"bold":true}]],"38":[["~                   ",{"fg":4,"bold":true}],["|",{"inverse":true}],["  ",{"fg":6,"bg":0,"bold":true}],[" 45 ",{"fg":3,"bold":true}],["                                                                                                              ",{}],["|",{"inverse":true}],["~                     ",{"fg":4,"bold":true}]],"39":[["~                   ",{"fg":4,"bold":true}],["|",{"inverse":true}],["  ",{"fg":6,"bg":0,"bold":true}],[" 46 ",{"fg":3,"bold":true}],["    }                                                                                                         ",{}],["|",{"inverse":true}],["~                     ",{"fg":4,"bold":true}]],"40":[["~                   ",{"fg":4,"bold":true}],["|",{"inverse":true}],["  ",{"fg":6,"bg":0,"bold":true}],[" 47 ",{"fg":3,"bold":true}],["                                                                                                              ",{}],["|",{"inverse":true}],["~                     ",{"fg":4,"bold":true}]],"41":[["~                   ",{"fg":4,"bold":true}],["|",{"inverse":true}],["  ",{"fg":6,"bg":0,"bold":true}],[" 48 ",{"fg":3,"bold":true}],["};                                                                                                            ",{}],["|",{"inverse":true}],["~                     ",{"fg":4,"bold":true}]],"42":[["~                   ",{"fg":4,"bold":true}],["|",{"inverse":true}],["  ",{"fg":6,"bg":0,"bold":true}],[" 49 ",{"fg":3,"bold":true}],["                                                                                                              ",{}],["|",{"inverse":true}],["~                     ",{"fg":4,"bold":true}]],"43":[["~                   ",{"fg":4,"bold":true}],["|",{"inverse":true}],["  ",{"fg":6,"bg":0,"bold":true}],[" 50 ",{"fg":3,"bold":true}],["                                                                                                              ",{}],["|",{"inverse":true}],["~                     ",{"fg":4,"bold":true}]],"44":[["~                   ",{"fg":4,"bold":true}],["|",{"inverse":true}],[">>",{"fg":7,"bg":1,"bold":true}],[" 51 ",{"fg":3,"bold":true}],["int",{"fg":2,"bold":true}],[" main(",{}],["int",{"fg":2,"bold":true}],[" ",{}],["argc",{"bg":1}],[", ",{}],["char",{"fg":2,"bold":true}],["* ",{}],["argv",{"bg":1}],["[])                                                                              ",{}],["|",{"inverse":true}],["~                     ",{"fg":4,"bold":true}]],"45":[["~                   ",{"fg":4,"bold":true}],["|",{"inverse":true}],["  ",{"fg":6,"bg":0,"bold":true}],[" 52 ",{"fg":3,"bold":true}],["{                                                                                                             ",{"underline":true}],["|",{"inverse":true}],["~                     ",{"fg":4,"bold":true}]],"46":[["[Name] test.cpp      ",{"inverse":true}],[" NORMAL ",{"bold":true}],[" ",{}],["test.cpp ",{"bold":true}],[" main()                                                      unix │ utf-8 │ cpp │  73% ",{}],[" LN  52",{"bold":true}],[":2  ",{}],[" ",{"bold":true,"inverse":true}],[" ~/NERD_tree_1 ",{"bold":true}],["       ",{}]],"47":[["                                                                                                                                                                ",{}]]},"cursor":{"x":28,"y":45,"visible":true}}],[0.210342,{"lines":{"47":[["unused parameter 'argc'                                                                                                                                         ",{}]]},"cursor":{"x":23,"y":47,"visible":false}}],[0.042797,{"lines":{"44":[["~                   ",{"fg":4,"bold":true}],["|",{"inverse":true}],[">>",{"fg":7,"bg":1,"bold":true}],[" 51 ",{"fg":3,"bold":true}],["int",{"fg":2,"bold":true,"underline":true}],[" main(",{"underline":true}],["int",{"fg":2,"bold":true,"underline":true}],[" ",{"underline":true}],["argc",{"bg":1}],[", ",{"underline":true}],["char",{"fg":2,"bold":true,"underline":true}],["* ",{"underline":true}],["argv",{"bg":1}],["[])                                                                              ",{"underline":true}],["|",{"inverse":true}],["~                     ",{"fg":4,"bold":true}]],"45":[["~                   ",{"fg":4,"bold":true}],["|",{"inverse":true}],["  ",{"fg":6,"bg":0,"bold":true}],[" 52 ",{"fg":3,"bold":true}],["{                                                                                                             ",{}],["|",{"inverse":true}],["~                     ",{"fg":4,"bold":true}]],"46":[["[Name] test.cpp      ",{"inverse":true}],[" NORMAL ",{"bold":true}],[" ",{}],["test.cpp ",{"bold":true}],[" main()                                                      unix │ utf-8 │ cpp │  71% ",{}],[" LN  51",{"bold":true}],[":11 ",{}],[" ",{"bold":true,"inverse":true}],[" ~/NERD_tree_1 ",{"bold":true}],["       ",{}]]},"cursor":{"x":37,"y":44,"visible":true}}],[0.207386,{"lines":{"47":[["                                                                                                                                                                ",{}]]},"cursor":{"x":0,"y":47,"visible":false}}],[0.023531,{"lines":{"43":[["~                   ",{"fg":4,"bold":true}],["|",{"inverse":true}],["  ",{"fg":6,"bg":0,"bold":true}],[" 50 ",{"fg":3,"bold":true}],["                                                                                                              ",{"underline":true}],["|",{"inverse":true}],["~                     ",{"fg":4,"bold":true}]],"44":[["~                   ",{"fg":4,"bold":true}],["|",{"inverse":true}],[">>",{"fg":7,"bg":1,"bold":true}],[" 51 ",{"fg":3,"bold":true}],["int",{"fg":2,"bold":true}],[" main(",{}],["int",{"fg":2,"bold":true}],[" ",{}],["argc",{"bg":1}],[", ",{}],["char",{"fg":2,"bold":true}],["* ",{}],["argv",{"bg":1}],["[])                                                                              ",{}],["|",{"inverse":true}],["~                     ",{"fg":4,"bold":true}]],"46":[["[Name] test.cpp      ",{"inverse":true}],[" NORMAL ",{"bold":true}],[" ",{}],["test.cpp ",{"bold":true}],[" ~Last()                                                     unix │ utf-8 │ cpp │  70% ",{}],[" LN  50",{"bold":true}],[":1  ",{}],[" ",{"bold":true,"inverse":true}],[" ~/NERD_tree_1 ",{"bold":true}],["       ",{}]]},"cursor":{"x":27,"y":43,"visible":true}}],[0.005719,{"lines":{"47":[["                                                                                                                                                     k          ",{}]]},"cursor":{"visible":false}}],[0.034844,{"lines":{"42":[["~                   ",{"fg":4,"bold":true}],["|",{"inverse":true}],["  ",{"fg":6,"bg":0,"bold":true}],[" 49 ",{"fg":3,"bold":true}],["                                                                                                              ",{"underline":true}],["|",{"inverse":true}],["~                     ",{"fg":4,"bold":true}]],"43":[["~                   ",{"fg":4,"bold":true}],["|",{"inverse":true}],["  ",{"fg":6,"bg":0,"bold":true}],[" 50 ",{"fg":3,"bold":true}],["                                                                                                              ",{}],["|",{"inverse":true}],["~                     ",{"fg":4,"bold":true}]],"46":[["[Name] test.cpp      ",{"inverse":true}],[" NORMAL ",{"bold":true}],[" ",{}],["test.cpp ",{"bold":true}],[" ~Last()                                                     unix │ utf-8 │ cpp │  69% ",{}],[" LN  49",{"bold":true}],[":1  ",{}],[" ",{"bold":true,"inverse":true}],[" ~/NERD_tree_1 ",{"bold":true}],["       ",{}]],"47":[["                                                                                                                                                                ",{}]]},"cursor":{"y":42,"visible":true}}],[0.011297,{"lines":{"41":[["~                   ",{"fg":4,"bold":true}],["|",{"inverse":true}],["  ",{"fg":6,"bg":0,"bold":true}],[" 48 ",{"fg":3,"bold":true}],["};                                                                                                            ",{"underline":true}],["|",{"inverse":true}],["~                     ",{"fg":4,"bold":true}]],"42":[["~                   ",{"fg":4,"bold":true}],["|",{"inverse":true}],["  ",{"fg":6,"bg":0,"bold":true}],[" 49 ",{"fg":3,"bold":true}],["                                                                                                              ",{}],["|",{"inverse":true}],["~                     ",{"fg":4,"bold":true}]],"46":[["[Name] test.cpp      ",{"inverse":true}],[" NORMAL ",{"bold":true}],[" ",{}],["test.cpp ",{"bold":true}],[" ~Last()                                                     unix │ utf-8 │ cpp │  67% ",{}],[" LN  48",{"bold":true}],[":2  ",{}],[" ",{"bold":true,"inverse":true}],[" ~/NERD_tree_1 ",{"bold":true}],["       ",{}]]},"cursor":{"x":28,"y":41}}],[0.020885,{"lines":{"47":[["                                                                                                                                                     k          ",{}]]},"cursor":{"visible":false}}],[0.022095,{"lines":{"40":[["~                   ",{"fg":4,"bold":true}],["|",{"inverse":true}],["  ",{"fg":6,"bg":0,"bold":true}],[" 47 ",{"fg":3,"bold":true}],["                                                                                                              ",{"underline":true}],["|",{"inverse":true}],["~                     ",{"fg":4,"bold":true}]],"41":[["~                   ",{"fg":4,"bold":true}],["|",{"inverse":true}],["  ",{"fg":6,"bg":0,"bold":true}],[" 48 ",{"fg":3,"bold":true}],["};                                                                                                            ",{}],["|",{"inverse":true}],["~                     ",{"fg":4,"bold":true}]],"46":[["[Name] test.cpp      ",{"inverse":true}],[" NORMAL ",{"bold":true}],[" ",{}],["test.cpp ",{"bold":true}],[" ~Last()                                                     unix │ utf-8 │ cpp │  66% ",{}],[" LN  47",{"bold":true}],[":1  ",{}],[" ",{"bold":true,"inverse":true}],[" ~/NERD_tree_1 ",{"bold":true}],["       ",{}]],"47":[["                                                                                                                                                                ",{}]]},"cursor":{"x":27,"y":40,"visible":true}}],[0.014422,{"lines":{"47":[["                                                                                                                                                     k          ",{}]]},"cursor":{"visible":false}}],[0.010493,{"lines":{"37":[["~                   ",{"fg":4,"bold":true}],["|",{"inverse":true}],["  ",{"fg":6,"bg":0,"bold":true}],[" 44 ",{"fg":3,"bold":true}],["    ",{}],["{",{"bg":6}],["                                                                                                         ",{}],["|",{"inverse":true}],["~                     ",{"fg":4,"bold":true}]],"39":[["~                   ",{"fg":4,"bold":true}],["|",{"inverse":true}],["  ",{"fg":6,"bg":0,"bold":true}],[" 46 ",{"fg":3,"bold":true}],["    ",{"underline":true}],["}",{"bg":6}],["                                                                                                         ",{"underline":true}],["|",{"inverse":true}],["~                     ",{"fg":4,"bold":true}]],"40":[["~                   ",{"fg":4,"bold":true}],["|",{"inverse":true}],["  ",{"fg":6,"bg":0,"bold":true}],[" 47 ",{"fg":3,"bold":true}],["                                                                                                              ",{}],["|",{"inverse":true}],["~                     ",{"fg":4,"bold":true}]],"46":[["[Name] test.cpp      ",{"inverse":true}],[" NORMAL ",{"bold":true}],[" ",{}],["test.cpp ",{"bold":true}],[" ~Last()                                                     unix │ utf-8 │ cpp │  64% ",{}],[" LN  46",{"bold":true}],[":5  ",{}],[" ",{"bold":true,"inverse":true}],[" ~/NERD_tree_1 ",{"bold":true}],["       ",{}]],"47":[["                                                                                                                                                                ",{}]]},"cursor":{"x":31,"y":39,"visible":true}}],[0.026468,{"lines":{"47":[["                                                                                                                                                     k          ",{}]]},"cursor":{"visible":false}}],[0.006095,{"lines":{"37":[["~                   ",{"fg":4,"bold":true}],["|",{"inverse":true}],["  ",{"fg":6,"bg":0,"bold":true}],[" 44 ",{"fg":3,"bold":true}],["    {                                                                                                         ",{}],["|",{"inverse":true}],["~                     ",{"fg":4,"bold":true}]],"38":[["~                   ",{"fg":4,"bold":true}],["|",{"inverse":true}],["  ",{"fg":6,"bg":0,"bold":true}],[" 45 ",{"fg":3,"bold":true}],["                                                                                                              ",{"underline":true}],["|",{"inverse":true}],["~                     ",{"fg":4,"bold":true}]],"39":[["~                   ",{"fg":4,"bold":true}],["|",{"inverse":true}],["  ",{"fg":6,"bg":0,"bold":true}],[" 46 ",{"fg":3,"bold":true}],["    }                                                                                                         ",{}],["|",{"inverse":true}],["~                     ",{"fg":4,"bold":true}]],"46":[["[Name] test.cpp      ",{"inverse":true}],[" NORMAL ",{"bold":true}],[" ",{}],["test.cpp ",{"bold":true}],[" ~Last()                                                     unix │ utf-8 │ cpp │  63% ",{}],[" LN  45",{"bold":true}],[":4  ",{}],[" ",{"bold":true,"inverse":true}],[" ~/NERD_tree_1 ",{"bold":true}],["       ",{}]],"47":[["                                                                                                                                                                ",{}]]},"cursor":{"x":30,"y":38,"visible":true}}],[0.021014,{"lines":{"47":[["                                                                                                                                                     k          ",{}]]},"cursor":{"visible":false}}],[0.025566,{"lines":{"37":[["~                   ",{"fg":4,"bold":true}],["|",{"inverse":true}],["  ",{"fg":6,"bg":0,"bold":true}],[" 44 ",{"fg":3,"bold":true}],["    ",{"underline":true}],["{",{"bg":6}],["                                                                                                         ",{"underline":true}],["|",{"inverse":true}],["~                     ",{"fg":4,"bold":true}]],"38":[["~                   ",{"fg":4,"bold":true}],["|",{"inverse":true}],["  ",{"fg":6,"bg":0,"bold":true}],[" 45 ",{"fg":3,"bold":true}],["                                                                                                              ",{}],["|",{"inverse":true}],["~                     ",{"fg":4,"bold":true}]],"39":[["~                   ",{"fg":4,"bold":true}],["|",{"inverse":true}],["  ",{"fg":6,"bg":0,"bold":true}],[" 46 ",{"fg":3,"bold":true}],["    ",{}],["}",{"bg":6}],["                                                                                                         ",{}],["|",{"inverse":true}],["~                     ",{"fg":4,"bold":true}]],"46":[["[Name] test.cpp      ",{"inverse":true}],[" NORMAL ",{"bold":true}],[" ",{}],["test.cpp ",{"bold":true}],[" ~Last()                                                     unix │ utf-8 │ cpp │  61% ",{}],[" LN  44",{"bold":true}],[":5  ",{}],[" ",{"bold":true,"inverse":true}],[" ~/NERD_tree_1 ",{"bold":true}],["       ",{}]],"47":[["                                                                                                                                                                ",{}]]},"cursor":{"x":31,"y":37,"visible":true}}],[0.011335,{"lines":{"47":[["                                                                                                                                                     k          ",{}]]},"cursor":{"visible":false}}],[0.007331,{"lines":{"36":[["~                   ",{"fg":4,"bold":true}],["|",{"inverse":true}],["  ",{"fg":6,"bg":0,"bold":true}],[" 43 ",{"fg":3,"bold":true}],["    ",{"underline":true}],["virtual",{"fg":2,"bold":true,"underline":true}],[" ~Last()                                                                                           ",{"underline":true}],["|",{"inverse":true}],["~                     ",{"fg":4,"bold":true}]],"37":[["~                   ",{"fg":4,"bold":true}],["|",{"inverse":true}],["  ",{"fg":6,"bg":0,"bold":true}],[" 44 ",{"fg":3,"bold":true}],["    {                                                                                                         ",{}],["|",{"inverse":true}],["~                     ",{"fg":4,"bold":true}]],"39":[["~                   ",{"fg":4,"bold":true}],["|",{"inverse":true}],["  ",{"fg":6,"bg":0,"bold":true}],[" 46 ",{"fg":3,"bold":true}],["    }                                                                                                         ",{}],["|",{"inverse":true}],["~                     ",{"fg":4,"bold":true}]],"46":[["[Name] test.cpp      ",{"inverse":true}],[" NORMAL ",{"bold":true}],[" ",{}],["test.cpp ",{"bold":true}],[" ~Last()                                                     unix │ utf-8 │ cpp │  60% ",{}],[" LN  43",{"bold":true}],[":11 ",{}],[" ",{"bold":true,"inverse":true}],[" ~/NERD_tree_1 ",{"bold":true}],["       ",{}]],"47":[["                                                                                                                                                                ",{}]]},"cursor":{"x":37,"y":36,"visible":true}}],[0.033706,{"lines":{"47":[["                                                                                                                                                     k          ",{}]]},"cursor":{"visible":false}}],[0.005041,{"lines":{"35":[["~                   ",{"fg":4,"bold":true}],["|",{"inverse":true}],["  ",{"fg":6,"bg":0,"bold":true}],[" 42 ",{"fg":3,"bold":true}],["                                                                                                              ",{"underline":true}],["|",{"inverse":true}],["~                     ",{"fg":4,"bold":true}]],"36":[["~                   ",{"fg":4,"bold":true}],["|",{"inverse":true}],["  ",{"fg":6,"bg":0,"bold":true}],[" 43 ",{"fg":3,"bold":true}],["    ",{}],["virtual",{"fg":2,"bold":true}],[" ~Last()                                                                                           ",{}],["|",{"inverse":true}],["~                     ",{"fg":4,"bold":true}]],"46":[["[Name] test.cpp      ",{"inverse":true}],[" NORMAL ",{"bold":true}],[" ",{}],["test.cpp ",{"bold":true}],[" SecondRun2()                                                unix │ utf-8 │ cpp │  59% ",{}],[" LN  42",{"bold":true}],[":1  ",{}],[" ",{"bold":true,"inverse":true}],[" ~/NERD_tree_1 ",{"bold":true}],["       ",{}]],"47":[["                                                                                                                                                                ",{}]]},"cursor":{"x":27,"y":35,"visible":true}}],[0.017602,{"lines":{"47":[["                                                                                                                                                     k          ",{}]]},"cursor":{"visible":false}}],[0.026911,{"lines":{"32":[["~                   ",{"fg":4,"bold":true}],["|",{"inverse":true}],["  ",{"fg":6,"bg":0,"bold":true}],[" 39 ",{"fg":3,"bold":true}],["    ",{}],["{",{"bg":6}],["                                                                                                         ",{}],["|",{"inverse":true}],["~                     ",{"fg":4,"bold":true}]],"34":[["~                   ",{"fg":4,"bold":true}],["|",{"inverse":true}],["  ",{"fg":6,"bg":0,"bold":true}],[" 41 ",{"fg":3,"bold":true}],["    ",{"underline":true}],["}",{"bg":6}],["                                                                                                         ",{"underline":true}],["|",{"inverse":true}],["~                     ",{"fg":4,"bold":true}]],"35":[["~                   ",{"fg":4,"bold":true}],["|",{"inverse":true}],["  ",{"fg":6,"bg":0,"bold":true}],[" 42 ",{"fg":3,"bold":true}],["                                                                                                              ",{}],["|",{"inverse":true}],["~                     ",{"fg":4,"bold":true}]],"46":[["[Name] test.cpp      ",{"inverse":true}],[" NORMAL ",{"bold":true}],[" ",{}],["test.cpp ",{"bold":true}],[" SecondRun2()                                                unix │ utf-8 │ cpp │  57% ",{}],[" LN  41",{"bold":true}],[":5  ",{}],[" ",{"bold":true,"inverse":true}],[" ~/NERD_tree_1 ",{"bold":true}],["       ",{}]],"47":[["                                                                                                                                                                ",{}]]},"cursor":{"x":31,"y":34,"visible":true}}],[0.032441,{"lines":{"47":[["                                                                                                                                                     j          ",{}]]},"cursor":{"visible":false}}],[0.026673,{"lines":{"32":[["~                   ",{"fg":4,"bold":true}],["|",{"inverse":true}],["  ",{"fg":6,"bg":0,"bold":true}],[" 39 ",{"fg":3,"bold":true}],["    {                                                                                                         ",{}],["|",{"inverse":true}],["~                     ",{"fg":4,"bold":true}]],"34":[["~                   ",{"fg":4,"bold":true}],["|",{"inverse":true}],["  ",{"fg":6,"bg":0,"bold":true}],[" 41 ",{"fg":3,"bold":true}],["    }                                                                                                         ",{}],["|",{"inverse":true}],["~                     ",{"fg":4,"bold":true}]],"35":[["~                   ",{"fg":4,"bold":true}],["|",{"inverse":true}],["  ",{"fg":6,"bg":0,"bold":true}],[" 42 ",{"fg":3,"bold":true}],["                                                                                                              ",{"underline":true}],["|",{"inverse":true}],["~                     ",{"fg":4,"bold":true}]],"46":[["[Name] test.cpp      ",{"inverse":true}],[" NORMAL ",{"bold":true}],[" ",{}],["test.cpp ",{"bold":true}],[" SecondRun2()                                                unix │ utf-8 │ cpp │  59% ",{}],[" LN  42",{"bold":true}],[":1  ",{}],[" ",{"bold":true,"inverse":true}],[" ~/NERD_tree_1 ",{"bold":true}],["       ",{}]],"47":[["                                                                                                                                                                ",{}]]},"cursor":{"x":27,"y":35,"visible":true}}],[0.22344,{"lines":{"47":[["                                                                                                                                                     j          ",{}]]},"cursor":{"visible":false}}],[0.021402,{"lines":{"35":[["~                   ",{"fg":4,"bold":true}],["|",{"inverse":true}],["  ",{"fg":6,"bg":0,"bold":true}],[" 42 ",{"fg":3,"bold":true}],["                                                                                                              ",{}],["|",{"inverse":true}],["~                     ",{"fg":4,"bold":true}]],"36":[["~                   ",{"fg":4,"bold":true}],["|",{"inverse":true}],["  ",{"fg":6,"bg":0,"bold":true}],[" 43 ",{"fg":3,"bold":true}],["    ",{"underline":true}],["virtual",{"fg":2,"bold":true,"underline":true}],[" ~Last()                                                                                           ",{"underline":true}],["|",{"inverse":true}],["~                     ",{"fg":4,"bold":true}]],"46":[["[Name] test.cpp      ",{"inverse":true}],[" NORMAL ",{"bold":true}],[" ",{}],["test.cpp ",{"bold":true}],[" ~Last()                                                     unix │ utf-8 │ cpp │  60% ",{}],[" LN  43",{"bold":true}],[":11 ",{}],[" ",{"bold":true,"inverse":true}],[" ~/NERD_tree_1 ",{"bold":true}],["       ",{}]],"47":[["                                                                                                                                                                ",{}]]},"cursor":{"x":37,"y":36,"visible":true}}],[0.008680999999999999,{"lines":{"47":[["                                                                                                                                                     j          ",{}]]},"cursor":{"visible":false}}],[0.04482,{"lines":{"36":[["~                   ",{"fg":4,"bold":true}],["|",{"inverse":true}],["  ",{"fg":6,"bg":0,"bold":true}],[" 43 ",{"fg":3,"bold":true}],["    ",{}],["virtual",{"fg":2,"bold":true}],[" ~Last()                                                                                           ",{}],["|",{"inverse":true}],["~                     ",{"fg":4,"bold":true}]],"37":[["~                   ",{"fg":4,"bold":true}],["|",{"inverse":true}],["  ",{"fg":6,"bg":0,"bold":true}],[" 44 ",{"fg":3,"bold":true}],["    ",{"underline":true}],["{",{"bg":6}],["                                                                                                         ",{"underline":true}],["|",{"inverse":true}],["~                     ",{"fg":4,"bold":true}]],"39":[["~                   ",{"fg":4,"bold":true}],["|",{"inverse":true}],["  ",{"fg":6,"bg":0,"bold":true}],[" 46 ",{"fg":3,"bold":true}],["    ",{}],["}",{"bg":6}],["                                                                                                         ",{}],["|",{"inverse":true}],["~                     ",{"fg":4,"bold":true}]],"46":[["[Name] test.cpp      ",{"inverse":true}],[" NORMAL ",{"bold":true}],[" ",{}],["test.cpp ",{"bold":true}],[" ~Last()                                                     unix │ utf-8 │ cpp │  61% ",{}],[" LN  44",{"bold":true}],[":5  ",{}],[" ",{"bold":true,"inverse":true}],[" ~/NERD_tree_1 ",{"bold":true}],["       ",{}]],"47":[["                                                                                                                                                                ",{}]]},"cursor":{"x":31,"y":37,"visible":true}}],[0.012201,{"lines":{"37":[["~                   ",{"fg":4,"bold":true}],["|",{"inverse":true}],["  ",{"fg":6,"bg":0,"bold":true}],[" 44 ",{"fg":3,"bold":true}],["    {                                                                                                         ",{}],["|",{"inverse":true}],["~                     ",{"fg":4,"bold":true}]],"38":[["~                   ",{"fg":4,"bold":true}],["|",{"inverse":true}],["  ",{"fg":6,"bg":0,"bold":true}],[" 45 ",{"fg":3,"bold":true}],["                                                                                                              ",{"underline":true}],["|",{"inverse":true}],["~                     ",{"fg":4,"bold":true}]],"39":[["~                   ",{"fg":4,"bold":true}],["|",{"inverse":true}],["  ",{"fg":6,"bg":0,"bold":true}],[" 46 ",{"fg":3,"bold":true}],["    }                                                                                                         ",{}],["|",{"inverse":true}],["~                     ",{"fg":4,"bold":true}]],"46":[["[Name] test.cpp      ",{"inverse":true}],[" NORMAL ",{"bold":true}],[" ",{}],["test.cpp ",{"bold":true}],[" ~Last()                                                     unix │ utf-8 │ cpp │  63% ",{}],[" LN  45",{"bold":true}],[":4  ",{}],[" ",{"bold":true,"inverse":true}],[" ~/NERD_tree_1 ",{"bold":true}],["       ",{}]]},"cursor":{"x":30,"y":38}}],[0.009905000000000001,{"lines":{"47":[["                                                                                                                                                     j          ",{}]]},"cursor":{"visible":false}}],[0.029602,{"lines":{"37":[["~                   ",{"fg":4,"bold":true}],["|",{"inverse":true}],["  ",{"fg":6,"bg":0,"bold":true}],[" 44 ",{"fg":3,"bold":true}],["    ",{}],["{",{"bg":6}],["                                                                                                         ",{}],["|",{"inverse":true}],["~                     ",{"fg":4,"bold":true}]],"38":[["~                   ",{"fg":4,"bold":true}],["|",{"inverse":true}],["  ",{"fg":6,"bg":0,"bold":true}],[" 45 ",{"fg":3,"bold":true}],["                                                                                                              ",{}],["|",{"inverse":true}],["~                     ",{"fg":4,"bold":true}]],"39":[["~                   ",{"fg":4,"bold":true}],["|",{"inverse":true}],["  ",{"fg":6,"bg":0,"bold":true}],[" 46 ",{"fg":3,"bold":true}],["    ",{"underline":true}],["}",{"bg":6}],["                                                                                                         ",{"underline":true}],["|",{"inverse":true}],["~                     ",{"fg":4,"bold":true}]],"46":[["[Name] test.cpp      ",{"inverse":true}],[" NORMAL ",{"bold":true}],[" ",{}],["test.cpp ",{"bold":true}],[" ~Last()                                                     unix │ utf-8 │ cpp │  64% ",{}],[" LN  46",{"bold":true}],[":5  ",{}],[" ",{"bold":true,"inverse":true}],[" ~/NERD_tree_1 ",{"bold":true}],["       ",{}]],"47":[["                                                                                                                                                                ",{}]]},"cursor":{"x":31,"y":39,"visible":true}}],[0.016096,{"lines":{"37":[["~                   ",{"fg":4,"bold":true}],["|",{"inverse":true}],["  ",{"fg":6,"bg":0,"bold":true}],[" 44 ",{"fg":3,"bold":true}],["    {                                                                                                         ",{}],["|",{"inverse":true}],["~                     ",{"fg":4,"bold":true}]],"39":[["~                   ",{"fg":4,"bold":true}],["|",{"inverse":true}],["  ",{"fg":6,"bg":0,"bold":true}],[" 46 ",{"fg":3,"bold":true}],["    }                                                                                                         ",{}],["|",{"inverse":true}],["~                     ",{"fg":4,"bold":true}]],"40":[["~                   ",{"fg":4,"bold":true}],["|",{"inverse":true}],["  ",{"fg":6,"bg":0,"bold":true}],[" 47 ",{"fg":3,"bold":true}],["                                                                                                              ",{"underline":true}],["|",{"inverse":true}],["~                     ",{"fg":4,"bold":true}]],"46":[["[Name] test.cpp      ",{"inverse":true}],[" NORMAL ",{"bold":true}],[" ",{}],["test.cpp ",{"bold":true}],[" ~Last()                                                     unix │ utf-8 │ cpp │  66% ",{}],[" LN  47",{"bold":true}],[":1  ",{}],[" ",{"bold":true,"inverse":true}],[" ~/NERD_tree_1 ",{"bold":true}],["       ",{}]]},"cursor":{"x":27,"y":40}}],[0.621857,{"lines":{"0":[["\" Press <F1> for hel",{"fg":6,"bold":true}],["|",{"inverse":true}],["  ",{"fg":6,"bg":0,"bold":true}],[" 26 ",{"fg":3,"bold":true}],["                                                                                                              ",{}],["|",{"inverse":true}],["  1 ",{"fg":3,"bold":true}],["\" Press ? for help",{"fg":5,"bold":true}]],"1":[["                    ",{}],["|",{"inverse":true}],["  ",{"fg":6,"bg":0,"bold":true}],[" 27 ",{"fg":3,"bold":true}],["    ",{}],["virtual",{"fg":2,"bold":true}],[" ",{}],["void",{"fg":2,"bold":true}],[" FirstRun2(",{}],["void",{"fg":2,"bold":true}],[")                                                                              ",{}],["|",{"inverse":true}],["  2 ",{"fg":3,"bold":true}],["                  ",{}]],"2":[["▼",{"fg":3,"bold":true}],[" First",{"fg":5,"bold":true}],[" : ",{}],["struct",{"fg":2,"bold":true}],["    ",{}],["|",{"inverse":true}],["  ",{"fg":6,"bg":0,"bold":true}],[" 28 ",{"fg":3,"bold":true}],["    {                                                                                                         ",{}],["|",{"inverse":true}],["  3 ",{"fg":3,"bold":true}],[".. (up a dir)",{"fg":6,"bold":true}],["     ",{}]],"3":[["    [prototypes]",{"fg":6,"bold":true}],["    ",{}],["|",{"inverse":true}],["  ",{"fg":6,"bg":0,"bold":true}],[" 29 ",{"fg":3,"bold":true}],["    ",{}],["|",{"fg":2,"bold":true}],["   cout << ",{}],["\"First2\"",{"fg":5,"bold":true}],[" << endl;                                                                             ",{}],["|",{"inverse":true}],["  4 /root/",{"fg":3,"bold":true}],["            ",{}]],"4":[["   ",{}],["+",{"fg":2,"bold":true}],["FirstRun(void)  ",{}],["|",{"inverse":true}],["  ",{"fg":6,"bg":0,"bold":true}],[" 30 ",{"fg":3,"bold":true}],["    }                                                                                                         ",{}],["|",{"inverse":true}],["  5 ",{"fg":3,"bold":true}],["▸ diary/",{"fg":6,"bold":true,"underline":true}],["          ",{"underline":true}]],"5":[["   ",{}],["+",{"fg":2,"bold":true}],["FirstRun2(void) ",{}],["|",{"inverse":true}],["  ",{"fg":6,"bg":0,"bold":true}],[" 31 ",{"fg":3,"bold":true}],["                                                                                                              ",{}],["|",{"inverse":true}],["  6 ",{"fg":3,"bold":true}],["▸ temp/",{"fg":6,"bold":true}],["           ",{}]]},"cursor":{"x":121,"y":5,"visible":false}}],[0.016421,{"lines":{"6":[["                    ",{}],["|",{"inverse":true}],["  ",{"fg":6,"bg":0,"bold":true}],[" 32 ",{"fg":3,"bold":true}],["    ",{}],["// 基类Second虚方法",{"fg":6,"bold":true}],["                                                                                       ",{}],["|",{"inverse":true}],["  7 ",{"fg":3,"bold":true}],["  anaconda-ks.cfg ",{}]],"7":[["▼",{"fg":3,"bold":true}],[" Last",{"fg":5,"bold":true}],[" : ",{}],["struct",{"fg":2,"bold":true}],["     ",{}],["|",{"inverse":true}],["  ",{"fg":6,"bg":0,"bold":true}],[" 33 ",{"fg":3,"bold":true}],["    ",{}],["virtual",{"fg":2,"bold":true}],[" ",{}],["void",{"fg":2,"bold":true}],[" SecondRun(",{}],["void",{"fg":2,"bold":true}],[")                                                                              ",{}],["|",{"inverse":true}],["  8 ",{"fg":3,"bold":true}],["  initial-setup-ks",{}]],"8":[["    [functions]",{"fg":6,"bold":true}],["     ",{}],["|",{"inverse":true}],["  ",{"fg":6,"bg":0,"bold":true}],[" 34 ",{"fg":3,"bold":true}],["    {                                                                                                         ",{}],["|",{"inverse":true}],["  9 ",{"fg":3,"bold":true}],["  test.c          ",{}]],"9":[["   ",{}],["+",{"fg":2,"bold":true}],["FirstRun(void)  ",{}],["|",{"inverse":true}],["  ",{"fg":6,"bg":0,"bold":true}],[" 35 ",{"fg":3,"bold":true}],["    ",{}],["|",{"fg":2,"bold":true}],["   cout <<",{}],["\"Second\"",{"fg":5,"bold":true}],[" << endl;                                                                              ",{}],["|",{"inverse":true}],[" 10 ",{"fg":3,"bold":true}],["  test.cpp        ",{}]],"10":[["   ",{}],["+",{"fg":2,"bold":true}],["FirstRun2(void) ",{}],["|",{"inverse":true}],["  ",{"fg":6,"bg":0,"bold":true}],[" 36 ",{"fg":3,"bold":true}],["    }                                                                                                         ",{}],["|",{"inverse":true}],["~                     ",{"fg":4,"bold":true}]],"11":[["   ",{}],["+",{"fg":2,"bold":true}],["~Last()         ",{}],["|",{"inverse":true}],["  ",{"fg":6,"bg":0,"bold":true}],[" 37 ",{"fg":3,"bold":true}],["                                                                                                              ",{}],["|",{"inverse":true}],["~                     ",{"fg":4,"bold":true}]],"12":[["   ",{}],["+",{"fg":2,"bold":true}],["SecondRun(void) ",{}],["|",{"inverse":true}],["  ",{"fg":6,"bg":0,"bold":true}],[" 38 ",{"fg":3,"bold":true}],["    ",{}],["virtual",{"fg":2,"bold":true}],[" ",{}],["void",{"fg":2,"bold":true}],[" SecondRun2(",{}],["void",{"fg":2,"bold":true}],[")                                                                             ",{}],["|",{"inverse":true}],["~                     ",{"fg":4,"bold":true}]],"13":[["   ",{}],["+",{"fg":2,"bold":true}],["SecondRun2(void)",{}],["|",{"inverse":true}],["  ",{"fg":6,"bg":0,"bold":true}],[" 39 ",{"fg":3,"bold":true}],["    {                                                                                                         ",{}],["|",{"inverse":true}],["~                     ",{"fg":4,"bold":true}]],"14":[["                    ",{}],["|",{"inverse":true}],["  ",{"fg":6,"bg":0,"bold":true}],[" 40 ",{"fg":3,"bold":true}],["    ",{}],["|",{"fg":2,"bold":true}],["   cout <<",{}],["\"Second2\"",{"fg":5,"bold":true}],[" << endl;                                                                             ",{}],["|",{"inverse":true}],["~                     ",{"fg":4,"bold":true}]],"15":[["▼",{"fg":3,"bold":true}],[" Second",{"fg":5,"bold":true}],[" : ",{}],["struct",{"fg":2,"bold":true}],["   ",{}],["|",{"inverse":true}],["  ",{"fg":6,"bg":0,"bold":true}],[" 41 ",{"fg":3,"bold":true}],["    }                                                                                                         ",{}],["|",{"inverse":true}],["~                     ",{"fg":4,"bold":true}]],"16":[["    [prototypes]",{"fg":6,"bold":true}],["    ",{}],["|",{"inverse":true}],["  ",{"fg":6,"bg":0,"bold":true}],[" 42 ",{"fg":3,"bold":true}],["                                                                                                              ",{}],["|",{"inverse":true}],["~                     ",{"fg":4,"bold":true}]],"17":[["   ",{}],["+",{"fg":2,"bold":true}],["SecondRun(void) ",{}],["|",{"inverse":true}],["  ",{"fg":6,"bg":0,"bold":true}],[" 43 ",{"fg":3,"bold":true}],["    ",{}],["virtual",{"fg":2,"bold":true}],[" ~Last()                                                                                           ",{}],["|",{"inverse":true}],["~                     ",{"fg":4,"bold":true}]],"18":[["   ",{}],["+",{"fg":2,"bold":true}],["SecondRun2(void)",{}],["|",{"inverse":true}],["  ",{"fg":6,"bg":0,"bold":true}],[" 44 ",{"fg":3,"bold":true}],["    {                                                                                                         ",{}],["|",{"inverse":true}],["~                     ",{"fg":4,"bold":true}]],"19":[["                    ",{}],["|",{"inverse":true}],["  ",{"fg":6,"bg":0,"bold":true}],[" 45 ",{"fg":3,"bold":true}],["                                                                                                              ",{}],["|",{"inverse":true}],["~                     ",{"fg":4,"bold":true}]],"20":[["▼",{"fg":3,"bold":true}],[" ",{}],["functions",{"fg":6,"bold":true}],["         ",{}],["|",{"inverse":true}],["  ",{"fg":6,"bg":0,"bold":true}],[" 46 ",{"fg":3,"bold":true}],["    }                                                                                                         ",{}],["|",{"inverse":true}],["~                     ",{"fg":4,"bold":true}]],"21":[["    ",{"underline":true}],["main",{"fg":0,"bg":3}],["(int argc, c",{"underline":true}],["|",{"inverse":true}],["  ",{"fg":6,"bg":0,"bold":true}],[" 47 ",{"fg":3,"bold":true}],["                                                                                                              ",{"underline":true}],["|",{"inverse":true}],["~                     ",{"fg":4,"bold":true}]],"22":[["~                   ",{"fg":4,"bold":true}],["|",{"inverse":true}],["  ",{"fg":6,"bg":0,"bold":true}],[" 48 ",{"fg":3,"bold":true}],["};                                                                                                            ",{}],["|",{"inverse":true}],["~                     ",{"fg":4,"bold":true}]],"23":[["~                   ",{"fg":4,"bold":true}],["|",{"inverse":true}],["  ",{"fg":6,"bg":0,"bold":true}],[" 49 ",{"fg":3,"bold":true}],["                                                                                                              ",{}],["|",{"inverse":true}],["~                     ",{"fg":4,"bold":true}]],"24":[["~                   ",{"fg":4,"bold":true}],["|",{"inverse":true}],["  ",{"fg":6,"bg":0,"bold":true}],[" 50 ",{"fg":3,"bold":true}],["                                                                                                              ",{}],["|",{"inverse":true}],["~                     ",{"fg":4,"bold":true}]],"25":[["~                   ",{"fg":4,"bold":true}],["|",{"inverse":true}],[">>",{"fg":7,"bg":1,"bold":true}],[" 51 ",{"fg":3,"bold":true}],["int",{"fg":2,"bold":true}],[" main(",{}],["int",{"fg":2,"bold":true}],[" ",{}],["argc",{"bg":1}],[", ",{}],["char",{"fg":2,"bold":true}],["* ",{}],["argv",{"bg":1}],["[])                                                                              ",{}],["|",{"inverse":true}],["~                     ",{"fg":4,"bold":true}]],"26":[["~                   ",{"fg":4,"bold":true}],["|",{"inverse":true}],["  ",{"fg":6,"bg":0,"bold":true}],[" 52 ",{"fg":3,"bold":true}],["{                                                                                                             ",{}],["|",{"inverse":true}],["~                     ",{"fg":4,"bold":true}]],"27":[["~                   ",{"fg":4,"bold":true}],["|",{"inverse":true}],["                                                                                                                    ",{}],["|",{"inverse":true}],["~                     ",{"fg":4,"bold":true}]],"28":[["~                   ",{"fg":4,"bold":true}],["|",{"inverse":true}],["                                                                                                                    ",{}],["|",{"inverse":true}],["~                     ",{"fg":4,"bold":true}]],"29":[["~                   ",{"fg":4,"bold":true}],["|",{"inverse":true}],["                                                                                                                    ",{}],["|",{"inverse":true}],["~                     ",{"fg":4,"bold":true}]],"30":[["~                   ",{"fg":4,"bold":true}],["|",{"inverse":true}],["                                                                                                                    ",{}],["|",{"inverse":true}],["~                     ",{"fg":4,"bold":true}]],"31":[["~                   ",{"fg":4,"bold":true}],["|",{"inverse":true}],["                                                                                                                    ",{}],["|",{"inverse":true}],["~                     ",{"fg":4,"bold":true}]]},"cursor":{"x":118,"y":31}}],[0.012782,{"lines":{"21":[["    ",{"underline":true}],["main",{"fg":0,"bg":3}],["(int argc, c",{"underline":true}],["|",{"inverse":true}],["  ",{"fg":6,"bg":0,"bold":true}],[" 47 ",{"fg":3,"bold":true}],["                                                                                                              ",{}],["|",{"inverse":true}],["~                     ",{"fg":4,"bold":true}]],"27":[["~                   ",{"fg":4,"bold":true}],["|",{"inverse":true}],["  ",{"fg":6,"bg":0,"bold":true}],[" 53 ",{"fg":3,"bold":true}],["    Last* pLast = ",{}],["new",{"fg":3,"bold":true}],[" Last();                                                                                 ",{}],["|",{"inverse":true}],["~                     ",{"fg":4,"bold":true}]],"28":[["~                   ",{"fg":4,"bold":true}],["|",{"inverse":true}],["  ",{"fg":6,"bg":0,"bold":true}],[" 54 ",{"fg":3,"bold":true}],["    vector<",{}],["int",{"fg":2,"bold":true}],["> v;                                                                                            ",{}],["|",{"inverse":true}],["~                     ",{"fg":4,"bold":true}]],"29":[["~                   ",{"fg":4,"bold":true}],["|",{"inverse":true}],["  ",{"fg":6,"bg":0,"bold":true}],[" 55 ",{"fg":3,"bold":true}],["    v.begin();                                                                                                ",{}],["|",{"inverse":true}],["~                     ",{"fg":4,"bold":true}]],"30":[["~                   ",{"fg":4,"bold":true}],["|",{"inverse":true}],[">>",{"fg":7,"bg":1,"bold":true}],[" 56 ",{"fg":3,"bold":true}],["    Second* pSecond1 = ",{}],["reinterpret_cast",{"fg":3,"bg":1,"bold":true}],["<Second*>(pLast)",{"bg":1}],[";                                                      ",{}],["|",{"inverse":true}],["~                     ",{"fg":4,"bold":true}]],"31":[["~                   ",{"fg":4,"bold":true}],["|",{"inverse":true}],["  ",{"fg":6,"bg":0,"bold":true}],[" 57 ",{"fg":3,"bold":true}],["    pSecond1->SecondRun2();                                                                                   ",{}],["|",{"inverse":true}],["~                     ",{"fg":4,"bold":true}]],"32":[["~                   ",{"fg":4,"bold":true}],["|",{"inverse":true}],["  ",{"fg":6,"bg":0,"bold":true}],[" 58 ",{"fg":3,"bold":true}],["                                                                                                              ",{}],["|",{"inverse":true}],["~                     ",{"fg":4,"bold":true}]],"33":[["~                   ",{"fg":4,"bold":true}],["|",{"inverse":true}],["  ",{"fg":6,"bg":0,"bold":true}],[" 59 ",{"fg":3,"bold":true}],["    Second* pSecond2 = pLast;                                                                                 ",{}],["|",{"inverse":true}],["~                     ",{"fg":4,"bold":true}]],"34":[["~                   ",{"fg":4,"bold":true}],["|",{"inverse":true}],["  ",{"fg":6,"bg":0,"bold":true}],[" 60 ",{"fg":3,"bold":true}],["    pSecond2->SecondRun2();                                                                                   ",{}],["|",{"inverse":true}],["~                     ",{"fg":4,"bold":true}]],"35":[["~                   ",{"fg":4,"bold":true}],["|",{"inverse":true}],["  ",{"fg":6,"bg":0,"bold":true}],[" 61 ",{"fg":3,"bold":true}],["                                                                                                              ",{}],["|",{"inverse":true}],["~                     ",{"fg":4,"bold":true}]],"36":[["~                   ",{"fg":4,"bold":true}],["|",{"inverse":true}],["  ",{"fg":6,"bg":0,"bold":true}],[" 62 ",{"fg":3,"bold":true}],["    cout << ",{}],["sizeof",{"fg":3,"bold":true}],["(Last) << endl;                                                                             ",{}],["|",{"inverse":true}],["~                     ",{"fg":4,"bold":true}]],"37":[["~                   ",{"fg":4,"bold":true}],["|",{"inverse":true}],["  ",{"fg":6,"bg":0,"bold":true}],[" 63 ",{"fg":3,"bold":true}],["                                                                                                              ",{}],["|",{"inverse":true}],["~                     ",{"fg":4,"bold":true}]],"38":[["~                   ",{"fg":4,"bold":true}],["|",{"inverse":true}],["  ",{"fg":6,"bg":0,"bold":true}],[" 64 ",{"fg":3,"bold":true}],["                                                                                                              ",{}],["|",{"inverse":true}],["~                     ",{"fg":4,"bold":true}]],"39":[["~                   ",{"fg":4,"bold":true}],["|",{"inverse":true}],["  ",{"fg":6,"bg":0,"bold":true}],[" 65 ",{"fg":3,"bold":true}],["    ",{}],["delete",{"fg":3,"bold":true}],[" pLast;                                                                                             ",{}],["|",{"inverse":true}],["~                     ",{"fg":4,"bold":true}]],"40":[["~                   ",{"fg":4,"bold":true}],["|",{"inverse":true}],["  ",{"fg":6,"bg":0,"bold":true}],[" 66 ",{"fg":3,"bold":true}],["                                                                                                              ",{}],["|",{"inverse":true}],["~                     ",{"fg":4,"bold":true}]],"41":[["~                   ",{"fg":4,"bold":true}],["|",{"inverse":true}],["  ",{"fg":6,"bg":0,"bold":true}],[" 67 ",{"fg":3,"bold":true}],["    pLast = ",{}],["NULL",{"fg":5,"bold":true}],[";                                                                                             ",{}],["|",{"inverse":true}],["~                     ",{"fg":4,"bold":true}]],"42":[["~                   ",{"fg":4,"bold":true}],["|",{"inverse":true}],["  ",{"fg":6,"bg":0,"bold":true}],[" 68 ",{"fg":3,"bold":true}],["                                                                                                              ",{}],["|",{"inverse":true}],["~                     ",{"fg":4,"bold":true}]],"43":[["~                   ",{"fg":4,"bold":true}],["|",{"inverse":true}],["  ",{"fg":6,"bg":0,"bold":true}],[" 69 ",{"fg":3,"bold":true}],["    ",{}],["return",{"fg":3,"bold":true}],[" ",{}],["0",{"fg":5,"bold":true}],[";                                                                                                 ",{}],["|",{"inverse":true}],["~                     ",{"fg":4,"bold":true}]],"44":[["~                   ",{"fg":4,"bold":true}],["|",{"inverse":true}],["  ",{"fg":6,"bg":0,"bold":true}],[" 70 ",{"fg":3,"bold":true}],["}                                                                                                             ",{}],["|",{"inverse":true}],["~                     ",{"fg":4,"bold":true}]],"45":[["~                   ",{"fg":4,"bold":true}],["|",{"inverse":true}],["  ",{"fg":6,"bg":0,"bold":true}],[" 71 ",{"fg":3,"bold":true}],["                                                                                                              ",{"underline":true}],["|",{"inverse":true}],["~                     ",{"fg":4,"bold":true}]],"46":[["[Name] test.cpp      ",{"inverse":true}],[" NORMAL ",{"bold":true}],[" ",{}],["test.cpp ",{"bold":true}],[" main()                                                      unix │ utf-8 │ cpp │ 100% ",{}],[" LN  71",{"bold":true}],[":1  ",{}],[" ",{"bold":true,"inverse":true}],[" ~/NERD_tree_1 ",{"bold":true}],["       ",{}]]},"cursor":{"x":27,"y":45,"visible":true}}],[0.443313,{"lines":{"47":[["                                                                                                                                                     j          ",{}]]},"cursor":{"visible":false}}],[0.001994,{"lines":{"47":[["                                                                                                                                                                ",{}]]},"cursor":{"visible":true}}],[0.248076,{"lines":{"47":[["                                                                                                                                                     j          ",{}]]},"cursor":{"visible":false}}],[0.002049,{"lines":{"47":[["                                                                                                                                                                ",{}]]},"cursor":{"visible":true}}],[0.027888,{"lines":{"47":[["                                                                                                                                                     j          ",{}]]},"cursor":{"visible":false}}],[0.02922,{"lines":{"47":[["                                                                                                                                                                ",{}]]},"cursor":{"visible":true}}],[0.007597,{}],[0.049797,{}],[0.01693,{}],[0.040471,{}],[0.108018,{"lines":{"47":[["                                                                                                                                                     k          ",{}]]},"cursor":{"visible":false}}],[0.019783,{"lines":{"26":[["~                   ",{"fg":4,"bold":true}],["|",{"inverse":true}],["  ",{"fg":6,"bg":0,"bold":true}],[" 52 ",{"fg":3,"bold":true}],["{",{"bg":6}],["                                                                                                             ",{}],["|",{"inverse":true}],["~                     ",{"fg":4,"bold":true}]],"44":[["~                   ",{"fg":4,"bold":true}],["|",{"inverse":true}],["  ",{"fg":6,"bg":0,"bold":true}],[" 70 ",{"fg":3,"bold":true}],["}",{"bg":6}],["                                                                                                             ",{"underline":true}],["|",{"inverse":true}],["~                     ",{"fg":4,"bold":true}]],"45":[["~                   ",{"fg":4,"bold":true}],["|",{"inverse":true}],["  ",{"fg":6,"bg":0,"bold":true}],[" 71 ",{"fg":3,"bold":true}],["                                                                                                              ",{}],["|",{"inverse":true}],["~                     ",{"fg":4,"bold":true}]],"46":[["[Name] test.cpp      ",{"inverse":true}],[" NORMAL ",{"bold":true}],[" ",{}],["test.cpp ",{"bold":true}],[" main()                                                      unix │ utf-8 │ cpp │  98% ",{}],[" LN  70",{"bold":true}],[":1  ",{}],[" ",{"bold":true,"inverse":true}],[" ~/NERD_tree_1 ",{"bold":true}],["       ",{}]],"47":[["                                                                                                                                                                ",{}]]},"cursor":{"y":44,"visible":true}}],[0.230343,{"lines":{"47":[["                                                                                                                                                     k          ",{}]]},"cursor":{"visible":false}}],[0.027246,{"lines":{"26":[["~                   ",{"fg":4,"bold":true}],["|",{"inverse":true}],["  ",{"fg":6,"bg":0,"bold":true}],[" 52 ",{"fg":3,"bold":true}],["{                                                                                                             ",{}],["|",{"inverse":true}],["~                     ",{"fg":4,"bold":true}]],"43":[["~                   ",{"fg":4,"bold":true}],["|",{"inverse":true}],["  ",{"fg":6,"bg":0,"bold":true}],[" 69 ",{"fg":3,"bold":true}],["    ",{"underline":true}],["return",{"fg":3,"bold":true,"underline":true}],[" ",{"underline":true}],["0",{"fg":5,"bold":true,"underline":true}],[";                                                                                                 ",{"underline":true}],["|",{"inverse":true}],["~                     ",{"fg":4,"bold":true}]],"44":[["~                   ",{"fg":4,"bold":true}],["|",{"inverse":true}],["  ",{"fg":6,"bg":0,"bold":true}],[" 70 ",{"fg":3,"bold":true}],["}                                                                                                             ",{}],["|",{"inverse":true}],["~                     ",{"fg":4,"bold":true}]],"46":[["[Name] test.cpp      ",{"inverse":true}],[" NORMAL ",{"bold":true}],[" ",{}],["test.cpp ",{"bold":true}],[" main()                                                      unix │ utf-8 │ cpp │  97% ",{}],[" LN  69",{"bold":true}],[":1  ",{}],[" ",{"bold":true,"inverse":true}],[" ~/NERD_tree_1 ",{"bold":true}],["       ",{}]],"47":[["                                                                                                                                                                ",{}]]},"cursor":{"y":43,"visible":true}}],[0.002671,{"lines":{"47":[["                                                                                                                                                     k          ",{}]]},"cursor":{"visible":false}}],[0.041586,{"lines":{"42":[["~                   ",{"fg":4,"bold":true}],["|",{"inverse":true}],["  ",{"fg":6,"bg":0,"bold":true}],[" 68 ",{"fg":3,"bold":true}],["                                                                                                              ",{"underline":true}],["|",{"inverse":true}],["~                     ",{"fg":4,"bold":true}]],"43":[["~                   ",{"fg":4,"bold":true}],["|",{"inverse":true}],["  ",{"fg":6,"bg":0,"bold":true}],[" 69 ",{"fg":3,"bold":true}],["    ",{}],["return",{"fg":3,"bold":true}],[" ",{}],["0",{"fg":5,"bold":true}],[";                                                                                                 ",{}],["|",{"inverse":true}],["~                     ",{"fg":4,"bold":true}]],"46":[["[Name] test.cpp      ",{"inverse":true}],[" NORMAL ",{"bold":true}],[" ",{}],["test.cpp ",{"bold":true}],[" main()                                                      unix │ utf-8 │ cpp │  95% ",{}],[" LN  68",{"bold":true}],[":1  ",{}],[" ",{"bold":true,"inverse":true}],[" ~/NERD_tree_1 ",{"bold":true}],["       ",{}]],"47":[["                                                                                                                                                                ",{}]]},"cursor":{"y":42,"visible":true}}],[0.012288,{"lines":{"41":[["~                   ",{"fg":4,"bold":true}],["|",{"inverse":true}],["  ",{"fg":6,"bg":0,"bold":true}],[" 67 ",{"fg":3,"bold":true}],["    pLast = ",{"underline":true}],["NULL",{"fg":5,"bold":true,"underline":true}],[";                                                                                             ",{"underline":true}],["|",{"inverse":true}],["~                     ",{"fg":4,"bold":true}]],"42":[["~                   ",{"fg":4,"bold":true}],["|",{"inverse":true}],["  ",{"fg":6,"bg":0,"bold":true}],[" 68 ",{"fg":3,"bold":true}],["                                                                                                              ",{}],["|",{"inverse":true}],["~                     ",{"fg":4,"bold":true}]],"46":[["[Name] test.cpp      ",{"inverse":true}],[" NORMAL ",{"bold":true}],[" ",{}],["test.cpp ",{"bold":true}],[" main()                                                      unix │ utf-8 │ cpp │  94% ",{}],[" LN  67",{"bold":true}],[":1  ",{}],[" ",{"bold":true,"inverse":true}],[" ~/NERD_tree_1 ",{"bold":true}],["       ",{}]]},"cursor":{"y":41}}],[0.013053,{"lines":{"47":[["                                                                                                                                                     k          ",{}]]},"cursor":{"visible":false}}],[0.023864,{"lines":{"40":[["~                   ",{"fg":4,"bold":true}],["|",{"inverse":true}],["  ",{"fg":6,"bg":0,"bold":true}],[" 66 ",{"fg":3,"bold":true}],["                                                                                                              ",{"underline":true}],["|",{"inverse":true}],["~                     ",{"fg":4,"bold":true}]],"41":[["~                   ",{"fg":4,"bold":true}],["|",{"inverse":true}],["  ",{"fg":6,"bg":0,"bold":true}],[" 67 ",{"fg":3,"bold":true}],["    pLast = ",{}],["NULL",{"fg":5,"bold":true}],[";                                                                                             ",{}],["|",{"inverse":true}],["~                     ",{"fg":4,"bold":true}]],"46":[["[Name] test.cpp      ",{"inverse":true}],[" NORMAL ",{"bold":true}],[" ",{}],["test.cpp ",{"bold":true}],[" main()                                                      unix │ utf-8 │ cpp │  92% ",{}],[" LN  66",{"bold":true}],[":1  ",{}],[" ",{"bold":true,"inverse":true}],[" ~/NERD_tree_1 ",{"bold":true}],["       ",{}]],"47":[["                                                                                                                                                                ",{}]]},"cursor":{"y":40,"visible":true}}],[0.009618,{"lines":{"47":[["                                                                                                                                                     k          ",{}]]},"cursor":{"visible":false}}],[0.010791,{"lines":{"39":[["~                   ",{"fg":4,"bold":true}],["|",{"inverse":true}],["  ",{"fg":6,"bg":0,"bold":true}],[" 65 ",{"fg":3,"bold":true}],["    ",{"underline":true}],["delete",{"fg":3,"bold":true,"underline":true}],[" pLast;                                                                                             ",{"underline":true}],["|",{"inverse":true}],["~                     ",{"fg":4,"bold":true}]],"40":[["~                   ",{"fg":4,"bold":true}],["|",{"inverse":true}],["  ",{"fg":6,"bg":0,"bold":true}],[" 66 ",{"fg":3,"bold":true}],["                                                                                                              ",{}],["|",{"inverse":true}],["~                     ",{"fg":4,"bold":true}]],"46":[["[Name] test.cpp      ",{"inverse":true}],[" NORMAL ",{"bold":true}],[" ",{}],["test.cpp ",{"bold":true}],[" main()                                                      unix │ utf-8 │ cpp │  91% ",{}],[" LN  65",{"bold":true}],[":1  ",{}],[" ",{"bold":true,"inverse":true}],[" ~/NERD_tree_1 ",{"bold":true}],["       ",{}]],"47":[["                                                                                                                                                                ",{}]]},"cursor":{"y":39,"visible":true}}],[0.03181,{"lines":{"47":[["                                                                                                                                                     k          ",{}]]},"cursor":{"visible":false}}],[0.00723,{"lines":{"38":[["~                   ",{"fg":4,"bold":true}],["|",{"inverse":true}],["  ",{"fg":6,"bg":0,"bold":true}],[" 64 ",{"fg":3,"bold":true}],["                                                                                                              ",{"underline":true}],["|",{"inverse":true}],["~                     ",{"fg":4,"bold":true}]],"39":[["~                   ",{"fg":4,"bold":true}],["|",{"inverse":true}],["  ",{"fg":6,"bg":0,"bold":true}],[" 65 ",{"fg":3,"bold":true}],["    ",{}],["delete",{"fg":3,"bold":true}],[" pLast;                                                                                             ",{}],["|",{"inverse":true}],["~                     ",{"fg":4,"bold":true}]],"46":[["[Name] test.cpp      ",{"inverse":true}],[" NORMAL ",{"bold":true}],[" ",{}],["test.cpp ",{"bold":true}],[" main()                                                      unix │ utf-8 │ cpp │  90% ",{}],[" LN  64",{"bold":true}],[":1  ",{}],[" ",{"bold":true,"inverse":true}],[" ~/NERD_tree_1 ",{"bold":true}],["       ",{}]],"47":[["                                                                                                                                                                ",{}]]},"cursor":{"y":38,"visible":true}}],[0.017264,{"lines":{"47":[["                                                                                                                                                     k          ",{}]]},"cursor":{"visible":false}}],[0.023839,{"lines":{"37":[["~                   ",{"fg":4,"bold":true}],["|",{"inverse":true}],["  ",{"fg":6,"bg":0,"bold":true}],[" 63 ",{"fg":3,"bold":true}],["                                                                                                              ",{"underline":true}],["|",{"inverse":true}],["~                     ",{"fg":4,"bold":true}]],"38":[["~                   ",{"fg":4,"bold":true}],["|",{"inverse":true}],["  ",{"fg":6,"bg":0,"bold":true}],[" 64 ",{"fg":3,"bold":true}],["                                                                                                              ",{}],["|",{"inverse":true}],["~                     ",{"fg":4,"bold":true}]],"46":[["[Name] test.cpp      ",{"inverse":true}],[" NORMAL ",{"bold":true}],[" ",{}],["test.cpp ",{"bold":true}],[" main()                                                      unix │ utf-8 │ cpp │  88% ",{}],[" LN  63",{"bold":true}],[":1  ",{}],[" ",{"bold":true,"inverse":true}],[" ~/NERD_tree_1 ",{"bold":true}],["       ",{}]],"47":[["                                                                                                                                                                ",{}]]},"cursor":{"y":37,"visible":true}}],[0.013467,{"lines":{"47":[["                                                                                                                                                     k          ",{}]]},"cursor":{"visible":false}}],[0.007285,{"lines":{"36":[["~                   ",{"fg":4,"bold":true}],["|",{"inverse":true}],["  ",{"fg":6,"bg":0,"bold":true}],[" 62 ",{"fg":3,"bold":true}],["    cout << ",{"underline":true}],["sizeof",{"fg":3,"bold":true,"underline":true}],["(Last) << endl;                                                                             ",{"underline":true}],["|",{"inverse":true}],["~                     ",{"fg":4,"bold":true}]],"37":[["~                   ",{"fg":4,"bold":true}],["|",{"inverse":true}],["  ",{"fg":6,"bg":0,"bold":true}],[" 63 ",{"fg":3,"bold":true}],["                                                                                                              ",{}],["|",{"inverse":true}],["~                     ",{"fg":4,"bold":true}]],"46":[["[Name] test.cpp      ",{"inverse":true}],[" NORMAL ",{"bold":true}],[" ",{}],["test.cpp ",{"bold":true}],[" main()                                                      unix │ utf-8 │ cpp │  87% ",{}],[" LN  62",{"bold":true}],[":1  ",{}],[" ",{"bold":true,"inverse":true}],[" ~/NERD_tree_1 ",{"bold":true}],["       ",{}]],"47":[["                                                                                                                                                                ",{}]]},"cursor":{"y":36,"visible":true}}],[0.02994,{"lines":{"47":[["                                                                                                                                                     k          ",{}]]},"cursor":{"visible":false}}],[0.008887000000000001,{"lines":{"35":[["~                   ",{"fg":4,"bold":true}],["|",{"inverse":true}],["  ",{"fg":6,"bg":0,"bold":true}],[" 61 ",{"fg":3,"bold":true}],["                                                                                                              ",{"underline":true}],["|",{"inverse":true}],["~                     ",{"fg":4,"bold":true}]],"36":[["~                   ",{"fg":4,"bold":true}],["|",{"inverse":true}],["  ",{"fg":6,"bg":0,"bold":true}],[" 62 ",{"fg":3,"bold":true}],["    cout << ",{}],["sizeof",{"fg":3,"bold":true}],["(Last) << endl;                                                                             ",{}],["|",{"inverse":true}],["~                     ",{"fg":4,"bold":true}]],"46":[["[Name] test.cpp      ",{"inverse":true}],[" NORMAL ",{"bold":true}],[" ",{}],["test.cpp ",{"bold":true}],[" main()                                                      unix │ utf-8 │ cpp │  85% ",{}],[" LN  61",{"bold":true}],[":1  ",{}],[" ",{"bold":true,"inverse":true}],[" ~/NERD_tree_1 ",{"bold":true}],["       ",{}]],"47":[["                                                                                                                                                                ",{}]]},"cursor":{"y":35,"visible":true}}],[0.017096,{"lines":{"47":[["                                                                                                                                                     k          ",{}]]},"cursor":{"visible":false}}],[0.027233,{"lines":{"34":[["~                   ",{"fg":4,"bold":true}],["|",{"inverse":true}],["  ",{"fg":6,"bg":0,"bold":true}],[" 60 ",{"fg":3,"bold":true}],["    pSecond2->SecondRun2();                                                                                   ",{"underline":true}],["|",{"inverse":true}],["~                     ",{"fg":4,"bold":true}]],"35":[["~                   ",{"fg":4,"bold":true}],["|",{"inverse":true}],["  ",{"fg":6,"bg":0,"bold":true}],[" 61 ",{"fg":3,"bold":true}],["                                                                                                              ",{}],["|",{"inverse":true}],["~                     ",{"fg":4,"bold":true}]],"46":[["[Name] test.cpp      ",{"inverse":true}],[" NORMAL ",{"bold":true}],[" ",{}],["test.cpp ",{"bold":true}],[" main()                                                      unix │ utf-8 │ cpp │  84% ",{}],[" LN  60",{"bold":true}],[":1  ",{}],[" ",{"bold":true,"inverse":true}],[" ~/NERD_tree_1 ",{"bold":true}],["       ",{}]],"47":[["                                                                                                                                                                ",{}]]},"cursor":{"y":34,"visible":true}}],[0.009721,{"lines":{"47":[["                                                                                                                                                     k          ",{}]]},"cursor":{"visible":false}}],[0.008097,{"lines":{"33":[["~                   ",{"fg":4,"bold":true}],["|",{"inverse":true}],["  ",{"fg":6,"bg":0,"bold":true}],[" 59 ",{"fg":3,"bold":true}],["    Second* pSecond2 = pLast;                                                                                 ",{"underline":true}],["|",{"inverse":true}],["~                     ",{"fg":4,"bold":true}]],"34":[["~                   ",{"fg":4,"bold":true}],["|",{"inverse":true}],["  ",{"fg":6,"bg":0,"bold":true}],[" 60 ",{"fg":3,"bold":true}],["    pSecond2->SecondRun2();                                                                                   ",{}],["|",{"inverse":true}],["~                     ",{"fg":4,"bold":true}]],"46":[["[Name] test.cpp      ",{"inverse":true}],[" NORMAL ",{"bold":true}],[" ",{}],["test.cpp ",{"bold":true}],[" main()                                                      unix │ utf-8 │ cpp │  83% ",{}],[" LN  59",{"bold":true}],[":1  ",{}],[" ",{"bold":true,"inverse":true}],[" ~/NERD_tree_1 ",{"bold":true}],["       ",{}]],"47":[["                                                                                                                                                                ",{}]]},"cursor":{"y":33,"visible":true}}],[0.03174,{"lines":{"47":[["                                                                                                                                                     k          ",{}]]},"cursor":{"visible":false}}],[0.010178,{"lines":{"32":[["~                   ",{"fg":4,"bold":true}],["|",{"inverse":true}],["  ",{"fg":6,"bg":0,"bold":true}],[" 58 ",{"fg":3,"bold":true}],["                                                                                                              ",{"underline":true}],["|",{"inverse":true}],["~                     ",{"fg":4,"bold":true}]],"33":[["~                   ",{"fg":4,"bold":true}],["|",{"inverse":true}],["  ",{"fg":6,"bg":0,"bold":true}],[" 59 ",{"fg":3,"bold":true}],["    Second* pSecond2 = pLast;                                                                                 ",{}],["|",{"inverse":true}],["~                     ",{"fg":4,"bold":true}]],"46":[["[Name] test.cpp      ",{"inverse":true}],[" NORMAL ",{"bold":true}],[" ",{}],["test.cpp ",{"bold":true}],[" main()                                                      unix │ utf-8 │ cpp │  81% ",{}],[" LN  58",{"bold":true}],[":1  ",{}],[" ",{"bold":true,"inverse":true}],[" ~/NERD_tree_1 ",{"bold":true}],["       ",{}]],"47":[["                                                                                                                                                                ",{}]]},"cursor":{"y":32,"visible":true}}],[0.013534,{"lines":{"47":[["                                                                                                                                                     k          ",{}]]},"cursor":{"visible":false}}],[0.024,{"lines":{"31":[["~                   ",{"fg":4,"bold":true}],["|",{"inverse":true}],["  ",{"fg":6,"bg":0,"bold":true}],[" 57 ",{"fg":3,"bold":true}],["    pSecond1->SecondRun2();                                                                                   ",{"underline":true}],["|",{"inverse":true}],["~                     ",{"fg":4,"bold":true}]],"32":[["~                   ",{"fg":4,"bold":true}],["|",{"inverse":true}],["  ",{"fg":6,"bg":0,"bold":true}],[" 58 ",{"fg":3,"bold":true}],["                                                                                                              ",{}],["|",{"inverse":true}],["~                     ",{"fg":4,"bold":true}]],"46":[["[Name] test.cpp      ",{"inverse":true}],[" NORMAL ",{"bold":true}],[" ",{}],["test.cpp ",{"bold":true}],[" main()                                                      unix │ utf-8 │ cpp │  80% ",{}],[" LN  57",{"bold":true}],[":1  ",{}],[" ",{"bold":true,"inverse":true}],[" ~/NERD_tree_1 ",{"bold":true}],["       ",{}]],"47":[["                                                                                                                                                                ",{}]]},"cursor":{"y":31,"visible":true}}],[0.013237,{"lines":{"47":[["'reinterpret_cast' from class 'Last *' to its base at non-zero offset 'Second *' behaves differently from 'static_cast'                                         ",{}]]},"cursor":{"x":119,"y":47,"visible":false}}],[0.008455000000000001,{"lines":{"30":[["~                   ",{"fg":4,"bold":true}],["|",{"inverse":true}],[">>",{"fg":7,"bg":1,"bold":true}],[" 56 ",{"fg":3,"bold":true}],["    Second* pSecond1 = ",{"underline":true}],["reinterpret_cast",{"fg":3,"bg":1,"bold":true}],["<Second*>(pLast)",{"bg":1}],[";                                                      ",{"underline":true}],["|",{"inverse":true}],["~                     ",{"fg":4,"bold":true}]],"31":[["~                   ",{"fg":4,"bold":true}],["|",{"inverse":true}],["  ",{"fg":6,"bg":0,"bold":true}],[" 57 ",{"fg":3,"bold":true}],["    pSecond1->SecondRun2();                                                                                   ",{}],["|",{"inverse":true}],["~                     ",{"fg":4,"bold":true}]],"46":[["[Name] test.cpp      ",{"inverse":true}],[" NORMAL ",{"bold":true}],[" ",{}],["test.cpp ",{"bold":true}],[" main()                                                      unix │ utf-8 │ cpp │  78% ",{}],[" LN  56",{"bold":true}],[":1  ",{}],[" ",{"bold":true,"inverse":true}],[" ~/NERD_tree_1 ",{"bold":true}],["       ",{}]]},"cursor":{"x":27,"y":30,"visible":true}}],[0.031577,{"lines":{"47":[["                                                                                                                                                                ",{}]]},"cursor":{"x":0,"y":47,"visible":false}}],[0.008359,{"lines":{"29":[["~                   ",{"fg":4,"bold":true}],["|",{"inverse":true}],["  ",{"fg":6,"bg":0,"bold":true}],[" 55 ",{"fg":3,"bold":true}],["    v.begin();                                                                                                ",{"underline":true}],["|",{"inverse":true}],["~                     ",{"fg":4,"bold":true}]],"30":[["~                   ",{"fg":4,"bold":true}],["|",{"inverse":true}],[">>",{"fg":7,"bg":1,"bold":true}],[" 56 ",{"fg":3,"bold":true}],["    Second* pSecond1 = ",{}],["reinterpret_cast",{"fg":3,"bg":1,"bold":true}],["<Second*>(pLast)",{"bg":1}],[";                                                      ",{}],["|",{"inverse":true}],["~                     ",{"fg":4,"bold":true}]],"46":[["[Name] test.cpp      ",{"inverse":true}],[" NORMAL ",{"bold":true}],[" ",{}],["test.cpp ",{"bold":true}],[" main()                                                      unix │ utf-8 │ cpp │  77% ",{}],[" LN  55",{"bold":true}],[":1  ",{}],[" ",{"bold":true,"inverse":true}],[" ~/NERD_tree_1 ",{"bold":true}],["       ",{}]]},"cursor":{"x":27,"y":29,"visible":true}}],[0.014924,{"lines":{"47":[["                                                                                                                                                     k          ",{}]]},"cursor":{"visible":false}}],[0.03115,{"lines":{"28":[["~                   ",{"fg":4,"bold":true}],["|",{"inverse":true}],["  ",{"fg":6,"bg":0,"bold":true}],[" 54 ",{"fg":3,"bold":true}],["    vector<",{"underline":true}],["int",{"fg":2,"bold":true,"underline":true}],["> v;                                                                                            ",{"underline":true}],["|",{"inverse":true}],["~                     ",{"fg":4,"bold":true}]],"29":[["~                   ",{"fg":4,"bold":true}],["|",{"inverse":true}],["  ",{"fg":6,"bg":0,"bold":true}],[" 55 ",{"fg":3,"bold":true}],["    v.begin();                                                                                                ",{}],["|",{"inverse":true}],["~                     ",{"fg":4,"bold":true}]],"46":[["[Name] test.cpp      ",{"inverse":true}],[" NORMAL ",{"bold":true}],[" ",{}],["test.cpp ",{"bold":true}],[" main()                                                      unix │ utf-8 │ cpp │  76% ",{}],[" LN  54",{"bold":true}],[":1  ",{}],[" ",{"bold":true,"inverse":true}],[" ~/NERD_tree_1 ",{"bold":true}],["       ",{}]],"47":[["                                                                                                                                                                ",{}]]},"cursor":{"y":28,"visible":true}}],[0.014939,{"lines":{"27":[["~                   ",{"fg":4,"bold":true}],["|",{"inverse":true}],["  ",{"fg":6,"bg":0,"bold":true}],[" 53 ",{"fg":3,"bold":true}],["    Last* pLast = ",{"underline":true}],["new",{"fg":3,"bold":true,"underline":true}],[" Last();                                                                                 ",{"underline":true}],["|",{"inverse":true}],["~                     ",{"fg":4,"bold":true}]],"28":[["~                   ",{"fg":4,"bold":true}],["|",{"inverse":true}],["  ",{"fg":6,"bg":0,"bold":true}],[" 54 ",{"fg":3,"bold":true}],["    vector<",{}],["int",{"fg":2,"bold":true}],["> v;                                                                                            ",{}],["|",{"inverse":true}],["~                     ",{"fg":4,"bold":true}]],"46":[["[Name] test.cpp      ",{"inverse":true}],[" NORMAL ",{"bold":true}],[" ",{}],["test.cpp ",{"bold":true}],[" main()                                                      unix │ utf-8 │ cpp │  74% ",{}],[" LN  53",{"bold":true}],[":1  ",{}],[" ",{"bold":true,"inverse":true}],[" ~/NERD_tree_1 ",{"bold":true}],["       ",{}]]},"cursor":{"y":27}}],[0.03863,{"lines":{"47":[["                                                                                                                                                     k          ",{}]]},"cursor":{"visible":false}}],[0.016185,{"lines":{"26":[["~                   ",{"fg":4,"bold":true}],["|",{"inverse":true}],["  ",{"fg":6,"bg":0,"bold":true}],[" 52 ",{"fg":3,"bold":true}],["{",{"bg":6}],["                                                                                                             ",{"underline":true}],["|",{"inverse":true}],["~                     ",{"fg":4,"bold":true}]],"27":[["~                   ",{"fg":4,"bold":true}],["|",{"inverse":true}],["  ",{"fg":6,"bg":0,"bold":true}],[" 53 ",{"fg":3,"bold":true}],["    Last* pLast = ",{}],["new",{"fg":3,"bold":true}],[" Last();                                                                                 ",{}],["|",{"inverse":true}],["~                     ",{"fg":4,"bold":true}]],"44":[["~                   ",{"fg":4,"bold":true}],["|",{"inverse":true}],["  ",{"fg":6,"bg":0,"bold":true}],[" 70 ",{"fg":3,"bold":true}],["}",{"bg":6}],["                                                                                                             ",{}],["|",{"inverse":true}],["~                     ",{"fg":4,"bold":true}]],"46":[["[Name] test.cpp      ",{"inverse":true}],[" NORMAL ",{"bold":true}],[" ",{}],["test.cpp ",{"bold":true}],[" main()                                                      unix │ utf-8 │ cpp │  73% ",{}],[" LN  52",{"bold":true}],[":1  ",{}],[" ",{"bold":true,"inverse":true}],[" ~/NERD_tree_1 ",{"bold":true}],["       ",{}]]},"cursor":{"y":26}}],[0.011009,{"lines":{"25":[["~                   ",{"fg":4,"bold":true}],["|",{"inverse":true}],[">>",{"fg":7,"bg":1,"bold":true}],[" 51 ",{"fg":3,"bold":true}],["int",{"fg":2,"bold":true,"underline":true}],[" main(",{"underline":true}],["int",{"fg":2,"bold":true,"underline":true}],[" ",{"underline":true}],["argc",{"bg":1}],[", ",{"underline":true}],["char",{"fg":2,"bold":true,"underline":true}],["* ",{"underline":true}],["argv",{"bg":1}],["[])                                                                              ",{"underline":true}],["|",{"inverse":true}],["~                     ",{"fg":4,"bold":true}]],"26":[["~                   ",{"fg":4,"bold":true}],["|",{"inverse":true}],["  ",{"fg":6,"bg":0,"bold":true}],[" 52 ",{"fg":3,"bold":true}],["{                                                                                                             ",{}],["|",{"inverse":true}],["~                     ",{"fg":4,"bold":true}]],"44":[["~                   ",{"fg":4,"bold":true}],["|",{"inverse":true}],["  ",{"fg":6,"bg":0,"bold":true}],[" 70 ",{"fg":3,"bold":true}],["}                                                                                                             ",{}],["|",{"inverse":true}],["~                     ",{"fg":4,"bold":true}]],"46":[["[Name] test.cpp      ",{"inverse":true}],[" NORMAL ",{"bold":true}],[" ",{}],["test.cpp ",{"bold":true}],[" main()                                                      unix │ utf-8 │ cpp │  71% ",{}],[" LN  51",{"bold":true}],[":1  ",{}],[" ",{"bold":true,"inverse":true}],[" ~/NERD_tree_1 ",{"bold":true}],["       ",{}]],"47":[["unused parameter 'argc'                                                                                                                                         ",{}]]},"cursor":{"y":25,"visible":true}}],[0.027806,{"lines":{"47":[["                                                                                                                                                                ",{}]]},"cursor":{"x":0,"y":47,"visible":false}}],[0.011796,{"lines":{"24":[["~                   ",{"fg":4,"bold":true}],["|",{"inverse":true}],["  ",{"fg":6,"bg":0,"bold":true}],[" 50 ",{"fg":3,"bold":true}],["                                                                                                              ",{"underline":true}],["|",{"inverse":true}],["~                     ",{"fg":4,"bold":true}]],"25":[["~                   ",{"fg":4,"bold":true}],["|",{"inverse":true}],[">>",{"fg":7,"bg":1,"bold":true}],[" 51 ",{"fg":3,"bold":true}],["int",{"fg":2,"bold":true}],[" main(",{}],["int",{"fg":2,"bold":true}],[" ",{}],["argc",{"bg":1}],[", ",{}],["char",{"fg":2,"bold":true}],["* ",{}],["argv",{"bg":1}],["[])                                                                              ",{}],["|",{"inverse":true}],["~                     ",{"fg":4,"bold":true}]],"46":[["[Name] test.cpp      ",{"inverse":true}],[" NORMAL ",{"bold":true}],[" ",{}],["test.cpp ",{"bold":true}],[" ~Last()                                                     unix │ utf-8 │ cpp │  70% ",{}],[" LN  50",{"bold":true}],[":1  ",{}],[" ",{"bold":true,"inverse":true}],[" ~/NERD_tree_1 ",{"bold":true}],["       ",{}]]},"cursor":{"x":27,"y":24,"visible":true}}],[0.016609,{"lines":{"47":[["                                                                                                                                                     k          ",{}]]},"cursor":{"visible":false}}],[0.029745,{"lines":{"23":[["~                   ",{"fg":4,"bold":true}],["|",{"inverse":true}],["  ",{"fg":6,"bg":0,"bold":true}],[" 49 ",{"fg":3,"bold":true}],["                                                                                                              ",{"underline":true}],["|",{"inverse":true}],["~                     ",{"fg":4,"bold":true}]],"24":[["~                   ",{"fg":4,"bold":true}],["|",{"inverse":true}],["  ",{"fg":6,"bg":0,"bold":true}],[" 50 ",{"fg":3,"bold":true}],["                                                                                                              ",{}],["|",{"inverse":true}],["~                     ",{"fg":4,"bold":true}]],"46":[["[Name] test.cpp      ",{"inverse":true}],[" NORMAL ",{"bold":true}],[" ",{}],["test.cpp ",{"bold":true}],[" ~Last()                                                     unix │ utf-8 │ cpp │  69% ",{}],[" LN  49",{"bold":true}],[":1  ",{}],[" ",{"bold":true,"inverse":true}],[" ~/NERD_tree_1 ",{"bold":true}],["       ",{}]],"47":[["                                                                                                                                                                ",{}]]},"cursor":{"y":23,"visible":true}}],[0.173148,{"lines":{"47":[["                                                                                                                                                     j          ",{}]]},"cursor":{"visible":false}}],[0.014454,{"lines":{"23":[["~                   ",{"fg":4,"bold":true}],["|",{"inverse":true}],["  ",{"fg":6,"bg":0,"bold":true}],[" 49 ",{"fg":3,"bold":true}],["                                                                                                              ",{}],["|",{"inverse":true}],["~                     ",{"fg":4,"bold":true}]],"24":[["~                   ",{"fg":4,"bold":true}],["|",{"inverse":true}],["  ",{"fg":6,"bg":0,"bold":true}],[" 50 ",{"fg":3,"bold":true}],["                                                                                                              ",{"underline":true}],["|",{"inverse":true}],["~                     ",{"fg":4,"bold":true}]],"46":[["[Name] test.cpp      ",{"inverse":true}],[" NORMAL ",{"bold":true}],[" ",{}],["test.cpp ",{"bold":true}],[" ~Last()                                                     unix │ utf-8 │ cpp │  70% ",{}],[" LN  50",{"bold":true}],[":1  ",{}],[" ",{"bold":true,"inverse":true}],[" ~/NERD_tree_1 ",{"bold":true}],["       ",{}]],"47":[["                                                                                                                                                                ",{}]]},"cursor":{"y":24,"visible":true}}],[0.187541,{"lines":{"47":[["unused parameter 'argc'                                                                                                                                         ",{}]]},"cursor":{"x":23,"y":47,"visible":false}}],[0.009639999999999999,{"lines":{"24":[["~                   ",{"fg":4,"bold":true}],["|",{"inverse":true}],["  ",{"fg":6,"bg":0,"bold":true}],[" 50 ",{"fg":3,"bold":true}],["                                                                                                              ",{}],["|",{"inverse":true}],["~                     ",{"fg":4,"bold":true}]],"25":[["~                   ",{"fg":4,"bold":true}],["|",{"inverse":true}],[">>",{"fg":7,"bg":1,"bold":true}],[" 51 ",{"fg":3,"bold":true}],["int",{"fg":2,"bold":true,"underline":true}],[" main(",{"underline":true}],["int",{"fg":2,"bold":true,"underline":true}],[" ",{"underline":true}],["argc",{"bg":1}],[", ",{"underline":true}],["char",{"fg":2,"bold":true,"underline":true}],["* ",{"underline":true}],["argv",{"bg":1}],["[])                                                                              ",{"underline":true}],["|",{"inverse":true}],["~                     ",{"fg":4,"bold":true}]],"46":[["[Name] test.cpp      ",{"inverse":true}],[" NORMAL ",{"bold":true}],[" ",{}],["test.cpp ",{"bold":true}],[" main()                                                      unix │ utf-8 │ cpp │  71% ",{}],[" LN  51",{"bold":true}],[":1  ",{}],[" ",{"bold":true,"inverse":true}],[" ~/NERD_tree_1 ",{"bold":true}],["       ",{}]]},"cursor":{"x":27,"y":25,"visible":true}}],[0.171036,{"lines":{"47":[["unused parameter 'argc'                                                                                                                              j          ",{}]]},"cursor":{"visible":false}}],[0.011636,{"lines":{"25":[["~                   ",{"fg":4,"bold":true}],["|",{"inverse":true}],[">>",{"fg":7,"bg":1,"bold":true}],[" 51 ",{"fg":3,"bold":true}],["int",{"fg":2,"bold":true}],[" main(",{}],["int",{"fg":2,"bold":true}],[" ",{}],["argc",{"bg":1}],[", ",{}],["char",{"fg":2,"bold":true}],["* ",{}],["argv",{"bg":1}],["[])                                                                              ",{}],["|",{"inverse":true}],["~                     ",{"fg":4,"bold":true}]],"26":[["~                   ",{"fg":4,"bold":true}],["|",{"inverse":true}],["  ",{"fg":6,"bg":0,"bold":true}],[" 52 ",{"fg":3,"bold":true}],["{",{"bg":6}],["                                                                                                             ",{"underline":true}],["|",{"inverse":true}],["~                     ",{"fg":4,"bold":true}]],"44":[["~                   ",{"fg":4,"bold":true}],["|",{"inverse":true}],["  ",{"fg":6,"bg":0,"bold":true}],[" 70 ",{"fg":3,"bold":true}],["}",{"bg":6}],["                                                                                                             ",{}],["|",{"inverse":true}],["~                     ",{"fg":4,"bold":true}]],"46":[["[Name] test.cpp      ",{"inverse":true}],[" NORMAL ",{"bold":true}],[" ",{}],["test.cpp ",{"bold":true}],[" main()                                                      unix │ utf-8 │ cpp │  73% ",{}],[" LN  52",{"bold":true}],[":1  ",{}],[" ",{"bold":true,"inverse":true}],[" ~/NERD_tree_1 ",{"bold":true}],["       ",{}]],"47":[["                                                                                                                                                                ",{}]]},"cursor":{"y":26,"visible":true}}],[0.554308,{"lines":{"47":[["                                                                                                                                                     j          ",{}]]},"cursor":{"visible":false}}],[0.014412,{"lines":{"26":[["~                   ",{"fg":4,"bold":true}],["|",{"inverse":true}],["  ",{"fg":6,"bg":0,"bold":true}],[" 52 ",{"fg":3,"bold":true}],["{                                                                                                             ",{}],["|",{"inverse":true}],["~                     ",{"fg":4,"bold":true}]],"27":[["~                   ",{"fg":4,"bold":true}],["|",{"inverse":true}],["  ",{"fg":6,"bg":0,"bold":true}],[" 53 ",{"fg":3,"bold":true}],["    Last* pLast = ",{"underline":true}],["new",{"fg":3,"bold":true,"underline":true}],[" Last();                                                                                 ",{"underline":true}],["|",{"inverse":true}],["~                     ",{"fg":4,"bold":true}]],"44":[["~                   ",{"fg":4,"bold":true}],["|",{"inverse":true}],["  ",{"fg":6,"bg":0,"bold":true}],[" 70 ",{"fg":3,"bold":true}],["}                                                                                                             ",{}],["|",{"inverse":true}],["~                     ",{"fg":4,"bold":true}]],"46":[["[Name] test.cpp      ",{"inverse":true}],[" NORMAL ",{"bold":true}],[" ",{}],["test.cpp ",{"bold":true}],[" main()                                                      unix │ utf-8 │ cpp │  74% ",{}],[" LN  53",{"bold":true}],[":1  ",{}],[" ",{"bold":true,"inverse":true}],[" ~/NERD_tree_1 ",{"bold":true}],["       ",{}]],"47":[["                                                                                                                                                                ",{}]]},"cursor":{"y":27,"visible":true}}],[0.637064,{"lines":{"47":[["                                                                                                                                                     j          ",{}]]},"cursor":{"visible":false}}],[0.02002,{"lines":{"27":[["~                   ",{"fg":4,"bold":true}],["|",{"inverse":true}],["  ",{"fg":6,"bg":0,"bold":true}],[" 53 ",{"fg":3,"bold":true}],["    Last* pLast = ",{}],["new",{"fg":3,"bold":true}],[" Last();                                                                                 ",{}],["|",{"inverse":true}],["~                     ",{"fg":4,"bold":true}]],"28":[["~                   ",{"fg":4,"bold":true}],["|",{"inverse":true}],["  ",{"fg":6,"bg":0,"bold":true}],[" 54 ",{"fg":3,"bold":true}],["    vector<",{"underline":true}],["int",{"fg":2,"bold":true,"underline":true}],["> v;                                                                                            ",{"underline":true}],["|",{"inverse":true}],["~                     ",{"fg":4,"bold":true}]],"46":[["[Name] test.cpp      ",{"inverse":true}],[" NORMAL ",{"bold":true}],[" ",{}],["test.cpp ",{"bold":true}],[" main()                                                      unix │ utf-8 │ cpp │  76% ",{}],[" LN  54",{"bold":true}],[":1  ",{}],[" ",{"bold":true,"inverse":true}],[" ~/NERD_tree_1 ",{"bold":true}],["       ",{}]],"47":[["                                                                                                                                                                ",{}]]},"cursor":{"y":28,"visible":true}}],[0.160634,{"lines":{"47":[["                                                                                                                                                     j          ",{}]]},"cursor":{"visible":false}}],[0.023699,{"lines":{"28":[["~                   ",{"fg":4,"bold":true}],["|",{"inverse":true}],["  ",{"fg":6,"bg":0,"bold":true}],[" 54 ",{"fg":3,"bold":true}],["    vector<",{}],["int",{"fg":2,"bold":true}],["> v;                                                                                            ",{}],["|",{"inverse":true}],["~                     ",{"fg":4,"bold":true}]],"29":[["~                   ",{"fg":4,"bold":true}],["|",{"inverse":true}],["  ",{"fg":6,"bg":0,"bold":true}],[" 55 ",{"fg":3,"bold":true}],["    v.begin();                                                                                                ",{"underline":true}],["|",{"inverse":true}],["~                     ",{"fg":4,"bold":true}]],"46":[["[Name] test.cpp      ",{"inverse":true}],[" NORMAL ",{"bold":true}],[" ",{}],["test.cpp ",{"bold":true}],[" main()                                                      unix │ utf-8 │ cpp │  77% ",{}],[" LN  55",{"bold":true}],[":1  ",{}],[" ",{"bold":true,"inverse":true}],[" ~/NERD_tree_1 ",{"bold":true}],["       ",{}]],"47":[["                                                                                                                                                                ",{}]]},"cursor":{"y":29,"visible":true}}],[0.135496,{"lines":{"47":[["'reinterpret_cast' from class 'Last *' to its base at non-zero offset 'Second *' behaves differently from 'static_cast'                                         ",{}]]},"cursor":{"x":119,"y":47,"visible":false}}],[0.01976,{"lines":{"29":[["~                   ",{"fg":4,"bold":true}],["|",{"inverse":true}],["  ",{"fg":6,"bg":0,"bold":true}],[" 55 ",{"fg":3,"bold":true}],["    v.begin();                                                                                                ",{}],["|",{"inverse":true}],["~                     ",{"fg":4,"bold":true}]],"30":[["~                   ",{"fg":4,"bold":true}],["|",{"inverse":true}],[">>",{"fg":7,"bg":1,"bold":true}],[" 56 ",{"fg":3,"bold":true}],["    Second* pSecond1 = ",{"underline":true}],["reinterpret_cast",{"fg":3,"bg":1,"bold":true}],["<Second*>(pLast)",{"bg":1}],[";                                                      ",{"underline":true}],["|",{"inverse":true}],["~                     ",{"fg":4,"bold":true}]],"46":[["[Name] test.cpp      ",{"inverse":true}],[" NORMAL ",{"bold":true}],[" ",{}],["test.cpp ",{"bold":true}],[" main()                                                      unix │ utf-8 │ cpp │  78% ",{}],[" LN  56",{"bold":true}],[":1  ",{}],[" ",{"bold":true,"inverse":true}],[" ~/NERD_tree_1 ",{"bold":true}],["       ",{}]]},"cursor":{"x":27,"y":30,"visible":true}}],[0.230257,{"lines":{"47":[["                                                                                                                                                                ",{}]]},"cursor":{"x":0,"y":47,"visible":false}}],[0.026366,{"lines":{"30":[["~                   ",{"fg":4,"bold":true}],["|",{"inverse":true}],[">>",{"fg":7,"bg":1,"bold":true}],[" 56 ",{"fg":3,"bold":true}],["    Second* pSecond1 = ",{}],["reinterpret_cast",{"fg":3,"bg":1,"bold":true}],["<Second*>(pLast)",{"bg":1}],[";                                                      ",{}],["|",{"inverse":true}],["~                     ",{"fg":4,"bold":true}]],"31":[["~                   ",{"fg":4,"bold":true}],["|",{"inverse":true}],["  ",{"fg":6,"bg":0,"bold":true}],[" 57 ",{"fg":3,"bold":true}],["    pSecond1->SecondRun2();                                                                                   ",{"underline":true}],["|",{"inverse":true}],["~                     ",{"fg":4,"bold":true}]],"46":[["[Name] test.cpp      ",{"inverse":true}],[" NORMAL ",{"bold":true}],[" ",{}],["test.cpp ",{"bold":true}],[" main()                                                      unix │ utf-8 │ cpp │  80% ",{}],[" LN  57",{"bold":true}],[":1  ",{}],[" ",{"bold":true,"inverse":true}],[" ~/NERD_tree_1 ",{"bold":true}],["       ",{}]]},"cursor":{"x":27,"y":31,"visible":true}}],[0.003404,{"lines":{"47":[["                                                                                                                                                     j          ",{}]]},"cursor":{"visible":false}}],[0.033104,{"lines":{"31":[["~                   ",{"fg":4,"bold":true}],["|",{"inverse":true}],["  ",{"fg":6,"bg":0,"bold":true}],[" 57 ",{"fg":3,"bold":true}],["    pSecond1->SecondRun2();                                                                                   ",{}],["|",{"inverse":true}],["~                     ",{"fg":4,"bold":true}]],"32":[["~                   ",{"fg":4,"bold":true}],["|",{"inverse":true}],["  ",{"fg":6,"bg":0,"bold":true}],[" 58 ",{"fg":3,"bold":true}],["                                                                                                              ",{"underline":true}],["|",{"inverse":true}],["~                     ",{"fg":4,"bold":true}]],"46":[["[Name] test.cpp      ",{"inverse":true}],[" NORMAL ",{"bold":true}],[" ",{}],["test.cpp ",{"bold":true}],[" main()                                                      unix │ utf-8 │ cpp │  81% ",{}],[" LN  58",{"bold":true}],[":1  ",{}],[" ",{"bold":true,"inverse":true}],[" ~/NERD_tree_1 ",{"bold":true}],["       ",{}]],"47":[["                                                                                                                                                                ",{}]]},"cursor":{"y":32,"visible":true}}],[0.011059,{"lines":{"32":[["~                   ",{"fg":4,"bold":true}],["|",{"inverse":true}],["  ",{"fg":6,"bg":0,"bold":true}],[" 58 ",{"fg":3,"bold":true}],["                                                                                                              ",{}],["|",{"inverse":true}],["~                     ",{"fg":4,"bold":true}]],"33":[["~                   ",{"fg":4,"bold":true}],["|",{"inverse":true}],["  ",{"fg":6,"bg":0,"bold":true}],[" 59 ",{"fg":3,"bold":true}],["    Second* pSecond2 = pLast;                                                                                 ",{"underline":true}],["|",{"inverse":true}],["~                     ",{"fg":4,"bold":true}]],"46":[["[Name] test.cpp      ",{"inverse":true}],[" NORMAL ",{"bold":true}],[" ",{}],["test.cpp ",{"bold":true}],[" main()                                                      unix │ utf-8 │ cpp │  83% ",{}],[" LN  59",{"bold":true}],[":1  ",{}],[" ",{"bold":true,"inverse":true}],[" ~/NERD_tree_1 ",{"bold":true}],["       ",{}]]},"cursor":{"y":33}}],[0.03888,{"lines":{"47":[["                                                                                                                                                     j          ",{}]]},"cursor":{"visible":false}}],[0.007405,{"lines":{"33":[["~                   ",{"fg":4,"bold":true}],["|",{"inverse":true}],["  ",{"fg":6,"bg":0,"bold":true}],[" 59 ",{"fg":3,"bold":true}],["    Second* pSecond2 = pLast;                                                                                 ",{}],["|",{"inverse":true}],["~                     ",{"fg":4,"bold":true}]],"34":[["~                   ",{"fg":4,"bold":true}],["|",{"inverse":true}],["  ",{"fg":6,"bg":0,"bold":true}],[" 60 ",{"fg":3,"bold":true}],["    pSecond2->SecondRun2();                                                                                   ",{"underline":true}],["|",{"inverse":true}],["~                     ",{"fg":4,"bold":true}]],"46":[["[Name] test.cpp      ",{"inverse":true}],[" NORMAL ",{"bold":true}],[" ",{}],["test.cpp ",{"bold":true}],[" main()                                                      unix │ utf-8 │ cpp │  84% ",{}],[" LN  60",{"bold":true}],[":1  ",{}],[" ",{"bold":true,"inverse":true}],[" ~/NERD_tree_1 ",{"bold":true}],["       ",{}]],"47":[["                                                                                                                                                                ",{}]]},"cursor":{"y":34,"visible":true}}],[0.011232,{"lines":{"47":[["                                                                                                                                                     j          ",{}]]},"cursor":{"visible":false}}],[0.010151,{"lines":{"34":[["~                   ",{"fg":4,"bold":true}],["|",{"inverse":true}],["  ",{"fg":6,"bg":0,"bold":true}],[" 60 ",{"fg":3,"bold":true}],["    pSecond2->SecondRun2();                                                                                   ",{}],["|",{"inverse":true}],["~                     ",{"fg":4,"bold":true}]],"35":[["~                   ",{"fg":4,"bold":true}],["|",{"inverse":true}],["  ",{"fg":6,"bg":0,"bold":true}],[" 61 ",{"fg":3,"bold":true}],["                                                                                                              ",{"underline":true}],["|",{"inverse":true}],["~                     ",{"fg":4,"bold":true}]],"46":[["[Name] test.cpp      ",{"inverse":true}],[" NORMAL ",{"bold":true}],[" ",{}],["test.cpp ",{"bold":true}],[" main()                                                      unix │ utf-8 │ cpp │  85% ",{}],[" LN  61",{"bold":true}],[":1  ",{}],[" ",{"bold":true,"inverse":true}],[" ~/NERD_tree_1 ",{"bold":true}],["       ",{}]],"47":[["                                                                                                                                                                ",{}]]},"cursor":{"y":35,"visible":true}}],[0.027187,{"lines":{"47":[["                                                                                                                                                     j          ",{}]]},"cursor":{"visible":false}}],[0.007212,{"lines":{"35":[["~                   ",{"fg":4,"bold":true}],["|",{"inverse":true}],["  ",{"fg":6,"bg":0,"bold":true}],[" 61 ",{"fg":3,"bold":true}],["                                                                                                              ",{}],["|",{"inverse":true}],["~                     ",{"fg":4,"bold":true}]],"36":[["~                   ",{"fg":4,"bold":true}],["|",{"inverse":true}],["  ",{"fg":6,"bg":0,"bold":true}],[" 62 ",{"fg":3,"bold":true}],["    cout << ",{"underline":true}],["sizeof",{"fg":3,"bold":true,"underline":true}],["(Last) << endl;                                                                             ",{"underline":true}],["|",{"inverse":true}],["~                     ",{"fg":4,"bold":true}]],"46":[["[Name] test.cpp      ",{"inverse":true}],[" NORMAL ",{"bold":true}],[" ",{}],["test.cpp ",{"bold":true}],[" main()                                                      unix │ utf-8 │ cpp │  87% ",{}],[" LN  62",{"bold":true}],[":1  ",{}],[" ",{"bold":true,"inverse":true}],[" ~/NERD_tree_1 ",{"bold":true}],["       ",{}]],"47":[["                                                                                                                                                                ",{}]]},"cursor":{"y":36,"visible":true}}],[0.022625,{"lines":{"47":[["                                                                                                                                                     j          ",{}]]},"cursor":{"visible":false}}],[0.027233,{"lines":{"36":[["~                   ",{"fg":4,"bold":true}],["|",{"inverse":true}],["  ",{"fg":6,"bg":0,"bold":true}],[" 62 ",{"fg":3,"bold":true}],["    cout << ",{}],["sizeof",{"fg":3,"bold":true}],["(Last) << endl;                                                                             ",{}],["|",{"inverse":true}],["~                     ",{"fg":4,"bold":true}]],"37":[["~                   ",{"fg":4,"bold":true}],["|",{"inverse":true}],["  ",{"fg":6,"bg":0,"bold":true}],[" 63 ",{"fg":3,"bold":true}],["                                                                                                              ",{"underline":true}],["|",{"inverse":true}],["~                     ",{"fg":4,"bold":true}]],"46":[["[Name] test.cpp      ",{"inverse":true}],[" NORMAL ",{"bold":true}],[" ",{}],["test.cpp ",{"bold":true}],[" main()                                                      unix │ utf-8 │ cpp │  88% ",{}],[" LN  63",{"bold":true}],[":1  ",{}],[" ",{"bold":true,"inverse":true}],[" ~/NERD_tree_1 ",{"bold":true}],["       ",{}]],"47":[["                                                                                                                                                                ",{}]]},"cursor":{"y":37,"visible":true}}],[0.009723000000000001,{"lines":{"47":[["                                                                                                                                                     j          ",{}]]},"cursor":{"visible":false}}],[0.008597,{"lines":{"37":[["~                   ",{"fg":4,"bold":true}],["|",{"inverse":true}],["  ",{"fg":6,"bg":0,"bold":true}],[" 63 ",{"fg":3,"bold":true}],["                                                                                                              ",{}],["|",{"inverse":true}],["~                     ",{"fg":4,"bold":true}]],"38":[["~                   ",{"fg":4,"bold":true}],["|",{"inverse":true}],["  ",{"fg":6,"bg":0,"bold":true}],[" 64 ",{"fg":3,"bold":true}],["                                                                                                              ",{"underline":true}],["|",{"inverse":true}],["~                     ",{"fg":4,"bold":true}]],"46":[["[Name] test.cpp      ",{"inverse":true}],[" NORMAL ",{"bold":true}],[" ",{}],["test.cpp ",{"bold":true}],[" main()                                                      unix │ utf-8 │ cpp │  90% ",{}],[" LN  64",{"bold":true}],[":1  ",{}],[" ",{"bold":true,"inverse":true}],[" ~/NERD_tree_1 ",{"bold":true}],["       ",{}]],"47":[["                                                                                                                                                                ",{}]]},"cursor":{"y":38,"visible":true}}],[0.034449,{"lines":{"47":[["                                                                                                                                                     j          ",{}]]},"cursor":{"visible":false}}],[0.010746,{"lines":{"38":[["~                   ",{"fg":4,"bold":true}],["|",{"inverse":true}],["  ",{"fg":6,"bg":0,"bold":true}],[" 64 ",{"fg":3,"bold":true}],["                                                                                                              ",{}],["|",{"inverse":true}],["~                     ",{"fg":4,"bold":true}]],"39":[["~                   ",{"fg":4,"bold":true}],["|",{"inverse":true}],["  ",{"fg":6,"bg":0,"bold":true}],[" 65 ",{"fg":3,"bold":true}],["    ",{"underline":true}],["delete",{"fg":3,"bold":true,"underline":true}],[" pLast;                                                                                             ",{"underline":true}],["|",{"inverse":true}],["~                     ",{"fg":4,"bold":true}]],"46":[["[Name] test.cpp      ",{"inverse":true}],[" NORMAL ",{"bold":true}],[" ",{}],["test.cpp ",{"bold":true}],[" main()                                                      unix │ utf-8 │ cpp │  91% ",{}],[" LN  65",{"bold":true}],[":1  ",{}],[" ",{"bold":true,"inverse":true}],[" ~/NERD_tree_1 ",{"bold":true}],["       ",{}]],"47":[["                                                                                                                                                                ",{}]]},"cursor":{"y":39,"visible":true}}],[0.009658,{"lines":{"47":[["                                                                                                                                                     j          ",{}]]},"cursor":{"visible":false}}],[0.028534,{"lines":{"39":[["~                   ",{"fg":4,"bold":true}],["|",{"inverse":true}],["  ",{"fg":6,"bg":0,"bold":true}],[" 65 ",{"fg":3,"bold":true}],["    ",{}],["delete",{"fg":3,"bold":true}],[" pLast;                                                                                             ",{}],["|",{"inverse":true}],["~                     ",{"fg":4,"bold":true}]],"40":[["~                   ",{"fg":4,"bold":true}],["|",{"inverse":true}],["  ",{"fg":6,"bg":0,"bold":true}],[" 66 ",{"fg":3,"bold":true}],["                                                                                                              ",{"underline":true}],["|",{"inverse":true}],["~                     ",{"fg":4,"bold":true}]],"46":[["[Name] test.cpp      ",{"inverse":true}],[" NORMAL ",{"bold":true}],[" ",{}],["test.cpp ",{"bold":true}],[" main()                                                      unix │ utf-8 │ cpp │  92% ",{}],[" LN  66",{"bold":true}],[":1  ",{}],[" ",{"bold":true,"inverse":true}],[" ~/NERD_tree_1 ",{"bold":true}],["       ",{}]],"47":[["                                                                                                                                                                ",{}]]},"cursor":{"y":40,"visible":true}}],[0.00826,{"lines":{"47":[["                                                                                                                                                     j          ",{}]]},"cursor":{"visible":false}}],[0.008599000000000001,{"lines":{"40":[["~                   ",{"fg":4,"bold":true}],["|",{"inverse":true}],["  ",{"fg":6,"bg":0,"bold":true}],[" 66 ",{"fg":3,"bold":true}],["                                                                                                              ",{}],["|",{"inverse":true}],["~                     ",{"fg":4,"bold":true}]],"41":[["~                   ",{"fg":4,"bold":true}],["|",{"inverse":true}],["  ",{"fg":6,"bg":0,"bold":true}],[" 67 ",{"fg":3,"bold":true}],["    pLast = ",{"underline":true}],["NULL",{"fg":5,"bold":true,"underline":true}],[";                                                                                             ",{"underline":true}],["|",{"inverse":true}],["~                     ",{"fg":4,"bold":true}]],"46":[["[Name] test.cpp      ",{"inverse":true}],[" NORMAL ",{"bold":true}],[" ",{}],["test.cpp ",{"bold":true}],[" main()                                                      unix │ utf-8 │ cpp │  94% ",{}],[" LN  67",{"bold":true}],[":1  ",{}],[" ",{"bold":true,"inverse":true}],[" ~/NERD_tree_1 ",{"bold":true}],["       ",{}]],"47":[["                                                                                                                                                                ",{}]]},"cursor":{"y":41,"visible":true}}],[0.032427,{"lines":{"47":[["                                                                                                                                                     j          ",{}]]},"cursor":{"visible":false}}],[0.006416,{"lines":{"41":[["~                   ",{"fg":4,"bold":true}],["|",{"inverse":true}],["  ",{"fg":6,"bg":0,"bold":true}],[" 67 ",{"fg":3,"bold":true}],["    pLast = ",{}],["NULL",{"fg":5,"bold":true}],[";                                                                                             ",{}],["|",{"inverse":true}],["~                     ",{"fg":4,"bold":true}]],"42":[["~                   ",{"fg":4,"bold":true}],["|",{"inverse":true}],["  ",{"fg":6,"bg":0,"bold":true}],[" 68 ",{"fg":3,"bold":true}],["                                                                                                              ",{"underline":true}],["|",{"inverse":true}],["~                     ",{"fg":4,"bold":true}]],"46":[["[Name] test.cpp      ",{"inverse":true}],[" NORMAL ",{"bold":true}],[" ",{}],["test.cpp ",{"bold":true}],[" main()                                                      unix │ utf-8 │ cpp │  95% ",{}],[" LN  68",{"bold":true}],[":1  ",{}],[" ",{"bold":true,"inverse":true}],[" ~/NERD_tree_1 ",{"bold":true}],["       ",{}]],"47":[["                                                                                                                                                                ",{}]]},"cursor":{"y":42,"visible":true}}],[0.016052,{"lines":{"47":[["                                                                                                                                                     j          ",{}]]},"cursor":{"visible":false}}],[0.009636,{"lines":{"42":[["~                   ",{"fg":4,"bold":true}],["|",{"inverse":true}],["  ",{"fg":6,"bg":0,"bold":true}],[" 68 ",{"fg":3,"bold":true}],["                                                                                                              ",{}],["|",{"inverse":true}],["~                     ",{"fg":4,"bold":true}]],"43":[["~                   ",{"fg":4,"bold":true}],["|",{"inverse":true}],["  ",{"fg":6,"bg":0,"bold":true}],[" 69 ",{"fg":3,"bold":true}],["    ",{"underline":true}],["return",{"fg":3,"bold":true,"underline":true}],[" ",{"underline":true}],["0",{"fg":5,"bold":true,"underline":true}],[";                                                                                                 ",{"underline":true}],["|",{"inverse":true}],["~                     ",{"fg":4,"bold":true}]],"46":[["[Name] test.cpp      ",{"inverse":true}],[" NORMAL ",{"bold":true}],[" ",{}],["test.cpp ",{"bold":true}],[" main()                                                      unix │ utf-8 │ cpp │  97% ",{}],[" LN  69",{"bold":true}],[":1  ",{}],[" ",{"bold":true,"inverse":true}],[" ~/NERD_tree_1 ",{"bold":true}],["       ",{}]],"47":[["                                                                                                                                                                ",{}]]},"cursor":{"y":43,"visible":true}}],[0.026885,{"lines":{"47":[["                                                                                                                                                     j          ",{}]]},"cursor":{"visible":false}}],[0.009946,{"lines":{"26":[["~                   ",{"fg":4,"bold":true}],["|",{"inverse":true}],["  ",{"fg":6,"bg":0,"bold":true}],[" 52 ",{"fg":3,"bold":true}],["{",{"bg":6}],["                                                                                                             ",{}],["|",{"inverse":true}],["~                     ",{"fg":4,"bold":true}]],"43":[["~                   ",{"fg":4,"bold":true}],["|",{"inverse":true}],["  ",{"fg":6,"bg":0,"bold":true}],[" 69 ",{"fg":3,"bold":true}],["    ",{}],["return",{"fg":3,"bold":true}],[" ",{}],["0",{"fg":5,"bold":true}],[";                                                                                                 ",{}],["|",{"inverse":true}],["~                     ",{"fg":4,"bold":true}]],"44":[["~                   ",{"fg":4,"bold":true}],["|",{"inverse":true}],["  ",{"fg":6,"bg":0,"bold":true}],[" 70 ",{"fg":3,"bold":true}],["}",{"bg":6}],["                                                                                                             ",{"underline":true}],["|",{"inverse":true}],["~                     ",{"fg":4,"bold":true}]],"46":[["[Name] test.cpp      ",{"inverse":true}],[" NORMAL ",{"bold":true}],[" ",{}],["test.cpp ",{"bold":true}],[" main()                                                      unix │ utf-8 │ cpp │  98% ",{}],[" LN  70",{"bold":true}],[":1  ",{}],[" ",{"bold":true,"inverse":true}],[" ~/NERD_tree_1 ",{"bold":true}],["       ",{}]],"47":[["                                                                                                                                                                ",{}]]},"cursor":{"y":44,"visible":true}}],[0.039127,{"lines":{"47":[["                                                                                                                                                     j          ",{}]]},"cursor":{"visible":false}}],[0.015345,{"lines":{"26":[["~                   ",{"fg":4,"bold":true}],["|",{"inverse":true}],["  ",{"fg":6,"bg":0,"bold":true}],[" 52 ",{"fg":3,"bold":true}],["{                                                                                                             ",{}],["|",{"inverse":true}],["~                     ",{"fg":4,"bold":true}]],"44":[["~                   ",{"fg":4,"bold":true}],["|",{"inverse":true}],["  ",{"fg":6,"bg":0,"bold":true}],[" 70 ",{"fg":3,"bold":true}],["}                                                                                                             ",{}],["|",{"inverse":true}],["~                     ",{"fg":4,"bold":true}]],"45":[["~                   ",{"fg":4,"bold":true}],["|",{"inverse":true}],["  ",{"fg":6,"bg":0,"bold":true}],[" 71 ",{"fg":3,"bold":true}],["                                                                                                              ",{"underline":true}],["|",{"inverse":true}],["~                     ",{"fg":4,"bold":true}]],"46":[["[Name] test.cpp      ",{"inverse":true}],[" NORMAL ",{"bold":true}],[" ",{}],["test.cpp ",{"bold":true}],[" main()                                                      unix │ utf-8 │ cpp │ 100% ",{}],[" LN  71",{"bold":true}],[":1  ",{}],[" ",{"bold":true,"inverse":true}],[" ~/NERD_tree_1 ",{"bold":true}],["       ",{}]]},"cursor":{"y":45}}],[0.002571,{"lines":{"47":[["                                                                                                                                                                ",{}]]},"cursor":{"visible":true}}],[0.033797,{}],[0.034229,{"lines":{"47":[["                                                                                                                                                     j          ",{}]]},"cursor":{"visible":false}}],[0.018461,{"lines":{"47":[["                                                                                                                                                                ",{}]]},"cursor":{"visible":true}}],[0.015265,{}],[0.039634,{}],[0.02873,{"lines":{"47":[["                                                                                                                                                     j          ",{}]]},"cursor":{"visible":false}}],[0.000304,{"lines":{"47":[["                                                                                                                                                                ",{}]]},"cursor":{"visible":true}}],[0.033735,{"lines":{"47":[["                                                                                                                                                     j          ",{}]]},"cursor":{"visible":false}}],[0.000888,{"lines":{"47":[["                                                                                                                                                                ",{}]]},"cursor":{"visible":true}}],[0.029704,{"lines":{"47":[["                                                                                                                                                     j          ",{}]]},"cursor":{"visible":false}}],[0.021681,{"lines":{"47":[["                                                                                                                                                                ",{}]]},"cursor":{"visible":true}}],[0.015334,{}],[0.039369,{"lines":{"47":[["                                                                                                                                                     j          ",{}]]},"cursor":{"visible":false}}],[0.000317,{"lines":{"47":[["                                                                                                                                                                ",{}]]},"cursor":{"visible":true}}],[0.028341,{}],[0.034213,{}],[0.034152,{"lines":{"47":[["                                                                                                                                                     j          ",{}]]},"cursor":{"visible":false}}],[0.031098,{"lines":{"47":[["                                                                                                                                                                ",{}]]},"cursor":{"visible":true}}],[0.006227,{}],[0.052718,{"lines":{"47":[["                                                                                                                                                     j          ",{}]]},"cursor":{"visible":false}}],[0.012521,{"lines":{"47":[["                                                                                                                                                                ",{}]]},"cursor":{"visible":true}}],[2.010506,{}],[11.226739,{"lines":{"47":[["                                                                                                                                                     k          ",{}]]},"cursor":{"visible":false}}],[0.043253,{"lines":{"26":[["~                   ",{"fg":4,"bold":true}],["|",{"inverse":true}],["  ",{"fg":6,"bg":0,"bold":true}],[" 52 ",{"fg":3,"bold":true}],["{",{"bg":6}],["                                                                                                             ",{}],["|",{"inverse":true}],["~                     ",{"fg":4,"bold":true}]],"44":[["~                   ",{"fg":4,"bold":true}],["|",{"inverse":true}],["  ",{"fg":6,"bg":0,"bold":true}],[" 70 ",{"fg":3,"bold":true}],["}",{"bg":6}],["                                                                                                             ",{"underline":true}],["|",{"inverse":true}],["~                     ",{"fg":4,"bold":true}]],"45":[["~                   ",{"fg":4,"bold":true}],["|",{"inverse":true}],["  ",{"fg":6,"bg":0,"bold":true}],[" 71 ",{"fg":3,"bold":true}],["                                                                                                              ",{}],["|",{"inverse":true}],["~                     ",{"fg":4,"bold":true}]],"46":[["[Name] test.cpp      ",{"inverse":true}],[" NORMAL ",{"bold":true}],[" ",{}],["test.cpp ",{"bold":true}],[" main()                                                      unix │ utf-8 │ cpp │  98% ",{}],[" LN  70",{"bold":true}],[":1  ",{}],[" ",{"bold":true,"inverse":true}],[" ~/NERD_tree_1 ",{"bold":true}],["       ",{}]],"47":[["                                                                                                                                                                ",{}]]},"cursor":{"y":44,"visible":true}}],[0.207769,{"lines":{"47":[["                                                                                                                                                     k          ",{}]]},"cursor":{"visible":false}}],[0.023097,{"lines":{"26":[["~                   ",{"fg":4,"bold":true}],["|",{"inverse":true}],["  ",{"fg":6,"bg":0,"bold":true}],[" 52 ",{"fg":3,"bold":true}],["{                                                                                                             ",{}],["|",{"inverse":true}],["~                     ",{"fg":4,"bold":true}]],"43":[["~                   ",{"fg":4,"bold":true}],["|",{"inverse":true}],["  ",{"fg":6,"bg":0,"bold":true}],[" 69 ",{"fg":3,"bold":true}],["    ",{"underline":true}],["return",{"fg":3,"bold":true,"underline":true}],[" ",{"underline":true}],["0",{"fg":5,"bold":true,"underline":true}],[";                                                                                                 ",{"underline":true}],["|",{"inverse":true}],["~                     ",{"fg":4,"bold":true}]],"44":[["~                   ",{"fg":4,"bold":true}],["|",{"inverse":true}],["  ",{"fg":6,"bg":0,"bold":true}],[" 70 ",{"fg":3,"bold":true}],["}                                                                                                             ",{}],["|",{"inverse":true}],["~                     ",{"fg":4,"bold":true}]],"46":[["[Name] test.cpp      ",{"inverse":true}],[" NORMAL ",{"bold":true}],[" ",{}],["test.cpp ",{"bold":true}],[" main()                                                      unix │ utf-8 │ cpp │  97% ",{}],[" LN  69",{"bold":true}],[":1  ",{}],[" ",{"bold":true,"inverse":true}],[" ~/NERD_tree_1 ",{"bold":true}],["       ",{}]],"47":[["                                                                                                                                                                ",{}]]},"cursor":{"y":43,"visible":true}}],[0.007256,{"lines":{"47":[["                                                                                                                                                     k          ",{}]]},"cursor":{"visible":false}}],[0.049818,{"lines":{"42":[["~                   ",{"fg":4,"bold":true}],["|",{"inverse":true}],["  ",{"fg":6,"bg":0,"bold":true}],[" 68 ",{"fg":3,"bold":true}],["                                                                                                              ",{"underline":true}],["|",{"inverse":true}],["~                     ",{"fg":4,"bold":true}]],"43":[["~                   ",{"fg":4,"bold":true}],["|",{"inverse":true}],["  ",{"fg":6,"bg":0,"bold":true}],[" 69 ",{"fg":3,"bold":true}],["    ",{}],["return",{"fg":3,"bold":true}],[" ",{}],["0",{"fg":5,"bold":true}],[";                                                                                                 ",{}],["|",{"inverse":true}],["~                     ",{"fg":4,"bold":true}]],"46":[["[Name] test.cpp      ",{"inverse":true}],[" NORMAL ",{"bold":true}],[" ",{}],["test.cpp ",{"bold":true}],[" main()                                                      unix │ utf-8 │ cpp │  95% ",{}],[" LN  68",{"bold":true}],[":1  ",{}],[" ",{"bold":true,"inverse":true}],[" ~/NERD_tree_1 ",{"bold":true}],["       ",{}]],"47":[["                                                                                                                                                                ",{}]]},"cursor":{"y":42,"visible":true}}],[0.01643,{"lines":{"41":[["~                   ",{"fg":4,"bold":true}],["|",{"inverse":true}],["  ",{"fg":6,"bg":0,"bold":true}],[" 67 ",{"fg":3,"bold":true}],["    pLast = ",{"underline":true}],["NULL",{"fg":5,"bold":true,"underline":true}],[";                                                                                             ",{"underline":true}],["|",{"inverse":true}],["~                     ",{"fg":4,"bold":true}]],"42":[["~                   ",{"fg":4,"bold":true}],["|",{"inverse":true}],["  ",{"fg":6,"bg":0,"bold":true}],[" 68 ",{"fg":3,"bold":true}],["                                                                                                              ",{}],["|",{"inverse":true}],["~                     ",{"fg":4,"bold":true}]],"46":[["[Name] test.cpp      ",{"inverse":true}],[" NORMAL ",{"bold":true}],[" ",{}],["test.cpp ",{"bold":true}],[" main()                                                      unix │ utf-8 │ cpp │  94% ",{}],[" LN  67",{"bold":true}],[":1  ",{}],[" ",{"bold":true,"inverse":true}],[" ~/NERD_tree_1 ",{"bold":true}],["       ",{}]]},"cursor":{"y":41}}],[0.012347,{"lines":{"40":[["~                   ",{"fg":4,"bold":true}],["|",{"inverse":true}],["  ",{"fg":6,"bg":0,"bold":true}],[" 66 ",{"fg":3,"bold":true}],["                                                                                                              ",{"underline":true}],["|",{"inverse":true}],["~                     ",{"fg":4,"bold":true}]],"41":[["~                   ",{"fg":4,"bold":true}],["|",{"inverse":true}],["  ",{"fg":6,"bg":0,"bold":true}],[" 67 ",{"fg":3,"bold":true}],["    pLast = ",{}],["NULL",{"fg":5,"bold":true}],[";                                                                                             ",{}],["|",{"inverse":true}],["~                     ",{"fg":4,"bold":true}]],"46":[["[Name] test.cpp      ",{"inverse":true}],[" NORMAL ",{"bold":true}],[" ",{}],["test.cpp ",{"bold":true}],[" main()                                                      unix │ utf-8 │ cpp │  92% ",{}],[" LN  66",{"bold":true}],[":1  ",{}],[" ",{"bold":true,"inverse":true}],[" ~/NERD_tree_1 ",{"bold":true}],["       ",{}]]},"cursor":{"y":40}}],[0.026842,{"lines":{"47":[["                                                                                                                                                     k          ",{}]]},"cursor":{"visible":false}}],[0.006274,{"lines":{"39":[["~                   ",{"fg":4,"bold":true}],["|",{"inverse":true}],["  ",{"fg":6,"bg":0,"bold":true}],[" 65 ",{"fg":3,"bold":true}],["    ",{"underline":true}],["delete",{"fg":3,"bold":true,"underline":true}],[" pLast;                                                                                             ",{"underline":true}],["|",{"inverse":true}],["~                     ",{"fg":4,"bold":true}]],"40":[["~                   ",{"fg":4,"bold":true}],["|",{"inverse":true}],["  ",{"fg":6,"bg":0,"bold":true}],[" 66 ",{"fg":3,"bold":true}],["                                                                                                              ",{}],["|",{"inverse":true}],["~                     ",{"fg":4,"bold":true}]],"46":[["[Name] test.cpp      ",{"inverse":true}],[" NORMAL ",{"bold":true}],[" ",{}],["test.cpp ",{"bold":true}],[" main()                                                      unix │ utf-8 │ cpp │  91% ",{}],[" LN  65",{"bold":true}],[":1  ",{}],[" ",{"bold":true,"inverse":true}],[" ~/NERD_tree_1 ",{"bold":true}],["       ",{}]],"47":[["                                                                                                                                                                ",{}]]},"cursor":{"y":39,"visible":true}}],[0.024366,{"lines":{"47":[["                                                                                                                                                     k          ",{}]]},"cursor":{"visible":false}}],[0.025004,{"lines":{"38":[["~                   ",{"fg":4,"bold":true}],["|",{"inverse":true}],["  ",{"fg":6,"bg":0,"bold":true}],[" 64 ",{"fg":3,"bold":true}],["                                                                                                              ",{"underline":true}],["|",{"inverse":true}],["~                     ",{"fg":4,"bold":true}]],"39":[["~                   ",{"fg":4,"bold":true}],["|",{"inverse":true}],["  ",{"fg":6,"bg":0,"bold":true}],[" 65 ",{"fg":3,"bold":true}],["    ",{}],["delete",{"fg":3,"bold":true}],[" pLast;                                                                                             ",{}],["|",{"inverse":true}],["~                     ",{"fg":4,"bold":true}]],"46":[["[Name] test.cpp      ",{"inverse":true}],[" NORMAL ",{"bold":true}],[" ",{}],["test.cpp ",{"bold":true}],[" main()                                                      unix │ utf-8 │ cpp │  90% ",{}],[" LN  64",{"bold":true}],[":1  ",{}],[" ",{"bold":true,"inverse":true}],[" ~/NERD_tree_1 ",{"bold":true}],["       ",{}]],"47":[["                                                                                                                                                                ",{}]]},"cursor":{"y":38,"visible":true}}],[0.008894000000000001,{"lines":{"47":[["                                                                                                                                                     k          ",{}]]},"cursor":{"visible":false}}],[0.010308,{"lines":{"37":[["~                   ",{"fg":4,"bold":true}],["|",{"inverse":true}],["  ",{"fg":6,"bg":0,"bold":true}],[" 63 ",{"fg":3,"bold":true}],["                                                                                                              ",{"underline":true}],["|",{"inverse":true}],["~                     ",{"fg":4,"bold":true}]],"38":[["~                   ",{"fg":4,"bold":true}],["|",{"inverse":true}],["  ",{"fg":6,"bg":0,"bold":true}],[" 64 ",{"fg":3,"bold":true}],["                                                                                                              ",{}],["|",{"inverse":true}],["~                     ",{"fg":4,"bold":true}]],"46":[["[Name] test.cpp      ",{"inverse":true}],[" NORMAL ",{"bold":true}],[" ",{}],["test.cpp ",{"bold":true}],[" main()                                                      unix │ utf-8 │ cpp │  88% ",{}],[" LN  63",{"bold":true}],[":1  ",{}],[" ",{"bold":true,"inverse":true}],[" ~/NERD_tree_1 ",{"bold":true}],["       ",{}]],"47":[["                                                                                                                                                                ",{}]]},"cursor":{"y":37,"visible":true}}],[0.032253,{"lines":{"47":[["                                                                                                                                                     k          ",{}]]},"cursor":{"visible":false}}],[0.008135,{"lines":{"36":[["~                   ",{"fg":4,"bold":true}],["|",{"inverse":true}],["  ",{"fg":6,"bg":0,"bold":true}],[" 62 ",{"fg":3,"bold":true}],["    cout << ",{"underline":true}],["sizeof",{"fg":3,"bold":true,"underline":true}],["(Last) << endl;                                                                             ",{"underline":true}],["|",{"inverse":true}],["~                     ",{"fg":4,"bold":true}]],"37":[["~                   ",{"fg":4,"bold":true}],["|",{"inverse":true}],["  ",{"fg":6,"bg":0,"bold":true}],[" 63 ",{"fg":3,"bold":true}],["                                                                                                              ",{}],["|",{"inverse":true}],["~                     ",{"fg":4,"bold":true}]],"46":[["[Name] test.cpp      ",{"inverse":true}],[" NORMAL ",{"bold":true}],[" ",{}],["test.cpp ",{"bold":true}],[" main()                                                      unix │ utf-8 │ cpp │  87% ",{}],[" LN  62",{"bold":true}],[":1  ",{}],[" ",{"bold":true,"inverse":true}],[" ~/NERD_tree_1 ",{"bold":true}],["       ",{}]],"47":[["                                                                                                                                                                ",{}]]},"cursor":{"y":36,"visible":true}}],[0.0174,{"lines":{"47":[["                                                                                                                                                     k          ",{}]]},"cursor":{"visible":false}}],[0.027656,{"lines":{"35":[["~                   ",{"fg":4,"bold":true}],["|",{"inverse":true}],["  ",{"fg":6,"bg":0,"bold":true}],[" 61 ",{"fg":3,"bold":true}],["                                                                                                              ",{"underline":true}],["|",{"inverse":true}],["~                     ",{"fg":4,"bold":true}]],"36":[["~                   ",{"fg":4,"bold":true}],["|",{"inverse":true}],["  ",{"fg":6,"bg":0,"bold":true}],[" 62 ",{"fg":3,"bold":true}],["    cout << ",{}],["sizeof",{"fg":3,"bold":true}],["(Last) << endl;                                                                             ",{}],["|",{"inverse":true}],["~                     ",{"fg":4,"bold":true}]],"46":[["[Name] test.cpp      ",{"inverse":true}],[" NORMAL ",{"bold":true}],[" ",{}],["test.cpp ",{"bold":true}],[" main()                                                      unix │ utf-8 │ cpp │  85% ",{}],[" LN  61",{"bold":true}],[":1  ",{}],[" ",{"bold":true,"inverse":true}],[" ~/NERD_tree_1 ",{"bold":true}],["       ",{}]],"47":[["                                                                                                                                                                ",{}]]},"cursor":{"y":35,"visible":true}}],[0.009783,{"lines":{"47":[["                                                                                                                                                     k          ",{}]]},"cursor":{"visible":false}}],[0.008828000000000001,{"lines":{"34":[["~                   ",{"fg":4,"bold":true}],["|",{"inverse":true}],["  ",{"fg":6,"bg":0,"bold":true}],[" 60 ",{"fg":3,"bold":true}],["    pSecond2->SecondRun2();                                                                                   ",{"underline":true}],["|",{"inverse":true}],["~                     ",{"fg":4,"bold":true}]],"35":[["~                   ",{"fg":4,"bold":true}],["|",{"inverse":true}],["  ",{"fg":6,"bg":0,"bold":true}],[" 61 ",{"fg":3,"bold":true}],["                                                                                                              ",{}],["|",{"inverse":true}],["~                     ",{"fg":4,"bold":true}]],"46":[["[Name] test.cpp      ",{"inverse":true}],[" NORMAL ",{"bold":true}],[" ",{}],["test.cpp ",{"bold":true}],[" main()                                                      unix │ utf-8 │ cpp │  84% ",{}],[" LN  60",{"bold":true}],[":1  ",{}],[" ",{"bold":true,"inverse":true}],[" ~/NERD_tree_1 ",{"bold":true}],["       ",{}]],"47":[["                                                                                                                                                                ",{}]]},"cursor":{"y":34,"visible":true}}],[0.034174,{"lines":{"47":[["                                                                                                                                                     k          ",{}]]},"cursor":{"visible":false}}],[0.008082000000000001,{"lines":{"33":[["~                   ",{"fg":4,"bold":true}],["|",{"inverse":true}],["  ",{"fg":6,"bg":0,"bold":true}],[" 59 ",{"fg":3,"bold":true}],["    Second* pSecond2 = pLast;                                                                                 ",{"underline":true}],["|",{"inverse":true}],["~                     ",{"fg":4,"bold":true}]],"34":[["~                   ",{"fg":4,"bold":true}],["|",{"inverse":true}],["  ",{"fg":6,"bg":0,"bold":true}],[" 60 ",{"fg":3,"bold":true}],["    pSecond2->SecondRun2();                                                                                   ",{}],["|",{"inverse":true}],["~                     ",{"fg":4,"bold":true}]],"46":[["[Name] test.cpp      ",{"inverse":true}],[" NORMAL ",{"bold":true}],[" ",{}],["test.cpp ",{"bold":true}],[" main()                                                      unix │ utf-8 │ cpp │  83% ",{}],[" LN  59",{"bold":true}],[":1  ",{}],[" ",{"bold":true,"inverse":true}],[" ~/NERD_tree_1 ",{"bold":true}],["       ",{}]],"47":[["                                                                                                                                                                ",{}]]},"cursor":{"y":33,"visible":true}}],[0.01326,{"lines":{"47":[["                                                                                                                                                     k          ",{}]]},"cursor":{"visible":false}}],[0.027651,{"lines":{"32":[["~                   ",{"fg":4,"bold":true}],["|",{"inverse":true}],["  ",{"fg":6,"bg":0,"bold":true}],[" 58 ",{"fg":3,"bold":true}],["                                                                                                              ",{"underline":true}],["|",{"inverse":true}],["~                     ",{"fg":4,"bold":true}]],"33":[["~                   ",{"fg":4,"bold":true}],["|",{"inverse":true}],["  ",{"fg":6,"bg":0,"bold":true}],[" 59 ",{"fg":3,"bold":true}],["    Second* pSecond2 = pLast;                                                                                 ",{}],["|",{"inverse":true}],["~                     ",{"fg":4,"bold":true}]],"46":[["[Name] test.cpp      ",{"inverse":true}],[" NORMAL ",{"bold":true}],[" ",{}],["test.cpp ",{"bold":true}],[" main()                                                      unix │ utf-8 │ cpp │  81% ",{}],[" LN  58",{"bold":true}],[":1  ",{}],[" ",{"bold":true,"inverse":true}],[" ~/NERD_tree_1 ",{"bold":true}],["       ",{}]],"47":[["                                                                                                                                                                ",{}]]},"cursor":{"y":32,"visible":true}}],[0.01655,{"lines":{"31":[["~                   ",{"fg":4,"bold":true}],["|",{"inverse":true}],["  ",{"fg":6,"bg":0,"bold":true}],[" 57 ",{"fg":3,"bold":true}],["    pSecond1->SecondRun2();                                                                                   ",{"underline":true}],["|",{"inverse":true}],["~                     ",{"fg":4,"bold":true}]],"32":[["~                   ",{"fg":4,"bold":true}],["|",{"inverse":true}],["  ",{"fg":6,"bg":0,"bold":true}],[" 58 ",{"fg":3,"bold":true}],["                                                                                                              ",{}],["|",{"inverse":true}],["~                     ",{"fg":4,"bold":true}]],"46":[["[Name] test.cpp      ",{"inverse":true}],[" NORMAL ",{"bold":true}],[" ",{}],["test.cpp ",{"bold":true}],[" main()                                                      unix │ utf-8 │ cpp │  80% ",{}],[" LN  57",{"bold":true}],[":1  ",{}],[" ",{"bold":true,"inverse":true}],[" ~/NERD_tree_1 ",{"bold":true}],["       ",{}]]},"cursor":{"y":31}}],[0.032526,{"lines":{"47":[["'reinterpret_cast' from class 'Last *' to its base at non-zero offset 'Second *' behaves differently from 'static_cast'                                         ",{}]]},"cursor":{"x":119,"y":47,"visible":false}}],[0.009183,{"lines":{"30":[["~                   ",{"fg":4,"bold":true}],["|",{"inverse":true}],[">>",{"fg":7,"bg":1,"bold":true}],[" 56 ",{"fg":3,"bold":true}],["    Second* pSecond1 = ",{"underline":true}],["reinterpret_cast",{"fg":3,"bg":1,"bold":true}],["<Second*>(pLast)",{"bg":1}],[";                                                      ",{"underline":true}],["|",{"inverse":true}],["~                     ",{"fg":4,"bold":true}]],"31":[["~                   ",{"fg":4,"bold":true}],["|",{"inverse":true}],["  ",{"fg":6,"bg":0,"bold":true}],[" 57 ",{"fg":3,"bold":true}],["    pSecond1->SecondRun2();                                                                                   ",{}],["|",{"inverse":true}],["~                     ",{"fg":4,"bold":true}]],"46":[["[Name] test.cpp      ",{"inverse":true}],[" NORMAL ",{"bold":true}],[" ",{}],["test.cpp ",{"bold":true}],[" main()                                                      unix │ utf-8 │ cpp │  78% ",{}],[" LN  56",{"bold":true}],[":1  ",{}],[" ",{"bold":true,"inverse":true}],[" ~/NERD_tree_1 ",{"bold":true}],["       ",{}]]},"cursor":{"x":27,"y":30,"visible":true}}],[0.016294,{"lines":{"47":[["'reinterpret_cast' from class 'Last *' to its base at non-zero offset 'Second *' behaves differently from 'static_cast'                              k          ",{}]]},"cursor":{"visible":false}}],[0.0008630000000000001,{"lines":{"47":[["                                                                                                                                                                ",{}]]},"cursor":{"x":0,"y":47}}],[0.027924,{"lines":{"29":[["~                   ",{"fg":4,"bold":true}],["|",{"inverse":true}],["  ",{"fg":6,"bg":0,"bold":true}],[" 55 ",{"fg":3,"bold":true}],["    v.begin();                                                                                                ",{"underline":true}],["|",{"inverse":true}],["~                     ",{"fg":4,"bold":true}]],"30":[["~                   ",{"fg":4,"bold":true}],["|",{"inverse":true}],[">>",{"fg":7,"bg":1,"bold":true}],[" 56 ",{"fg":3,"bold":true}],["    Second* pSecond1 = ",{}],["reinterpret_cast",{"fg":3,"bg":1,"bold":true}],["<Second*>(pLast)",{"bg":1}],[";                                                      ",{}],["|",{"inverse":true}],["~                     ",{"fg":4,"bold":true}]],"46":[["[Name] test.cpp      ",{"inverse":true}],[" NORMAL ",{"bold":true}],[" ",{}],["test.cpp ",{"bold":true}],[" main()                                                      unix │ utf-8 │ cpp │  77% ",{}],[" LN  55",{"bold":true}],[":1  ",{}],[" ",{"bold":true,"inverse":true}],[" ~/NERD_tree_1 ",{"bold":true}],["       ",{}]]},"cursor":{"x":27,"y":29,"visible":true}}],[0.01503,{"lines":{"28":[["~                   ",{"fg":4,"bold":true}],["|",{"inverse":true}],["  ",{"fg":6,"bg":0,"bold":true}],[" 54 ",{"fg":3,"bold":true}],["    vector<",{"underline":true}],["int",{"fg":2,"bold":true,"underline":true}],["> v;                                                                                            ",{"underline":true}],["|",{"inverse":true}],["~                     ",{"fg":4,"bold":true}]],"29":[["~                   ",{"fg":4,"bold":true}],["|",{"inverse":true}],["  ",{"fg":6,"bg":0,"bold":true}],[" 55 ",{"fg":3,"bold":true}],["    v.begin();                                                                                                ",{}],["|",{"inverse":true}],["~                     ",{"fg":4,"bold":true}]],"46":[["[Name] test.cpp      ",{"inverse":true}],[" NORMAL ",{"bold":true}],[" ",{}],["test.cpp ",{"bold":true}],[" main()                                                      unix │ utf-8 │ cpp │  76% ",{}],[" LN  54",{"bold":true}],[":1  ",{}],[" ",{"bold":true,"inverse":true}],[" ~/NERD_tree_1 ",{"bold":true}],["       ",{}]]},"cursor":{"y":28}}],[0.036299,{"lines":{"47":[["                                                                                                                                                     k          ",{}]]},"cursor":{"visible":false}}],[0.006851,{"lines":{"27":[["~                   ",{"fg":4,"bold":true}],["|",{"inverse":true}],["  ",{"fg":6,"bg":0,"bold":true}],[" 53 ",{"fg":3,"bold":true}],["    Last* pLast = ",{"underline":true}],["new",{"fg":3,"bold":true,"underline":true}],[" Last();                                                                                 ",{"underline":true}],["|",{"inverse":true}],["~                     ",{"fg":4,"bold":true}]],"28":[["~                   ",{"fg":4,"bold":true}],["|",{"inverse":true}],["  ",{"fg":6,"bg":0,"bold":true}],[" 54 ",{"fg":3,"bold":true}],["    vector<",{}],["int",{"fg":2,"bold":true}],["> v;                                                                                            ",{}],["|",{"inverse":true}],["~                     ",{"fg":4,"bold":true}]],"46":[["[Name] test.cpp      ",{"inverse":true}],[" NORMAL ",{"bold":true}],[" ",{}],["test.cpp ",{"bold":true}],[" main()                                                      unix │ utf-8 │ cpp │  74% ",{}],[" LN  53",{"bold":true}],[":1  ",{}],[" ",{"bold":true,"inverse":true}],[" ~/NERD_tree_1 ",{"bold":true}],["       ",{}]],"47":[["                                                                                                                                                                ",{}]]},"cursor":{"y":27,"visible":true}}],[0.014898,{"lines":{"47":[["                                                                                                                                                     k          ",{}]]},"cursor":{"visible":false}}],[0.010053,{"lines":{"26":[["~                   ",{"fg":4,"bold":true}],["|",{"inverse":true}],["  ",{"fg":6,"bg":0,"bold":true}],[" 52 ",{"fg":3,"bold":true}],["{",{"bg":6}],["                                                                                                             ",{"underline":true}],["|",{"inverse":true}],["~                     ",{"fg":4,"bold":true}]],"27":[["~                   ",{"fg":4,"bold":true}],["|",{"inverse":true}],["  ",{"fg":6,"bg":0,"bold":true}],[" 53 ",{"fg":3,"bold":true}],["    Last* pLast = ",{}],["new",{"fg":3,"bold":true}],[" Last();                                                                                 ",{}],["|",{"inverse":true}],["~                     ",{"fg":4,"bold":true}]],"44":[["~                   ",{"fg":4,"bold":true}],["|",{"inverse":true}],["  ",{"fg":6,"bg":0,"bold":true}],[" 70 ",{"fg":3,"bold":true}],["}",{"bg":6}],["                                                                                                             ",{}],["|",{"inverse":true}],["~                     ",{"fg":4,"bold":true}]],"46":[["[Name] test.cpp      ",{"inverse":true}],[" NORMAL ",{"bold":true}],[" ",{}],["test.cpp ",{"bold":true}],[" main()                                                      unix │ utf-8 │ cpp │  73% ",{}],[" LN  52",{"bold":true}],[":1  ",{}],[" ",{"bold":true,"inverse":true}],[" ~/NERD_tree_1 ",{"bold":true}],["       ",{}]],"47":[["                                                                                                                                                                ",{}]]},"cursor":{"y":26,"visible":true}}],[0.027517,{"lines":{"47":[["unused parameter 'argc'                                                                                                                                         ",{}]]},"cursor":{"x":23,"y":47,"visible":false}}],[0.007535,{"lines":{"25":[["~                   ",{"fg":4,"bold":true}],["|",{"inverse":true}],[">>",{"fg":7,"bg":1,"bold":true}],[" 51 ",{"fg":3,"bold":true}],["int",{"fg":2,"bold":true,"underline":true}],[" main(",{"underline":true}],["int",{"fg":2,"bold":true,"underline":true}],[" ",{"underline":true}],["argc",{"bg":1}],[", ",{"underline":true}],["char",{"fg":2,"bold":true,"underline":true}],["* ",{"underline":true}],["argv",{"bg":1}],["[])                                                                              ",{"underline":true}],["|",{"inverse":true}],["~                     ",{"fg":4,"bold":true}]],"26":[["~                   ",{"fg":4,"bold":true}],["|",{"inverse":true}],["  ",{"fg":6,"bg":0,"bold":true}],[" 52 ",{"fg":3,"bold":true}],["{                                                                                                             ",{}],["|",{"inverse":true}],["~                     ",{"fg":4,"bold":true}]],"44":[["~                   ",{"fg":4,"bold":true}],["|",{"inverse":true}],["  ",{"fg":6,"bg":0,"bold":true}],[" 70 ",{"fg":3,"bold":true}],["}                                                                                                             ",{}],["|",{"inverse":true}],["~                     ",{"fg":4,"bold":true}]],"46":[["[Name] test.cpp      ",{"inverse":true}],[" NORMAL ",{"bold":true}],[" ",{}],["test.cpp ",{"bold":true}],[" main()                                                      unix │ utf-8 │ cpp │  71% ",{}],[" LN  51",{"bold":true}],[":1  ",{}],[" ",{"bold":true,"inverse":true}],[" ~/NERD_tree_1 ",{"bold":true}],["       ",{}]]},"cursor":{"x":27,"y":25,"visible":true}}],[0.023039,{"lines":{"47":[["unused parameter 'argc'                                                                                                                              k          ",{}]]},"cursor":{"visible":false}}],[0.00145,{"lines":{"47":[["                                                                                                                                                                ",{}]]},"cursor":{"x":0,"y":47}}],[0.031015,{"lines":{"24":[["~                   ",{"fg":4,"bold":true}],["|",{"inverse":true}],["  ",{"fg":6,"bg":0,"bold":true}],[" 50 ",{"fg":3,"bold":true}],["                                                                                                              ",{"underline":true}],["|",{"inverse":true}],["~                     ",{"fg":4,"bold":true}]],"25":[["~                   ",{"fg":4,"bold":true}],["|",{"inverse":true}],[">>",{"fg":7,"bg":1,"bold":true}],[" 51 ",{"fg":3,"bold":true}],["int",{"fg":2,"bold":true}],[" main(",{}],["int",{"fg":2,"bold":true}],[" ",{}],["argc",{"bg":1}],[", ",{}],["char",{"fg":2,"bold":true}],["* ",{}],["argv",{"bg":1}],["[])                                                                              ",{}],["|",{"inverse":true}],["~                     ",{"fg":4,"bold":true}]],"46":[["[Name] test.cpp      ",{"inverse":true}],[" NORMAL ",{"bold":true}],[" ",{}],["test.cpp ",{"bold":true}],[" ~Last()                                                     unix │ utf-8 │ cpp │  70% ",{}],[" LN  50",{"bold":true}],[":1  ",{}],[" ",{"bold":true,"inverse":true}],[" ~/NERD_tree_1 ",{"bold":true}],["       ",{}]]},"cursor":{"x":27,"y":24,"visible":true}}],[0.011634,{"lines":{"23":[["~                   ",{"fg":4,"bold":true}],["|",{"inverse":true}],["  ",{"fg":6,"bg":0,"bold":true}],[" 49 ",{"fg":3,"bold":true}],["                                                                                                              ",{"underline":true}],["|",{"inverse":true}],["~                     ",{"fg":4,"bold":true}]],"24":[["~                   ",{"fg":4,"bold":true}],["|",{"inverse":true}],["  ",{"fg":6,"bg":0,"bold":true}],[" 50 ",{"fg":3,"bold":true}],["                                                                                                              ",{}],["|",{"inverse":true}],["~                     ",{"fg":4,"bold":true}]],"46":[["[Name] test.cpp      ",{"inverse":true}],[" NORMAL ",{"bold":true}],[" ",{}],["test.cpp ",{"bold":true}],[" ~Last()                                                     unix │ utf-8 │ cpp │  69% ",{}],[" LN  49",{"bold":true}],[":1  ",{}],[" ",{"bold":true,"inverse":true}],[" ~/NERD_tree_1 ",{"bold":true}],["       ",{}]]},"cursor":{"y":23}}],[0.040371,{"lines":{"47":[["                                                                                                                                                     k          ",{}]]},"cursor":{"visible":false}}],[0.008404999999999999,{"lines":{"22":[["~                   ",{"fg":4,"bold":true}],["|",{"inverse":true}],["  ",{"fg":6,"bg":0,"bold":true}],[" 48 ",{"fg":3,"bold":true}],["};                                                                                                            ",{"underline":true}],["|",{"inverse":true}],["~                     ",{"fg":4,"bold":true}]],"23":[["~                   ",{"fg":4,"bold":true}],["|",{"inverse":true}],["  ",{"fg":6,"bg":0,"bold":true}],[" 49 ",{"fg":3,"bold":true}],["                                                                                                              ",{}],["|",{"inverse":true}],["~                     ",{"fg":4,"bold":true}]],"46":[["[Name] test.cpp      ",{"inverse":true}],[" NORMAL ",{"bold":true}],[" ",{}],["test.cpp ",{"bold":true}],[" ~Last()                                                     unix │ utf-8 │ cpp │  67% ",{}],[" LN  48",{"bold":true}],[":1  ",{}],[" ",{"bold":true,"inverse":true}],[" ~/NERD_tree_1 ",{"bold":true}],["       ",{}]],"47":[["                                                                                                                                                                ",{}]]},"cursor":{"y":22,"visible":true}}],[0.010097,{"lines":{"47":[["                                                                                                                                                     k          ",{}]]},"cursor":{"visible":false}}],[0.009703,{"lines":{"21":[["    ",{"underline":true}],["main",{"fg":0,"bg":3}],["(int argc, c",{"underline":true}],["|",{"inverse":true}],["  ",{"fg":6,"bg":0,"bold":true}],[" 47 ",{"fg":3,"bold":true}],["                                                                                                              ",{"underline":true}],["|",{"inverse":true}],["~                     ",{"fg":4,"bold":true}]],"22":[["~                   ",{"fg":4,"bold":true}],["|",{"inverse":true}],["  ",{"fg":6,"bg":0,"bold":true}],[" 48 ",{"fg":3,"bold":true}],["};                                                                                                            ",{}],["|",{"inverse":true}],["~                     ",{"fg":4,"bold":true}]],"46":[["[Name] test.cpp      ",{"inverse":true}],[" NORMAL ",{"bold":true}],[" ",{}],["test.cpp ",{"bold":true}],[" ~Last()                                                     unix │ utf-8 │ cpp │  66% ",{}],[" LN  47",{"bold":true}],[":1  ",{}],[" ",{"bold":true,"inverse":true}],[" ~/NERD_tree_1 ",{"bold":true}],["       ",{}]],"47":[["                                                                                                                                                                ",{}]]},"cursor":{"y":21,"visible":true}}],[0.027799,{"lines":{"47":[["                                                                                                                                                     k          ",{}]]},"cursor":{"visible":false}}],[0.008281999999999999,{"lines":{"20":[["▼",{"fg":3,"bold":true}],[" ",{}],["functions",{"fg":6,"bold":true}],["         ",{}],["|",{"inverse":true}],["  ",{"fg":6,"bg":0,"bold":true}],[" 46 ",{"fg":3,"bold":true}],["    }                                                                                                         ",{"underline":true}],["|",{"inverse":true}],["~                     ",{"fg":4,"bold":true}]],"21":[["    ",{"underline":true}],["main",{"fg":0,"bg":3}],["(int argc, c",{"underline":true}],["|",{"inverse":true}],["  ",{"fg":6,"bg":0,"bold":true}],[" 47 ",{"fg":3,"bold":true}],["                                                                                                              ",{}],["|",{"inverse":true}],["~                     ",{"fg":4,"bold":true}]],"46":[["[Name] test.cpp      ",{"inverse":true}],[" NORMAL ",{"bold":true}],[" ",{}],["test.cpp ",{"bold":true}],[" ~Last()                                                     unix │ utf-8 │ cpp │  64% ",{}],[" LN  46",{"bold":true}],[":1  ",{}],[" ",{"bold":true,"inverse":true}],[" ~/NERD_tree_1 ",{"bold":true}],["       ",{}]],"47":[["                                                                                                                                                                ",{}]]},"cursor":{"y":20,"visible":true}}],[0.022177,{"lines":{"47":[["                                                                                                                                                     k          ",{}]]},"cursor":{"visible":false}}],[0.02676,{"lines":{"19":[["                    ",{}],["|",{"inverse":true}],["  ",{"fg":6,"bg":0,"bold":true}],[" 45 ",{"fg":3,"bold":true}],["                                                                                                              ",{"underline":true}],["|",{"inverse":true}],["~                     ",{"fg":4,"bold":true}]],"20":[["▼",{"fg":3,"bold":true}],[" ",{}],["functions",{"fg":6,"bold":true}],["         ",{}],["|",{"inverse":true}],["  ",{"fg":6,"bg":0,"bold":true}],[" 46 ",{"fg":3,"bold":true}],["    }                                                                                                         ",{}],["|",{"inverse":true}],["~                     ",{"fg":4,"bold":true}]],"46":[["[Name] test.cpp      ",{"inverse":true}],[" NORMAL ",{"bold":true}],[" ",{}],["test.cpp ",{"bold":true}],[" ~Last()                                                     unix │ utf-8 │ cpp │  63% ",{}],[" LN  45",{"bold":true}],[":1  ",{}],[" ",{"bold":true,"inverse":true}],[" ~/NERD_tree_1 ",{"bold":true}],["       ",{}]],"47":[["                                                                                                                                                                ",{}]]},"cursor":{"y":19,"visible":true}}],[0.010739,{"lines":{"47":[["                                                                                                                                                     k          ",{}]]},"cursor":{"visible":false}}],[0.006196,{"lines":{"18":[["   ",{}],["+",{"fg":2,"bold":true}],["SecondRun2(void)",{}],["|",{"inverse":true}],["  ",{"fg":6,"bg":0,"bold":true}],[" 44 ",{"fg":3,"bold":true}],["    {                                                                                                         ",{"underline":true}],["|",{"inverse":true}],["~                     ",{"fg":4,"bold":true}]],"19":[["                    ",{}],["|",{"inverse":true}],["  ",{"fg":6,"bg":0,"bold":true}],[" 45 ",{"fg":3,"bold":true}],["                                                                                                              ",{}],["|",{"inverse":true}],["~                     ",{"fg":4,"bold":true}]],"46":[["[Name] test.cpp      ",{"inverse":true}],[" NORMAL ",{"bold":true}],[" ",{}],["test.cpp ",{"bold":true}],[" ~Last()                                                     unix │ utf-8 │ cpp │  61% ",{}],[" LN  44",{"bold":true}],[":1  ",{}],[" ",{"bold":true,"inverse":true}],[" ~/NERD_tree_1 ",{"bold":true}],["       ",{}]],"47":[["                                                                                                                                                                ",{}]]},"cursor":{"y":18,"visible":true}}],[0.034871,{"lines":{"47":[["                                                                                                                                                     k          ",{}]]},"cursor":{"visible":false}}],[0.00754,{"lines":{"17":[["   ",{}],["+",{"fg":2,"bold":true}],["SecondRun(void) ",{}],["|",{"inverse":true}],["  ",{"fg":6,"bg":0,"bold":true}],[" 43 ",{"fg":3,"bold":true}],["    ",{"underline":true}],["virtual",{"fg":2,"bold":true,"underline":true}],[" ~Last()                                                                                           ",{"underline":true}],["|",{"inverse":true}],["~                     ",{"fg":4,"bold":true}]],"18":[["   ",{}],["+",{"fg":2,"bold":true}],["SecondRun2(void)",{}],["|",{"inverse":true}],["  ",{"fg":6,"bg":0,"bold":true}],[" 44 ",{"fg":3,"bold":true}],["    {                                                                                                         ",{}],["|",{"inverse":true}],["~                     ",{"fg":4,"bold":true}]],"46":[["[Name] test.cpp      ",{"inverse":true}],[" NORMAL ",{"bold":true}],[" ",{}],["test.cpp ",{"bold":true}],[" ~Last()                                                     unix │ utf-8 │ cpp │  60% ",{}],[" LN  43",{"bold":true}],[":1  ",{}],[" ",{"bold":true,"inverse":true}],[" ~/NERD_tree_1 ",{"bold":true}],["       ",{}]],"47":[["                                                                                                                                                                ",{}]]},"cursor":{"y":17,"visible":true}}],[0.015914,{"lines":{"47":[["                                                                                                                                                     k          ",{}]]},"cursor":{"visible":false}}],[0.009283,{"lines":{"16":[["    [prototypes]",{"fg":6,"bold":true}],["    ",{}],["|",{"inverse":true}],["  ",{"fg":6,"bg":0,"bold":true}],[" 42 ",{"fg":3,"bold":true}],["                                                                                                              ",{"underline":true}],["|",{"inverse":true}],["~                     ",{"fg":4,"bold":true}]],"17":[["   ",{}],["+",{"fg":2,"bold":true}],["SecondRun(void) ",{}],["|",{"inverse":true}],["  ",{"fg":6,"bg":0,"bold":true}],[" 43 ",{"fg":3,"bold":true}],["    ",{}],["virtual",{"fg":2,"bold":true}],[" ~Last()                                                                                           ",{}],["|",{"inverse":true}],["~                     ",{"fg":4,"bold":true}]],"46":[["[Name] test.cpp      ",{"inverse":true}],[" NORMAL ",{"bold":true}],[" ",{}],["test.cpp ",{"bold":true}],[" SecondRun2()                                                unix │ utf-8 │ cpp │  59% ",{}],[" LN  42",{"bold":true}],[":1  ",{}],[" ",{"bold":true,"inverse":true}],[" ~/NERD_tree_1 ",{"bold":true}],["       ",{}]],"47":[["                                                                                                                                                                ",{}]]},"cursor":{"y":16,"visible":true}}],[0.028236,{"lines":{"47":[["                                                                                                                                                     k          ",{}]]},"cursor":{"visible":false}}],[0.005941,{"lines":{"15":[["▼",{"fg":3,"bold":true}],[" Second",{"fg":5,"bold":true}],[" : ",{}],["struct",{"fg":2,"bold":true}],["   ",{}],["|",{"inverse":true}],["  ",{"fg":6,"bg":0,"bold":true}],[" 41 ",{"fg":3,"bold":true}],["    }                                                                                                         ",{"underline":true}],["|",{"inverse":true}],["~                     ",{"fg":4,"bold":true}]],"16":[["    [prototypes]",{"fg":6,"bold":true}],["    ",{}],["|",{"inverse":true}],["  ",{"fg":6,"bg":0,"bold":true}],[" 42 ",{"fg":3,"bold":true}],["                                                                                                              ",{}],["|",{"inverse":true}],["~                     ",{"fg":4,"bold":true}]],"46":[["[Name] test.cpp      ",{"inverse":true}],[" NORMAL ",{"bold":true}],[" ",{}],["test.cpp ",{"bold":true}],[" SecondRun2()                                                unix │ utf-8 │ cpp │  57% ",{}],[" LN  41",{"bold":true}],[":1  ",{}],[" ",{"bold":true,"inverse":true}],[" ~/NERD_tree_1 ",{"bold":true}],["       ",{}]],"47":[["                                                                                                                                                                ",{}]]},"cursor":{"y":15,"visible":true}}],[0.035272,{"lines":{"47":[["                                                                                                                                                     k          ",{}]]},"cursor":{"visible":false}}],[0.006884,{"lines":{"14":[["                    ",{}],["|",{"inverse":true}],["  ",{"fg":6,"bg":0,"bold":true}],[" 40 ",{"fg":3,"bold":true}],["    ",{"underline":true}],["|",{"fg":2,"bold":true}],["   cout <<",{"underline":true}],["\"Second2\"",{"fg":5,"bold":true,"underline":true}],[" << endl;                                                                             ",{"underline":true}],["|",{"inverse":true}],["~                     ",{"fg":4,"bold":true}]],"15":[["▼",{"fg":3,"bold":true}],[" Second",{"fg":5,"bold":true}],[" : ",{}],["struct",{"fg":2,"bold":true}],["   ",{}],["|",{"inverse":true}],["  ",{"fg":6,"bg":0,"bold":true}],[" 41 ",{"fg":3,"bold":true}],["    }                                                                                                         ",{}],["|",{"inverse":true}],["~                     ",{"fg":4,"bold":true}]],"46":[["[Name] test.cpp      ",{"inverse":true}],[" NORMAL ",{"bold":true}],[" ",{}],["test.cpp ",{"bold":true}],[" SecondRun2()                                                unix │ utf-8 │ cpp │  56% ",{}],[" LN  40",{"bold":true}],[":1  ",{}],[" ",{"bold":true,"inverse":true}],[" ~/NERD_tree_1 ",{"bold":true}],["       ",{}]],"47":[["                                                                                                                                                                ",{}]]},"cursor":{"y":14,"visible":true}}],[0.016354,{"lines":{"47":[["                                                                                                                                                     k          ",{}]]},"cursor":{"visible":false}}],[0.008917,{"lines":{"13":[["   ",{}],["+",{"fg":2,"bold":true}],["SecondRun2(void)",{}],["|",{"inverse":true}],["  ",{"fg":6,"bg":0,"bold":true}],[" 39 ",{"fg":3,"bold":true}],["    {                                                                                                         ",{"underline":true}],["|",{"inverse":true}],["~                     ",{"fg":4,"bold":true}]],"14":[["                    ",{}],["|",{"inverse":true}],["  ",{"fg":6,"bg":0,"bold":true}],[" 40 ",{"fg":3,"bold":true}],["    ",{}],["|",{"fg":2,"bold":true}],["   cout <<",{}],["\"Second2\"",{"fg":5,"bold":true}],[" << endl;                                                                             ",{}],["|",{"inverse":true}],["~                     ",{"fg":4,"bold":true}]],"46":[["[Name] test.cpp      ",{"inverse":true}],[" NORMAL ",{"bold":true}],[" ",{}],["test.cpp ",{"bold":true}],[" SecondRun2()                                                unix │ utf-8 │ cpp │  54% ",{}],[" LN  39",{"bold":true}],[":1  ",{}],[" ",{"bold":true,"inverse":true}],[" ~/NERD_tree_1 ",{"bold":true}],["       ",{}]],"47":[["                                                                                                                                                                ",{}]]},"cursor":{"y":13,"visible":true}}],[0.028652,{"lines":{"47":[["                                                                                                                                                     k          ",{}]]},"cursor":{"visible":false}}],[0.006568,{"lines":{"12":[["   ",{}],["+",{"fg":2,"bold":true}],["SecondRun(void) ",{}],["|",{"inverse":true}],["  ",{"fg":6,"bg":0,"bold":true}],[" 38 ",{"fg":3,"bold":true}],["    ",{"underline":true}],["virtual",{"fg":2,"bold":true,"underline":true}],[" ",{"underline":true}],["void",{"fg":2,"bold":true,"underline":true}],[" SecondRun2(",{"underline":true}],["void",{"fg":2,"bold":true,"underline":true}],[")                                                                             ",{"underline":true}],["|",{"inverse":true}],["~                     ",{"fg":4,"bold":true}]],"13":[["   ",{}],["+",{"fg":2,"bold":true}],["SecondRun2(void)",{}],["|",{"inverse":true}],["  ",{"fg":6,"bg":0,"bold":true}],[" 39 ",{"fg":3,"bold":true}],["    {                                                                                                         ",{}],["|",{"inverse":true}],["~                     ",{"fg":4,"bold":true}]],"46":[["[Name] test.cpp      ",{"inverse":true}],[" NORMAL ",{"bold":true}],[" ",{}],["test.cpp ",{"bold":true}],[" SecondRun2()                                                unix │ utf-8 │ cpp │  53% ",{}],[" LN  38",{"bold":true}],[":1  ",{}],[" ",{"bold":true,"inverse":true}],[" ~/NERD_tree_1 ",{"bold":true}],["       ",{}]],"47":[["                                                                                                                                                                ",{}]]},"cursor":{"y":12,"visible":true}}],[0.023986,{"lines":{"47":[["                                                                                                                                                     k          ",{}]]},"cursor":{"visible":false}}],[0.030087,{"lines":{"11":[["   ",{}],["+",{"fg":2,"bold":true}],["~Last()         ",{}],["|",{"inverse":true}],["  ",{"fg":6,"bg":0,"bold":true}],[" 37 ",{"fg":3,"bold":true}],["                                                                                                              ",{"underline":true}],["|",{"inverse":true}],["~                     ",{"fg":4,"bold":true}]],"12":[["   ",{}],["+",{"fg":2,"bold":true}],["SecondRun(void) ",{}],["|",{"inverse":true}],["  ",{"fg":6,"bg":0,"bold":true}],[" 38 ",{"fg":3,"bold":true}],["    ",{}],["virtual",{"fg":2,"bold":true}],[" ",{}],["void",{"fg":2,"bold":true}],[" SecondRun2(",{}],["void",{"fg":2,"bold":true}],[")                                                                             ",{}],["|",{"inverse":true}],["~                     ",{"fg":4,"bold":true}]],"46":[["[Name] test.cpp      ",{"inverse":true}],[" NORMAL ",{"bold":true}],[" ",{}],["test.cpp ",{"bold":true}],[" SecondRun()                                                 unix │ utf-8 │ cpp │  52% ",{}],[" LN  37",{"bold":true}],[":1  ",{}],[" ",{"bold":true,"inverse":true}],[" ~/NERD_tree_1 ",{"bold":true}],["       ",{}]],"47":[["                                                                                                                                                                ",{}]]},"cursor":{"y":11,"visible":true}}],[0.013328,{"lines":{"10":[["   ",{}],["+",{"fg":2,"bold":true}],["FirstRun2(void) ",{}],["|",{"inverse":true}],["  ",{"fg":6,"bg":0,"bold":true}],[" 36 ",{"fg":3,"bold":true}],["    }                                                                                                         ",{"underline":true}],["|",{"inverse":true}],["~                     ",{"fg":4,"bold":true}]],"11":[["   ",{}],["+",{"fg":2,"bold":true}],["~Last()         ",{}],["|",{"inverse":true}],["  ",{"fg":6,"bg":0,"bold":true}],[" 37 ",{"fg":3,"bold":true}],["                                                                                                              ",{}],["|",{"inverse":true}],["~                     ",{"fg":4,"bold":true}]],"46":[["[Name] test.cpp      ",{"inverse":true}],[" NORMAL ",{"bold":true}],[" ",{}],["test.cpp ",{"bold":true}],[" SecondRun()                                                 unix │ utf-8 │ cpp │  50% ",{}],[" LN  36",{"bold":true}],[":1  ",{}],[" ",{"bold":true,"inverse":true}],[" ~/NERD_tree_1 ",{"bold":true}],["       ",{}]]},"cursor":{"y":10}}],[0.041091,{"lines":{"47":[["                                                                                                                                                     k          ",{}]]},"cursor":{"visible":false}}],[0.007366,{"lines":{"9":[["   ",{}],["+",{"fg":2,"bold":true}],["FirstRun(void)  ",{}],["|",{"inverse":true}],["  ",{"fg":6,"bg":0,"bold":true}],[" 35 ",{"fg":3,"bold":true}],["    ",{"underline":true}],["|",{"fg":2,"bold":true}],["   cout <<",{"underline":true}],["\"Second\"",{"fg":5,"bold":true,"underline":true}],[" << endl;                                                                              ",{"underline":true}],["|",{"inverse":true}],[" 10 ",{"fg":3,"bold":true}],["  test.cpp        ",{}]],"10":[["   ",{}],["+",{"fg":2,"bold":true}],["FirstRun2(void) ",{}],["|",{"inverse":true}],["  ",{"fg":6,"bg":0,"bold":true}],[" 36 ",{"fg":3,"bold":true}],["    }                                                                                                         ",{}],["|",{"inverse":true}],["~                     ",{"fg":4,"bold":true}]],"46":[["[Name] test.cpp      ",{"inverse":true}],[" NORMAL ",{"bold":true}],[" ",{}],["test.cpp ",{"bold":true}],[" SecondRun()                                                 unix │ utf-8 │ cpp │  49% ",{}],[" LN  35",{"bold":true}],[":1  ",{}],[" ",{"bold":true,"inverse":true}],[" ~/NERD_tree_1 ",{"bold":true}],["       ",{}]],"47":[["                                                                                                                                                                ",{}]]},"cursor":{"y":9,"visible":true}}],[0.010014,{"lines":{"47":[["                                                                                                                                                     k          ",{}]]},"cursor":{"visible":false}}],[0.00954,{"lines":{"8":[["    [functions]",{"fg":6,"bold":true}],["     ",{}],["|",{"inverse":true}],["  ",{"fg":6,"bg":0,"bold":true}],[" 34 ",{"fg":3,"bold":true}],["    {                                                                                                         ",{"underline":true}],["|",{"inverse":true}],["  9 ",{"fg":3,"bold":true}],["  test.c          ",{}]],"9":[["   ",{}],["+",{"fg":2,"bold":true}],["FirstRun(void)  ",{}],["|",{"inverse":true}],["  ",{"fg":6,"bg":0,"bold":true}],[" 35 ",{"fg":3,"bold":true}],["    ",{}],["|",{"fg":2,"bold":true}],["   cout <<",{}],["\"Second\"",{"fg":5,"bold":true}],[" << endl;                                                                              ",{}],["|",{"inverse":true}],[" 10 ",{"fg":3,"bold":true}],["  test.cpp        ",{}]],"46":[["[Name] test.cpp      ",{"inverse":true}],[" NORMAL ",{"bold":true}],[" ",{}],["test.cpp ",{"bold":true}],[" SecondRun()                                                 unix │ utf-8 │ cpp │  47% ",{}],[" LN  34",{"bold":true}],[":1  ",{}],[" ",{"bold":true,"inverse":true}],[" ~/NERD_tree_1 ",{"bold":true}],["       ",{}]],"47":[["                                                                                                                                                                ",{}]]},"cursor":{"y":8,"visible":true}}],[0.030973,{"lines":{"47":[["                                                                                                                                                     k          ",{}]]},"cursor":{"visible":false}}],[0.005504,{"lines":{"7":[["▼",{"fg":3,"bold":true}],[" Last",{"fg":5,"bold":true}],[" : ",{}],["struct",{"fg":2,"bold":true}],["     ",{}],["|",{"inverse":true}],["  ",{"fg":6,"bg":0,"bold":true}],[" 33 ",{"fg":3,"bold":true}],["    ",{"underline":true}],["virtual",{"fg":2,"bold":true,"underline":true}],[" ",{"underline":true}],["void",{"fg":2,"bold":true,"underline":true}],[" SecondRun(",{"underline":true}],["void",{"fg":2,"bold":true,"underline":true}],[")                                                                              ",{"underline":true}],["|",{"inverse":true}],["  8 ",{"fg":3,"bold":true}],["  initial-setup-ks",{}]],"8":[["    [functions]",{"fg":6,"bold":true}],["     ",{}],["|",{"inverse":true}],["  ",{"fg":6,"bg":0,"bold":true}],[" 34 ",{"fg":3,"bold":true}],["    {                                                                                                         ",{}],["|",{"inverse":true}],["  9 ",{"fg":3,"bold":true}],["  test.c          ",{}]],"46":[["[Name] test.cpp      ",{"inverse":true}],[" NORMAL ",{"bold":true}],[" ",{}],["test.cpp ",{"bold":true}],[" SecondRun()                                                 unix │ utf-8 │ cpp │  46% ",{}],[" LN  33",{"bold":true}],[":1  ",{}],[" ",{"bold":true,"inverse":true}],[" ~/NERD_tree_1 ",{"bold":true}],["       ",{}]],"47":[["                                                                                                                                                                ",{}]]},"cursor":{"y":7,"visible":true}}],[0.02511,{"lines":{"47":[["                                                                                                                                                     k          ",{}]]},"cursor":{"visible":false}}],[0.026998,{"lines":{"6":[["                    ",{}],["|",{"inverse":true}],["  ",{"fg":6,"bg":0,"bold":true}],[" 32 ",{"fg":3,"bold":true}],["    ",{"underline":true}],["// 基类Second虚方法",{"fg":6,"bold":true,"underline":true}],["                                                                                       ",{"underline":true}],["|",{"inverse":true}],["  7 ",{"fg":3,"bold":true}],["  anaconda-ks.cfg ",{}]],"7":[["▼",{"fg":3,"bold":true}],[" Last",{"fg":5,"bold":true}],[" : ",{}],["struct",{"fg":2,"bold":true}],["     ",{}],["|",{"inverse":true}],["  ",{"fg":6,"bg":0,"bold":true}],[" 33 ",{"fg":3,"bold":true}],["    ",{}],["virtual",{"fg":2,"bold":true}],[" ",{}],["void",{"fg":2,"bold":true}],[" SecondRun(",{}],["void",{"fg":2,"bold":true}],[")                                                                              ",{}],["|",{"inverse":true}],["  8 ",{"fg":3,"bold":true}],["  initial-setup-ks",{}]],"46":[["[Name] test.cpp      ",{"inverse":true}],[" NORMAL ",{"bold":true}],[" ",{}],["test.cpp ",{"bold":true}],[" FirstRun2()                                                 unix │ utf-8 │ cpp │  45% ",{}],[" LN  32",{"bold":true}],[":1  ",{}],[" ",{"bold":true,"inverse":true}],[" ~/NERD_tree_1 ",{"bold":true}],["       ",{}]],"47":[["                                                                                                                                                                ",{}]]},"cursor":{"y":6,"visible":true}}],[0.010477,{"lines":{"47":[["                                                                                                                                                     k          ",{}]]},"cursor":{"visible":false}}],[0.006617,{"lines":{"5":[["   ",{}],["+",{"fg":2,"bold":true}],["FirstRun2(void) ",{}],["|",{"inverse":true}],["  ",{"fg":6,"bg":0,"bold":true}],[" 31 ",{"fg":3,"bold":true}],["                                                                                                              ",{"underline":true}],["|",{"inverse":true}],["  6 ",{"fg":3,"bold":true}],["▸ temp/",{"fg":6,"bold":true}],["           ",{}]],"6":[["                    ",{}],["|",{"inverse":true}],["  ",{"fg":6,"bg":0,"bold":true}],[" 32 ",{"fg":3,"bold":true}],["    ",{}],["// 基类Second虚方法",{"fg":6,"bold":true}],["                                                                                       ",{}],["|",{"inverse":true}],["  7 ",{"fg":3,"bold":true}],["  anaconda-ks.cfg ",{}]],"46":[["[Name] test.cpp      ",{"inverse":true}],[" NORMAL ",{"bold":true}],[" ",{}],["test.cpp ",{"bold":true}],[" FirstRun2()                                                 unix │ utf-8 │ cpp │  43% ",{}],[" LN  31",{"bold":true}],[":1  ",{}],[" ",{"bold":true,"inverse":true}],[" ~/NERD_tree_1 ",{"bold":true}],["       ",{}]],"47":[["                                                                                                                                                                ",{}]]},"cursor":{"y":5,"visible":true}}],[0.036489,{"lines":{"47":[["                                                                                                                                                     k          ",{}]]},"cursor":{"visible":false}}],[0.008107,{"lines":{"4":[["   ",{}],["+",{"fg":2,"bold":true}],["FirstRun(void)  ",{}],["|",{"inverse":true}],["  ",{"fg":6,"bg":0,"bold":true}],[" 30 ",{"fg":3,"bold":true}],["    }                                                                                                         ",{"underline":true}],["|",{"inverse":true}],["  5 ",{"fg":3,"bold":true}],["▸ diary/",{"fg":6,"bold":true,"underline":true}],["          ",{"underline":true}]],"5":[["   ",{}],["+",{"fg":2,"bold":true}],["FirstRun2(void) ",{}],["|",{"inverse":true}],["  ",{"fg":6,"bg":0,"bold":true}],[" 31 ",{"fg":3,"bold":true}],["                                                                                                              ",{}],["|",{"inverse":true}],["  6 ",{"fg":3,"bold":true}],["▸ temp/",{"fg":6,"bold":true}],["           ",{}]],"46":[["[Name] test.cpp      ",{"inverse":true}],[" NORMAL ",{"bold":true}],[" ",{}],["test.cpp ",{"bold":true}],[" FirstRun2()                                                 unix │ utf-8 │ cpp │  42% ",{}],[" LN  30",{"bold":true}],[":1  ",{}],[" ",{"bold":true,"inverse":true}],[" ~/NERD_tree_1 ",{"bold":true}],["       ",{}]],"47":[["                                                                                                                                                                ",{}]]},"cursor":{"y":4,"visible":true}}],[0.013274,{"lines":{"47":[["                                                                                                                                                     k          ",{}]]},"cursor":{"visible":false}}],[0.027846,{"lines":{"3":[["    [prototypes]",{"fg":6,"bold":true}],["    ",{}],["|",{"inverse":true}],["  ",{"fg":6,"bg":0,"bold":true}],[" 29 ",{"fg":3,"bold":true}],["    ",{"underline":true}],["|",{"fg":2,"bold":true}],["   cout << ",{"underline":true}],["\"First2\"",{"fg":5,"bold":true,"underline":true}],[" << endl;                                                                             ",{"underline":true}],["|",{"inverse":true}],["  4 /root/",{"fg":3,"bold":true}],["            ",{}]],"4":[["   ",{}],["+",{"fg":2,"bold":true}],["FirstRun(void)  ",{}],["|",{"inverse":true}],["  ",{"fg":6,"bg":0,"bold":true}],[" 30 ",{"fg":3,"bold":true}],["    }                                                                                                         ",{}],["|",{"inverse":true}],["  5 ",{"fg":3,"bold":true}],["▸ diary/",{"fg":6,"bold":true,"underline":true}],["          ",{"underline":true}]],"46":[["[Name] test.cpp      ",{"inverse":true}],[" NORMAL ",{"bold":true}],[" ",{}],["test.cpp ",{"bold":true}],[" FirstRun2()                                                 unix │ utf-8 │ cpp │  40% ",{}],[" LN  29",{"bold":true}],[":1  ",{}],[" ",{"bold":true,"inverse":true}],[" ~/NERD_tree_1 ",{"bold":true}],["       ",{}]],"47":[["                                                                                                                                                                ",{}]]},"cursor":{"y":3,"visible":true}}],[0.015317,{"lines":{"2":[["▼",{"fg":3,"bold":true}],[" First",{"fg":5,"bold":true}],[" : ",{}],["struct",{"fg":2,"bold":true}],["    ",{}],["|",{"inverse":true}],["  ",{"fg":6,"bg":0,"bold":true}],[" 28 ",{"fg":3,"bold":true}],["    {                                                                                                         ",{"underline":true}],["|",{"inverse":true}],["  3 ",{"fg":3,"bold":true}],[".. (up a dir)",{"fg":6,"bold":true}],["     ",{}]],"3":[["    [prototypes]",{"fg":6,"bold":true}],["    ",{}],["|",{"inverse":true}],["  ",{"fg":6,"bg":0,"bold":true}],[" 29 ",{"fg":3,"bold":true}],["    ",{}],["|",{"fg":2,"bold":true}],["   cout << ",{}],["\"First2\"",{"fg":5,"bold":true}],[" << endl;                                                                             ",{}],["|",{"inverse":true}],["  4 /root/",{"fg":3,"bold":true}],["            ",{}]],"46":[["[Name] test.cpp      ",{"inverse":true}],[" NORMAL ",{"bold":true}],[" ",{}],["test.cpp ",{"bold":true}],[" FirstRun2()                                                 unix │ utf-8 │ cpp │  39% ",{}],[" LN  28",{"bold":true}],[":1  ",{}],[" ",{"bold":true,"inverse":true}],[" ~/NERD_tree_1 ",{"bold":true}],["       ",{}]]},"cursor":{"y":2}}],[0.040554,{"lines":{"47":[["                                                                                                                                                     k          ",{}]]},"cursor":{"visible":false}}],[0.006084,{"lines":{"1":[["                    ",{}],["|",{"inverse":true}],["  ",{"fg":6,"bg":0,"bold":true}],[" 27 ",{"fg":3,"bold":true}],["    ",{"underline":true}],["virtual",{"fg":2,"bold":true,"underline":true}],[" ",{"underline":true}],["void",{"fg":2,"bold":true,"underline":true}],[" FirstRun2(",{"underline":true}],["void",{"fg":2,"bold":true,"underline":true}],[")                                                                              ",{"underline":true}],["|",{"inverse":true}],["  2 ",{"fg":3,"bold":true}],["                  ",{}]],"2":[["▼",{"fg":3,"bold":true}],[" First",{"fg":5,"bold":true}],[" : ",{}],["struct",{"fg":2,"bold":true}],["    ",{}],["|",{"inverse":true}],["  ",{"fg":6,"bg":0,"bold":true}],[" 28 ",{"fg":3,"bold":true}],["    {                                                                                                         ",{}],["|",{"inverse":true}],["  3 ",{"fg":3,"bold":true}],[".. (up a dir)",{"fg":6,"bold":true}],["     ",{}]],"46":[["[Name] test.cpp      ",{"inverse":true}],[" NORMAL ",{"bold":true}],[" ",{}],["test.cpp ",{"bold":true}],[" FirstRun2()                                                 unix │ utf-8 │ cpp │  38% ",{}],[" LN  27",{"bold":true}],[":1  ",{}],[" ",{"bold":true,"inverse":true}],[" ~/NERD_tree_1 ",{"bold":true}],["       ",{}]],"47":[["                                                                                                                                                                ",{}]]},"cursor":{"y":1,"visible":true}}],[0.012099,{"lines":{"47":[["                                                                                                                                                     k          ",{}]]},"cursor":{"visible":false}}],[0.008621999999999999,{"lines":{"0":[["\" Press <F1> for hel",{"fg":6,"bold":true}],["|",{"inverse":true}],["  ",{"fg":6,"bg":0,"bold":true}],[" 26 ",{"fg":3,"bold":true}],["                                                                                                              ",{"underline":true}],["|",{"inverse":true}],["  1 ",{"fg":3,"bold":true}],["\" Press ? for help",{"fg":5,"bold":true}]],"1":[["                    ",{}],["|",{"inverse":true}],["  ",{"fg":6,"bg":0,"bold":true}],[" 27 ",{"fg":3,"bold":true}],["    ",{}],["virtual",{"fg":2,"bold":true}],[" ",{}],["void",{"fg":2,"bold":true}],[" FirstRun2(",{}],["void",{"fg":2,"bold":true}],[")                                                                              ",{}],["|",{"inverse":true}],["  2 ",{"fg":3,"bold":true}],["                  ",{}]],"46":[["[Name] test.cpp      ",{"inverse":true}],[" NORMAL ",{"bold":true}],[" ",{}],["test.cpp ",{"bold":true}],[" FirstRun()                                                  unix │ utf-8 │ cpp │  36% ",{}],[" LN  26",{"bold":true}],[":1  ",{}],[" ",{"bold":true,"inverse":true}],[" ~/NERD_tree_1 ",{"bold":true}],["       ",{}]],"47":[["                                                                                                                                                                ",{}]]},"cursor":{"y":0,"visible":true}}],[0.033348,{"lines":{"0":[["\" Press <F1> for hel",{"fg":6,"bold":true}],["|",{"inverse":true}],["                                                                                                                    ",{}],["|",{"inverse":true}],["  1 ",{"fg":3,"bold":true}],["\" Press ? for help",{"fg":5,"bold":true}]],"1":[["                    ",{}],["|",{"inverse":true}],["  ",{"fg":6,"bg":0,"bold":true}],[" 26 ",{"fg":3,"bold":true}],["                                                                                                              ",{"underline":true}],["|",{"inverse":true}],["  2 ",{"fg":3,"bold":true}],["                  ",{}]],"2":[["▼",{"fg":3,"bold":true}],[" First",{"fg":5,"bold":true}],[" : ",{}],["struct",{"fg":2,"bold":true}],["    ",{}],["|",{"inverse":true}],["  ",{"fg":6,"bg":0,"bold":true}],[" 27 ",{"fg":3,"bold":true}],["    ",{}],["virtual",{"fg":2,"bold":true}],[" ",{}],["void",{"fg":2,"bold":true}],[" FirstRun2(",{}],["void",{"fg":2,"bold":true}],[")                                                                              ",{}],["|",{"inverse":true}],["  3 ",{"fg":3,"bold":true}],[".. (up a dir)",{"fg":6,"bold":true}],["     ",{}]],"3":[["    [prototypes]",{"fg":6,"bold":true}],["    ",{}],["|",{"inverse":true}],["  ",{"fg":6,"bg":0,"bold":true}],[" 28 ",{"fg":3,"bold":true}],["    {                                                                                                         ",{}],["|",{"inverse":true}],["  4 /root/",{"fg":3,"bold":true}],["            ",{}]],"4":[["   ",{}],["+",{"fg":2,"bold":true}],["FirstRun(void)  ",{}],["|",{"inverse":true}],["  ",{"fg":6,"bg":0,"bold":true}],[" 29 ",{"fg":3,"bold":true}],["    ",{}],["|",{"fg":2,"bold":true}],["   cout << ",{}],["\"First2\"",{"fg":5,"bold":true}],[" << endl;                                                                             ",{}],["|",{"inverse":true}],["  5 ",{"fg":3,"bold":true}],["▸ diary/",{"fg":6,"bold":true,"underline":true}],["          ",{"underline":true}]],"5":[["   ",{}],["+",{"fg":2,"bold":true}],["FirstRun2(void) ",{}],["|",{"inverse":true}],["  ",{"fg":6,"bg":0,"bold":true}],[" 30 ",{"fg":3,"bold":true}],["    }                                                                                                         ",{}],["|",{"inverse":true}],["  6 ",{"fg":3,"bold":true}],["▸ temp/",{"fg":6,"bold":true}],["           ",{}]]},"cursor":{"x":21,"y":6,"visible":false}}],[0.010246,{"lines":{"0":[["\" Press <F1> for hel",{"fg":6,"bold":true}],["|",{"inverse":true}],["  ",{"fg":6,"bg":0,"bold":true}],[" 25 ",{"fg":3,"bold":true}],["    }                                                                                                         ",{"underline":true}],["|",{"inverse":true}],["  1 ",{"fg":3,"bold":true}],["\" Press ? for help",{"fg":5,"bold":true}]],"1":[["                    ",{}],["|",{"inverse":true}],["  ",{"fg":6,"bg":0,"bold":true}],[" 26 ",{"fg":3,"bold":true}],["                                                                                                              ",{}],["|",{"inverse":true}],["  2 ",{"fg":3,"bold":true}],["                  ",{}]],"6":[["                    ",{}],["|",{"inverse":true}],["  ",{"fg":6,"bg":0,"bold":true}],[" 31 ",{"fg":3,"bold":true}],["                                                                                                              ",{}],["|",{"inverse":true}],["  7 ",{"fg":3,"bold":true}],["  anaconda-ks.cfg ",{}]],"7":[["▼",{"fg":3,"bold":true}],[" Last",{"fg":5,"bold":true}],[" : ",{}],["struct",{"fg":2,"bold":true}],["     ",{}],["|",{"inverse":true}],["  ",{"fg":6,"bg":0,"bold":true}],[" 32 ",{"fg":3,"bold":true}],["    ",{}],["// 基类Second虚方法",{"fg":6,"bold":true}],["                                                                                       ",{}],["|",{"inverse":true}],["  8 ",{"fg":3,"bold":true}],["  initial-setup-ks",{}]],"8":[["    [functions]",{"fg":6,"bold":true}],["     ",{}],["|",{"inverse":true}],["  ",{"fg":6,"bg":0,"bold":true}],[" 33 ",{"fg":3,"bold":true}],["    ",{}],["virtual",{"fg":2,"bold":true}],[" ",{}],["void",{"fg":2,"bold":true}],[" SecondRun(",{}],["void",{"fg":2,"bold":true}],[")                                                                              ",{}],["|",{"inverse":true}],["  9 ",{"fg":3,"bold":true}],["  test.c          ",{}]],"9":[["   ",{}],["+",{"fg":2,"bold":true}],["FirstRun(void)  ",{}],["|",{"inverse":true}],["  ",{"fg":6,"bg":0,"bold":true}],[" 34 ",{"fg":3,"bold":true}],["    {                                                                                                         ",{}],["|",{"inverse":true}],[" 10 ",{"fg":3,"bold":true}],["  test.cpp        ",{}]],"10":[["   ",{}],["+",{"fg":2,"bold":true}],["FirstRun2(void) ",{}],["|",{"inverse":true}],["  ",{"fg":6,"bg":0,"bold":true}],[" 35 ",{"fg":3,"bold":true}],["    ",{}],["|",{"fg":2,"bold":true}],["   cout <<",{}],["\"Second\"",{"fg":5,"bold":true}],[" << endl;                                                                              ",{}],["|",{"inverse":true}],["~                     ",{"fg":4,"bold":true}]],"11":[["   ",{}],["+",{"fg":2,"bold":true}],["~Last()         ",{}],["|",{"inverse":true}],["  ",{"fg":6,"bg":0,"bold":true}],[" 36 ",{"fg":3,"bold":true}],["    }                                                                                                         ",{}],["|",{"inverse":true}],["~                     ",{"fg":4,"bold":true}]],"12":[["   ",{}],["+",{"fg":2,"bold":true}],["SecondRun(void) ",{}],["|",{"inverse":true}],["  ",{"fg":6,"bg":0,"bold":true}],[" 37 ",{"fg":3,"bold":true}],["                                                                                                              ",{}],["|",{"inverse":true}],["~                     ",{"fg":4,"bold":true}]],"13":[["   ",{}],["+",{"fg":2,"bold":true}],["SecondRun2(void)",{}],["|",{"inverse":true}],["  ",{"fg":6,"bg":0,"bold":true}],[" 38 ",{"fg":3,"bold":true}],["    ",{}],["virtual",{"fg":2,"bold":true}],[" ",{}],["void",{"fg":2,"bold":true}],[" SecondRun2(",{}],["void",{"fg":2,"bold":true}],[")                                                                             ",{}],["|",{"inverse":true}],["~                     ",{"fg":4,"bold":true}]],"14":[["                    ",{}],["|",{"inverse":true}],["  ",{"fg":6,"bg":0,"bold":true}],[" 39 ",{"fg":3,"bold":true}],["    {                                                                                                         ",{}],["|",{"inverse":true}],["~                     ",{"fg":4,"bold":true}]],"15":[["▼",{"fg":3,"bold":true}],[" Second",{"fg":5,"bold":true}],[" : ",{}],["struct",{"fg":2,"bold":true}],["   ",{}],["|",{"inverse":true}],["  ",{"fg":6,"bg":0,"bold":true}],[" 40 ",{"fg":3,"bold":true}],["    ",{}],["|",{"fg":2,"bold":true}],["   cout <<",{}],["\"Second2\"",{"fg":5,"bold":true}],[" << endl;                                                                             ",{}],["|",{"inverse":true}],["~                     ",{"fg":4,"bold":true}]],"16":[["    [prototypes]",{"fg":6,"bold":true}],["    ",{}],["|",{"inverse":true}],["  ",{"fg":6,"bg":0,"bold":true}],[" 41 ",{"fg":3,"bold":true}],["    }                                                                                                         ",{}],["|",{"inverse":true}],["~                     ",{"fg":4,"bold":true}]],"17":[["   ",{}],["+",{"fg":2,"bold":true}],["SecondRun(void) ",{}],["|",{"inverse":true}],["  ",{"fg":6,"bg":0,"bold":true}],[" 42 ",{"fg":3,"bold":true}],["                                                                                                              ",{}],["|",{"inverse":true}],["~                     ",{"fg":4,"bold":true}]],"18":[["   ",{}],["+",{"fg":2,"bold":true}],["SecondRun2(void)",{}],["|",{"inverse":true}],["  ",{"fg":6,"bg":0,"bold":true}],[" 43 ",{"fg":3,"bold":true}],["    ",{}],["virtual",{"fg":2,"bold":true}],[" ~Last()                                                                                           ",{}],["|",{"inverse":true}],["~                     ",{"fg":4,"bold":true}]],"19":[["                    ",{}],["|",{"inverse":true}],["  ",{"fg":6,"bg":0,"bold":true}],[" 44 ",{"fg":3,"bold":true}],["    {                                                                                                         ",{}],["|",{"inverse":true}],["~                     ",{"fg":4,"bold":true}]],"20":[["▼",{"fg":3,"bold":true}],[" ",{}],["functions",{"fg":6,"bold":true}],["         ",{}],["|",{"inverse":true}],["  ",{"fg":6,"bg":0,"bold":true}],[" 45 ",{"fg":3,"bold":true}],["                                                                                                              ",{}],["|",{"inverse":true}],["~                     ",{"fg":4,"bold":true}]],"21":[["    ",{"underline":true}],["main",{"fg":0,"bg":3}],["(int argc, c",{"underline":true}],["|",{"inverse":true}],["  ",{"fg":6,"bg":0,"bold":true}],[" 46 ",{"fg":3,"bold":true}],["    }                                                                                                         ",{}],["|",{"inverse":true}],["~                     ",{"fg":4,"bold":true}]],"22":[["~                   ",{"fg":4,"bold":true}],["|",{"inverse":true}],["  ",{"fg":6,"bg":0,"bold":true}],[" 47 ",{"fg":3,"bold":true}],["                                                                                                              ",{}],["|",{"inverse":true}],["~                     ",{"fg":4,"bold":true}]],"23":[["~                   ",{"fg":4,"bold":true}],["|",{"inverse":true}],["  ",{"fg":6,"bg":0,"bold":true}],[" 48 ",{"fg":3,"bold":true}],["};                                                                                                            ",{}],["|",{"inverse":true}],["~                     ",{"fg":4,"bold":true}]],"24":[["~                   ",{"fg":4,"bold":true}],["|",{"inverse":true}],["  ",{"fg":6,"bg":0,"bold":true}],[" 49 ",{"fg":3,"bold":true}],["                                                                                                              ",{}],["|",{"inverse":true}],["~                     ",{"fg":4,"bold":true}]],"25":[["~                   ",{"fg":4,"bold":true}],["|",{"inverse":true}],["  ",{"fg":6,"bg":0,"bold":true}],[" 50 ",{"fg":3,"bold":true}],["                                                                                                              ",{}],["|",{"inverse":true}],["~                     ",{"fg":4,"bold":true}]],"26":[["~                   ",{"fg":4,"bold":true}],["|",{"inverse":true}],[">>",{"fg":7,"bg":1,"bold":true}],[" 51 ",{"fg":3,"bold":true}],["int",{"fg":2,"bold":true}],[" main(",{}],["int",{"fg":2,"bold":true}],[" ",{}],["argc",{"bg":1}],[", ",{}],["char",{"fg":2,"bold":true}],["* ",{}],["argv",{"bg":1}],["[])                                                                              ",{}],["|",{"inverse":true}],["~                     ",{"fg":4,"bold":true}]],"27":[["~                   ",{"fg":4,"bold":true}],["|",{"inverse":true}],["  ",{"fg":6,"bg":0,"bold":true}],[" 52 ",{"fg":3,"bold":true}],["{                                                                                                             ",{}],["|",{"inverse":true}],["~                     ",{"fg":4,"bold":true}]],"28":[["~                   ",{"fg":4,"bold":true}],["|",{"inverse":true}],["  ",{"fg":6,"bg":0,"bold":true}],[" 53 ",{"fg":3,"bold":true}],["    Last* pLast = ",{}],["new",{"fg":3,"bold":true}],[" Last();                                                                                 ",{}],["|",{"inverse":true}],["~                     ",{"fg":4,"bold":true}]],"29":[["~                   ",{"fg":4,"bold":true}],["|",{"inverse":true}],["  ",{"fg":6,"bg":0,"bold":true}],[" 54 ",{"fg":3,"bold":true}],["    vector<",{}],["int",{"fg":2,"bold":true}],["> v;                                                                                            ",{}],["|",{"inverse":true}],["~                     ",{"fg":4,"bold":true}]],"30":[["~                   ",{"fg":4,"bold":true}],["|",{"inverse":true}],["  ",{"fg":6,"bg":0,"bold":true}],[" 55 ",{"fg":3,"bold":true}],["    v.begin();                                                                                                ",{}],["|",{"inverse":true}],["~                     ",{"fg":4,"bold":true}]],"31":[["~                   ",{"fg":4,"bold":true}],["|",{"inverse":true}],[">>",{"fg":7,"bg":1,"bold":true}],[" 56 ",{"fg":3,"bold":true}],["    Second* pSecond1 = ",{}],["reinterpret_cast",{"fg":3,"bg":1,"bold":true}],["<Second*>(pLast)",{"bg":1}],[";                                                      ",{}],["|",{"inverse":true}],["~                     ",{"fg":4,"bold":true}]],"32":[["~                   ",{"fg":4,"bold":true}],["|",{"inverse":true}],["  ",{"fg":6,"bg":0,"bold":true}],[" 57 ",{"fg":3,"bold":true}],["    pSecond1->SecondRun2();                                                                                   ",{}],["|",{"inverse":true}],["~                     ",{"fg":4,"bold":true}]],"33":[["~                   ",{"fg":4,"bold":true}],["|",{"inverse":true}],["  ",{"fg":6,"bg":0,"bold":true}],[" 58 ",{"fg":3,"bold":true}],["                                                                                                              ",{}],["|",{"inverse":true}],["~                     ",{"fg":4,"bold":true}]],"34":[["~                   ",{"fg":4,"bold":true}],["|",{"inverse":true}],["  ",{"fg":6,"bg":0,"bold":true}],[" 59 ",{"fg":3,"bold":true}],["    Second* pSecond2 = pLast;                                                                                 ",{}],["|",{"inverse":true}],["~                     ",{"fg":4,"bold":true}]],"35":[["~                   ",{"fg":4,"bold":true}],["|",{"inverse":true}],["  ",{"fg":6,"bg":0,"bold":true}],[" 60 ",{"fg":3,"bold":true}],["    pSecond2->SecondRun2();                                                                                   ",{}],["|",{"inverse":true}],["~                     ",{"fg":4,"bold":true}]],"36":[["~                   ",{"fg":4,"bold":true}],["|",{"inverse":true}],["  ",{"fg":6,"bg":0,"bold":true}],[" 61 ",{"fg":3,"bold":true}],["                                                                                                              ",{}],["|",{"inverse":true}],["~                     ",{"fg":4,"bold":true}]],"37":[["~                   ",{"fg":4,"bold":true}],["|",{"inverse":true}],["  ",{"fg":6,"bg":0,"bold":true}],[" 62 ",{"fg":3,"bold":true}],["    cout << ",{}],["sizeof",{"fg":3,"bold":true}],["(Last) << endl;                                                                             ",{}],["|",{"inverse":true}],["~                     ",{"fg":4,"bold":true}]],"38":[["~                   ",{"fg":4,"bold":true}],["|",{"inverse":true}],["  ",{"fg":6,"bg":0,"bold":true}],[" 63 ",{"fg":3,"bold":true}],["                                                                                                              ",{}],["|",{"inverse":true}],["~                     ",{"fg":4,"bold":true}]],"39":[["~                   ",{"fg":4,"bold":true}],["|",{"inverse":true}],["  ",{"fg":6,"bg":0,"bold":true}],[" 64 ",{"fg":3,"bold":true}],["                                                                                                              ",{}],["|",{"inverse":true}],["~                     ",{"fg":4,"bold":true}]],"40":[["~                   ",{"fg":4,"bold":true}],["|",{"inverse":true}],["  ",{"fg":6,"bg":0,"bold":true}],[" 65 ",{"fg":3,"bold":true}],["    ",{}],["delete",{"fg":3,"bold":true}],[" pLast;                                                                                             ",{}],["|",{"inverse":true}],["~                     ",{"fg":4,"bold":true}]],"41":[["~                   ",{"fg":4,"bold":true}],["|",{"inverse":true}],["  ",{"fg":6,"bg":0,"bold":true}],[" 66 ",{"fg":3,"bold":true}],["                                                                                                              ",{}],["|",{"inverse":true}],["~                     ",{"fg":4,"bold":true}]],"42":[["~                   ",{"fg":4,"bold":true}],["|",{"inverse":true}],["  ",{"fg":6,"bg":0,"bold":true}],[" 67 ",{"fg":3,"bold":true}],["    pLast = ",{}],["NULL",{"fg":5,"bold":true}],[";                                                                                             ",{}],["|",{"inverse":true}],["~                     ",{"fg":4,"bold":true}]],"43":[["~                   ",{"fg":4,"bold":true}],["|",{"inverse":true}],["  ",{"fg":6,"bg":0,"bold":true}],[" 68 ",{"fg":3,"bold":true}],["                                                                                                              ",{}],["|",{"inverse":true}],["~                     ",{"fg":4,"bold":true}]],"44":[["~                   ",{"fg":4,"bold":true}],["|",{"inverse":true}],["  ",{"fg":6,"bg":0,"bold":true}],[" 69 ",{"fg":3,"bold":true}],["    ",{}],["return",{"fg":3,"bold":true}],[" ",{}],["0",{"fg":5,"bold":true}],[";                                                                                                 ",{}],["|",{"inverse":true}],["~                     ",{"fg":4,"bold":true}]],"45":[["~                   ",{"fg":4,"bold":true}],["|",{"inverse":true}],["  ",{"fg":6,"bg":0,"bold":true}],[" 70 ",{"fg":3,"bold":true}],["}                                                                                                             ",{}],["|",{"inverse":true}],["~                     ",{"fg":4,"bold":true}]],"46":[["[Name] test.cpp      ",{"inverse":true}],[" NORMAL ",{"bold":true}],[" ",{}],["test.cpp ",{"bold":true}],[" FirstRun()                                                  unix │ utf-8 │ cpp │  35% ",{}],[" LN  25",{"bold":true}],[":1  ",{}],[" ",{"bold":true,"inverse":true}],[" ~/NERD_tree_1 ",{"bold":true}],["       ",{}]]},"cursor":{"x":27,"y":0,"visible":true}}],[0.018777,{"lines":{"47":[["                                                                                                                                                     k          ",{}]]},"cursor":{"visible":false}}],[0.00328,{"lines":{"0":[["\" Press <F1> for hel",{"fg":6,"bold":true}],["|",{"inverse":true}],["                                                                                                                    ",{}],["|",{"inverse":true}],["  1 ",{"fg":3,"bold":true}],["\" Press ? for help",{"fg":5,"bold":true}]],"1":[["                    ",{}],["|",{"inverse":true}],["  ",{"fg":6,"bg":0,"bold":true}],[" 25 ",{"fg":3,"bold":true}],["    }                                                                                                         ",{"underline":true}],["|",{"inverse":true}],["  2 ",{"fg":3,"bold":true}],["                  ",{}]],"2":[["▼",{"fg":3,"bold":true}],[" First",{"fg":5,"bold":true}],[" : ",{}],["struct",{"fg":2,"bold":true}],["    ",{}],["|",{"inverse":true}],["  ",{"fg":6,"bg":0,"bold":true}],[" 26 ",{"fg":3,"bold":true}],["                                                                                                              ",{}],["|",{"inverse":true}],["  3 ",{"fg":3,"bold":true}],[".. (up a dir)",{"fg":6,"bold":true}],["     ",{}]],"3":[["    [prototypes]",{"fg":6,"bold":true}],["    ",{}],["|",{"inverse":true}],["  ",{"fg":6,"bg":0,"bold":true}],[" 27 ",{"fg":3,"bold":true}],["    ",{}],["virtual",{"fg":2,"bold":true}],[" ",{}],["void",{"fg":2,"bold":true}],[" FirstRun2(",{}],["void",{"fg":2,"bold":true}],[")                                                                              ",{}],["|",{"inverse":true}],["  4 /root/",{"fg":3,"bold":true}],["            ",{}]],"4":[["   ",{}],["+",{"fg":2,"bold":true}],["FirstRun(void)  ",{}],["|",{"inverse":true}],["  ",{"fg":6,"bg":0,"bold":true}],[" 28 ",{"fg":3,"bold":true}],["    {                                                                                                         ",{}],["|",{"inverse":true}],["  5 ",{"fg":3,"bold":true}],["▸ diary/",{"fg":6,"bold":true,"underline":true}],["          ",{"underline":true}]],"5":[["   ",{}],["+",{"fg":2,"bold":true}],["FirstRun2(void) ",{}],["|",{"inverse":true}],["  ",{"fg":6,"bg":0,"bold":true}],[" 29 ",{"fg":3,"bold":true}],["    ",{}],["|",{"fg":2,"bold":true}],["   cout << ",{}],["\"First2\"",{"fg":5,"bold":true}],[" << endl;                                                                             ",{}],["|",{"inverse":true}],["  6 ",{"fg":3,"bold":true}],["▸ temp/",{"fg":6,"bold":true}],["           ",{}]],"6":[["                    ",{}],["|",{"inverse":true}],["  ",{"fg":6,"bg":0,"bold":true}],[" 30 ",{"fg":3,"bold":true}],["    }                                                                                                         ",{}],["|",{"inverse":true}],["  7 ",{"fg":3,"bold":true}],["  anaconda-ks.cfg ",{}]],"7":[["▼",{"fg":3,"bold":true}],[" Last",{"fg":5,"bold":true}],[" : ",{}],["struct",{"fg":2,"bold":true}],["     ",{}],["|",{"inverse":true}],["  ",{"fg":6,"bg":0,"bold":true}],[" 31 ",{"fg":3,"bold":true}],["                                                                                                              ",{}],["|",{"inverse":true}],["  8 ",{"fg":3,"bold":true}],["  initial-setup-ks",{}]],"8":[["    [functions]",{"fg":6,"bold":true}],["     ",{}],["|",{"inverse":true}],["  ",{"fg":6,"bg":0,"bold":true}],[" 32 ",{"fg":3,"bold":true}],["    ",{}],["// 基类Second虚方法",{"fg":6,"bold":true}],["                                                                                       ",{}],["|",{"inverse":true}],["  9 ",{"fg":3,"bold":true}],["  test.c          ",{}]],"9":[["   ",{}],["+",{"fg":2,"bold":true}],["FirstRun(void)  ",{}],["|",{"inverse":true}],["  ",{"fg":6,"bg":0,"bold":true}],[" 33 ",{"fg":3,"bold":true}],["    ",{}],["virtual",{"fg":2,"bold":true}],[" ",{}],["void",{"fg":2,"bold":true}],[" SecondRun(",{}],["void",{"fg":2,"bold":true}],[")                                                                              ",{}],["|",{"inverse":true}],[" 10 ",{"fg":3,"bold":true}],["  test.cpp        ",{}]],"10":[["   ",{}],["+",{"fg":2,"bold":true}],["FirstRun2(void) ",{}],["|",{"inverse":true}],["  ",{"fg":6,"bg":0,"bold":true}],[" 34 ",{"fg":3,"bold":true}],["    {                                                                                                         ",{}],["|",{"inverse":true}],["~                     ",{"fg":4,"bold":true}]],"11":[["   ",{}],["+",{"fg":2,"bold":true}],["~Last()         ",{}],["|",{"inverse":true}],["  ",{"fg":6,"bg":0,"bold":true}],[" 35 ",{"fg":3,"bold":true}],["    ",{}],["|",{"fg":2,"bold":true}],["   cout <<",{}],["\"Second\"",{"fg":5,"bold":true}],[" << endl;                                                                              ",{}],["|",{"inverse":true}],["~                     ",{"fg":4,"bold":true}]],"12":[["   ",{}],["+",{"fg":2,"bold":true}],["SecondRun(void) ",{}],["|",{"inverse":true}],["  ",{"fg":6,"bg":0,"bold":true}],[" 36 ",{"fg":3,"bold":true}],["    }                                                                                                         ",{}],["|",{"inverse":true}],["~                     ",{"fg":4,"bold":true}]],"13":[["   ",{}],["+",{"fg":2,"bold":true}],["SecondRun2(void)",{}],["|",{"inverse":true}],["  ",{"fg":6,"bg":0,"bold":true}],[" 37 ",{"fg":3,"bold":true}],["                                                                                                              ",{}],["|",{"inverse":true}],["~                     ",{"fg":4,"bold":true}]],"14":[["                    ",{}],["|",{"inverse":true}],["  ",{"fg":6,"bg":0,"bold":true}],[" 38 ",{"fg":3,"bold":true}],["    ",{}],["virtual",{"fg":2,"bold":true}],[" ",{}],["void",{"fg":2,"bold":true}],[" SecondRun2(",{}],["void",{"fg":2,"bold":true}],[")                                                                             ",{}],["|",{"inverse":true}],["~                     ",{"fg":4,"bold":true}]],"15":[["▼",{"fg":3,"bold":true}],[" Second",{"fg":5,"bold":true}],[" : ",{}],["struct",{"fg":2,"bold":true}],["   ",{}],["|",{"inverse":true}],["  ",{"fg":6,"bg":0,"bold":true}],[" 39 ",{"fg":3,"bold":true}],["    {                                                                                                         ",{}],["|",{"inverse":true}],["~                     ",{"fg":4,"bold":true}]],"16":[["    [prototypes]",{"fg":6,"bold":true}],["    ",{}],["|",{"inverse":true}],["  ",{"fg":6,"bg":0,"bold":true}],[" 40 ",{"fg":3,"bold":true}],["    ",{}],["|",{"fg":2,"bold":true}],["   cout <<",{}],["\"Second2\"",{"fg":5,"bold":true}],[" << endl;                                                                             ",{}],["|",{"inverse":true}],["~                     ",{"fg":4,"bold":true}]],"17":[["   ",{}],["+",{"fg":2,"bold":true}],["SecondRun(void) ",{}],["|",{"inverse":true}],["  ",{"fg":6,"bg":0,"bold":true}],[" 41 ",{"fg":3,"bold":true}],["    }                                                                                                         ",{}],["|",{"inverse":true}],["~                     ",{"fg":4,"bold":true}]],"18":[["   ",{}],["+",{"fg":2,"bold":true}],["SecondRun2(void)",{}],["|",{"inverse":true}],["  ",{"fg":6,"bg":0,"bold":true}],[" 42 ",{"fg":3,"bold":true}],["                                                                                                              ",{}],["|",{"inverse":true}],["~                     ",{"fg":4,"bold":true}]],"19":[["                    ",{}],["|",{"inverse":true}],["  ",{"fg":6,"bg":0,"bold":true}],[" 43 ",{"fg":3,"bold":true}],["    ",{}],["virtual",{"fg":2,"bold":true}],[" ~Last()                                                                                           ",{}],["|",{"inverse":true}],["~                     ",{"fg":4,"bold":true}]],"20":[["▼",{"fg":3,"bold":true}],[" ",{}],["functions",{"fg":6,"bold":true}],["         ",{}],["|",{"inverse":true}],["  ",{"fg":6,"bg":0,"bold":true}],[" 44 ",{"fg":3,"bold":true}],["    {                                                                                                         ",{}],["|",{"inverse":true}],["~                     ",{"fg":4,"bold":true}]],"21":[["    ",{"underline":true}],["main",{"fg":0,"bg":3}],["(int argc, c",{"underline":true}],["|",{"inverse":true}],["  ",{"fg":6,"bg":0,"bold":true}],[" 45 ",{"fg":3,"bold":true}],["                                                                                                              ",{}],["|",{"inverse":true}],["~                     ",{"fg":4,"bold":true}]],"22":[["~                   ",{"fg":4,"bold":true}],["|",{"inverse":true}],["  ",{"fg":6,"bg":0,"bold":true}],[" 46 ",{"fg":3,"bold":true}],["    }                                                                                                         ",{}],["|",{"inverse":true}],["~                     ",{"fg":4,"bold":true}]],"23":[["~                   ",{"fg":4,"bold":true}],["|",{"inverse":true}],["  ",{"fg":6,"bg":0,"bold":true}],[" 47 ",{"fg":3,"bold":true}],["                                                                                                              ",{}],["|",{"inverse":true}],["~                     ",{"fg":4,"bold":true}]],"24":[["~                   ",{"fg":4,"bold":true}],["|",{"inverse":true}],["  ",{"fg":6,"bg":0,"bold":true}],[" 48 ",{"fg":3,"bold":true}],["};                                                                                                            ",{}],["|",{"inverse":true}],["~                     ",{"fg":4,"bold":true}]],"47":[["                                                                                                                                                                ",{}]]},"cursor":{"x":132,"y":24}}],[0.030999,{"lines":{"25":[["~                   ",{"fg":4,"bold":true}],["|",{"inverse":true}],["  ",{"fg":6,"bg":0,"bold":true}],[" 49 ",{"fg":3,"bold":true}],["                                                                                                              ",{}],["|",{"inverse":true}],["~                     ",{"fg":4,"bold":true}]],"26":[["~                   ",{"fg":4,"bold":true}],["|",{"inverse":true}],["  ",{"fg":6,"bg":0,"bold":true}],[" 50 ",{"fg":3,"bold":true}],["                                                                                                              ",{}],["|",{"inverse":true}],["~                     ",{"fg":4,"bold":true}]],"27":[["~                   ",{"fg":4,"bold":true}],["|",{"inverse":true}],[">>",{"fg":7,"bg":1,"bold":true}],[" 51 ",{"fg":3,"bold":true}],["int",{"fg":2,"bold":true}],[" main(",{}],["int",{"fg":2,"bold":true}],[" ",{}],["argc",{"bg":1}],[", ",{}],["char",{"fg":2,"bold":true}],["* ",{}],["argv",{"bg":1}],["[])                                                                              ",{}],["|",{"inverse":true}],["~                     ",{"fg":4,"bold":true}]],"28":[["~                   ",{"fg":4,"bold":true}],["|",{"inverse":true}],["  ",{"fg":6,"bg":0,"bold":true}],[" 52 ",{"fg":3,"bold":true}],["{                                                                                                             ",{}],["|",{"inverse":true}],["~                     ",{"fg":4,"bold":true}]],"29":[["~                   ",{"fg":4,"bold":true}],["|",{"inverse":true}],["  ",{"fg":6,"bg":0,"bold":true}],[" 53 ",{"fg":3,"bold":true}],["    Last* pLast = ",{}],["new",{"fg":3,"bold":true}],[" Last();                                                                                 ",{}],["|",{"inverse":true}],["~                     ",{"fg":4,"bold":true}]],"30":[["~                   ",{"fg":4,"bold":true}],["|",{"inverse":true}],["  ",{"fg":6,"bg":0,"bold":true}],[" 54 ",{"fg":3,"bold":true}],["    vector<",{}],["int",{"fg":2,"bold":true}],["> v;                                                                                            ",{}],["|",{"inverse":true}],["~                     ",{"fg":4,"bold":true}]]},"cursor":{"x":137,"y":30}}],[0.016593,{"lines":{"1":[["                    ",{}],["|",{"inverse":true}],["  ",{"fg":6,"bg":0,"bold":true}],[" 24 ",{"fg":3,"bold":true}],["    ",{"underline":true}],["|",{"fg":2,"bold":true}],["   cout << ",{"underline":true}],["\"First\"",{"fg":5,"bold":true,"underline":true}],[" << endl;                                                                              ",{"underline":true}],["|",{"inverse":true}],["  2 ",{"fg":3,"bold":true}],["                  ",{}]],"2":[["▼",{"fg":3,"bold":true}],[" First",{"fg":5,"bold":true}],[" : ",{}],["struct",{"fg":2,"bold":true}],["    ",{}],["|",{"inverse":true}],["  ",{"fg":6,"bg":0,"bold":true}],[" 25 ",{"fg":3,"bold":true}],["    }                                                                                                         ",{}],["|",{"inverse":true}],["  3 ",{"fg":3,"bold":true}],[".. (up a dir)",{"fg":6,"bold":true}],["     ",{}]],"3":[["    [prototypes]",{"fg":6,"bold":true}],["    ",{}],["|",{"inverse":true}],["  ",{"fg":6,"bg":0,"bold":true}],[" 26 ",{"fg":3,"bold":true}],["                                                                                                              ",{}],["|",{"inverse":true}],["  4 /root/",{"fg":3,"bold":true}],["            ",{}]],"4":[["   ",{}],["+",{"fg":2,"bold":true}],["FirstRun(void)  ",{}],["|",{"inverse":true}],["  ",{"fg":6,"bg":0,"bold":true}],[" 27 ",{"fg":3,"bold":true}],["    ",{}],["virtual",{"fg":2,"bold":true}],[" ",{}],["void",{"fg":2,"bold":true}],[" FirstRun2(",{}],["void",{"fg":2,"bold":true}],[")                                                                              ",{}],["|",{"inverse":true}],["  5 ",{"fg":3,"bold":true}],["▸ diary/",{"fg":6,"bold":true,"underline":true}],["          ",{"underline":true}]],"5":[["   ",{}],["+",{"fg":2,"bold":true}],["FirstRun2(void) ",{}],["|",{"inverse":true}],["  ",{"fg":6,"bg":0,"bold":true}],[" 28 ",{"fg":3,"bold":true}],["    {                                                                                                         ",{}],["|",{"inverse":true}],["  6 ",{"fg":3,"bold":true}],["▸ temp/",{"fg":6,"bold":true}],["           ",{}]],"6":[["                    ",{}],["|",{"inverse":true}],["  ",{"fg":6,"bg":0,"bold":true}],[" 29 ",{"fg":3,"bold":true}],["    ",{}],["|",{"fg":2,"bold":true}],["   cout << ",{}],["\"First2\"",{"fg":5,"bold":true}],[" << endl;                                                                             ",{}],["|",{"inverse":true}],["  7 ",{"fg":3,"bold":true}],["  anaconda-ks.cfg ",{}]],"7":[["▼",{"fg":3,"bold":true}],[" Last",{"fg":5,"bold":true}],[" : ",{}],["struct",{"fg":2,"bold":true}],["     ",{}],["|",{"inverse":true}],["  ",{"fg":6,"bg":0,"bold":true}],[" 30 ",{"fg":3,"bold":true}],["    }                                                                                                         ",{}],["|",{"inverse":true}],["  8 ",{"fg":3,"bold":true}],["  initial-setup-ks",{}]],"8":[["    [functions]",{"fg":6,"bold":true}],["     ",{}],["|",{"inverse":true}],["  ",{"fg":6,"bg":0,"bold":true}],[" 31 ",{"fg":3,"bold":true}],["                                                                                                              ",{}],["|",{"inverse":true}],["  9 ",{"fg":3,"bold":true}],["  test.c          ",{}]],"9":[["   ",{}],["+",{"fg":2,"bold":true}],["FirstRun(void)  ",{}],["|",{"inverse":true}],["  ",{"fg":6,"bg":0,"bold":true}],[" 32 ",{"fg":3,"bold":true}],["    ",{}],["// 基类Second虚方法",{"fg":6,"bold":true}],["                                                                                       ",{}],["|",{"inverse":true}],[" 10 ",{"fg":3,"bold":true}],["  test.cpp        ",{}]],"10":[["   ",{}],["+",{"fg":2,"bold":true}],["FirstRun2(void) ",{}],["|",{"inverse":true}],["  ",{"fg":6,"bg":0,"bold":true}],[" 33 ",{"fg":3,"bold":true}],["    ",{}],["virtual",{"fg":2,"bold":true}],[" ",{}],["void",{"fg":2,"bold":true}],[" SecondRun(",{}],["void",{"fg":2,"bold":true}],[")                                                                              ",{}],["|",{"inverse":true}],["~                     ",{"fg":4,"bold":true}]],"11":[["   ",{}],["+",{"fg":2,"bold":true}],["~Last()         ",{}],["|",{"inverse":true}],["  ",{"fg":6,"bg":0,"bold":true}],[" 34 ",{"fg":3,"bold":true}],["    {                                                                                                         ",{}],["|",{"inverse":true}],["~                     ",{"fg":4,"bold":true}]],"12":[["   ",{}],["+",{"fg":2,"bold":true}],["SecondRun(void) ",{}],["|",{"inverse":true}],["  ",{"fg":6,"bg":0,"bold":true}],[" 35 ",{"fg":3,"bold":true}],["    ",{}],["|",{"fg":2,"bold":true}],["   cout <<",{}],["\"Second\"",{"fg":5,"bold":true}],[" << endl;                                                                              ",{}],["|",{"inverse":true}],["~                     ",{"fg":4,"bold":true}]],"13":[["   ",{}],["+",{"fg":2,"bold":true}],["SecondRun2(void)",{}],["|",{"inverse":true}],["  ",{"fg":6,"bg":0,"bold":true}],[" 36 ",{"fg":3,"bold":true}],["    }                                                                                                         ",{}],["|",{"inverse":true}],["~                     ",{"fg":4,"bold":true}]],"14":[["                    ",{}],["|",{"inverse":true}],["  ",{"fg":6,"bg":0,"bold":true}],[" 37 ",{"fg":3,"bold":true}],["                                                                                                              ",{}],["|",{"inverse":true}],["~                     ",{"fg":4,"bold":true}]],"15":[["▼",{"fg":3,"bold":true}],[" Second",{"fg":5,"bold":true}],[" : ",{}],["struct",{"fg":2,"bold":true}],["   ",{}],["|",{"inverse":true}],["  ",{"fg":6,"bg":0,"bold":true}],[" 38 ",{"fg":3,"bold":true}],["    ",{}],["virtual",{"fg":2,"bold":true}],[" ",{}],["void",{"fg":2,"bold":true}],[" SecondRun2(",{}],["void",{"fg":2,"bold":true}],[")                                                                             ",{}],["|",{"inverse":true}],["~                     ",{"fg":4,"bold":true}]],"16":[["    [prototypes]",{"fg":6,"bold":true}],["    ",{}],["|",{"inverse":true}],["  ",{"fg":6,"bg":0,"bold":true}],[" 39 ",{"fg":3,"bold":true}],["    {                                                                                                         ",{}],["|",{"inverse":true}],["~                     ",{"fg":4,"bold":true}]],"17":[["   ",{}],["+",{"fg":2,"bold":true}],["SecondRun(void) ",{}],["|",{"inverse":true}],["  ",{"fg":6,"bg":0,"bold":true}],[" 40 ",{"fg":3,"bold":true}],["    ",{}],["|",{"fg":2,"bold":true}],["   cout <<",{}],["\"Second2\"",{"fg":5,"bold":true}],[" << endl;                                                                             ",{}],["|",{"inverse":true}],["~                     ",{"fg":4,"bold":true}]],"18":[["   ",{}],["+",{"fg":2,"bold":true}],["SecondRun2(void)",{}],["|",{"inverse":true}],["  ",{"fg":6,"bg":0,"bold":true}],[" 41 ",{"fg":3,"bold":true}],["    }                                                                                                         ",{}],["|",{"inverse":true}],["~                     ",{"fg":4,"bold":true}]],"19":[["                    ",{}],["|",{"inverse":true}],["  ",{"fg":6,"bg":0,"bold":true}],[" 42 ",{"fg":3,"bold":true}],["                                                                                                              ",{}],["|",{"inverse":true}],["~                     ",{"fg":4,"bold":true}]],"20":[["▼",{"fg":3,"bold":true}],[" ",{}],["functions",{"fg":6,"bold":true}],["         ",{}],["|",{"inverse":true}],["  ",{"fg":6,"bg":0,"bold":true}],[" 43 ",{"fg":3,"bold":true}],["    ",{}],["virtual",{"fg":2,"bold":true}],[" ~Last()                                                                                           ",{}],["|",{"inverse":true}],["~                     ",{"fg":4,"bold":true}]],"21":[["    ",{"underline":true}],["main",{"fg":0,"bg":3}],["(int argc, c",{"underline":true}],["|",{"inverse":true}],["  ",{"fg":6,"bg":0,"bold":true}],[" 44 ",{"fg":3,"bold":true}],["    {                                                                                                         ",{}],["|",{"inverse":true}],["~                     ",{"fg":4,"bold":true}]],"22":[["~                   ",{"fg":4,"bold":true}],["|",{"inverse":true}],["  ",{"fg":6,"bg":0,"bold":true}],[" 45 ",{"fg":3,"bold":true}],["                                                                                                              ",{}],["|",{"inverse":true}],["~                     ",{"fg":4,"bold":true}]],"23":[["~                   ",{"fg":4,"bold":true}],["|",{"inverse":true}],["  ",{"fg":6,"bg":0,"bold":true}],[" 46 ",{"fg":3,"bold":true}],["    }                                                                                                         ",{}],["|",{"inverse":true}],["~                     ",{"fg":4,"bold":true}]],"24":[["~                   ",{"fg":4,"bold":true}],["|",{"inverse":true}],["  ",{"fg":6,"bg":0,"bold":true}],[" 47 ",{"fg":3,"bold":true}],["                                                                                                              ",{}],["|",{"inverse":true}],["~                     ",{"fg":4,"bold":true}]],"25":[["~                   ",{"fg":4,"bold":true}],["|",{"inverse":true}],["  ",{"fg":6,"bg":0,"bold":true}],[" 48 ",{"fg":3,"bold":true}],["};                                                                                                            ",{}],["|",{"inverse":true}],["~                     ",{"fg":4,"bold":true}]],"26":[["~                   ",{"fg":4,"bold":true}],["|",{"inverse":true}],["  ",{"fg":6,"bg":0,"bold":true}],[" 49 ",{"fg":3,"bold":true}],["                                                                                                              ",{}],["|",{"inverse":true}],["~                     ",{"fg":4,"bold":true}]],"27":[["~                   ",{"fg":4,"bold":true}],["|",{"inverse":true}],["  ",{"fg":6,"bg":0,"bold":true}],[" 50 ",{"fg":3,"bold":true}],["                                                                                                              ",{}],["|",{"inverse":true}],["~                     ",{"fg":4,"bold":true}]],"28":[["~                   ",{"fg":4,"bold":true}],["|",{"inverse":true}],[">>",{"fg":7,"bg":1,"bold":true}],[" 51 ",{"fg":3,"bold":true}],["int",{"fg":2,"bold":true}],[" main(",{}],["int",{"fg":2,"bold":true}],[" ",{}],["argc",{"bg":1}],[", ",{}],["char",{"fg":2,"bold":true}],["* ",{}],["argv",{"bg":1}],["[])                                                                              ",{}],["|",{"inverse":true}],["~                     ",{"fg":4,"bold":true}]],"29":[["~                   ",{"fg":4,"bold":true}],["|",{"inverse":true}],["  ",{"fg":6,"bg":0,"bold":true}],[" 52 ",{"fg":3,"bold":true}],["{                                                                                                             ",{}],["|",{"inverse":true}],["~                     ",{"fg":4,"bold":true}]],"30":[["~                   ",{"fg":4,"bold":true}],["|",{"inverse":true}],["  ",{"fg":6,"bg":0,"bold":true}],[" 53 ",{"fg":3,"bold":true}],["    Last* pLast = ",{}],["new",{"fg":3,"bold":true}],[" Last();                                                                                 ",{}],["|",{"inverse":true}],["~                     ",{"fg":4,"bold":true}]],"31":[["~                   ",{"fg":4,"bold":true}],["|",{"inverse":true}],["  ",{"fg":6,"bg":0,"bold":true}],[" 54 ",{"fg":3,"bold":true}],["    vector<",{}],["int",{"fg":2,"bold":true}],["> v;                                                                                            ",{}],["|",{"inverse":true}],["~                     ",{"fg":4,"bold":true}]],"32":[["~                   ",{"fg":4,"bold":true}],["|",{"inverse":true}],["  ",{"fg":6,"bg":0,"bold":true}],[" 55 ",{"fg":3,"bold":true}],["    v.begin();                                                                                                ",{}],["|",{"inverse":true}],["~                     ",{"fg":4,"bold":true}]],"33":[["~                   ",{"fg":4,"bold":true}],["|",{"inverse":true}],[">>",{"fg":7,"bg":1,"bold":true}],[" 56 ",{"fg":3,"bold":true}],["    Second* pSecond1 = ",{}],["reinterpret_cast",{"fg":3,"bg":1,"bold":true}],["<Second*>(pLast)",{"bg":1}],[";                                                      ",{}],["|",{"inverse":true}],["~                     ",{"fg":4,"bold":true}]],"34":[["~                   ",{"fg":4,"bold":true}],["|",{"inverse":true}],["  ",{"fg":6,"bg":0,"bold":true}],[" 57 ",{"fg":3,"bold":true}],["    pSecond1->SecondRun2();                                                                                   ",{}],["|",{"inverse":true}],["~                     ",{"fg":4,"bold":true}]],"35":[["~                   ",{"fg":4,"bold":true}],["|",{"inverse":true}],["  ",{"fg":6,"bg":0,"bold":true}],[" 58 ",{"fg":3,"bold":true}],["                                                                                                              ",{}],["|",{"inverse":true}],["~                     ",{"fg":4,"bold":true}]],"36":[["~                   ",{"fg":4,"bold":true}],["|",{"inverse":true}],["  ",{"fg":6,"bg":0,"bold":true}],[" 59 ",{"fg":3,"bold":true}],["    Second* pSecond2 = pLast;                                                                                 ",{}],["|",{"inverse":true}],["~                     ",{"fg":4,"bold":true}]],"37":[["~                   ",{"fg":4,"bold":true}],["|",{"inverse":true}],["  ",{"fg":6,"bg":0,"bold":true}],[" 60 ",{"fg":3,"bold":true}],["    pSecond2->SecondRun2();                                                                                   ",{}],["|",{"inverse":true}],["~                     ",{"fg":4,"bold":true}]],"38":[["~                   ",{"fg":4,"bold":true}],["|",{"inverse":true}],["  ",{"fg":6,"bg":0,"bold":true}],[" 61 ",{"fg":3,"bold":true}],["                                                                                                              ",{}],["|",{"inverse":true}],["~                     ",{"fg":4,"bold":true}]],"39":[["~                   ",{"fg":4,"bold":true}],["|",{"inverse":true}],["  ",{"fg":6,"bg":0,"bold":true}],[" 62 ",{"fg":3,"bold":true}],["    cout << ",{}],["sizeof",{"fg":3,"bold":true}],["(Last) << endl;                                                                             ",{}],["|",{"inverse":true}],["~                     ",{"fg":4,"bold":true}]],"40":[["~                   ",{"fg":4,"bold":true}],["|",{"inverse":true}],["  ",{"fg":6,"bg":0,"bold":true}],[" 63 ",{"fg":3,"bold":true}],["                                                                                                              ",{}],["|",{"inverse":true}],["~                     ",{"fg":4,"bold":true}]],"41":[["~                   ",{"fg":4,"bold":true}],["|",{"inverse":true}],["  ",{"fg":6,"bg":0,"bold":true}],[" 64 ",{"fg":3,"bold":true}],["                                                                                                              ",{}],["|",{"inverse":true}],["~                     ",{"fg":4,"bold":true}]],"42":[["~                   ",{"fg":4,"bold":true}],["|",{"inverse":true}],["  ",{"fg":6,"bg":0,"bold":true}],[" 65 ",{"fg":3,"bold":true}],["    ",{}],["delete",{"fg":3,"bold":true}],[" pLast;                                                                                             ",{}],["|",{"inverse":true}],["~                     ",{"fg":4,"bold":true}]],"43":[["~                   ",{"fg":4,"bold":true}],["|",{"inverse":true}],["  ",{"fg":6,"bg":0,"bold":true}],[" 66 ",{"fg":3,"bold":true}],["                                                                                                              ",{}],["|",{"inverse":true}],["~                     ",{"fg":4,"bold":true}]],"44":[["~                   ",{"fg":4,"bold":true}],["|",{"inverse":true}],["  ",{"fg":6,"bg":0,"bold":true}],[" 68 ",{"fg":3,"bold":true}],["                                                                                                              ",{}],["|",{"inverse":true}],["~                     ",{"fg":4,"bold":true}]],"45":[["~                   ",{"fg":4,"bold":true}],["|",{"inverse":true}],["  ",{"fg":6,"bg":0,"bold":true}],[" 69 ",{"fg":3,"bold":true}],["    ",{}],["return",{"fg":3,"bold":true}],[" ",{}],["0",{"fg":5,"bold":true}],[";                                                                                                 ",{}],["|",{"inverse":true}],["~                     ",{"fg":4,"bold":true}]],"46":[["[Name] test.cpp      ",{"inverse":true}],[" NORMAL ",{"bold":true}],[" ",{}],["test.cpp ",{"bold":true}],[" FirstRun()                                                  unix │ utf-8 │ cpp │  33% ",{}],[" LN  24",{"bold":true}],[":1  ",{}],[" ",{"bold":true,"inverse":true}],[" ~/NERD_tree_1 ",{"bold":true}],["       ",{}]]},"cursor":{"x":50,"y":43}}],[0.000383,{"lines":{"0":[["\" Press <F1> for hel",{"fg":6,"bold":true}],["|",{"inverse":true}],["  ",{"fg":6,"bg":0,"bold":true}],[" 23 ",{"fg":3,"bold":true}],["    {                                                                                                         ",{"underline":true}],["|",{"inverse":true}],["  1 ",{"fg":3,"bold":true}],["\" Press ? for help",{"fg":5,"bold":true}]],"1":[["                    ",{}],["|",{"inverse":true}],["  ",{"fg":6,"bg":0,"bold":true}],[" 24 ",{"fg":3,"bold":true}],["    ",{}],["|",{"fg":2,"bold":true}],["   cout << ",{}],["\"First\"",{"fg":5,"bold":true}],[" << endl;                                                                              ",{}],["|",{"inverse":true}],["  2 ",{"fg":3,"bold":true}],["                  ",{}]],"44":[["~                   ",{"fg":4,"bold":true}],["|",{"inverse":true}],["  ",{"fg":6,"bg":0,"bold":true}],[" 67 ",{"fg":3,"bold":true}],["    pLast = ",{}],["NULL",{"fg":5,"bold":true}],[";                                                                                             ",{}],["|",{"inverse":true}],["~                     ",{"fg":4,"bold":true}]],"45":[["~                   ",{"fg":4,"bold":true}],["|",{"inverse":true}],["  ",{"fg":6,"bg":0,"bold":true}],[" 68 ",{"fg":3,"bold":true}],["                                                                                                              ",{}],["|",{"inverse":true}],["~                     ",{"fg":4,"bold":true}]],"46":[["[Name] test.cpp      ",{"inverse":true}],[" NORMAL ",{"bold":true}],[" ",{}],["test.cpp ",{"bold":true}],[" FirstRun()                                                  unix │ utf-8 │ cpp │  32% ",{}],[" LN  23",{"bold":true}],[":1  ",{}],[" ",{"bold":true,"inverse":true}],[" ~/NERD_tree_1 ",{"bold":true}],["       ",{}]]},"cursor":{"x":27,"y":0,"visible":true}}],[0.037926,{"lines":{"0":[["\" Press <F1> for hel",{"fg":6,"bold":true}],["|",{"inverse":true}],["                                                                                                                    ",{}],["|",{"inverse":true}],["  1 ",{"fg":3,"bold":true}],["\" Press ? for help",{"fg":5,"bold":true}]],"1":[["                    ",{}],["|",{"inverse":true}],["  ",{"fg":6,"bg":0,"bold":true}],[" 23 ",{"fg":3,"bold":true}],["    {                                                                                                         ",{"underline":true}],["|",{"inverse":true}],["  2 ",{"fg":3,"bold":true}],["                  ",{}]],"2":[["▼",{"fg":3,"bold":true}],[" First",{"fg":5,"bold":true}],[" : ",{}],["struct",{"fg":2,"bold":true}],["    ",{}],["|",{"inverse":true}],["  ",{"fg":6,"bg":0,"bold":true}],[" 24 ",{"fg":3,"bold":true}],["    ",{}],["|",{"fg":2,"bold":true}],["   cout << ",{}],["\"First\"",{"fg":5,"bold":true}],[" << endl;                                                                              ",{}],["|",{"inverse":true}],["  3 ",{"fg":3,"bold":true}],[".. (up a dir)",{"fg":6,"bold":true}],["     ",{}]],"3":[["    [prototypes]",{"fg":6,"bold":true}],["    ",{}],["|",{"inverse":true}],["  ",{"fg":6,"bg":0,"bold":true}],[" 25 ",{"fg":3,"bold":true}],["    }                                                                                                         ",{}],["|",{"inverse":true}],["  4 /root/",{"fg":3,"bold":true}],["            ",{}]],"4":[["   ",{}],["+",{"fg":2,"bold":true}],["FirstRun(void)  ",{}],["|",{"inverse":true}],["  ",{"fg":6,"bg":0,"bold":true}],[" 26 ",{"fg":3,"bold":true}],["                                                                                                              ",{}],["|",{"inverse":true}],["  5 ",{"fg":3,"bold":true}],["▸ diary/",{"fg":6,"bold":true,"underline":true}],["          ",{"underline":true}]],"5":[["   ",{}],["+",{"fg":2,"bold":true}],["FirstRun2(void) ",{}],["|",{"inverse":true}],["  ",{"fg":6,"bg":0,"bold":true}],[" 27 ",{"fg":3,"bold":true}],["    ",{}],["virtual",{"fg":2,"bold":true}],[" ",{}],["void",{"fg":2,"bold":true}],[" FirstRun2(",{}],["void",{"fg":2,"bold":true}],[")                                                                              ",{}],["|",{"inverse":true}],["  6 ",{"fg":3,"bold":true}],["▸ temp/",{"fg":6,"bold":true}],["           ",{}]]},"cursor":{"x":21,"y":6,"visible":false}}],[0.015664,{"lines":{"1":[["                    ",{}],["|",{"inverse":true}],["  ",{"fg":6,"bg":0,"bold":true}],[" 22 ",{"fg":3,"bold":true}],["    ",{"underline":true}],["virtual",{"fg":2,"bold":true,"underline":true}],[" ",{"underline":true}],["void",{"fg":2,"bold":true,"underline":true}],[" FirstRun(",{"underline":true}],["void",{"fg":2,"bold":true,"underline":true}],[")                                                                               ",{"underline":true}],["|",{"inverse":true}],["  2 ",{"fg":3,"bold":true}],["                  ",{}]],"2":[["▼",{"fg":3,"bold":true}],[" First",{"fg":5,"bold":true}],[" : ",{}],["struct",{"fg":2,"bold":true}],["    ",{}],["|",{"inverse":true}],["  ",{"fg":6,"bg":0,"bold":true}],[" 23 ",{"fg":3,"bold":true}],["    {                                                                                                         ",{}],["|",{"inverse":true}],["  3 ",{"fg":3,"bold":true}],[".. (up a dir)",{"fg":6,"bold":true}],["     ",{}]],"3":[["    [prototypes]",{"fg":6,"bold":true}],["    ",{}],["|",{"inverse":true}],["  ",{"fg":6,"bg":0,"bold":true}],[" 24 ",{"fg":3,"bold":true}],["    ",{}],["|",{"fg":2,"bold":true}],["   cout << ",{}],["\"First\"",{"fg":5,"bold":true}],[" << endl;                                                                              ",{}],["|",{"inverse":true}],["  4 /root/",{"fg":3,"bold":true}],["            ",{}]],"4":[["   ",{}],["+",{"fg":2,"bold":true}],["FirstRun(void)  ",{}],["|",{"inverse":true}],["  ",{"fg":6,"bg":0,"bold":true}],[" 25 ",{"fg":3,"bold":true}],["    }                                                                                                         ",{}],["|",{"inverse":true}],["  5 ",{"fg":3,"bold":true}],["▸ diary/",{"fg":6,"bold":true,"underline":true}],["          ",{"underline":true}]],"5":[["   ",{}],["+",{"fg":2,"bold":true}],["FirstRun2(void) ",{}],["|",{"inverse":true}],["  ",{"fg":6,"bg":0,"bold":true}],[" 26 ",{"fg":3,"bold":true}],["                                                                                                              ",{}],["|",{"inverse":true}],["  6 ",{"fg":3,"bold":true}],["▸ temp/",{"fg":6,"bold":true}],["           ",{}]],"6":[["                    ",{}],["|",{"inverse":true}],["  ",{"fg":6,"bg":0,"bold":true}],[" 27 ",{"fg":3,"bold":true}],["    ",{}],["virtual",{"fg":2,"bold":true}],[" ",{}],["void",{"fg":2,"bold":true}],[" FirstRun2(",{}],["void",{"fg":2,"bold":true}],[")                                                                              ",{}],["|",{"inverse":true}],["  7 ",{"fg":3,"bold":true}],["  anaconda-ks.cfg ",{}]],"7":[["▼",{"fg":3,"bold":true}],[" Last",{"fg":5,"bold":true}],[" : ",{}],["struct",{"fg":2,"bold":true}],["     ",{}],["|",{"inverse":true}],["  ",{"fg":6,"bg":0,"bold":true}],[" 28 ",{"fg":3,"bold":true}],["    {                                                                                                         ",{}],["|",{"inverse":true}],["  8 ",{"fg":3,"bold":true}],["  initial-setup-ks",{}]],"8":[["    [functions]",{"fg":6,"bold":true}],["     ",{}],["|",{"inverse":true}],["  ",{"fg":6,"bg":0,"bold":true}],[" 29 ",{"fg":3,"bold":true}],["    ",{}],["|",{"fg":2,"bold":true}],["   cout << ",{}],["\"First2\"",{"fg":5,"bold":true}],[" << endl;                                                                             ",{}],["|",{"inverse":true}],["  9 ",{"fg":3,"bold":true}],["  test.c          ",{}]],"9":[["   ",{}],["+",{"fg":2,"bold":true}],["FirstRun(void)  ",{}],["|",{"inverse":true}],["  ",{"fg":6,"bg":0,"bold":true}],[" 30 ",{"fg":3,"bold":true}],["    }                                                                                                         ",{}],["|",{"inverse":true}],[" 10 ",{"fg":3,"bold":true}],["  test.cpp        ",{}]],"10":[["   ",{}],["+",{"fg":2,"bold":true}],["FirstRun2(void) ",{}],["|",{"inverse":true}],["  ",{"fg":6,"bg":0,"bold":true}],[" 31 ",{"fg":3,"bold":true}],["                                                                                                              ",{}],["|",{"inverse":true}],["~                     ",{"fg":4,"bold":true}]],"11":[["   ",{}],["+",{"fg":2,"bold":true}],["~Last()         ",{}],["|",{"inverse":true}],["  ",{"fg":6,"bg":0,"bold":true}],[" 32 ",{"fg":3,"bold":true}],["    ",{}],["// 基类Second虚方法",{"fg":6,"bold":true}],["                                                                                       ",{}],["|",{"inverse":true}],["~                     ",{"fg":4,"bold":true}]],"12":[["   ",{}],["+",{"fg":2,"bold":true}],["SecondRun(void) ",{}],["|",{"inverse":true}],["  ",{"fg":6,"bg":0,"bold":true}],[" 33 ",{"fg":3,"bold":true}],["    ",{}],["virtual",{"fg":2,"bold":true}],[" ",{}],["void",{"fg":2,"bold":true}],[" SecondRun(",{}],["void",{"fg":2,"bold":true}],[")                                                                              ",{}],["|",{"inverse":true}],["~                     ",{"fg":4,"bold":true}]],"13":[["   ",{}],["+",{"fg":2,"bold":true}],["SecondRun2(void)",{}],["|",{"inverse":true}],["  ",{"fg":6,"bg":0,"bold":true}],[" 34 ",{"fg":3,"bold":true}],["    {                                                                                                         ",{}],["|",{"inverse":true}],["~                     ",{"fg":4,"bold":true}]],"14":[["                    ",{}],["|",{"inverse":true}],["  ",{"fg":6,"bg":0,"bold":true}],[" 35 ",{"fg":3,"bold":true}],["    ",{}],["|",{"fg":2,"bold":true}],["   cout <<",{}],["\"Second\"",{"fg":5,"bold":true}],[" << endl;                                                                              ",{}],["|",{"inverse":true}],["~                     ",{"fg":4,"bold":true}]],"15":[["▼",{"fg":3,"bold":true}],[" Second",{"fg":5,"bold":true}],[" : ",{}],["struct",{"fg":2,"bold":true}],["   ",{}],["|",{"inverse":true}],["  ",{"fg":6,"bg":0,"bold":true}],[" 36 ",{"fg":3,"bold":true}],["    }                                                                                                         ",{}],["|",{"inverse":true}],["~                     ",{"fg":4,"bold":true}]],"16":[["    [prototypes]",{"fg":6,"bold":true}],["    ",{}],["|",{"inverse":true}],["  ",{"fg":6,"bg":0,"bold":true}],[" 37 ",{"fg":3,"bold":true}],["                                                                                                              ",{}],["|",{"inverse":true}],["~                     ",{"fg":4,"bold":true}]],"17":[["   ",{}],["+",{"fg":2,"bold":true}],["SecondRun(void) ",{}],["|",{"inverse":true}],["  ",{"fg":6,"bg":0,"bold":true}],[" 38 ",{"fg":3,"bold":true}],["    ",{}],["virtual",{"fg":2,"bold":true}],[" ",{}],["void",{"fg":2,"bold":true}],[" SecondRun2(",{}],["void",{"fg":2,"bold":true}],[")                                                                             ",{}],["|",{"inverse":true}],["~                     ",{"fg":4,"bold":true}]],"18":[["   ",{}],["+",{"fg":2,"bold":true}],["SecondRun2(void)",{}],["|",{"inverse":true}],["  ",{"fg":6,"bg":0,"bold":true}],[" 39 ",{"fg":3,"bold":true}],["    {                                                                                                         ",{}],["|",{"inverse":true}],["~                     ",{"fg":4,"bold":true}]],"19":[["                    ",{}],["|",{"inverse":true}],["  ",{"fg":6,"bg":0,"bold":true}],[" 40 ",{"fg":3,"bold":true}],["    ",{}],["|",{"fg":2,"bold":true}],["   cout <<",{}],["\"Second2\"",{"fg":5,"bold":true}],[" << endl;                                                                             ",{}],["|",{"inverse":true}],["~                     ",{"fg":4,"bold":true}]],"20":[["▼",{"fg":3,"bold":true}],[" ",{}],["functions",{"fg":6,"bold":true}],["         ",{}],["|",{"inverse":true}],["  ",{"fg":6,"bg":0,"bold":true}],[" 41 ",{"fg":3,"bold":true}],["    }                                                                                                         ",{}],["|",{"inverse":true}],["~                     ",{"fg":4,"bold":true}]],"21":[["    ",{"underline":true}],["main",{"fg":0,"bg":3}],["(int argc, c",{"underline":true}],["|",{"inverse":true}],["  ",{"fg":6,"bg":0,"bold":true}],[" 42 ",{"fg":3,"bold":true}],["                                                                                                              ",{}],["|",{"inverse":true}],["~                     ",{"fg":4,"bold":true}]],"22":[["~                   ",{"fg":4,"bold":true}],["|",{"inverse":true}],["  ",{"fg":6,"bg":0,"bold":true}],[" 43 ",{"fg":3,"bold":true}],["    ",{}],["virtual",{"fg":2,"bold":true}],[" ~Last()                                                                                           ",{}],["|",{"inverse":true}],["~                     ",{"fg":4,"bold":true}]],"23":[["~                   ",{"fg":4,"bold":true}],["|",{"inverse":true}],["  ",{"fg":6,"bg":0,"bold":true}],[" 44 ",{"fg":3,"bold":true}],["    {                                                                                                         ",{}],["|",{"inverse":true}],["~                     ",{"fg":4,"bold":true}]],"24":[["~                   ",{"fg":4,"bold":true}],["|",{"inverse":true}],["  ",{"fg":6,"bg":0,"bold":true}],[" 45 ",{"fg":3,"bold":true}],["                                                                                                              ",{}],["|",{"inverse":true}],["~                     ",{"fg":4,"bold":true}]],"25":[["~                   ",{"fg":4,"bold":true}],["|",{"inverse":true}],["  ",{"fg":6,"bg":0,"bold":true}],[" 46 ",{"fg":3,"bold":true}],["    }                                                                                                         ",{}],["|",{"inverse":true}],["~                     ",{"fg":4,"bold":true}]],"26":[["~                   ",{"fg":4,"bold":true}],["|",{"inverse":true}],["  ",{"fg":6,"bg":0,"bold":true}],[" 47 ",{"fg":3,"bold":true}],["                                                                                                              ",{}],["|",{"inverse":true}],["~                     ",{"fg":4,"bold":true}]],"27":[["~                   ",{"fg":4,"bold":true}],["|",{"inverse":true}],["  ",{"fg":6,"bg":0,"bold":true}],[" 48 ",{"fg":3,"bold":true}],["};                                                                                                            ",{}],["|",{"inverse":true}],["~                     ",{"fg":4,"bold":true}]],"28":[["~                   ",{"fg":4,"bold":true}],["|",{"inverse":true}],["  ",{"fg":6,"bg":0,"bold":true}],[" 49 ",{"fg":3,"bold":true}],["                                                                                                              ",{}],["|",{"inverse":true}],["~                     ",{"fg":4,"bold":true}]],"29":[["~                   ",{"fg":4,"bold":true}],["|",{"inverse":true}],["  ",{"fg":6,"bg":0,"bold":true}],[" 50 ",{"fg":3,"bold":true}],["                                                                                                              ",{}],["|",{"inverse":true}],["~                     ",{"fg":4,"bold":true}]],"30":[["~                   ",{"fg":4,"bold":true}],["|",{"inverse":true}],[">>",{"fg":7,"bg":1,"bold":true}],[" 51 ",{"fg":3,"bold":true}],["int",{"fg":2,"bold":true}],[" main(",{}],["int",{"fg":2,"bold":true}],[" ",{}],["argc",{"bg":1}],[", ",{}],["char",{"fg":2,"bold":true}],["* ",{}],["argv",{"bg":1}],["[])                                                                              ",{}],["|",{"inverse":true}],["~                     ",{"fg":4,"bold":true}]],"31":[["~                   ",{"fg":4,"bold":true}],["|",{"inverse":true}],["  ",{"fg":6,"bg":0,"bold":true}],[" 52 ",{"fg":3,"bold":true}],["{                                                                                                             ",{}],["|",{"inverse":true}],["~                     ",{"fg":4,"bold":true}]],"32":[["~                   ",{"fg":4,"bold":true}],["|",{"inverse":true}],["  ",{"fg":6,"bg":0,"bold":true}],[" 53 ",{"fg":3,"bold":true}],["    Last* pLast = ",{}],["new",{"fg":3,"bold":true}],[" Last();                                                                                 ",{}],["|",{"inverse":true}],["~                     ",{"fg":4,"bold":true}]],"33":[["~                   ",{"fg":4,"bold":true}],["|",{"inverse":true}],["  ",{"fg":6,"bg":0,"bold":true}],[" 54 ",{"fg":3,"bold":true}],["    vector<",{}],["int",{"fg":2,"bold":true}],["> v;                                                                                            ",{}],["|",{"inverse":true}],["~                     ",{"fg":4,"bold":true}]],"34":[["~                   ",{"fg":4,"bold":true}],["|",{"inverse":true}],["  ",{"fg":6,"bg":0,"bold":true}],[" 55 ",{"fg":3,"bold":true}],["    v.begin();                                                                                                ",{}],["|",{"inverse":true}],["~                     ",{"fg":4,"bold":true}]],"35":[["~                   ",{"fg":4,"bold":true}],["|",{"inverse":true}],[">>",{"fg":7,"bg":1,"bold":true}],[" 56 ",{"fg":3,"bold":true}],["    Second* pSecond1 = ",{}],["reinterpret_cast",{"fg":3,"bg":1,"bold":true}],["<Second*>(pLast)",{"bg":1}],[";                                                      ",{}],["|",{"inverse":true}],["~                     ",{"fg":4,"bold":true}]],"36":[["~                   ",{"fg":4,"bold":true}],["|",{"inverse":true}],["  ",{"fg":6,"bg":0,"bold":true}],[" 57 ",{"fg":3,"bold":true}],["    pSecond1->SecondRun2();                                                                                   ",{}],["|",{"inverse":true}],["~                     ",{"fg":4,"bold":true}]],"37":[["~                   ",{"fg":4,"bold":true}],["|",{"inverse":true}],["  ",{"fg":6,"bg":0,"bold":true}],[" 59 ",{"fg":3,"bold":true}],["    Second* pSecond2 = pLast;                                                                                 ",{}],["|",{"inverse":true}],["~                     ",{"fg":4,"bold":true}]],"38":[["~                   ",{"fg":4,"bold":true}],["|",{"inverse":true}],["  ",{"fg":6,"bg":0,"bold":true}],[" 60 ",{"fg":3,"bold":true}],["    pSecond2->SecondRun2();                                                                                   ",{}],["|",{"inverse":true}],["~                     ",{"fg":4,"bold":true}]],"39":[["~                   ",{"fg":4,"bold":true}],["|",{"inverse":true}],["  ",{"fg":6,"bg":0,"bold":true}],[" 61 ",{"fg":3,"bold":true}],["                                                                                                              ",{}],["|",{"inverse":true}],["~                     ",{"fg":4,"bold":true}]],"40":[["~                   ",{"fg":4,"bold":true}],["|",{"inverse":true}],["  ",{"fg":6,"bg":0,"bold":true}],[" 62 ",{"fg":3,"bold":true}],["    cout << ",{}],["sizeof",{"fg":3,"bold":true}],["(Last) << endl;                                                                             ",{}],["|",{"inverse":true}],["~                     ",{"fg":4,"bold":true}]],"41":[["~                   ",{"fg":4,"bold":true}],["|",{"inverse":true}],["  ",{"fg":6,"bg":0,"bold":true}],[" 63 ",{"fg":3,"bold":true}],["                                                                                                              ",{}],["|",{"inverse":true}],["~                     ",{"fg":4,"bold":true}]],"42":[["~                   ",{"fg":4,"bold":true}],["|",{"inverse":true}],["  ",{"fg":6,"bg":0,"bold":true}],[" 64 ",{"fg":3,"bold":true}],["                                                                                                              ",{}],["|",{"inverse":true}],["~                     ",{"fg":4,"bold":true}]],"43":[["~                   ",{"fg":4,"bold":true}],["|",{"inverse":true}],["  ",{"fg":6,"bg":0,"bold":true}],[" 65 ",{"fg":3,"bold":true}],["    ",{}],["delete",{"fg":3,"bold":true}],[" pLast;                                                                                             ",{}],["|",{"inverse":true}],["~                     ",{"fg":4,"bold":true}]],"44":[["~                   ",{"fg":4,"bold":true}],["|",{"inverse":true}],["  ",{"fg":6,"bg":0,"bold":true}],[" 66 ",{"fg":3,"bold":true}],["                                                                                                              ",{}],["|",{"inverse":true}],["~                     ",{"fg":4,"bold":true}]],"45":[["~                   ",{"fg":4,"bold":true}],["|",{"inverse":true}],["  ",{"fg":6,"bg":0,"bold":true}],[" 67 ",{"fg":3,"bold":true}],["    pLast = ",{}],["NULL",{"fg":5,"bold":true}],[";                                                                                             ",{}],["|",{"inverse":true}],["~                     ",{"fg":4,"bold":true}]],"46":[["[Name] test.cpp      ",{"inverse":true}],[" NORMAL ",{"bold":true}],[" ",{}],["test.cpp ",{"bold":true}],[" FirstRun()                                                  unix │ utf-8 │ cpp │  30% ",{}],[" LN  22",{"bold":true}],[":1  ",{}],[" ",{"bold":true,"inverse":true}],[" ~/NERD_tree_1 ",{"bold":true}],["       ",{}]]},"cursor":{"x":87,"y":36}}],[0.011128,{"lines":{"0":[["\" Press <F1> for hel",{"fg":6,"bold":true}],["|",{"inverse":true}],["  ",{"fg":6,"bg":0,"bold":true}],[" 21 ",{"fg":3,"bold":true}],["    ",{"underline":true}],["// 基类First的虚方法",{"fg":6,"bold":true,"underline":true}],["                                                                                      ",{"underline":true}],["|",{"inverse":true}],["  1 ",{"fg":3,"bold":true}],["\" Press ? for help",{"fg":5,"bold":true}]],"1":[["                    ",{}],["|",{"inverse":true}],["  ",{"fg":6,"bg":0,"bold":true}],[" 22 ",{"fg":3,"bold":true}],["    ",{}],["virtual",{"fg":2,"bold":true}],[" ",{}],["void",{"fg":2,"bold":true}],[" FirstRun(",{}],["void",{"fg":2,"bold":true}],[")                                                                               ",{}],["|",{"inverse":true}],["  2 ",{"fg":3,"bold":true}],["                  ",{}]],"37":[["~                   ",{"fg":4,"bold":true}],["|",{"inverse":true}],["  ",{"fg":6,"bg":0,"bold":true}],[" 58 ",{"fg":3,"bold":true}],["                                                                                                              ",{}],["|",{"inverse":true}],["~                     ",{"fg":4,"bold":true}]],"38":[["~                   ",{"fg":4,"bold":true}],["|",{"inverse":true}],["  ",{"fg":6,"bg":0,"bold":true}],[" 59 ",{"fg":3,"bold":true}],["    Second* pSecond2 = pLast;                                                                                 ",{}],["|",{"inverse":true}],["~                     ",{"fg":4,"bold":true}]],"39":[["~                   ",{"fg":4,"bold":true}],["|",{"inverse":true}],["  ",{"fg":6,"bg":0,"bold":true}],[" 60 ",{"fg":3,"bold":true}],["    pSecond2->SecondRun2();                                                                                   ",{}],["|",{"inverse":true}],["~                     ",{"fg":4,"bold":true}]],"40":[["~                   ",{"fg":4,"bold":true}],["|",{"inverse":true}],["  ",{"fg":6,"bg":0,"bold":true}],[" 61 ",{"fg":3,"bold":true}],["                                                                                                              ",{}],["|",{"inverse":true}],["~                     ",{"fg":4,"bold":true}]],"41":[["~                   ",{"fg":4,"bold":true}],["|",{"inverse":true}],["  ",{"fg":6,"bg":0,"bold":true}],[" 62 ",{"fg":3,"bold":true}],["    cout << ",{}],["sizeof",{"fg":3,"bold":true}],["(Last) << endl;                                                                             ",{}],["|",{"inverse":true}],["~                     ",{"fg":4,"bold":true}]],"42":[["~                   ",{"fg":4,"bold":true}],["|",{"inverse":true}],["  ",{"fg":6,"bg":0,"bold":true}],[" 63 ",{"fg":3,"bold":true}],["                                                                                                              ",{}],["|",{"inverse":true}],["~                     ",{"fg":4,"bold":true}]],"43":[["~                   ",{"fg":4,"bold":true}],["|",{"inverse":true}],["  ",{"fg":6,"bg":0,"bold":true}],[" 64 ",{"fg":3,"bold":true}],["                                                                                                              ",{}],["|",{"inverse":true}],["~                     ",{"fg":4,"bold":true}]],"44":[["~                   ",{"fg":4,"bold":true}],["|",{"inverse":true}],["  ",{"fg":6,"bg":0,"bold":true}],[" 65 ",{"fg":3,"bold":true}],["    ",{}],["delete",{"fg":3,"bold":true}],[" pLast;                                                                                             ",{}],["|",{"inverse":true}],["~                     ",{"fg":4,"bold":true}]],"45":[["~                   ",{"fg":4,"bold":true}],["|",{"inverse":true}],["  ",{"fg":6,"bg":0,"bold":true}],[" 66 ",{"fg":3,"bold":true}],["                                                                                                              ",{}],["|",{"inverse":true}],["~                     ",{"fg":4,"bold":true}]],"46":[["[Name] test.cpp      ",{"inverse":true}],[" NORMAL ",{"bold":true}],[" ",{}],["test.cpp ",{"bold":true}],[" Last                                                        unix │ utf-8 │ cpp │  29% ",{}],[" LN  21",{"bold":true}],[":1  ",{}],[" ",{"bold":true,"inverse":true}],[" ~/NERD_tree_1 ",{"bold":true}],["       ",{}]]},"cursor":{"x":27,"y":0,"visible":true}}],[0.026955,{"lines":{"47":[["                                                                                                                                                     k          ",{}]]},"cursor":{"visible":false}}],[0.015582,{"lines":{"0":[["\" Press <F1> for hel",{"fg":6,"bold":true}],["|",{"inverse":true}],["  ",{"fg":6,"bg":0,"bold":true}],[" 20 ",{"fg":3,"bold":true}],["{",{"bg":6}],["                                                                                                             ",{"underline":true}],["|",{"inverse":true}],["  1 ",{"fg":3,"bold":true}],["\" Press ? for help",{"fg":5,"bold":true}]],"1":[["                    ",{}],["|",{"inverse":true}],["  ",{"fg":6,"bg":0,"bold":true}],[" 21 ",{"fg":3,"bold":true}],["    ",{}],["// 基类First的虚方法",{"fg":6,"bold":true}],["                                                                                      ",{}],["|",{"inverse":true}],["  2 ",{"fg":3,"bold":true}],["                  ",{}]],"2":[["▼",{"fg":3,"bold":true}],[" First",{"fg":5,"bold":true}],[" : ",{}],["struct",{"fg":2,"bold":true}],["    ",{}],["|",{"inverse":true}],["  ",{"fg":6,"bg":0,"bold":true}],[" 22 ",{"fg":3,"bold":true}],["    ",{}],["virtual",{"fg":2,"bold":true}],[" ",{}],["void",{"fg":2,"bold":true}],[" FirstRun(",{}],["void",{"fg":2,"bold":true}],[")                                                                               ",{}],["|",{"inverse":true}],["  3 ",{"fg":3,"bold":true}],[".. (up a dir)",{"fg":6,"bold":true}],["     ",{}]],"3":[["    [prototypes]",{"fg":6,"bold":true}],["    ",{}],["|",{"inverse":true}],["  ",{"fg":6,"bg":0,"bold":true}],[" 23 ",{"fg":3,"bold":true}],["    {                                                                                                         ",{}],["|",{"inverse":true}],["  4 /root/",{"fg":3,"bold":true}],["            ",{}]],"4":[["   ",{}],["+",{"fg":2,"bold":true}],["FirstRun(void)  ",{}],["|",{"inverse":true}],["  ",{"fg":6,"bg":0,"bold":true}],[" 24 ",{"fg":3,"bold":true}],["    ",{}],["|",{"fg":2,"bold":true}],["   cout << ",{}],["\"First\"",{"fg":5,"bold":true}],[" << endl;                                                                              ",{}],["|",{"inverse":true}],["  5 ",{"fg":3,"bold":true}],["▸ diary/",{"fg":6,"bold":true,"underline":true}],["          ",{"underline":true}]],"5":[["   ",{}],["+",{"fg":2,"bold":true}],["FirstRun2(void) ",{}],["|",{"inverse":true}],["  ",{"fg":6,"bg":0,"bold":true}],[" 25 ",{"fg":3,"bold":true}],["    }                                                                                                         ",{}],["|",{"inverse":true}],["  6 ",{"fg":3,"bold":true}],["▸ temp/",{"fg":6,"bold":true}],["           ",{}]],"6":[["                    ",{}],["|",{"inverse":true}],["  ",{"fg":6,"bg":0,"bold":true}],[" 26 ",{"fg":3,"bold":true}],["                                                                                                              ",{}],["|",{"inverse":true}],["  7 ",{"fg":3,"bold":true}],["  anaconda-ks.cfg ",{}]],"7":[["▼",{"fg":3,"bold":true}],[" Last",{"fg":5,"bold":true}],[" : ",{}],["struct",{"fg":2,"bold":true}],["     ",{}],["|",{"inverse":true}],["  ",{"fg":6,"bg":0,"bold":true}],[" 27 ",{"fg":3,"bold":true}],["    ",{}],["virtual",{"fg":2,"bold":true}],[" ",{}],["void",{"fg":2,"bold":true}],[" FirstRun2(",{}],["void",{"fg":2,"bold":true}],[")                                                                              ",{}],["|",{"inverse":true}],["  8 ",{"fg":3,"bold":true}],["  initial-setup-ks",{}]],"8":[["    [functions]",{"fg":6,"bold":true}],["     ",{}],["|",{"inverse":true}],["  ",{"fg":6,"bg":0,"bold":true}],[" 28 ",{"fg":3,"bold":true}],["    {                                                                                                         ",{}],["|",{"inverse":true}],["  9 ",{"fg":3,"bold":true}],["  test.c          ",{}]],"9":[["   ",{}],["+",{"fg":2,"bold":true}],["FirstRun(void)  ",{}],["|",{"inverse":true}],["  ",{"fg":6,"bg":0,"bold":true}],[" 29 ",{"fg":3,"bold":true}],["    ",{}],["|",{"fg":2,"bold":true}],["   cout << ",{}],["\"First2\"",{"fg":5,"bold":true}],[" << endl;                                                                             ",{}],["|",{"inverse":true}],[" 10 ",{"fg":3,"bold":true}],["  test.cpp        ",{}]],"10":[["   ",{}],["+",{"fg":2,"bold":true}],["FirstRun2(void) ",{}],["|",{"inverse":true}],["  ",{"fg":6,"bg":0,"bold":true}],[" 30 ",{"fg":3,"bold":true}],["    }                                                                                                         ",{}],["|",{"inverse":true}],["~                     ",{"fg":4,"bold":true}]],"11":[["   ",{}],["+",{"fg":2,"bold":true}],["~Last()         ",{}],["|",{"inverse":true}],["  ",{"fg":6,"bg":0,"bold":true}],[" 31 ",{"fg":3,"bold":true}],["                                                                                                              ",{}],["|",{"inverse":true}],["~                     ",{"fg":4,"bold":true}]],"12":[["   ",{}],["+",{"fg":2,"bold":true}],["SecondRun(void) ",{}],["|",{"inverse":true}],["  ",{"fg":6,"bg":0,"bold":true}],[" 32 ",{"fg":3,"bold":true}],["    ",{}],["// 基类Second虚方法",{"fg":6,"bold":true}],["                                                                                       ",{}],["|",{"inverse":true}],["~                     ",{"fg":4,"bold":true}]],"13":[["   ",{}],["+",{"fg":2,"bold":true}],["SecondRun2(void)",{}],["|",{"inverse":true}],["  ",{"fg":6,"bg":0,"bold":true}],[" 33 ",{"fg":3,"bold":true}],["    ",{}],["virtual",{"fg":2,"bold":true}],[" ",{}],["void",{"fg":2,"bold":true}],[" SecondRun(",{}],["void",{"fg":2,"bold":true}],[")                                                                              ",{}],["|",{"inverse":true}],["~                     ",{"fg":4,"bold":true}]],"14":[["                    ",{}],["|",{"inverse":true}],["  ",{"fg":6,"bg":0,"bold":true}],[" 34 ",{"fg":3,"bold":true}],["    {                                                                                                         ",{}],["|",{"inverse":true}],["~                     ",{"fg":4,"bold":true}]],"15":[["▼",{"fg":3,"bold":true}],[" Second",{"fg":5,"bold":true}],[" : ",{}],["struct",{"fg":2,"bold":true}],["   ",{}],["|",{"inverse":true}],["  ",{"fg":6,"bg":0,"bold":true}],[" 35 ",{"fg":3,"bold":true}],["    ",{}],["|",{"fg":2,"bold":true}],["   cout <<",{}],["\"Second\"",{"fg":5,"bold":true}],[" << endl;                                                                              ",{}],["|",{"inverse":true}],["~                     ",{"fg":4,"bold":true}]],"16":[["    [prototypes]",{"fg":6,"bold":true}],["    ",{}],["|",{"inverse":true}],["  ",{"fg":6,"bg":0,"bold":true}],[" 36 ",{"fg":3,"bold":true}],["    }                                                                                                         ",{}],["|",{"inverse":true}],["~                     ",{"fg":4,"bold":true}]],"17":[["   ",{}],["+",{"fg":2,"bold":true}],["SecondRun(void) ",{}],["|",{"inverse":true}],["  ",{"fg":6,"bg":0,"bold":true}],[" 37 ",{"fg":3,"bold":true}],["                                                                                                              ",{}],["|",{"inverse":true}],["~                     ",{"fg":4,"bold":true}]],"18":[["   ",{}],["+",{"fg":2,"bold":true}],["SecondRun2(void)",{}],["|",{"inverse":true}],["  ",{"fg":6,"bg":0,"bold":true}],[" 38 ",{"fg":3,"bold":true}],["    ",{}],["virtual",{"fg":2,"bold":true}],[" ",{}],["void",{"fg":2,"bold":true}],[" SecondRun2(",{}],["void",{"fg":2,"bold":true}],[")                                                                             ",{}],["|",{"inverse":true}],["~                     ",{"fg":4,"bold":true}]],"19":[["                    ",{}],["|",{"inverse":true}],["  ",{"fg":6,"bg":0,"bold":true}],[" 39 ",{"fg":3,"bold":true}],["    {                                                                                                         ",{}],["|",{"inverse":true}],["~                     ",{"fg":4,"bold":true}]],"20":[["▼",{"fg":3,"bold":true}],[" ",{}],["functions",{"fg":6,"bold":true}],["         ",{}],["|",{"inverse":true}],["  ",{"fg":6,"bg":0,"bold":true}],[" 40 ",{"fg":3,"bold":true}],["    ",{}],["|",{"fg":2,"bold":true}],["   cout <<",{}],["\"Second2\"",{"fg":5,"bold":true}],[" << endl;                                                                             ",{}],["|",{"inverse":true}],["~                     ",{"fg":4,"bold":true}]],"21":[["    ",{"underline":true}],["main",{"fg":0,"bg":3}],["(int argc, c",{"underline":true}],["|",{"inverse":true}],["  ",{"fg":6,"bg":0,"bold":true}],[" 41 ",{"fg":3,"bold":true}],["    }                                                                                                         ",{}],["|",{"inverse":true}],["~                     ",{"fg":4,"bold":true}]],"22":[["~                   ",{"fg":4,"bold":true}],["|",{"inverse":true}],["  ",{"fg":6,"bg":0,"bold":true}],[" 42 ",{"fg":3,"bold":true}],["                                                                                                              ",{}],["|",{"inverse":true}],["~                     ",{"fg":4,"bold":true}]],"23":[["~                   ",{"fg":4,"bold":true}],["|",{"inverse":true}],["  ",{"fg":6,"bg":0,"bold":true}],[" 43 ",{"fg":3,"bold":true}],["    ",{}],["virtual",{"fg":2,"bold":true}],[" ~Last()                                                                                           ",{}],["|",{"inverse":true}],["~                     ",{"fg":4,"bold":true}]],"24":[["~                   ",{"fg":4,"bold":true}],["|",{"inverse":true}],["  ",{"fg":6,"bg":0,"bold":true}],[" 44 ",{"fg":3,"bold":true}],["    {                                                                                                         ",{}],["|",{"inverse":true}],["~                     ",{"fg":4,"bold":true}]],"25":[["~                   ",{"fg":4,"bold":true}],["|",{"inverse":true}],["  ",{"fg":6,"bg":0,"bold":true}],[" 45 ",{"fg":3,"bold":true}],["                                                                                                              ",{}],["|",{"inverse":true}],["~                     ",{"fg":4,"bold":true}]],"26":[["~                   ",{"fg":4,"bold":true}],["|",{"inverse":true}],["  ",{"fg":6,"bg":0,"bold":true}],[" 46 ",{"fg":3,"bold":true}],["    }                                                                                                         ",{}],["|",{"inverse":true}],["~                     ",{"fg":4,"bold":true}]],"27":[["~                   ",{"fg":4,"bold":true}],["|",{"inverse":true}],["  ",{"fg":6,"bg":0,"bold":true}],[" 47 ",{"fg":3,"bold":true}],["                                                                                                              ",{}],["|",{"inverse":true}],["~                     ",{"fg":4,"bold":true}]],"28":[["~                   ",{"fg":4,"bold":true}],["|",{"inverse":true}],["  ",{"fg":6,"bg":0,"bold":true}],[" 48 ",{"fg":3,"bold":true}],["}",{"bg":6}],[";                                                                                                            ",{}],["|",{"inverse":true}],["~                     ",{"fg":4,"bold":true}]],"29":[["~                   ",{"fg":4,"bold":true}],["|",{"inverse":true}],["  ",{"fg":6,"bg":0,"bold":true}],[" 49 ",{"fg":3,"bold":true}],["                                                                                                              ",{}],["|",{"inverse":true}],["~                     ",{"fg":4,"bold":true}]],"30":[["~                   ",{"fg":4,"bold":true}],["|",{"inverse":true}],["  ",{"fg":6,"bg":0,"bold":true}],[" 50 ",{"fg":3,"bold":true}],["                                                                                                              ",{}],["|",{"inverse":true}],["~                     ",{"fg":4,"bold":true}]],"31":[["~                   ",{"fg":4,"bold":true}],["|",{"inverse":true}],[">>",{"fg":7,"bg":1,"bold":true}],[" 51 ",{"fg":3,"bold":true}],["int",{"fg":2,"bold":true}],[" main(",{}],["int",{"fg":2,"bold":true}],[" ",{}],["argc",{"bg":1}],[", ",{}],["char",{"fg":2,"bold":true}],["* ",{}],["argv",{"bg":1}],["[])                                                                              ",{}],["|",{"inverse":true}],["~                     ",{"fg":4,"bold":true}]],"32":[["~                   ",{"fg":4,"bold":true}],["|",{"inverse":true}],["  ",{"fg":6,"bg":0,"bold":true}],[" 52 ",{"fg":3,"bold":true}],["{                                                                                                             ",{}],["|",{"inverse":true}],["~                     ",{"fg":4,"bold":true}]],"33":[["~                   ",{"fg":4,"bold":true}],["|",{"inverse":true}],["  ",{"fg":6,"bg":0,"bold":true}],[" 53 ",{"fg":3,"bold":true}],["    Last* pLast = ",{}],["new",{"fg":3,"bold":true}],[" Last();                                                                                 ",{}],["|",{"inverse":true}],["~                     ",{"fg":4,"bold":true}]],"34":[["~                   ",{"fg":4,"bold":true}],["|",{"inverse":true}],["  ",{"fg":6,"bg":0,"bold":true}],[" 54 ",{"fg":3,"bold":true}],["    vector<",{}],["int",{"fg":2,"bold":true}],["> v;                                                                                            ",{}],["|",{"inverse":true}],["~                     ",{"fg":4,"bold":true}]],"35":[["~                   ",{"fg":4,"bold":true}],["|",{"inverse":true}],["  ",{"fg":6,"bg":0,"bold":true}],[" 55 ",{"fg":3,"bold":true}],["    v.begin();                                                                                                ",{}],["|",{"inverse":true}],["~                     ",{"fg":4,"bold":true}]],"36":[["~                   ",{"fg":4,"bold":true}],["|",{"inverse":true}],[">>",{"fg":7,"bg":1,"bold":true}],[" 56 ",{"fg":3,"bold":true}],["    Second* pSecond1 = ",{}],["reinterpret_cast",{"fg":3,"bg":1,"bold":true}],["<Second*>(pLast)",{"bg":1}],[";                                                      ",{}],["|",{"inverse":true}],["~                     ",{"fg":4,"bold":true}]],"37":[["~                   ",{"fg":4,"bold":true}],["|",{"inverse":true}],["  ",{"fg":6,"bg":0,"bold":true}],[" 57 ",{"fg":3,"bold":true}],["    pSecond1->SecondRun2();                                                                                   ",{}],["|",{"inverse":true}],["~                     ",{"fg":4,"bold":true}]],"38":[["~                   ",{"fg":4,"bold":true}],["|",{"inverse":true}],["  ",{"fg":6,"bg":0,"bold":true}],[" 58 ",{"fg":3,"bold":true}],["                                                                                                              ",{}],["|",{"inverse":true}],["~                     ",{"fg":4,"bold":true}]],"39":[["~                   ",{"fg":4,"bold":true}],["|",{"inverse":true}],["  ",{"fg":6,"bg":0,"bold":true}],[" 59 ",{"fg":3,"bold":true}],["    Second* pSecond2 = pLast;                                                                                 ",{}],["|",{"inverse":true}],["~                     ",{"fg":4,"bold":true}]],"40":[["~                   ",{"fg":4,"bold":true}],["|",{"inverse":true}],["  ",{"fg":6,"bg":0,"bold":true}],[" 60 ",{"fg":3,"bold":true}],["    pSecond2->SecondRun2();                                                                                   ",{}],["|",{"inverse":true}],["~                     ",{"fg":4,"bold":true}]],"41":[["~                   ",{"fg":4,"bold":true}],["|",{"inverse":true}],["  ",{"fg":6,"bg":0,"bold":true}],[" 61 ",{"fg":3,"bold":true}],["                                                                                                              ",{}],["|",{"inverse":true}],["~                     ",{"fg":4,"bold":true}]],"42":[["~                   ",{"fg":4,"bold":true}],["|",{"inverse":true}],["  ",{"fg":6,"bg":0,"bold":true}],[" 62 ",{"fg":3,"bold":true}],["    cout << ",{}],["sizeof",{"fg":3,"bold":true}],["(Last) << endl;                                                                             ",{}],["|",{"inverse":true}],["~                     ",{"fg":4,"bold":true}]],"43":[["~                   ",{"fg":4,"bold":true}],["|",{"inverse":true}],["  ",{"fg":6,"bg":0,"bold":true}],[" 63 ",{"fg":3,"bold":true}],["                                                                                                              ",{}],["|",{"inverse":true}],["~                     ",{"fg":4,"bold":true}]],"44":[["~                   ",{"fg":4,"bold":true}],["|",{"inverse":true}],["  ",{"fg":6,"bg":0,"bold":true}],[" 64 ",{"fg":3,"bold":true}],["                                                                                                              ",{}],["|",{"inverse":true}],["~                     ",{"fg":4,"bold":true}]],"45":[["~                   ",{"fg":4,"bold":true}],["|",{"inverse":true}],["  ",{"fg":6,"bg":0,"bold":true}],[" 65 ",{"fg":3,"bold":true}],["    ",{}],["delete",{"fg":3,"bold":true}],[" pLast;                                                                                             ",{}],["|",{"inverse":true}],["~                     ",{"fg":4,"bold":true}]],"46":[["[Name] test.cpp      ",{"inverse":true}],[" NORMAL ",{"bold":true}],[" ",{}],["test.cpp ",{"bold":true}],[" Last                                                        unix │ utf-8 │ cpp │  28% ",{}],[" LN  20",{"bold":true}],[":1  ",{}],[" ",{"bold":true,"inverse":true}],[" ~/NERD_tree_1 ",{"bold":true}],["       ",{}]],"47":[["                                                                                                                                                                ",{}]]},"cursor":{"visible":true}}],[0.014814,{"lines":{"0":[["\" Press <F1> for hel",{"fg":6,"bold":true}],["|",{"inverse":true}],["                                                                                                                    ",{}],["|",{"inverse":true}],["  1 ",{"fg":3,"bold":true}],["\" Press ? for help",{"fg":5,"bold":true}]],"1":[["                    ",{}],["|",{"inverse":true}],["  ",{"fg":6,"bg":0,"bold":true}],[" 20 ",{"fg":3,"bold":true}],["{",{"bg":6}],["                                                                                                             ",{"underline":true}],["|",{"inverse":true}],["  2 ",{"fg":3,"bold":true}],["                  ",{}]],"2":[["▼",{"fg":3,"bold":true}],[" First",{"fg":5,"bold":true}],[" : ",{}],["struct",{"fg":2,"bold":true}],["    ",{}],["|",{"inverse":true}],["  ",{"fg":6,"bg":0,"bold":true}],[" 21 ",{"fg":3,"bold":true}],["    ",{}],["// 基类First的虚方法",{"fg":6,"bold":true}],["                                                                                      ",{}],["|",{"inverse":true}],["  3 ",{"fg":3,"bold":true}],[".. (up a dir)",{"fg":6,"bold":true}],["     ",{}]],"3":[["    [prototypes]",{"fg":6,"bold":true}],["    ",{}],["|",{"inverse":true}],["  ",{"fg":6,"bg":0,"bold":true}],[" 22 ",{"fg":3,"bold":true}],["    ",{}],["virtual",{"fg":2,"bold":true}],[" ",{}],["void",{"fg":2,"bold":true}],[" FirstRun(",{}],["void",{"fg":2,"bold":true}],[")                                                                               ",{}],["|",{"inverse":true}],["  4 /root/",{"fg":3,"bold":true}],["            ",{}]],"4":[["   ",{}],["+",{"fg":2,"bold":true}],["FirstRun(void)  ",{}],["|",{"inverse":true}],["  ",{"fg":6,"bg":0,"bold":true}],[" 23 ",{"fg":3,"bold":true}],["    {                                                                                                         ",{}],["|",{"inverse":true}],["  5 ",{"fg":3,"bold":true}],["▸ diary/",{"fg":6,"bold":true,"underline":true}],["          ",{"underline":true}]],"5":[["   ",{}],["+",{"fg":2,"bold":true}],["FirstRun2(void) ",{}],["|",{"inverse":true}],["  ",{"fg":6,"bg":0,"bold":true}],[" 24 ",{"fg":3,"bold":true}],["    ",{}],["|",{"fg":2,"bold":true}],["   cout << ",{}],["\"First\"",{"fg":5,"bold":true}],[" << endl;                                                                              ",{}],["|",{"inverse":true}],["  6 ",{"fg":3,"bold":true}],["▸ temp/",{"fg":6,"bold":true}],["           ",{}]],"6":[["                    ",{}],["|",{"inverse":true}],["  ",{"fg":6,"bg":0,"bold":true}],[" 25 ",{"fg":3,"bold":true}],["    }                                                                                                         ",{}],["|",{"inverse":true}],["  7 ",{"fg":3,"bold":true}],["  anaconda-ks.cfg ",{}]],"7":[["▼",{"fg":3,"bold":true}],[" Last",{"fg":5,"bold":true}],[" : ",{}],["struct",{"fg":2,"bold":true}],["     ",{}],["|",{"inverse":true}],["  ",{"fg":6,"bg":0,"bold":true}],[" 26 ",{"fg":3,"bold":true}],["                                                                                                              ",{}],["|",{"inverse":true}],["  8 ",{"fg":3,"bold":true}],["  initial-setup-ks",{}]],"8":[["    [functions]",{"fg":6,"bold":true}],["     ",{}],["|",{"inverse":true}],["  ",{"fg":6,"bg":0,"bold":true}],[" 27 ",{"fg":3,"bold":true}],["    ",{}],["virtual",{"fg":2,"bold":true}],[" ",{}],["void",{"fg":2,"bold":true}],[" FirstRun2(",{}],["void",{"fg":2,"bold":true}],[")                                                                              ",{}],["|",{"inverse":true}],["  9 ",{"fg":3,"bold":true}],["  test.c          ",{}]],"9":[["   ",{}],["+",{"fg":2,"bold":true}],["FirstRun(void)  ",{}],["|",{"inverse":true}],["  ",{"fg":6,"bg":0,"bold":true}],[" 28 ",{"fg":3,"bold":true}],["    {                                                                                                         ",{}],["|",{"inverse":true}],[" 10 ",{"fg":3,"bold":true}],["  test.cpp        ",{}]],"10":[["   ",{}],["+",{"fg":2,"bold":true}],["FirstRun2(void) ",{}],["|",{"inverse":true}],["  ",{"fg":6,"bg":0,"bold":true}],[" 29 ",{"fg":3,"bold":true}],["    ",{}],["|",{"fg":2,"bold":true}],["   cout << ",{}],["\"First2\"",{"fg":5,"bold":true}],[" << endl;                                                                             ",{}],["|",{"inverse":true}],["~                     ",{"fg":4,"bold":true}]],"11":[["   ",{}],["+",{"fg":2,"bold":true}],["~Last()         ",{}],["|",{"inverse":true}],["  ",{"fg":6,"bg":0,"bold":true}],[" 30 ",{"fg":3,"bold":true}],["    }                                                                                                         ",{}],["|",{"inverse":true}],["~                     ",{"fg":4,"bold":true}]],"12":[["   ",{}],["+",{"fg":2,"bold":true}],["SecondRun(void) ",{}],["|",{"inverse":true}],["  ",{"fg":6,"bg":0,"bold":true}],[" 31 ",{"fg":3,"bold":true}],["                                                                                                              ",{}],["|",{"inverse":true}],["~                     ",{"fg":4,"bold":true}]],"13":[["   ",{}],["+",{"fg":2,"bold":true}],["SecondRun2(void)",{}],["|",{"inverse":true}],["  ",{"fg":6,"bg":0,"bold":true}],[" 32 ",{"fg":3,"bold":true}],["    ",{}],["// 基类Second虚方法",{"fg":6,"bold":true}],["                                                                                       ",{}],["|",{"inverse":true}],["~                     ",{"fg":4,"bold":true}]],"14":[["                    ",{}],["|",{"inverse":true}],["  ",{"fg":6,"bg":0,"bold":true}],[" 33 ",{"fg":3,"bold":true}],["    ",{}],["virtual",{"fg":2,"bold":true}],[" ",{}],["void",{"fg":2,"bold":true}],[" SecondRun(",{}],["void",{"fg":2,"bold":true}],[")                                                                              ",{}],["|",{"inverse":true}],["~                     ",{"fg":4,"bold":true}]],"15":[["▼",{"fg":3,"bold":true}],[" Second",{"fg":5,"bold":true}],[" : ",{}],["struct",{"fg":2,"bold":true}],["   ",{}],["|",{"inverse":true}],["  ",{"fg":6,"bg":0,"bold":true}],[" 34 ",{"fg":3,"bold":true}],["    {                                                                                                         ",{}],["|",{"inverse":true}],["~                     ",{"fg":4,"bold":true}]],"16":[["    [prototypes]",{"fg":6,"bold":true}],["    ",{}],["|",{"inverse":true}],["  ",{"fg":6,"bg":0,"bold":true}],[" 35 ",{"fg":3,"bold":true}],["    ",{}],["|",{"fg":2,"bold":true}],["   cout <<",{}],["\"Second\"",{"fg":5,"bold":true}],[" << endl;                                                                              ",{}],["|",{"inverse":true}],["~                     ",{"fg":4,"bold":true}]],"17":[["   ",{}],["+",{"fg":2,"bold":true}],["SecondRun(void) ",{}],["|",{"inverse":true}],["  ",{"fg":6,"bg":0,"bold":true}],[" 36 ",{"fg":3,"bold":true}],["    }                                                                                                         ",{}],["|",{"inverse":true}],["~                     ",{"fg":4,"bold":true}]],"18":[["   ",{}],["+",{"fg":2,"bold":true}],["SecondRun2(void)",{}],["|",{"inverse":true}],["  ",{"fg":6,"bg":0,"bold":true}],[" 37 ",{"fg":3,"bold":true}],["                                                                                                              ",{}],["|",{"inverse":true}],["~                     ",{"fg":4,"bold":true}]],"19":[["                    ",{}],["|",{"inverse":true}],["  ",{"fg":6,"bg":0,"bold":true}],[" 38 ",{"fg":3,"bold":true}],["    ",{}],["virtual",{"fg":2,"bold":true}],[" ",{}],["void",{"fg":2,"bold":true}],[" SecondRun2(",{}],["void",{"fg":2,"bold":true}],[")                                                                             ",{}],["|",{"inverse":true}],["~                     ",{"fg":4,"bold":true}]],"20":[["▼",{"fg":3,"bold":true}],[" ",{}],["functions",{"fg":6,"bold":true}],["         ",{}],["|",{"inverse":true}],["  ",{"fg":6,"bg":0,"bold":true}],[" 39 ",{"fg":3,"bold":true}],["    {                                                                                                         ",{}],["|",{"inverse":true}],["~                     ",{"fg":4,"bold":true}]],"21":[["    ",{"underline":true}],["main",{"fg":0,"bg":3}],["(int argc, c",{"underline":true}],["|",{"inverse":true}],["  ",{"fg":6,"bg":0,"bold":true}],[" 40 ",{"fg":3,"bold":true}],["    ",{}],["|",{"fg":2,"bold":true}],["   cout <<",{}],["\"Second2\"",{"fg":5,"bold":true}],[" << endl;                                                                             ",{}],["|",{"inverse":true}],["~                     ",{"fg":4,"bold":true}]],"22":[["~                   ",{"fg":4,"bold":true}],["|",{"inverse":true}],["  ",{"fg":6,"bg":0,"bold":true}],[" 41 ",{"fg":3,"bold":true}],["    }                                                                                                         ",{}],["|",{"inverse":true}],["~                     ",{"fg":4,"bold":true}]],"23":[["~                   ",{"fg":4,"bold":true}],["|",{"inverse":true}],["  ",{"fg":6,"bg":0,"bold":true}],[" 42 ",{"fg":3,"bold":true}],["                                                                                                              ",{}],["|",{"inverse":true}],["~                     ",{"fg":4,"bold":true}]],"24":[["~                   ",{"fg":4,"bold":true}],["|",{"inverse":true}],["  ",{"fg":6,"bg":0,"bold":true}],[" 43 ",{"fg":3,"bold":true}],["    ",{}],["virtual",{"fg":2,"bold":true}],[" ~Last()                                                                                           ",{}],["|",{"inverse":true}],["~                     ",{"fg":4,"bold":true}]],"25":[["~                   ",{"fg":4,"bold":true}],["|",{"inverse":true}],["  ",{"fg":6,"bg":0,"bold":true}],[" 44 ",{"fg":3,"bold":true}],["    {                                                                                                         ",{}],["|",{"inverse":true}],["~                     ",{"fg":4,"bold":true}]],"26":[["~                   ",{"fg":4,"bold":true}],["|",{"inverse":true}],["  ",{"fg":6,"bg":0,"bold":true}],[" 45 ",{"fg":3,"bold":true}],["                                                                                                              ",{}],["|",{"inverse":true}],["~                     ",{"fg":4,"bold":true}]],"27":[["~                   ",{"fg":4,"bold":true}],["|",{"inverse":true}],["  ",{"fg":6,"bg":0,"bold":true}],[" 46 ",{"fg":3,"bold":true}],["    }                                                                                                         ",{}],["|",{"inverse":true}],["~                     ",{"fg":4,"bold":true}]],"28":[["~                   ",{"fg":4,"bold":true}],["|",{"inverse":true}],["  ",{"fg":6,"bg":0,"bold":true}],[" 47 ",{"fg":3,"bold":true}],["                                                                                                              ",{}],["|",{"inverse":true}],["~                     ",{"fg":4,"bold":true}]],"29":[["~                   ",{"fg":4,"bold":true}],["|",{"inverse":true}],["  ",{"fg":6,"bg":0,"bold":true}],[" 48 ",{"fg":3,"bold":true}],["}",{"bg":6}],[";                                                                                                            ",{}],["|",{"inverse":true}],["~                     ",{"fg":4,"bold":true}]],"30":[["~                   ",{"fg":4,"bold":true}],["|",{"inverse":true}],["  ",{"fg":6,"bg":0,"bold":true}],[" 49 ",{"fg":3,"bold":true}],["                                                                                                              ",{}],["|",{"inverse":true}],["~                     ",{"fg":4,"bold":true}]],"31":[["~                   ",{"fg":4,"bold":true}],["|",{"inverse":true}],["  ",{"fg":6,"bg":0,"bold":true}],[" 50 ",{"fg":3,"bold":true}],["                                                                                                              ",{}],["|",{"inverse":true}],["~                     ",{"fg":4,"bold":true}]],"32":[["~                   ",{"fg":4,"bold":true}],["|",{"inverse":true}],[">>",{"fg":7,"bg":1,"bold":true}],[" 51 ",{"fg":3,"bold":true}],["int",{"fg":2,"bold":true}],[" main(",{}],["int",{"fg":2,"bold":true}],[" ",{}],["argc",{"bg":1}],[", ",{}],["char",{"fg":2,"bold":true}],["* ",{}],["argv",{"bg":1}],["[])                                                                              ",{}],["|",{"inverse":true}],["~                     ",{"fg":4,"bold":true}]],"33":[["~                   ",{"fg":4,"bold":true}],["|",{"inverse":true}],["  ",{"fg":6,"bg":0,"bold":true}],[" 52 ",{"fg":3,"bold":true}],["{                                                                                                             ",{}],["|",{"inverse":true}],["~                     ",{"fg":4,"bold":true}]],"34":[["~                   ",{"fg":4,"bold":true}],["|",{"inverse":true}],["  ",{"fg":6,"bg":0,"bold":true}],[" 53 ",{"fg":3,"bold":true}],["    Last* pLast = ",{}],["new",{"fg":3,"bold":true}],[" Last();                                                                                 ",{}],["|",{"inverse":true}],["~                     ",{"fg":4,"bold":true}]],"35":[["~                   ",{"fg":4,"bold":true}],["|",{"inverse":true}],["  ",{"fg":6,"bg":0,"bold":true}],[" 54 ",{"fg":3,"bold":true}],["    vector<",{}],["int",{"fg":2,"bold":true}],["> v;                                                                                            ",{}],["|",{"inverse":true}],["~                     ",{"fg":4,"bold":true}]],"36":[["~                   ",{"fg":4,"bold":true}],["|",{"inverse":true}],["  ",{"fg":6,"bg":0,"bold":true}],[" 55 ",{"fg":3,"bold":true}],["    v.begin();                                                                                                ",{}],["|",{"inverse":true}],["~                     ",{"fg":4,"bold":true}]]},"cursor":{"x":113,"y":36,"visible":false}}],[0.028338,{"lines":{"37":[["~                   ",{"fg":4,"bold":true}],["|",{"inverse":true}],[">>",{"fg":7,"bg":1,"bold":true}],[" 56 ",{"fg":3,"bold":true}],["    Second* pSecond1 = ",{}],["reinterpret_cast",{"fg":3,"bg":1,"bold":true}],["<Second*>(pLast)",{"bg":1}],[";                                                      ",{}],["|",{"inverse":true}],["~                     ",{"fg":4,"bold":true}]],"38":[["~                   ",{"fg":4,"bold":true}],["|",{"inverse":true}],["  ",{"fg":6,"bg":0,"bold":true}],[" 57 ",{"fg":3,"bold":true}],["    pSecond1->SecondRun2();                                                                                   ",{}],["|",{"inverse":true}],["~                     ",{"fg":4,"bold":true}]],"39":[["~                   ",{"fg":4,"bold":true}],["|",{"inverse":true}],["  ",{"fg":6,"bg":0,"bold":true}],[" 58 ",{"fg":3,"bold":true}],["                                                                                                              ",{}],["|",{"inverse":true}],["~                     ",{"fg":4,"bold":true}]],"40":[["~                   ",{"fg":4,"bold":true}],["|",{"inverse":true}],["  ",{"fg":6,"bg":0,"bold":true}],[" 59 ",{"fg":3,"bold":true}],["    Second* pSecond2 = pLast;                                                                                 ",{}],["|",{"inverse":true}],["~                     ",{"fg":4,"bold":true}]],"41":[["~                   ",{"fg":4,"bold":true}],["|",{"inverse":true}],["  ",{"fg":6,"bg":0,"bold":true}],[" 60 ",{"fg":3,"bold":true}],["    pSecond2->SecondRun2();                                                                                   ",{}],["|",{"inverse":true}],["~                     ",{"fg":4,"bold":true}]],"42":[["~                   ",{"fg":4,"bold":true}],["|",{"inverse":true}],["  ",{"fg":6,"bg":0,"bold":true}],[" 61 ",{"fg":3,"bold":true}],["                                                                                                              ",{}],["|",{"inverse":true}],["~                     ",{"fg":4,"bold":true}]],"43":[["~                   ",{"fg":4,"bold":true}],["|",{"inverse":true}],["  ",{"fg":6,"bg":0,"bold":true}],[" 62 ",{"fg":3,"bold":true}],["                                                                                                              ",{}],["|",{"inverse":true}],["~                     ",{"fg":4,"bold":true}]]},"cursor":{"x":27,"y":43}}],[0.011454,{"lines":{"1":[["                    ",{}],["|",{"inverse":true}],["  ",{"fg":6,"bg":0,"bold":true}],[" 19 ",{"fg":3,"bold":true}],["    ",{"underline":true}],["public",{"fg":3,"bold":true,"underline":true}],[" Second                                                                                             ",{"underline":true}],["|",{"inverse":true}],["  2 ",{"fg":3,"bold":true}],["                  ",{}]],"2":[["▼",{"fg":3,"bold":true}],[" First",{"fg":5,"bold":true}],[" : ",{}],["struct",{"fg":2,"bold":true}],["    ",{}],["|",{"inverse":true}],["  ",{"fg":6,"bg":0,"bold":true}],[" 20 ",{"fg":3,"bold":true}],["{                                                                                                             ",{}],["|",{"inverse":true}],["  3 ",{"fg":3,"bold":true}],[".. (up a dir)",{"fg":6,"bold":true}],["     ",{}]],"3":[["    [prototypes]",{"fg":6,"bold":true}],["    ",{}],["|",{"inverse":true}],["  ",{"fg":6,"bg":0,"bold":true}],[" 21 ",{"fg":3,"bold":true}],["    ",{}],["// 基类First的虚方法",{"fg":6,"bold":true}],["                                                                                      ",{}],["|",{"inverse":true}],["  4 /root/",{"fg":3,"bold":true}],["            ",{}]],"4":[["   ",{}],["+",{"fg":2,"bold":true}],["FirstRun(void)  ",{}],["|",{"inverse":true}],["  ",{"fg":6,"bg":0,"bold":true}],[" 22 ",{"fg":3,"bold":true}],["    ",{}],["virtual",{"fg":2,"bold":true}],[" ",{}],["void",{"fg":2,"bold":true}],[" FirstRun(",{}],["void",{"fg":2,"bold":true}],[")                                                                               ",{}],["|",{"inverse":true}],["  5 ",{"fg":3,"bold":true}],["▸ diary/",{"fg":6,"bold":true,"underline":true}],["          ",{"underline":true}]],"5":[["   ",{}],["+",{"fg":2,"bold":true}],["FirstRun2(void) ",{}],["|",{"inverse":true}],["  ",{"fg":6,"bg":0,"bold":true}],[" 23 ",{"fg":3,"bold":true}],["    {                                                                                                         ",{}],["|",{"inverse":true}],["  6 ",{"fg":3,"bold":true}],["▸ temp/",{"fg":6,"bold":true}],["           ",{}]],"6":[["                    ",{}],["|",{"inverse":true}],["  ",{"fg":6,"bg":0,"bold":true}],[" 24 ",{"fg":3,"bold":true}],["    ",{}],["|",{"fg":2,"bold":true}],["   cout << ",{}],["\"First\"",{"fg":5,"bold":true}],[" << endl;                                                                              ",{}],["|",{"inverse":true}],["  7 ",{"fg":3,"bold":true}],["  anaconda-ks.cfg ",{}]],"7":[["▼",{"fg":3,"bold":true}],[" Last",{"fg":5,"bold":true}],[" : ",{}],["struct",{"fg":2,"bold":true}],["     ",{}],["|",{"inverse":true}],["  ",{"fg":6,"bg":0,"bold":true}],[" 25 ",{"fg":3,"bold":true}],["    }                                                                                                         ",{}],["|",{"inverse":true}],["  8 ",{"fg":3,"bold":true}],["  initial-setup-ks",{}]],"8":[["    [functions]",{"fg":6,"bold":true}],["     ",{}],["|",{"inverse":true}],["  ",{"fg":6,"bg":0,"bold":true}],[" 26 ",{"fg":3,"bold":true}],["                                                                                                              ",{}],["|",{"inverse":true}],["  9 ",{"fg":3,"bold":true}],["  test.c          ",{}]],"9":[["   ",{}],["+",{"fg":2,"bold":true}],["FirstRun(void)  ",{}],["|",{"inverse":true}],["  ",{"fg":6,"bg":0,"bold":true}],[" 27 ",{"fg":3,"bold":true}],["    ",{}],["virtual",{"fg":2,"bold":true}],[" ",{}],["void",{"fg":2,"bold":true}],[" FirstRun2(",{}],["void",{"fg":2,"bold":true}],[")                                                                              ",{}],["|",{"inverse":true}],[" 10 ",{"fg":3,"bold":true}],["  test.cpp        ",{}]],"10":[["   ",{}],["+",{"fg":2,"bold":true}],["FirstRun2(void) ",{}],["|",{"inverse":true}],["  ",{"fg":6,"bg":0,"bold":true}],[" 28 ",{"fg":3,"bold":true}],["    {                                                                                                         ",{}],["|",{"inverse":true}],["~                     ",{"fg":4,"bold":true}]],"11":[["   ",{}],["+",{"fg":2,"bold":true}],["~Last()         ",{}],["|",{"inverse":true}],["  ",{"fg":6,"bg":0,"bold":true}],[" 29 ",{"fg":3,"bold":true}],["    ",{}],["|",{"fg":2,"bold":true}],["   cout << ",{}],["\"First2\"",{"fg":5,"bold":true}],[" << endl;                                                                             ",{}],["|",{"inverse":true}],["~                     ",{"fg":4,"bold":true}]],"12":[["   ",{}],["+",{"fg":2,"bold":true}],["SecondRun(void) ",{}],["|",{"inverse":true}],["  ",{"fg":6,"bg":0,"bold":true}],[" 30 ",{"fg":3,"bold":true}],["    }                                                                                                         ",{}],["|",{"inverse":true}],["~                     ",{"fg":4,"bold":true}]],"13":[["   ",{}],["+",{"fg":2,"bold":true}],["SecondRun2(void)",{}],["|",{"inverse":true}],["  ",{"fg":6,"bg":0,"bold":true}],[" 31 ",{"fg":3,"bold":true}],["                                                                                                              ",{}],["|",{"inverse":true}],["~                     ",{"fg":4,"bold":true}]],"14":[["                    ",{}],["|",{"inverse":true}],["  ",{"fg":6,"bg":0,"bold":true}],[" 32 ",{"fg":3,"bold":true}],["    ",{}],["// 基类Second虚方法",{"fg":6,"bold":true}],["                                                                                       ",{}],["|",{"inverse":true}],["~                     ",{"fg":4,"bold":true}]],"15":[["▼",{"fg":3,"bold":true}],[" Second",{"fg":5,"bold":true}],[" : ",{}],["struct",{"fg":2,"bold":true}],["   ",{}],["|",{"inverse":true}],["  ",{"fg":6,"bg":0,"bold":true}],[" 33 ",{"fg":3,"bold":true}],["    ",{}],["virtual",{"fg":2,"bold":true}],[" ",{}],["void",{"fg":2,"bold":true}],[" SecondRun(",{}],["void",{"fg":2,"bold":true}],[")                                                                              ",{}],["|",{"inverse":true}],["~                     ",{"fg":4,"bold":true}]],"16":[["    [prototypes]",{"fg":6,"bold":true}],["    ",{}],["|",{"inverse":true}],["  ",{"fg":6,"bg":0,"bold":true}],[" 34 ",{"fg":3,"bold":true}],["    {                                                                                                         ",{}],["|",{"inverse":true}],["~                     ",{"fg":4,"bold":true}]],"17":[["   ",{}],["+",{"fg":2,"bold":true}],["SecondRun(void) ",{}],["|",{"inverse":true}],["  ",{"fg":6,"bg":0,"bold":true}],[" 35 ",{"fg":3,"bold":true}],["    ",{}],["|",{"fg":2,"bold":true}],["   cout <<",{}],["\"Second\"",{"fg":5,"bold":true}],[" << endl;                                                                              ",{}],["|",{"inverse":true}],["~                     ",{"fg":4,"bold":true}]],"18":[["   ",{}],["+",{"fg":2,"bold":true}],["SecondRun2(void)",{}],["|",{"inverse":true}],["  ",{"fg":6,"bg":0,"bold":true}],[" 36 ",{"fg":3,"bold":true}],["    }                                                                                                         ",{}],["|",{"inverse":true}],["~                     ",{"fg":4,"bold":true}]],"19":[["                    ",{}],["|",{"inverse":true}],["  ",{"fg":6,"bg":0,"bold":true}],[" 37 ",{"fg":3,"bold":true}],["                                                                                                              ",{}],["|",{"inverse":true}],["~                     ",{"fg":4,"bold":true}]],"20":[["▼",{"fg":3,"bold":true}],[" ",{}],["functions",{"fg":6,"bold":true}],["         ",{}],["|",{"inverse":true}],["  ",{"fg":6,"bg":0,"bold":true}],[" 38 ",{"fg":3,"bold":true}],["    ",{}],["virtual",{"fg":2,"bold":true}],[" ",{}],["void",{"fg":2,"bold":true}],[" SecondRun2(",{}],["void",{"fg":2,"bold":true}],[")                                                                             ",{}],["|",{"inverse":true}],["~                     ",{"fg":4,"bold":true}]],"21":[["    ",{"underline":true}],["main",{"fg":0,"bg":3}],["(int argc, c",{"underline":true}],["|",{"inverse":true}],["  ",{"fg":6,"bg":0,"bold":true}],[" 39 ",{"fg":3,"bold":true}],["    {                                                                                                         ",{}],["|",{"inverse":true}],["~                     ",{"fg":4,"bold":true}]],"22":[["~                   ",{"fg":4,"bold":true}],["|",{"inverse":true}],["  ",{"fg":6,"bg":0,"bold":true}],[" 40 ",{"fg":3,"bold":true}],["    ",{}],["|",{"fg":2,"bold":true}],["   cout <<",{}],["\"Second2\"",{"fg":5,"bold":true}],[" << endl;                                                                             ",{}],["|",{"inverse":true}],["~                     ",{"fg":4,"bold":true}]],"23":[["~                   ",{"fg":4,"bold":true}],["|",{"inverse":true}],["  ",{"fg":6,"bg":0,"bold":true}],[" 41 ",{"fg":3,"bold":true}],["    }                                                                                                         ",{}],["|",{"inverse":true}],["~                     ",{"fg":4,"bold":true}]],"24":[["~                   ",{"fg":4,"bold":true}],["|",{"inverse":true}],["  ",{"fg":6,"bg":0,"bold":true}],[" 42 ",{"fg":3,"bold":true}],["                                                                                                              ",{}],["|",{"inverse":true}],["~                     ",{"fg":4,"bold":true}]],"25":[["~                   ",{"fg":4,"bold":true}],["|",{"inverse":true}],["  ",{"fg":6,"bg":0,"bold":true}],[" 43 ",{"fg":3,"bold":true}],["    ",{}],["virtual",{"fg":2,"bold":true}],[" ~Last()                                                                                           ",{}],["|",{"inverse":true}],["~                     ",{"fg":4,"bold":true}]],"26":[["~                   ",{"fg":4,"bold":true}],["|",{"inverse":true}],["  ",{"fg":6,"bg":0,"bold":true}],[" 44 ",{"fg":3,"bold":true}],["    {                                                                                                         ",{}],["|",{"inverse":true}],["~                     ",{"fg":4,"bold":true}]],"27":[["~                   ",{"fg":4,"bold":true}],["|",{"inverse":true}],["  ",{"fg":6,"bg":0,"bold":true}],[" 45 ",{"fg":3,"bold":true}],["                                                                                                              ",{}],["|",{"inverse":true}],["~                     ",{"fg":4,"bold":true}]],"28":[["~                   ",{"fg":4,"bold":true}],["|",{"inverse":true}],["  ",{"fg":6,"bg":0,"bold":true}],[" 46 ",{"fg":3,"bold":true}],["    }                                                                                                         ",{}],["|",{"inverse":true}],["~                     ",{"fg":4,"bold":true}]],"29":[["~                   ",{"fg":4,"bold":true}],["|",{"inverse":true}],["  ",{"fg":6,"bg":0,"bold":true}],[" 47 ",{"fg":3,"bold":true}],["                                                                                                              ",{}],["|",{"inverse":true}],["~                     ",{"fg":4,"bold":true}]],"30":[["~                   ",{"fg":4,"bold":true}],["|",{"inverse":true}],["  ",{"fg":6,"bg":0,"bold":true}],[" 48 ",{"fg":3,"bold":true}],["};                                                                                                            ",{}],["|",{"inverse":true}],["~                     ",{"fg":4,"bold":true}]],"31":[["~                   ",{"fg":4,"bold":true}],["|",{"inverse":true}],["  ",{"fg":6,"bg":0,"bold":true}],[" 49 ",{"fg":3,"bold":true}],["                                                                                                              ",{}],["|",{"inverse":true}],["~                     ",{"fg":4,"bold":true}]],"32":[["~                   ",{"fg":4,"bold":true}],["|",{"inverse":true}],["  ",{"fg":6,"bg":0,"bold":true}],[" 50 ",{"fg":3,"bold":true}],["                                                                                                              ",{}],["|",{"inverse":true}],["~                     ",{"fg":4,"bold":true}]],"33":[["~                   ",{"fg":4,"bold":true}],["|",{"inverse":true}],[">>",{"fg":7,"bg":1,"bold":true}],[" 51 ",{"fg":3,"bold":true}],["int",{"fg":2,"bold":true}],[" main(",{}],["int",{"fg":2,"bold":true}],[" ",{}],["argc",{"bg":1}],[", ",{}],["char",{"fg":2,"bold":true}],["* ",{}],["argv",{"bg":1}],["[])                                                                              ",{}],["|",{"inverse":true}],["~                     ",{"fg":4,"bold":true}]],"34":[["~                   ",{"fg":4,"bold":true}],["|",{"inverse":true}],["  ",{"fg":6,"bg":0,"bold":true}],[" 52 ",{"fg":3,"bold":true}],["{                                                                                                             ",{}],["|",{"inverse":true}],["~                     ",{"fg":4,"bold":true}]],"35":[["~                   ",{"fg":4,"bold":true}],["|",{"inverse":true}],["  ",{"fg":6,"bg":0,"bold":true}],[" 53 ",{"fg":3,"bold":true}],["    Last* pLast = ",{}],["new",{"fg":3,"bold":true}],[" Last();                                                                                 ",{}],["|",{"inverse":true}],["~                     ",{"fg":4,"bold":true}]],"36":[["~                   ",{"fg":4,"bold":true}],["|",{"inverse":true}],["  ",{"fg":6,"bg":0,"bold":true}],[" 54 ",{"fg":3,"bold":true}],["    vector<",{}],["int",{"fg":2,"bold":true}],["> v;                                                                                            ",{}],["|",{"inverse":true}],["~                     ",{"fg":4,"bold":true}]],"43":[["~                   ",{"fg":4,"bold":true}],["|",{"inverse":true}],["  ",{"fg":6,"bg":0,"bold":true}],[" 62 ",{"fg":3,"bold":true}],["    cout << ",{}],["sizeof",{"fg":3,"bold":true}],["(Last) << endl;                                                                             ",{}],["|",{"inverse":true}],["~                     ",{"fg":4,"bold":true}]],"44":[["~                   ",{"fg":4,"bold":true}],["|",{"inverse":true}],["  ",{"fg":6,"bg":0,"bold":true}],[" 63 ",{"fg":3,"bold":true}],["                                                                                                              ",{}],["|",{"inverse":true}],["~                     ",{"fg":4,"bold":true}]],"45":[["~                   ",{"fg":4,"bold":true}],["|",{"inverse":true}],["  ",{"fg":6,"bg":0,"bold":true}],[" 64 ",{"fg":3,"bold":true}],["                                                                                                              ",{}],["|",{"inverse":true}],["~                     ",{"fg":4,"bold":true}]],"46":[["[Name] test.cpp      ",{"inverse":true}],[" NORMAL ",{"bold":true}],[" ",{}],["test.cpp ",{"bold":true}],[" Last                                                        unix │ utf-8 │ cpp │  26% ",{}],[" LN  19",{"bold":true}],[":1  ",{}],[" ",{"bold":true,"inverse":true}],[" ~/NERD_tree_1 ",{"bold":true}],["       ",{}]]},"cursor":{"x":101,"y":36}}],[0.007653999999999999,{"lines":{"0":[["\" Press <F1> for hel",{"fg":6,"bold":true}],["|",{"inverse":true}],["  ",{"fg":6,"bg":0,"bold":true}],[" 18 ",{"fg":3,"bold":true}],["struct",{"fg":2,"bold":true,"underline":true}],[" Last: ",{"underline":true}],["public",{"fg":3,"bold":true,"underline":true}],[" First,                                                                                    ",{"underline":true}],["|",{"inverse":true}],["  1 ",{"fg":3,"bold":true}],["\" Press ? for help",{"fg":5,"bold":true}]],"1":[["                    ",{}],["|",{"inverse":true}],["  ",{"fg":6,"bg":0,"bold":true}],[" 19 ",{"fg":3,"bold":true}],["    ",{}],["public",{"fg":3,"bold":true}],[" Second                                                                                             ",{}],["|",{"inverse":true}],["  2 ",{"fg":3,"bold":true}],["                  ",{}]],"37":[["~                   ",{"fg":4,"bold":true}],["|",{"inverse":true}],["  ",{"fg":6,"bg":0,"bold":true}],[" 55 ",{"fg":3,"bold":true}],["    v.begin();                                                                                                ",{}],["|",{"inverse":true}],["~                     ",{"fg":4,"bold":true}]],"38":[["~                   ",{"fg":4,"bold":true}],["|",{"inverse":true}],[">>",{"fg":7,"bg":1,"bold":true}],[" 56 ",{"fg":3,"bold":true}],["    Second* pSecond1 = ",{}],["reinterpret_cast",{"fg":3,"bg":1,"bold":true}],["<Second*>(pLast)",{"bg":1}],[";                                                      ",{}],["|",{"inverse":true}],["~                     ",{"fg":4,"bold":true}]],"39":[["~                   ",{"fg":4,"bold":true}],["|",{"inverse":true}],["  ",{"fg":6,"bg":0,"bold":true}],[" 57 ",{"fg":3,"bold":true}],["    pSecond1->SecondRun2();                                                                                   ",{}],["|",{"inverse":true}],["~                     ",{"fg":4,"bold":true}]],"40":[["~                   ",{"fg":4,"bold":true}],["|",{"inverse":true}],["  ",{"fg":6,"bg":0,"bold":true}],[" 58 ",{"fg":3,"bold":true}],["                                                                                                              ",{}],["|",{"inverse":true}],["~                     ",{"fg":4,"bold":true}]],"41":[["~                   ",{"fg":4,"bold":true}],["|",{"inverse":true}],["  ",{"fg":6,"bg":0,"bold":true}],[" 59 ",{"fg":3,"bold":true}],["    Second* pSecond2 = pLast;                                                                                 ",{}],["|",{"inverse":true}],["~                     ",{"fg":4,"bold":true}]],"42":[["~                   ",{"fg":4,"bold":true}],["|",{"inverse":true}],["  ",{"fg":6,"bg":0,"bold":true}],[" 60 ",{"fg":3,"bold":true}],["    pSecond2->SecondRun2();                                                                                   ",{}],["|",{"inverse":true}],["~                     ",{"fg":4,"bold":true}]],"43":[["~                   ",{"fg":4,"bold":true}],["|",{"inverse":true}],["  ",{"fg":6,"bg":0,"bold":true}],[" 61 ",{"fg":3,"bold":true}],["                                                                                                              ",{}],["|",{"inverse":true}],["~                     ",{"fg":4,"bold":true}]],"44":[["~                   ",{"fg":4,"bold":true}],["|",{"inverse":true}],["  ",{"fg":6,"bg":0,"bold":true}],[" 62 ",{"fg":3,"bold":true}],["    cout << ",{}],["sizeof",{"fg":3,"bold":true}],["(Last) << endl;                                                                             ",{}],["|",{"inverse":true}],["~                     ",{"fg":4,"bold":true}]],"45":[["~                   ",{"fg":4,"bold":true}],["|",{"inverse":true}],["  ",{"fg":6,"bg":0,"bold":true}],[" 63 ",{"fg":3,"bold":true}],["                                                                                                              ",{}],["|",{"inverse":true}],["~                     ",{"fg":4,"bold":true}]],"46":[["[Name] test.cpp      ",{"inverse":true}],[" NORMAL ",{"bold":true}],[" ",{}],["test.cpp ",{"bold":true}],[" Last                                                        unix │ utf-8 │ cpp │  25% ",{}],[" LN  18",{"bold":true}],[":1  ",{}],[" ",{"bold":true,"inverse":true}],[" ~/NERD_tree_1 ",{"bold":true}],["       ",{}]]},"cursor":{"x":27,"y":0,"visible":true}}],[0.03635,{"lines":{"0":[["\" Press <F1> for hel",{"fg":6,"bold":true}],["|",{"inverse":true}],["                                                                                                                    ",{}],["|",{"inverse":true}],["  1 ",{"fg":3,"bold":true}],["\" Press ? for help",{"fg":5,"bold":true}]],"1":[["                    ",{}],["|",{"inverse":true}],["  ",{"fg":6,"bg":0,"bold":true}],[" 18 ",{"fg":3,"bold":true}],["struct",{"fg":2,"bold":true,"underline":true}],[" Last: ",{"underline":true}],["public",{"fg":3,"bold":true,"underline":true}],[" First,                                                                                    ",{"underline":true}],["|",{"inverse":true}],["  2 ",{"fg":3,"bold":true}],["                  ",{}]],"2":[["▼",{"fg":3,"bold":true}],[" First",{"fg":5,"bold":true}],[" : ",{}],["struct",{"fg":2,"bold":true}],["    ",{}],["|",{"inverse":true}],["  ",{"fg":6,"bg":0,"bold":true}],[" 19 ",{"fg":3,"bold":true}],["    ",{}],["public",{"fg":3,"bold":true}],[" Second                                                                                             ",{}],["|",{"inverse":true}],["  3 ",{"fg":3,"bold":true}],[".. (up a dir)",{"fg":6,"bold":true}],["     ",{}]],"3":[["    [prototypes]",{"fg":6,"bold":true}],["    ",{}],["|",{"inverse":true}],["  ",{"fg":6,"bg":0,"bold":true}],[" 20 ",{"fg":3,"bold":true}],["{                                                                                                             ",{}],["|",{"inverse":true}],["  4 /root/",{"fg":3,"bold":true}],["            ",{}]],"4":[["   ",{}],["+",{"fg":2,"bold":true}],["FirstRun(void)  ",{}],["|",{"inverse":true}],["  ",{"fg":6,"bg":0,"bold":true}],[" 21 ",{"fg":3,"bold":true}],["    ",{}],["// 基类First的虚方法",{"fg":6,"bold":true}],["                                                                                      ",{}],["|",{"inverse":true}],["  5 ",{"fg":3,"bold":true}],["▸ diary/",{"fg":6,"bold":true,"underline":true}],["          ",{"underline":true}]],"5":[["   ",{}],["+",{"fg":2,"bold":true}],["FirstRun2(void) ",{}],["|",{"inverse":true}],["  ",{"fg":6,"bg":0,"bold":true}],[" 22 ",{"fg":3,"bold":true}],["    ",{}],["virtual",{"fg":2,"bold":true}],[" ",{}],["void",{"fg":2,"bold":true}],[" FirstRun(",{}],["void",{"fg":2,"bold":true}],[")                                                                               ",{}],["|",{"inverse":true}],["  6 ",{"fg":3,"bold":true}],["▸ temp/",{"fg":6,"bold":true}],["           ",{}]]},"cursor":{"x":87,"y":5,"visible":false}}],[0.012746,{"lines":{"0":[["\" Press <F1> for hel",{"fg":6,"bold":true}],["|",{"inverse":true}],["  ",{"fg":6,"bg":0,"bold":true}],[" 17 ",{"fg":3,"bold":true}],["                                                                                                              ",{"underline":true}],["|",{"inverse":true}],["  1 ",{"fg":3,"bold":true}],["\" Press ? for help",{"fg":5,"bold":true}]],"1":[["                    ",{}],["|",{"inverse":true}],["  ",{"fg":6,"bg":0,"bold":true}],[" 18 ",{"fg":3,"bold":true}],["struct",{"fg":2,"bold":true}],[" Last: ",{}],["public",{"fg":3,"bold":true}],[" First,                                                                                    ",{}],["|",{"inverse":true}],["  2 ",{"fg":3,"bold":true}],["                  ",{}]],"6":[["                    ",{}],["|",{"inverse":true}],["  ",{"fg":6,"bg":0,"bold":true}],[" 23 ",{"fg":3,"bold":true}],["    {                                                                                                         ",{}],["|",{"inverse":true}],["  7 ",{"fg":3,"bold":true}],["  anaconda-ks.cfg ",{}]],"7":[["▼",{"fg":3,"bold":true}],[" Last",{"fg":5,"bold":true}],[" : ",{}],["struct",{"fg":2,"bold":true}],["     ",{}],["|",{"inverse":true}],["  ",{"fg":6,"bg":0,"bold":true}],[" 24 ",{"fg":3,"bold":true}],["    ",{}],["|",{"fg":2,"bold":true}],["   cout << ",{}],["\"First\"",{"fg":5,"bold":true}],[" << endl;                                                                              ",{}],["|",{"inverse":true}],["  8 ",{"fg":3,"bold":true}],["  initial-setup-ks",{}]],"8":[["    [functions]",{"fg":6,"bold":true}],["     ",{}],["|",{"inverse":true}],["  ",{"fg":6,"bg":0,"bold":true}],[" 25 ",{"fg":3,"bold":true}],["    }                                                                                                         ",{}],["|",{"inverse":true}],["  9 ",{"fg":3,"bold":true}],["  test.c          ",{}]],"9":[["   ",{}],["+",{"fg":2,"bold":true}],["FirstRun(void)  ",{}],["|",{"inverse":true}],["  ",{"fg":6,"bg":0,"bold":true}],[" 26 ",{"fg":3,"bold":true}],["                                                                                                              ",{}],["|",{"inverse":true}],[" 10 ",{"fg":3,"bold":true}],["  test.cpp        ",{}]],"10":[["   ",{}],["+",{"fg":2,"bold":true}],["FirstRun2(void) ",{}],["|",{"inverse":true}],["  ",{"fg":6,"bg":0,"bold":true}],[" 27 ",{"fg":3,"bold":true}],["    ",{}],["virtual",{"fg":2,"bold":true}],[" ",{}],["void",{"fg":2,"bold":true}],[" FirstRun2(",{}],["void",{"fg":2,"bold":true}],[")                                                                              ",{}],["|",{"inverse":true}],["~                     ",{"fg":4,"bold":true}]],"11":[["   ",{}],["+",{"fg":2,"bold":true}],["~Last()         ",{}],["|",{"inverse":true}],["  ",{"fg":6,"bg":0,"bold":true}],[" 28 ",{"fg":3,"bold":true}],["    {                                                                                                         ",{}],["|",{"inverse":true}],["~                     ",{"fg":4,"bold":true}]],"12":[["   ",{}],["+",{"fg":2,"bold":true}],["SecondRun(void) ",{}],["|",{"inverse":true}],["  ",{"fg":6,"bg":0,"bold":true}],[" 29 ",{"fg":3,"bold":true}],["    ",{}],["|",{"fg":2,"bold":true}],["   cout << ",{}],["\"First2\"",{"fg":5,"bold":true}],[" << endl;                                                                             ",{}],["|",{"inverse":true}],["~                     ",{"fg":4,"bold":true}]],"13":[["   ",{}],["+",{"fg":2,"bold":true}],["SecondRun2(void)",{}],["|",{"inverse":true}],["  ",{"fg":6,"bg":0,"bold":true}],[" 30 ",{"fg":3,"bold":true}],["    }                                                                                                         ",{}],["|",{"inverse":true}],["~                     ",{"fg":4,"bold":true}]],"14":[["                    ",{}],["|",{"inverse":true}],["  ",{"fg":6,"bg":0,"bold":true}],[" 31 ",{"fg":3,"bold":true}],["                                                                                                              ",{}],["|",{"inverse":true}],["~                     ",{"fg":4,"bold":true}]],"15":[["▼",{"fg":3,"bold":true}],[" Second",{"fg":5,"bold":true}],[" : ",{}],["struct",{"fg":2,"bold":true}],["   ",{}],["|",{"inverse":true}],["  ",{"fg":6,"bg":0,"bold":true}],[" 32 ",{"fg":3,"bold":true}],["    ",{}],["// 基类Second虚方法",{"fg":6,"bold":true}],["                                                                                       ",{}],["|",{"inverse":true}],["~                     ",{"fg":4,"bold":true}]],"16":[["    [prototypes]",{"fg":6,"bold":true}],["    ",{}],["|",{"inverse":true}],["  ",{"fg":6,"bg":0,"bold":true}],[" 33 ",{"fg":3,"bold":true}],["    ",{}],["virtual",{"fg":2,"bold":true}],[" ",{}],["void",{"fg":2,"bold":true}],[" SecondRun(",{}],["void",{"fg":2,"bold":true}],[")                                                                              ",{}],["|",{"inverse":true}],["~                     ",{"fg":4,"bold":true}]],"17":[["   ",{}],["+",{"fg":2,"bold":true}],["SecondRun(void) ",{}],["|",{"inverse":true}],["  ",{"fg":6,"bg":0,"bold":true}],[" 34 ",{"fg":3,"bold":true}],["    {                                                                                                         ",{}],["|",{"inverse":true}],["~                     ",{"fg":4,"bold":true}]],"18":[["   ",{}],["+",{"fg":2,"bold":true}],["SecondRun2(void)",{}],["|",{"inverse":true}],["  ",{"fg":6,"bg":0,"bold":true}],[" 35 ",{"fg":3,"bold":true}],["    ",{}],["|",{"fg":2,"bold":true}],["   cout <<",{}],["\"Second\"",{"fg":5,"bold":true}],[" << endl;                                                                              ",{}],["|",{"inverse":true}],["~                     ",{"fg":4,"bold":true}]],"19":[["                    ",{}],["|",{"inverse":true}],["  ",{"fg":6,"bg":0,"bold":true}],[" 36 ",{"fg":3,"bold":true}],["    }                                                                                                         ",{}],["|",{"inverse":true}],["~                     ",{"fg":4,"bold":true}]],"20":[["▼",{"fg":3,"bold":true}],[" ",{}],["functions",{"fg":6,"bold":true}],["         ",{}],["|",{"inverse":true}],["  ",{"fg":6,"bg":0,"bold":true}],[" 37 ",{"fg":3,"bold":true}],["                                                                                                              ",{}],["|",{"inverse":true}],["~                     ",{"fg":4,"bold":true}]],"21":[["    ",{"underline":true}],["main",{"fg":0,"bg":3}],["(int argc, c",{"underline":true}],["|",{"inverse":true}],["  ",{"fg":6,"bg":0,"bold":true}],[" 38 ",{"fg":3,"bold":true}],["    ",{}],["virtual",{"fg":2,"bold":true}],[" ",{}],["void",{"fg":2,"bold":true}],[" SecondRun2(",{}],["void",{"fg":2,"bold":true}],[")                                                                             ",{}],["|",{"inverse":true}],["~                     ",{"fg":4,"bold":true}]],"22":[["~                   ",{"fg":4,"bold":true}],["|",{"inverse":true}],["  ",{"fg":6,"bg":0,"bold":true}],[" 39 ",{"fg":3,"bold":true}],["    {                                                                                                         ",{}],["|",{"inverse":true}],["~                     ",{"fg":4,"bold":true}]],"23":[["~                   ",{"fg":4,"bold":true}],["|",{"inverse":true}],["  ",{"fg":6,"bg":0,"bold":true}],[" 40 ",{"fg":3,"bold":true}],["    ",{}],["|",{"fg":2,"bold":true}],["   cout <<",{}],["\"Second2\"",{"fg":5,"bold":true}],[" << endl;                                                                             ",{}],["|",{"inverse":true}],["~                     ",{"fg":4,"bold":true}]],"24":[["~                   ",{"fg":4,"bold":true}],["|",{"inverse":true}],["  ",{"fg":6,"bg":0,"bold":true}],[" 41 ",{"fg":3,"bold":true}],["    }                                                                                                         ",{}],["|",{"inverse":true}],["~                     ",{"fg":4,"bold":true}]],"25":[["~                   ",{"fg":4,"bold":true}],["|",{"inverse":true}],["  ",{"fg":6,"bg":0,"bold":true}],[" 42 ",{"fg":3,"bold":true}],["                                                                                                              ",{}],["|",{"inverse":true}],["~                     ",{"fg":4,"bold":true}]],"26":[["~                   ",{"fg":4,"bold":true}],["|",{"inverse":true}],["  ",{"fg":6,"bg":0,"bold":true}],[" 43 ",{"fg":3,"bold":true}],["    ",{}],["virtual",{"fg":2,"bold":true}],[" ~Last()                                                                                           ",{}],["|",{"inverse":true}],["~                     ",{"fg":4,"bold":true}]],"27":[["~                   ",{"fg":4,"bold":true}],["|",{"inverse":true}],["  ",{"fg":6,"bg":0,"bold":true}],[" 44 ",{"fg":3,"bold":true}],["    {                                                                                                         ",{}],["|",{"inverse":true}],["~                     ",{"fg":4,"bold":true}]],"28":[["~                   ",{"fg":4,"bold":true}],["|",{"inverse":true}],["  ",{"fg":6,"bg":0,"bold":true}],[" 45 ",{"fg":3,"bold":true}],["                                                                                                              ",{}],["|",{"inverse":true}],["~                     ",{"fg":4,"bold":true}]],"29":[["~                   ",{"fg":4,"bold":true}],["|",{"inverse":true}],["  ",{"fg":6,"bg":0,"bold":true}],[" 46 ",{"fg":3,"bold":true}],["    }                                                                                                         ",{}],["|",{"inverse":true}],["~                     ",{"fg":4,"bold":true}]],"30":[["~                   ",{"fg":4,"bold":true}],["|",{"inverse":true}],["  ",{"fg":6,"bg":0,"bold":true}],[" 47 ",{"fg":3,"bold":true}],["                                                                                                              ",{}],["|",{"inverse":true}],["~                     ",{"fg":4,"bold":true}]],"31":[["~                   ",{"fg":4,"bold":true}],["|",{"inverse":true}],["  ",{"fg":6,"bg":0,"bold":true}],[" 48 ",{"fg":3,"bold":true}],["};                                                                                                            ",{}],["|",{"inverse":true}],["~                     ",{"fg":4,"bold":true}]],"32":[["~                   ",{"fg":4,"bold":true}],["|",{"inverse":true}],["  ",{"fg":6,"bg":0,"bold":true}],[" 49 ",{"fg":3,"bold":true}],["                                                                                                              ",{}],["|",{"inverse":true}],["~                     ",{"fg":4,"bold":true}]],"33":[["~                   ",{"fg":4,"bold":true}],["|",{"inverse":true}],["  ",{"fg":6,"bg":0,"bold":true}],[" 50 ",{"fg":3,"bold":true}],["                                                                                                              ",{}],["|",{"inverse":true}],["~                     ",{"fg":4,"bold":true}]],"34":[["~                   ",{"fg":4,"bold":true}],["|",{"inverse":true}],[">>",{"fg":7,"bg":1,"bold":true}],[" 51 ",{"fg":3,"bold":true}],["int",{"fg":2,"bold":true}],[" main(",{}],["int",{"fg":2,"bold":true}],[" ",{}],["argc",{"bg":1}],[", ",{}],["char",{"fg":2,"bold":true}],["* ",{}],["argv",{"bg":1}],["[])                                                                              ",{}],["|",{"inverse":true}],["~                     ",{"fg":4,"bold":true}]],"35":[["~                   ",{"fg":4,"bold":true}],["|",{"inverse":true}],["  ",{"fg":6,"bg":0,"bold":true}],[" 52 ",{"fg":3,"bold":true}],["{                                                                                                             ",{}],["|",{"inverse":true}],["~                     ",{"fg":4,"bold":true}]],"36":[["~                   ",{"fg":4,"bold":true}],["|",{"inverse":true}],["  ",{"fg":6,"bg":0,"bold":true}],[" 53 ",{"fg":3,"bold":true}],["    Last* pLast = ",{}],["new",{"fg":3,"bold":true}],[" Last();                                                                                 ",{}],["|",{"inverse":true}],["~                     ",{"fg":4,"bold":true}]],"37":[["~                   ",{"fg":4,"bold":true}],["|",{"inverse":true}],["  ",{"fg":6,"bg":0,"bold":true}],[" 54 ",{"fg":3,"bold":true}],["    vector<",{}],["int",{"fg":2,"bold":true}],["> v;                                                                                            ",{}],["|",{"inverse":true}],["~                     ",{"fg":4,"bold":true}]],"38":[["~                   ",{"fg":4,"bold":true}],["|",{"inverse":true}],["  ",{"fg":6,"bg":0,"bold":true}],[" 55 ",{"fg":3,"bold":true}],["    v.begin();                                                                                                ",{}],["|",{"inverse":true}],["~                     ",{"fg":4,"bold":true}]],"39":[["~                   ",{"fg":4,"bold":true}],["|",{"inverse":true}],[">>",{"fg":7,"bg":1,"bold":true}],[" 56 ",{"fg":3,"bold":true}],["    Second* pSecond1 = ",{}],["reinterpret_cast",{"fg":3,"bg":1,"bold":true}],["<Second*>(pLast)",{"bg":1}],[";                                                      ",{}],["|",{"inverse":true}],["~                     ",{"fg":4,"bold":true}]],"40":[["~                   ",{"fg":4,"bold":true}],["|",{"inverse":true}],["  ",{"fg":6,"bg":0,"bold":true}],[" 57 ",{"fg":3,"bold":true}],["    pSecond1->SecondRun2();                                                                                   ",{}],["|",{"inverse":true}],["~                     ",{"fg":4,"bold":true}]],"41":[["~                   ",{"fg":4,"bold":true}],["|",{"inverse":true}],["  ",{"fg":6,"bg":0,"bold":true}],[" 58 ",{"fg":3,"bold":true}],["                                                                                                              ",{}],["|",{"inverse":true}],["~                     ",{"fg":4,"bold":true}]],"42":[["~                   ",{"fg":4,"bold":true}],["|",{"inverse":true}],["  ",{"fg":6,"bg":0,"bold":true}],[" 59 ",{"fg":3,"bold":true}],["    Second* pSecond2 = pLast;                                                                                 ",{}],["|",{"inverse":true}],["~                     ",{"fg":4,"bold":true}]],"43":[["~                   ",{"fg":4,"bold":true}],["|",{"inverse":true}],["  ",{"fg":6,"bg":0,"bold":true}],[" 60 ",{"fg":3,"bold":true}],["    pSecond2->SecondRun2();                                                                                   ",{}],["|",{"inverse":true}],["~                     ",{"fg":4,"bold":true}]],"44":[["~                   ",{"fg":4,"bold":true}],["|",{"inverse":true}],["  ",{"fg":6,"bg":0,"bold":true}],[" 61 ",{"fg":3,"bold":true}],["                                                                                                              ",{}],["|",{"inverse":true}],["~                     ",{"fg":4,"bold":true}]],"45":[["~                   ",{"fg":4,"bold":true}],["|",{"inverse":true}],["  ",{"fg":6,"bg":0,"bold":true}],[" 62 ",{"fg":3,"bold":true}],["    cout << ",{}],["sizeof",{"fg":3,"bold":true}],["(Last) << endl;                                                                             ",{}],["|",{"inverse":true}],["~                     ",{"fg":4,"bold":true}]],"46":[["[Name] test.cpp      ",{"inverse":true}],[" NORMAL ",{"bold":true}],[" ",{}],["test.cpp ",{"bold":true}],[" Second                                                      unix │ utf-8 │ cpp │  23% ",{}],[" LN  17",{"bold":true}],[":1  ",{}],[" ",{"bold":true,"inverse":true}],[" ~/NERD_tree_1 ",{"bold":true}],["       ",{}]]},"cursor":{"x":27,"y":0,"visible":true}}],[0.008812000000000002,{"lines":{"0":[["\" Press <F1> for hel",{"fg":6,"bold":true}],["|",{"inverse":true}],["                                                                                                                    ",{}],["|",{"inverse":true}],["  1 ",{"fg":3,"bold":true}],["\" Press ? for help",{"fg":5,"bold":true}]],"1":[["                    ",{}],["|",{"inverse":true}],["  ",{"fg":6,"bg":0,"bold":true}],[" 17 ",{"fg":3,"bold":true}],["                                                                                                              ",{"underline":true}],["|",{"inverse":true}],["  2 ",{"fg":3,"bold":true}],["                  ",{}]],"2":[["▼",{"fg":3,"bold":true}],[" First",{"fg":5,"bold":true}],[" : ",{}],["struct",{"fg":2,"bold":true}],["    ",{}],["|",{"inverse":true}],["  ",{"fg":6,"bg":0,"bold":true}],[" 18 ",{"fg":3,"bold":true}],["struct",{"fg":2,"bold":true}],[" Last: ",{}],["public",{"fg":3,"bold":true}],[" First,                                                                                    ",{}],["|",{"inverse":true}],["  3 ",{"fg":3,"bold":true}],[".. (up a dir)",{"fg":6,"bold":true}],["     ",{}]],"3":[["    [prototypes]",{"fg":6,"bold":true}],["    ",{}],["|",{"inverse":true}],["  ",{"fg":6,"bg":0,"bold":true}],[" 19 ",{"fg":3,"bold":true}],["    ",{}],["public",{"fg":3,"bold":true}],[" Second                                                                                             ",{}],["|",{"inverse":true}],["  4 /root/",{"fg":3,"bold":true}],["            ",{}]],"4":[["   ",{}],["+",{"fg":2,"bold":true}],["FirstRun(void)  ",{}],["|",{"inverse":true}],["  ",{"fg":6,"bg":0,"bold":true}],[" 20 ",{"fg":3,"bold":true}],["{                                                                                                             ",{}],["|",{"inverse":true}],["  5 ",{"fg":3,"bold":true}],["▸ diary/",{"fg":6,"bold":true,"underline":true}],["          ",{"underline":true}]],"5":[["   ",{}],["+",{"fg":2,"bold":true}],["FirstRun2(void) ",{}],["|",{"inverse":true}],["  ",{"fg":6,"bg":0,"bold":true}],[" 21 ",{"fg":3,"bold":true}],["    ",{}],["// 基类First的虚方法",{"fg":6,"bold":true}],["                                                                                      ",{}],["|",{"inverse":true}],["  6 ",{"fg":3,"bold":true}],["▸ temp/",{"fg":6,"bold":true}],["           ",{}]],"6":[["                    ",{}],["|",{"inverse":true}],["  ",{"fg":6,"bg":0,"bold":true}],[" 22 ",{"fg":3,"bold":true}],["    ",{}],["virtual",{"fg":2,"bold":true}],[" ",{}],["void",{"fg":2,"bold":true}],[" FirstRun(",{}],["void",{"fg":2,"bold":true}],[")                                                                               ",{}],["|",{"inverse":true}],["  7 ",{"fg":3,"bold":true}],["  anaconda-ks.cfg ",{}]],"7":[["▼",{"fg":3,"bold":true}],[" Last",{"fg":5,"bold":true}],[" : ",{}],["struct",{"fg":2,"bold":true}],["     ",{}],["|",{"inverse":true}],["  ",{"fg":6,"bg":0,"bold":true}],[" 23 ",{"fg":3,"bold":true}],["    {                                                                                                         ",{}],["|",{"inverse":true}],["  8 ",{"fg":3,"bold":true}],["  initial-setup-ks",{}]],"8":[["    [functions]",{"fg":6,"bold":true}],["     ",{}],["|",{"inverse":true}],["  ",{"fg":6,"bg":0,"bold":true}],[" 24 ",{"fg":3,"bold":true}],["    ",{}],["|",{"fg":2,"bold":true}],["   cout << ",{}],["\"First\"",{"fg":5,"bold":true}],[" << endl;                                                                              ",{}],["|",{"inverse":true}],["  9 ",{"fg":3,"bold":true}],["  test.c          ",{}]],"9":[["   ",{}],["+",{"fg":2,"bold":true}],["FirstRun(void)  ",{}],["|",{"inverse":true}],["  ",{"fg":6,"bg":0,"bold":true}],[" 25 ",{"fg":3,"bold":true}],["    }                                                                                                         ",{}],["|",{"inverse":true}],[" 10 ",{"fg":3,"bold":true}],["  test.cpp        ",{}]],"10":[["   ",{}],["+",{"fg":2,"bold":true}],["FirstRun2(void) ",{}],["|",{"inverse":true}],["  ",{"fg":6,"bg":0,"bold":true}],[" 26 ",{"fg":3,"bold":true}],["                                                                                                              ",{}],["|",{"inverse":true}],["~                     ",{"fg":4,"bold":true}]],"11":[["   ",{}],["+",{"fg":2,"bold":true}],["~Last()         ",{}],["|",{"inverse":true}],["  ",{"fg":6,"bg":0,"bold":true}],[" 27 ",{"fg":3,"bold":true}],["    ",{}],["virtual",{"fg":2,"bold":true}],[" ",{}],["void",{"fg":2,"bold":true}],[" FirstRun2(",{}],["void",{"fg":2,"bold":true}],[")                                                                              ",{}],["|",{"inverse":true}],["~                     ",{"fg":4,"bold":true}]],"12":[["   ",{}],["+",{"fg":2,"bold":true}],["SecondRun(void) ",{}],["|",{"inverse":true}],["  ",{"fg":6,"bg":0,"bold":true}],[" 28 ",{"fg":3,"bold":true}],["    {                                                                                                         ",{}],["|",{"inverse":true}],["~                     ",{"fg":4,"bold":true}]],"13":[["   ",{}],["+",{"fg":2,"bold":true}],["SecondRun2(void)",{}],["|",{"inverse":true}],["  ",{"fg":6,"bg":0,"bold":true}],[" 29 ",{"fg":3,"bold":true}],["    ",{}],["|",{"fg":2,"bold":true}],["   cout << ",{}],["\"First2\"",{"fg":5,"bold":true}],[" << endl;                                                                             ",{}],["|",{"inverse":true}],["~                     ",{"fg":4,"bold":true}]],"14":[["                    ",{}],["|",{"inverse":true}],["  ",{"fg":6,"bg":0,"bold":true}],[" 30 ",{"fg":3,"bold":true}],["    }                                                                                                         ",{}],["|",{"inverse":true}],["~                     ",{"fg":4,"bold":true}]],"15":[["▼",{"fg":3,"bold":true}],[" Second",{"fg":5,"bold":true}],[" : ",{}],["struct",{"fg":2,"bold":true}],["   ",{}],["|",{"inverse":true}],["  ",{"fg":6,"bg":0,"bold":true}],[" 31 ",{"fg":3,"bold":true}],["                                                                                                              ",{}],["|",{"inverse":true}],["~                     ",{"fg":4,"bold":true}]],"16":[["    [prototypes]",{"fg":6,"bold":true}],["    ",{}],["|",{"inverse":true}],["  ",{"fg":6,"bg":0,"bold":true}],[" 32 ",{"fg":3,"bold":true}],["    ",{}],["// 基类Second虚方法",{"fg":6,"bold":true}],["                                                                                       ",{}],["|",{"inverse":true}],["~                     ",{"fg":4,"bold":true}]],"17":[["   ",{}],["+",{"fg":2,"bold":true}],["SecondRun(void) ",{}],["|",{"inverse":true}],["  ",{"fg":6,"bg":0,"bold":true}],[" 33 ",{"fg":3,"bold":true}],["    ",{}],["virtual",{"fg":2,"bold":true}],[" ",{}],["void",{"fg":2,"bold":true}],[" SecondRun(",{}],["void",{"fg":2,"bold":true}],[")                                                                              ",{}],["|",{"inverse":true}],["~                     ",{"fg":4,"bold":true}]],"18":[["   ",{}],["+",{"fg":2,"bold":true}],["SecondRun2(void)",{}],["|",{"inverse":true}],["  ",{"fg":6,"bg":0,"bold":true}],[" 34 ",{"fg":3,"bold":true}],["    {                                                                                                         ",{}],["|",{"inverse":true}],["~                     ",{"fg":4,"bold":true}]],"19":[["                    ",{}],["|",{"inverse":true}],["  ",{"fg":6,"bg":0,"bold":true}],[" 35 ",{"fg":3,"bold":true}],["    ",{}],["|",{"fg":2,"bold":true}],["   cout <<",{}],["\"Second\"",{"fg":5,"bold":true}],[" << endl;                                                                              ",{}],["|",{"inverse":true}],["~                     ",{"fg":4,"bold":true}]],"20":[["▼",{"fg":3,"bold":true}],[" ",{}],["functions",{"fg":6,"bold":true}],["         ",{}],["|",{"inverse":true}],["  ",{"fg":6,"bg":0,"bold":true}],[" 36 ",{"fg":3,"bold":true}],["    }                                                                                                         ",{}],["|",{"inverse":true}],["~                     ",{"fg":4,"bold":true}]],"21":[["    ",{"underline":true}],["main",{"fg":0,"bg":3}],["(int argc, c",{"underline":true}],["|",{"inverse":true}],["  ",{"fg":6,"bg":0,"bold":true}],[" 37 ",{"fg":3,"bold":true}],["                                                                                                              ",{}],["|",{"inverse":true}],["~                     ",{"fg":4,"bold":true}]],"22":[["~                   ",{"fg":4,"bold":true}],["|",{"inverse":true}],["  ",{"fg":6,"bg":0,"bold":true}],[" 38 ",{"fg":3,"bold":true}],["    ",{}],["virtual",{"fg":2,"bold":true}],[" ",{}],["void",{"fg":2,"bold":true}],[" SecondRun2(",{}],["void",{"fg":2,"bold":true}],[")                                                                             ",{}],["|",{"inverse":true}],["~                     ",{"fg":4,"bold":true}]],"23":[["~                   ",{"fg":4,"bold":true}],["|",{"inverse":true}],["  ",{"fg":6,"bg":0,"bold":true}],[" 39 ",{"fg":3,"bold":true}],["    {                                                                                                         ",{}],["|",{"inverse":true}],["~                     ",{"fg":4,"bold":true}]],"24":[["~                   ",{"fg":4,"bold":true}],["|",{"inverse":true}],["  ",{"fg":6,"bg":0,"bold":true}],[" 40 ",{"fg":3,"bold":true}],["    ",{}],["|",{"fg":2,"bold":true}],["   cout <<",{}],["\"Second2\"",{"fg":5,"bold":true}],[" << endl;                                                                             ",{}],["|",{"inverse":true}],["~                     ",{"fg":4,"bold":true}]],"25":[["~                   ",{"fg":4,"bold":true}],["|",{"inverse":true}],["  ",{"fg":6,"bg":0,"bold":true}],[" 41 ",{"fg":3,"bold":true}],["    }                                                                                                         ",{}],["|",{"inverse":true}],["~                     ",{"fg":4,"bold":true}]],"26":[["~                   ",{"fg":4,"bold":true}],["|",{"inverse":true}],["  ",{"fg":6,"bg":0,"bold":true}],[" 42 ",{"fg":3,"bold":true}],["                                                                                                              ",{}],["|",{"inverse":true}],["~                     ",{"fg":4,"bold":true}]],"27":[["~                   ",{"fg":4,"bold":true}],["|",{"inverse":true}],["  ",{"fg":6,"bg":0,"bold":true}],[" 43 ",{"fg":3,"bold":true}],["    ",{}],["virtual",{"fg":2,"bold":true}],[" ~Last()                                                                                           ",{}],["|",{"inverse":true}],["~                     ",{"fg":4,"bold":true}]],"28":[["~                   ",{"fg":4,"bold":true}],["|",{"inverse":true}],["  ",{"fg":6,"bg":0,"bold":true}],[" 44 ",{"fg":3,"bold":true}],["    {                                                                                                         ",{}],["|",{"inverse":true}],["~                     ",{"fg":4,"bold":true}]],"29":[["~                   ",{"fg":4,"bold":true}],["|",{"inverse":true}],["  ",{"fg":6,"bg":0,"bold":true}],[" 45 ",{"fg":3,"bold":true}],["                                                                                                              ",{}],["|",{"inverse":true}],["~                     ",{"fg":4,"bold":true}]],"30":[["~                   ",{"fg":4,"bold":true}],["|",{"inverse":true}],["  ",{"fg":6,"bg":0,"bold":true}],[" 46 ",{"fg":3,"bold":true}],["    }                                                                                                         ",{}],["|",{"inverse":true}],["~                     ",{"fg":4,"bold":true}]],"31":[["~                   ",{"fg":4,"bold":true}],["|",{"inverse":true}],["  ",{"fg":6,"bg":0,"bold":true}],[" 47 ",{"fg":3,"bold":true}],["                                                                                                              ",{}],["|",{"inverse":true}],["~                     ",{"fg":4,"bold":true}]],"32":[["~                   ",{"fg":4,"bold":true}],["|",{"inverse":true}],["  ",{"fg":6,"bg":0,"bold":true}],[" 48 ",{"fg":3,"bold":true}],["};                                                                                                            ",{}],["|",{"inverse":true}],["~                     ",{"fg":4,"bold":true}]],"33":[["~                   ",{"fg":4,"bold":true}],["|",{"inverse":true}],["  ",{"fg":6,"bg":0,"bold":true}],[" 49 ",{"fg":3,"bold":true}],["                                                                                                              ",{}],["|",{"inverse":true}],["~                     ",{"fg":4,"bold":true}]],"34":[["~                   ",{"fg":4,"bold":true}],["|",{"inverse":true}],["  ",{"fg":6,"bg":0,"bold":true}],[" 50 ",{"fg":3,"bold":true}],["                                                                                                              ",{}],["|",{"inverse":true}],["~                     ",{"fg":4,"bold":true}]],"35":[["~                   ",{"fg":4,"bold":true}],["|",{"inverse":true}],[">>",{"fg":7,"bg":1,"bold":true}],[" 51 ",{"fg":3,"bold":true}],["int",{"fg":2,"bold":true}],[" main(",{}],["int",{"fg":2,"bold":true}],[" ",{}],["argc",{"bg":1}],[", ",{}],["char",{"fg":2,"bold":true}],["* ",{}],["argv",{"bg":1}],["[])                                                                              ",{}],["|",{"inverse":true}],["~                     ",{"fg":4,"bold":true}]],"36":[["~                   ",{"fg":4,"bold":true}],["|",{"inverse":true}],["  ",{"fg":6,"bg":0,"bold":true}],[" 52 ",{"fg":3,"bold":true}],["{                                                                                                             ",{}],["|",{"inverse":true}],["~                     ",{"fg":4,"bold":true}]]},"cursor":{"x":122,"y":36,"visible":false}}],[0.009297,{"lines":{"0":[["\" Press <F1> for hel",{"fg":6,"bold":true}],["|",{"inverse":true}],["  ",{"fg":6,"bg":0,"bold":true}],[" 16 ",{"fg":3,"bold":true}],["};                                                                                                            ",{"underline":true}],["|",{"inverse":true}],["  1 ",{"fg":3,"bold":true}],["\" Press ? for help",{"fg":5,"bold":true}]],"1":[["                    ",{}],["|",{"inverse":true}],["  ",{"fg":6,"bg":0,"bold":true}],[" 17 ",{"fg":3,"bold":true}],["                                                                                                              ",{}],["|",{"inverse":true}],["  2 ",{"fg":3,"bold":true}],["                  ",{}]],"37":[["~                   ",{"fg":4,"bold":true}],["|",{"inverse":true}],["  ",{"fg":6,"bg":0,"bold":true}],[" 53 ",{"fg":3,"bold":true}],["    Last* pLast = ",{}],["new",{"fg":3,"bold":true}],[" Last();                                                                                 ",{}],["|",{"inverse":true}],["~                     ",{"fg":4,"bold":true}]],"38":[["~                   ",{"fg":4,"bold":true}],["|",{"inverse":true}],["  ",{"fg":6,"bg":0,"bold":true}],[" 54 ",{"fg":3,"bold":true}],["    vector<",{}],["int",{"fg":2,"bold":true}],["> v;                                                                                            ",{}],["|",{"inverse":true}],["~                     ",{"fg":4,"bold":true}]],"39":[["~                   ",{"fg":4,"bold":true}],["|",{"inverse":true}],["  ",{"fg":6,"bg":0,"bold":true}],[" 55 ",{"fg":3,"bold":true}],["    v.begin();                                                                                                ",{}],["|",{"inverse":true}],["~                     ",{"fg":4,"bold":true}]],"40":[["~                   ",{"fg":4,"bold":true}],["|",{"inverse":true}],[">>",{"fg":7,"bg":1,"bold":true}],[" 56 ",{"fg":3,"bold":true}],["    Second* pSecond1 = ",{}],["reinterpret_cast",{"fg":3,"bg":1,"bold":true}],["<Second*>(pLast)",{"bg":1}],[";                                                      ",{}],["|",{"inverse":true}],["~                     ",{"fg":4,"bold":true}]],"41":[["~                   ",{"fg":4,"bold":true}],["|",{"inverse":true}],["  ",{"fg":6,"bg":0,"bold":true}],[" 57 ",{"fg":3,"bold":true}],["    pSecond1->SecondRun2();                                                                                   ",{}],["|",{"inverse":true}],["~                     ",{"fg":4,"bold":true}]],"42":[["~                   ",{"fg":4,"bold":true}],["|",{"inverse":true}],["  ",{"fg":6,"bg":0,"bold":true}],[" 58 ",{"fg":3,"bold":true}],["                                                                                                              ",{}],["|",{"inverse":true}],["~                     ",{"fg":4,"bold":true}]],"43":[["~                   ",{"fg":4,"bold":true}],["|",{"inverse":true}],["  ",{"fg":6,"bg":0,"bold":true}],[" 59 ",{"fg":3,"bold":true}],["    Second* pSecond2 = pLast;                                                                                 ",{}],["|",{"inverse":true}],["~                     ",{"fg":4,"bold":true}]],"44":[["~                   ",{"fg":4,"bold":true}],["|",{"inverse":true}],["  ",{"fg":6,"bg":0,"bold":true}],[" 60 ",{"fg":3,"bold":true}],["    pSecond2->SecondRun2();                                                                                   ",{}],["|",{"inverse":true}],["~                     ",{"fg":4,"bold":true}]],"45":[["~                   ",{"fg":4,"bold":true}],["|",{"inverse":true}],["  ",{"fg":6,"bg":0,"bold":true}],[" 61 ",{"fg":3,"bold":true}],["                                                                                                              ",{}],["|",{"inverse":true}],["~                     ",{"fg":4,"bold":true}]],"46":[["[Name] test.cpp      ",{"inverse":true}],[" NORMAL ",{"bold":true}],[" ",{}],["test.cpp ",{"bold":true}],[" Second                                                      unix │ utf-8 │ cpp │  22% ",{}],[" LN  16",{"bold":true}],[":1  ",{}],[" ",{"bold":true,"inverse":true}],[" ~/NERD_tree_1 ",{"bold":true}],["       ",{}]]},"cursor":{"x":27,"y":0,"visible":true}}],[0.025795,{"lines":{"0":[["\" Press <F1> for hel",{"fg":6,"bold":true}],["|",{"inverse":true}],["                                                                                                                    ",{}],["|",{"inverse":true}],["  1 ",{"fg":3,"bold":true}],["\" Press ? for help",{"fg":5,"bold":true}]],"1":[["                    ",{}],["|",{"inverse":true}],["  ",{"fg":6,"bg":0,"bold":true}],[" 16 ",{"fg":3,"bold":true}],["};                                                                                                            ",{"underline":true}],["|",{"inverse":true}],["  2 ",{"fg":3,"bold":true}],["                  ",{}]],"2":[["▼",{"fg":3,"bold":true}],[" First",{"fg":5,"bold":true}],[" : ",{}],["struct",{"fg":2,"bold":true}],["    ",{}],["|",{"inverse":true}],["  ",{"fg":6,"bg":0,"bold":true}],[" 17 ",{"fg":3,"bold":true}],["                                                                                                              ",{}],["|",{"inverse":true}],["  3 ",{"fg":3,"bold":true}],[".. (up a dir)",{"fg":6,"bold":true}],["     ",{}]],"3":[["    [prototypes]",{"fg":6,"bold":true}],["    ",{}],["|",{"inverse":true}],["  ",{"fg":6,"bg":0,"bold":true}],[" 18 ",{"fg":3,"bold":true}],["struct",{"fg":2,"bold":true}],[" Last: ",{}],["public",{"fg":3,"bold":true}],[" First,                                                                                    ",{}],["|",{"inverse":true}],["  4 /root/",{"fg":3,"bold":true}],["            ",{}]],"4":[["   ",{}],["+",{"fg":2,"bold":true}],["FirstRun(void)  ",{}],["|",{"inverse":true}],["  ",{"fg":6,"bg":0,"bold":true}],[" 19 ",{"fg":3,"bold":true}],["    ",{}],["public",{"fg":3,"bold":true}],[" Second                                                                                             ",{}],["|",{"inverse":true}],["  5 ",{"fg":3,"bold":true}],["▸ diary/",{"fg":6,"bold":true,"underline":true}],["          ",{"underline":true}]],"5":[["   ",{}],["+",{"fg":2,"bold":true}],["FirstRun2(void) ",{}],["|",{"inverse":true}],["  ",{"fg":6,"bg":0,"bold":true}],[" 20 ",{"fg":3,"bold":true}],["{                                                                                                             ",{}],["|",{"inverse":true}],["  6 ",{"fg":3,"bold":true}],["▸ temp/",{"fg":6,"bold":true}],["           ",{}]]},"cursor":{"x":23,"y":6,"visible":false}}],[0.011973,{"lines":{"0":[["\" Press <F1> for hel",{"fg":6,"bold":true}],["|",{"inverse":true}],["  ",{"fg":6,"bg":0,"bold":true}],[" 15 ",{"fg":3,"bold":true}],["    ",{"underline":true}],["virtual",{"fg":2,"bold":true,"underline":true}],[" ",{"underline":true}],["void",{"fg":2,"bold":true,"underline":true}],[" SecondRun2(",{"underline":true}],["void",{"fg":2,"bold":true,"underline":true}],[") = ",{"underline":true}],["0",{"fg":5,"bold":true,"underline":true}],[";                                                                        ",{"underline":true}],["|",{"inverse":true}],["  1 ",{"fg":3,"bold":true}],["\" Press ? for help",{"fg":5,"bold":true}]],"1":[["                    ",{}],["|",{"inverse":true}],["  ",{"fg":6,"bg":0,"bold":true}],[" 16 ",{"fg":3,"bold":true}],["};                                                                                                            ",{}],["|",{"inverse":true}],["  2 ",{"fg":3,"bold":true}],["                  ",{}]],"6":[["                    ",{}],["|",{"inverse":true}],["  ",{"fg":6,"bg":0,"bold":true}],[" 21 ",{"fg":3,"bold":true}],["    ",{}],["// 基类First的虚方法",{"fg":6,"bold":true}],["                                                                                      ",{}],["|",{"inverse":true}],["  7 ",{"fg":3,"bold":true}],["  anaconda-ks.cfg ",{}]],"7":[["▼",{"fg":3,"bold":true}],[" Last",{"fg":5,"bold":true}],[" : ",{}],["struct",{"fg":2,"bold":true}],["     ",{}],["|",{"inverse":true}],["  ",{"fg":6,"bg":0,"bold":true}],[" 22 ",{"fg":3,"bold":true}],["    ",{}],["virtual",{"fg":2,"bold":true}],[" ",{}],["void",{"fg":2,"bold":true}],[" FirstRun(",{}],["void",{"fg":2,"bold":true}],[")                                                                               ",{}],["|",{"inverse":true}],["  8 ",{"fg":3,"bold":true}],["  initial-setup-ks",{}]],"8":[["    [functions]",{"fg":6,"bold":true}],["     ",{}],["|",{"inverse":true}],["  ",{"fg":6,"bg":0,"bold":true}],[" 23 ",{"fg":3,"bold":true}],["    {                                                                                                         ",{}],["|",{"inverse":true}],["  9 ",{"fg":3,"bold":true}],["  test.c          ",{}]],"9":[["   ",{}],["+",{"fg":2,"bold":true}],["FirstRun(void)  ",{}],["|",{"inverse":true}],["  ",{"fg":6,"bg":0,"bold":true}],[" 24 ",{"fg":3,"bold":true}],["    ",{}],["|",{"fg":2,"bold":true}],["   cout << ",{}],["\"First\"",{"fg":5,"bold":true}],[" << endl;                                                                              ",{}],["|",{"inverse":true}],[" 10 ",{"fg":3,"bold":true}],["  test.cpp        ",{}]],"10":[["   ",{}],["+",{"fg":2,"bold":true}],["FirstRun2(void) ",{}],["|",{"inverse":true}],["  ",{"fg":6,"bg":0,"bold":true}],[" 25 ",{"fg":3,"bold":true}],["    }                                                                                                         ",{}],["|",{"inverse":true}],["~                     ",{"fg":4,"bold":true}]],"11":[["   ",{}],["+",{"fg":2,"bold":true}],["~Last()         ",{}],["|",{"inverse":true}],["  ",{"fg":6,"bg":0,"bold":true}],[" 26 ",{"fg":3,"bold":true}],["                                                                                                              ",{}],["|",{"inverse":true}],["~                     ",{"fg":4,"bold":true}]],"12":[["   ",{}],["+",{"fg":2,"bold":true}],["SecondRun(void) ",{}],["|",{"inverse":true}],["  ",{"fg":6,"bg":0,"bold":true}],[" 27 ",{"fg":3,"bold":true}],["    ",{}],["virtual",{"fg":2,"bold":true}],[" ",{}],["void",{"fg":2,"bold":true}],[" FirstRun2(",{}],["void",{"fg":2,"bold":true}],[")                                                                              ",{}],["|",{"inverse":true}],["~                     ",{"fg":4,"bold":true}]],"13":[["   ",{}],["+",{"fg":2,"bold":true}],["SecondRun2(void)",{}],["|",{"inverse":true}],["  ",{"fg":6,"bg":0,"bold":true}],[" 28 ",{"fg":3,"bold":true}],["    {                                                                                                         ",{}],["|",{"inverse":true}],["~                     ",{"fg":4,"bold":true}]],"14":[["                    ",{}],["|",{"inverse":true}],["  ",{"fg":6,"bg":0,"bold":true}],[" 29 ",{"fg":3,"bold":true}],["    ",{}],["|",{"fg":2,"bold":true}],["   cout << ",{}],["\"First2\"",{"fg":5,"bold":true}],[" << endl;                                                                             ",{}],["|",{"inverse":true}],["~                     ",{"fg":4,"bold":true}]],"15":[["▼",{"fg":3,"bold":true}],[" Second",{"fg":5,"bold":true}],[" : ",{}],["struct",{"fg":2,"bold":true}],["   ",{}],["|",{"inverse":true}],["  ",{"fg":6,"bg":0,"bold":true}],[" 30 ",{"fg":3,"bold":true}],["    }                                                                                                         ",{}],["|",{"inverse":true}],["~                     ",{"fg":4,"bold":true}]],"16":[["    [prototypes]",{"fg":6,"bold":true}],["    ",{}],["|",{"inverse":true}],["  ",{"fg":6,"bg":0,"bold":true}],[" 31 ",{"fg":3,"bold":true}],["                                                                                                              ",{}],["|",{"inverse":true}],["~                     ",{"fg":4,"bold":true}]],"17":[["   ",{}],["+",{"fg":2,"bold":true}],["SecondRun(void) ",{}],["|",{"inverse":true}],["  ",{"fg":6,"bg":0,"bold":true}],[" 32 ",{"fg":3,"bold":true}],["    ",{}],["// 基类Second虚方法",{"fg":6,"bold":true}],["                                                                                       ",{}],["|",{"inverse":true}],["~                     ",{"fg":4,"bold":true}]],"18":[["   ",{}],["+",{"fg":2,"bold":true}],["SecondRun2(void)",{}],["|",{"inverse":true}],["  ",{"fg":6,"bg":0,"bold":true}],[" 33 ",{"fg":3,"bold":true}],["    ",{}],["virtual",{"fg":2,"bold":true}],[" ",{}],["void",{"fg":2,"bold":true}],[" SecondRun(",{}],["void",{"fg":2,"bold":true}],[")                                                                              ",{}],["|",{"inverse":true}],["~                     ",{"fg":4,"bold":true}]],"19":[["                    ",{}],["|",{"inverse":true}],["  ",{"fg":6,"bg":0,"bold":true}],[" 34 ",{"fg":3,"bold":true}],["    {                                                                                                         ",{}],["|",{"inverse":true}],["~                     ",{"fg":4,"bold":true}]],"20":[["▼",{"fg":3,"bold":true}],[" ",{}],["functions",{"fg":6,"bold":true}],["         ",{}],["|",{"inverse":true}],["  ",{"fg":6,"bg":0,"bold":true}],[" 35 ",{"fg":3,"bold":true}],["    ",{}],["|",{"fg":2,"bold":true}],["   cout <<",{}],["\"Second\"",{"fg":5,"bold":true}],[" << endl;                                                                              ",{}],["|",{"inverse":true}],["~                     ",{"fg":4,"bold":true}]],"21":[["    ",{"underline":true}],["main",{"fg":0,"bg":3}],["(int argc, c",{"underline":true}],["|",{"inverse":true}],["  ",{"fg":6,"bg":0,"bold":true}],[" 36 ",{"fg":3,"bold":true}],["    }                                                                                                         ",{}],["|",{"inverse":true}],["~                     ",{"fg":4,"bold":true}]],"22":[["~                   ",{"fg":4,"bold":true}],["|",{"inverse":true}],["  ",{"fg":6,"bg":0,"bold":true}],[" 37 ",{"fg":3,"bold":true}],["                                                                                                              ",{}],["|",{"inverse":true}],["~                     ",{"fg":4,"bold":true}]],"23":[["~                   ",{"fg":4,"bold":true}],["|",{"inverse":true}],["  ",{"fg":6,"bg":0,"bold":true}],[" 38 ",{"fg":3,"bold":true}],["    ",{}],["virtual",{"fg":2,"bold":true}],[" ",{}],["void",{"fg":2,"bold":true}],[" SecondRun2(",{}],["void",{"fg":2,"bold":true}],[")                                                                             ",{}],["|",{"inverse":true}],["~                     ",{"fg":4,"bold":true}]],"24":[["~                   ",{"fg":4,"bold":true}],["|",{"inverse":true}],["  ",{"fg":6,"bg":0,"bold":true}],[" 39 ",{"fg":3,"bold":true}],["    {                                                                                                         ",{}],["|",{"inverse":true}],["~                     ",{"fg":4,"bold":true}]],"25":[["~                   ",{"fg":4,"bold":true}],["|",{"inverse":true}],["  ",{"fg":6,"bg":0,"bold":true}],[" 40 ",{"fg":3,"bold":true}],["    ",{}],["|",{"fg":2,"bold":true}],["   cout <<",{}],["\"Second2\"",{"fg":5,"bold":true}],[" << endl;                                                                             ",{}],["|",{"inverse":true}],["~                     ",{"fg":4,"bold":true}]],"26":[["~                   ",{"fg":4,"bold":true}],["|",{"inverse":true}],["  ",{"fg":6,"bg":0,"bold":true}],[" 41 ",{"fg":3,"bold":true}],["    }                                                                                                         ",{}],["|",{"inverse":true}],["~                     ",{"fg":4,"bold":true}]],"27":[["~                   ",{"fg":4,"bold":true}],["|",{"inverse":true}],["  ",{"fg":6,"bg":0,"bold":true}],[" 42 ",{"fg":3,"bold":true}],["                                                                                                              ",{}],["|",{"inverse":true}],["~                     ",{"fg":4,"bold":true}]],"28":[["~                   ",{"fg":4,"bold":true}],["|",{"inverse":true}],["  ",{"fg":6,"bg":0,"bold":true}],[" 43 ",{"fg":3,"bold":true}],["    ",{}],["virtual",{"fg":2,"bold":true}],[" ~Last()                                                                                           ",{}],["|",{"inverse":true}],["~                     ",{"fg":4,"bold":true}]],"29":[["~                   ",{"fg":4,"bold":true}],["|",{"inverse":true}],["  ",{"fg":6,"bg":0,"bold":true}],[" 44 ",{"fg":3,"bold":true}],["    {                                                                                                         ",{}],["|",{"inverse":true}],["~                     ",{"fg":4,"bold":true}]],"30":[["~                   ",{"fg":4,"bold":true}],["|",{"inverse":true}],["  ",{"fg":6,"bg":0,"bold":true}],[" 45 ",{"fg":3,"bold":true}],["                                                                                                              ",{}],["|",{"inverse":true}],["~                     ",{"fg":4,"bold":true}]],"31":[["~                   ",{"fg":4,"bold":true}],["|",{"inverse":true}],["  ",{"fg":6,"bg":0,"bold":true}],[" 46 ",{"fg":3,"bold":true}],["    }                                                                                                         ",{}],["|",{"inverse":true}],["~                     ",{"fg":4,"bold":true}]],"32":[["~                   ",{"fg":4,"bold":true}],["|",{"inverse":true}],["  ",{"fg":6,"bg":0,"bold":true}],[" 47 ",{"fg":3,"bold":true}],["                                                                                                              ",{}],["|",{"inverse":true}],["~                     ",{"fg":4,"bold":true}]],"33":[["~                   ",{"fg":4,"bold":true}],["|",{"inverse":true}],["  ",{"fg":6,"bg":0,"bold":true}],[" 48 ",{"fg":3,"bold":true}],["};                                                                                                            ",{}],["|",{"inverse":true}],["~                     ",{"fg":4,"bold":true}]],"34":[["~                   ",{"fg":4,"bold":true}],["|",{"inverse":true}],["  ",{"fg":6,"bg":0,"bold":true}],[" 49 ",{"fg":3,"bold":true}],["                                                                                                              ",{}],["|",{"inverse":true}],["~                     ",{"fg":4,"bold":true}]],"35":[["~                   ",{"fg":4,"bold":true}],["|",{"inverse":true}],["  ",{"fg":6,"bg":0,"bold":true}],[" 50 ",{"fg":3,"bold":true}],["                                                                                                              ",{}],["|",{"inverse":true}],["~                     ",{"fg":4,"bold":true}]],"36":[["~                   ",{"fg":4,"bold":true}],["|",{"inverse":true}],[">>",{"fg":7,"bg":1,"bold":true}],[" 51 ",{"fg":3,"bold":true}],["int",{"fg":2,"bold":true}],[" main(",{}],["int",{"fg":2,"bold":true}],[" ",{}],["argc",{"bg":1}],[", ",{}],["char",{"fg":2,"bold":true}],["* ",{}],["argv",{"bg":1}],["[])                                                                              ",{}],["|",{"inverse":true}],["~                     ",{"fg":4,"bold":true}]],"37":[["~                   ",{"fg":4,"bold":true}],["|",{"inverse":true}],["  ",{"fg":6,"bg":0,"bold":true}],[" 52 ",{"fg":3,"bold":true}],["{                                                                                                             ",{}],["|",{"inverse":true}],["~                     ",{"fg":4,"bold":true}]],"38":[["~                   ",{"fg":4,"bold":true}],["|",{"inverse":true}],["  ",{"fg":6,"bg":0,"bold":true}],[" 53 ",{"fg":3,"bold":true}],["    Last* pLast = ",{}],["new",{"fg":3,"bold":true}],[" Last();                                                                                 ",{}],["|",{"inverse":true}],["~                     ",{"fg":4,"bold":true}]],"39":[["~                   ",{"fg":4,"bold":true}],["|",{"inverse":true}],["  ",{"fg":6,"bg":0,"bold":true}],[" 54 ",{"fg":3,"bold":true}],["    vector<",{}],["int",{"fg":2,"bold":true}],["> v;                                                                                            ",{}],["|",{"inverse":true}],["~                     ",{"fg":4,"bold":true}]],"40":[["~                   ",{"fg":4,"bold":true}],["|",{"inverse":true}],["  ",{"fg":6,"bg":0,"bold":true}],[" 55 ",{"fg":3,"bold":true}],["    v.begin();                                                                                                ",{}],["|",{"inverse":true}],["~                     ",{"fg":4,"bold":true}]],"41":[["~                   ",{"fg":4,"bold":true}],["|",{"inverse":true}],[">>",{"fg":7,"bg":1,"bold":true}],[" 56 ",{"fg":3,"bold":true}],["    Second* pSecond1 = ",{}],["reinterpret_cast",{"fg":3,"bg":1,"bold":true}],["<Second*>(pLast)",{"bg":1}],[";                                                      ",{}],["|",{"inverse":true}],["~                     ",{"fg":4,"bold":true}]],"42":[["~                   ",{"fg":4,"bold":true}],["|",{"inverse":true}],["  ",{"fg":6,"bg":0,"bold":true}],[" 57 ",{"fg":3,"bold":true}],["    pSecond1->SecondRun2();                                                                                   ",{}],["|",{"inverse":true}],["~                     ",{"fg":4,"bold":true}]],"43":[["~                   ",{"fg":4,"bold":true}],["|",{"inverse":true}],["  ",{"fg":6,"bg":0,"bold":true}],[" 58 ",{"fg":3,"bold":true}],["                                                                                                              ",{}],["|",{"inverse":true}],["~                     ",{"fg":4,"bold":true}]],"44":[["~                   ",{"fg":4,"bold":true}],["|",{"inverse":true}],["  ",{"fg":6,"bg":0,"bold":true}],[" 59 ",{"fg":3,"bold":true}],["    Second* pSecond2 = pLast;                                                                                 ",{}],["|",{"inverse":true}],["~                     ",{"fg":4,"bold":true}]],"45":[["~                   ",{"fg":4,"bold":true}],["|",{"inverse":true}],["  ",{"fg":6,"bg":0,"bold":true}],[" 60 ",{"fg":3,"bold":true}],["    pSecond2->SecondRun2();                                                                                   ",{}],["|",{"inverse":true}],["~                     ",{"fg":4,"bold":true}]],"46":[["[Name] test.cpp      ",{"inverse":true}],[" NORMAL ",{"bold":true}],[" ",{}],["test.cpp ",{"bold":true}],[" Second                                                      unix │ utf-8 │ cpp │  21% ",{}],[" LN  15",{"bold":true}],[":1  ",{}],[" ",{"bold":true,"inverse":true}],[" ~/NERD_tree_1 ",{"bold":true}],["       ",{}]]},"cursor":{"x":27,"y":0,"visible":true}}],[0.016271,{"lines":{"47":[["                                                                                                                                                     k          ",{}]]},"cursor":{"visible":false}}],[0.00325,{"lines":{"0":[["\" Press <F1> for hel",{"fg":6,"bold":true}],["|",{"inverse":true}],["                                                                                                                    ",{}],["|",{"inverse":true}],["  1 ",{"fg":3,"bold":true}],["\" Press ? for help",{"fg":5,"bold":true}]],"1":[["                    ",{}],["|",{"inverse":true}],["  ",{"fg":6,"bg":0,"bold":true}],[" 15 ",{"fg":3,"bold":true}],["    ",{"underline":true}],["virtual",{"fg":2,"bold":true,"underline":true}],[" ",{"underline":true}],["void",{"fg":2,"bold":true,"underline":true}],[" SecondRun2(",{"underline":true}],["void",{"fg":2,"bold":true,"underline":true}],[") = ",{"underline":true}],["0",{"fg":5,"bold":true,"underline":true}],[";                                                                        ",{"underline":true}],["|",{"inverse":true}],["  2 ",{"fg":3,"bold":true}],["                  ",{}]],"2":[["▼",{"fg":3,"bold":true}],[" First",{"fg":5,"bold":true}],[" : ",{}],["struct",{"fg":2,"bold":true}],["    ",{}],["|",{"inverse":true}],["  ",{"fg":6,"bg":0,"bold":true}],[" 16 ",{"fg":3,"bold":true}],["};                                                                                                            ",{}],["|",{"inverse":true}],["  3 ",{"fg":3,"bold":true}],[".. (up a dir)",{"fg":6,"bold":true}],["     ",{}]],"3":[["    [prototypes]",{"fg":6,"bold":true}],["    ",{}],["|",{"inverse":true}],["  ",{"fg":6,"bg":0,"bold":true}],[" 17 ",{"fg":3,"bold":true}],["                                                                                                              ",{}],["|",{"inverse":true}],["  4 /root/",{"fg":3,"bold":true}],["            ",{}]],"4":[["   ",{}],["+",{"fg":2,"bold":true}],["FirstRun(void)  ",{}],["|",{"inverse":true}],["  ",{"fg":6,"bg":0,"bold":true}],[" 18 ",{"fg":3,"bold":true}],["struct",{"fg":2,"bold":true}],[" Last: ",{}],["public",{"fg":3,"bold":true}],[" First,                                                                                    ",{}],["|",{"inverse":true}],["  5 ",{"fg":3,"bold":true}],["▸ diary/",{"fg":6,"bold":true,"underline":true}],["          ",{"underline":true}]],"5":[["   ",{}],["+",{"fg":2,"bold":true}],["FirstRun2(void) ",{}],["|",{"inverse":true}],["  ",{"fg":6,"bg":0,"bold":true}],[" 19 ",{"fg":3,"bold":true}],["    ",{}],["public",{"fg":3,"bold":true}],[" Second                                                                                             ",{}],["|",{"inverse":true}],["  6 ",{"fg":3,"bold":true}],["▸ temp/",{"fg":6,"bold":true}],["           ",{}]],"6":[["                    ",{}],["|",{"inverse":true}],["  ",{"fg":6,"bg":0,"bold":true}],[" 20 ",{"fg":3,"bold":true}],["{                                                                                                             ",{}],["|",{"inverse":true}],["  7 ",{"fg":3,"bold":true}],["  anaconda-ks.cfg ",{}]],"7":[["▼",{"fg":3,"bold":true}],[" Last",{"fg":5,"bold":true}],[" : ",{}],["struct",{"fg":2,"bold":true}],["     ",{}],["|",{"inverse":true}],["  ",{"fg":6,"bg":0,"bold":true}],[" 21 ",{"fg":3,"bold":true}],["    ",{}],["// 基类First的虚方法",{"fg":6,"bold":true}],["                                                                                      ",{}],["|",{"inverse":true}],["  8 ",{"fg":3,"bold":true}],["  initial-setup-ks",{}]],"8":[["    [functions]",{"fg":6,"bold":true}],["     ",{}],["|",{"inverse":true}],["  ",{"fg":6,"bg":0,"bold":true}],[" 22 ",{"fg":3,"bold":true}],["    ",{}],["virtual",{"fg":2,"bold":true}],[" ",{}],["void",{"fg":2,"bold":true}],[" FirstRun(",{}],["void",{"fg":2,"bold":true}],[")                                                                               ",{}],["|",{"inverse":true}],["  9 ",{"fg":3,"bold":true}],["  test.c          ",{}]],"9":[["   ",{}],["+",{"fg":2,"bold":true}],["FirstRun(void)  ",{}],["|",{"inverse":true}],["  ",{"fg":6,"bg":0,"bold":true}],[" 23 ",{"fg":3,"bold":true}],["    {                                                                                                         ",{}],["|",{"inverse":true}],[" 10 ",{"fg":3,"bold":true}],["  test.cpp        ",{}]],"10":[["   ",{}],["+",{"fg":2,"bold":true}],["FirstRun2(void) ",{}],["|",{"inverse":true}],["  ",{"fg":6,"bg":0,"bold":true}],[" 24 ",{"fg":3,"bold":true}],["    ",{}],["|",{"fg":2,"bold":true}],["   cout << ",{}],["\"First\"",{"fg":5,"bold":true}],[" << endl;                                                                              ",{}],["|",{"inverse":true}],["~                     ",{"fg":4,"bold":true}]],"11":[["   ",{}],["+",{"fg":2,"bold":true}],["~Last()         ",{}],["|",{"inverse":true}],["  ",{"fg":6,"bg":0,"bold":true}],[" 25 ",{"fg":3,"bold":true}],["    }                                                                                                         ",{}],["|",{"inverse":true}],["~                     ",{"fg":4,"bold":true}]],"12":[["   ",{}],["+",{"fg":2,"bold":true}],["SecondRun(void) ",{}],["|",{"inverse":true}],["  ",{"fg":6,"bg":0,"bold":true}],[" 26 ",{"fg":3,"bold":true}],["                                                                                                              ",{}],["|",{"inverse":true}],["~                     ",{"fg":4,"bold":true}]],"13":[["   ",{}],["+",{"fg":2,"bold":true}],["SecondRun2(void)",{}],["|",{"inverse":true}],["  ",{"fg":6,"bg":0,"bold":true}],[" 27 ",{"fg":3,"bold":true}],["    ",{}],["virtual",{"fg":2,"bold":true}],[" ",{}],["void",{"fg":2,"bold":true}],[" FirstRun2(",{}],["void",{"fg":2,"bold":true}],[")                                                                              ",{}],["|",{"inverse":true}],["~                     ",{"fg":4,"bold":true}]],"14":[["                    ",{}],["|",{"inverse":true}],["  ",{"fg":6,"bg":0,"bold":true}],[" 28 ",{"fg":3,"bold":true}],["    {                                                                                                         ",{}],["|",{"inverse":true}],["~                     ",{"fg":4,"bold":true}]],"15":[["▼",{"fg":3,"bold":true}],[" Second",{"fg":5,"bold":true}],[" : ",{}],["struct",{"fg":2,"bold":true}],["   ",{}],["|",{"inverse":true}],["  ",{"fg":6,"bg":0,"bold":true}],[" 29 ",{"fg":3,"bold":true}],["    ",{}],["|",{"fg":2,"bold":true}],["   cout << ",{}],["\"First2\"",{"fg":5,"bold":true}],[" << endl;                                                                             ",{}],["|",{"inverse":true}],["~                     ",{"fg":4,"bold":true}]],"16":[["    [prototypes]",{"fg":6,"bold":true}],["    ",{}],["|",{"inverse":true}],["  ",{"fg":6,"bg":0,"bold":true}],[" 30 ",{"fg":3,"bold":true}],["    }                                                                                                         ",{}],["|",{"inverse":true}],["~                     ",{"fg":4,"bold":true}]],"17":[["   ",{}],["+",{"fg":2,"bold":true}],["SecondRun(void) ",{}],["|",{"inverse":true}],["  ",{"fg":6,"bg":0,"bold":true}],[" 31 ",{"fg":3,"bold":true}],["                                                                                                              ",{}],["|",{"inverse":true}],["~                     ",{"fg":4,"bold":true}]],"18":[["   ",{}],["+",{"fg":2,"bold":true}],["SecondRun2(void)",{}],["|",{"inverse":true}],["  ",{"fg":6,"bg":0,"bold":true}],[" 32 ",{"fg":3,"bold":true}],["    ",{}],["// 基类Second虚方法",{"fg":6,"bold":true}],["                                                                                       ",{}],["|",{"inverse":true}],["~                     ",{"fg":4,"bold":true}]],"19":[["                    ",{}],["|",{"inverse":true}],["  ",{"fg":6,"bg":0,"bold":true}],[" 33 ",{"fg":3,"bold":true}],["    ",{}],["virtual",{"fg":2,"bold":true}],[" ",{}],["void",{"fg":2,"bold":true}],[" SecondRun(",{}],["void",{"fg":2,"bold":true}],[")                                                                              ",{}],["|",{"inverse":true}],["~                     ",{"fg":4,"bold":true}]],"20":[["▼",{"fg":3,"bold":true}],[" ",{}],["functions",{"fg":6,"bold":true}],["         ",{}],["|",{"inverse":true}],["  ",{"fg":6,"bg":0,"bold":true}],[" 34 ",{"fg":3,"bold":true}],["    {                                                                                                         ",{}],["|",{"inverse":true}],["~                     ",{"fg":4,"bold":true}]],"21":[["    ",{"underline":true}],["main",{"fg":0,"bg":3}],["(int argc, c",{"underline":true}],["|",{"inverse":true}],["  ",{"fg":6,"bg":0,"bold":true}],[" 35 ",{"fg":3,"bold":true}],["    ",{}],["|",{"fg":2,"bold":true}],["   cout <<",{}],["\"Second\"",{"fg":5,"bold":true}],[" << endl;                                                                              ",{}],["|",{"inverse":true}],["~                     ",{"fg":4,"bold":true}]],"22":[["~                   ",{"fg":4,"bold":true}],["|",{"inverse":true}],["  ",{"fg":6,"bg":0,"bold":true}],[" 36 ",{"fg":3,"bold":true}],["    }                                                                                                         ",{}],["|",{"inverse":true}],["~                     ",{"fg":4,"bold":true}]],"23":[["~                   ",{"fg":4,"bold":true}],["|",{"inverse":true}],["  ",{"fg":6,"bg":0,"bold":true}],[" 37 ",{"fg":3,"bold":true}],["                                                                                                              ",{}],["|",{"inverse":true}],["~                     ",{"fg":4,"bold":true}]],"47":[["                                                                                                                                                                ",{}]]},"cursor":{"x":131,"y":23}}],[0.027862,{"lines":{"24":[["~                   ",{"fg":4,"bold":true}],["|",{"inverse":true}],["  ",{"fg":6,"bg":0,"bold":true}],[" 38 ",{"fg":3,"bold":true}],["    ",{}],["virtual",{"fg":2,"bold":true}],[" ",{}],["void",{"fg":2,"bold":true}],[" SecondRun2(",{}],["void",{"fg":2,"bold":true}],[")                                                                             ",{}],["|",{"inverse":true}],["~                     ",{"fg":4,"bold":true}]],"25":[["~                   ",{"fg":4,"bold":true}],["|",{"inverse":true}],["  ",{"fg":6,"bg":0,"bold":true}],[" 39 ",{"fg":3,"bold":true}],["    {                                                                                                         ",{}],["|",{"inverse":true}],["~                     ",{"fg":4,"bold":true}]],"26":[["~                   ",{"fg":4,"bold":true}],["|",{"inverse":true}],["  ",{"fg":6,"bg":0,"bold":true}],[" 40 ",{"fg":3,"bold":true}],["    ",{}],["|",{"fg":2,"bold":true}],["   cout <<",{}],["\"Second2\"",{"fg":5,"bold":true}],[" << endl;                                                                             ",{}],["|",{"inverse":true}],["~                     ",{"fg":4,"bold":true}]],"27":[["~                   ",{"fg":4,"bold":true}],["|",{"inverse":true}],["  ",{"fg":6,"bg":0,"bold":true}],[" 41 ",{"fg":3,"bold":true}],["    }                                                                                                         ",{}],["|",{"inverse":true}],["~                     ",{"fg":4,"bold":true}]],"28":[["~                   ",{"fg":4,"bold":true}],["|",{"inverse":true}],["  ",{"fg":6,"bg":0,"bold":true}],[" 42 ",{"fg":3,"bold":true}],["                                                                                                              ",{}],["|",{"inverse":true}],["~                     ",{"fg":4,"bold":true}]],"29":[["~                   ",{"fg":4,"bold":true}],["|",{"inverse":true}],["  ",{"fg":6,"bg":0,"bold":true}],[" 43 ",{"fg":3,"bold":true}],["    ",{}],["virtual",{"fg":2,"bold":true}],[" ~Last()                                                                                           ",{}],["|",{"inverse":true}],["~                     ",{"fg":4,"bold":true}]]},"cursor":{"x":21,"y":30}}],[0.010979,{"lines":{"1":[["                    ",{}],["|",{"inverse":true}],["  ",{"fg":6,"bg":0,"bold":true}],[" 14 ",{"fg":3,"bold":true}],["    ",{"underline":true}],["virtual",{"fg":2,"bold":true,"underline":true}],[" ",{"underline":true}],["void",{"fg":2,"bold":true,"underline":true}],[" SecondRun(",{"underline":true}],["void",{"fg":2,"bold":true,"underline":true}],[") = ",{"underline":true}],["0",{"fg":5,"bold":true,"underline":true}],[";                                                                         ",{"underline":true}],["|",{"inverse":true}],["  2 ",{"fg":3,"bold":true}],["                  ",{}]],"2":[["▼",{"fg":3,"bold":true}],[" First",{"fg":5,"bold":true}],[" : ",{}],["struct",{"fg":2,"bold":true}],["    ",{}],["|",{"inverse":true}],["  ",{"fg":6,"bg":0,"bold":true}],[" 15 ",{"fg":3,"bold":true}],["    ",{}],["virtual",{"fg":2,"bold":true}],[" ",{}],["void",{"fg":2,"bold":true}],[" SecondRun2(",{}],["void",{"fg":2,"bold":true}],[") = ",{}],["0",{"fg":5,"bold":true}],[";                                                                        ",{}],["|",{"inverse":true}],["  3 ",{"fg":3,"bold":true}],[".. (up a dir)",{"fg":6,"bold":true}],["     ",{}]],"3":[["    [prototypes]",{"fg":6,"bold":true}],["    ",{}],["|",{"inverse":true}],["  ",{"fg":6,"bg":0,"bold":true}],[" 16 ",{"fg":3,"bold":true}],["};                                                                                                            ",{}],["|",{"inverse":true}],["  4 /root/",{"fg":3,"bold":true}],["            ",{}]],"4":[["   ",{}],["+",{"fg":2,"bold":true}],["FirstRun(void)  ",{}],["|",{"inverse":true}],["  ",{"fg":6,"bg":0,"bold":true}],[" 17 ",{"fg":3,"bold":true}],["                                                                                                              ",{}],["|",{"inverse":true}],["  5 ",{"fg":3,"bold":true}],["▸ diary/",{"fg":6,"bold":true,"underline":true}],["          ",{"underline":true}]],"5":[["   ",{}],["+",{"fg":2,"bold":true}],["FirstRun2(void) ",{}],["|",{"inverse":true}],["  ",{"fg":6,"bg":0,"bold":true}],[" 18 ",{"fg":3,"bold":true}],["struct",{"fg":2,"bold":true}],[" Last: ",{}],["public",{"fg":3,"bold":true}],[" First,                                                                                    ",{}],["|",{"inverse":true}],["  6 ",{"fg":3,"bold":true}],["▸ temp/",{"fg":6,"bold":true}],["           ",{}]],"6":[["                    ",{}],["|",{"inverse":true}],["  ",{"fg":6,"bg":0,"bold":true}],[" 19 ",{"fg":3,"bold":true}],["    ",{}],["public",{"fg":3,"bold":true}],[" Second                                                                                             ",{}],["|",{"inverse":true}],["  7 ",{"fg":3,"bold":true}],["  anaconda-ks.cfg ",{}]],"7":[["▼",{"fg":3,"bold":true}],[" Last",{"fg":5,"bold":true}],[" : ",{}],["struct",{"fg":2,"bold":true}],["     ",{}],["|",{"inverse":true}],["  ",{"fg":6,"bg":0,"bold":true}],[" 20 ",{"fg":3,"bold":true}],["{                                                                                                             ",{}],["|",{"inverse":true}],["  8 ",{"fg":3,"bold":true}],["  initial-setup-ks",{}]],"8":[["    [functions]",{"fg":6,"bold":true}],["     ",{}],["|",{"inverse":true}],["  ",{"fg":6,"bg":0,"bold":true}],[" 21 ",{"fg":3,"bold":true}],["    ",{}],["// 基类First的虚方法",{"fg":6,"bold":true}],["                                                                                      ",{}],["|",{"inverse":true}],["  9 ",{"fg":3,"bold":true}],["  test.c          ",{}]],"9":[["   ",{}],["+",{"fg":2,"bold":true}],["FirstRun(void)  ",{}],["|",{"inverse":true}],["  ",{"fg":6,"bg":0,"bold":true}],[" 22 ",{"fg":3,"bold":true}],["    ",{}],["virtual",{"fg":2,"bold":true}],[" ",{}],["void",{"fg":2,"bold":true}],[" FirstRun(",{}],["void",{"fg":2,"bold":true}],[")                                                                               ",{}],["|",{"inverse":true}],[" 10 ",{"fg":3,"bold":true}],["  test.cpp        ",{}]],"10":[["   ",{}],["+",{"fg":2,"bold":true}],["FirstRun2(void) ",{}],["|",{"inverse":true}],["  ",{"fg":6,"bg":0,"bold":true}],[" 23 ",{"fg":3,"bold":true}],["    {                                                                                                         ",{}],["|",{"inverse":true}],["~                     ",{"fg":4,"bold":true}]],"11":[["   ",{}],["+",{"fg":2,"bold":true}],["~Last()         ",{}],["|",{"inverse":true}],["  ",{"fg":6,"bg":0,"bold":true}],[" 24 ",{"fg":3,"bold":true}],["    ",{}],["|",{"fg":2,"bold":true}],["   cout << ",{}],["\"First\"",{"fg":5,"bold":true}],[" << endl;                                                                              ",{}],["|",{"inverse":true}],["~                     ",{"fg":4,"bold":true}]],"12":[["   ",{}],["+",{"fg":2,"bold":true}],["SecondRun(void) ",{}],["|",{"inverse":true}],["  ",{"fg":6,"bg":0,"bold":true}],[" 25 ",{"fg":3,"bold":true}],["    }                                                                                                         ",{}],["|",{"inverse":true}],["~                     ",{"fg":4,"bold":true}]],"13":[["   ",{}],["+",{"fg":2,"bold":true}],["SecondRun2(void)",{}],["|",{"inverse":true}],["  ",{"fg":6,"bg":0,"bold":true}],[" 26 ",{"fg":3,"bold":true}],["                                                                                                              ",{}],["|",{"inverse":true}],["~                     ",{"fg":4,"bold":true}]],"14":[["                    ",{}],["|",{"inverse":true}],["  ",{"fg":6,"bg":0,"bold":true}],[" 27 ",{"fg":3,"bold":true}],["    ",{}],["virtual",{"fg":2,"bold":true}],[" ",{}],["void",{"fg":2,"bold":true}],[" FirstRun2(",{}],["void",{"fg":2,"bold":true}],[")                                                                              ",{}],["|",{"inverse":true}],["~                     ",{"fg":4,"bold":true}]],"15":[["▼",{"fg":3,"bold":true}],[" Second",{"fg":5,"bold":true}],[" : ",{}],["struct",{"fg":2,"bold":true}],["   ",{}],["|",{"inverse":true}],["  ",{"fg":6,"bg":0,"bold":true}],[" 28 ",{"fg":3,"bold":true}],["    {                                                                                                         ",{}],["|",{"inverse":true}],["~                     ",{"fg":4,"bold":true}]],"16":[["    [prototypes]",{"fg":6,"bold":true}],["    ",{}],["|",{"inverse":true}],["  ",{"fg":6,"bg":0,"bold":true}],[" 29 ",{"fg":3,"bold":true}],["    ",{}],["|",{"fg":2,"bold":true}],["   cout << ",{}],["\"First2\"",{"fg":5,"bold":true}],[" << endl;                                                                             ",{}],["|",{"inverse":true}],["~                     ",{"fg":4,"bold":true}]],"17":[["   ",{}],["+",{"fg":2,"bold":true}],["SecondRun(void) ",{}],["|",{"inverse":true}],["  ",{"fg":6,"bg":0,"bold":true}],[" 30 ",{"fg":3,"bold":true}],["    }                                                                                                         ",{}],["|",{"inverse":true}],["~                     ",{"fg":4,"bold":true}]],"18":[["   ",{}],["+",{"fg":2,"bold":true}],["SecondRun2(void)",{}],["|",{"inverse":true}],["  ",{"fg":6,"bg":0,"bold":true}],[" 31 ",{"fg":3,"bold":true}],["                                                                                                              ",{}],["|",{"inverse":true}],["~                     ",{"fg":4,"bold":true}]],"19":[["                    ",{}],["|",{"inverse":true}],["  ",{"fg":6,"bg":0,"bold":true}],[" 32 ",{"fg":3,"bold":true}],["    ",{}],["// 基类Second虚方法",{"fg":6,"bold":true}],["                                                                                       ",{}],["|",{"inverse":true}],["~                     ",{"fg":4,"bold":true}]],"20":[["▼",{"fg":3,"bold":true}],[" ",{}],["functions",{"fg":6,"bold":true}],["         ",{}],["|",{"inverse":true}],["  ",{"fg":6,"bg":0,"bold":true}],[" 33 ",{"fg":3,"bold":true}],["    ",{}],["virtual",{"fg":2,"bold":true}],[" ",{}],["void",{"fg":2,"bold":true}],[" SecondRun(",{}],["void",{"fg":2,"bold":true}],[")                                                                              ",{}],["|",{"inverse":true}],["~                     ",{"fg":4,"bold":true}]],"21":[["    ",{"underline":true}],["main",{"fg":0,"bg":3}],["(int argc, c",{"underline":true}],["|",{"inverse":true}],["  ",{"fg":6,"bg":0,"bold":true}],[" 34 ",{"fg":3,"bold":true}],["    {                                                                                                         ",{}],["|",{"inverse":true}],["~                     ",{"fg":4,"bold":true}]],"22":[["~                   ",{"fg":4,"bold":true}],["|",{"inverse":true}],["  ",{"fg":6,"bg":0,"bold":true}],[" 35 ",{"fg":3,"bold":true}],["    ",{}],["|",{"fg":2,"bold":true}],["   cout <<",{}],["\"Second\"",{"fg":5,"bold":true}],[" << endl;                                                                              ",{}],["|",{"inverse":true}],["~                     ",{"fg":4,"bold":true}]],"23":[["~                   ",{"fg":4,"bold":true}],["|",{"inverse":true}],["  ",{"fg":6,"bg":0,"bold":true}],[" 36 ",{"fg":3,"bold":true}],["    }                                                                                                         ",{}],["|",{"inverse":true}],["~                     ",{"fg":4,"bold":true}]],"24":[["~                   ",{"fg":4,"bold":true}],["|",{"inverse":true}],["  ",{"fg":6,"bg":0,"bold":true}],[" 37 ",{"fg":3,"bold":true}],["                                                                                                              ",{}],["|",{"inverse":true}],["~                     ",{"fg":4,"bold":true}]],"25":[["~                   ",{"fg":4,"bold":true}],["|",{"inverse":true}],["  ",{"fg":6,"bg":0,"bold":true}],[" 38 ",{"fg":3,"bold":true}],["    ",{}],["virtual",{"fg":2,"bold":true}],[" ",{}],["void",{"fg":2,"bold":true}],[" SecondRun2(",{}],["void",{"fg":2,"bold":true}],[")                                                                             ",{}],["|",{"inverse":true}],["~                     ",{"fg":4,"bold":true}]],"26":[["~                   ",{"fg":4,"bold":true}],["|",{"inverse":true}],["  ",{"fg":6,"bg":0,"bold":true}],[" 39 ",{"fg":3,"bold":true}],["    {                                                                                                         ",{}],["|",{"inverse":true}],["~                     ",{"fg":4,"bold":true}]],"27":[["~                   ",{"fg":4,"bold":true}],["|",{"inverse":true}],["  ",{"fg":6,"bg":0,"bold":true}],[" 40 ",{"fg":3,"bold":true}],["    ",{}],["|",{"fg":2,"bold":true}],["   cout <<",{}],["\"Second2\"",{"fg":5,"bold":true}],[" << endl;                                                                             ",{}],["|",{"inverse":true}],["~                     ",{"fg":4,"bold":true}]],"28":[["~                   ",{"fg":4,"bold":true}],["|",{"inverse":true}],["  ",{"fg":6,"bg":0,"bold":true}],[" 41 ",{"fg":3,"bold":true}],["    }                                                                                                         ",{}],["|",{"inverse":true}],["~                     ",{"fg":4,"bold":true}]],"29":[["~                   ",{"fg":4,"bold":true}],["|",{"inverse":true}],["  ",{"fg":6,"bg":0,"bold":true}],[" 42 ",{"fg":3,"bold":true}],["                                                                                                              ",{}],["|",{"inverse":true}],["~                     ",{"fg":4,"bold":true}]],"30":[["~                   ",{"fg":4,"bold":true}],["|",{"inverse":true}],["  ",{"fg":6,"bg":0,"bold":true}],[" 43 ",{"fg":3,"bold":true}],["    ",{}],["virtual",{"fg":2,"bold":true}],[" ~Last()                                                                                           ",{}],["|",{"inverse":true}],["~                     ",{"fg":4,"bold":true}]],"31":[["~                   ",{"fg":4,"bold":true}],["|",{"inverse":true}],["  ",{"fg":6,"bg":0,"bold":true}],[" 44 ",{"fg":3,"bold":true}],["    {                                                                                                         ",{}],["|",{"inverse":true}],["~                     ",{"fg":4,"bold":true}]],"32":[["~                   ",{"fg":4,"bold":true}],["|",{"inverse":true}],["  ",{"fg":6,"bg":0,"bold":true}],[" 45 ",{"fg":3,"bold":true}],["                                                                                                              ",{}],["|",{"inverse":true}],["~                     ",{"fg":4,"bold":true}]],"33":[["~                   ",{"fg":4,"bold":true}],["|",{"inverse":true}],["  ",{"fg":6,"bg":0,"bold":true}],[" 46 ",{"fg":3,"bold":true}],["    }                                                                                                         ",{}],["|",{"inverse":true}],["~                     ",{"fg":4,"bold":true}]],"34":[["~                   ",{"fg":4,"bold":true}],["|",{"inverse":true}],["  ",{"fg":6,"bg":0,"bold":true}],[" 47 ",{"fg":3,"bold":true}],["                                                                                                              ",{}],["|",{"inverse":true}],["~                     ",{"fg":4,"bold":true}]],"35":[["~                   ",{"fg":4,"bold":true}],["|",{"inverse":true}],["  ",{"fg":6,"bg":0,"bold":true}],[" 48 ",{"fg":3,"bold":true}],["};                                                                                                            ",{}],["|",{"inverse":true}],["~                     ",{"fg":4,"bold":true}]],"36":[["~                   ",{"fg":4,"bold":true}],["|",{"inverse":true}],["  ",{"fg":6,"bg":0,"bold":true}],[" 50 ",{"fg":3,"bold":true}],["                                                                                                              ",{}],["|",{"inverse":true}],["~                     ",{"fg":4,"bold":true}]],"37":[["~                   ",{"fg":4,"bold":true}],["|",{"inverse":true}],[">>",{"fg":7,"bg":1,"bold":true}],[" 51 ",{"fg":3,"bold":true}],["int",{"fg":2,"bold":true}],[" main(",{}],["int",{"fg":2,"bold":true}],[" ",{}],["argc",{"bg":1}],[", ",{}],["char",{"fg":2,"bold":true}],["* ",{}],["argv",{"bg":1}],["[])                                                                              ",{}],["|",{"inverse":true}],["~                     ",{"fg":4,"bold":true}]],"38":[["~                   ",{"fg":4,"bold":true}],["|",{"inverse":true}],["  ",{"fg":6,"bg":0,"bold":true}],[" 52 ",{"fg":3,"bold":true}],["{                                                                                                             ",{}],["|",{"inverse":true}],["~                     ",{"fg":4,"bold":true}]],"39":[["~                   ",{"fg":4,"bold":true}],["|",{"inverse":true}],["  ",{"fg":6,"bg":0,"bold":true}],[" 53 ",{"fg":3,"bold":true}],["    Last* pLast = ",{}],["new",{"fg":3,"bold":true}],[" Last();                                                                                 ",{}],["|",{"inverse":true}],["~                     ",{"fg":4,"bold":true}]],"40":[["~                   ",{"fg":4,"bold":true}],["|",{"inverse":true}],["  ",{"fg":6,"bg":0,"bold":true}],[" 54 ",{"fg":3,"bold":true}],["    vector<",{}],["int",{"fg":2,"bold":true}],["> v;                                                                                            ",{}],["|",{"inverse":true}],["~                     ",{"fg":4,"bold":true}]],"41":[["~                   ",{"fg":4,"bold":true}],["|",{"inverse":true}],["  ",{"fg":6,"bg":0,"bold":true}],[" 55 ",{"fg":3,"bold":true}],["    v.begin();                                                                                                ",{}],["|",{"inverse":true}],["~                     ",{"fg":4,"bold":true}]],"42":[["~                   ",{"fg":4,"bold":true}],["|",{"inverse":true}],[">>",{"fg":7,"bg":1,"bold":true}],[" 56 ",{"fg":3,"bold":true}],["    Second* pSecond1 = ",{}],["reinterpret_cast",{"fg":3,"bg":1,"bold":true}],["<Second*>(pLast)",{"bg":1}],[";                                                      ",{}],["|",{"inverse":true}],["~                     ",{"fg":4,"bold":true}]],"43":[["~                   ",{"fg":4,"bold":true}],["|",{"inverse":true}],["  ",{"fg":6,"bg":0,"bold":true}],[" 57 ",{"fg":3,"bold":true}],["    pSecond1->SecondRun2();                                                                                   ",{}],["|",{"inverse":true}],["~                     ",{"fg":4,"bold":true}]],"44":[["~                   ",{"fg":4,"bold":true}],["|",{"inverse":true}],["  ",{"fg":6,"bg":0,"bold":true}],[" 58 ",{"fg":3,"bold":true}],["                                                                                                              ",{}],["|",{"inverse":true}],["~                     ",{"fg":4,"bold":true}]],"45":[["~                   ",{"fg":4,"bold":true}],["|",{"inverse":true}],["  ",{"fg":6,"bg":0,"bold":true}],[" 59 ",{"fg":3,"bold":true}],["    Second* pSecond2 = pLast;                                                                                 ",{}],["|",{"inverse":true}],["~                     ",{"fg":4,"bold":true}]],"46":[["[Name] test.cpp      ",{"inverse":true}],[" NORMAL ",{"bold":true}],[" ",{}],["test.cpp ",{"bold":true}],[" Second                                                      unix │ utf-8 │ cpp │  19% ",{}],[" LN  14",{"bold":true}],[":1  ",{}],[" ",{"bold":true,"inverse":true}],[" ~/NERD_tree_1 ",{"bold":true}],["       ",{}]]},"cursor":{"x":23,"y":36}}],[0.011227,{"lines":{"0":[["\" Press <F1> for hel",{"fg":6,"bold":true}],["|",{"inverse":true}],["  ",{"fg":6,"bg":0,"bold":true}],[" 13 ",{"fg":3,"bold":true}],["{",{"bg":6}],["                                                                                                             ",{"underline":true}],["|",{"inverse":true}],["  1 ",{"fg":3,"bold":true}],["\" Press ? for help",{"fg":5,"bold":true}]],"1":[["                    ",{}],["|",{"inverse":true}],["  ",{"fg":6,"bg":0,"bold":true}],[" 14 ",{"fg":3,"bold":true}],["    ",{}],["virtual",{"fg":2,"bold":true}],[" ",{}],["void",{"fg":2,"bold":true}],[" SecondRun(",{}],["void",{"fg":2,"bold":true}],[") = ",{}],["0",{"fg":5,"bold":true}],[";                                                                         ",{}],["|",{"inverse":true}],["  2 ",{"fg":3,"bold":true}],["                  ",{}]],"3":[["    [prototypes]",{"fg":6,"bold":true}],["    ",{}],["|",{"inverse":true}],["  ",{"fg":6,"bg":0,"bold":true}],[" 16 ",{"fg":3,"bold":true}],["}",{"bg":6}],[";                                                                                                            ",{}],["|",{"inverse":true}],["  4 /root/",{"fg":3,"bold":true}],["            ",{}]],"36":[["~                   ",{"fg":4,"bold":true}],["|",{"inverse":true}],["  ",{"fg":6,"bg":0,"bold":true}],[" 49 ",{"fg":3,"bold":true}],["                                                                                                              ",{}],["|",{"inverse":true}],["~                     ",{"fg":4,"bold":true}]],"37":[["~                   ",{"fg":4,"bold":true}],["|",{"inverse":true}],["  ",{"fg":6,"bg":0,"bold":true}],[" 50 ",{"fg":3,"bold":true}],["                                                                                                              ",{}],["|",{"inverse":true}],["~                     ",{"fg":4,"bold":true}]],"38":[["~                   ",{"fg":4,"bold":true}],["|",{"inverse":true}],[">>",{"fg":7,"bg":1,"bold":true}],[" 51 ",{"fg":3,"bold":true}],["int",{"fg":2,"bold":true}],[" main(",{}],["int",{"fg":2,"bold":true}],[" ",{}],["argc",{"bg":1}],[", ",{}],["char",{"fg":2,"bold":true}],["* ",{}],["argv",{"bg":1}],["[])                                                                              ",{}],["|",{"inverse":true}],["~                     ",{"fg":4,"bold":true}]],"39":[["~                   ",{"fg":4,"bold":true}],["|",{"inverse":true}],["  ",{"fg":6,"bg":0,"bold":true}],[" 52 ",{"fg":3,"bold":true}],["{                                                                                                             ",{}],["|",{"inverse":true}],["~                     ",{"fg":4,"bold":true}]],"40":[["~                   ",{"fg":4,"bold":true}],["|",{"inverse":true}],["  ",{"fg":6,"bg":0,"bold":true}],[" 53 ",{"fg":3,"bold":true}],["    Last* pLast = ",{}],["new",{"fg":3,"bold":true}],[" Last();                                                                                 ",{}],["|",{"inverse":true}],["~                     ",{"fg":4,"bold":true}]],"41":[["~                   ",{"fg":4,"bold":true}],["|",{"inverse":true}],["  ",{"fg":6,"bg":0,"bold":true}],[" 54 ",{"fg":3,"bold":true}],["    vector<",{}],["int",{"fg":2,"bold":true}],["> v;                                                                                            ",{}],["|",{"inverse":true}],["~                     ",{"fg":4,"bold":true}]],"42":[["~                   ",{"fg":4,"bold":true}],["|",{"inverse":true}],["  ",{"fg":6,"bg":0,"bold":true}],[" 55 ",{"fg":3,"bold":true}],["    v.begin();                                                                                                ",{}],["|",{"inverse":true}],["~                     ",{"fg":4,"bold":true}]],"43":[["~                   ",{"fg":4,"bold":true}],["|",{"inverse":true}],[">>",{"fg":7,"bg":1,"bold":true}],[" 56 ",{"fg":3,"bold":true}],["    Second* pSecond1 = ",{}],["reinterpret_cast",{"fg":3,"bg":1,"bold":true}],["<Second*>(pLast)",{"bg":1}],[";                                                      ",{}],["|",{"inverse":true}],["~                     ",{"fg":4,"bold":true}]],"44":[["~                   ",{"fg":4,"bold":true}],["|",{"inverse":true}],["  ",{"fg":6,"bg":0,"bold":true}],[" 57 ",{"fg":3,"bold":true}],["    pSecond1->SecondRun2();                                                                                   ",{}],["|",{"inverse":true}],["~                     ",{"fg":4,"bold":true}]],"45":[["~                   ",{"fg":4,"bold":true}],["|",{"inverse":true}],["  ",{"fg":6,"bg":0,"bold":true}],[" 58 ",{"fg":3,"bold":true}],["                                                                                                              ",{}],["|",{"inverse":true}],["~                     ",{"fg":4,"bold":true}]],"46":[["[Name] test.cpp      ",{"inverse":true}],[" NORMAL ",{"bold":true}],[" ",{}],["test.cpp ",{"bold":true}],[" Second                                                      unix │ utf-8 │ cpp │  18% ",{}],[" LN  13",{"bold":true}],[":1  ",{}],[" ",{"bold":true,"inverse":true}],[" ~/NERD_tree_1 ",{"bold":true}],["       ",{}]]},"cursor":{"x":27,"y":0,"visible":true}}],[0.033674,{"lines":{"0":[["\" Press <F1> for hel",{"fg":6,"bold":true}],["|",{"inverse":true}],["                                                                                                                    ",{}],["|",{"inverse":true}],["  1 ",{"fg":3,"bold":true}],["\" Press ? for help",{"fg":5,"bold":true}]],"1":[["                    ",{}],["|",{"inverse":true}],["  ",{"fg":6,"bg":0,"bold":true}],[" 13 ",{"fg":3,"bold":true}],["{",{"bg":6}],["                                                                                                             ",{"underline":true}],["|",{"inverse":true}],["  2 ",{"fg":3,"bold":true}],["                  ",{}]],"2":[["▼",{"fg":3,"bold":true}],[" First",{"fg":5,"bold":true}],[" : ",{}],["struct",{"fg":2,"bold":true}],["    ",{}],["|",{"inverse":true}],["  ",{"fg":6,"bg":0,"bold":true}],[" 14 ",{"fg":3,"bold":true}],["    ",{}],["virtual",{"fg":2,"bold":true}],[" ",{}],["void",{"fg":2,"bold":true}],[" SecondRun(",{}],["void",{"fg":2,"bold":true}],[") = ",{}],["0",{"fg":5,"bold":true}],[";                                                                         ",{}],["|",{"inverse":true}],["  3 ",{"fg":3,"bold":true}],[".. (up a dir)",{"fg":6,"bold":true}],["     ",{}]],"3":[["    [prototypes]",{"fg":6,"bold":true}],["    ",{}],["|",{"inverse":true}],["  ",{"fg":6,"bg":0,"bold":true}],[" 15 ",{"fg":3,"bold":true}],["    ",{}],["virtual",{"fg":2,"bold":true}],[" ",{}],["void",{"fg":2,"bold":true}],[" SecondRun2(",{}],["void",{"fg":2,"bold":true}],[") = ",{}],["0",{"fg":5,"bold":true}],[";                                                                        ",{}],["|",{"inverse":true}],["  4 /root/",{"fg":3,"bold":true}],["            ",{}]],"4":[["   ",{}],["+",{"fg":2,"bold":true}],["FirstRun(void)  ",{}],["|",{"inverse":true}],["  ",{"fg":6,"bg":0,"bold":true}],[" 16 ",{"fg":3,"bold":true}],["}",{"bg":6}],[";                                                                                                            ",{}],["|",{"inverse":true}],["  5 ",{"fg":3,"bold":true}],["▸ diary/",{"fg":6,"bold":true,"underline":true}],["          ",{"underline":true}]],"5":[["   ",{}],["+",{"fg":2,"bold":true}],["FirstRun2(void) ",{}],["|",{"inverse":true}],["  ",{"fg":6,"bg":0,"bold":true}],[" 17 ",{"fg":3,"bold":true}],["                                                                                                              ",{}],["|",{"inverse":true}],["  6 ",{"fg":3,"bold":true}],["▸ temp/",{"fg":6,"bold":true}],["           ",{}]]},"cursor":{"x":89,"y":5,"visible":false}}],[0.010834,{"lines":{"0":[["\" Press <F1> for hel",{"fg":6,"bold":true}],["|",{"inverse":true}],["  ",{"fg":6,"bg":0,"bold":true}],[" 12 ",{"fg":3,"bold":true}],["struct",{"fg":2,"bold":true,"underline":true}],[" Second                                                                                                 ",{"underline":true}],["|",{"inverse":true}],["  1 ",{"fg":3,"bold":true}],["\" Press ? for help",{"fg":5,"bold":true}]],"1":[["                    ",{}],["|",{"inverse":true}],["  ",{"fg":6,"bg":0,"bold":true}],[" 13 ",{"fg":3,"bold":true}],["{                                                                                                             ",{}],["|",{"inverse":true}],["  2 ",{"fg":3,"bold":true}],["                  ",{}]],"4":[["   ",{}],["+",{"fg":2,"bold":true}],["FirstRun(void)  ",{}],["|",{"inverse":true}],["  ",{"fg":6,"bg":0,"bold":true}],[" 16 ",{"fg":3,"bold":true}],["};                                                                                                            ",{}],["|",{"inverse":true}],["  5 ",{"fg":3,"bold":true}],["▸ diary/",{"fg":6,"bold":true,"underline":true}],["          ",{"underline":true}]],"6":[["                    ",{}],["|",{"inverse":true}],["  ",{"fg":6,"bg":0,"bold":true}],[" 18 ",{"fg":3,"bold":true}],["struct",{"fg":2,"bold":true}],[" Last: ",{}],["public",{"fg":3,"bold":true}],[" First,                                                                                    ",{}],["|",{"inverse":true}],["  7 ",{"fg":3,"bold":true}],["  anaconda-ks.cfg ",{}]],"7":[["▼",{"fg":3,"bold":true}],[" Last",{"fg":5,"bold":true}],[" : ",{}],["struct",{"fg":2,"bold":true}],["     ",{}],["|",{"inverse":true}],["  ",{"fg":6,"bg":0,"bold":true}],[" 19 ",{"fg":3,"bold":true}],["    ",{}],["public",{"fg":3,"bold":true}],[" Second                                                                                             ",{}],["|",{"inverse":true}],["  8 ",{"fg":3,"bold":true}],["  initial-setup-ks",{}]],"8":[["    [functions]",{"fg":6,"bold":true}],["     ",{}],["|",{"inverse":true}],["  ",{"fg":6,"bg":0,"bold":true}],[" 20 ",{"fg":3,"bold":true}],["{                                                                                                             ",{}],["|",{"inverse":true}],["  9 ",{"fg":3,"bold":true}],["  test.c          ",{}]],"9":[["   ",{}],["+",{"fg":2,"bold":true}],["FirstRun(void)  ",{}],["|",{"inverse":true}],["  ",{"fg":6,"bg":0,"bold":true}],[" 21 ",{"fg":3,"bold":true}],["    ",{}],["// 基类First的虚方法",{"fg":6,"bold":true}],["                                                                                      ",{}],["|",{"inverse":true}],[" 10 ",{"fg":3,"bold":true}],["  test.cpp        ",{}]],"10":[["   ",{}],["+",{"fg":2,"bold":true}],["FirstRun2(void) ",{}],["|",{"inverse":true}],["  ",{"fg":6,"bg":0,"bold":true}],[" 22 ",{"fg":3,"bold":true}],["    ",{}],["virtual",{"fg":2,"bold":true}],[" ",{}],["void",{"fg":2,"bold":true}],[" FirstRun(",{}],["void",{"fg":2,"bold":true}],[")                                                                               ",{}],["|",{"inverse":true}],["~                     ",{"fg":4,"bold":true}]],"11":[["   ",{}],["+",{"fg":2,"bold":true}],["~Last()         ",{}],["|",{"inverse":true}],["  ",{"fg":6,"bg":0,"bold":true}],[" 23 ",{"fg":3,"bold":true}],["    {                                                                                                         ",{}],["|",{"inverse":true}],["~                     ",{"fg":4,"bold":true}]],"12":[["   ",{}],["+",{"fg":2,"bold":true}],["SecondRun(void) ",{}],["|",{"inverse":true}],["  ",{"fg":6,"bg":0,"bold":true}],[" 24 ",{"fg":3,"bold":true}],["    ",{}],["|",{"fg":2,"bold":true}],["   cout << ",{}],["\"First\"",{"fg":5,"bold":true}],[" << endl;                                                                              ",{}],["|",{"inverse":true}],["~                     ",{"fg":4,"bold":true}]],"13":[["   ",{}],["+",{"fg":2,"bold":true}],["SecondRun2(void)",{}],["|",{"inverse":true}],["  ",{"fg":6,"bg":0,"bold":true}],[" 25 ",{"fg":3,"bold":true}],["    }                                                                                                         ",{}],["|",{"inverse":true}],["~                     ",{"fg":4,"bold":true}]],"14":[["                    ",{}],["|",{"inverse":true}],["  ",{"fg":6,"bg":0,"bold":true}],[" 26 ",{"fg":3,"bold":true}],["                                                                                                              ",{}],["|",{"inverse":true}],["~                     ",{"fg":4,"bold":true}]],"15":[["▼",{"fg":3,"bold":true}],[" Second",{"fg":5,"bold":true}],[" : ",{}],["struct",{"fg":2,"bold":true}],["   ",{}],["|",{"inverse":true}],["  ",{"fg":6,"bg":0,"bold":true}],[" 27 ",{"fg":3,"bold":true}],["    ",{}],["virtual",{"fg":2,"bold":true}],[" ",{}],["void",{"fg":2,"bold":true}],[" FirstRun2(",{}],["void",{"fg":2,"bold":true}],[")                                                                              ",{}],["|",{"inverse":true}],["~                     ",{"fg":4,"bold":true}]],"16":[["    [prototypes]",{"fg":6,"bold":true}],["    ",{}],["|",{"inverse":true}],["  ",{"fg":6,"bg":0,"bold":true}],[" 28 ",{"fg":3,"bold":true}],["    {                                                                                                         ",{}],["|",{"inverse":true}],["~                     ",{"fg":4,"bold":true}]],"17":[["   ",{}],["+",{"fg":2,"bold":true}],["SecondRun(void) ",{}],["|",{"inverse":true}],["  ",{"fg":6,"bg":0,"bold":true}],[" 29 ",{"fg":3,"bold":true}],["    ",{}],["|",{"fg":2,"bold":true}],["   cout << ",{}],["\"First2\"",{"fg":5,"bold":true}],[" << endl;                                                                             ",{}],["|",{"inverse":true}],["~                     ",{"fg":4,"bold":true}]],"18":[["   ",{}],["+",{"fg":2,"bold":true}],["SecondRun2(void)",{}],["|",{"inverse":true}],["  ",{"fg":6,"bg":0,"bold":true}],[" 30 ",{"fg":3,"bold":true}],["    }                                                                                                         ",{}],["|",{"inverse":true}],["~                     ",{"fg":4,"bold":true}]],"19":[["                    ",{}],["|",{"inverse":true}],["  ",{"fg":6,"bg":0,"bold":true}],[" 31 ",{"fg":3,"bold":true}],["                                                                                                              ",{}],["|",{"inverse":true}],["~                     ",{"fg":4,"bold":true}]],"20":[["▼",{"fg":3,"bold":true}],[" ",{}],["functions",{"fg":6,"bold":true}],["         ",{}],["|",{"inverse":true}],["  ",{"fg":6,"bg":0,"bold":true}],[" 32 ",{"fg":3,"bold":true}],["    ",{}],["// 基类Second虚方法",{"fg":6,"bold":true}],["                                                                                       ",{}],["|",{"inverse":true}],["~                     ",{"fg":4,"bold":true}]],"21":[["    ",{"underline":true}],["main",{"fg":0,"bg":3}],["(int argc, c",{"underline":true}],["|",{"inverse":true}],["  ",{"fg":6,"bg":0,"bold":true}],[" 33 ",{"fg":3,"bold":true}],["    ",{}],["virtual",{"fg":2,"bold":true}],[" ",{}],["void",{"fg":2,"bold":true}],[" SecondRun(",{}],["void",{"fg":2,"bold":true}],[")                                                                              ",{}],["|",{"inverse":true}],["~                     ",{"fg":4,"bold":true}]],"22":[["~                   ",{"fg":4,"bold":true}],["|",{"inverse":true}],["  ",{"fg":6,"bg":0,"bold":true}],[" 34 ",{"fg":3,"bold":true}],["    {                                                                                                         ",{}],["|",{"inverse":true}],["~                     ",{"fg":4,"bold":true}]],"23":[["~                   ",{"fg":4,"bold":true}],["|",{"inverse":true}],["  ",{"fg":6,"bg":0,"bold":true}],[" 35 ",{"fg":3,"bold":true}],["    ",{}],["|",{"fg":2,"bold":true}],["   cout <<",{}],["\"Second\"",{"fg":5,"bold":true}],[" << endl;                                                                              ",{}],["|",{"inverse":true}],["~                     ",{"fg":4,"bold":true}]],"24":[["~                   ",{"fg":4,"bold":true}],["|",{"inverse":true}],["  ",{"fg":6,"bg":0,"bold":true}],[" 36 ",{"fg":3,"bold":true}],["    }                                                                                                         ",{}],["|",{"inverse":true}],["~                     ",{"fg":4,"bold":true}]],"25":[["~                   ",{"fg":4,"bold":true}],["|",{"inverse":true}],["  ",{"fg":6,"bg":0,"bold":true}],[" 37 ",{"fg":3,"bold":true}],["                                                                                                              ",{}],["|",{"inverse":true}],["~                     ",{"fg":4,"bold":true}]],"26":[["~                   ",{"fg":4,"bold":true}],["|",{"inverse":true}],["  ",{"fg":6,"bg":0,"bold":true}],[" 38 ",{"fg":3,"bold":true}],["    ",{}],["virtual",{"fg":2,"bold":true}],[" ",{}],["void",{"fg":2,"bold":true}],[" SecondRun2(",{}],["void",{"fg":2,"bold":true}],[")                                                                             ",{}],["|",{"inverse":true}],["~                     ",{"fg":4,"bold":true}]],"27":[["~                   ",{"fg":4,"bold":true}],["|",{"inverse":true}],["  ",{"fg":6,"bg":0,"bold":true}],[" 39 ",{"fg":3,"bold":true}],["    {                                                                                                         ",{}],["|",{"inverse":true}],["~                     ",{"fg":4,"bold":true}]],"28":[["~                   ",{"fg":4,"bold":true}],["|",{"inverse":true}],["  ",{"fg":6,"bg":0,"bold":true}],[" 40 ",{"fg":3,"bold":true}],["    ",{}],["|",{"fg":2,"bold":true}],["   cout <<",{}],["\"Second2\"",{"fg":5,"bold":true}],[" << endl;                                                                             ",{}],["|",{"inverse":true}],["~                     ",{"fg":4,"bold":true}]],"29":[["~                   ",{"fg":4,"bold":true}],["|",{"inverse":true}],["  ",{"fg":6,"bg":0,"bold":true}],[" 41 ",{"fg":3,"bold":true}],["    }                                                                                                         ",{}],["|",{"inverse":true}],["~                     ",{"fg":4,"bold":true}]],"30":[["~                   ",{"fg":4,"bold":true}],["|",{"inverse":true}],["  ",{"fg":6,"bg":0,"bold":true}],[" 42 ",{"fg":3,"bold":true}],["                                                                                                              ",{}],["|",{"inverse":true}],["~                     ",{"fg":4,"bold":true}]],"31":[["~                   ",{"fg":4,"bold":true}],["|",{"inverse":true}],["  ",{"fg":6,"bg":0,"bold":true}],[" 43 ",{"fg":3,"bold":true}],["    ",{}],["virtual",{"fg":2,"bold":true}],[" ~Last()                                                                                           ",{}],["|",{"inverse":true}],["~                     ",{"fg":4,"bold":true}]],"32":[["~                   ",{"fg":4,"bold":true}],["|",{"inverse":true}],["  ",{"fg":6,"bg":0,"bold":true}],[" 44 ",{"fg":3,"bold":true}],["    {                                                                                                         ",{}],["|",{"inverse":true}],["~                     ",{"fg":4,"bold":true}]],"33":[["~                   ",{"fg":4,"bold":true}],["|",{"inverse":true}],["  ",{"fg":6,"bg":0,"bold":true}],[" 45 ",{"fg":3,"bold":true}],["                                                                                                              ",{}],["|",{"inverse":true}],["~                     ",{"fg":4,"bold":true}]],"34":[["~                   ",{"fg":4,"bold":true}],["|",{"inverse":true}],["  ",{"fg":6,"bg":0,"bold":true}],[" 46 ",{"fg":3,"bold":true}],["    }                                                                                                         ",{}],["|",{"inverse":true}],["~                     ",{"fg":4,"bold":true}]],"35":[["~                   ",{"fg":4,"bold":true}],["|",{"inverse":true}],["  ",{"fg":6,"bg":0,"bold":true}],[" 47 ",{"fg":3,"bold":true}],["                                                                                                              ",{}],["|",{"inverse":true}],["~                     ",{"fg":4,"bold":true}]],"36":[["~                   ",{"fg":4,"bold":true}],["|",{"inverse":true}],["  ",{"fg":6,"bg":0,"bold":true}],[" 48 ",{"fg":3,"bold":true}],["};                                                                                                            ",{}],["|",{"inverse":true}],["~                     ",{"fg":4,"bold":true}]],"37":[["~                   ",{"fg":4,"bold":true}],["|",{"inverse":true}],["  ",{"fg":6,"bg":0,"bold":true}],[" 49 ",{"fg":3,"bold":true}],["                                                                                                              ",{}],["|",{"inverse":true}],["~                     ",{"fg":4,"bold":true}]],"38":[["~                   ",{"fg":4,"bold":true}],["|",{"inverse":true}],["  ",{"fg":6,"bg":0,"bold":true}],[" 50 ",{"fg":3,"bold":true}],["                                                                                                              ",{}],["|",{"inverse":true}],["~                     ",{"fg":4,"bold":true}]],"39":[["~                   ",{"fg":4,"bold":true}],["|",{"inverse":true}],[">>",{"fg":7,"bg":1,"bold":true}],[" 51 ",{"fg":3,"bold":true}],["int",{"fg":2,"bold":true}],[" main(",{}],["int",{"fg":2,"bold":true}],[" ",{}],["argc",{"bg":1}],[", ",{}],["char",{"fg":2,"bold":true}],["* ",{}],["argv",{"bg":1}],["[])                                                                              ",{}],["|",{"inverse":true}],["~                     ",{"fg":4,"bold":true}]],"40":[["~                   ",{"fg":4,"bold":true}],["|",{"inverse":true}],["  ",{"fg":6,"bg":0,"bold":true}],[" 52 ",{"fg":3,"bold":true}],["{                                                                                                             ",{}],["|",{"inverse":true}],["~                     ",{"fg":4,"bold":true}]],"41":[["~                   ",{"fg":4,"bold":true}],["|",{"inverse":true}],["  ",{"fg":6,"bg":0,"bold":true}],[" 53 ",{"fg":3,"bold":true}],["    Last* pLast = ",{}],["new",{"fg":3,"bold":true}],[" Last();                                                                                 ",{}],["|",{"inverse":true}],["~                     ",{"fg":4,"bold":true}]],"42":[["~                   ",{"fg":4,"bold":true}],["|",{"inverse":true}],["  ",{"fg":6,"bg":0,"bold":true}],[" 54 ",{"fg":3,"bold":true}],["    vector<",{}],["int",{"fg":2,"bold":true}],["> v;                                                                                            ",{}],["|",{"inverse":true}],["~                     ",{"fg":4,"bold":true}]],"43":[["~                   ",{"fg":4,"bold":true}],["|",{"inverse":true}],["  ",{"fg":6,"bg":0,"bold":true}],[" 55 ",{"fg":3,"bold":true}],["    v.begin();                                                                                                ",{}],["|",{"inverse":true}],["~                     ",{"fg":4,"bold":true}]],"44":[["~                   ",{"fg":4,"bold":true}],["|",{"inverse":true}],[">>",{"fg":7,"bg":1,"bold":true}],[" 56 ",{"fg":3,"bold":true}],["    Second* pSecond1 = ",{}],["reinterpret_cast",{"fg":3,"bg":1,"bold":true}],["<Second*>(pLast)",{"bg":1}],[";                                                      ",{}],["|",{"inverse":true}],["~                     ",{"fg":4,"bold":true}]],"45":[["~                   ",{"fg":4,"bold":true}],["|",{"inverse":true}],["  ",{"fg":6,"bg":0,"bold":true}],[" 57 ",{"fg":3,"bold":true}],["    pSecond1->SecondRun2();                                                                                   ",{}],["|",{"inverse":true}],["~                     ",{"fg":4,"bold":true}]],"46":[["[Name] test.cpp      ",{"inverse":true}],[" NORMAL ",{"bold":true}],[" ",{}],["test.cpp ",{"bold":true}],[" Second                                                      unix │ utf-8 │ cpp │  16% ",{}],[" LN  12",{"bold":true}],[":1  ",{}],[" ",{"bold":true,"inverse":true}],[" ~/NERD_tree_1 ",{"bold":true}],["       ",{}]]},"cursor":{"x":27,"y":0,"visible":true}}],[0.010342,{"lines":{"0":[["\" Press <F1> for hel",{"fg":6,"bold":true}],["|",{"inverse":true}],["                                                                                                                    ",{}],["|",{"inverse":true}],["  1 ",{"fg":3,"bold":true}],["\" Press ? for help",{"fg":5,"bold":true}]],"1":[["                    ",{}],["|",{"inverse":true}],["  ",{"fg":6,"bg":0,"bold":true}],[" 12 ",{"fg":3,"bold":true}],["struct",{"fg":2,"bold":true,"underline":true}],[" Second                                                                                                 ",{"underline":true}],["|",{"inverse":true}],["  2 ",{"fg":3,"bold":true}],["                  ",{}]],"2":[["▼",{"fg":3,"bold":true}],[" First",{"fg":5,"bold":true}],[" : ",{}],["struct",{"fg":2,"bold":true}],["    ",{}],["|",{"inverse":true}],["  ",{"fg":6,"bg":0,"bold":true}],[" 13 ",{"fg":3,"bold":true}],["{                                                                                                             ",{}],["|",{"inverse":true}],["  3 ",{"fg":3,"bold":true}],[".. (up a dir)",{"fg":6,"bold":true}],["     ",{}]],"3":[["    [prototypes]",{"fg":6,"bold":true}],["    ",{}],["|",{"inverse":true}],["  ",{"fg":6,"bg":0,"bold":true}],[" 14 ",{"fg":3,"bold":true}],["    ",{}],["virtual",{"fg":2,"bold":true}],[" ",{}],["void",{"fg":2,"bold":true}],[" SecondRun(",{}],["void",{"fg":2,"bold":true}],[") = ",{}],["0",{"fg":5,"bold":true}],[";                                                                         ",{}],["|",{"inverse":true}],["  4 /root/",{"fg":3,"bold":true}],["            ",{}]],"4":[["   ",{}],["+",{"fg":2,"bold":true}],["FirstRun(void)  ",{}],["|",{"inverse":true}],["  ",{"fg":6,"bg":0,"bold":true}],[" 15 ",{"fg":3,"bold":true}],["    ",{}],["virtual",{"fg":2,"bold":true}],[" ",{}],["void",{"fg":2,"bold":true}],[" SecondRun2(",{}],["void",{"fg":2,"bold":true}],[") = ",{}],["0",{"fg":5,"bold":true}],[";                                                                        ",{}],["|",{"inverse":true}],["  5 ",{"fg":3,"bold":true}],["▸ diary/",{"fg":6,"bold":true,"underline":true}],["          ",{"underline":true}]],"5":[["   ",{}],["+",{"fg":2,"bold":true}],["FirstRun2(void) ",{}],["|",{"inverse":true}],["  ",{"fg":6,"bg":0,"bold":true}],[" 16 ",{"fg":3,"bold":true}],["};                                                                                                            ",{}],["|",{"inverse":true}],["  6 ",{"fg":3,"bold":true}],["▸ temp/",{"fg":6,"bold":true}],["           ",{}]],"6":[["                    ",{}],["|",{"inverse":true}],["  ",{"fg":6,"bg":0,"bold":true}],[" 17 ",{"fg":3,"bold":true}],["                                                                                                              ",{}],["|",{"inverse":true}],["  7 ",{"fg":3,"bold":true}],["  anaconda-ks.cfg ",{}]],"7":[["▼",{"fg":3,"bold":true}],[" Last",{"fg":5,"bold":true}],[" : ",{}],["struct",{"fg":2,"bold":true}],["     ",{}],["|",{"inverse":true}],["  ",{"fg":6,"bg":0,"bold":true}],[" 18 ",{"fg":3,"bold":true}],["struct",{"fg":2,"bold":true}],[" Last: ",{}],["public",{"fg":3,"bold":true}],[" First,                                                                                    ",{}],["|",{"inverse":true}],["  8 ",{"fg":3,"bold":true}],["  initial-setup-ks",{}]],"8":[["    [functions]",{"fg":6,"bold":true}],["     ",{}],["|",{"inverse":true}],["  ",{"fg":6,"bg":0,"bold":true}],[" 19 ",{"fg":3,"bold":true}],["    ",{}],["public",{"fg":3,"bold":true}],[" Second                                                                                             ",{}],["|",{"inverse":true}],["  9 ",{"fg":3,"bold":true}],["  test.c          ",{}]],"9":[["   ",{}],["+",{"fg":2,"bold":true}],["FirstRun(void)  ",{}],["|",{"inverse":true}],["  ",{"fg":6,"bg":0,"bold":true}],[" 20 ",{"fg":3,"bold":true}],["{                                                                                                             ",{}],["|",{"inverse":true}],[" 10 ",{"fg":3,"bold":true}],["  test.cpp        ",{}]],"10":[["   ",{}],["+",{"fg":2,"bold":true}],["FirstRun2(void) ",{}],["|",{"inverse":true}],["  ",{"fg":6,"bg":0,"bold":true}],[" 21 ",{"fg":3,"bold":true}],["    ",{}],["// 基类First的虚方法",{"fg":6,"bold":true}],["                                                                                      ",{}],["|",{"inverse":true}],["~                     ",{"fg":4,"bold":true}]],"11":[["   ",{}],["+",{"fg":2,"bold":true}],["~Last()         ",{}],["|",{"inverse":true}],["  ",{"fg":6,"bg":0,"bold":true}],[" 22 ",{"fg":3,"bold":true}],["    ",{}],["virtual",{"fg":2,"bold":true}],[" ",{}],["void",{"fg":2,"bold":true}],[" FirstRun(",{}],["void",{"fg":2,"bold":true}],[")                                                                               ",{}],["|",{"inverse":true}],["~                     ",{"fg":4,"bold":true}]],"12":[["   ",{}],["+",{"fg":2,"bold":true}],["SecondRun(void) ",{}],["|",{"inverse":true}],["  ",{"fg":6,"bg":0,"bold":true}],[" 23 ",{"fg":3,"bold":true}],["    {                                                                                                         ",{}],["|",{"inverse":true}],["~                     ",{"fg":4,"bold":true}]],"13":[["   ",{}],["+",{"fg":2,"bold":true}],["SecondRun2(void)",{}],["|",{"inverse":true}],["  ",{"fg":6,"bg":0,"bold":true}],[" 24 ",{"fg":3,"bold":true}],["    ",{}],["|",{"fg":2,"bold":true}],["   cout << ",{}],["\"First\"",{"fg":5,"bold":true}],[" << endl;                                                                              ",{}],["|",{"inverse":true}],["~                     ",{"fg":4,"bold":true}]],"14":[["                    ",{}],["|",{"inverse":true}],["  ",{"fg":6,"bg":0,"bold":true}],[" 25 ",{"fg":3,"bold":true}],["    }                                                                                                         ",{}],["|",{"inverse":true}],["~                     ",{"fg":4,"bold":true}]],"15":[["▼",{"fg":3,"bold":true}],[" Second",{"fg":5,"bold":true}],[" : ",{}],["struct",{"fg":2,"bold":true}],["   ",{}],["|",{"inverse":true}],["  ",{"fg":6,"bg":0,"bold":true}],[" 26 ",{"fg":3,"bold":true}],["                                                                                                              ",{}],["|",{"inverse":true}],["~                     ",{"fg":4,"bold":true}]],"16":[["    [prototypes]",{"fg":6,"bold":true}],["    ",{}],["|",{"inverse":true}],["  ",{"fg":6,"bg":0,"bold":true}],[" 27 ",{"fg":3,"bold":true}],["    ",{}],["virtual",{"fg":2,"bold":true}],[" ",{}],["void",{"fg":2,"bold":true}],[" FirstRun2(",{}],["void",{"fg":2,"bold":true}],[")                                                                              ",{}],["|",{"inverse":true}],["~                     ",{"fg":4,"bold":true}]],"17":[["   ",{}],["+",{"fg":2,"bold":true}],["SecondRun(void) ",{}],["|",{"inverse":true}],["  ",{"fg":6,"bg":0,"bold":true}],[" 28 ",{"fg":3,"bold":true}],["    {                                                                                                         ",{}],["|",{"inverse":true}],["~                     ",{"fg":4,"bold":true}]],"18":[["   ",{}],["+",{"fg":2,"bold":true}],["SecondRun2(void)",{}],["|",{"inverse":true}],["  ",{"fg":6,"bg":0,"bold":true}],[" 29 ",{"fg":3,"bold":true}],["    ",{}],["|",{"fg":2,"bold":true}],["   cout << ",{}],["\"First2\"",{"fg":5,"bold":true}],[" << endl;                                                                             ",{}],["|",{"inverse":true}],["~                     ",{"fg":4,"bold":true}]],"19":[["                    ",{}],["|",{"inverse":true}],["  ",{"fg":6,"bg":0,"bold":true}],[" 30 ",{"fg":3,"bold":true}],["    }                                                                                                         ",{}],["|",{"inverse":true}],["~                     ",{"fg":4,"bold":true}]],"20":[["▼",{"fg":3,"bold":true}],[" ",{}],["functions",{"fg":6,"bold":true}],["         ",{}],["|",{"inverse":true}],["  ",{"fg":6,"bg":0,"bold":true}],[" 31 ",{"fg":3,"bold":true}],["                                                                                                              ",{}],["|",{"inverse":true}],["~                     ",{"fg":4,"bold":true}]],"21":[["    ",{"underline":true}],["main",{"fg":0,"bg":3}],["(int argc, c",{"underline":true}],["|",{"inverse":true}],["  ",{"fg":6,"bg":0,"bold":true}],[" 32 ",{"fg":3,"bold":true}],["    ",{}],["// 基类Second虚方法",{"fg":6,"bold":true}],["                                                                                       ",{}],["|",{"inverse":true}],["~                     ",{"fg":4,"bold":true}]],"22":[["~                   ",{"fg":4,"bold":true}],["|",{"inverse":true}],["  ",{"fg":6,"bg":0,"bold":true}],[" 33 ",{"fg":3,"bold":true}],["    ",{}],["virtual",{"fg":2,"bold":true}],[" ",{}],["void",{"fg":2,"bold":true}],[" SecondRun(",{}],["void",{"fg":2,"bold":true}],[")                                                                              ",{}],["|",{"inverse":true}],["~                     ",{"fg":4,"bold":true}]],"23":[["~                   ",{"fg":4,"bold":true}],["|",{"inverse":true}],["  ",{"fg":6,"bg":0,"bold":true}],[" 34 ",{"fg":3,"bold":true}],["    {                                                                                                         ",{}],["|",{"inverse":true}],["~                     ",{"fg":4,"bold":true}]],"24":[["~                   ",{"fg":4,"bold":true}],["|",{"inverse":true}],["  ",{"fg":6,"bg":0,"bold":true}],[" 35 ",{"fg":3,"bold":true}],["    ",{}],["|",{"fg":2,"bold":true}],["   cout <<",{}],["\"Second\"",{"fg":5,"bold":true}],[" << endl;                                                                              ",{}],["|",{"inverse":true}],["~                     ",{"fg":4,"bold":true}]],"25":[["~                   ",{"fg":4,"bold":true}],["|",{"inverse":true}],["  ",{"fg":6,"bg":0,"bold":true}],[" 36 ",{"fg":3,"bold":true}],["    }                                                                                                         ",{}],["|",{"inverse":true}],["~                     ",{"fg":4,"bold":true}]],"26":[["~                   ",{"fg":4,"bold":true}],["|",{"inverse":true}],["  ",{"fg":6,"bg":0,"bold":true}],[" 37 ",{"fg":3,"bold":true}],["                                                                                                              ",{}],["|",{"inverse":true}],["~                     ",{"fg":4,"bold":true}]],"27":[["~                   ",{"fg":4,"bold":true}],["|",{"inverse":true}],["  ",{"fg":6,"bg":0,"bold":true}],[" 38 ",{"fg":3,"bold":true}],["    ",{}],["virtual",{"fg":2,"bold":true}],[" ",{}],["void",{"fg":2,"bold":true}],[" SecondRun2(",{}],["void",{"fg":2,"bold":true}],[")                                                                             ",{}],["|",{"inverse":true}],["~                     ",{"fg":4,"bold":true}]],"28":[["~                   ",{"fg":4,"bold":true}],["|",{"inverse":true}],["  ",{"fg":6,"bg":0,"bold":true}],[" 39 ",{"fg":3,"bold":true}],["    {                                                                                                         ",{}],["|",{"inverse":true}],["~                     ",{"fg":4,"bold":true}]],"29":[["~                   ",{"fg":4,"bold":true}],["|",{"inverse":true}],["  ",{"fg":6,"bg":0,"bold":true}],[" 40 ",{"fg":3,"bold":true}],["    ",{}],["|",{"fg":2,"bold":true}],["   cout <<",{}],["\"Second2\"",{"fg":5,"bold":true}],[" << endl;                                                                             ",{}],["|",{"inverse":true}],["~                     ",{"fg":4,"bold":true}]],"30":[["~                   ",{"fg":4,"bold":true}],["|",{"inverse":true}],["  ",{"fg":6,"bg":0,"bold":true}],[" 41 ",{"fg":3,"bold":true}],["    }                                                                                                         ",{}],["|",{"inverse":true}],["~                     ",{"fg":4,"bold":true}]],"31":[["~                   ",{"fg":4,"bold":true}],["|",{"inverse":true}],["  ",{"fg":6,"bg":0,"bold":true}],[" 42 ",{"fg":3,"bold":true}],["                                                                                                              ",{}],["|",{"inverse":true}],["~                     ",{"fg":4,"bold":true}]],"32":[["~                   ",{"fg":4,"bold":true}],["|",{"inverse":true}],["  ",{"fg":6,"bg":0,"bold":true}],[" 43 ",{"fg":3,"bold":true}],["    ",{}],["virtual",{"fg":2,"bold":true}],[" ~Last()                                                                                           ",{}],["|",{"inverse":true}],["~                     ",{"fg":4,"bold":true}]],"33":[["~                   ",{"fg":4,"bold":true}],["|",{"inverse":true}],["  ",{"fg":6,"bg":0,"bold":true}],[" 44 ",{"fg":3,"bold":true}],["    {                                                                                                         ",{}],["|",{"inverse":true}],["~                     ",{"fg":4,"bold":true}]],"34":[["~                   ",{"fg":4,"bold":true}],["|",{"inverse":true}],["  ",{"fg":6,"bg":0,"bold":true}],[" 45 ",{"fg":3,"bold":true}],["                                                                                                              ",{}],["|",{"inverse":true}],["~                     ",{"fg":4,"bold":true}]],"35":[["~                   ",{"fg":4,"bold":true}],["|",{"inverse":true}],["  ",{"fg":6,"bg":0,"bold":true}],[" 46 ",{"fg":3,"bold":true}],["    }                                                                                                         ",{}],["|",{"inverse":true}],["~                     ",{"fg":4,"bold":true}]],"36":[["~                   ",{"fg":4,"bold":true}],["|",{"inverse":true}],["  ",{"fg":6,"bg":0,"bold":true}],[" 47 ",{"fg":3,"bold":true}],["                                                                                                              ",{}],["|",{"inverse":true}],["~                     ",{"fg":4,"bold":true}]]},"cursor":{"x":65,"y":36,"visible":false}}],[0.009176999999999999,{"lines":{"0":[["\" Press <F1> for hel",{"fg":6,"bold":true}],["|",{"inverse":true}],["  ",{"fg":6,"bg":0,"bold":true}],[" 11 ",{"fg":3,"bold":true}],["                                                                                                              ",{"underline":true}],["|",{"inverse":true}],["  1 ",{"fg":3,"bold":true}],["\" Press ? for help",{"fg":5,"bold":true}]],"1":[["                    ",{}],["|",{"inverse":true}],["  ",{"fg":6,"bg":0,"bold":true}],[" 12 ",{"fg":3,"bold":true}],["struct",{"fg":2,"bold":true}],[" Second                                                                                                 ",{}],["|",{"inverse":true}],["  2 ",{"fg":3,"bold":true}],["                  ",{}]],"37":[["~                   ",{"fg":4,"bold":true}],["|",{"inverse":true}],["  ",{"fg":6,"bg":0,"bold":true}],[" 48 ",{"fg":3,"bold":true}],["};                                                                                                            ",{}],["|",{"inverse":true}],["~                     ",{"fg":4,"bold":true}]],"38":[["~                   ",{"fg":4,"bold":true}],["|",{"inverse":true}],["  ",{"fg":6,"bg":0,"bold":true}],[" 49 ",{"fg":3,"bold":true}],["                                                                                                              ",{}],["|",{"inverse":true}],["~                     ",{"fg":4,"bold":true}]],"39":[["~                   ",{"fg":4,"bold":true}],["|",{"inverse":true}],["  ",{"fg":6,"bg":0,"bold":true}],[" 50 ",{"fg":3,"bold":true}],["                                                                                                              ",{}],["|",{"inverse":true}],["~                     ",{"fg":4,"bold":true}]],"40":[["~                   ",{"fg":4,"bold":true}],["|",{"inverse":true}],[">>",{"fg":7,"bg":1,"bold":true}],[" 51 ",{"fg":3,"bold":true}],["int",{"fg":2,"bold":true}],[" main(",{}],["int",{"fg":2,"bold":true}],[" ",{}],["argc",{"bg":1}],[", ",{}],["char",{"fg":2,"bold":true}],["* ",{}],["argv",{"bg":1}],["[])                                                                              ",{}],["|",{"inverse":true}],["~                     ",{"fg":4,"bold":true}]],"41":[["~                   ",{"fg":4,"bold":true}],["|",{"inverse":true}],["  ",{"fg":6,"bg":0,"bold":true}],[" 52 ",{"fg":3,"bold":true}],["{                                                                                                             ",{}],["|",{"inverse":true}],["~                     ",{"fg":4,"bold":true}]],"42":[["~                   ",{"fg":4,"bold":true}],["|",{"inverse":true}],["  ",{"fg":6,"bg":0,"bold":true}],[" 53 ",{"fg":3,"bold":true}],["    Last* pLast = ",{}],["new",{"fg":3,"bold":true}],[" Last();                                                                                 ",{}],["|",{"inverse":true}],["~                     ",{"fg":4,"bold":true}]],"43":[["~                   ",{"fg":4,"bold":true}],["|",{"inverse":true}],["  ",{"fg":6,"bg":0,"bold":true}],[" 54 ",{"fg":3,"bold":true}],["    vector<",{}],["int",{"fg":2,"bold":true}],["> v;                                                                                            ",{}],["|",{"inverse":true}],["~                     ",{"fg":4,"bold":true}]],"44":[["~                   ",{"fg":4,"bold":true}],["|",{"inverse":true}],["  ",{"fg":6,"bg":0,"bold":true}],[" 55 ",{"fg":3,"bold":true}],["    v.begin();                                                                                                ",{}],["|",{"inverse":true}],["~                     ",{"fg":4,"bold":true}]],"45":[["~                   ",{"fg":4,"bold":true}],["|",{"inverse":true}],[">>",{"fg":7,"bg":1,"bold":true}],[" 56 ",{"fg":3,"bold":true}],["    Second* pSecond1 = ",{}],["reinterpret_cast",{"fg":3,"bg":1,"bold":true}],["<Second*>(pLast)",{"bg":1}],[";                                                      ",{}],["|",{"inverse":true}],["~                     ",{"fg":4,"bold":true}]],"46":[["[Name] test.cpp      ",{"inverse":true}],[" NORMAL ",{"bold":true}],[" ",{}],["test.cpp ",{"bold":true}],[" First                                                       unix │ utf-8 │ cpp │  15% ",{}],[" LN  11",{"bold":true}],[":1  ",{}],[" ",{"bold":true,"inverse":true}],[" ~/NERD_tree_1 ",{"bold":true}],["       ",{}]]},"cursor":{"x":27,"y":0,"visible":true}}],[0.025047,{"lines":{"0":[["\" Press <F1> for hel",{"fg":6,"bold":true}],["|",{"inverse":true}],["                                                                                                                    ",{}],["|",{"inverse":true}],["  1 ",{"fg":3,"bold":true}],["\" Press ? for help",{"fg":5,"bold":true}]],"1":[["                    ",{}],["|",{"inverse":true}],["  ",{"fg":6,"bg":0,"bold":true}],[" 11 ",{"fg":3,"bold":true}],["                                                                                                              ",{"underline":true}],["|",{"inverse":true}],["  2 ",{"fg":3,"bold":true}],["                  ",{}]],"2":[["▼",{"fg":3,"bold":true}],[" First",{"fg":5,"bold":true}],[" : ",{}],["struct",{"fg":2,"bold":true}],["    ",{}],["|",{"inverse":true}],["  ",{"fg":6,"bg":0,"bold":true}],[" 12 ",{"fg":3,"bold":true}],["struct",{"fg":2,"bold":true}],[" Second                                                                                                 ",{}],["|",{"inverse":true}],["  3 ",{"fg":3,"bold":true}],[".. (up a dir)",{"fg":6,"bold":true}],["     ",{}]],"3":[["    [prototypes]",{"fg":6,"bold":true}],["    ",{}],["|",{"inverse":true}],["  ",{"fg":6,"bg":0,"bold":true}],[" 13 ",{"fg":3,"bold":true}],["{                                                                                                             ",{}],["|",{"inverse":true}],["  4 /root/",{"fg":3,"bold":true}],["            ",{}]],"4":[["   ",{}],["+",{"fg":2,"bold":true}],["FirstRun(void)  ",{}],["|",{"inverse":true}],["  ",{"fg":6,"bg":0,"bold":true}],[" 14 ",{"fg":3,"bold":true}],["    ",{}],["virtual",{"fg":2,"bold":true}],[" ",{}],["void",{"fg":2,"bold":true}],[" SecondRun(",{}],["void",{"fg":2,"bold":true}],[") = ",{}],["0",{"fg":5,"bold":true}],[";                                                                         ",{}],["|",{"inverse":true}],["  5 ",{"fg":3,"bold":true}],["▸ diary/",{"fg":6,"bold":true,"underline":true}],["          ",{"underline":true}]],"5":[["   ",{}],["+",{"fg":2,"bold":true}],["FirstRun2(void) ",{}],["|",{"inverse":true}],["  ",{"fg":6,"bg":0,"bold":true}],[" 15 ",{"fg":3,"bold":true}],["    ",{}],["virtual",{"fg":2,"bold":true}],[" ",{}],["void",{"fg":2,"bold":true}],[" SecondRun2(",{}],["void",{"fg":2,"bold":true}],[") = ",{}],["0",{"fg":5,"bold":true}],[";                                                                        ",{}],["|",{"inverse":true}],["  6 ",{"fg":3,"bold":true}],["▸ temp/",{"fg":6,"bold":true}],["           ",{}]]},"cursor":{"x":94,"y":5,"visible":false}}],[0.011582,{"lines":{"0":[["\" Press <F1> for hel",{"fg":6,"bold":true}],["|",{"inverse":true}],["  ",{"fg":6,"bg":0,"bold":true}],[" 10 ",{"fg":3,"bold":true}],["};                                                                                                            ",{"underline":true}],["|",{"inverse":true}],["  1 ",{"fg":3,"bold":true}],["\" Press ? for help",{"fg":5,"bold":true}]],"1":[["                    ",{}],["|",{"inverse":true}],["  ",{"fg":6,"bg":0,"bold":true}],[" 11 ",{"fg":3,"bold":true}],["                                                                                                              ",{}],["|",{"inverse":true}],["  2 ",{"fg":3,"bold":true}],["                  ",{}]],"6":[["                    ",{}],["|",{"inverse":true}],["  ",{"fg":6,"bg":0,"bold":true}],[" 16 ",{"fg":3,"bold":true}],["};                                                                                                            ",{}],["|",{"inverse":true}],["  7 ",{"fg":3,"bold":true}],["  anaconda-ks.cfg ",{}]],"7":[["▼",{"fg":3,"bold":true}],[" Last",{"fg":5,"bold":true}],[" : ",{}],["struct",{"fg":2,"bold":true}],["     ",{}],["|",{"inverse":true}],["  ",{"fg":6,"bg":0,"bold":true}],[" 17 ",{"fg":3,"bold":true}],["                                                                                                              ",{}],["|",{"inverse":true}],["  8 ",{"fg":3,"bold":true}],["  initial-setup-ks",{}]],"8":[["    [functions]",{"fg":6,"bold":true}],["     ",{}],["|",{"inverse":true}],["  ",{"fg":6,"bg":0,"bold":true}],[" 18 ",{"fg":3,"bold":true}],["struct",{"fg":2,"bold":true}],[" Last: ",{}],["public",{"fg":3,"bold":true}],[" First,                                                                                    ",{}],["|",{"inverse":true}],["  9 ",{"fg":3,"bold":true}],["  test.c          ",{}]],"9":[["   ",{}],["+",{"fg":2,"bold":true}],["FirstRun(void)  ",{}],["|",{"inverse":true}],["  ",{"fg":6,"bg":0,"bold":true}],[" 19 ",{"fg":3,"bold":true}],["    ",{}],["public",{"fg":3,"bold":true}],[" Second                                                                                             ",{}],["|",{"inverse":true}],[" 10 ",{"fg":3,"bold":true}],["  test.cpp        ",{}]],"10":[["   ",{}],["+",{"fg":2,"bold":true}],["FirstRun2(void) ",{}],["|",{"inverse":true}],["  ",{"fg":6,"bg":0,"bold":true}],[" 20 ",{"fg":3,"bold":true}],["{                                                                                                             ",{}],["|",{"inverse":true}],["~                     ",{"fg":4,"bold":true}]],"11":[["   ",{}],["+",{"fg":2,"bold":true}],["~Last()         ",{}],["|",{"inverse":true}],["  ",{"fg":6,"bg":0,"bold":true}],[" 21 ",{"fg":3,"bold":true}],["    ",{}],["// 基类First的虚方法",{"fg":6,"bold":true}],["                                                                                      ",{}],["|",{"inverse":true}],["~                     ",{"fg":4,"bold":true}]],"12":[["   ",{}],["+",{"fg":2,"bold":true}],["SecondRun(void) ",{}],["|",{"inverse":true}],["  ",{"fg":6,"bg":0,"bold":true}],[" 22 ",{"fg":3,"bold":true}],["    ",{}],["virtual",{"fg":2,"bold":true}],[" ",{}],["void",{"fg":2,"bold":true}],[" FirstRun(",{}],["void",{"fg":2,"bold":true}],[")                                                                               ",{}],["|",{"inverse":true}],["~                     ",{"fg":4,"bold":true}]],"13":[["   ",{}],["+",{"fg":2,"bold":true}],["SecondRun2(void)",{}],["|",{"inverse":true}],["  ",{"fg":6,"bg":0,"bold":true}],[" 23 ",{"fg":3,"bold":true}],["    {                                                                                                         ",{}],["|",{"inverse":true}],["~                     ",{"fg":4,"bold":true}]],"14":[["                    ",{}],["|",{"inverse":true}],["  ",{"fg":6,"bg":0,"bold":true}],[" 24 ",{"fg":3,"bold":true}],["    ",{}],["|",{"fg":2,"bold":true}],["   cout << ",{}],["\"First\"",{"fg":5,"bold":true}],[" << endl;                                                                              ",{}],["|",{"inverse":true}],["~                     ",{"fg":4,"bold":true}]],"15":[["▼",{"fg":3,"bold":true}],[" Second",{"fg":5,"bold":true}],[" : ",{}],["struct",{"fg":2,"bold":true}],["   ",{}],["|",{"inverse":true}],["  ",{"fg":6,"bg":0,"bold":true}],[" 25 ",{"fg":3,"bold":true}],["    }                                                                                                         ",{}],["|",{"inverse":true}],["~                     ",{"fg":4,"bold":true}]],"16":[["    [prototypes]",{"fg":6,"bold":true}],["    ",{}],["|",{"inverse":true}],["  ",{"fg":6,"bg":0,"bold":true}],[" 26 ",{"fg":3,"bold":true}],["                                                                                                              ",{}],["|",{"inverse":true}],["~                     ",{"fg":4,"bold":true}]],"17":[["   ",{}],["+",{"fg":2,"bold":true}],["SecondRun(void) ",{}],["|",{"inverse":true}],["  ",{"fg":6,"bg":0,"bold":true}],[" 27 ",{"fg":3,"bold":true}],["    ",{}],["virtual",{"fg":2,"bold":true}],[" ",{}],["void",{"fg":2,"bold":true}],[" FirstRun2(",{}],["void",{"fg":2,"bold":true}],[")                                                                              ",{}],["|",{"inverse":true}],["~                     ",{"fg":4,"bold":true}]],"18":[["   ",{}],["+",{"fg":2,"bold":true}],["SecondRun2(void)",{}],["|",{"inverse":true}],["  ",{"fg":6,"bg":0,"bold":true}],[" 28 ",{"fg":3,"bold":true}],["    {                                                                                                         ",{}],["|",{"inverse":true}],["~                     ",{"fg":4,"bold":true}]],"19":[["                    ",{}],["|",{"inverse":true}],["  ",{"fg":6,"bg":0,"bold":true}],[" 29 ",{"fg":3,"bold":true}],["    ",{}],["|",{"fg":2,"bold":true}],["   cout << ",{}],["\"First2\"",{"fg":5,"bold":true}],[" << endl;                                                                             ",{}],["|",{"inverse":true}],["~                     ",{"fg":4,"bold":true}]],"20":[["▼",{"fg":3,"bold":true}],[" ",{}],["functions",{"fg":6,"bold":true}],["         ",{}],["|",{"inverse":true}],["  ",{"fg":6,"bg":0,"bold":true}],[" 30 ",{"fg":3,"bold":true}],["    }                                                                                                         ",{}],["|",{"inverse":true}],["~                     ",{"fg":4,"bold":true}]],"21":[["    ",{"underline":true}],["main",{"fg":0,"bg":3}],["(int argc, c",{"underline":true}],["|",{"inverse":true}],["  ",{"fg":6,"bg":0,"bold":true}],[" 31 ",{"fg":3,"bold":true}],["                                                                                                              ",{}],["|",{"inverse":true}],["~                     ",{"fg":4,"bold":true}]],"22":[["~                   ",{"fg":4,"bold":true}],["|",{"inverse":true}],["  ",{"fg":6,"bg":0,"bold":true}],[" 32 ",{"fg":3,"bold":true}],["    ",{}],["// 基类Second虚方法",{"fg":6,"bold":true}],["                                                                                       ",{}],["|",{"inverse":true}],["~                     ",{"fg":4,"bold":true}]],"23":[["~                   ",{"fg":4,"bold":true}],["|",{"inverse":true}],["  ",{"fg":6,"bg":0,"bold":true}],[" 33 ",{"fg":3,"bold":true}],["    ",{}],["virtual",{"fg":2,"bold":true}],[" ",{}],["void",{"fg":2,"bold":true}],[" SecondRun(",{}],["void",{"fg":2,"bold":true}],[")                                                                              ",{}],["|",{"inverse":true}],["~                     ",{"fg":4,"bold":true}]],"24":[["~                   ",{"fg":4,"bold":true}],["|",{"inverse":true}],["  ",{"fg":6,"bg":0,"bold":true}],[" 34 ",{"fg":3,"bold":true}],["    {                                                                                                         ",{}],["|",{"inverse":true}],["~                     ",{"fg":4,"bold":true}]],"25":[["~                   ",{"fg":4,"bold":true}],["|",{"inverse":true}],["  ",{"fg":6,"bg":0,"bold":true}],[" 35 ",{"fg":3,"bold":true}],["    ",{}],["|",{"fg":2,"bold":true}],["   cout <<",{}],["\"Second\"",{"fg":5,"bold":true}],[" << endl;                                                                              ",{}],["|",{"inverse":true}],["~                     ",{"fg":4,"bold":true}]],"26":[["~                   ",{"fg":4,"bold":true}],["|",{"inverse":true}],["  ",{"fg":6,"bg":0,"bold":true}],[" 36 ",{"fg":3,"bold":true}],["    }                                                                                                         ",{}],["|",{"inverse":true}],["~                     ",{"fg":4,"bold":true}]],"27":[["~                   ",{"fg":4,"bold":true}],["|",{"inverse":true}],["  ",{"fg":6,"bg":0,"bold":true}],[" 37 ",{"fg":3,"bold":true}],["                                                                                                              ",{}],["|",{"inverse":true}],["~                     ",{"fg":4,"bold":true}]],"28":[["~                   ",{"fg":4,"bold":true}],["|",{"inverse":true}],["  ",{"fg":6,"bg":0,"bold":true}],[" 38 ",{"fg":3,"bold":true}],["    ",{}],["virtual",{"fg":2,"bold":true}],[" ",{}],["void",{"fg":2,"bold":true}],[" SecondRun2(",{}],["void",{"fg":2,"bold":true}],[")                                                                             ",{}],["|",{"inverse":true}],["~                     ",{"fg":4,"bold":true}]],"29":[["~                   ",{"fg":4,"bold":true}],["|",{"inverse":true}],["  ",{"fg":6,"bg":0,"bold":true}],[" 39 ",{"fg":3,"bold":true}],["    {                                                                                                         ",{}],["|",{"inverse":true}],["~                     ",{"fg":4,"bold":true}]],"30":[["~                   ",{"fg":4,"bold":true}],["|",{"inverse":true}],["  ",{"fg":6,"bg":0,"bold":true}],[" 40 ",{"fg":3,"bold":true}],["    ",{}],["|",{"fg":2,"bold":true}],["   cout <<",{}],["\"Second2\"",{"fg":5,"bold":true}],[" << endl;                                                                             ",{}],["|",{"inverse":true}],["~                     ",{"fg":4,"bold":true}]],"31":[["~                   ",{"fg":4,"bold":true}],["|",{"inverse":true}],["  ",{"fg":6,"bg":0,"bold":true}],[" 41 ",{"fg":3,"bold":true}],["    }                                                                                                         ",{}],["|",{"inverse":true}],["~                     ",{"fg":4,"bold":true}]],"32":[["~                   ",{"fg":4,"bold":true}],["|",{"inverse":true}],["  ",{"fg":6,"bg":0,"bold":true}],[" 42 ",{"fg":3,"bold":true}],["                                                                                                              ",{}],["|",{"inverse":true}],["~                     ",{"fg":4,"bold":true}]],"33":[["~                   ",{"fg":4,"bold":true}],["|",{"inverse":true}],["  ",{"fg":6,"bg":0,"bold":true}],[" 43 ",{"fg":3,"bold":true}],["    ",{}],["virtual",{"fg":2,"bold":true}],[" ~Last()                                                                                           ",{}],["|",{"inverse":true}],["~                     ",{"fg":4,"bold":true}]],"34":[["~                   ",{"fg":4,"bold":true}],["|",{"inverse":true}],["  ",{"fg":6,"bg":0,"bold":true}],[" 44 ",{"fg":3,"bold":true}],["    {                                                                                                         ",{}],["|",{"inverse":true}],["~                     ",{"fg":4,"bold":true}]],"35":[["~                   ",{"fg":4,"bold":true}],["|",{"inverse":true}],["  ",{"fg":6,"bg":0,"bold":true}],[" 45 ",{"fg":3,"bold":true}],["                                                                                                              ",{}],["|",{"inverse":true}],["~                     ",{"fg":4,"bold":true}]],"36":[["~                   ",{"fg":4,"bold":true}],["|",{"inverse":true}],["  ",{"fg":6,"bg":0,"bold":true}],[" 46 ",{"fg":3,"bold":true}],["    }                                                                                                         ",{}],["|",{"inverse":true}],["~                     ",{"fg":4,"bold":true}]],"37":[["~                   ",{"fg":4,"bold":true}],["|",{"inverse":true}],["  ",{"fg":6,"bg":0,"bold":true}],[" 47 ",{"fg":3,"bold":true}],["                                                                                                              ",{}],["|",{"inverse":true}],["~                     ",{"fg":4,"bold":true}]],"38":[["~                   ",{"fg":4,"bold":true}],["|",{"inverse":true}],["  ",{"fg":6,"bg":0,"bold":true}],[" 48 ",{"fg":3,"bold":true}],["};                                                                                                            ",{}],["|",{"inverse":true}],["~                     ",{"fg":4,"bold":true}]],"39":[["~                   ",{"fg":4,"bold":true}],["|",{"inverse":true}],["  ",{"fg":6,"bg":0,"bold":true}],[" 49 ",{"fg":3,"bold":true}],["                                                                                                              ",{}],["|",{"inverse":true}],["~                     ",{"fg":4,"bold":true}]],"40":[["~                   ",{"fg":4,"bold":true}],["|",{"inverse":true}],["  ",{"fg":6,"bg":0,"bold":true}],[" 50 ",{"fg":3,"bold":true}],["                                                                                                              ",{}],["|",{"inverse":true}],["~                     ",{"fg":4,"bold":true}]],"41":[["~                   ",{"fg":4,"bold":true}],["|",{"inverse":true}],[">>",{"fg":7,"bg":1,"bold":true}],[" 51 ",{"fg":3,"bold":true}],["int",{"fg":2,"bold":true}],[" main(",{}],["int",{"fg":2,"bold":true}],[" ",{}],["argc",{"bg":1}],[", ",{}],["char",{"fg":2,"bold":true}],["* ",{}],["argv",{"bg":1}],["[])                                                                              ",{}],["|",{"inverse":true}],["~                     ",{"fg":4,"bold":true}]],"42":[["~                   ",{"fg":4,"bold":true}],["|",{"inverse":true}],["  ",{"fg":6,"bg":0,"bold":true}],[" 52 ",{"fg":3,"bold":true}],["{                                                                                                             ",{}],["|",{"inverse":true}],["~                     ",{"fg":4,"bold":true}]],"43":[["~                   ",{"fg":4,"bold":true}],["|",{"inverse":true}],["  ",{"fg":6,"bg":0,"bold":true}],[" 53 ",{"fg":3,"bold":true}],["    Last* pLast = ",{}],["new",{"fg":3,"bold":true}],[" Last();                                                                                 ",{}],["|",{"inverse":true}],["~                     ",{"fg":4,"bold":true}]],"44":[["~                   ",{"fg":4,"bold":true}],["|",{"inverse":true}],["  ",{"fg":6,"bg":0,"bold":true}],[" 54 ",{"fg":3,"bold":true}],["    vector<",{}],["int",{"fg":2,"bold":true}],["> v;                                                                                            ",{}],["|",{"inverse":true}],["~                     ",{"fg":4,"bold":true}]],"45":[["~                   ",{"fg":4,"bold":true}],["|",{"inverse":true}],["  ",{"fg":6,"bg":0,"bold":true}],[" 55 ",{"fg":3,"bold":true}],["    v.begin();                                                                                                ",{}],["|",{"inverse":true}],["~                     ",{"fg":4,"bold":true}]],"46":[["[Name] test.cpp      ",{"inverse":true}],[" NORMAL ",{"bold":true}],[" ",{}],["test.cpp ",{"bold":true}],[" First                                                       unix │ utf-8 │ cpp │  14% ",{}],[" LN  10",{"bold":true}],[":1  ",{}],[" ",{"bold":true,"inverse":true}],[" ~/NERD_tree_1 ",{"bold":true}],["       ",{}]]},"cursor":{"x":27,"y":0,"visible":true}}],[0.018114,{"lines":{"47":[["                                                                                                                                                     k          ",{}]]},"cursor":{"visible":false}}],[0.001793,{"lines":{"0":[["\" Press <F1> for hel",{"fg":6,"bold":true}],["|",{"inverse":true}],["                                                                                                                    ",{}],["|",{"inverse":true}],["  1 ",{"fg":3,"bold":true}],["\" Press ? for help",{"fg":5,"bold":true}]],"1":[["                    ",{}],["|",{"inverse":true}],["  ",{"fg":6,"bg":0,"bold":true}],[" 10 ",{"fg":3,"bold":true}],["};                                                                                                            ",{"underline":true}],["|",{"inverse":true}],["  2 ",{"fg":3,"bold":true}],["                  ",{}]],"2":[["▼",{"fg":3,"bold":true}],[" First",{"fg":5,"bold":true}],[" : ",{}],["struct",{"fg":2,"bold":true}],["    ",{}],["|",{"inverse":true}],["  ",{"fg":6,"bg":0,"bold":true}],[" 11 ",{"fg":3,"bold":true}],["                                                                                                              ",{}],["|",{"inverse":true}],["  3 ",{"fg":3,"bold":true}],[".. (up a dir)",{"fg":6,"bold":true}],["     ",{}]],"3":[["    [prototypes]",{"fg":6,"bold":true}],["    ",{}],["|",{"inverse":true}],["  ",{"fg":6,"bg":0,"bold":true}],[" 12 ",{"fg":3,"bold":true}],["struct",{"fg":2,"bold":true}],[" Second                                                                                                 ",{}],["|",{"inverse":true}],["  4 /root/",{"fg":3,"bold":true}],["            ",{}]],"4":[["   ",{}],["+",{"fg":2,"bold":true}],["FirstRun(void)  ",{}],["|",{"inverse":true}],["  ",{"fg":6,"bg":0,"bold":true}],[" 13 ",{"fg":3,"bold":true}],["{                                                                                                             ",{}],["|",{"inverse":true}],["  5 ",{"fg":3,"bold":true}],["▸ diary/",{"fg":6,"bold":true,"underline":true}],["          ",{"underline":true}]],"5":[["   ",{}],["+",{"fg":2,"bold":true}],["FirstRun2(void) ",{}],["|",{"inverse":true}],["  ",{"fg":6,"bg":0,"bold":true}],[" 14 ",{"fg":3,"bold":true}],["    ",{}],["virtual",{"fg":2,"bold":true}],[" ",{}],["void",{"fg":2,"bold":true}],[" SecondRun(",{}],["void",{"fg":2,"bold":true}],[") = ",{}],["0",{"fg":5,"bold":true}],[";                                                                         ",{}],["|",{"inverse":true}],["  6 ",{"fg":3,"bold":true}],["▸ temp/",{"fg":6,"bold":true}],["           ",{}]],"6":[["                    ",{}],["|",{"inverse":true}],["  ",{"fg":6,"bg":0,"bold":true}],[" 15 ",{"fg":3,"bold":true}],["    ",{}],["virtual",{"fg":2,"bold":true}],[" ",{}],["void",{"fg":2,"bold":true}],[" SecondRun2(",{}],["void",{"fg":2,"bold":true}],[") = ",{}],["0",{"fg":5,"bold":true}],[";                                                                        ",{}],["|",{"inverse":true}],["  7 ",{"fg":3,"bold":true}],["  anaconda-ks.cfg ",{}]],"7":[["▼",{"fg":3,"bold":true}],[" Last",{"fg":5,"bold":true}],[" : ",{}],["struct",{"fg":2,"bold":true}],["     ",{}],["|",{"inverse":true}],["  ",{"fg":6,"bg":0,"bold":true}],[" 16 ",{"fg":3,"bold":true}],["};                                                                                                            ",{}],["|",{"inverse":true}],["  8 ",{"fg":3,"bold":true}],["  initial-setup-ks",{}]],"8":[["    [functions]",{"fg":6,"bold":true}],["     ",{}],["|",{"inverse":true}],["  ",{"fg":6,"bg":0,"bold":true}],[" 17 ",{"fg":3,"bold":true}],["                                                                                                              ",{}],["|",{"inverse":true}],["  9 ",{"fg":3,"bold":true}],["  test.c          ",{}]],"9":[["   ",{}],["+",{"fg":2,"bold":true}],["FirstRun(void)  ",{}],["|",{"inverse":true}],["  ",{"fg":6,"bg":0,"bold":true}],[" 18 ",{"fg":3,"bold":true}],["struct",{"fg":2,"bold":true}],[" Last: ",{}],["public",{"fg":3,"bold":true}],[" First,                                                                                    ",{}],["|",{"inverse":true}],[" 10 ",{"fg":3,"bold":true}],["  test.cpp        ",{}]],"10":[["   ",{}],["+",{"fg":2,"bold":true}],["FirstRun2(void) ",{}],["|",{"inverse":true}],["  ",{"fg":6,"bg":0,"bold":true}],[" 19 ",{"fg":3,"bold":true}],["    ",{}],["public",{"fg":3,"bold":true}],[" Second                                                                                             ",{}],["|",{"inverse":true}],["~                     ",{"fg":4,"bold":true}]],"11":[["   ",{}],["+",{"fg":2,"bold":true}],["~Last()         ",{}],["|",{"inverse":true}],["  ",{"fg":6,"bg":0,"bold":true}],[" 20 ",{"fg":3,"bold":true}],["{                                                                                                             ",{}],["|",{"inverse":true}],["~                     ",{"fg":4,"bold":true}]],"47":[["                                                                                                                                                                ",{}]]},"cursor":{"x":23,"y":12}}],[0.020816,{"lines":{"12":[["   ",{}],["+",{"fg":2,"bold":true}],["SecondRun(void) ",{}],["|",{"inverse":true}],["  ",{"fg":6,"bg":0,"bold":true}],[" 21 ",{"fg":3,"bold":true}],["    ",{}],["// 基类First的虚方法",{"fg":6,"bold":true}],["                                                                                      ",{}],["|",{"inverse":true}],["~                     ",{"fg":4,"bold":true}]],"13":[["   ",{}],["+",{"fg":2,"bold":true}],["SecondRun2(void)",{}],["|",{"inverse":true}],["  ",{"fg":6,"bg":0,"bold":true}],[" 22 ",{"fg":3,"bold":true}],["    ",{}],["virtual",{"fg":2,"bold":true}],[" ",{}],["void",{"fg":2,"bold":true}],[" FirstRun(",{}],["void",{"fg":2,"bold":true}],[")                                                                               ",{}],["|",{"inverse":true}],["~                     ",{"fg":4,"bold":true}]],"14":[["                    ",{}],["|",{"inverse":true}],["  ",{"fg":6,"bg":0,"bold":true}],[" 23 ",{"fg":3,"bold":true}],["    {                                                                                                         ",{}],["|",{"inverse":true}],["~                     ",{"fg":4,"bold":true}]],"15":[["▼",{"fg":3,"bold":true}],[" Second",{"fg":5,"bold":true}],[" : ",{}],["struct",{"fg":2,"bold":true}],["   ",{}],["|",{"inverse":true}],["  ",{"fg":6,"bg":0,"bold":true}],[" 24 ",{"fg":3,"bold":true}],["    ",{}],["|",{"fg":2,"bold":true}],["   cout << ",{}],["\"First\"",{"fg":5,"bold":true}],[" << endl;                                                                              ",{}],["|",{"inverse":true}],["~                     ",{"fg":4,"bold":true}]],"16":[["    [prototypes]",{"fg":6,"bold":true}],["    ",{}],["|",{"inverse":true}],["  ",{"fg":6,"bg":0,"bold":true}],[" 25 ",{"fg":3,"bold":true}],["    }                                                                                                         ",{}],["|",{"inverse":true}],["~                     ",{"fg":4,"bold":true}]],"17":[["   ",{}],["+",{"fg":2,"bold":true}],["SecondRun(void) ",{}],["|",{"inverse":true}],["  ",{"fg":6,"bg":0,"bold":true}],[" 26 ",{"fg":3,"bold":true}],["                                                                                                              ",{}],["|",{"inverse":true}],["~                     ",{"fg":4,"bold":true}]]},"cursor":{"x":24,"y":18}}],[0.012535,{"lines":{"0":[["\" Press <F1> for hel",{"fg":6,"bold":true}],["|",{"inverse":true}],["  ",{"fg":6,"bg":0,"bold":true}],["  9 ",{"fg":3,"bold":true}],["    ",{"underline":true}],["virtual",{"fg":2,"bold":true,"underline":true}],[" ",{"underline":true}],["void",{"fg":2,"bold":true,"underline":true}],[" FirstRun2(",{"underline":true}],["void",{"fg":2,"bold":true,"underline":true}],[") = ",{"underline":true}],["0",{"fg":5,"bold":true,"underline":true}],[";                                                                         ",{"underline":true}],["|",{"inverse":true}],["  1 ",{"fg":3,"bold":true}],["\" Press ? for help",{"fg":5,"bold":true}]],"1":[["                    ",{}],["|",{"inverse":true}],["  ",{"fg":6,"bg":0,"bold":true}],[" 10 ",{"fg":3,"bold":true}],["};                                                                                                            ",{}],["|",{"inverse":true}],["  2 ",{"fg":3,"bold":true}],["                  ",{}]],"18":[["   ",{}],["+",{"fg":2,"bold":true}],["SecondRun2(void)",{}],["|",{"inverse":true}],["  ",{"fg":6,"bg":0,"bold":true}],[" 27 ",{"fg":3,"bold":true}],["    ",{}],["virtual",{"fg":2,"bold":true}],[" ",{}],["void",{"fg":2,"bold":true}],[" FirstRun2(",{}],["void",{"fg":2,"bold":true}],[")                                                                              ",{}],["|",{"inverse":true}],["~                     ",{"fg":4,"bold":true}]],"19":[["                    ",{}],["|",{"inverse":true}],["  ",{"fg":6,"bg":0,"bold":true}],[" 28 ",{"fg":3,"bold":true}],["    {                                                                                                         ",{}],["|",{"inverse":true}],["~                     ",{"fg":4,"bold":true}]],"20":[["▼",{"fg":3,"bold":true}],[" ",{}],["functions",{"fg":6,"bold":true}],["         ",{}],["|",{"inverse":true}],["  ",{"fg":6,"bg":0,"bold":true}],[" 29 ",{"fg":3,"bold":true}],["    ",{}],["|",{"fg":2,"bold":true}],["   cout << ",{}],["\"First2\"",{"fg":5,"bold":true}],[" << endl;                                                                             ",{}],["|",{"inverse":true}],["~                     ",{"fg":4,"bold":true}]],"21":[["    ",{"underline":true}],["main",{"fg":0,"bg":3}],["(int argc, c",{"underline":true}],["|",{"inverse":true}],["  ",{"fg":6,"bg":0,"bold":true}],[" 30 ",{"fg":3,"bold":true}],["    }                                                                                                         ",{}],["|",{"inverse":true}],["~                     ",{"fg":4,"bold":true}]],"22":[["~                   ",{"fg":4,"bold":true}],["|",{"inverse":true}],["  ",{"fg":6,"bg":0,"bold":true}],[" 31 ",{"fg":3,"bold":true}],["                                                                                                              ",{}],["|",{"inverse":true}],["~                     ",{"fg":4,"bold":true}]],"23":[["~                   ",{"fg":4,"bold":true}],["|",{"inverse":true}],["  ",{"fg":6,"bg":0,"bold":true}],[" 32 ",{"fg":3,"bold":true}],["    ",{}],["// 基类Second虚方法",{"fg":6,"bold":true}],["                                                                                       ",{}],["|",{"inverse":true}],["~                     ",{"fg":4,"bold":true}]],"24":[["~                   ",{"fg":4,"bold":true}],["|",{"inverse":true}],["  ",{"fg":6,"bg":0,"bold":true}],[" 33 ",{"fg":3,"bold":true}],["    ",{}],["virtual",{"fg":2,"bold":true}],[" ",{}],["void",{"fg":2,"bold":true}],[" SecondRun(",{}],["void",{"fg":2,"bold":true}],[")                                                                              ",{}],["|",{"inverse":true}],["~                     ",{"fg":4,"bold":true}]],"25":[["~                   ",{"fg":4,"bold":true}],["|",{"inverse":true}],["  ",{"fg":6,"bg":0,"bold":true}],[" 34 ",{"fg":3,"bold":true}],["    {                                                                                                         ",{}],["|",{"inverse":true}],["~                     ",{"fg":4,"bold":true}]],"26":[["~                   ",{"fg":4,"bold":true}],["|",{"inverse":true}],["  ",{"fg":6,"bg":0,"bold":true}],[" 35 ",{"fg":3,"bold":true}],["    ",{}],["|",{"fg":2,"bold":true}],["   cout <<",{}],["\"Second\"",{"fg":5,"bold":true}],[" << endl;                                                                              ",{}],["|",{"inverse":true}],["~                     ",{"fg":4,"bold":true}]],"27":[["~                   ",{"fg":4,"bold":true}],["|",{"inverse":true}],["  ",{"fg":6,"bg":0,"bold":true}],[" 36 ",{"fg":3,"bold":true}],["    }                                                                                                         ",{}],["|",{"inverse":true}],["~                     ",{"fg":4,"bold":true}]],"28":[["~                   ",{"fg":4,"bold":true}],["|",{"inverse":true}],["  ",{"fg":6,"bg":0,"bold":true}],[" 37 ",{"fg":3,"bold":true}],["                                                                                                              ",{}],["|",{"inverse":true}],["~                     ",{"fg":4,"bold":true}]],"29":[["~                   ",{"fg":4,"bold":true}],["|",{"inverse":true}],["  ",{"fg":6,"bg":0,"bold":true}],[" 38 ",{"fg":3,"bold":true}],["    ",{}],["virtual",{"fg":2,"bold":true}],[" ",{}],["void",{"fg":2,"bold":true}],[" SecondRun2(",{}],["void",{"fg":2,"bold":true}],[")                                                                             ",{}],["|",{"inverse":true}],["~                     ",{"fg":4,"bold":true}]],"30":[["~                   ",{"fg":4,"bold":true}],["|",{"inverse":true}],["  ",{"fg":6,"bg":0,"bold":true}],[" 39 ",{"fg":3,"bold":true}],["    {                                                                                                         ",{}],["|",{"inverse":true}],["~                     ",{"fg":4,"bold":true}]],"31":[["~                   ",{"fg":4,"bold":true}],["|",{"inverse":true}],["  ",{"fg":6,"bg":0,"bold":true}],[" 40 ",{"fg":3,"bold":true}],["    ",{}],["|",{"fg":2,"bold":true}],["   cout <<",{}],["\"Second2\"",{"fg":5,"bold":true}],[" << endl;                                                                             ",{}],["|",{"inverse":true}],["~                     ",{"fg":4,"bold":true}]],"32":[["~                   ",{"fg":4,"bold":true}],["|",{"inverse":true}],["  ",{"fg":6,"bg":0,"bold":true}],[" 41 ",{"fg":3,"bold":true}],["    }                                                                                                         ",{}],["|",{"inverse":true}],["~                     ",{"fg":4,"bold":true}]],"33":[["~                   ",{"fg":4,"bold":true}],["|",{"inverse":true}],["  ",{"fg":6,"bg":0,"bold":true}],[" 42 ",{"fg":3,"bold":true}],["                                                                                                              ",{}],["|",{"inverse":true}],["~                     ",{"fg":4,"bold":true}]],"34":[["~                   ",{"fg":4,"bold":true}],["|",{"inverse":true}],["  ",{"fg":6,"bg":0,"bold":true}],[" 43 ",{"fg":3,"bold":true}],["    ",{}],["virtual",{"fg":2,"bold":true}],[" ~Last()                                                                                           ",{}],["|",{"inverse":true}],["~                     ",{"fg":4,"bold":true}]],"35":[["~                   ",{"fg":4,"bold":true}],["|",{"inverse":true}],["  ",{"fg":6,"bg":0,"bold":true}],[" 44 ",{"fg":3,"bold":true}],["    {                                                                                                         ",{}],["|",{"inverse":true}],["~                     ",{"fg":4,"bold":true}]],"36":[["~                   ",{"fg":4,"bold":true}],["|",{"inverse":true}],["  ",{"fg":6,"bg":0,"bold":true}],[" 45 ",{"fg":3,"bold":true}],["                                                                                                              ",{}],["|",{"inverse":true}],["~                     ",{"fg":4,"bold":true}]],"37":[["~                   ",{"fg":4,"bold":true}],["|",{"inverse":true}],["  ",{"fg":6,"bg":0,"bold":true}],[" 46 ",{"fg":3,"bold":true}],["    }                                                                                                         ",{}],["|",{"inverse":true}],["~                     ",{"fg":4,"bold":true}]],"38":[["~                   ",{"fg":4,"bold":true}],["|",{"inverse":true}],["  ",{"fg":6,"bg":0,"bold":true}],[" 47 ",{"fg":3,"bold":true}],["                                                                                                              ",{}],["|",{"inverse":true}],["~                     ",{"fg":4,"bold":true}]],"39":[["~                   ",{"fg":4,"bold":true}],["|",{"inverse":true}],["  ",{"fg":6,"bg":0,"bold":true}],[" 48 ",{"fg":3,"bold":true}],["};                                                                                                            ",{}],["|",{"inverse":true}],["~                     ",{"fg":4,"bold":true}]],"40":[["~                   ",{"fg":4,"bold":true}],["|",{"inverse":true}],["  ",{"fg":6,"bg":0,"bold":true}],[" 49 ",{"fg":3,"bold":true}],["                                                                                                              ",{}],["|",{"inverse":true}],["~                     ",{"fg":4,"bold":true}]],"41":[["~                   ",{"fg":4,"bold":true}],["|",{"inverse":true}],["  ",{"fg":6,"bg":0,"bold":true}],[" 50 ",{"fg":3,"bold":true}],["                                                                                                              ",{}],["|",{"inverse":true}],["~                     ",{"fg":4,"bold":true}]],"42":[["~                   ",{"fg":4,"bold":true}],["|",{"inverse":true}],[">>",{"fg":7,"bg":1,"bold":true}],[" 51 ",{"fg":3,"bold":true}],["int",{"fg":2,"bold":true}],[" main(",{}],["int",{"fg":2,"bold":true}],[" ",{}],["argc",{"bg":1}],[", ",{}],["char",{"fg":2,"bold":true}],["* ",{}],["argv",{"bg":1}],["[])                                                                              ",{}],["|",{"inverse":true}],["~                     ",{"fg":4,"bold":true}]],"43":[["~                   ",{"fg":4,"bold":true}],["|",{"inverse":true}],["  ",{"fg":6,"bg":0,"bold":true}],[" 52 ",{"fg":3,"bold":true}],["{                                                                                                             ",{}],["|",{"inverse":true}],["~                     ",{"fg":4,"bold":true}]],"44":[["~                   ",{"fg":4,"bold":true}],["|",{"inverse":true}],["  ",{"fg":6,"bg":0,"bold":true}],[" 53 ",{"fg":3,"bold":true}],["    Last* pLast = ",{}],["new",{"fg":3,"bold":true}],[" Last();                                                                                 ",{}],["|",{"inverse":true}],["~                     ",{"fg":4,"bold":true}]],"45":[["~                   ",{"fg":4,"bold":true}],["|",{"inverse":true}],["  ",{"fg":6,"bg":0,"bold":true}],[" 54 ",{"fg":3,"bold":true}],["    vector<",{}],["int",{"fg":2,"bold":true}],["> v;                                                                                            ",{}],["|",{"inverse":true}],["~                     ",{"fg":4,"bold":true}]],"46":[["[Name] test.cpp      ",{"inverse":true}],[" NORMAL ",{"bold":true}],[" ",{}],["test.cpp ",{"bold":true}],[" First                                                       unix │ utf-8 │ cpp │  12% ",{}],[" LN   9",{"bold":true}],[":1  ",{}],[" ",{"bold":true,"inverse":true}],[" ~/NERD_tree_1 ",{"bold":true}],["       ",{}]]},"cursor":{"x":27,"y":0,"visible":true}}],[0.013835,{"lines":{"0":[["\" Press <F1> for hel",{"fg":6,"bold":true}],["|",{"inverse":true}],["  ",{"fg":6,"bg":0,"bold":true}],["  8 ",{"fg":3,"bold":true}],["    ",{"underline":true}],["virtual",{"fg":2,"bold":true,"underline":true}],[" ",{"underline":true}],["void",{"fg":2,"bold":true,"underline":true}],[" FirstRun(",{"underline":true}],["void",{"fg":2,"bold":true,"underline":true}],[") = ",{"underline":true}],["0",{"fg":5,"bold":true,"underline":true}],[";                                                                          ",{"underline":true}],["|",{"inverse":true}],["  1 ",{"fg":3,"bold":true}],["\" Press ? for help",{"fg":5,"bold":true}]],"1":[["                    ",{}],["|",{"inverse":true}],["  ",{"fg":6,"bg":0,"bold":true}],["  9 ",{"fg":3,"bold":true}],["    ",{}],["virtual",{"fg":2,"bold":true}],[" ",{}],["void",{"fg":2,"bold":true}],[" FirstRun2(",{}],["void",{"fg":2,"bold":true}],[") = ",{}],["0",{"fg":5,"bold":true}],[";                              ",{}],["                                           ",{"underline":true}],["|",{"inverse":true}],["  2 ",{"fg":3,"bold":true}],["                  ",{}]],"2":[["▼",{"fg":3,"bold":true}],[" First",{"fg":5,"bold":true}],[" : ",{}],["struct",{"fg":2,"bold":true}],["    ",{}],["|",{"inverse":true}],["  ",{"fg":6,"bg":0,"bold":true}],[" 10 ",{"fg":3,"bold":true}],["};                                                                                                            ",{}],["|",{"inverse":true}],["  3 ",{"fg":3,"bold":true}],[".. (up a dir)",{"fg":6,"bold":true}],["     ",{}]],"3":[["    [prototypes]",{"fg":6,"bold":true}],["    ",{}],["|",{"inverse":true}],["  ",{"fg":6,"bg":0,"bold":true}],[" 11 ",{"fg":3,"bold":true}],["                                                                                                              ",{}],["|",{"inverse":true}],["  4 /root/",{"fg":3,"bold":true}],["            ",{}]],"4":[["   ",{}],["+",{"fg":2,"bold":true}],["FirstRun(void)  ",{}],["|",{"inverse":true}],["  ",{"fg":6,"bg":0,"bold":true}],[" 12 ",{"fg":3,"bold":true}],["struct",{"fg":2,"bold":true}],[" Second                                                                                                 ",{}],["|",{"inverse":true}],["  5 ",{"fg":3,"bold":true}],["▸ diary/",{"fg":6,"bold":true,"underline":true}],["          ",{"underline":true}]],"5":[["   ",{}],["+",{"fg":2,"bold":true}],["FirstRun2(void) ",{}],["|",{"inverse":true}],["  ",{"fg":6,"bg":0,"bold":true}],[" 13 ",{"fg":3,"bold":true}],["{                                                                                                             ",{}],["|",{"inverse":true}],["  6 ",{"fg":3,"bold":true}],["▸ temp/",{"fg":6,"bold":true}],["           ",{}]],"6":[["                    ",{}],["|",{"inverse":true}],["  ",{"fg":6,"bg":0,"bold":true}],[" 14 ",{"fg":3,"bold":true}],["    ",{}],["virtual",{"fg":2,"bold":true}],[" ",{}],["void",{"fg":2,"bold":true}],[" SecondRun(",{}],["void",{"fg":2,"bold":true}],[") = ",{}],["0",{"fg":5,"bold":true}],[";                                                                         ",{}],["|",{"inverse":true}],["  7 ",{"fg":3,"bold":true}],["  anaconda-ks.cfg ",{}]],"7":[["▼",{"fg":3,"bold":true}],[" Last",{"fg":5,"bold":true}],[" : ",{}],["struct",{"fg":2,"bold":true}],["     ",{}],["|",{"inverse":true}],["  ",{"fg":6,"bg":0,"bold":true}],[" 15 ",{"fg":3,"bold":true}],["    ",{}],["virtual",{"fg":2,"bold":true}],[" ",{}],["void",{"fg":2,"bold":true}],[" SecondRun2(",{}],["void",{"fg":2,"bold":true}],[") = ",{}],["0",{"fg":5,"bold":true}],[";                                                                        ",{}],["|",{"inverse":true}],["  8 ",{"fg":3,"bold":true}],["  initial-setup-ks",{}]],"8":[["    [functions]",{"fg":6,"bold":true}],["     ",{}],["|",{"inverse":true}],["  ",{"fg":6,"bg":0,"bold":true}],[" 16 ",{"fg":3,"bold":true}],["};                                                                                                            ",{}],["|",{"inverse":true}],["  9 ",{"fg":3,"bold":true}],["  test.c          ",{}]],"9":[["   ",{}],["+",{"fg":2,"bold":true}],["FirstRun(void)  ",{}],["|",{"inverse":true}],["  ",{"fg":6,"bg":0,"bold":true}],[" 17 ",{"fg":3,"bold":true}],["                                                                                                              ",{}],["|",{"inverse":true}],[" 10 ",{"fg":3,"bold":true}],["  test.cpp        ",{}]],"10":[["   ",{}],["+",{"fg":2,"bold":true}],["FirstRun2(void) ",{}],["|",{"inverse":true}],["  ",{"fg":6,"bg":0,"bold":true}],[" 18 ",{"fg":3,"bold":true}],["struct",{"fg":2,"bold":true}],[" Last: ",{}],["public",{"fg":3,"bold":true}],[" First,                                                                                    ",{}],["|",{"inverse":true}],["~                     ",{"fg":4,"bold":true}]],"11":[["   ",{}],["+",{"fg":2,"bold":true}],["~Last()         ",{}],["|",{"inverse":true}],["  ",{"fg":6,"bg":0,"bold":true}],[" 19 ",{"fg":3,"bold":true}],["    ",{}],["public",{"fg":3,"bold":true}],[" Second                                                                                             ",{}],["|",{"inverse":true}],["~                     ",{"fg":4,"bold":true}]],"12":[["   ",{}],["+",{"fg":2,"bold":true}],["SecondRun(void) ",{}],["|",{"inverse":true}],["  ",{"fg":6,"bg":0,"bold":true}],[" 20 ",{"fg":3,"bold":true}],["{                                                                                                             ",{}],["|",{"inverse":true}],["~                     ",{"fg":4,"bold":true}]],"13":[["   ",{}],["+",{"fg":2,"bold":true}],["SecondRun2(void)",{}],["|",{"inverse":true}],["  ",{"fg":6,"bg":0,"bold":true}],[" 21 ",{"fg":3,"bold":true}],["    ",{}],["// 基类First的虚方法",{"fg":6,"bold":true}],["                                                                                      ",{}],["|",{"inverse":true}],["~                     ",{"fg":4,"bold":true}]],"14":[["                    ",{}],["|",{"inverse":true}],["  ",{"fg":6,"bg":0,"bold":true}],[" 22 ",{"fg":3,"bold":true}],["    ",{}],["virtual",{"fg":2,"bold":true}],[" ",{}],["void",{"fg":2,"bold":true}],[" FirstRun(",{}],["void",{"fg":2,"bold":true}],[")                                                                               ",{}],["|",{"inverse":true}],["~                     ",{"fg":4,"bold":true}]],"15":[["▼",{"fg":3,"bold":true}],[" Second",{"fg":5,"bold":true}],[" : ",{}],["struct",{"fg":2,"bold":true}],["   ",{}],["|",{"inverse":true}],["  ",{"fg":6,"bg":0,"bold":true}],[" 23 ",{"fg":3,"bold":true}],["    {                                                                                                         ",{}],["|",{"inverse":true}],["~                     ",{"fg":4,"bold":true}]],"16":[["    [prototypes]",{"fg":6,"bold":true}],["    ",{}],["|",{"inverse":true}],["  ",{"fg":6,"bg":0,"bold":true}],[" 24 ",{"fg":3,"bold":true}],["    ",{}],["|",{"fg":2,"bold":true}],["   cout << ",{}],["\"First\"",{"fg":5,"bold":true}],[" << endl;                                                                              ",{}],["|",{"inverse":true}],["~                     ",{"fg":4,"bold":true}]],"17":[["   ",{}],["+",{"fg":2,"bold":true}],["SecondRun(void) ",{}],["|",{"inverse":true}],["  ",{"fg":6,"bg":0,"bold":true}],[" 25 ",{"fg":3,"bold":true}],["    }                                                                                                         ",{}],["|",{"inverse":true}],["~                     ",{"fg":4,"bold":true}]],"18":[["   ",{}],["+",{"fg":2,"bold":true}],["SecondRun2(void)",{}],["|",{"inverse":true}],["  ",{"fg":6,"bg":0,"bold":true}],[" 26 ",{"fg":3,"bold":true}],["                                                                                                              ",{}],["|",{"inverse":true}],["~                     ",{"fg":4,"bold":true}]],"19":[["                    ",{}],["|",{"inverse":true}],["  ",{"fg":6,"bg":0,"bold":true}],[" 27 ",{"fg":3,"bold":true}],["    ",{}],["virtual",{"fg":2,"bold":true}],[" ",{}],["void",{"fg":2,"bold":true}],[" FirstRun2(",{}],["void",{"fg":2,"bold":true}],[")                                                                              ",{}],["|",{"inverse":true}],["~                     ",{"fg":4,"bold":true}]],"20":[["▼",{"fg":3,"bold":true}],[" ",{}],["functions",{"fg":6,"bold":true}],["         ",{}],["|",{"inverse":true}],["  ",{"fg":6,"bg":0,"bold":true}],[" 28 ",{"fg":3,"bold":true}],["    {                                                                                                         ",{}],["|",{"inverse":true}],["~                     ",{"fg":4,"bold":true}]],"21":[["    ",{"underline":true}],["main",{"fg":0,"bg":3}],["(int argc, c",{"underline":true}],["|",{"inverse":true}],["  ",{"fg":6,"bg":0,"bold":true}],[" 29 ",{"fg":3,"bold":true}],["    ",{}],["|",{"fg":2,"bold":true}],["   cout << ",{}],["\"First2\"",{"fg":5,"bold":true}],[" << endl;                                                                             ",{}],["|",{"inverse":true}],["~                     ",{"fg":4,"bold":true}]],"22":[["~                   ",{"fg":4,"bold":true}],["|",{"inverse":true}],["  ",{"fg":6,"bg":0,"bold":true}],[" 30 ",{"fg":3,"bold":true}],["    }                                                                                                         ",{}],["|",{"inverse":true}],["~                     ",{"fg":4,"bold":true}]],"23":[["~                   ",{"fg":4,"bold":true}],["|",{"inverse":true}],["  ",{"fg":6,"bg":0,"bold":true}],[" 31 ",{"fg":3,"bold":true}],["                                                                                                              ",{}],["|",{"inverse":true}],["~                     ",{"fg":4,"bold":true}]],"24":[["~                   ",{"fg":4,"bold":true}],["|",{"inverse":true}],["  ",{"fg":6,"bg":0,"bold":true}],[" 32 ",{"fg":3,"bold":true}],["    ",{}],["// 基类Second虚方法",{"fg":6,"bold":true}],["                                                                                       ",{}],["|",{"inverse":true}],["~                     ",{"fg":4,"bold":true}]],"25":[["~                   ",{"fg":4,"bold":true}],["|",{"inverse":true}],["  ",{"fg":6,"bg":0,"bold":true}],[" 33 ",{"fg":3,"bold":true}],["    ",{}],["virtual",{"fg":2,"bold":true}],[" ",{}],["void",{"fg":2,"bold":true}],[" SecondRun(",{}],["void",{"fg":2,"bold":true}],[")                                                                              ",{}],["|",{"inverse":true}],["~                     ",{"fg":4,"bold":true}]],"26":[["~                   ",{"fg":4,"bold":true}],["|",{"inverse":true}],["  ",{"fg":6,"bg":0,"bold":true}],[" 34 ",{"fg":3,"bold":true}],["    {                                                                                                         ",{}],["|",{"inverse":true}],["~                     ",{"fg":4,"bold":true}]],"27":[["~                   ",{"fg":4,"bold":true}],["|",{"inverse":true}],["  ",{"fg":6,"bg":0,"bold":true}],[" 35 ",{"fg":3,"bold":true}],["    ",{}],["|",{"fg":2,"bold":true}],["   cout <<",{}],["\"Second\"",{"fg":5,"bold":true}],[" << endl;                                                                              ",{}],["|",{"inverse":true}],["~                     ",{"fg":4,"bold":true}]],"28":[["~                   ",{"fg":4,"bold":true}],["|",{"inverse":true}],["  ",{"fg":6,"bg":0,"bold":true}],[" 36 ",{"fg":3,"bold":true}],["    }                                                                                                         ",{}],["|",{"inverse":true}],["~                     ",{"fg":4,"bold":true}]],"29":[["~                   ",{"fg":4,"bold":true}],["|",{"inverse":true}],["  ",{"fg":6,"bg":0,"bold":true}],[" 37 ",{"fg":3,"bold":true}],["                                                                                                              ",{}],["|",{"inverse":true}],["~                     ",{"fg":4,"bold":true}]],"30":[["~                   ",{"fg":4,"bold":true}],["|",{"inverse":true}],["  ",{"fg":6,"bg":0,"bold":true}],[" 38 ",{"fg":3,"bold":true}],["    ",{}],["virtual",{"fg":2,"bold":true}],[" ",{}],["void",{"fg":2,"bold":true}],[" SecondRun2(",{}],["void",{"fg":2,"bold":true}],[")                                                                             ",{}],["|",{"inverse":true}],["~                     ",{"fg":4,"bold":true}]],"31":[["~                   ",{"fg":4,"bold":true}],["|",{"inverse":true}],["  ",{"fg":6,"bg":0,"bold":true}],[" 39 ",{"fg":3,"bold":true}],["    {                                                                                                         ",{}],["|",{"inverse":true}],["~                     ",{"fg":4,"bold":true}]],"32":[["~                   ",{"fg":4,"bold":true}],["|",{"inverse":true}],["  ",{"fg":6,"bg":0,"bold":true}],[" 40 ",{"fg":3,"bold":true}],["    ",{}],["|",{"fg":2,"bold":true}],["   cout <<",{}],["\"Second2\"",{"fg":5,"bold":true}],[" << endl;                                                                             ",{}],["|",{"inverse":true}],["~                     ",{"fg":4,"bold":true}]],"33":[["~                   ",{"fg":4,"bold":true}],["|",{"inverse":true}],["  ",{"fg":6,"bg":0,"bold":true}],[" 41 ",{"fg":3,"bold":true}],["    }                                                                                                         ",{}],["|",{"inverse":true}],["~                     ",{"fg":4,"bold":true}]],"34":[["~                   ",{"fg":4,"bold":true}],["|",{"inverse":true}],["  ",{"fg":6,"bg":0,"bold":true}],[" 42 ",{"fg":3,"bold":true}],["                                                                                                              ",{}],["|",{"inverse":true}],["~                     ",{"fg":4,"bold":true}]],"35":[["~                   ",{"fg":4,"bold":true}],["|",{"inverse":true}],["  ",{"fg":6,"bg":0,"bold":true}],[" 43 ",{"fg":3,"bold":true}],["    ",{}],["virtual",{"fg":2,"bold":true}],[" ~Last()                                                                                           ",{}],["|",{"inverse":true}],["~                     ",{"fg":4,"bold":true}]],"36":[["~                   ",{"fg":4,"bold":true}],["|",{"inverse":true}],["  ",{"fg":6,"bg":0,"bold":true}],[" 44 ",{"fg":3,"bold":true}],["    {                                                                                                         ",{}],["|",{"inverse":true}],["~                     ",{"fg":4,"bold":true}]],"37":[["~                   ",{"fg":4,"bold":true}],["|",{"inverse":true}],["  ",{"fg":6,"bg":0,"bold":true}],[" 45 ",{"fg":3,"bold":true}],["                                                                                                              ",{}],["|",{"inverse":true}],["~                     ",{"fg":4,"bold":true}]],"38":[["~                   ",{"fg":4,"bold":true}],["|",{"inverse":true}],["  ",{"fg":6,"bg":0,"bold":true}],[" 46 ",{"fg":3,"bold":true}],["    }                                                                                                         ",{}],["|",{"inverse":true}],["~                     ",{"fg":4,"bold":true}]],"39":[["~                   ",{"fg":4,"bold":true}],["|",{"inverse":true}],["  ",{"fg":6,"bg":0,"bold":true}],[" 47 ",{"fg":3,"bold":true}],["                                                                                                              ",{}],["|",{"inverse":true}],["~                     ",{"fg":4,"bold":true}]],"40":[["~                   ",{"fg":4,"bold":true}],["|",{"inverse":true}],["  ",{"fg":6,"bg":0,"bold":true}],[" 48 ",{"fg":3,"bold":true}],["};                                                                                                            ",{}],["|",{"inverse":true}],["~                     ",{"fg":4,"bold":true}]],"41":[["~                   ",{"fg":4,"bold":true}],["|",{"inverse":true}],["  ",{"fg":6,"bg":0,"bold":true}],[" 49 ",{"fg":3,"bold":true}],["                                                                                                              ",{}],["|",{"inverse":true}],["~                     ",{"fg":4,"bold":true}]],"42":[["~                   ",{"fg":4,"bold":true}],["|",{"inverse":true}],["  ",{"fg":6,"bg":0,"bold":true}],[" 50 ",{"fg":3,"bold":true}],["                                                                                                              ",{}],["|",{"inverse":true}],["~                     ",{"fg":4,"bold":true}]],"43":[["~                   ",{"fg":4,"bold":true}],["|",{"inverse":true}],[">>",{"fg":7,"bg":1,"bold":true}],[" 51 ",{"fg":3,"bold":true}],["int",{"fg":2,"bold":true}],[" main(",{}],["int",{"fg":2,"bold":true}],[" ",{}],["argc",{"bg":1}],[", ",{}],["char",{"fg":2,"bold":true}],["* ",{}],["argv",{"bg":1}],["[])                                                                              ",{}],["|",{"inverse":true}],["~                     ",{"fg":4,"bold":true}]],"44":[["~                   ",{"fg":4,"bold":true}],["|",{"inverse":true}],["  ",{"fg":6,"bg":0,"bold":true}],[" 52 ",{"fg":3,"bold":true}],["{                                                                                                             ",{}],["|",{"inverse":true}],["~                     ",{"fg":4,"bold":true}]],"45":[["~                   ",{"fg":4,"bold":true}],["|",{"inverse":true}],["  ",{"fg":6,"bg":0,"bold":true}],[" 53 ",{"fg":3,"bold":true}],["    Last* pLast = ",{}],["new",{"fg":3,"bold":true}],[" Last();                                                                                 ",{}],["|",{"inverse":true}],["~                     ",{"fg":4,"bold":true}]]},"cursor":{"x":94,"y":1,"visible":false}}],[0.003284,{"lines":{"1":[["                    ",{}],["|",{"inverse":true}],["  ",{"fg":6,"bg":0,"bold":true}],["  9 ",{"fg":3,"bold":true}],["    ",{}],["virtual",{"fg":2,"bold":true}],[" ",{}],["void",{"fg":2,"bold":true}],[" FirstRun2(",{}],["void",{"fg":2,"bold":true}],[") = ",{}],["0",{"fg":5,"bold":true}],[";                                                                         ",{}],["|",{"inverse":true}],["  2 ",{"fg":3,"bold":true}],["                  ",{}]],"46":[["[Name] test.cpp      ",{"inverse":true}],[" NORMAL ",{"bold":true}],[" ",{}],["test.cpp ",{"bold":true}],[" First                                                       unix │ utf-8 │ cpp │  11% ",{}],[" LN   8",{"bold":true}],[":1  ",{}],[" ",{"bold":true,"inverse":true}],[" ~/NERD_tree_1 ",{"bold":true}],["       ",{}]]},"cursor":{"x":27,"y":0,"visible":true}}],[0.029621,{"lines":{"0":[["\" Press <F1> for hel",{"fg":6,"bold":true}],["|",{"inverse":true}],["                                                                                                                    ",{}],["|",{"inverse":true}],["  1 ",{"fg":3,"bold":true}],["\" Press ? for help",{"fg":5,"bold":true}]],"1":[["                    ",{}],["|",{"inverse":true}],["  ",{"fg":6,"bg":0,"bold":true}],["  8 ",{"fg":3,"bold":true}],["    ",{"underline":true}],["virtual",{"fg":2,"bold":true,"underline":true}],[" ",{"underline":true}],["void",{"fg":2,"bold":true,"underline":true}],[" FirstRun(",{"underline":true}],["void",{"fg":2,"bold":true,"underline":true}],[") = ",{"underline":true}],["0",{"fg":5,"bold":true,"underline":true}],[";                                                                          ",{"underline":true}],["|",{"inverse":true}],["  2 ",{"fg":3,"bold":true}],["                  ",{}]],"2":[["▼",{"fg":3,"bold":true}],[" First",{"fg":5,"bold":true}],[" : ",{}],["struct",{"fg":2,"bold":true}],["    ",{}],["|",{"inverse":true}],["  ",{"fg":6,"bg":0,"bold":true}],["  9 ",{"fg":3,"bold":true}],["    ",{}],["virtual",{"fg":2,"bold":true}],[" ",{}],["void",{"fg":2,"bold":true}],[" FirstRun2(",{}],["void",{"fg":2,"bold":true}],[") = ",{}],["0",{"fg":5,"bold":true}],[";                                                                         ",{}],["|",{"inverse":true}],["  3 ",{"fg":3,"bold":true}],[".. (up a dir)",{"fg":6,"bold":true}],["     ",{}]],"3":[["    [prototypes]",{"fg":6,"bold":true}],["    ",{}],["|",{"inverse":true}],["  ",{"fg":6,"bg":0,"bold":true}],[" 10 ",{"fg":3,"bold":true}],["};                                                                                                            ",{}],["|",{"inverse":true}],["  4 /root/",{"fg":3,"bold":true}],["            ",{}]],"4":[["   ",{}],["+",{"fg":2,"bold":true}],["FirstRun(void)  ",{}],["|",{"inverse":true}],["  ",{"fg":6,"bg":0,"bold":true}],[" 11 ",{"fg":3,"bold":true}],["                                                                                                              ",{}],["|",{"inverse":true}],["  5 ",{"fg":3,"bold":true}],["▸ diary/",{"fg":6,"bold":true,"underline":true}],["          ",{"underline":true}]],"5":[["   ",{}],["+",{"fg":2,"bold":true}],["FirstRun2(void) ",{}],["|",{"inverse":true}],["  ",{"fg":6,"bg":0,"bold":true}],[" 12 ",{"fg":3,"bold":true}],["{                                                                                                             ",{}],["|",{"inverse":true}],["  6 ",{"fg":3,"bold":true}],["▸ temp/",{"fg":6,"bold":true}],["           ",{}]]},"cursor":{"y":5,"visible":false}}],[0.008409999999999999,{"lines":{"0":[["\" Press <F1> for hel",{"fg":6,"bold":true}],["|",{"inverse":true}],["  ",{"fg":6,"bg":0,"bold":true}],["  7 ",{"fg":3,"bold":true}],["{",{"bg":6}],["                                                                                                             ",{"underline":true}],["|",{"inverse":true}],["  1 ",{"fg":3,"bold":true}],["\" Press ? for help",{"fg":5,"bold":true}]],"1":[["                    ",{}],["|",{"inverse":true}],["  ",{"fg":6,"bg":0,"bold":true}],["  8 ",{"fg":3,"bold":true}],["    ",{}],["virtual",{"fg":2,"bold":true}],[" ",{}],["void",{"fg":2,"bold":true}],[" FirstRun(",{}],["void",{"fg":2,"bold":true}],[") = ",{}],["0",{"fg":5,"bold":true}],[";                                                                          ",{}],["|",{"inverse":true}],["  2 ",{"fg":3,"bold":true}],["                  ",{}]],"3":[["    [prototypes]",{"fg":6,"bold":true}],["    ",{}],["|",{"inverse":true}],["  ",{"fg":6,"bg":0,"bold":true}],[" 10 ",{"fg":3,"bold":true}],["}",{"bg":6}],[";                                                                                                            ",{}],["|",{"inverse":true}],["  4 /root/",{"fg":3,"bold":true}],["            ",{}]],"5":[["   ",{}],["+",{"fg":2,"bold":true}],["FirstRun2(void) ",{}],["|",{"inverse":true}],["  ",{"fg":6,"bg":0,"bold":true}],[" 12 ",{"fg":3,"bold":true}],["struct",{"fg":2,"bold":true}],[" Second                                                                                                 ",{}],["|",{"inverse":true}],["  6 ",{"fg":3,"bold":true}],["▸ temp/",{"fg":6,"bold":true}],["           ",{}]],"6":[["                    ",{}],["|",{"inverse":true}],["  ",{"fg":6,"bg":0,"bold":true}],[" 13 ",{"fg":3,"bold":true}],["{                                                                                                             ",{}],["|",{"inverse":true}],["  7 ",{"fg":3,"bold":true}],["  anaconda-ks.cfg ",{}]],"7":[["▼",{"fg":3,"bold":true}],[" Last",{"fg":5,"bold":true}],[" : ",{}],["struct",{"fg":2,"bold":true}],["     ",{}],["|",{"inverse":true}],["  ",{"fg":6,"bg":0,"bold":true}],[" 14 ",{"fg":3,"bold":true}],["    ",{}],["virtual",{"fg":2,"bold":true}],[" ",{}],["void",{"fg":2,"bold":true}],[" SecondRun(",{}],["void",{"fg":2,"bold":true}],[") = ",{}],["0",{"fg":5,"bold":true}],[";                                                                         ",{}],["|",{"inverse":true}],["  8 ",{"fg":3,"bold":true}],["  initial-setup-ks",{}]],"8":[["    [functions]",{"fg":6,"bold":true}],["     ",{}],["|",{"inverse":true}],["  ",{"fg":6,"bg":0,"bold":true}],[" 15 ",{"fg":3,"bold":true}],["    ",{}],["virtual",{"fg":2,"bold":true}],[" ",{}],["void",{"fg":2,"bold":true}],[" SecondRun2(",{}],["void",{"fg":2,"bold":true}],[") = ",{}],["0",{"fg":5,"bold":true}],[";                                                                        ",{}],["|",{"inverse":true}],["  9 ",{"fg":3,"bold":true}],["  test.c          ",{}]],"9":[["   ",{}],["+",{"fg":2,"bold":true}],["FirstRun(void)  ",{}],["|",{"inverse":true}],["  ",{"fg":6,"bg":0,"bold":true}],[" 16 ",{"fg":3,"bold":true}],["};                                                                                                            ",{}],["|",{"inverse":true}],[" 10 ",{"fg":3,"bold":true}],["  test.cpp        ",{}]],"10":[["   ",{}],["+",{"fg":2,"bold":true}],["FirstRun2(void) ",{}],["|",{"inverse":true}],["  ",{"fg":6,"bg":0,"bold":true}],[" 17 ",{"fg":3,"bold":true}],["                                                                                                              ",{}],["|",{"inverse":true}],["~                     ",{"fg":4,"bold":true}]],"11":[["   ",{}],["+",{"fg":2,"bold":true}],["~Last()         ",{}],["|",{"inverse":true}],["  ",{"fg":6,"bg":0,"bold":true}],[" 18 ",{"fg":3,"bold":true}],["struct",{"fg":2,"bold":true}],[" Last: ",{}],["public",{"fg":3,"bold":true}],[" First,                                                                                    ",{}],["|",{"inverse":true}],["~                     ",{"fg":4,"bold":true}]],"12":[["   ",{}],["+",{"fg":2,"bold":true}],["SecondRun(void) ",{}],["|",{"inverse":true}],["  ",{"fg":6,"bg":0,"bold":true}],[" 19 ",{"fg":3,"bold":true}],["    ",{}],["public",{"fg":3,"bold":true}],[" Second                                                                                             ",{}],["|",{"inverse":true}],["~                     ",{"fg":4,"bold":true}]],"13":[["   ",{}],["+",{"fg":2,"bold":true}],["SecondRun2(void)",{}],["|",{"inverse":true}],["  ",{"fg":6,"bg":0,"bold":true}],[" 20 ",{"fg":3,"bold":true}],["{                                                                                                             ",{}],["|",{"inverse":true}],["~                     ",{"fg":4,"bold":true}]],"14":[["                    ",{}],["|",{"inverse":true}],["  ",{"fg":6,"bg":0,"bold":true}],[" 21 ",{"fg":3,"bold":true}],["    ",{}],["// 基类First的虚方法",{"fg":6,"bold":true}],["                                                                                      ",{}],["|",{"inverse":true}],["~                     ",{"fg":4,"bold":true}]],"15":[["▼",{"fg":3,"bold":true}],[" Second",{"fg":5,"bold":true}],[" : ",{}],["struct",{"fg":2,"bold":true}],["   ",{}],["|",{"inverse":true}],["  ",{"fg":6,"bg":0,"bold":true}],[" 22 ",{"fg":3,"bold":true}],["    ",{}],["virtual",{"fg":2,"bold":true}],[" ",{}],["void",{"fg":2,"bold":true}],[" FirstRun(",{}],["void",{"fg":2,"bold":true}],[")                                                                               ",{}],["|",{"inverse":true}],["~                     ",{"fg":4,"bold":true}]],"16":[["    [prototypes]",{"fg":6,"bold":true}],["    ",{}],["|",{"inverse":true}],["  ",{"fg":6,"bg":0,"bold":true}],[" 23 ",{"fg":3,"bold":true}],["    {                                                                                                         ",{}],["|",{"inverse":true}],["~                     ",{"fg":4,"bold":true}]],"17":[["   ",{}],["+",{"fg":2,"bold":true}],["SecondRun(void) ",{}],["|",{"inverse":true}],["  ",{"fg":6,"bg":0,"bold":true}],[" 24 ",{"fg":3,"bold":true}],["    ",{}],["|",{"fg":2,"bold":true}],["   cout << ",{}],["\"First\"",{"fg":5,"bold":true}],[" << endl;                                                                              ",{}],["|",{"inverse":true}],["~                     ",{"fg":4,"bold":true}]],"18":[["   ",{}],["+",{"fg":2,"bold":true}],["SecondRun2(void)",{}],["|",{"inverse":true}],["  ",{"fg":6,"bg":0,"bold":true}],[" 25 ",{"fg":3,"bold":true}],["    }                                                                                                         ",{}],["|",{"inverse":true}],["~                     ",{"fg":4,"bold":true}]],"19":[["                    ",{}],["|",{"inverse":true}],["  ",{"fg":6,"bg":0,"bold":true}],[" 26 ",{"fg":3,"bold":true}],["                                                                                                              ",{}],["|",{"inverse":true}],["~                     ",{"fg":4,"bold":true}]],"20":[["▼",{"fg":3,"bold":true}],[" ",{}],["functions",{"fg":6,"bold":true}],["         ",{}],["|",{"inverse":true}],["  ",{"fg":6,"bg":0,"bold":true}],[" 27 ",{"fg":3,"bold":true}],["    ",{}],["virtual",{"fg":2,"bold":true}],[" ",{}],["void",{"fg":2,"bold":true}],[" FirstRun2(",{}],["void",{"fg":2,"bold":true}],[")                                                                              ",{}],["|",{"inverse":true}],["~                     ",{"fg":4,"bold":true}]],"21":[["    ",{"underline":true}],["main",{"fg":0,"bg":3}],["(int argc, c",{"underline":true}],["|",{"inverse":true}],["  ",{"fg":6,"bg":0,"bold":true}],[" 28 ",{"fg":3,"bold":true}],["    {                                                                                                         ",{}],["|",{"inverse":true}],["~                     ",{"fg":4,"bold":true}]],"22":[["~                   ",{"fg":4,"bold":true}],["|",{"inverse":true}],["  ",{"fg":6,"bg":0,"bold":true}],[" 29 ",{"fg":3,"bold":true}],["    ",{}],["|",{"fg":2,"bold":true}],["   cout << ",{}],["\"First2\"",{"fg":5,"bold":true}],[" << endl;                                                                             ",{}],["|",{"inverse":true}],["~                     ",{"fg":4,"bold":true}]],"23":[["~                   ",{"fg":4,"bold":true}],["|",{"inverse":true}],["  ",{"fg":6,"bg":0,"bold":true}],[" 30 ",{"fg":3,"bold":true}],["    }                                                                                                         ",{}],["|",{"inverse":true}],["~                     ",{"fg":4,"bold":true}]],"24":[["~                   ",{"fg":4,"bold":true}],["|",{"inverse":true}],["  ",{"fg":6,"bg":0,"bold":true}],[" 31 ",{"fg":3,"bold":true}],["                                                                                                              ",{}],["|",{"inverse":true}],["~                     ",{"fg":4,"bold":true}]],"25":[["~                   ",{"fg":4,"bold":true}],["|",{"inverse":true}],["  ",{"fg":6,"bg":0,"bold":true}],[" 32 ",{"fg":3,"bold":true}],["    ",{}],["// 基类Second虚方法",{"fg":6,"bold":true}],["                                                                                       ",{}],["|",{"inverse":true}],["~                     ",{"fg":4,"bold":true}]],"26":[["~                   ",{"fg":4,"bold":true}],["|",{"inverse":true}],["  ",{"fg":6,"bg":0,"bold":true}],[" 33 ",{"fg":3,"bold":true}],["    ",{}],["virtual",{"fg":2,"bold":true}],[" ",{}],["void",{"fg":2,"bold":true}],[" SecondRun(",{}],["void",{"fg":2,"bold":true}],[")                                                                              ",{}],["|",{"inverse":true}],["~                     ",{"fg":4,"bold":true}]],"27":[["~                   ",{"fg":4,"bold":true}],["|",{"inverse":true}],["  ",{"fg":6,"bg":0,"bold":true}],[" 34 ",{"fg":3,"bold":true}],["    {                                                                                                         ",{}],["|",{"inverse":true}],["~                     ",{"fg":4,"bold":true}]],"28":[["~                   ",{"fg":4,"bold":true}],["|",{"inverse":true}],["  ",{"fg":6,"bg":0,"bold":true}],[" 35 ",{"fg":3,"bold":true}],["    ",{}],["|",{"fg":2,"bold":true}],["   cout <<",{}],["\"Second\"",{"fg":5,"bold":true}],[" << endl;                                                                              ",{}],["|",{"inverse":true}],["~                     ",{"fg":4,"bold":true}]],"29":[["~                   ",{"fg":4,"bold":true}],["|",{"inverse":true}],["  ",{"fg":6,"bg":0,"bold":true}],[" 36 ",{"fg":3,"bold":true}],["    }                                                                                                         ",{}],["|",{"inverse":true}],["~                     ",{"fg":4,"bold":true}]],"30":[["~                   ",{"fg":4,"bold":true}],["|",{"inverse":true}],["  ",{"fg":6,"bg":0,"bold":true}],[" 37 ",{"fg":3,"bold":true}],["                                                                                                              ",{}],["|",{"inverse":true}],["~                     ",{"fg":4,"bold":true}]],"31":[["~                   ",{"fg":4,"bold":true}],["|",{"inverse":true}],["  ",{"fg":6,"bg":0,"bold":true}],[" 38 ",{"fg":3,"bold":true}],["    ",{}],["virtual",{"fg":2,"bold":true}],[" ",{}],["void",{"fg":2,"bold":true}],[" SecondRun2(",{}],["void",{"fg":2,"bold":true}],[")                                                                             ",{}],["|",{"inverse":true}],["~                     ",{"fg":4,"bold":true}]],"32":[["~                   ",{"fg":4,"bold":true}],["|",{"inverse":true}],["  ",{"fg":6,"bg":0,"bold":true}],[" 39 ",{"fg":3,"bold":true}],["    {                                                                                                         ",{}],["|",{"inverse":true}],["~                     ",{"fg":4,"bold":true}]],"33":[["~                   ",{"fg":4,"bold":true}],["|",{"inverse":true}],["  ",{"fg":6,"bg":0,"bold":true}],[" 40 ",{"fg":3,"bold":true}],["    ",{}],["|",{"fg":2,"bold":true}],["   cout <<",{}],["\"Second2\"",{"fg":5,"bold":true}],[" << endl;                                                                             ",{}],["|",{"inverse":true}],["~                     ",{"fg":4,"bold":true}]],"34":[["~                   ",{"fg":4,"bold":true}],["|",{"inverse":true}],["  ",{"fg":6,"bg":0,"bold":true}],[" 41 ",{"fg":3,"bold":true}],["    }                                                                                                         ",{}],["|",{"inverse":true}],["~                     ",{"fg":4,"bold":true}]],"35":[["~                   ",{"fg":4,"bold":true}],["|",{"inverse":true}],["  ",{"fg":6,"bg":0,"bold":true}],[" 42 ",{"fg":3,"bold":true}],["                                                                                                              ",{}],["|",{"inverse":true}],["~                     ",{"fg":4,"bold":true}]],"36":[["~                   ",{"fg":4,"bold":true}],["|",{"inverse":true}],["  ",{"fg":6,"bg":0,"bold":true}],[" 43 ",{"fg":3,"bold":true}],["    ",{}],["virtual",{"fg":2,"bold":true}],[" ~Last()                                                                                           ",{}],["|",{"inverse":true}],["~                     ",{"fg":4,"bold":true}]],"37":[["~                   ",{"fg":4,"bold":true}],["|",{"inverse":true}],["  ",{"fg":6,"bg":0,"bold":true}],[" 44 ",{"fg":3,"bold":true}],["    {                                                                                                         ",{}],["|",{"inverse":true}],["~                     ",{"fg":4,"bold":true}]],"38":[["~                   ",{"fg":4,"bold":true}],["|",{"inverse":true}],["  ",{"fg":6,"bg":0,"bold":true}],[" 45 ",{"fg":3,"bold":true}],["                                                                                                              ",{}],["|",{"inverse":true}],["~                     ",{"fg":4,"bold":true}]],"39":[["~                   ",{"fg":4,"bold":true}],["|",{"inverse":true}],["  ",{"fg":6,"bg":0,"bold":true}],[" 46 ",{"fg":3,"bold":true}],["    }                                                                                                         ",{}],["|",{"inverse":true}],["~                     ",{"fg":4,"bold":true}]],"40":[["~                   ",{"fg":4,"bold":true}],["|",{"inverse":true}],["  ",{"fg":6,"bg":0,"bold":true}],[" 47 ",{"fg":3,"bold":true}],["                                                                                                              ",{}],["|",{"inverse":true}],["~                     ",{"fg":4,"bold":true}]],"41":[["~                   ",{"fg":4,"bold":true}],["|",{"inverse":true}],["  ",{"fg":6,"bg":0,"bold":true}],[" 48 ",{"fg":3,"bold":true}],["};                                                                                                            ",{}],["|",{"inverse":true}],["~                     ",{"fg":4,"bold":true}]],"42":[["~                   ",{"fg":4,"bold":true}],["|",{"inverse":true}],["  ",{"fg":6,"bg":0,"bold":true}],[" 49 ",{"fg":3,"bold":true}],["                                                                                                              ",{}],["|",{"inverse":true}],["~                     ",{"fg":4,"bold":true}]],"43":[["~                   ",{"fg":4,"bold":true}],["|",{"inverse":true}],["  ",{"fg":6,"bg":0,"bold":true}],[" 50 ",{"fg":3,"bold":true}],["                                                                                                              ",{}],["|",{"inverse":true}],["~                     ",{"fg":4,"bold":true}]],"44":[["~                   ",{"fg":4,"bold":true}],["|",{"inverse":true}],[">>",{"fg":7,"bg":1,"bold":true}],[" 51 ",{"fg":3,"bold":true}],["int",{"fg":2,"bold":true}],[" main(",{}],["int",{"fg":2,"bold":true}],[" ",{}],["argc",{"bg":1}],[", ",{}],["char",{"fg":2,"bold":true}],["* ",{}],["argv",{"bg":1}],["[])                                                                              ",{}],["|",{"inverse":true}],["~                     ",{"fg":4,"bold":true}]],"45":[["~                   ",{"fg":4,"bold":true}],["|",{"inverse":true}],["  ",{"fg":6,"bg":0,"bold":true}],[" 52 ",{"fg":3,"bold":true}],["{                                                                                                             ",{}],["|",{"inverse":true}],["~                     ",{"fg":4,"bold":true}]],"46":[["[Name] test.cpp      ",{"inverse":true}],[" NORMAL ",{"bold":true}],[" ",{}],["test.cpp ",{"bold":true}],[" First                                                       unix │ utf-8 │ cpp │   9% ",{}],[" LN   7",{"bold":true}],[":1  ",{}],[" ",{"bold":true,"inverse":true}],[" ~/NERD_tree_1 ",{"bold":true}],["       ",{}]]},"cursor":{"y":0,"visible":true}}],[0.01658,{"lines":{"0":[["\" Press <F1> for hel",{"fg":6,"bold":true}],["|",{"inverse":true}],["                                                                                                                    ",{}],["|",{"inverse":true}],["  1 ",{"fg":3,"bold":true}],["\" Press ? for help",{"fg":5,"bold":true}]],"1":[["                    ",{}],["|",{"inverse":true}],["  ",{"fg":6,"bg":0,"bold":true}],["  7 ",{"fg":3,"bold":true}],["{",{"bg":6}],["                                                                                                             ",{"underline":true}],["|",{"inverse":true}],["  2 ",{"fg":3,"bold":true}],["                  ",{}]],"2":[["▼",{"fg":3,"bold":true}],[" First",{"fg":5,"bold":true}],[" : ",{}],["struct",{"fg":2,"bold":true}],["    ",{}],["|",{"inverse":true}],["  ",{"fg":6,"bg":0,"bold":true}],["  8 ",{"fg":3,"bold":true}],["    ",{}],["virtual",{"fg":2,"bold":true}],[" ",{}],["void",{"fg":2,"bold":true}],[" FirstRun(",{}],["void",{"fg":2,"bold":true}],[") = ",{}],["0",{"fg":5,"bold":true}],[";                                                                          ",{}],["|",{"inverse":true}],["  3 ",{"fg":3,"bold":true}],[".. (up a dir)",{"fg":6,"bold":true}],["     ",{}]],"3":[["    [prototypes]",{"fg":6,"bold":true}],["    ",{}],["|",{"inverse":true}],["  ",{"fg":6,"bg":0,"bold":true}],["  9 ",{"fg":3,"bold":true}],["    ",{}],["virtual",{"fg":2,"bold":true}],[" ",{}],["void",{"fg":2,"bold":true}],[" FirstRun2(",{}],["void",{"fg":2,"bold":true}],[") = ",{}],["0",{"fg":5,"bold":true}],[";                                                                         ",{}],["|",{"inverse":true}],["  4 /root/",{"fg":3,"bold":true}],["            ",{}]],"4":[["   ",{}],["+",{"fg":2,"bold":true}],["FirstRun(void)  ",{}],["|",{"inverse":true}],["  ",{"fg":6,"bg":0,"bold":true}],[" 10 ",{"fg":3,"bold":true}],["}",{"bg":6}],[";                                                                                                            ",{}],["|",{"inverse":true}],["  5 ",{"fg":3,"bold":true}],["▸ diary/",{"fg":6,"bold":true,"underline":true}],["          ",{"underline":true}]],"5":[["   ",{}],["+",{"fg":2,"bold":true}],["FirstRun2(void) ",{}],["|",{"inverse":true}],["  ",{"fg":6,"bg":0,"bold":true}],[" 11 ",{"fg":3,"bold":true}],["                                                                                                              ",{}],["|",{"inverse":true}],["  6 ",{"fg":3,"bold":true}],["▸ temp/",{"fg":6,"bold":true}],["           ",{}]],"6":[["                    ",{}],["|",{"inverse":true}],["  ",{"fg":6,"bg":0,"bold":true}],[" 12 ",{"fg":3,"bold":true}],["struct",{"fg":2,"bold":true}],[" Second                                                                                                 ",{}],["|",{"inverse":true}],["  7 ",{"fg":3,"bold":true}],["  anaconda-ks.cfg ",{}]],"7":[["▼",{"fg":3,"bold":true}],[" Last",{"fg":5,"bold":true}],[" : ",{}],["struct",{"fg":2,"bold":true}],["     ",{}],["|",{"inverse":true}],["  ",{"fg":6,"bg":0,"bold":true}],[" 13 ",{"fg":3,"bold":true}],["{                                                                                                             ",{}],["|",{"inverse":true}],["  8 ",{"fg":3,"bold":true}],["  initial-setup-ks",{}]],"8":[["    [functions]",{"fg":6,"bold":true}],["     ",{}],["|",{"inverse":true}],["  ",{"fg":6,"bg":0,"bold":true}],[" 14 ",{"fg":3,"bold":true}],["    ",{}],["virtual",{"fg":2,"bold":true}],[" ",{}],["void",{"fg":2,"bold":true}],[" SecondRun(",{}],["void",{"fg":2,"bold":true}],[") = ",{}],["0",{"fg":5,"bold":true}],[";                                                                         ",{}],["|",{"inverse":true}],["  9 ",{"fg":3,"bold":true}],["  test.c          ",{}]],"9":[["   ",{}],["+",{"fg":2,"bold":true}],["FirstRun(void)  ",{}],["|",{"inverse":true}],["  ",{"fg":6,"bg":0,"bold":true}],[" 15 ",{"fg":3,"bold":true}],["    ",{}],["virtual",{"fg":2,"bold":true}],[" ",{}],["void",{"fg":2,"bold":true}],[" SecondRun2(",{}],["void",{"fg":2,"bold":true}],[") = ",{}],["0",{"fg":5,"bold":true}],[";                                                                        ",{}],["|",{"inverse":true}],[" 10 ",{"fg":3,"bold":true}],["  test.cpp        ",{}]],"10":[["   ",{}],["+",{"fg":2,"bold":true}],["FirstRun2(void) ",{}],["|",{"inverse":true}],["  ",{"fg":6,"bg":0,"bold":true}],[" 16 ",{"fg":3,"bold":true}],["};                                                                                                            ",{}],["|",{"inverse":true}],["~                     ",{"fg":4,"bold":true}]],"11":[["   ",{}],["+",{"fg":2,"bold":true}],["~Last()         ",{}],["|",{"inverse":true}],["  ",{"fg":6,"bg":0,"bold":true}],[" 17 ",{"fg":3,"bold":true}],["                                                                                                              ",{}],["|",{"inverse":true}],["~                     ",{"fg":4,"bold":true}]]},"cursor":{"x":100,"y":11,"visible":false}}],[0.002216,{"lines":{"12":[["   ",{}],["+",{"fg":2,"bold":true}],["SecondRun(void) ",{}],["|",{"inverse":true}],["  ",{"fg":6,"bg":0,"bold":true}],[" 18 ",{"fg":3,"bold":true}],["struct",{"fg":2,"bold":true}],[" Last: ",{}],["public",{"fg":3,"bold":true}],[" First,                                                                                    ",{}],["|",{"inverse":true}],["~                     ",{"fg":4,"bold":true}]],"13":[["   ",{}],["+",{"fg":2,"bold":true}],["SecondRun2(void)",{}],["|",{"inverse":true}],["  ",{"fg":6,"bg":0,"bold":true}],[" 19 ",{"fg":3,"bold":true}],["    ",{}],["public",{"fg":3,"bold":true}],[" Second                                                                                             ",{}],["|",{"inverse":true}],["~                     ",{"fg":4,"bold":true}]],"14":[["                    ",{}],["|",{"inverse":true}],["  ",{"fg":6,"bg":0,"bold":true}],[" 20 ",{"fg":3,"bold":true}],["{                                                                                                             ",{}],["|",{"inverse":true}],["~                     ",{"fg":4,"bold":true}]],"15":[["▼",{"fg":3,"bold":true}],[" Second",{"fg":5,"bold":true}],[" : ",{}],["struct",{"fg":2,"bold":true}],["   ",{}],["|",{"inverse":true}],["  ",{"fg":6,"bg":0,"bold":true}],[" 21 ",{"fg":3,"bold":true}],["    ",{}],["// 基类First的虚方法",{"fg":6,"bold":true}],["                                                                                      ",{}],["|",{"inverse":true}],["~                     ",{"fg":4,"bold":true}]],"16":[["    [prototypes]",{"fg":6,"bold":true}],["    ",{}],["|",{"inverse":true}],["  ",{"fg":6,"bg":0,"bold":true}],[" 22 ",{"fg":3,"bold":true}],["    ",{}],["virtual",{"fg":2,"bold":true}],[" ",{}],["void",{"fg":2,"bold":true}],[" FirstRun(",{}],["void",{"fg":2,"bold":true}],[")                                                                               ",{}],["|",{"inverse":true}],["~                     ",{"fg":4,"bold":true}]],"17":[["   ",{}],["+",{"fg":2,"bold":true}],["SecondRun(void) ",{}],["|",{"inverse":true}],["  ",{"fg":6,"bg":0,"bold":true}],[" 23 ",{"fg":3,"bold":true}],["    {                                                                                                         ",{}],["|",{"inverse":true}],["~                     ",{"fg":4,"bold":true}]],"18":[["   ",{}],["+",{"fg":2,"bold":true}],["SecondRun2(void)",{}],["|",{"inverse":true}],["  ",{"fg":6,"bg":0,"bold":true}],[" 24 ",{"fg":3,"bold":true}],["    ",{}],["|",{"fg":2,"bold":true}],["   cout << ",{}],["\"First\"",{"fg":5,"bold":true}],[" << endl;                                                                              ",{}],["|",{"inverse":true}],["~                     ",{"fg":4,"bold":true}]],"19":[["                    ",{}],["|",{"inverse":true}],["  ",{"fg":6,"bg":0,"bold":true}],[" 25 ",{"fg":3,"bold":true}],["    }                                                                                                         ",{}],["|",{"inverse":true}],["~                     ",{"fg":4,"bold":true}]],"20":[["▼",{"fg":3,"bold":true}],[" ",{}],["functions",{"fg":6,"bold":true}],["         ",{}],["|",{"inverse":true}],["  ",{"fg":6,"bg":0,"bold":true}],[" 26 ",{"fg":3,"bold":true}],["                                                                                                              ",{}],["|",{"inverse":true}],["~                     ",{"fg":4,"bold":true}]],"21":[["    ",{"underline":true}],["main",{"fg":0,"bg":3}],["(int argc, c",{"underline":true}],["|",{"inverse":true}],["  ",{"fg":6,"bg":0,"bold":true}],[" 27 ",{"fg":3,"bold":true}],["    ",{}],["virtual",{"fg":2,"bold":true}],[" ",{}],["void",{"fg":2,"bold":true}],[" FirstRun2(",{}],["void",{"fg":2,"bold":true}],[")                                                                              ",{}],["|",{"inverse":true}],["~                     ",{"fg":4,"bold":true}]],"22":[["~                   ",{"fg":4,"bold":true}],["|",{"inverse":true}],["  ",{"fg":6,"bg":0,"bold":true}],[" 28 ",{"fg":3,"bold":true}],["    {                                                                                                         ",{}],["|",{"inverse":true}],["~                     ",{"fg":4,"bold":true}]],"23":[["~                   ",{"fg":4,"bold":true}],["|",{"inverse":true}],["  ",{"fg":6,"bg":0,"bold":true}],[" 29 ",{"fg":3,"bold":true}],["    ",{}],["|",{"fg":2,"bold":true}],["   cout << ",{}],["\"First2\"",{"fg":5,"bold":true}],[" << endl;                                                                             ",{}],["|",{"inverse":true}],["~                     ",{"fg":4,"bold":true}]],"24":[["~                   ",{"fg":4,"bold":true}],["|",{"inverse":true}],["  ",{"fg":6,"bg":0,"bold":true}],[" 30 ",{"fg":3,"bold":true}],["    }                                                                                                         ",{}],["|",{"inverse":true}],["~                     ",{"fg":4,"bold":true}]],"25":[["~                   ",{"fg":4,"bold":true}],["|",{"inverse":true}],["  ",{"fg":6,"bg":0,"bold":true}],[" 31 ",{"fg":3,"bold":true}],["                                                                                                              ",{}],["|",{"inverse":true}],["~                     ",{"fg":4,"bold":true}]],"26":[["~                   ",{"fg":4,"bold":true}],["|",{"inverse":true}],["  ",{"fg":6,"bg":0,"bold":true}],[" 32 ",{"fg":3,"bold":true}],["    ",{}],["// 基类Second虚方法",{"fg":6,"bold":true}],["                                                                                       ",{}],["|",{"inverse":true}],["~                     ",{"fg":4,"bold":true}]],"27":[["~                   ",{"fg":4,"bold":true}],["|",{"inverse":true}],["  ",{"fg":6,"bg":0,"bold":true}],[" 33 ",{"fg":3,"bold":true}],["    ",{}],["virtual",{"fg":2,"bold":true}],[" ",{}],["void",{"fg":2,"bold":true}],[" SecondRun(",{}],["void",{"fg":2,"bold":true}],[")                                                                              ",{}],["|",{"inverse":true}],["~                     ",{"fg":4,"bold":true}]],"28":[["~                   ",{"fg":4,"bold":true}],["|",{"inverse":true}],["  ",{"fg":6,"bg":0,"bold":true}],[" 34 ",{"fg":3,"bold":true}],["    {                                                                                                         ",{}],["|",{"inverse":true}],["~                     ",{"fg":4,"bold":true}]],"29":[["~                   ",{"fg":4,"bold":true}],["|",{"inverse":true}],["  ",{"fg":6,"bg":0,"bold":true}],[" 35 ",{"fg":3,"bold":true}],["    ",{}],["|",{"fg":2,"bold":true}],["   cout <<",{}],["\"Second\"",{"fg":5,"bold":true}],[" << endl;                                                                              ",{}],["|",{"inverse":true}],["~                     ",{"fg":4,"bold":true}]],"30":[["~                   ",{"fg":4,"bold":true}],["|",{"inverse":true}],["  ",{"fg":6,"bg":0,"bold":true}],[" 36 ",{"fg":3,"bold":true}],["    }                                                                                                         ",{}],["|",{"inverse":true}],["~                     ",{"fg":4,"bold":true}]],"31":[["~                   ",{"fg":4,"bold":true}],["|",{"inverse":true}],["  ",{"fg":6,"bg":0,"bold":true}],[" 37 ",{"fg":3,"bold":true}],["                                                                                                              ",{}],["|",{"inverse":true}],["~                     ",{"fg":4,"bold":true}]],"32":[["~                   ",{"fg":4,"bold":true}],["|",{"inverse":true}],["  ",{"fg":6,"bg":0,"bold":true}],[" 38 ",{"fg":3,"bold":true}],["    ",{}],["virtual",{"fg":2,"bold":true}],[" ",{}],["void",{"fg":2,"bold":true}],[" SecondRun2(",{}],["void",{"fg":2,"bold":true}],[")                                                                             ",{}],["|",{"inverse":true}],["~                     ",{"fg":4,"bold":true}]],"33":[["~                   ",{"fg":4,"bold":true}],["|",{"inverse":true}],["  ",{"fg":6,"bg":0,"bold":true}],[" 39 ",{"fg":3,"bold":true}],["    {                                                                                                         ",{}],["|",{"inverse":true}],["~                     ",{"fg":4,"bold":true}]],"34":[["~                   ",{"fg":4,"bold":true}],["|",{"inverse":true}],["  ",{"fg":6,"bg":0,"bold":true}],[" 40 ",{"fg":3,"bold":true}],["    ",{}],["|",{"fg":2,"bold":true}],["   cout <<",{}],["\"Second2\"",{"fg":5,"bold":true}],[" << endl;                                                                             ",{}],["|",{"inverse":true}],["~                     ",{"fg":4,"bold":true}]],"35":[["~                   ",{"fg":4,"bold":true}],["|",{"inverse":true}],["  ",{"fg":6,"bg":0,"bold":true}],[" 41 ",{"fg":3,"bold":true}],["    }                                                                                                         ",{}],["|",{"inverse":true}],["~                     ",{"fg":4,"bold":true}]]},"cursor":{"x":137,"y":35}}],[0.028612,{"lines":{"36":[["~                   ",{"fg":4,"bold":true}],["|",{"inverse":true}],["  ",{"fg":6,"bg":0,"bold":true}],[" 42 ",{"fg":3,"bold":true}],["                                                                                                              ",{}],["|",{"inverse":true}],["~                     ",{"fg":4,"bold":true}]],"37":[["~                   ",{"fg":4,"bold":true}],["|",{"inverse":true}],["  ",{"fg":6,"bg":0,"bold":true}],[" 43 ",{"fg":3,"bold":true}],["    ",{}],["virtual",{"fg":2,"bold":true}],[" ~Last()                                                                                           ",{}],["|",{"inverse":true}],["~                     ",{"fg":4,"bold":true}]],"38":[["~                   ",{"fg":4,"bold":true}],["|",{"inverse":true}],["  ",{"fg":6,"bg":0,"bold":true}],[" 44 ",{"fg":3,"bold":true}],["    {                                                                                                         ",{}],["|",{"inverse":true}],["~                     ",{"fg":4,"bold":true}]],"39":[["~                   ",{"fg":4,"bold":true}],["|",{"inverse":true}],["  ",{"fg":6,"bg":0,"bold":true}],[" 45 ",{"fg":3,"bold":true}],["                                                                                                              ",{}],["|",{"inverse":true}],["~                     ",{"fg":4,"bold":true}]],"40":[["~                   ",{"fg":4,"bold":true}],["|",{"inverse":true}],["  ",{"fg":6,"bg":0,"bold":true}],[" 46 ",{"fg":3,"bold":true}],["    }                                                                                                         ",{}],["|",{"inverse":true}],["~                     ",{"fg":4,"bold":true}]],"41":[["~                   ",{"fg":4,"bold":true}],["|",{"inverse":true}],["  ",{"fg":6,"bg":0,"bold":true}],[" 47 ",{"fg":3,"bold":true}],["                                                                                                              ",{}],["|",{"inverse":true}],["~                     ",{"fg":4,"bold":true}]],"42":[["~                   ",{"fg":4,"bold":true}],["|",{"inverse":true}],["  ",{"fg":6,"bg":0,"bold":true}],[" 48 ",{"fg":3,"bold":true}],["};                                                                                                            ",{}],["|",{"inverse":true}],["~                     ",{"fg":4,"bold":true}]]},"cursor":{"x":63,"y":42}}],[0.011023,{"lines":{"1":[["                    ",{}],["|",{"inverse":true}],["  ",{"fg":6,"bg":0,"bold":true}],["  6 ",{"fg":3,"bold":true}],["struct",{"fg":2,"bold":true,"underline":true}],[" First                                                                                                  ",{"underline":true}],["|",{"inverse":true}],["  2 ",{"fg":3,"bold":true}],["                  ",{}]],"2":[["▼",{"fg":3,"bold":true}],[" First",{"fg":5,"bold":true}],[" : ",{}],["struct",{"fg":2,"bold":true}],["    ",{}],["|",{"inverse":true}],["  ",{"fg":6,"bg":0,"bold":true}],["  7 ",{"fg":3,"bold":true}],["{                                                                                                             ",{}],["|",{"inverse":true}],["  3 ",{"fg":3,"bold":true}],[".. (up a dir)",{"fg":6,"bold":true}],["     ",{}]],"3":[["    [prototypes]",{"fg":6,"bold":true}],["    ",{}],["|",{"inverse":true}],["  ",{"fg":6,"bg":0,"bold":true}],["  8 ",{"fg":3,"bold":true}],["    ",{}],["virtual",{"fg":2,"bold":true}],[" ",{}],["void",{"fg":2,"bold":true}],[" FirstRun(",{}],["void",{"fg":2,"bold":true}],[") = ",{}],["0",{"fg":5,"bold":true}],[";                                                                          ",{}],["|",{"inverse":true}],["  4 /root/",{"fg":3,"bold":true}],["            ",{}]],"4":[["   ",{}],["+",{"fg":2,"bold":true}],["FirstRun(void)  ",{}],["|",{"inverse":true}],["  ",{"fg":6,"bg":0,"bold":true}],["  9 ",{"fg":3,"bold":true}],["    ",{}],["virtual",{"fg":2,"bold":true}],[" ",{}],["void",{"fg":2,"bold":true}],[" FirstRun2(",{}],["void",{"fg":2,"bold":true}],[") = ",{}],["0",{"fg":5,"bold":true}],[";                                                                         ",{}],["|",{"inverse":true}],["  5 ",{"fg":3,"bold":true}],["▸ diary/",{"fg":6,"bold":true,"underline":true}],["          ",{"underline":true}]],"5":[["   ",{}],["+",{"fg":2,"bold":true}],["FirstRun2(void) ",{}],["|",{"inverse":true}],["  ",{"fg":6,"bg":0,"bold":true}],[" 10 ",{"fg":3,"bold":true}],["};                                                                                                            ",{}],["|",{"inverse":true}],["  6 ",{"fg":3,"bold":true}],["▸ temp/",{"fg":6,"bold":true}],["           ",{}]],"6":[["                    ",{}],["|",{"inverse":true}],["  ",{"fg":6,"bg":0,"bold":true}],[" 11 ",{"fg":3,"bold":true}],["                                                                                                              ",{}],["|",{"inverse":true}],["  7 ",{"fg":3,"bold":true}],["  anaconda-ks.cfg ",{}]],"7":[["▼",{"fg":3,"bold":true}],[" Last",{"fg":5,"bold":true}],[" : ",{}],["struct",{"fg":2,"bold":true}],["     ",{}],["|",{"inverse":true}],["  ",{"fg":6,"bg":0,"bold":true}],[" 12 ",{"fg":3,"bold":true}],["struct",{"fg":2,"bold":true}],[" Second                                                                                                 ",{}],["|",{"inverse":true}],["  8 ",{"fg":3,"bold":true}],["  initial-setup-ks",{}]],"8":[["    [functions]",{"fg":6,"bold":true}],["     ",{}],["|",{"inverse":true}],["  ",{"fg":6,"bg":0,"bold":true}],[" 13 ",{"fg":3,"bold":true}],["{                                                                                                             ",{}],["|",{"inverse":true}],["  9 ",{"fg":3,"bold":true}],["  test.c          ",{}]],"9":[["   ",{}],["+",{"fg":2,"bold":true}],["FirstRun(void)  ",{}],["|",{"inverse":true}],["  ",{"fg":6,"bg":0,"bold":true}],[" 14 ",{"fg":3,"bold":true}],["    ",{}],["virtual",{"fg":2,"bold":true}],[" ",{}],["void",{"fg":2,"bold":true}],[" SecondRun(",{}],["void",{"fg":2,"bold":true}],[") = ",{}],["0",{"fg":5,"bold":true}],[";                                                                         ",{}],["|",{"inverse":true}],[" 10 ",{"fg":3,"bold":true}],["  test.cpp        ",{}]],"10":[["   ",{}],["+",{"fg":2,"bold":true}],["FirstRun2(void) ",{}],["|",{"inverse":true}],["  ",{"fg":6,"bg":0,"bold":true}],[" 15 ",{"fg":3,"bold":true}],["    ",{}],["virtual",{"fg":2,"bold":true}],[" ",{}],["void",{"fg":2,"bold":true}],[" SecondRun2(",{}],["void",{"fg":2,"bold":true}],[") = ",{}],["0",{"fg":5,"bold":true}],[";                                                                        ",{}],["|",{"inverse":true}],["~                     ",{"fg":4,"bold":true}]],"11":[["   ",{}],["+",{"fg":2,"bold":true}],["~Last()         ",{}],["|",{"inverse":true}],["  ",{"fg":6,"bg":0,"bold":true}],[" 16 ",{"fg":3,"bold":true}],["};                                                                                                            ",{}],["|",{"inverse":true}],["~                     ",{"fg":4,"bold":true}]],"12":[["   ",{}],["+",{"fg":2,"bold":true}],["SecondRun(void) ",{}],["|",{"inverse":true}],["  ",{"fg":6,"bg":0,"bold":true}],[" 17 ",{"fg":3,"bold":true}],["                                                                                                              ",{}],["|",{"inverse":true}],["~                     ",{"fg":4,"bold":true}]],"13":[["   ",{}],["+",{"fg":2,"bold":true}],["SecondRun2(void)",{}],["|",{"inverse":true}],["  ",{"fg":6,"bg":0,"bold":true}],[" 18 ",{"fg":3,"bold":true}],["struct",{"fg":2,"bold":true}],[" Last: ",{}],["public",{"fg":3,"bold":true}],[" First,                                                                                    ",{}],["|",{"inverse":true}],["~                     ",{"fg":4,"bold":true}]],"14":[["                    ",{}],["|",{"inverse":true}],["  ",{"fg":6,"bg":0,"bold":true}],[" 19 ",{"fg":3,"bold":true}],["    ",{}],["public",{"fg":3,"bold":true}],[" Second                                                                                             ",{}],["|",{"inverse":true}],["~                     ",{"fg":4,"bold":true}]],"15":[["▼",{"fg":3,"bold":true}],[" Second",{"fg":5,"bold":true}],[" : ",{}],["struct",{"fg":2,"bold":true}],["   ",{}],["|",{"inverse":true}],["  ",{"fg":6,"bg":0,"bold":true}],[" 20 ",{"fg":3,"bold":true}],["{                                                                                                             ",{}],["|",{"inverse":true}],["~                     ",{"fg":4,"bold":true}]],"16":[["    [prototypes]",{"fg":6,"bold":true}],["    ",{}],["|",{"inverse":true}],["  ",{"fg":6,"bg":0,"bold":true}],[" 21 ",{"fg":3,"bold":true}],["    ",{}],["// 基类First的虚方法",{"fg":6,"bold":true}],["                                                                                      ",{}],["|",{"inverse":true}],["~                     ",{"fg":4,"bold":true}]],"17":[["   ",{}],["+",{"fg":2,"bold":true}],["SecondRun(void) ",{}],["|",{"inverse":true}],["  ",{"fg":6,"bg":0,"bold":true}],[" 22 ",{"fg":3,"bold":true}],["    ",{}],["virtual",{"fg":2,"bold":true}],[" ",{}],["void",{"fg":2,"bold":true}],[" FirstRun(",{}],["void",{"fg":2,"bold":true}],[")                                                                               ",{}],["|",{"inverse":true}],["~                     ",{"fg":4,"bold":true}]],"18":[["   ",{}],["+",{"fg":2,"bold":true}],["SecondRun2(void)",{}],["|",{"inverse":true}],["  ",{"fg":6,"bg":0,"bold":true}],[" 23 ",{"fg":3,"bold":true}],["    {                                                                                                         ",{}],["|",{"inverse":true}],["~                     ",{"fg":4,"bold":true}]],"19":[["                    ",{}],["|",{"inverse":true}],["  ",{"fg":6,"bg":0,"bold":true}],[" 24 ",{"fg":3,"bold":true}],["    ",{}],["|",{"fg":2,"bold":true}],["   cout << ",{}],["\"First\"",{"fg":5,"bold":true}],[" << endl;                                                                              ",{}],["|",{"inverse":true}],["~                     ",{"fg":4,"bold":true}]],"20":[["▼",{"fg":3,"bold":true}],[" ",{}],["functions",{"fg":6,"bold":true}],["         ",{}],["|",{"inverse":true}],["  ",{"fg":6,"bg":0,"bold":true}],[" 25 ",{"fg":3,"bold":true}],["    }                                                                                                         ",{}],["|",{"inverse":true}],["~                     ",{"fg":4,"bold":true}]],"21":[["    ",{"underline":true}],["main",{"fg":0,"bg":3}],["(int argc, c",{"underline":true}],["|",{"inverse":true}],["  ",{"fg":6,"bg":0,"bold":true}],[" 26 ",{"fg":3,"bold":true}],["                                                                                                              ",{}],["|",{"inverse":true}],["~                     ",{"fg":4,"bold":true}]],"22":[["~                   ",{"fg":4,"bold":true}],["|",{"inverse":true}],["  ",{"fg":6,"bg":0,"bold":true}],[" 27 ",{"fg":3,"bold":true}],["    ",{}],["virtual",{"fg":2,"bold":true}],[" ",{}],["void",{"fg":2,"bold":true}],[" FirstRun2(",{}],["void",{"fg":2,"bold":true}],[")                                                                              ",{}],["|",{"inverse":true}],["~                     ",{"fg":4,"bold":true}]],"23":[["~                   ",{"fg":4,"bold":true}],["|",{"inverse":true}],["  ",{"fg":6,"bg":0,"bold":true}],[" 28 ",{"fg":3,"bold":true}],["    {                                                                                                         ",{}],["|",{"inverse":true}],["~                     ",{"fg":4,"bold":true}]],"24":[["~                   ",{"fg":4,"bold":true}],["|",{"inverse":true}],["  ",{"fg":6,"bg":0,"bold":true}],[" 29 ",{"fg":3,"bold":true}],["    ",{}],["|",{"fg":2,"bold":true}],["   cout << ",{}],["\"First2\"",{"fg":5,"bold":true}],[" << endl;                                                                             ",{}],["|",{"inverse":true}],["~                     ",{"fg":4,"bold":true}]],"25":[["~                   ",{"fg":4,"bold":true}],["|",{"inverse":true}],["  ",{"fg":6,"bg":0,"bold":true}],[" 30 ",{"fg":3,"bold":true}],["    }                                                                                                         ",{}],["|",{"inverse":true}],["~                     ",{"fg":4,"bold":true}]],"26":[["~                   ",{"fg":4,"bold":true}],["|",{"inverse":true}],["  ",{"fg":6,"bg":0,"bold":true}],[" 31 ",{"fg":3,"bold":true}],["                                                                                                              ",{}],["|",{"inverse":true}],["~                     ",{"fg":4,"bold":true}]],"27":[["~                   ",{"fg":4,"bold":true}],["|",{"inverse":true}],["  ",{"fg":6,"bg":0,"bold":true}],[" 32 ",{"fg":3,"bold":true}],["    ",{}],["// 基类Second虚方法",{"fg":6,"bold":true}],["                                                                                       ",{}],["|",{"inverse":true}],["~                     ",{"fg":4,"bold":true}]],"28":[["~                   ",{"fg":4,"bold":true}],["|",{"inverse":true}],["  ",{"fg":6,"bg":0,"bold":true}],[" 33 ",{"fg":3,"bold":true}],["    ",{}],["virtual",{"fg":2,"bold":true}],[" ",{}],["void",{"fg":2,"bold":true}],[" SecondRun(",{}],["void",{"fg":2,"bold":true}],[")                                                                              ",{}],["|",{"inverse":true}],["~                     ",{"fg":4,"bold":true}]],"29":[["~                   ",{"fg":4,"bold":true}],["|",{"inverse":true}],["  ",{"fg":6,"bg":0,"bold":true}],[" 34 ",{"fg":3,"bold":true}],["    {                                                                                                         ",{}],["|",{"inverse":true}],["~                     ",{"fg":4,"bold":true}]],"30":[["~                   ",{"fg":4,"bold":true}],["|",{"inverse":true}],["  ",{"fg":6,"bg":0,"bold":true}],[" 35 ",{"fg":3,"bold":true}],["    ",{}],["|",{"fg":2,"bold":true}],["   cout <<",{}],["\"Second\"",{"fg":5,"bold":true}],[" << endl;                                                                              ",{}],["|",{"inverse":true}],["~                     ",{"fg":4,"bold":true}]],"31":[["~                   ",{"fg":4,"bold":true}],["|",{"inverse":true}],["  ",{"fg":6,"bg":0,"bold":true}],[" 36 ",{"fg":3,"bold":true}],["    }                                                                                                         ",{}],["|",{"inverse":true}],["~                     ",{"fg":4,"bold":true}]],"32":[["~                   ",{"fg":4,"bold":true}],["|",{"inverse":true}],["  ",{"fg":6,"bg":0,"bold":true}],[" 37 ",{"fg":3,"bold":true}],["                                                                                                              ",{}],["|",{"inverse":true}],["~                     ",{"fg":4,"bold":true}]],"33":[["~                   ",{"fg":4,"bold":true}],["|",{"inverse":true}],["  ",{"fg":6,"bg":0,"bold":true}],[" 38 ",{"fg":3,"bold":true}],["    ",{}],["virtual",{"fg":2,"bold":true}],[" ",{}],["void",{"fg":2,"bold":true}],[" SecondRun2(",{}],["void",{"fg":2,"bold":true}],[")                                                                             ",{}],["|",{"inverse":true}],["~                     ",{"fg":4,"bold":true}]],"34":[["~                   ",{"fg":4,"bold":true}],["|",{"inverse":true}],["  ",{"fg":6,"bg":0,"bold":true}],[" 39 ",{"fg":3,"bold":true}],["    {                                                                                                         ",{}],["|",{"inverse":true}],["~                     ",{"fg":4,"bold":true}]],"35":[["~                   ",{"fg":4,"bold":true}],["|",{"inverse":true}],["  ",{"fg":6,"bg":0,"bold":true}],[" 40 ",{"fg":3,"bold":true}],["    ",{}],["|",{"fg":2,"bold":true}],["   cout <<",{}],["\"Second2\"",{"fg":5,"bold":true}],[" << endl;                                                                             ",{}],["|",{"inverse":true}],["~                     ",{"fg":4,"bold":true}]],"43":[["~                   ",{"fg":4,"bold":true}],["|",{"inverse":true}],["  ",{"fg":6,"bg":0,"bold":true}],[" 49 ",{"fg":3,"bold":true}],["                                                                                                              ",{}],["|",{"inverse":true}],["~                     ",{"fg":4,"bold":true}]],"44":[["~                   ",{"fg":4,"bold":true}],["|",{"inverse":true}],["  ",{"fg":6,"bg":0,"bold":true}],[" 50 ",{"fg":3,"bold":true}],["                                                                                                              ",{}],["|",{"inverse":true}],["~                     ",{"fg":4,"bold":true}]],"45":[["~                   ",{"fg":4,"bold":true}],["|",{"inverse":true}],[">>",{"fg":7,"bg":1,"bold":true}],[" 51 ",{"fg":3,"bold":true}],["int",{"fg":2,"bold":true}],[" main(",{}],["int",{"fg":2,"bold":true}],[" ",{}],["argc",{"bg":1}],[", ",{}],["char",{"fg":2,"bold":true}],["* ",{}],["argv",{"bg":1}],["[])                                                                              ",{}],["|",{"inverse":true}],["~                     ",{"fg":4,"bold":true}]],"46":[["[Name] test.cpp      ",{"inverse":true}],[" NORMAL ",{"bold":true}],[" ",{}],["test.cpp ",{"bold":true}],[" First                                                       unix │ utf-8 │ cpp │   8% ",{}],[" LN   6",{"bold":true}],[":1  ",{}],[" ",{"bold":true,"inverse":true}],[" ~/NERD_tree_1 ",{"bold":true}],["       ",{}]]},"cursor":{"x":134,"y":35}}],[0.007109,{"lines":{"0":[["\" Press <F1> for hel",{"fg":6,"bold":true}],["|",{"inverse":true}],["  ",{"fg":6,"bg":0,"bold":true}],["  5 ",{"fg":3,"bold":true}],["                                                                                                              ",{"underline":true}],["|",{"inverse":true}],["  1 ",{"fg":3,"bold":true}],["\" Press ? for help",{"fg":5,"bold":true}]],"1":[["                    ",{}],["|",{"inverse":true}],["  ",{"fg":6,"bg":0,"bold":true}],["  6 ",{"fg":3,"bold":true}],["struct",{"fg":2,"bold":true}],[" First                                                                                                  ",{}],["|",{"inverse":true}],["  2 ",{"fg":3,"bold":true}],["                  ",{}]],"36":[["~                   ",{"fg":4,"bold":true}],["|",{"inverse":true}],["  ",{"fg":6,"bg":0,"bold":true}],[" 41 ",{"fg":3,"bold":true}],["    }                                                                                                         ",{}],["|",{"inverse":true}],["~                     ",{"fg":4,"bold":true}]],"37":[["~                   ",{"fg":4,"bold":true}],["|",{"inverse":true}],["  ",{"fg":6,"bg":0,"bold":true}],[" 42 ",{"fg":3,"bold":true}],["                                                                                                              ",{}],["|",{"inverse":true}],["~                     ",{"fg":4,"bold":true}]],"38":[["~                   ",{"fg":4,"bold":true}],["|",{"inverse":true}],["  ",{"fg":6,"bg":0,"bold":true}],[" 43 ",{"fg":3,"bold":true}],["    ",{}],["virtual",{"fg":2,"bold":true}],[" ~Last()                                                                                           ",{}],["|",{"inverse":true}],["~                     ",{"fg":4,"bold":true}]],"39":[["~                   ",{"fg":4,"bold":true}],["|",{"inverse":true}],["  ",{"fg":6,"bg":0,"bold":true}],[" 44 ",{"fg":3,"bold":true}],["    {                                                                                                         ",{}],["|",{"inverse":true}],["~                     ",{"fg":4,"bold":true}]],"40":[["~                   ",{"fg":4,"bold":true}],["|",{"inverse":true}],["  ",{"fg":6,"bg":0,"bold":true}],[" 45 ",{"fg":3,"bold":true}],["                                                                                                              ",{}],["|",{"inverse":true}],["~                     ",{"fg":4,"bold":true}]],"41":[["~                   ",{"fg":4,"bold":true}],["|",{"inverse":true}],["  ",{"fg":6,"bg":0,"bold":true}],[" 46 ",{"fg":3,"bold":true}],["    }                                                                                                         ",{}],["|",{"inverse":true}],["~                     ",{"fg":4,"bold":true}]],"42":[["~                   ",{"fg":4,"bold":true}],["|",{"inverse":true}],["  ",{"fg":6,"bg":0,"bold":true}],[" 47 ",{"fg":3,"bold":true}],["                                                                                                              ",{}],["|",{"inverse":true}],["~                     ",{"fg":4,"bold":true}]],"43":[["~                   ",{"fg":4,"bold":true}],["|",{"inverse":true}],["  ",{"fg":6,"bg":0,"bold":true}],[" 48 ",{"fg":3,"bold":true}],["};                                                                                                            ",{}],["|",{"inverse":true}],["~                     ",{"fg":4,"bold":true}]],"44":[["~                   ",{"fg":4,"bold":true}],["|",{"inverse":true}],["  ",{"fg":6,"bg":0,"bold":true}],[" 49 ",{"fg":3,"bold":true}],["                                                                                                              ",{}],["|",{"inverse":true}],["~                     ",{"fg":4,"bold":true}]],"45":[["~                   ",{"fg":4,"bold":true}],["|",{"inverse":true}],["  ",{"fg":6,"bg":0,"bold":true}],[" 50 ",{"fg":3,"bold":true}],["                                                                                                              ",{}],["|",{"inverse":true}],["~                     ",{"fg":4,"bold":true}]],"46":[["[Name] test.cpp      ",{"inverse":true}],[" NORMAL ",{"bold":true}],[" ",{}],["test.cpp ",{"bold":true}],["                                                             unix │ utf-8 │ cpp │   7% ",{}],[" LN   5",{"bold":true}],[":1  ",{}],[" ",{"bold":true,"inverse":true}],[" ~/NERD_tree_1 ",{"bold":true}],["       ",{}]]},"cursor":{"x":27,"y":0,"visible":true}}],[0.036199,{"lines":{"0":[["\" Press <F1> for hel",{"fg":6,"bold":true}],["|",{"inverse":true}],["                                                                                                                    ",{}],["|",{"inverse":true}],["  1 ",{"fg":3,"bold":true}],["\" Press ? for help",{"fg":5,"bold":true}]],"1":[["                    ",{}],["|",{"inverse":true}],["  ",{"fg":6,"bg":0,"bold":true}],["  5 ",{"fg":3,"bold":true}],["                                                                                                              ",{"underline":true}],["|",{"inverse":true}],["  2 ",{"fg":3,"bold":true}],["                  ",{}]],"2":[["▼",{"fg":3,"bold":true}],[" First",{"fg":5,"bold":true}],[" : ",{}],["struct",{"fg":2,"bold":true}],["    ",{}],["|",{"inverse":true}],["  ",{"fg":6,"bg":0,"bold":true}],["  6 ",{"fg":3,"bold":true}],["struct",{"fg":2,"bold":true}],[" First                                                                                                  ",{}],["|",{"inverse":true}],["  3 ",{"fg":3,"bold":true}],[".. (up a dir)",{"fg":6,"bold":true}],["     ",{}]],"3":[["    [prototypes]",{"fg":6,"bold":true}],["    ",{}],["|",{"inverse":true}],["  ",{"fg":6,"bg":0,"bold":true}],["  7 ",{"fg":3,"bold":true}],["{                                                                                                             ",{}],["|",{"inverse":true}],["  4 /root/",{"fg":3,"bold":true}],["            ",{}]],"4":[["   ",{}],["+",{"fg":2,"bold":true}],["FirstRun(void)  ",{}],["|",{"inverse":true}],["  ",{"fg":6,"bg":0,"bold":true}],["  8 ",{"fg":3,"bold":true}],["    ",{}],["virtual",{"fg":2,"bold":true}],[" ",{}],["void",{"fg":2,"bold":true}],[" FirstRun(",{}],["void",{"fg":2,"bold":true}],[") = ",{}],["0",{"fg":5,"bold":true}],[";                                                                          ",{}],["|",{"inverse":true}],["  5 ",{"fg":3,"bold":true}],["▸ diary/",{"fg":6,"bold":true,"underline":true}],["          ",{"underline":true}]],"5":[["   ",{}],["+",{"fg":2,"bold":true}],["FirstRun2(void) ",{}],["|",{"inverse":true}],["  ",{"fg":6,"bg":0,"bold":true}],["  9 ",{"fg":3,"bold":true}],["    ",{}],["virtual",{"fg":2,"bold":true}],[" ",{}],["void",{"fg":2,"bold":true}],[" FirstRun2(",{}],["void",{"fg":2,"bold":true}],[") = ",{}],["0",{"fg":5,"bold":true}],[";                                                                         ",{}],["|",{"inverse":true}],["  6 ",{"fg":3,"bold":true}],["▸ temp/",{"fg":6,"bold":true}],["           ",{}]]},"cursor":{"x":94,"y":5,"visible":false}}],[0.011624,{"lines":{"0":[["\" Press <F1> for hel",{"fg":6,"bold":true}],["|",{"inverse":true}],["  ",{"fg":6,"bg":0,"bold":true}],["  4 ",{"fg":3,"bold":true}],["using",{"fg":3,"bold":true,"underline":true}],[" ",{"underline":true}],["namespace",{"fg":2,"bold":true,"underline":true}],[" std;                                                                                          ",{"underline":true}],["|",{"inverse":true}],["  1 ",{"fg":3,"bold":true}],["\" Press ? for help",{"fg":5,"bold":true}]],"1":[["                    ",{}],["|",{"inverse":true}],["  ",{"fg":6,"bg":0,"bold":true}],["  5 ",{"fg":3,"bold":true}],["                                                                                                              ",{}],["|",{"inverse":true}],["  2 ",{"fg":3,"bold":true}],["                  ",{}]],"6":[["                    ",{}],["|",{"inverse":true}],["  ",{"fg":6,"bg":0,"bold":true}],[" 10 ",{"fg":3,"bold":true}],["};                                                                                                            ",{}],["|",{"inverse":true}],["  7 ",{"fg":3,"bold":true}],["  anaconda-ks.cfg ",{}]],"7":[["▼",{"fg":3,"bold":true}],[" Last",{"fg":5,"bold":true}],[" : ",{}],["struct",{"fg":2,"bold":true}],["     ",{}],["|",{"inverse":true}],["  ",{"fg":6,"bg":0,"bold":true}],[" 11 ",{"fg":3,"bold":true}],["                                                                                                              ",{}],["|",{"inverse":true}],["  8 ",{"fg":3,"bold":true}],["  initial-setup-ks",{}]],"8":[["    [functions]",{"fg":6,"bold":true}],["     ",{}],["|",{"inverse":true}],["  ",{"fg":6,"bg":0,"bold":true}],[" 12 ",{"fg":3,"bold":true}],["struct",{"fg":2,"bold":true}],[" Second                                                                                                 ",{}],["|",{"inverse":true}],["  9 ",{"fg":3,"bold":true}],["  test.c          ",{}]],"9":[["   ",{}],["+",{"fg":2,"bold":true}],["FirstRun(void)  ",{}],["|",{"inverse":true}],["  ",{"fg":6,"bg":0,"bold":true}],[" 13 ",{"fg":3,"bold":true}],["{                                                                                                             ",{}],["|",{"inverse":true}],[" 10 ",{"fg":3,"bold":true}],["  test.cpp        ",{}]],"10":[["   ",{}],["+",{"fg":2,"bold":true}],["FirstRun2(void) ",{}],["|",{"inverse":true}],["  ",{"fg":6,"bg":0,"bold":true}],[" 14 ",{"fg":3,"bold":true}],["    ",{}],["virtual",{"fg":2,"bold":true}],[" ",{}],["void",{"fg":2,"bold":true}],[" SecondRun(",{}],["void",{"fg":2,"bold":true}],[") = ",{}],["0",{"fg":5,"bold":true}],[";                                                                         ",{}],["|",{"inverse":true}],["~                     ",{"fg":4,"bold":true}]],"11":[["   ",{}],["+",{"fg":2,"bold":true}],["~Last()         ",{}],["|",{"inverse":true}],["  ",{"fg":6,"bg":0,"bold":true}],[" 15 ",{"fg":3,"bold":true}],["    ",{}],["virtual",{"fg":2,"bold":true}],[" ",{}],["void",{"fg":2,"bold":true}],[" SecondRun2(",{}],["void",{"fg":2,"bold":true}],[") = ",{}],["0",{"fg":5,"bold":true}],[";                                                                        ",{}],["|",{"inverse":true}],["~                     ",{"fg":4,"bold":true}]],"12":[["   ",{}],["+",{"fg":2,"bold":true}],["SecondRun(void) ",{}],["|",{"inverse":true}],["  ",{"fg":6,"bg":0,"bold":true}],[" 16 ",{"fg":3,"bold":true}],["};                                                                                                            ",{}],["|",{"inverse":true}],["~                     ",{"fg":4,"bold":true}]],"13":[["   ",{}],["+",{"fg":2,"bold":true}],["SecondRun2(void)",{}],["|",{"inverse":true}],["  ",{"fg":6,"bg":0,"bold":true}],[" 17 ",{"fg":3,"bold":true}],["                                                                                                              ",{}],["|",{"inverse":true}],["~                     ",{"fg":4,"bold":true}]],"14":[["                    ",{}],["|",{"inverse":true}],["  ",{"fg":6,"bg":0,"bold":true}],[" 18 ",{"fg":3,"bold":true}],["struct",{"fg":2,"bold":true}],[" Last: ",{}],["public",{"fg":3,"bold":true}],[" First,                                                                                    ",{}],["|",{"inverse":true}],["~                     ",{"fg":4,"bold":true}]],"15":[["▼",{"fg":3,"bold":true}],[" Second",{"fg":5,"bold":true}],[" : ",{}],["struct",{"fg":2,"bold":true}],["   ",{}],["|",{"inverse":true}],["  ",{"fg":6,"bg":0,"bold":true}],[" 19 ",{"fg":3,"bold":true}],["    ",{}],["public",{"fg":3,"bold":true}],[" Second                                                                                             ",{}],["|",{"inverse":true}],["~                     ",{"fg":4,"bold":true}]],"16":[["    [prototypes]",{"fg":6,"bold":true}],["    ",{}],["|",{"inverse":true}],["  ",{"fg":6,"bg":0,"bold":true}],[" 20 ",{"fg":3,"bold":true}],["{                                                                                                             ",{}],["|",{"inverse":true}],["~                     ",{"fg":4,"bold":true}]],"17":[["   ",{}],["+",{"fg":2,"bold":true}],["SecondRun(void) ",{}],["|",{"inverse":true}],["  ",{"fg":6,"bg":0,"bold":true}],[" 21 ",{"fg":3,"bold":true}],["    ",{}],["// 基类First的虚方法",{"fg":6,"bold":true}],["                                                                                      ",{}],["|",{"inverse":true}],["~                     ",{"fg":4,"bold":true}]],"18":[["   ",{}],["+",{"fg":2,"bold":true}],["SecondRun2(void)",{}],["|",{"inverse":true}],["  ",{"fg":6,"bg":0,"bold":true}],[" 22 ",{"fg":3,"bold":true}],["    ",{}],["virtual",{"fg":2,"bold":true}],[" ",{}],["void",{"fg":2,"bold":true}],[" FirstRun(",{}],["void",{"fg":2,"bold":true}],[")                                                                               ",{}],["|",{"inverse":true}],["~                     ",{"fg":4,"bold":true}]],"19":[["                    ",{}],["|",{"inverse":true}],["  ",{"fg":6,"bg":0,"bold":true}],[" 23 ",{"fg":3,"bold":true}],["    {                                                                                                         ",{}],["|",{"inverse":true}],["~                     ",{"fg":4,"bold":true}]],"20":[["▼",{"fg":3,"bold":true}],[" ",{}],["functions",{"fg":6,"bold":true}],["         ",{}],["|",{"inverse":true}],["  ",{"fg":6,"bg":0,"bold":true}],[" 24 ",{"fg":3,"bold":true}],["    ",{}],["|",{"fg":2,"bold":true}],["   cout << ",{}],["\"First\"",{"fg":5,"bold":true}],[" << endl;                                                                              ",{}],["|",{"inverse":true}],["~                     ",{"fg":4,"bold":true}]],"21":[["    ",{"underline":true}],["main",{"fg":0,"bg":3}],["(int argc, c",{"underline":true}],["|",{"inverse":true}],["  ",{"fg":6,"bg":0,"bold":true}],[" 25 ",{"fg":3,"bold":true}],["    }                                                                                                         ",{}],["|",{"inverse":true}],["~                     ",{"fg":4,"bold":true}]],"22":[["~                   ",{"fg":4,"bold":true}],["|",{"inverse":true}],["  ",{"fg":6,"bg":0,"bold":true}],[" 26 ",{"fg":3,"bold":true}],["                                                                                                              ",{}],["|",{"inverse":true}],["~                     ",{"fg":4,"bold":true}]],"23":[["~                   ",{"fg":4,"bold":true}],["|",{"inverse":true}],["  ",{"fg":6,"bg":0,"bold":true}],[" 27 ",{"fg":3,"bold":true}],["    ",{}],["virtual",{"fg":2,"bold":true}],[" ",{}],["void",{"fg":2,"bold":true}],[" FirstRun2(",{}],["void",{"fg":2,"bold":true}],[")                                                                              ",{}],["|",{"inverse":true}],["~                     ",{"fg":4,"bold":true}]],"24":[["~                   ",{"fg":4,"bold":true}],["|",{"inverse":true}],["  ",{"fg":6,"bg":0,"bold":true}],[" 28 ",{"fg":3,"bold":true}],["    {                                                                                                         ",{}],["|",{"inverse":true}],["~                     ",{"fg":4,"bold":true}]],"25":[["~                   ",{"fg":4,"bold":true}],["|",{"inverse":true}],["  ",{"fg":6,"bg":0,"bold":true}],[" 29 ",{"fg":3,"bold":true}],["    ",{}],["|",{"fg":2,"bold":true}],["   cout << ",{}],["\"First2\"",{"fg":5,"bold":true}],[" << endl;                                                                             ",{}],["|",{"inverse":true}],["~                     ",{"fg":4,"bold":true}]],"26":[["~                   ",{"fg":4,"bold":true}],["|",{"inverse":true}],["  ",{"fg":6,"bg":0,"bold":true}],[" 30 ",{"fg":3,"bold":true}],["    }                                                                                                         ",{}],["|",{"inverse":true}],["~                     ",{"fg":4,"bold":true}]],"27":[["~                   ",{"fg":4,"bold":true}],["|",{"inverse":true}],["  ",{"fg":6,"bg":0,"bold":true}],[" 31 ",{"fg":3,"bold":true}],["                                                                                                              ",{}],["|",{"inverse":true}],["~                     ",{"fg":4,"bold":true}]],"28":[["~                   ",{"fg":4,"bold":true}],["|",{"inverse":true}],["  ",{"fg":6,"bg":0,"bold":true}],[" 32 ",{"fg":3,"bold":true}],["    ",{}],["// 基类Second虚方法",{"fg":6,"bold":true}],["                                                                                       ",{}],["|",{"inverse":true}],["~                     ",{"fg":4,"bold":true}]],"29":[["~                   ",{"fg":4,"bold":true}],["|",{"inverse":true}],["  ",{"fg":6,"bg":0,"bold":true}],[" 33 ",{"fg":3,"bold":true}],["    ",{}],["virtual",{"fg":2,"bold":true}],[" ",{}],["void",{"fg":2,"bold":true}],[" SecondRun(",{}],["void",{"fg":2,"bold":true}],[")                                                                              ",{}],["|",{"inverse":true}],["~                     ",{"fg":4,"bold":true}]],"30":[["~                   ",{"fg":4,"bold":true}],["|",{"inverse":true}],["  ",{"fg":6,"bg":0,"bold":true}],[" 34 ",{"fg":3,"bold":true}],["    {                                                                                                         ",{}],["|",{"inverse":true}],["~                     ",{"fg":4,"bold":true}]],"31":[["~                   ",{"fg":4,"bold":true}],["|",{"inverse":true}],["  ",{"fg":6,"bg":0,"bold":true}],[" 35 ",{"fg":3,"bold":true}],["    ",{}],["|",{"fg":2,"bold":true}],["   cout <<",{}],["\"Second\"",{"fg":5,"bold":true}],[" << endl;                                                                              ",{}],["|",{"inverse":true}],["~                     ",{"fg":4,"bold":true}]],"32":[["~                   ",{"fg":4,"bold":true}],["|",{"inverse":true}],["  ",{"fg":6,"bg":0,"bold":true}],[" 36 ",{"fg":3,"bold":true}],["    }                                                                                                         ",{}],["|",{"inverse":true}],["~                     ",{"fg":4,"bold":true}]],"33":[["~                   ",{"fg":4,"bold":true}],["|",{"inverse":true}],["  ",{"fg":6,"bg":0,"bold":true}],[" 37 ",{"fg":3,"bold":true}],["                                                                                                              ",{}],["|",{"inverse":true}],["~                     ",{"fg":4,"bold":true}]],"34":[["~                   ",{"fg":4,"bold":true}],["|",{"inverse":true}],["  ",{"fg":6,"bg":0,"bold":true}],[" 38 ",{"fg":3,"bold":true}],["    ",{}],["virtual",{"fg":2,"bold":true}],[" ",{}],["void",{"fg":2,"bold":true}],[" SecondRun2(",{}],["void",{"fg":2,"bold":true}],[")                                                                             ",{}],["|",{"inverse":true}],["~                     ",{"fg":4,"bold":true}]],"35":[["~                   ",{"fg":4,"bold":true}],["|",{"inverse":true}],["  ",{"fg":6,"bg":0,"bold":true}],[" 39 ",{"fg":3,"bold":true}],["    {                                                                                                         ",{}],["|",{"inverse":true}],["~                     ",{"fg":4,"bold":true}]],"36":[["~                   ",{"fg":4,"bold":true}],["|",{"inverse":true}],["  ",{"fg":6,"bg":0,"bold":true}],[" 40 ",{"fg":3,"bold":true}],["    ",{}],["|",{"fg":2,"bold":true}],["   cout <<",{}],["\"Second2\"",{"fg":5,"bold":true}],[" << endl;                                                                             ",{}],["|",{"inverse":true}],["~                     ",{"fg":4,"bold":true}]],"37":[["~                   ",{"fg":4,"bold":true}],["|",{"inverse":true}],["  ",{"fg":6,"bg":0,"bold":true}],[" 41 ",{"fg":3,"bold":true}],["    }                                                                                                         ",{}],["|",{"inverse":true}],["~                     ",{"fg":4,"bold":true}]],"38":[["~                   ",{"fg":4,"bold":true}],["|",{"inverse":true}],["  ",{"fg":6,"bg":0,"bold":true}],[" 42 ",{"fg":3,"bold":true}],["                                                                                                              ",{}],["|",{"inverse":true}],["~                     ",{"fg":4,"bold":true}]],"39":[["~                   ",{"fg":4,"bold":true}],["|",{"inverse":true}],["  ",{"fg":6,"bg":0,"bold":true}],[" 43 ",{"fg":3,"bold":true}],["    ",{}],["virtual",{"fg":2,"bold":true}],[" ~Last()                                                                                           ",{}],["|",{"inverse":true}],["~                     ",{"fg":4,"bold":true}]],"40":[["~                   ",{"fg":4,"bold":true}],["|",{"inverse":true}],["  ",{"fg":6,"bg":0,"bold":true}],[" 44 ",{"fg":3,"bold":true}],["    {                                                                                                         ",{}],["|",{"inverse":true}],["~                     ",{"fg":4,"bold":true}]],"41":[["~                   ",{"fg":4,"bold":true}],["|",{"inverse":true}],["  ",{"fg":6,"bg":0,"bold":true}],[" 45 ",{"fg":3,"bold":true}],["                                                                                                              ",{}],["|",{"inverse":true}],["~                     ",{"fg":4,"bold":true}]],"42":[["~                   ",{"fg":4,"bold":true}],["|",{"inverse":true}],["  ",{"fg":6,"bg":0,"bold":true}],[" 46 ",{"fg":3,"bold":true}],["    }                                                                                                         ",{}],["|",{"inverse":true}],["~                     ",{"fg":4,"bold":true}]],"43":[["~                   ",{"fg":4,"bold":true}],["|",{"inverse":true}],["  ",{"fg":6,"bg":0,"bold":true}],[" 47 ",{"fg":3,"bold":true}],["                                                                                                              ",{}],["|",{"inverse":true}],["~                     ",{"fg":4,"bold":true}]],"44":[["~                   ",{"fg":4,"bold":true}],["|",{"inverse":true}],["  ",{"fg":6,"bg":0,"bold":true}],[" 48 ",{"fg":3,"bold":true}],["};                                                                                                            ",{}],["|",{"inverse":true}],["~                     ",{"fg":4,"bold":true}]],"45":[["~                   ",{"fg":4,"bold":true}],["|",{"inverse":true}],["  ",{"fg":6,"bg":0,"bold":true}],[" 49 ",{"fg":3,"bold":true}],["                                                                                                              ",{}],["|",{"inverse":true}],["~                     ",{"fg":4,"bold":true}]],"46":[["[Name] test.cpp      ",{"inverse":true}],[" NORMAL ",{"bold":true}],[" ",{}],["test.cpp ",{"bold":true}],["                                                             unix │ utf-8 │ cpp │   5% ",{}],[" LN   4",{"bold":true}],[":1  ",{}],[" ",{"bold":true,"inverse":true}],[" ~/NERD_tree_1 ",{"bold":true}],["       ",{}]]},"cursor":{"x":27,"y":0,"visible":true}}],[0.013636,{"lines":{"0":[["\" Press <F1> for hel",{"fg":6,"bold":true}],["|",{"inverse":true}],["                                                                                                                    ",{}],["|",{"inverse":true}],["  1 ",{"fg":3,"bold":true}],["\" Press ? for help",{"fg":5,"bold":true}]],"1":[["                    ",{}],["|",{"inverse":true}],["  ",{"fg":6,"bg":0,"bold":true}],["  4 ",{"fg":3,"bold":true}],["using",{"fg":3,"bold":true,"underline":true}],[" ",{"underline":true}],["namespace",{"fg":2,"bold":true,"underline":true}],[" std;                                                                                          ",{"underline":true}],["|",{"inverse":true}],["  2 ",{"fg":3,"bold":true}],["                  ",{}]],"2":[["▼",{"fg":3,"bold":true}],[" First",{"fg":5,"bold":true}],[" : ",{}],["struct",{"fg":2,"bold":true}],["    ",{}],["|",{"inverse":true}],["  ",{"fg":6,"bg":0,"bold":true}],["  5 ",{"fg":3,"bold":true}],["                                                                                                              ",{}],["|",{"inverse":true}],["  3 ",{"fg":3,"bold":true}],[".. (up a dir)",{"fg":6,"bold":true}],["     ",{}]],"3":[["    [prototypes]",{"fg":6,"bold":true}],["    ",{}],["|",{"inverse":true}],["  ",{"fg":6,"bg":0,"bold":true}],["  6 ",{"fg":3,"bold":true}],["struct",{"fg":2,"bold":true}],[" First                                                                                                  ",{}],["|",{"inverse":true}],["  4 /root/",{"fg":3,"bold":true}],["            ",{}]],"4":[["   ",{}],["+",{"fg":2,"bold":true}],["FirstRun(void)  ",{}],["|",{"inverse":true}],["  ",{"fg":6,"bg":0,"bold":true}],["  7 ",{"fg":3,"bold":true}],["{                                                                                                             ",{}],["|",{"inverse":true}],["  5 ",{"fg":3,"bold":true}],["▸ diary/",{"fg":6,"bold":true,"underline":true}],["          ",{"underline":true}]],"5":[["   ",{}],["+",{"fg":2,"bold":true}],["FirstRun2(void) ",{}],["|",{"inverse":true}],["  ",{"fg":6,"bg":0,"bold":true}],["  8 ",{"fg":3,"bold":true}],["    ",{}],["virtual",{"fg":2,"bold":true}],[" ",{}],["void",{"fg":2,"bold":true}],[" FirstRun(",{}],["void",{"fg":2,"bold":true}],[") = ",{}],["0",{"fg":5,"bold":true}],[";                                                                          ",{}],["|",{"inverse":true}],["  6 ",{"fg":3,"bold":true}],["▸ temp/",{"fg":6,"bold":true}],["           ",{}]],"6":[["                    ",{}],["|",{"inverse":true}],["  ",{"fg":6,"bg":0,"bold":true}],["  9 ",{"fg":3,"bold":true}],["    ",{}],["virtual",{"fg":2,"bold":true}],[" ",{}],["void",{"fg":2,"bold":true}],[" FirstRun2(",{}],["void",{"fg":2,"bold":true}],[") = ",{}],["0",{"fg":5,"bold":true}],[";                                                                         ",{}],["|",{"inverse":true}],["  7 ",{"fg":3,"bold":true}],["  anaconda-ks.cfg ",{}]],"7":[["▼",{"fg":3,"bold":true}],[" Last",{"fg":5,"bold":true}],[" : ",{}],["struct",{"fg":2,"bold":true}],["     ",{}],["|",{"inverse":true}],["  ",{"fg":6,"bg":0,"bold":true}],[" 10 ",{"fg":3,"bold":true}],["};                                                                                                            ",{}],["|",{"inverse":true}],["  8 ",{"fg":3,"bold":true}],["  initial-setup-ks",{}]],"8":[["    [functions]",{"fg":6,"bold":true}],["     ",{}],["|",{"inverse":true}],["  ",{"fg":6,"bg":0,"bold":true}],[" 11 ",{"fg":3,"bold":true}],["                                                                                                              ",{}],["|",{"inverse":true}],["  9 ",{"fg":3,"bold":true}],["  test.c          ",{}]],"9":[["   ",{}],["+",{"fg":2,"bold":true}],["FirstRun(void)  ",{}],["|",{"inverse":true}],["  ",{"fg":6,"bg":0,"bold":true}],[" 12 ",{"fg":3,"bold":true}],["struct",{"fg":2,"bold":true}],[" Second                                                                                                 ",{}],["|",{"inverse":true}],[" 10 ",{"fg":3,"bold":true}],["  test.cpp        ",{}]],"10":[["   ",{}],["+",{"fg":2,"bold":true}],["FirstRun2(void) ",{}],["|",{"inverse":true}],["  ",{"fg":6,"bg":0,"bold":true}],[" 13 ",{"fg":3,"bold":true}],["{                                                                                                             ",{}],["|",{"inverse":true}],["~                     ",{"fg":4,"bold":true}]],"11":[["   ",{}],["+",{"fg":2,"bold":true}],["~Last()         ",{}],["|",{"inverse":true}],["  ",{"fg":6,"bg":0,"bold":true}],[" 14 ",{"fg":3,"bold":true}],["    ",{}],["virtual",{"fg":2,"bold":true}],[" ",{}],["void",{"fg":2,"bold":true}],[" SecondRun(",{}],["void",{"fg":2,"bold":true}],[") = ",{}],["0",{"fg":5,"bold":true}],[";                                                                         ",{}],["|",{"inverse":true}],["~                     ",{"fg":4,"bold":true}]],"12":[["   ",{}],["+",{"fg":2,"bold":true}],["SecondRun(void) ",{}],["|",{"inverse":true}],["  ",{"fg":6,"bg":0,"bold":true}],[" 15 ",{"fg":3,"bold":true}],["    ",{}],["virtual",{"fg":2,"bold":true}],[" ",{}],["void",{"fg":2,"bold":true}],[" SecondRun2(",{}],["void",{"fg":2,"bold":true}],[") = ",{}],["0",{"fg":5,"bold":true}],[";                                                                        ",{}],["|",{"inverse":true}],["~                     ",{"fg":4,"bold":true}]],"13":[["   ",{}],["+",{"fg":2,"bold":true}],["SecondRun2(void)",{}],["|",{"inverse":true}],["  ",{"fg":6,"bg":0,"bold":true}],[" 16 ",{"fg":3,"bold":true}],["};                                                                                                            ",{}],["|",{"inverse":true}],["~                     ",{"fg":4,"bold":true}]],"14":[["                    ",{}],["|",{"inverse":true}],["  ",{"fg":6,"bg":0,"bold":true}],[" 17 ",{"fg":3,"bold":true}],["                                                                                                              ",{}],["|",{"inverse":true}],["~                     ",{"fg":4,"bold":true}]],"15":[["▼",{"fg":3,"bold":true}],[" Second",{"fg":5,"bold":true}],[" : ",{}],["struct",{"fg":2,"bold":true}],["   ",{}],["|",{"inverse":true}],["  ",{"fg":6,"bg":0,"bold":true}],[" 18 ",{"fg":3,"bold":true}],["struct",{"fg":2,"bold":true}],[" Last: ",{}],["public",{"fg":3,"bold":true}],[" First,                                                                                    ",{}],["|",{"inverse":true}],["~                     ",{"fg":4,"bold":true}]],"16":[["    [prototypes]",{"fg":6,"bold":true}],["    ",{}],["|",{"inverse":true}],["  ",{"fg":6,"bg":0,"bold":true}],[" 19 ",{"fg":3,"bold":true}],["    ",{}],["public",{"fg":3,"bold":true}],[" Second                                                                                             ",{}],["|",{"inverse":true}],["~                     ",{"fg":4,"bold":true}]],"17":[["   ",{}],["+",{"fg":2,"bold":true}],["SecondRun(void) ",{}],["|",{"inverse":true}],["  ",{"fg":6,"bg":0,"bold":true}],[" 20 ",{"fg":3,"bold":true}],["{                                                                                                             ",{}],["|",{"inverse":true}],["~                     ",{"fg":4,"bold":true}]],"18":[["   ",{}],["+",{"fg":2,"bold":true}],["SecondRun2(void)",{}],["|",{"inverse":true}],["  ",{"fg":6,"bg":0,"bold":true}],[" 21 ",{"fg":3,"bold":true}],["    ",{}],["// 基类First的虚方法",{"fg":6,"bold":true}],["                                                                                      ",{}],["|",{"inverse":true}],["~                     ",{"fg":4,"bold":true}]],"19":[["                    ",{}],["|",{"inverse":true}],["  ",{"fg":6,"bg":0,"bold":true}],[" 22 ",{"fg":3,"bold":true}],["    ",{}],["virtual",{"fg":2,"bold":true}],[" ",{}],["void",{"fg":2,"bold":true}],[" FirstRun(",{}],["void",{"fg":2,"bold":true}],[")                                                                               ",{}],["|",{"inverse":true}],["~                     ",{"fg":4,"bold":true}]],"20":[["▼",{"fg":3,"bold":true}],[" ",{}],["functions",{"fg":6,"bold":true}],["         ",{}],["|",{"inverse":true}],["  ",{"fg":6,"bg":0,"bold":true}],[" 23 ",{"fg":3,"bold":true}],["    {                                                                                                         ",{}],["|",{"inverse":true}],["~                     ",{"fg":4,"bold":true}]],"21":[["    ",{"underline":true}],["main",{"fg":0,"bg":3}],["(int argc, c",{"underline":true}],["|",{"inverse":true}],["  ",{"fg":6,"bg":0,"bold":true}],[" 24 ",{"fg":3,"bold":true}],["    ",{}],["|",{"fg":2,"bold":true}],["   cout << ",{}],["\"First\"",{"fg":5,"bold":true}],[" << endl;                                                                              ",{}],["|",{"inverse":true}],["~                     ",{"fg":4,"bold":true}]],"22":[["~                   ",{"fg":4,"bold":true}],["|",{"inverse":true}],["  ",{"fg":6,"bg":0,"bold":true}],[" 25 ",{"fg":3,"bold":true}],["    }                                                                                                         ",{}],["|",{"inverse":true}],["~                     ",{"fg":4,"bold":true}]],"23":[["~                   ",{"fg":4,"bold":true}],["|",{"inverse":true}],["  ",{"fg":6,"bg":0,"bold":true}],[" 26 ",{"fg":3,"bold":true}],["                                                                                                              ",{}],["|",{"inverse":true}],["~                     ",{"fg":4,"bold":true}]],"24":[["~                   ",{"fg":4,"bold":true}],["|",{"inverse":true}],["  ",{"fg":6,"bg":0,"bold":true}],[" 27 ",{"fg":3,"bold":true}],["    ",{}],["virtual",{"fg":2,"bold":true}],[" ",{}],["void",{"fg":2,"bold":true}],[" FirstRun2(",{}],["void",{"fg":2,"bold":true}],[")                                                                              ",{}],["|",{"inverse":true}],["~                     ",{"fg":4,"bold":true}]],"25":[["~                   ",{"fg":4,"bold":true}],["|",{"inverse":true}],["  ",{"fg":6,"bg":0,"bold":true}],[" 28 ",{"fg":3,"bold":true}],["    {                                                                                                         ",{}],["|",{"inverse":true}],["~                     ",{"fg":4,"bold":true}]],"26":[["~                   ",{"fg":4,"bold":true}],["|",{"inverse":true}],["  ",{"fg":6,"bg":0,"bold":true}],[" 29 ",{"fg":3,"bold":true}],["    ",{}],["|",{"fg":2,"bold":true}],["   cout << ",{}],["\"First2\"",{"fg":5,"bold":true}],[" << endl;                                                                             ",{}],["|",{"inverse":true}],["~                     ",{"fg":4,"bold":true}]],"27":[["~                   ",{"fg":4,"bold":true}],["|",{"inverse":true}],["  ",{"fg":6,"bg":0,"bold":true}],[" 30 ",{"fg":3,"bold":true}],["    }                                                                                                         ",{}],["|",{"inverse":true}],["~                     ",{"fg":4,"bold":true}]],"28":[["~                   ",{"fg":4,"bold":true}],["|",{"inverse":true}],["  ",{"fg":6,"bg":0,"bold":true}],[" 31 ",{"fg":3,"bold":true}],["                                                                                                              ",{}],["|",{"inverse":true}],["~                     ",{"fg":4,"bold":true}]],"29":[["~                   ",{"fg":4,"bold":true}],["|",{"inverse":true}],["  ",{"fg":6,"bg":0,"bold":true}],[" 32 ",{"fg":3,"bold":true}],["    ",{}],["// 基类Second虚方法",{"fg":6,"bold":true}],["                                                                                       ",{}],["|",{"inverse":true}],["~                     ",{"fg":4,"bold":true}]],"30":[["~                   ",{"fg":4,"bold":true}],["|",{"inverse":true}],["  ",{"fg":6,"bg":0,"bold":true}],[" 33 ",{"fg":3,"bold":true}],["    ",{}],["virtual",{"fg":2,"bold":true}],[" ",{}],["void",{"fg":2,"bold":true}],[" SecondRun(",{}],["void",{"fg":2,"bold":true}],[")                                                                              ",{}],["|",{"inverse":true}],["~                     ",{"fg":4,"bold":true}]],"31":[["~                   ",{"fg":4,"bold":true}],["|",{"inverse":true}],["  ",{"fg":6,"bg":0,"bold":true}],[" 34 ",{"fg":3,"bold":true}],["    {                                                                                                         ",{}],["|",{"inverse":true}],["~                     ",{"fg":4,"bold":true}]],"32":[["~                   ",{"fg":4,"bold":true}],["|",{"inverse":true}],["  ",{"fg":6,"bg":0,"bold":true}],[" 35 ",{"fg":3,"bold":true}],["    ",{}],["|",{"fg":2,"bold":true}],["   cout <<",{}],["\"Second\"",{"fg":5,"bold":true}],[" << endl;                                                                              ",{}],["|",{"inverse":true}],["~                     ",{"fg":4,"bold":true}]],"33":[["~                   ",{"fg":4,"bold":true}],["|",{"inverse":true}],["  ",{"fg":6,"bg":0,"bold":true}],[" 36 ",{"fg":3,"bold":true}],["    }                                                                                                         ",{}],["|",{"inverse":true}],["~                     ",{"fg":4,"bold":true}]],"34":[["~                   ",{"fg":4,"bold":true}],["|",{"inverse":true}],["  ",{"fg":6,"bg":0,"bold":true}],[" 37 ",{"fg":3,"bold":true}],["                                                                                                              ",{}],["|",{"inverse":true}],["~                     ",{"fg":4,"bold":true}]],"35":[["~                   ",{"fg":4,"bold":true}],["|",{"inverse":true}],["  ",{"fg":6,"bg":0,"bold":true}],[" 38 ",{"fg":3,"bold":true}],["    ",{}],["virtual",{"fg":2,"bold":true}],[" ",{}],["void",{"fg":2,"bold":true}],[" SecondRun2(",{}],["void",{"fg":2,"bold":true}],[")                                                                             ",{}],["|",{"inverse":true}],["~                     ",{"fg":4,"bold":true}]]},"cursor":{"x":116,"y":35,"visible":false}}],[0.00565,{"lines":{"0":[["\" Press <F1> for hel",{"fg":6,"bold":true}],["|",{"inverse":true}],["  ",{"fg":6,"bg":0,"bold":true}],["  3 ",{"fg":3,"bold":true}],["                                                                                                              ",{"underline":true}],["|",{"inverse":true}],["  1 ",{"fg":3,"bold":true}],["\" Press ? for help",{"fg":5,"bold":true}]],"1":[["                    ",{}],["|",{"inverse":true}],["  ",{"fg":6,"bg":0,"bold":true}],["  4 using",{"fg":3,"bold":true}],[" ",{}],["namespace",{"fg":2,"bold":true}],[" std;                                                                                          ",{}],["|",{"inverse":true}],["  2 ",{"fg":3,"bold":true}],["                  ",{}]],"36":[["~                   ",{"fg":4,"bold":true}],["|",{"inverse":true}],["  ",{"fg":6,"bg":0,"bold":true}],[" 39 ",{"fg":3,"bold":true}],["    {                                                                                                         ",{}],["|",{"inverse":true}],["~                     ",{"fg":4,"bold":true}]],"37":[["~                   ",{"fg":4,"bold":true}],["|",{"inverse":true}],["  ",{"fg":6,"bg":0,"bold":true}],[" 40 ",{"fg":3,"bold":true}],["    ",{}],["|",{"fg":2,"bold":true}],["   cout <<",{}],["\"Second2\"",{"fg":5,"bold":true}],[" << endl;                                                                             ",{}],["|",{"inverse":true}],["~                     ",{"fg":4,"bold":true}]],"38":[["~                   ",{"fg":4,"bold":true}],["|",{"inverse":true}],["  ",{"fg":6,"bg":0,"bold":true}],[" 41 ",{"fg":3,"bold":true}],["    }                                                                                                         ",{}],["|",{"inverse":true}],["~                     ",{"fg":4,"bold":true}]],"39":[["~                   ",{"fg":4,"bold":true}],["|",{"inverse":true}],["  ",{"fg":6,"bg":0,"bold":true}],[" 42 ",{"fg":3,"bold":true}],["                                                                                                              ",{}],["|",{"inverse":true}],["~                     ",{"fg":4,"bold":true}]],"40":[["~                   ",{"fg":4,"bold":true}],["|",{"inverse":true}],["  ",{"fg":6,"bg":0,"bold":true}],[" 43 ",{"fg":3,"bold":true}],["    ",{}],["virtual",{"fg":2,"bold":true}],[" ~Last()                                                                                           ",{}],["|",{"inverse":true}],["~                     ",{"fg":4,"bold":true}]],"41":[["~                   ",{"fg":4,"bold":true}],["|",{"inverse":true}],["  ",{"fg":6,"bg":0,"bold":true}],[" 44 ",{"fg":3,"bold":true}],["    {                                                                                                         ",{}],["|",{"inverse":true}],["~                     ",{"fg":4,"bold":true}]],"42":[["~                   ",{"fg":4,"bold":true}],["|",{"inverse":true}],["  ",{"fg":6,"bg":0,"bold":true}],[" 45 ",{"fg":3,"bold":true}],["                                                                                                              ",{}],["|",{"inverse":true}],["~                     ",{"fg":4,"bold":true}]],"43":[["~                   ",{"fg":4,"bold":true}],["|",{"inverse":true}],["  ",{"fg":6,"bg":0,"bold":true}],[" 46 ",{"fg":3,"bold":true}],["    }                                                                                                         ",{}],["|",{"inverse":true}],["~                     ",{"fg":4,"bold":true}]],"44":[["~                   ",{"fg":4,"bold":true}],["|",{"inverse":true}],["  ",{"fg":6,"bg":0,"bold":true}],[" 47 ",{"fg":3,"bold":true}],["                                                                                                              ",{}],["|",{"inverse":true}],["~                     ",{"fg":4,"bold":true}]],"45":[["~                   ",{"fg":4,"bold":true}],["|",{"inverse":true}],["  ",{"fg":6,"bg":0,"bold":true}],[" 48 ",{"fg":3,"bold":true}],["};                                                                                                            ",{}],["|",{"inverse":true}],["~                     ",{"fg":4,"bold":true}]],"46":[["[Name] test.cpp      ",{"inverse":true}],[" NORMAL ",{"bold":true}],[" ",{}],["test.cpp ",{"bold":true}],["                                                             unix │ utf-8 │ cpp │   4% ",{}],[" LN   3",{"bold":true}],[":1  ",{}],[" ",{"bold":true,"inverse":true}],[" ~/NERD_tree_1 ",{"bold":true}],["       ",{}]]},"cursor":{"x":27,"y":0,"visible":true}}],[0.029942,{"lines":{"0":[["\" Press <F1> for hel",{"fg":6,"bold":true}],["|",{"inverse":true}],["                                                                                                                    ",{}],["|",{"inverse":true}],["  1 ",{"fg":3,"bold":true}],["\" Press ? for help",{"fg":5,"bold":true}]],"1":[["                    ",{}],["|",{"inverse":true}],["  ",{"fg":6,"bg":0,"bold":true}],["  3 ",{"fg":3,"bold":true}],["                                                                                                              ",{"underline":true}],["|",{"inverse":true}],["  2 ",{"fg":3,"bold":true}],["                  ",{}]],"2":[["▼",{"fg":3,"bold":true}],[" First",{"fg":5,"bold":true}],[" : ",{}],["struct",{"fg":2,"bold":true}],["    ",{}],["|",{"inverse":true}],["  ",{"fg":6,"bg":0,"bold":true}],["  4 using",{"fg":3,"bold":true}],[" ",{}],["namespace",{"fg":2,"bold":true}],[" std;                                                                                          ",{}],["|",{"inverse":true}],["  3 ",{"fg":3,"bold":true}],[".. (up a dir)",{"fg":6,"bold":true}],["     ",{}]],"3":[["    [prototypes]",{"fg":6,"bold":true}],["    ",{}],["|",{"inverse":true}],["  ",{"fg":6,"bg":0,"bold":true}],["  5 ",{"fg":3,"bold":true}],["                                                                                                              ",{}],["|",{"inverse":true}],["  4 /root/",{"fg":3,"bold":true}],["            ",{}]],"4":[["   ",{}],["+",{"fg":2,"bold":true}],["FirstRun(void)  ",{}],["|",{"inverse":true}],["  ",{"fg":6,"bg":0,"bold":true}],["  6 ",{"fg":3,"bold":true}],["struct",{"fg":2,"bold":true}],[" First                                                                                                  ",{}],["|",{"inverse":true}],["  5 ",{"fg":3,"bold":true}],["▸ diary/",{"fg":6,"bold":true,"underline":true}],["          ",{"underline":true}]],"5":[["   ",{}],["+",{"fg":2,"bold":true}],["FirstRun2(void) ",{}],["|",{"inverse":true}],["  ",{"fg":6,"bg":0,"bold":true}],["  7 ",{"fg":3,"bold":true}],["{                                                                                                             ",{}],["|",{"inverse":true}],["  6 ",{"fg":3,"bold":true}],["▸ temp/",{"fg":6,"bold":true}],["           ",{}]],"6":[["                    ",{}],["|",{"inverse":true}],["  ",{"fg":6,"bg":0,"bold":true}],["  8 ",{"fg":3,"bold":true}],["    ",{}],["virtual",{"fg":2,"bold":true}],[" ",{}],["void",{"fg":2,"bold":true}],[" FirstRun2(",{}],["void",{"fg":2,"bold":true}],[") = ",{}],["0",{"fg":5,"bold":true}],[";                                                                         ",{}],["|",{"inverse":true}],["  7 ",{"fg":3,"bold":true}],["  anaconda-ks.cfg ",{}]]},"cursor":{"x":31,"y":6,"visible":false}}],[0.009292,{"lines":{"0":[["\" Press <F1> for hel",{"fg":6,"bold":true}],["|",{"inverse":true}],["  ",{"fg":6,"bg":0,"bold":true}],["  2 ",{"fg":3,"bold":true}],["#include ",{"fg":4,"bold":true,"underline":true}],["<vector>",{"fg":5,"bold":true,"underline":true}],["                                                                                             ",{"underline":true}],["|",{"inverse":true}],["  1 ",{"fg":3,"bold":true}],["\" Press ? for help",{"fg":5,"bold":true}]],"1":[["                    ",{}],["|",{"inverse":true}],["  ",{"fg":6,"bg":0,"bold":true}],["  3 ",{"fg":3,"bold":true}],["                                                                                                              ",{}],["|",{"inverse":true}],["  2 ",{"fg":3,"bold":true}],["                  ",{}]],"6":[["                    ",{}],["|",{"inverse":true}],["  ",{"fg":6,"bg":0,"bold":true}],["  8 ",{"fg":3,"bold":true}],["    ",{}],["virtual",{"fg":2,"bold":true}],[" ",{}],["void",{"fg":2,"bold":true}],[" FirstRun(",{}],["void",{"fg":2,"bold":true}],[") = ",{}],["0",{"fg":5,"bold":true}],[";                                                                          ",{}],["|",{"inverse":true}],["  7 ",{"fg":3,"bold":true}],["  anaconda-ks.cfg ",{}]],"7":[["▼",{"fg":3,"bold":true}],[" Last",{"fg":5,"bold":true}],[" : ",{}],["struct",{"fg":2,"bold":true}],["     ",{}],["|",{"inverse":true}],["  ",{"fg":6,"bg":0,"bold":true}],["  9 ",{"fg":3,"bold":true}],["    ",{}],["virtual",{"fg":2,"bold":true}],[" ",{}],["void",{"fg":2,"bold":true}],[" FirstRun2(",{}],["void",{"fg":2,"bold":true}],[") = ",{}],["0",{"fg":5,"bold":true}],[";                                                                         ",{}],["|",{"inverse":true}],["  8 ",{"fg":3,"bold":true}],["  initial-setup-ks",{}]],"8":[["    [functions]",{"fg":6,"bold":true}],["     ",{}],["|",{"inverse":true}],["  ",{"fg":6,"bg":0,"bold":true}],[" 10 ",{"fg":3,"bold":true}],["};                                                                                                            ",{}],["|",{"inverse":true}],["  9 ",{"fg":3,"bold":true}],["  test.c          ",{}]],"9":[["   ",{}],["+",{"fg":2,"bold":true}],["FirstRun(void)  ",{}],["|",{"inverse":true}],["  ",{"fg":6,"bg":0,"bold":true}],[" 11 ",{"fg":3,"bold":true}],["                                                                                                              ",{}],["|",{"inverse":true}],[" 10 ",{"fg":3,"bold":true}],["  test.cpp        ",{}]],"10":[["   ",{}],["+",{"fg":2,"bold":true}],["FirstRun2(void) ",{}],["|",{"inverse":true}],["  ",{"fg":6,"bg":0,"bold":true}],[" 12 ",{"fg":3,"bold":true}],["struct",{"fg":2,"bold":true}],[" Second                                                                                                 ",{}],["|",{"inverse":true}],["~                     ",{"fg":4,"bold":true}]],"11":[["   ",{}],["+",{"fg":2,"bold":true}],["~Last()         ",{}],["|",{"inverse":true}],["  ",{"fg":6,"bg":0,"bold":true}],[" 13 ",{"fg":3,"bold":true}],["{                                                                                                             ",{}],["|",{"inverse":true}],["~                     ",{"fg":4,"bold":true}]],"12":[["   ",{}],["+",{"fg":2,"bold":true}],["SecondRun(void) ",{}],["|",{"inverse":true}],["  ",{"fg":6,"bg":0,"bold":true}],[" 14 ",{"fg":3,"bold":true}],["    ",{}],["virtual",{"fg":2,"bold":true}],[" ",{}],["void",{"fg":2,"bold":true}],[" SecondRun(",{}],["void",{"fg":2,"bold":true}],[") = ",{}],["0",{"fg":5,"bold":true}],[";                                                                         ",{}],["|",{"inverse":true}],["~                     ",{"fg":4,"bold":true}]],"13":[["   ",{}],["+",{"fg":2,"bold":true}],["SecondRun2(void)",{}],["|",{"inverse":true}],["  ",{"fg":6,"bg":0,"bold":true}],[" 15 ",{"fg":3,"bold":true}],["    ",{}],["virtual",{"fg":2,"bold":true}],[" ",{}],["void",{"fg":2,"bold":true}],[" SecondRun2(",{}],["void",{"fg":2,"bold":true}],[") = ",{}],["0",{"fg":5,"bold":true}],[";                                                                        ",{}],["|",{"inverse":true}],["~                     ",{"fg":4,"bold":true}]],"14":[["                    ",{}],["|",{"inverse":true}],["  ",{"fg":6,"bg":0,"bold":true}],[" 16 ",{"fg":3,"bold":true}],["};                                                                                                            ",{}],["|",{"inverse":true}],["~                     ",{"fg":4,"bold":true}]],"15":[["▼",{"fg":3,"bold":true}],[" Second",{"fg":5,"bold":true}],[" : ",{}],["struct",{"fg":2,"bold":true}],["   ",{}],["|",{"inverse":true}],["  ",{"fg":6,"bg":0,"bold":true}],[" 17 ",{"fg":3,"bold":true}],["                                                                                                              ",{}],["|",{"inverse":true}],["~                     ",{"fg":4,"bold":true}]],"16":[["    [prototypes]",{"fg":6,"bold":true}],["    ",{}],["|",{"inverse":true}],["  ",{"fg":6,"bg":0,"bold":true}],[" 18 ",{"fg":3,"bold":true}],["struct",{"fg":2,"bold":true}],[" Last: ",{}],["public",{"fg":3,"bold":true}],[" First,                                                                                    ",{}],["|",{"inverse":true}],["~                     ",{"fg":4,"bold":true}]],"17":[["   ",{}],["+",{"fg":2,"bold":true}],["SecondRun(void) ",{}],["|",{"inverse":true}],["  ",{"fg":6,"bg":0,"bold":true}],[" 19 ",{"fg":3,"bold":true}],["    ",{}],["public",{"fg":3,"bold":true}],[" Second                                                                                             ",{}],["|",{"inverse":true}],["~                     ",{"fg":4,"bold":true}]],"18":[["   ",{}],["+",{"fg":2,"bold":true}],["SecondRun2(void)",{}],["|",{"inverse":true}],["  ",{"fg":6,"bg":0,"bold":true}],[" 20 ",{"fg":3,"bold":true}],["{                                                                                                             ",{}],["|",{"inverse":true}],["~                     ",{"fg":4,"bold":true}]],"19":[["                    ",{}],["|",{"inverse":true}],["  ",{"fg":6,"bg":0,"bold":true}],[" 21 ",{"fg":3,"bold":true}],["    ",{}],["// 基类First的虚方法",{"fg":6,"bold":true}],["                                                                                      ",{}],["|",{"inverse":true}],["~                     ",{"fg":4,"bold":true}]],"20":[["▼",{"fg":3,"bold":true}],[" ",{}],["functions",{"fg":6,"bold":true}],["         ",{}],["|",{"inverse":true}],["  ",{"fg":6,"bg":0,"bold":true}],[" 22 ",{"fg":3,"bold":true}],["    ",{}],["virtual",{"fg":2,"bold":true}],[" ",{}],["void",{"fg":2,"bold":true}],[" FirstRun(",{}],["void",{"fg":2,"bold":true}],[")                                                                               ",{}],["|",{"inverse":true}],["~                     ",{"fg":4,"bold":true}]],"21":[["    ",{"underline":true}],["main",{"fg":0,"bg":3}],["(int argc, c",{"underline":true}],["|",{"inverse":true}],["  ",{"fg":6,"bg":0,"bold":true}],[" 23 ",{"fg":3,"bold":true}],["    {                                                                                                         ",{}],["|",{"inverse":true}],["~                     ",{"fg":4,"bold":true}]],"22":[["~                   ",{"fg":4,"bold":true}],["|",{"inverse":true}],["  ",{"fg":6,"bg":0,"bold":true}],[" 24 ",{"fg":3,"bold":true}],["    ",{}],["|",{"fg":2,"bold":true}],["   cout << ",{}],["\"First\"",{"fg":5,"bold":true}],[" << endl;                                                                              ",{}],["|",{"inverse":true}],["~                     ",{"fg":4,"bold":true}]],"23":[["~                   ",{"fg":4,"bold":true}],["|",{"inverse":true}],["  ",{"fg":6,"bg":0,"bold":true}],[" 25 ",{"fg":3,"bold":true}],["    }                                                                                                         ",{}],["|",{"inverse":true}],["~                     ",{"fg":4,"bold":true}]],"24":[["~                   ",{"fg":4,"bold":true}],["|",{"inverse":true}],["  ",{"fg":6,"bg":0,"bold":true}],[" 26 ",{"fg":3,"bold":true}],["                                                                                                              ",{}],["|",{"inverse":true}],["~                     ",{"fg":4,"bold":true}]],"25":[["~                   ",{"fg":4,"bold":true}],["|",{"inverse":true}],["  ",{"fg":6,"bg":0,"bold":true}],[" 27 ",{"fg":3,"bold":true}],["    ",{}],["virtual",{"fg":2,"bold":true}],[" ",{}],["void",{"fg":2,"bold":true}],[" FirstRun2(",{}],["void",{"fg":2,"bold":true}],[")                                                                              ",{}],["|",{"inverse":true}],["~                     ",{"fg":4,"bold":true}]],"26":[["~                   ",{"fg":4,"bold":true}],["|",{"inverse":true}],["  ",{"fg":6,"bg":0,"bold":true}],[" 28 ",{"fg":3,"bold":true}],["    {                                                                                                         ",{}],["|",{"inverse":true}],["~                     ",{"fg":4,"bold":true}]],"27":[["~                   ",{"fg":4,"bold":true}],["|",{"inverse":true}],["  ",{"fg":6,"bg":0,"bold":true}],[" 29 ",{"fg":3,"bold":true}],["    ",{}],["|",{"fg":2,"bold":true}],["   cout << ",{}],["\"First2\"",{"fg":5,"bold":true}],[" << endl;                                                                             ",{}],["|",{"inverse":true}],["~                     ",{"fg":4,"bold":true}]],"28":[["~                   ",{"fg":4,"bold":true}],["|",{"inverse":true}],["  ",{"fg":6,"bg":0,"bold":true}],[" 30 ",{"fg":3,"bold":true}],["    }                                                                                                         ",{}],["|",{"inverse":true}],["~                     ",{"fg":4,"bold":true}]],"29":[["~                   ",{"fg":4,"bold":true}],["|",{"inverse":true}],["  ",{"fg":6,"bg":0,"bold":true}],[" 31 ",{"fg":3,"bold":true}],["                                                                                                              ",{}],["|",{"inverse":true}],["~                     ",{"fg":4,"bold":true}]],"30":[["~                   ",{"fg":4,"bold":true}],["|",{"inverse":true}],["  ",{"fg":6,"bg":0,"bold":true}],[" 32 ",{"fg":3,"bold":true}],["    ",{}],["// 基类Second虚方法",{"fg":6,"bold":true}],["                                                                                       ",{}],["|",{"inverse":true}],["~                     ",{"fg":4,"bold":true}]],"31":[["~                   ",{"fg":4,"bold":true}],["|",{"inverse":true}],["  ",{"fg":6,"bg":0,"bold":true}],[" 33 ",{"fg":3,"bold":true}],["    ",{}],["virtual",{"fg":2,"bold":true}],[" ",{}],["void",{"fg":2,"bold":true}],[" SecondRun(",{}],["void",{"fg":2,"bold":true}],[")                                                                              ",{}],["|",{"inverse":true}],["~                     ",{"fg":4,"bold":true}]],"32":[["~                   ",{"fg":4,"bold":true}],["|",{"inverse":true}],["  ",{"fg":6,"bg":0,"bold":true}],[" 34 ",{"fg":3,"bold":true}],["    {                                                                                                         ",{}],["|",{"inverse":true}],["~                     ",{"fg":4,"bold":true}]],"33":[["~                   ",{"fg":4,"bold":true}],["|",{"inverse":true}],["  ",{"fg":6,"bg":0,"bold":true}],[" 35 ",{"fg":3,"bold":true}],["    ",{}],["|",{"fg":2,"bold":true}],["   cout <<",{}],["\"Second\"",{"fg":5,"bold":true}],[" << endl;                                                                              ",{}],["|",{"inverse":true}],["~                     ",{"fg":4,"bold":true}]],"34":[["~                   ",{"fg":4,"bold":true}],["|",{"inverse":true}],["  ",{"fg":6,"bg":0,"bold":true}],[" 36 ",{"fg":3,"bold":true}],["    }                                                                                                         ",{}],["|",{"inverse":true}],["~                     ",{"fg":4,"bold":true}]],"35":[["~                   ",{"fg":4,"bold":true}],["|",{"inverse":true}],["  ",{"fg":6,"bg":0,"bold":true}],[" 37 ",{"fg":3,"bold":true}],["                                                                                                              ",{}],["|",{"inverse":true}],["~                     ",{"fg":4,"bold":true}]],"36":[["~                   ",{"fg":4,"bold":true}],["|",{"inverse":true}],["  ",{"fg":6,"bg":0,"bold":true}],[" 38 ",{"fg":3,"bold":true}],["    ",{}],["virtual",{"fg":2,"bold":true}],[" ",{}],["void",{"fg":2,"bold":true}],[" SecondRun2(",{}],["void",{"fg":2,"bold":true}],[")                                                                             ",{}],["|",{"inverse":true}],["~                     ",{"fg":4,"bold":true}]],"37":[["~                   ",{"fg":4,"bold":true}],["|",{"inverse":true}],["  ",{"fg":6,"bg":0,"bold":true}],[" 39 ",{"fg":3,"bold":true}],["    {                                                                                                         ",{}],["|",{"inverse":true}],["~                     ",{"fg":4,"bold":true}]],"38":[["~                   ",{"fg":4,"bold":true}],["|",{"inverse":true}],["  ",{"fg":6,"bg":0,"bold":true}],[" 40 ",{"fg":3,"bold":true}],["    ",{}],["|",{"fg":2,"bold":true}],["   cout <<",{}],["\"Second2\"",{"fg":5,"bold":true}],[" << endl;                                                                             ",{}],["|",{"inverse":true}],["~                     ",{"fg":4,"bold":true}]],"39":[["~                   ",{"fg":4,"bold":true}],["|",{"inverse":true}],["  ",{"fg":6,"bg":0,"bold":true}],[" 41 ",{"fg":3,"bold":true}],["    }                                                                                                         ",{}],["|",{"inverse":true}],["~                     ",{"fg":4,"bold":true}]],"40":[["~                   ",{"fg":4,"bold":true}],["|",{"inverse":true}],["  ",{"fg":6,"bg":0,"bold":true}],[" 42 ",{"fg":3,"bold":true}],["                                                                                                              ",{}],["|",{"inverse":true}],["~                     ",{"fg":4,"bold":true}]],"41":[["~                   ",{"fg":4,"bold":true}],["|",{"inverse":true}],["  ",{"fg":6,"bg":0,"bold":true}],[" 43 ",{"fg":3,"bold":true}],["    ",{}],["virtual",{"fg":2,"bold":true}],[" ~Last()                                                                                           ",{}],["|",{"inverse":true}],["~                     ",{"fg":4,"bold":true}]],"42":[["~                   ",{"fg":4,"bold":true}],["|",{"inverse":true}],["  ",{"fg":6,"bg":0,"bold":true}],[" 44 ",{"fg":3,"bold":true}],["    {                                                                                                         ",{}],["|",{"inverse":true}],["~                     ",{"fg":4,"bold":true}]],"43":[["~                   ",{"fg":4,"bold":true}],["|",{"inverse":true}],["  ",{"fg":6,"bg":0,"bold":true}],[" 45 ",{"fg":3,"bold":true}],["                                                                                                              ",{}],["|",{"inverse":true}],["~                     ",{"fg":4,"bold":true}]],"44":[["~                   ",{"fg":4,"bold":true}],["|",{"inverse":true}],["  ",{"fg":6,"bg":0,"bold":true}],[" 46 ",{"fg":3,"bold":true}],["    }                                                                                                         ",{}],["|",{"inverse":true}],["~                     ",{"fg":4,"bold":true}]],"45":[["~                   ",{"fg":4,"bold":true}],["|",{"inverse":true}],["  ",{"fg":6,"bg":0,"bold":true}],[" 47 ",{"fg":3,"bold":true}],["                                                                                                              ",{}],["|",{"inverse":true}],["~                     ",{"fg":4,"bold":true}]],"46":[["[Name] test.cpp      ",{"inverse":true}],[" NORMAL ",{"bold":true}],[" ",{}],["test.cpp ",{"bold":true}],["                                                             unix │ utf-8 │ cpp │   2% ",{}],[" LN   2",{"bold":true}],[":1  ",{}],[" ",{"bold":true,"inverse":true}],[" ~/NERD_tree_1 ",{"bold":true}],["       ",{}]]},"cursor":{"x":27,"y":0,"visible":true}}],[0.020886,{"lines":{"47":[["                                                                                                                                                     k          ",{}]]},"cursor":{"visible":false}}],[0.001841,{"lines":{"0":[["\" Press <F1> for hel",{"fg":6,"bold":true}],["|",{"inverse":true}],["                                                                                                                    ",{}],["|",{"inverse":true}],["  1 ",{"fg":3,"bold":true}],["\" Press ? for help",{"fg":5,"bold":true}]],"1":[["                    ",{}],["|",{"inverse":true}],["  ",{"fg":6,"bg":0,"bold":true}],["  2 ",{"fg":3,"bold":true}],["#include ",{"fg":4,"bold":true,"underline":true}],["<vector>",{"fg":5,"bold":true,"underline":true}],["                                                                                             ",{"underline":true}],["|",{"inverse":true}],["  2 ",{"fg":3,"bold":true}],["                  ",{}]],"2":[["▼",{"fg":3,"bold":true}],[" First",{"fg":5,"bold":true}],[" : ",{}],["struct",{"fg":2,"bold":true}],["    ",{}],["|",{"inverse":true}],["  ",{"fg":6,"bg":0,"bold":true}],["  3 ",{"fg":3,"bold":true}],["                                                                                                              ",{}],["|",{"inverse":true}],["  3 ",{"fg":3,"bold":true}],[".. (up a dir)",{"fg":6,"bold":true}],["     ",{}]],"3":[["    [prototypes]",{"fg":6,"bold":true}],["    ",{}],["|",{"inverse":true}],["  ",{"fg":6,"bg":0,"bold":true}],["  4 using",{"fg":3,"bold":true}],[" ",{}],["namespace",{"fg":2,"bold":true}],[" std;                                                                                          ",{}],["|",{"inverse":true}],["  4 /root/",{"fg":3,"bold":true}],["            ",{}]],"4":[["   ",{}],["+",{"fg":2,"bold":true}],["FirstRun(void)  ",{}],["|",{"inverse":true}],["  ",{"fg":6,"bg":0,"bold":true}],["  5 ",{"fg":3,"bold":true}],["                                                                                                              ",{}],["|",{"inverse":true}],["  5 ",{"fg":3,"bold":true}],["▸ diary/",{"fg":6,"bold":true,"underline":true}],["          ",{"underline":true}]],"5":[["   ",{}],["+",{"fg":2,"bold":true}],["FirstRun2(void) ",{}],["|",{"inverse":true}],["  ",{"fg":6,"bg":0,"bold":true}],["  6 ",{"fg":3,"bold":true}],["struct",{"fg":2,"bold":true}],[" First                                                                                                  ",{}],["|",{"inverse":true}],["  6 ",{"fg":3,"bold":true}],["▸ temp/",{"fg":6,"bold":true}],["           ",{}]],"6":[["                    ",{}],["|",{"inverse":true}],["  ",{"fg":6,"bg":0,"bold":true}],["  7 ",{"fg":3,"bold":true}],["{                                                                                                             ",{}],["|",{"inverse":true}],["  7 ",{"fg":3,"bold":true}],["  anaconda-ks.cfg ",{}]],"7":[["▼",{"fg":3,"bold":true}],[" Last",{"fg":5,"bold":true}],[" : ",{}],["struct",{"fg":2,"bold":true}],["     ",{}],["|",{"inverse":true}],["  ",{"fg":6,"bg":0,"bold":true}],["  8 ",{"fg":3,"bold":true}],["    ",{}],["virtual",{"fg":2,"bold":true}],[" ",{}],["void",{"fg":2,"bold":true}],[" FirstRun(",{}],["void",{"fg":2,"bold":true}],[") = ",{}],["0",{"fg":5,"bold":true}],[";                                                                          ",{}],["|",{"inverse":true}],["  8 ",{"fg":3,"bold":true}],["  initial-setup-ks",{}]],"8":[["    [functions]",{"fg":6,"bold":true}],["     ",{}],["|",{"inverse":true}],["  ",{"fg":6,"bg":0,"bold":true}],["  9 ",{"fg":3,"bold":true}],["    ",{}],["virtual",{"fg":2,"bold":true}],[" ",{}],["void",{"fg":2,"bold":true}],[" FirstRun2(",{}],["void",{"fg":2,"bold":true}],[") = ",{}],["0",{"fg":5,"bold":true}],[";                                                                         ",{}],["|",{"inverse":true}],["  9 ",{"fg":3,"bold":true}],["  test.c          ",{}]],"9":[["   ",{}],["+",{"fg":2,"bold":true}],["FirstRun(void)  ",{}],["|",{"inverse":true}],["  ",{"fg":6,"bg":0,"bold":true}],[" 10 ",{"fg":3,"bold":true}],["};                                                                                                            ",{}],["|",{"inverse":true}],[" 10 ",{"fg":3,"bold":true}],["  test.cpp        ",{}]],"10":[["   ",{}],["+",{"fg":2,"bold":true}],["FirstRun2(void) ",{}],["|",{"inverse":true}],["  ",{"fg":6,"bg":0,"bold":true}],[" 11 ",{"fg":3,"bold":true}],["                                                                                                              ",{}],["|",{"inverse":true}],["~                     ",{"fg":4,"bold":true}]],"11":[["   ",{}],["+",{"fg":2,"bold":true}],["~Last()         ",{}],["|",{"inverse":true}],["  ",{"fg":6,"bg":0,"bold":true}],[" 12 ",{"fg":3,"bold":true}],["struct",{"fg":2,"bold":true}],[" Second                                                                                                 ",{}],["|",{"inverse":true}],["~                     ",{"fg":4,"bold":true}]],"47":[["                                                                                                                                                                ",{}]]},"cursor":{"x":137,"y":11}}],[0.020861,{"lines":{"12":[["   ",{}],["+",{"fg":2,"bold":true}],["SecondRun(void) ",{}],["|",{"inverse":true}],["  ",{"fg":6,"bg":0,"bold":true}],[" 13 ",{"fg":3,"bold":true}],["{                                                                                                             ",{}],["|",{"inverse":true}],["~                     ",{"fg":4,"bold":true}]],"13":[["   ",{}],["+",{"fg":2,"bold":true}],["SecondRun2(void)",{}],["|",{"inverse":true}],["  ",{"fg":6,"bg":0,"bold":true}],[" 14 ",{"fg":3,"bold":true}],["    ",{}],["virtual",{"fg":2,"bold":true}],[" ",{}],["void",{"fg":2,"bold":true}],[" SecondRun(",{}],["void",{"fg":2,"bold":true}],[") = ",{}],["0",{"fg":5,"bold":true}],[";                                                                         ",{}],["|",{"inverse":true}],["~                     ",{"fg":4,"bold":true}]],"14":[["                    ",{}],["|",{"inverse":true}],["  ",{"fg":6,"bg":0,"bold":true}],[" 15 ",{"fg":3,"bold":true}],["    ",{}],["virtual",{"fg":2,"bold":true}],[" ",{}],["void",{"fg":2,"bold":true}],[" SecondRun2(",{}],["void",{"fg":2,"bold":true}],[") = ",{}],["0",{"fg":5,"bold":true}],[";                                                                        ",{}],["|",{"inverse":true}],["~                     ",{"fg":4,"bold":true}]],"15":[["▼",{"fg":3,"bold":true}],[" Second",{"fg":5,"bold":true}],[" : ",{}],["struct",{"fg":2,"bold":true}],["   ",{}],["|",{"inverse":true}],["  ",{"fg":6,"bg":0,"bold":true}],[" 16 ",{"fg":3,"bold":true}],["};                                                                                                            ",{}],["|",{"inverse":true}],["~                     ",{"fg":4,"bold":true}]],"16":[["    [prototypes]",{"fg":6,"bold":true}],["    ",{}],["|",{"inverse":true}],["  ",{"fg":6,"bg":0,"bold":true}],[" 17 ",{"fg":3,"bold":true}],["                                                                                                              ",{}],["|",{"inverse":true}],["~                     ",{"fg":4,"bold":true}]],"17":[["   ",{}],["+",{"fg":2,"bold":true}],["SecondRun(void) ",{}],["|",{"inverse":true}],["  ",{"fg":6,"bg":0,"bold":true}],[" 18 ",{"fg":3,"bold":true}],["struct",{"fg":2,"bold":true}],[" Last: ",{}],["public",{"fg":3,"bold":true}],[" First,                                                                                    ",{}],["|",{"inverse":true}],["~                     ",{"fg":4,"bold":true}]]},"cursor":{"x":101,"y":17}}],[0.013117,{"lines":{"0":[["\" Press <F1> for hel",{"fg":6,"bold":true}],["|",{"inverse":true}],["  ",{"fg":6,"bg":0,"bold":true}],["  1 ",{"fg":3,"bold":true}],["#include ",{"fg":4,"bold":true,"underline":true}],["<iostream>",{"fg":5,"bold":true,"underline":true}],["                                                                                           ",{"underline":true}],["|",{"inverse":true}],["  1 ",{"fg":3,"bold":true}],["\" Press ? for help",{"fg":5,"bold":true}]],"1":[["                    ",{}],["|",{"inverse":true}],["  ",{"fg":6,"bg":0,"bold":true}],["  2 ",{"fg":3,"bold":true}],["#include ",{"fg":4,"bold":true}],["<vector>",{"fg":5,"bold":true}],["                                                                                             ",{}],["|",{"inverse":true}],["  2 ",{"fg":3,"bold":true}],["                  ",{}]],"18":[["   ",{}],["+",{"fg":2,"bold":true}],["SecondRun2(void)",{}],["|",{"inverse":true}],["  ",{"fg":6,"bg":0,"bold":true}],[" 19 ",{"fg":3,"bold":true}],["    ",{}],["public",{"fg":3,"bold":true}],[" Second                                                                                             ",{}],["|",{"inverse":true}],["~                     ",{"fg":4,"bold":true}]],"19":[["                    ",{}],["|",{"inverse":true}],["  ",{"fg":6,"bg":0,"bold":true}],[" 20 ",{"fg":3,"bold":true}],["{                                                                                                             ",{}],["|",{"inverse":true}],["~                     ",{"fg":4,"bold":true}]],"20":[["▼",{"fg":3,"bold":true}],[" ",{}],["functions",{"fg":6,"bold":true}],["         ",{}],["|",{"inverse":true}],["  ",{"fg":6,"bg":0,"bold":true}],[" 21 ",{"fg":3,"bold":true}],["    ",{}],["// 基类First的虚方法",{"fg":6,"bold":true}],["                                                                                      ",{}],["|",{"inverse":true}],["~                     ",{"fg":4,"bold":true}]],"21":[["    ",{"underline":true}],["main",{"fg":0,"bg":3}],["(int argc, c",{"underline":true}],["|",{"inverse":true}],["  ",{"fg":6,"bg":0,"bold":true}],[" 22 ",{"fg":3,"bold":true}],["    ",{}],["virtual",{"fg":2,"bold":true}],[" ",{}],["void",{"fg":2,"bold":true}],[" FirstRun(",{}],["void",{"fg":2,"bold":true}],[")                                                                               ",{}],["|",{"inverse":true}],["~                     ",{"fg":4,"bold":true}]],"22":[["~                   ",{"fg":4,"bold":true}],["|",{"inverse":true}],["  ",{"fg":6,"bg":0,"bold":true}],[" 23 ",{"fg":3,"bold":true}],["    {                                                                                                         ",{}],["|",{"inverse":true}],["~                     ",{"fg":4,"bold":true}]],"23":[["~                   ",{"fg":4,"bold":true}],["|",{"inverse":true}],["  ",{"fg":6,"bg":0,"bold":true}],[" 24 ",{"fg":3,"bold":true}],["    ",{}],["|",{"fg":2,"bold":true}],["   cout << ",{}],["\"First\"",{"fg":5,"bold":true}],[" << endl;                                                                              ",{}],["|",{"inverse":true}],["~                     ",{"fg":4,"bold":true}]],"24":[["~                   ",{"fg":4,"bold":true}],["|",{"inverse":true}],["  ",{"fg":6,"bg":0,"bold":true}],[" 25 ",{"fg":3,"bold":true}],["    }                                                                                                         ",{}],["|",{"inverse":true}],["~                     ",{"fg":4,"bold":true}]],"25":[["~                   ",{"fg":4,"bold":true}],["|",{"inverse":true}],["  ",{"fg":6,"bg":0,"bold":true}],[" 26 ",{"fg":3,"bold":true}],["                                                                                                              ",{}],["|",{"inverse":true}],["~                     ",{"fg":4,"bold":true}]],"26":[["~                   ",{"fg":4,"bold":true}],["|",{"inverse":true}],["  ",{"fg":6,"bg":0,"bold":true}],[" 27 ",{"fg":3,"bold":true}],["    ",{}],["virtual",{"fg":2,"bold":true}],[" ",{}],["void",{"fg":2,"bold":true}],[" FirstRun2(",{}],["void",{"fg":2,"bold":true}],[")                                                                              ",{}],["|",{"inverse":true}],["~                     ",{"fg":4,"bold":true}]],"27":[["~                   ",{"fg":4,"bold":true}],["|",{"inverse":true}],["  ",{"fg":6,"bg":0,"bold":true}],[" 28 ",{"fg":3,"bold":true}],["    {                                                                                                         ",{}],["|",{"inverse":true}],["~                     ",{"fg":4,"bold":true}]],"28":[["~                   ",{"fg":4,"bold":true}],["|",{"inverse":true}],["  ",{"fg":6,"bg":0,"bold":true}],[" 29 ",{"fg":3,"bold":true}],["    ",{}],["|",{"fg":2,"bold":true}],["   cout << ",{}],["\"First2\"",{"fg":5,"bold":true}],[" << endl;                                                                             ",{}],["|",{"inverse":true}],["~                     ",{"fg":4,"bold":true}]],"29":[["~                   ",{"fg":4,"bold":true}],["|",{"inverse":true}],["  ",{"fg":6,"bg":0,"bold":true}],[" 30 ",{"fg":3,"bold":true}],["    }                                                                                                         ",{}],["|",{"inverse":true}],["~                     ",{"fg":4,"bold":true}]],"30":[["~                   ",{"fg":4,"bold":true}],["|",{"inverse":true}],["  ",{"fg":6,"bg":0,"bold":true}],[" 31 ",{"fg":3,"bold":true}],["                                                                                                              ",{}],["|",{"inverse":true}],["~                     ",{"fg":4,"bold":true}]],"31":[["~                   ",{"fg":4,"bold":true}],["|",{"inverse":true}],["  ",{"fg":6,"bg":0,"bold":true}],[" 32 ",{"fg":3,"bold":true}],["    ",{}],["// 基类Second虚方法",{"fg":6,"bold":true}],["                                                                                       ",{}],["|",{"inverse":true}],["~                     ",{"fg":4,"bold":true}]],"32":[["~                   ",{"fg":4,"bold":true}],["|",{"inverse":true}],["  ",{"fg":6,"bg":0,"bold":true}],[" 33 ",{"fg":3,"bold":true}],["    ",{}],["virtual",{"fg":2,"bold":true}],[" ",{}],["void",{"fg":2,"bold":true}],[" SecondRun(",{}],["void",{"fg":2,"bold":true}],[")                                                                              ",{}],["|",{"inverse":true}],["~                     ",{"fg":4,"bold":true}]],"33":[["~                   ",{"fg":4,"bold":true}],["|",{"inverse":true}],["  ",{"fg":6,"bg":0,"bold":true}],[" 34 ",{"fg":3,"bold":true}],["    {                                                                                                         ",{}],["|",{"inverse":true}],["~                     ",{"fg":4,"bold":true}]],"34":[["~                   ",{"fg":4,"bold":true}],["|",{"inverse":true}],["  ",{"fg":6,"bg":0,"bold":true}],[" 35 ",{"fg":3,"bold":true}],["    ",{}],["|",{"fg":2,"bold":true}],["   cout <<",{}],["\"Second\"",{"fg":5,"bold":true}],[" << endl;                                                                              ",{}],["|",{"inverse":true}],["~                     ",{"fg":4,"bold":true}]],"35":[["~                   ",{"fg":4,"bold":true}],["|",{"inverse":true}],["  ",{"fg":6,"bg":0,"bold":true}],[" 36 ",{"fg":3,"bold":true}],["    }                                                                                                         ",{}],["|",{"inverse":true}],["~                     ",{"fg":4,"bold":true}]],"36":[["~                   ",{"fg":4,"bold":true}],["|",{"inverse":true}],["  ",{"fg":6,"bg":0,"bold":true}],[" 37 ",{"fg":3,"bold":true}],["                                                                                                              ",{}],["|",{"inverse":true}],["~                     ",{"fg":4,"bold":true}]],"37":[["~                   ",{"fg":4,"bold":true}],["|",{"inverse":true}],["  ",{"fg":6,"bg":0,"bold":true}],[" 38 ",{"fg":3,"bold":true}],["    ",{}],["virtual",{"fg":2,"bold":true}],[" ",{}],["void",{"fg":2,"bold":true}],[" SecondRun2(",{}],["void",{"fg":2,"bold":true}],[")                                                                             ",{}],["|",{"inverse":true}],["~                     ",{"fg":4,"bold":true}]],"38":[["~                   ",{"fg":4,"bold":true}],["|",{"inverse":true}],["  ",{"fg":6,"bg":0,"bold":true}],[" 39 ",{"fg":3,"bold":true}],["    {                                                                                                         ",{}],["|",{"inverse":true}],["~                     ",{"fg":4,"bold":true}]],"39":[["~                   ",{"fg":4,"bold":true}],["|",{"inverse":true}],["  ",{"fg":6,"bg":0,"bold":true}],[" 40 ",{"fg":3,"bold":true}],["    ",{}],["|",{"fg":2,"bold":true}],["   cout <<",{}],["\"Second2\"",{"fg":5,"bold":true}],[" << endl;                                                                             ",{}],["|",{"inverse":true}],["~                     ",{"fg":4,"bold":true}]],"40":[["~                   ",{"fg":4,"bold":true}],["|",{"inverse":true}],["  ",{"fg":6,"bg":0,"bold":true}],[" 41 ",{"fg":3,"bold":true}],["    }                                                                                                         ",{}],["|",{"inverse":true}],["~                     ",{"fg":4,"bold":true}]],"41":[["~                   ",{"fg":4,"bold":true}],["|",{"inverse":true}],["  ",{"fg":6,"bg":0,"bold":true}],[" 42 ",{"fg":3,"bold":true}],["                                                                                                              ",{}],["|",{"inverse":true}],["~                     ",{"fg":4,"bold":true}]],"42":[["~                   ",{"fg":4,"bold":true}],["|",{"inverse":true}],["  ",{"fg":6,"bg":0,"bold":true}],[" 43 ",{"fg":3,"bold":true}],["    ",{}],["virtual",{"fg":2,"bold":true}],[" ~Last()                                                                                           ",{}],["|",{"inverse":true}],["~                     ",{"fg":4,"bold":true}]],"43":[["~                   ",{"fg":4,"bold":true}],["|",{"inverse":true}],["  ",{"fg":6,"bg":0,"bold":true}],[" 44 ",{"fg":3,"bold":true}],["    {                                                                                                         ",{}],["|",{"inverse":true}],["~                     ",{"fg":4,"bold":true}]],"44":[["~                   ",{"fg":4,"bold":true}],["|",{"inverse":true}],["  ",{"fg":6,"bg":0,"bold":true}],[" 45 ",{"fg":3,"bold":true}],["                                                                                                              ",{}],["|",{"inverse":true}],["~                     ",{"fg":4,"bold":true}]],"45":[["~                   ",{"fg":4,"bold":true}],["|",{"inverse":true}],["  ",{"fg":6,"bg":0,"bold":true}],[" 46 ",{"fg":3,"bold":true}],["    }                                                                                                         ",{}],["|",{"inverse":true}],["~                     ",{"fg":4,"bold":true}]],"46":[["[Name] test.cpp      ",{"inverse":true}],[" NORMAL ",{"bold":true}],[" ",{}],["test.cpp ",{"bold":true}],["                                                             unix │ utf-8 │ cpp │   1% ",{}],[" LN   1",{"bold":true}],[":1  ",{}],[" ",{"bold":true,"inverse":true}],[" ~/NERD_tree_1 ",{"bold":true}],["       ",{}]]},"cursor":{"x":27,"y":0,"visible":true}}],[0.29134,{}],[0.251406,{}],[0.032371,{}],[0.033751,{}],[0.033415,{}],[0.034467,{}],[0.032493,{"lines":{"47":[["                                                                                                                                                     k          ",{}]]},"cursor":{"visible":false}}],[0.05135,{"lines":{"47":[["                                                                                                                                                                ",{}]]},"cursor":{"visible":true}}],[0.003555,{}],[0.015001,{}],[0.038669,{}],[0.029586,{}],[0.034233,{}],[0.033763,{}],[0.033987,{}],[0.083354,{}],[0.003614,{}],[0.015142,{}],[0.036967,{}],[0.031032,{}],[0.034059,{}],[2.042984,{"lines":{"21":[["    main(int argc, c",{"underline":true}],["|",{"inverse":true}],["  ",{"fg":6,"bg":0,"bold":true}],[" 22 ",{"fg":3,"bold":true}],["    ",{}],["virtual",{"fg":2,"bold":true}],[" ",{}],["void",{"fg":2,"bold":true}],[" FirstRun(",{}],["void",{"fg":2,"bold":true}],[")                                                                               ",{}],["|",{"inverse":true}],["~                     ",{"fg":4,"bold":true}]]},"cursor":{"x":8,"y":21,"visible":false}}],[0.012254,{"cursor":{"x":27,"y":0,"visible":true}}],[2.196103,{"lines":{"47":[["                                                                                                                                                     ^W         ",{}]]}}],[0.205187,{"lines":{"47":[["                                                                                                                                                     ^Wl        ",{}]]},"cursor":{"visible":false}}],[0.013671,{"lines":{"46":[["[Name] test.cpp       ",{"inverse":true}],["test.cpp ",{"bold":true}],["                                                                                           1% ",{}],["│ LN   1",{"bold":true}],[":1  ",{}],[" ",{"inverse":true}],[" ~/NERD_tree_1 ",{"bold":true}],["       ",{}]],"47":[["                                                                                                                                                                ",{}]]},"cursor":{"x":142,"y":4,"visible":true}}],[1.380523,{"cursor":{"visible":false}}],[0.044599,{"lines":{"4":[["   ",{}],["+",{"fg":2,"bold":true}],["FirstRun(void)  ",{}],["|",{"inverse":true}],["  ",{"fg":6,"bg":0,"bold":true}],["  5 ",{"fg":3,"bold":true}],["                                                                                                              ",{}],["|",{"inverse":true}],["  5 ",{"fg":3,"bold":true}],["▸ .asciinema/",{"fg":6,"bold":true}],["     ",{}]],"5":[["   ",{}],["+",{"fg":2,"bold":true}],["FirstRun2(void) ",{}],["|",{"inverse":true}],["  ",{"fg":6,"bg":0,"bold":true}],["  6 ",{"fg":3,"bold":true}],["struct",{"fg":2,"bold":true}],[" First                                                                                                  ",{}],["|",{"inverse":true}],["  6 ",{"fg":3,"bold":true}],["▸ .cache/",{"fg":6,"bold":true}],["         ",{}]],"6":[["                    ",{}],["|",{"inverse":true}],["  ",{"fg":6,"bg":0,"bold":true}],["  7 ",{"fg":3,"bold":true}],["{                                                                                                             ",{}],["|",{"inverse":true}],["  7 ",{"fg":3,"bold":true}],["▸ .config/",{"fg":6,"bold":true}],["        ",{}]],"7":[["▼",{"fg":3,"bold":true}],[" Last",{"fg":5,"bold":true}],[" : ",{}],["struct",{"fg":2,"bold":true}],["     ",{}],["|",{"inverse":true}],["  ",{"fg":6,"bg":0,"bold":true}],["  8 ",{"fg":3,"bold":true}],["    ",{}],["virtual",{"fg":2,"bold":true}],[" ",{}],["void",{"fg":2,"bold":true}],[" FirstRun(",{}],["void",{"fg":2,"bold":true}],[") = ",{}],["0",{"fg":5,"bold":true}],[";                                                                          ",{}],["|",{"inverse":true}],["  8 ",{"fg":3,"bold":true}],["▸ .dbus/",{"fg":6,"bold":true}],["          ",{}]],"8":[["    [functions]",{"fg":6,"bold":true}],["     ",{}],["|",{"inverse":true}],["  ",{"fg":6,"bg":0,"bold":true}],["  9 ",{"fg":3,"bold":true}],["    ",{}],["virtual",{"fg":2,"bold":true}],[" ",{}],["void",{"fg":2,"bold":true}],[" FirstRun2(",{}],["void",{"fg":2,"bold":true}],[") = ",{}],["0",{"fg":5,"bold":true}],[";                                                                         ",{}],["|",{"inverse":true}],["  9 ",{"fg":3,"bold":true}],["▸ .gnupg/",{"fg":6,"bold":true}],["         ",{}]],"9":[["   ",{}],["+",{"fg":2,"bold":true}],["FirstRun(void)  ",{}],["|",{"inverse":true}],["  ",{"fg":6,"bg":0,"bold":true}],[" 10 ",{"fg":3,"bold":true}],["};                                                                                                            ",{}],["|",{"inverse":true}],[" 10 ",{"fg":3,"bold":true}],["▸ .kde/",{"fg":6,"bold":true}],["           ",{}]],"10":[["   ",{}],["+",{"fg":2,"bold":true}],["FirstRun2(void) ",{}],["|",{"inverse":true}],["  ",{"fg":6,"bg":0,"bold":true}],[" 11 ",{"fg":3,"bold":true}],["                                                                                                              ",{}],["|",{"inverse":true}],[" 11 ",{"fg":3,"bold":true}],["▸ .local/",{"fg":6,"bold":true}],["         ",{}]],"11":[["   ",{}],["+",{"fg":2,"bold":true}],["~Last()         ",{}],["|",{"inverse":true}],["  ",{"fg":6,"bg":0,"bold":true}],[" 12 ",{"fg":3,"bold":true}],["struct",{"fg":2,"bold":true}],[" Second                                                                                                 ",{}],["|",{"inverse":true}],[" 12 ",{"fg":3,"bold":true}],["▸ .pki/",{"fg":6,"bold":true}],["           ",{}]],"12":[["   ",{}],["+",{"fg":2,"bold":true}],["SecondRun(void) ",{}],["|",{"inverse":true}],["  ",{"fg":6,"bg":0,"bold":true}],[" 13 ",{"fg":3,"bold":true}],["{                                                                                                             ",{}],["|",{"inverse":true}],[" 13 ",{"fg":3,"bold":true}],["▸ .ssh/",{"fg":6,"bold":true}],["           ",{}]],"13":[["   ",{}],["+",{"fg":2,"bold":true}],["SecondRun2(void)",{}],["|",{"inverse":true}],["  ",{"fg":6,"bg":0,"bold":true}],[" 14 ",{"fg":3,"bold":true}],["    ",{}],["virtual",{"fg":2,"bold":true}],[" ",{}],["void",{"fg":2,"bold":true}],[" SecondRun(",{}],["void",{"fg":2,"bold":true}],[") = ",{}],["0",{"fg":5,"bold":true}],[";                                                                         ",{}],["|",{"inverse":true}],[" 14 ",{"fg":3,"bold":true}],["▸ .vim/",{"fg":6,"bold":true}],["           ",{}]],"14":[["                    ",{}],["|",{"inverse":true}],["  ",{"fg":6,"bg":0,"bold":true}],[" 15 ",{"fg":3,"bold":true}],["    ",{}],["virtual",{"fg":2,"bold":true}],[" ",{}],["void",{"fg":2,"bold":true}],[" SecondRun2(",{}],["void",{"fg":2,"bold":true}],[") = ",{}],["0",{"fg":5,"bold":true}],[";                                                                        ",{}],["|",{"inverse":true}],[" 15 ",{"fg":3,"bold":true}],["▸ diary/",{"fg":6,"bold":true,"underline":true}],["          ",{"underline":true}]],"15":[["▼",{"fg":3,"bold":true}],[" Second",{"fg":5,"bold":true}],[" : ",{}],["struct",{"fg":2,"bold":true}],["   ",{}],["|",{"inverse":true}],["  ",{"fg":6,"bg":0,"bold":true}],[" 16 ",{"fg":3,"bold":true}],["};                                                                                                            ",{}],["|",{"inverse":true}],[" 16 ",{"fg":3,"bold":true}],["▸ temp/",{"fg":6,"bold":true}],["           ",{}]],"16":[["    [prototypes]",{"fg":6,"bold":true}],["    ",{}],["|",{"inverse":true}],["  ",{"fg":6,"bg":0,"bold":true}],[" 17 ",{"fg":3,"bold":true}],["                                                                                                              ",{}],["|",{"inverse":true}],[" 17 ",{"fg":3,"bold":true}],["  .bash_history   ",{}]],"17":[["   ",{}],["+",{"fg":2,"bold":true}],["SecondRun(void) ",{}],["|",{"inverse":true}],["  ",{"fg":6,"bg":0,"bold":true}],[" 18 ",{"fg":3,"bold":true}],["struct",{"fg":2,"bold":true}],[" Last: ",{}],["public",{"fg":3,"bold":true}],[" First,                                                                                    ",{}],["|",{"inverse":true}],[" 18 ",{"fg":3,"bold":true}],["  .bash_logout    ",{}]],"18":[["   ",{}],["+",{"fg":2,"bold":true}],["SecondRun2(void)",{}],["|",{"inverse":true}],["  ",{"fg":6,"bg":0,"bold":true}],[" 19 ",{"fg":3,"bold":true}],["    ",{}],["public",{"fg":3,"bold":true}],[" Second                                                                                             ",{}],["|",{"inverse":true}],[" 19 ",{"fg":3,"bold":true}],["  .bash_profile   ",{}]],"19":[["                    ",{}],["|",{"inverse":true}],["  ",{"fg":6,"bg":0,"bold":true}],[" 20 ",{"fg":3,"bold":true}],["{                                                                                                             ",{}],["|",{"inverse":true}],[" 20 ",{"fg":3,"bold":true}],["  .bashrc         ",{}]],"20":[["▼",{"fg":3,"bold":true}],[" ",{}],["functions",{"fg":6,"bold":true}],["         ",{}],["|",{"inverse":true}],["  ",{"fg":6,"bg":0,"bold":true}],[" 21 ",{"fg":3,"bold":true}],["    ",{}],["// 基类First的虚方法",{"fg":6,"bold":true}],["                                                                                      ",{}],["|",{"inverse":true}],[" 21 ",{"fg":3,"bold":true}],["  .cshrc          ",{}]],"21":[["    main(int argc, c",{"underline":true}],["|",{"inverse":true}],["  ",{"fg":6,"bg":0,"bold":true}],[" 22 ",{"fg":3,"bold":true}],["    ",{}],["virtual",{"fg":2,"bold":true}],[" ",{}],["void",{"fg":2,"bold":true}],[" FirstRun(",{}],["void",{"fg":2,"bold":true}],[")                                                                               ",{}],["|",{"inverse":true}],[" 22 ",{"fg":3,"bold":true}],["  .dmrc           ",{}]],"22":[["~                   ",{"fg":4,"bold":true}],["|",{"inverse":true}],["  ",{"fg":6,"bg":0,"bold":true}],[" 23 ",{"fg":3,"bold":true}],["    {                                                                                                         ",{}],["|",{"inverse":true}],[" 23 ",{"fg":3,"bold":true}],["  .esd_auth       ",{}]],"23":[["~                   ",{"fg":4,"bold":true}],["|",{"inverse":true}],["  ",{"fg":6,"bg":0,"bold":true}],[" 24 ",{"fg":3,"bold":true}],["    ",{}],["|",{"fg":2,"bold":true}],["   cout << ",{}],["\"First\"",{"fg":5,"bold":true}],[" << endl;                                                                              ",{}],["|",{"inverse":true}],[" 24 ",{"fg":3,"bold":true}],["  .gtkrc-2.0      ",{}]],"24":[["~                   ",{"fg":4,"bold":true}],["|",{"inverse":true}],["  ",{"fg":6,"bg":0,"bold":true}],[" 25 ",{"fg":3,"bold":true}],["    }                                                                                                         ",{}],["|",{"inverse":true}],[" 25 ",{"fg":3,"bold":true}],["  .gtkrc-2.0-kde4",{}],[" ",{"fg":4,"bold":true}]]},"cursor":{"x":159,"y":24}}],[0.000296,{"lines":{"24":[["~                   ",{"fg":4,"bold":true}],["|",{"inverse":true}],["  ",{"fg":6,"bg":0,"bold":true}],[" 25 ",{"fg":3,"bold":true}],["    }                                                                                                         ",{}],["|",{"inverse":true}],[" 25 ",{"fg":3,"bold":true}],["  .gtkrc-2.0-kde4 ",{}]],"25":[["~                   ",{"fg":4,"bold":true}],["|",{"inverse":true}],["  ",{"fg":6,"bg":0,"bold":true}],[" 26 ",{"fg":3,"bold":true}],["                                                                                                              ",{}],["|",{"inverse":true}],[" 26 ",{"fg":3,"bold":true}],["  .lesshst        ",{}]],"26":[["~                   ",{"fg":4,"bold":true}],["|",{"inverse":true}],["  ",{"fg":6,"bg":0,"bold":true}],[" 27 ",{"fg":3,"bold":true}],["    ",{}],["virtual",{"fg":2,"bold":true}],[" ",{}],["void",{"fg":2,"bold":true}],[" FirstRun2(",{}],["void",{"fg":2,"bold":true}],[")                                                                              ",{}],["|",{"inverse":true}],[" 27 ",{"fg":3,"bold":true}],["  .tcshrc         ",{}]],"27":[["~                   ",{"fg":4,"bold":true}],["|",{"inverse":true}],["  ",{"fg":6,"bg":0,"bold":true}],[" 28 ",{"fg":3,"bold":true}],["    {                                                                                                         ",{}],["|",{"inverse":true}],[" 28 ",{"fg":3,"bold":true}],["  .viminfo        ",{}]],"28":[["~                   ",{"fg":4,"bold":true}],["|",{"inverse":true}],["  ",{"fg":6,"bg":0,"bold":true}],[" 29 ",{"fg":3,"bold":true}],["    ",{}],["|",{"fg":2,"bold":true}],["   cout << ",{}],["\"First2\"",{"fg":5,"bold":true}],[" << endl;                                                                             ",{}],["|",{"inverse":true}],[" 29 ",{"fg":3,"bold":true}],["  .vimrc          ",{}]],"29":[["~                   ",{"fg":4,"bold":true}],["|",{"inverse":true}],["  ",{"fg":6,"bg":0,"bold":true}],[" 30 ",{"fg":3,"bold":true}],["    }                                                                                                         ",{}],["|",{"inverse":true}],[" 30 ",{"fg":3,"bold":true}],["  .xsession-errors",{}]],"30":[["~                   ",{"fg":4,"bold":true}],["|",{"inverse":true}],["  ",{"fg":6,"bg":0,"bold":true}],[" 31 ",{"fg":3,"bold":true}],["                                                                                                              ",{}],["|",{"inverse":true}],[" 31 ",{"fg":3,"bold":true}],["  anaconda-ks.cfg ",{}]],"31":[["~                   ",{"fg":4,"bold":true}],["|",{"inverse":true}],["  ",{"fg":6,"bg":0,"bold":true}],[" 32 ",{"fg":3,"bold":true}],["    ",{}],["// 基类Second虚方法",{"fg":6,"bold":true}],["                                                                                       ",{}],["|",{"inverse":true}],[" 32 ",{"fg":3,"bold":true}],["  initial-setup-ks",{}]],"32":[["~                   ",{"fg":4,"bold":true}],["|",{"inverse":true}],["  ",{"fg":6,"bg":0,"bold":true}],[" 33 ",{"fg":3,"bold":true}],["    ",{}],["virtual",{"fg":2,"bold":true}],[" ",{}],["void",{"fg":2,"bold":true}],[" SecondRun(",{}],["void",{"fg":2,"bold":true}],[")                                                                              ",{}],["|",{"inverse":true}],[" 33 ",{"fg":3,"bold":true}],["  test.c          ",{}]],"33":[["~                   ",{"fg":4,"bold":true}],["|",{"inverse":true}],["  ",{"fg":6,"bg":0,"bold":true}],[" 34 ",{"fg":3,"bold":true}],["    {                                                                                                         ",{}],["|",{"inverse":true}],[" 34 ",{"fg":3,"bold":true}],["  test.cpp        ",{}]],"34":[["~                   ",{"fg":4,"bold":true}],["|",{"inverse":true}],["  ",{"fg":6,"bg":0,"bold":true}],[" 35 ",{"fg":3,"bold":true}],["    ",{}],["|",{"fg":2,"bold":true}],["   cout <<",{}],["\"Second\"",{"fg":5,"bold":true}],[" << endl;                                                                              ",{}],["|",{"inverse":true}],[" 35 ",{"fg":3,"bold":true}],["  .test.cpp.swp   ",{}]]},"cursor":{"x":142,"y":14,"visible":true}}],[0.426023,{"lines":{"47":[["                                                                                                                                                     j          ",{}]]},"cursor":{"visible":false}}],[0.000447,{"lines":{"14":[["                    ",{}],["|",{"inverse":true}],["  ",{"fg":6,"bg":0,"bold":true}],[" 15 ",{"fg":3,"bold":true}],["    ",{}],["virtual",{"fg":2,"bold":true}],[" ",{}],["void",{"fg":2,"bold":true}],[" SecondRun2(",{}],["void",{"fg":2,"bold":true}],[") = ",{}],["0",{"fg":5,"bold":true}],[";                                                                        ",{}],["|",{"inverse":true}],[" 15 ",{"fg":3,"bold":true}],["▸ diary/",{"fg":6,"bold":true}],["          ",{}]],"15":[["▼",{"fg":3,"bold":true}],[" Second",{"fg":5,"bold":true}],[" : ",{}],["struct",{"fg":2,"bold":true}],["   ",{}],["|",{"inverse":true}],["  ",{"fg":6,"bg":0,"bold":true}],[" 16 ",{"fg":3,"bold":true}],["};                                                                                                            ",{}],["|",{"inverse":true}],[" 16 ",{"fg":3,"bold":true}],["▸ temp/",{"fg":6,"bold":true,"underline":true}],["           ",{"underline":true}]],"47":[["                                                                                                                                                                ",{}]]},"cursor":{"y":15,"visible":true}}],[0.249649,{"lines":{"47":[["                                                                                                                                                     j          ",{}]]},"cursor":{"visible":false}}],[0.001091,{"lines":{"15":[["▼",{"fg":3,"bold":true}],[" Second",{"fg":5,"bold":true}],[" : ",{}],["struct",{"fg":2,"bold":true}],["   ",{}],["|",{"inverse":true}],["  ",{"fg":6,"bg":0,"bold":true}],[" 16 ",{"fg":3,"bold":true}],["};                                                                                                            ",{}],["|",{"inverse":true}],[" 16 ",{"fg":3,"bold":true}],["▸ temp/",{"fg":6,"bold":true}],["           ",{}]],"16":[["    [prototypes]",{"fg":6,"bold":true}],["    ",{}],["|",{"inverse":true}],["  ",{"fg":6,"bg":0,"bold":true}],[" 17 ",{"fg":3,"bold":true}],["                                                                                                              ",{}],["|",{"inverse":true}],[" 17 ",{"fg":3,"bold":true}],["  .bash_history   ",{"underline":true}]],"47":[["                                                                                                                                                                ",{}]]},"cursor":{"y":16,"visible":true}}],[0.041919,{"lines":{"47":[["                                                                                                                                                     j          ",{}]]},"cursor":{"visible":false}}],[0.001271,{"lines":{"16":[["    [prototypes]",{"fg":6,"bold":true}],["    ",{}],["|",{"inverse":true}],["  ",{"fg":6,"bg":0,"bold":true}],[" 17 ",{"fg":3,"bold":true}],["                                                                                                              ",{}],["|",{"inverse":true}],[" 17 ",{"fg":3,"bold":true}],["  .bash_history   ",{}]],"17":[["   ",{}],["+",{"fg":2,"bold":true}],["SecondRun(void) ",{}],["|",{"inverse":true}],["  ",{"fg":6,"bg":0,"bold":true}],[" 18 ",{"fg":3,"bold":true}],["struct",{"fg":2,"bold":true}],[" Last: ",{}],["public",{"fg":3,"bold":true}],[" First,                                                                                    ",{}],["|",{"inverse":true}],[" 18 ",{"fg":3,"bold":true}],["  .bash_logout    ",{"underline":true}]],"47":[["                                                                                                                                                                ",{}]]},"cursor":{"y":17,"visible":true}}],[0.243572,{"lines":{"17":[["   ",{}],["+",{"fg":2,"bold":true}],["SecondRun(void) ",{}],["|",{"inverse":true}],["  ",{"fg":6,"bg":0,"bold":true}],[" 18 ",{"fg":3,"bold":true}],["struct",{"fg":2,"bold":true}],[" Last: ",{}],["public",{"fg":3,"bold":true}],[" First,                                                                                    ",{}],["|",{"inverse":true}],[" 18 ",{"fg":3,"bold":true}],["  .bash_logout    ",{}]],"18":[["   ",{}],["+",{"fg":2,"bold":true}],["SecondRun2(void)",{}],["|",{"inverse":true}],["  ",{"fg":6,"bg":0,"bold":true}],[" 19 ",{"fg":3,"bold":true}],["    ",{}],["public",{"fg":3,"bold":true}],[" Second                                                                                             ",{}],["|",{"inverse":true}],[" 19 ",{"fg":3,"bold":true}],["  .bash_profile   ",{"underline":true}]]},"cursor":{"y":18}}],[0.033278,{"lines":{"18":[["   ",{}],["+",{"fg":2,"bold":true}],["SecondRun2(void)",{}],["|",{"inverse":true}],["  ",{"fg":6,"bg":0,"bold":true}],[" 19 ",{"fg":3,"bold":true}],["    ",{}],["public",{"fg":3,"bold":true}],[" Second                                                                                             ",{}],["|",{"inverse":true}],[" 19 ",{"fg":3,"bold":true}],["  .bash_profile   ",{}]],"19":[["                    ",{}],["|",{"inverse":true}],["  ",{"fg":6,"bg":0,"bold":true}],[" 20 ",{"fg":3,"bold":true}],["{                                                                                                             ",{}],["|",{"inverse":true}],[" 20 ",{"fg":3,"bold":true}],["  .bashrc         ",{"underline":true}]]},"cursor":{"y":19}}],[0.033918,{"lines":{"19":[["                    ",{}],["|",{"inverse":true}],["  ",{"fg":6,"bg":0,"bold":true}],[" 20 ",{"fg":3,"bold":true}],["{                                                                                                             ",{}],["|",{"inverse":true}],[" 20 ",{"fg":3,"bold":true}],["  .bashrc         ",{}]],"20":[["▼",{"fg":3,"bold":true}],[" ",{}],["functions",{"fg":6,"bold":true}],["         ",{}],["|",{"inverse":true}],["  ",{"fg":6,"bg":0,"bold":true}],[" 21 ",{"fg":3,"bold":true}],["    ",{}],["// 基类First的虚方法",{"fg":6,"bold":true}],["                                                                                      ",{}],["|",{"inverse":true}],[" 21 ",{"fg":3,"bold":true}],["  .cshrc          ",{"underline":true}]]},"cursor":{"y":20}}],[0.031344,{"lines":{"47":[["                                                                                                                                                     j          ",{}]]},"cursor":{"visible":false}}],[0.005964,{"lines":{"20":[["▼",{"fg":3,"bold":true}],[" ",{}],["functions",{"fg":6,"bold":true}],["         ",{}],["|",{"inverse":true}],["  ",{"fg":6,"bg":0,"bold":true}],[" 21 ",{"fg":3,"bold":true}],["    ",{}],["// 基类First的虚方法",{"fg":6,"bold":true}],["                                                                                      ",{}],["|",{"inverse":true}],[" 21 ",{"fg":3,"bold":true}],["  .cshrc          ",{}]],"21":[["    main(int argc, c",{"underline":true}],["|",{"inverse":true}],["  ",{"fg":6,"bg":0,"bold":true}],[" 22 ",{"fg":3,"bold":true}],["    ",{}],["virtual",{"fg":2,"bold":true}],[" ",{}],["void",{"fg":2,"bold":true}],[" FirstRun(",{}],["void",{"fg":2,"bold":true}],[")                                                                               ",{}],["|",{"inverse":true}],[" 22 ",{"fg":3,"bold":true}],["  .dmrc           ",{"underline":true}]],"47":[["                                                                                                                                                                ",{}]]},"cursor":{"y":21,"visible":true}}],[0.031179,{"lines":{"21":[["    main(int argc, c",{"underline":true}],["|",{"inverse":true}],["  ",{"fg":6,"bg":0,"bold":true}],[" 22 ",{"fg":3,"bold":true}],["    ",{}],["virtual",{"fg":2,"bold":true}],[" ",{}],["void",{"fg":2,"bold":true}],[" FirstRun(",{}],["void",{"fg":2,"bold":true}],[")                                                                               ",{}],["|",{"inverse":true}],[" 22 ",{"fg":3,"bold":true}],["  .dmrc           ",{}]],"22":[["~                   ",{"fg":4,"bold":true}],["|",{"inverse":true}],["  ",{"fg":6,"bg":0,"bold":true}],[" 23 ",{"fg":3,"bold":true}],["    {                                                                                                         ",{}],["|",{"inverse":true}],[" 23 ",{"fg":3,"bold":true}],["  .esd_auth       ",{"underline":true}]]},"cursor":{"y":22}}],[0.033745,{"lines":{"22":[["~                   ",{"fg":4,"bold":true}],["|",{"inverse":true}],["  ",{"fg":6,"bg":0,"bold":true}],[" 23 ",{"fg":3,"bold":true}],["    {                                                                                                         ",{}],["|",{"inverse":true}],[" 23 ",{"fg":3,"bold":true}],["  .esd_auth       ",{}]],"23":[["~                   ",{"fg":4,"bold":true}],["|",{"inverse":true}],["  ",{"fg":6,"bg":0,"bold":true}],[" 24 ",{"fg":3,"bold":true}],["    ",{}],["|",{"fg":2,"bold":true}],["   cout << ",{}],["\"First\"",{"fg":5,"bold":true}],[" << endl;                                                                              ",{}],["|",{"inverse":true}],[" 24 ",{"fg":3,"bold":true}],["  .gtkrc-2.0      ",{"underline":true}]]},"cursor":{"y":23}}],[0.033838,{"lines":{"23":[["~                   ",{"fg":4,"bold":true}],["|",{"inverse":true}],["  ",{"fg":6,"bg":0,"bold":true}],[" 24 ",{"fg":3,"bold":true}],["    ",{}],["|",{"fg":2,"bold":true}],["   cout << ",{}],["\"First\"",{"fg":5,"bold":true}],[" << endl;                                                                              ",{}],["|",{"inverse":true}],[" 24 ",{"fg":3,"bold":true}],["  .gtkrc-2.0      ",{}]],"24":[["~                   ",{"fg":4,"bold":true}],["|",{"inverse":true}],["  ",{"fg":6,"bg":0,"bold":true}],[" 25 ",{"fg":3,"bold":true}],["    }                                                                                                         ",{}],["|",{"inverse":true}],[" 25 ",{"fg":3,"bold":true}],["  .gtkrc-2.0-kde4 ",{"underline":true}]]},"cursor":{"y":24}}],[0.034776,{"lines":{"24":[["~                   ",{"fg":4,"bold":true}],["|",{"inverse":true}],["  ",{"fg":6,"bg":0,"bold":true}],[" 25 ",{"fg":3,"bold":true}],["    }                                                                                                         ",{}],["|",{"inverse":true}],[" 25 ",{"fg":3,"bold":true}],["  .gtkrc-2.0-kde4 ",{}]],"25":[["~                   ",{"fg":4,"bold":true}],["|",{"inverse":true}],["  ",{"fg":6,"bg":0,"bold":true}],[" 26 ",{"fg":3,"bold":true}],["                                                                                                              ",{}],["|",{"inverse":true}],[" 26 ",{"fg":3,"bold":true}],["  .lesshst        ",{"underline":true}]]},"cursor":{"y":25}}],[0.034461,{"lines":{"25":[["~                   ",{"fg":4,"bold":true}],["|",{"inverse":true}],["  ",{"fg":6,"bg":0,"bold":true}],[" 26 ",{"fg":3,"bold":true}],["                                                                                                              ",{}],["|",{"inverse":true}],[" 26 ",{"fg":3,"bold":true}],["  .lesshst        ",{}]],"26":[["~                   ",{"fg":4,"bold":true}],["|",{"inverse":true}],["  ",{"fg":6,"bg":0,"bold":true}],[" 27 ",{"fg":3,"bold":true}],["    ",{}],["virtual",{"fg":2,"bold":true}],[" ",{}],["void",{"fg":2,"bold":true}],[" FirstRun2(",{}],["void",{"fg":2,"bold":true}],[")                                                                              ",{}],["|",{"inverse":true}],[" 27 ",{"fg":3,"bold":true}],["  .tcshrc         ",{"underline":true}]]},"cursor":{"y":26}}],[0.032395,{"lines":{"47":[["                                                                                                                                                     j          ",{}]]},"cursor":{"visible":false}}],[0.000769,{"lines":{"26":[["~                   ",{"fg":4,"bold":true}],["|",{"inverse":true}],["  ",{"fg":6,"bg":0,"bold":true}],[" 27 ",{"fg":3,"bold":true}],["    ",{}],["virtual",{"fg":2,"bold":true}],[" ",{}],["void",{"fg":2,"bold":true}],[" FirstRun2(",{}],["void",{"fg":2,"bold":true}],[")                                                                              ",{}],["|",{"inverse":true}],[" 27 ",{"fg":3,"bold":true}],["  .tcshrc         ",{}]],"27":[["~                   ",{"fg":4,"bold":true}],["|",{"inverse":true}],["  ",{"fg":6,"bg":0,"bold":true}],[" 28 ",{"fg":3,"bold":true}],["    {                                                                                                         ",{}],["|",{"inverse":true}],[" 28 ",{"fg":3,"bold":true}],["  .viminfo        ",{"underline":true}]],"47":[["                                                                                                                                                                ",{}]]},"cursor":{"y":27,"visible":true}}],[0.033956,{"lines":{"27":[["~                   ",{"fg":4,"bold":true}],["|",{"inverse":true}],["  ",{"fg":6,"bg":0,"bold":true}],[" 28 ",{"fg":3,"bold":true}],["    {                                                                                                         ",{}],["|",{"inverse":true}],[" 28 ",{"fg":3,"bold":true}],["  .viminfo        ",{}]],"28":[["~                   ",{"fg":4,"bold":true}],["|",{"inverse":true}],["  ",{"fg":6,"bg":0,"bold":true}],[" 29 ",{"fg":3,"bold":true}],["    ",{}],["|",{"fg":2,"bold":true}],["   cout << ",{}],["\"First2\"",{"fg":5,"bold":true}],[" << endl;                                                                             ",{}],["|",{"inverse":true}],[" 29 ",{"fg":3,"bold":true}],["  .vimrc          ",{"underline":true}]]},"cursor":{"y":28}}],[0.030866,{"lines":{"47":[["                                                                                                                                                     j          ",{}]]},"cursor":{"visible":false}}],[0.010666,{"lines":{"28":[["~                   ",{"fg":4,"bold":true}],["|",{"inverse":true}],["  ",{"fg":6,"bg":0,"bold":true}],[" 29 ",{"fg":3,"bold":true}],["    ",{}],["|",{"fg":2,"bold":true}],["   cout << ",{}],["\"First2\"",{"fg":5,"bold":true}],[" << endl;                                                                             ",{}],["|",{"inverse":true}],[" 29 ",{"fg":3,"bold":true}],["  .vimrc          ",{}]],"29":[["~                   ",{"fg":4,"bold":true}],["|",{"inverse":true}],["  ",{"fg":6,"bg":0,"bold":true}],[" 30 ",{"fg":3,"bold":true}],["    }                                                                                                         ",{}],["|",{"inverse":true}],[" 30 ",{"fg":3,"bold":true}],["  .xsession-errors",{"underline":true}]],"47":[["                                                                                                                                                                ",{}]]},"cursor":{"y":29,"visible":true}}],[0.02694,{"lines":{"29":[["~                   ",{"fg":4,"bold":true}],["|",{"inverse":true}],["  ",{"fg":6,"bg":0,"bold":true}],[" 30 ",{"fg":3,"bold":true}],["    }                                                                                                         ",{}],["|",{"inverse":true}],[" 30 ",{"fg":3,"bold":true}],["  .xsession-errors",{}]],"30":[["~                   ",{"fg":4,"bold":true}],["|",{"inverse":true}],["  ",{"fg":6,"bg":0,"bold":true}],[" 31 ",{"fg":3,"bold":true}],["                                                                                                              ",{}],["|",{"inverse":true}],[" 31 ",{"fg":3,"bold":true}],["  anaconda-ks.cfg ",{"underline":true}]]},"cursor":{"y":30}}],[0.033976,{"lines":{"47":[["                                                                                                                                                     j          ",{}]]},"cursor":{"visible":false}}],[0.000376,{"lines":{"30":[["~                   ",{"fg":4,"bold":true}],["|",{"inverse":true}],["  ",{"fg":6,"bg":0,"bold":true}],[" 31 ",{"fg":3,"bold":true}],["                                                                                                              ",{}],["|",{"inverse":true}],[" 31 ",{"fg":3,"bold":true}],["  anaconda-ks.cfg ",{}]],"31":[["~                   ",{"fg":4,"bold":true}],["|",{"inverse":true}],["  ",{"fg":6,"bg":0,"bold":true}],[" 32 ",{"fg":3,"bold":true}],["    ",{}],["// 基类Second虚方法",{"fg":6,"bold":true}],["                                                                                       ",{}],["|",{"inverse":true}],[" 32 ",{"fg":3,"bold":true}],["  initial-setup-ks",{"underline":true}]],"47":[["                                                                                                                                                                ",{}]]},"cursor":{"y":31,"visible":true}}],[0.030206,{"lines":{"47":[["                                                                                                                                                     j          ",{}]]},"cursor":{"visible":false}}],[0.006724,{"lines":{"31":[["~                   ",{"fg":4,"bold":true}],["|",{"inverse":true}],["  ",{"fg":6,"bg":0,"bold":true}],[" 32 ",{"fg":3,"bold":true}],["    ",{}],["// 基类Second虚方法",{"fg":6,"bold":true}],["                                                                                       ",{}],["|",{"inverse":true}],[" 32 ",{"fg":3,"bold":true}],["  initial-setup-ks",{}]],"32":[["~                   ",{"fg":4,"bold":true}],["|",{"inverse":true}],["  ",{"fg":6,"bg":0,"bold":true}],[" 33 ",{"fg":3,"bold":true}],["    ",{}],["virtual",{"fg":2,"bold":true}],[" ",{}],["void",{"fg":2,"bold":true}],[" SecondRun(",{}],["void",{"fg":2,"bold":true}],[")                                                                              ",{}],["|",{"inverse":true}],[" 33 ",{"fg":3,"bold":true}],["  test.c          ",{"underline":true}]],"47":[["                                                                                                                                                                ",{}]]},"cursor":{"y":32,"visible":true}}],[0.029831,{"lines":{"32":[["~                   ",{"fg":4,"bold":true}],["|",{"inverse":true}],["  ",{"fg":6,"bg":0,"bold":true}],[" 33 ",{"fg":3,"bold":true}],["    ",{}],["virtual",{"fg":2,"bold":true}],[" ",{}],["void",{"fg":2,"bold":true}],[" SecondRun(",{}],["void",{"fg":2,"bold":true}],[")                                                                              ",{}],["|",{"inverse":true}],[" 33 ",{"fg":3,"bold":true}],["  test.c          ",{}]],"33":[["~                   ",{"fg":4,"bold":true}],["|",{"inverse":true}],["  ",{"fg":6,"bg":0,"bold":true}],[" 34 ",{"fg":3,"bold":true}],["    {                                                                                                         ",{}],["|",{"inverse":true}],[" 34 ",{"fg":3,"bold":true}],["  test.cpp        ",{"underline":true}]]},"cursor":{"y":33}}],[0.034039,{"lines":{"33":[["~                   ",{"fg":4,"bold":true}],["|",{"inverse":true}],["  ",{"fg":6,"bg":0,"bold":true}],[" 34 ",{"fg":3,"bold":true}],["    {                                                                                                         ",{}],["|",{"inverse":true}],[" 34 ",{"fg":3,"bold":true}],["  test.cpp        ",{}]],"34":[["~                   ",{"fg":4,"bold":true}],["|",{"inverse":true}],["  ",{"fg":6,"bg":0,"bold":true}],[" 35 ",{"fg":3,"bold":true}],["    ",{}],["|",{"fg":2,"bold":true}],["   cout <<",{}],["\"Second\"",{"fg":5,"bold":true}],[" << endl;                                                                              ",{}],["|",{"inverse":true}],[" 35 ",{"fg":3,"bold":true}],["  .test.cpp.swp   ",{"underline":true}]]},"cursor":{"y":34}}],[0.031973,{}],[0.189528,{"lines":{"47":[["                                                                                                                                                     k          ",{}]]},"cursor":{"visible":false}}],[0.001305,{"lines":{"33":[["~                   ",{"fg":4,"bold":true}],["|",{"inverse":true}],["  ",{"fg":6,"bg":0,"bold":true}],[" 34 ",{"fg":3,"bold":true}],["    {                                                                                                         ",{}],["|",{"inverse":true}],[" 34 ",{"fg":3,"bold":true}],["  test.cpp        ",{"underline":true}]],"34":[["~                   ",{"fg":4,"bold":true}],["|",{"inverse":true}],["  ",{"fg":6,"bg":0,"bold":true}],[" 35 ",{"fg":3,"bold":true}],["    ",{}],["|",{"fg":2,"bold":true}],["   cout <<",{}],["\"Second\"",{"fg":5,"bold":true}],[" << endl;                                                                              ",{}],["|",{"inverse":true}],[" 35 ",{"fg":3,"bold":true}],["  .test.cpp.swp   ",{}]],"47":[["                                                                                                                                                                ",{}]]},"cursor":{"y":33,"visible":true}}],[0.250439,{"lines":{"47":[["                                                                                                                                                     k          ",{}]]},"cursor":{"visible":false}}],[0.002097,{"lines":{"32":[["~                   ",{"fg":4,"bold":true}],["|",{"inverse":true}],["  ",{"fg":6,"bg":0,"bold":true}],[" 33 ",{"fg":3,"bold":true}],["    ",{}],["virtual",{"fg":2,"bold":true}],[" ",{}],["void",{"fg":2,"bold":true}],[" SecondRun(",{}],["void",{"fg":2,"bold":true}],[")                                                                              ",{}],["|",{"inverse":true}],[" 33 ",{"fg":3,"bold":true}],["  test.c          ",{"underline":true}]],"33":[["~                   ",{"fg":4,"bold":true}],["|",{"inverse":true}],["  ",{"fg":6,"bg":0,"bold":true}],[" 34 ",{"fg":3,"bold":true}],["    {                                                                                                         ",{}],["|",{"inverse":true}],[" 34 ",{"fg":3,"bold":true}],["  test.cpp        ",{}]],"47":[["                                                                                                                                                                ",{}]]},"cursor":{"y":32,"visible":true}}],[0.026989,{"lines":{"47":[["                                                                                                                                                     k          ",{}]]},"cursor":{"visible":false}}],[0.002935,{"lines":{"31":[["~                   ",{"fg":4,"bold":true}],["|",{"inverse":true}],["  ",{"fg":6,"bg":0,"bold":true}],[" 32 ",{"fg":3,"bold":true}],["    ",{}],["// 基类Second虚方法",{"fg":6,"bold":true}],["                                                                                       ",{}],["|",{"inverse":true}],[" 32 ",{"fg":3,"bold":true}],["  initial-setup-ks",{"underline":true}]],"32":[["~                   ",{"fg":4,"bold":true}],["|",{"inverse":true}],["  ",{"fg":6,"bg":0,"bold":true}],[" 33 ",{"fg":3,"bold":true}],["    ",{}],["virtual",{"fg":2,"bold":true}],[" ",{}],["void",{"fg":2,"bold":true}],[" SecondRun(",{}],["void",{"fg":2,"bold":true}],[")                                                                              ",{}],["|",{"inverse":true}],[" 33 ",{"fg":3,"bold":true}],["  test.c          ",{}]],"47":[["                                                                                                                                                                ",{}]]},"cursor":{"y":31,"visible":true}}],[0.034018,{"lines":{"30":[["~                   ",{"fg":4,"bold":true}],["|",{"inverse":true}],["  ",{"fg":6,"bg":0,"bold":true}],[" 31 ",{"fg":3,"bold":true}],["                                                                                                              ",{}],["|",{"inverse":true}],[" 31 ",{"fg":3,"bold":true}],["  anaconda-ks.cfg ",{"underline":true}]],"31":[["~                   ",{"fg":4,"bold":true}],["|",{"inverse":true}],["  ",{"fg":6,"bg":0,"bold":true}],[" 32 ",{"fg":3,"bold":true}],["    ",{}],["// 基类Second虚方法",{"fg":6,"bold":true}],["                                                                                       ",{}],["|",{"inverse":true}],[" 32 ",{"fg":3,"bold":true}],["  initial-setup-ks",{}]]},"cursor":{"y":30}}],[0.030914,{"lines":{"47":[["                                                                                                                                                     k          ",{}]]},"cursor":{"visible":false}}],[0.001772,{"lines":{"29":[["~                   ",{"fg":4,"bold":true}],["|",{"inverse":true}],["  ",{"fg":6,"bg":0,"bold":true}],[" 30 ",{"fg":3,"bold":true}],["    }                                                                                                         ",{}],["|",{"inverse":true}],[" 30 ",{"fg":3,"bold":true}],["  .xsession-errors",{"underline":true}]],"30":[["~                   ",{"fg":4,"bold":true}],["|",{"inverse":true}],["  ",{"fg":6,"bg":0,"bold":true}],[" 31 ",{"fg":3,"bold":true}],["                                                                                                              ",{}],["|",{"inverse":true}],[" 31 ",{"fg":3,"bold":true}],["  anaconda-ks.cfg ",{}]],"47":[["                                                                                                                                                                ",{}]]},"cursor":{"y":29,"visible":true}}],[0.034173,{"lines":{"28":[["~                   ",{"fg":4,"bold":true}],["|",{"inverse":true}],["  ",{"fg":6,"bg":0,"bold":true}],[" 29 ",{"fg":3,"bold":true}],["    ",{}],["|",{"fg":2,"bold":true}],["   cout << ",{}],["\"First2\"",{"fg":5,"bold":true}],[" << endl;                                                                             ",{}],["|",{"inverse":true}],[" 29 ",{"fg":3,"bold":true}],["  .vimrc          ",{"underline":true}]],"29":[["~                   ",{"fg":4,"bold":true}],["|",{"inverse":true}],["  ",{"fg":6,"bg":0,"bold":true}],[" 30 ",{"fg":3,"bold":true}],["    }                                                                                                         ",{}],["|",{"inverse":true}],[" 30 ",{"fg":3,"bold":true}],["  .xsession-errors",{}]]},"cursor":{"y":28}}],[0.031946,{"lines":{"47":[["                                                                                                                                                     k          ",{}]]},"cursor":{"visible":false}}],[0.004341,{"lines":{"27":[["~                   ",{"fg":4,"bold":true}],["|",{"inverse":true}],["  ",{"fg":6,"bg":0,"bold":true}],[" 28 ",{"fg":3,"bold":true}],["    {                                                                                                         ",{}],["|",{"inverse":true}],[" 28 ",{"fg":3,"bold":true}],["  .viminfo        ",{"underline":true}]],"28":[["~                   ",{"fg":4,"bold":true}],["|",{"inverse":true}],["  ",{"fg":6,"bg":0,"bold":true}],[" 29 ",{"fg":3,"bold":true}],["    ",{}],["|",{"fg":2,"bold":true}],["   cout << ",{}],["\"First2\"",{"fg":5,"bold":true}],[" << endl;                                                                             ",{}],["|",{"inverse":true}],[" 29 ",{"fg":3,"bold":true}],["  .vimrc          ",{}]],"47":[["                                                                                                                                                                ",{}]]},"cursor":{"y":27,"visible":true}}],[0.032394,{"lines":{"47":[["                                                                                                                                                     k          ",{}]]},"cursor":{"visible":false}}],[0.008068000000000001,{"lines":{"26":[["~                   ",{"fg":4,"bold":true}],["|",{"inverse":true}],["  ",{"fg":6,"bg":0,"bold":true}],[" 27 ",{"fg":3,"bold":true}],["    ",{}],["virtual",{"fg":2,"bold":true}],[" ",{}],["void",{"fg":2,"bold":true}],[" FirstRun2(",{}],["void",{"fg":2,"bold":true}],[")                                                                              ",{}],["|",{"inverse":true}],[" 27 ",{"fg":3,"bold":true}],["  .tcshrc         ",{"underline":true}]],"27":[["~                   ",{"fg":4,"bold":true}],["|",{"inverse":true}],["  ",{"fg":6,"bg":0,"bold":true}],[" 28 ",{"fg":3,"bold":true}],["    {                                                                                                         ",{}],["|",{"inverse":true}],[" 28 ",{"fg":3,"bold":true}],["  .viminfo        ",{}]],"47":[["                                                                                                                                                                ",{}]]},"cursor":{"y":26,"visible":true}}],[0.026915,{"lines":{"47":[["                                                                                                                                                     k          ",{}]]},"cursor":{"visible":false}}],[0.000864,{"lines":{"25":[["~                   ",{"fg":4,"bold":true}],["|",{"inverse":true}],["  ",{"fg":6,"bg":0,"bold":true}],[" 26 ",{"fg":3,"bold":true}],["                                                                                                              ",{}],["|",{"inverse":true}],[" 26 ",{"fg":3,"bold":true}],["  .lesshst        ",{"underline":true}]],"26":[["~                   ",{"fg":4,"bold":true}],["|",{"inverse":true}],["  ",{"fg":6,"bg":0,"bold":true}],[" 27 ",{"fg":3,"bold":true}],["    ",{}],["virtual",{"fg":2,"bold":true}],[" ",{}],["void",{"fg":2,"bold":true}],[" FirstRun2(",{}],["void",{"fg":2,"bold":true}],[")                                                                              ",{}],["|",{"inverse":true}],[" 27 ",{"fg":3,"bold":true}],["  .tcshrc         ",{}]],"47":[["                                                                                                                                                                ",{}]]},"cursor":{"y":25,"visible":true}}],[0.032931,{"lines":{"24":[["~                   ",{"fg":4,"bold":true}],["|",{"inverse":true}],["  ",{"fg":6,"bg":0,"bold":true}],[" 25 ",{"fg":3,"bold":true}],["    }                                                                                                         ",{}],["|",{"inverse":true}],[" 25 ",{"fg":3,"bold":true}],["  .gtkrc-2.0-kde4 ",{"underline":true}]],"25":[["~                   ",{"fg":4,"bold":true}],["|",{"inverse":true}],["  ",{"fg":6,"bg":0,"bold":true}],[" 26 ",{"fg":3,"bold":true}],["                                                                                                              ",{}],["|",{"inverse":true}],[" 26 ",{"fg":3,"bold":true}],["  .lesshst        ",{}]]},"cursor":{"y":24}}],[0.03371,{"lines":{"47":[["                                                                                                                                                     k          ",{}]]},"cursor":{"visible":false}}],[0.00498,{"lines":{"23":[["~                   ",{"fg":4,"bold":true}],["|",{"inverse":true}],["  ",{"fg":6,"bg":0,"bold":true}],[" 24 ",{"fg":3,"bold":true}],["    ",{}],["|",{"fg":2,"bold":true}],["   cout << ",{}],["\"First\"",{"fg":5,"bold":true}],[" << endl;                                                                              ",{}],["|",{"inverse":true}],[" 24 ",{"fg":3,"bold":true}],["  .gtkrc-2.0      ",{"underline":true}]],"24":[["~                   ",{"fg":4,"bold":true}],["|",{"inverse":true}],["  ",{"fg":6,"bg":0,"bold":true}],[" 25 ",{"fg":3,"bold":true}],["    }                                                                                                         ",{}],["|",{"inverse":true}],[" 25 ",{"fg":3,"bold":true}],["  .gtkrc-2.0-kde4 ",{}]],"47":[["                                                                                                                                                                ",{}]]},"cursor":{"y":23,"visible":true}}],[0.027795,{"lines":{"22":[["~                   ",{"fg":4,"bold":true}],["|",{"inverse":true}],["  ",{"fg":6,"bg":0,"bold":true}],[" 23 ",{"fg":3,"bold":true}],["    {                                                                                                         ",{}],["|",{"inverse":true}],[" 23 ",{"fg":3,"bold":true}],["  .esd_auth       ",{"underline":true}]],"23":[["~                   ",{"fg":4,"bold":true}],["|",{"inverse":true}],["  ",{"fg":6,"bg":0,"bold":true}],[" 24 ",{"fg":3,"bold":true}],["    ",{}],["|",{"fg":2,"bold":true}],["   cout << ",{}],["\"First\"",{"fg":5,"bold":true}],[" << endl;                                                                              ",{}],["|",{"inverse":true}],[" 24 ",{"fg":3,"bold":true}],["  .gtkrc-2.0      ",{}]]},"cursor":{"y":22}}],[0.034248,{"lines":{"21":[["    main(int argc, c",{"underline":true}],["|",{"inverse":true}],["  ",{"fg":6,"bg":0,"bold":true}],[" 22 ",{"fg":3,"bold":true}],["    ",{}],["virtual",{"fg":2,"bold":true}],[" ",{}],["void",{"fg":2,"bold":true}],[" FirstRun(",{}],["void",{"fg":2,"bold":true}],[")                                                                               ",{}],["|",{"inverse":true}],[" 22 ",{"fg":3,"bold":true}],["  .dmrc           ",{"underline":true}]],"22":[["~                   ",{"fg":4,"bold":true}],["|",{"inverse":true}],["  ",{"fg":6,"bg":0,"bold":true}],[" 23 ",{"fg":3,"bold":true}],["    {                                                                                                         ",{}],["|",{"inverse":true}],[" 23 ",{"fg":3,"bold":true}],["  .esd_auth       ",{}]]},"cursor":{"y":21}}],[0.034222,{"lines":{"20":[["▼",{"fg":3,"bold":true}],[" ",{}],["functions",{"fg":6,"bold":true}],["         ",{}],["|",{"inverse":true}],["  ",{"fg":6,"bg":0,"bold":true}],[" 21 ",{"fg":3,"bold":true}],["    ",{}],["// 基类First的虚方法",{"fg":6,"bold":true}],["                                                                                      ",{}],["|",{"inverse":true}],[" 21 ",{"fg":3,"bold":true}],["  .cshrc          ",{"underline":true}]],"21":[["    main(int argc, c",{"underline":true}],["|",{"inverse":true}],["  ",{"fg":6,"bg":0,"bold":true}],[" 22 ",{"fg":3,"bold":true}],["    ",{}],["virtual",{"fg":2,"bold":true}],[" ",{}],["void",{"fg":2,"bold":true}],[" FirstRun(",{}],["void",{"fg":2,"bold":true}],[")                                                                               ",{}],["|",{"inverse":true}],[" 22 ",{"fg":3,"bold":true}],["  .dmrc           ",{}]]},"cursor":{"y":20}}],[0.034367,{"lines":{"19":[["                    ",{}],["|",{"inverse":true}],["  ",{"fg":6,"bg":0,"bold":true}],[" 20 ",{"fg":3,"bold":true}],["{                                                                                                             ",{}],["|",{"inverse":true}],[" 20 ",{"fg":3,"bold":true}],["  .bashrc         ",{"underline":true}]],"20":[["▼",{"fg":3,"bold":true}],[" ",{}],["functions",{"fg":6,"bold":true}],["         ",{}],["|",{"inverse":true}],["  ",{"fg":6,"bg":0,"bold":true}],[" 21 ",{"fg":3,"bold":true}],["    ",{}],["// 基类First的虚方法",{"fg":6,"bold":true}],["                                                                                      ",{}],["|",{"inverse":true}],[" 21 ",{"fg":3,"bold":true}],["  .cshrc          ",{}]]},"cursor":{"y":19}}],[0.031535,{"lines":{"47":[["                                                                                                                                                     k          ",{}]]},"cursor":{"visible":false}}],[0.006452,{"lines":{"18":[["   ",{}],["+",{"fg":2,"bold":true}],["SecondRun2(void)",{}],["|",{"inverse":true}],["  ",{"fg":6,"bg":0,"bold":true}],[" 19 ",{"fg":3,"bold":true}],["    ",{}],["public",{"fg":3,"bold":true}],[" Second                                                                                             ",{}],["|",{"inverse":true}],[" 19 ",{"fg":3,"bold":true}],["  .bash_profile   ",{"underline":true}]],"19":[["                    ",{}],["|",{"inverse":true}],["  ",{"fg":6,"bg":0,"bold":true}],[" 20 ",{"fg":3,"bold":true}],["{                                                                                                             ",{}],["|",{"inverse":true}],[" 20 ",{"fg":3,"bold":true}],["  .bashrc         ",{}]],"47":[["                                                                                                                                                                ",{}]]},"cursor":{"y":18,"visible":true}}],[1.550933,{}],[2.003501,{}],[1.064053,{"lines":{"47":[["                                                                                                                                                     ,          ",{}]]}}],[0.184874,{"lines":{"47":[["                                                                                                                                                     ,f         ",{}]]}}],[0.180195,{"lines":{"47":[["                                                                                                                                                                ",{}]]},"cursor":{"visible":false}}],[0.113131,{"lines":{"0":[["                                                                                                                                                                ",{"underline":true}]],"1":[[" 18                                                                                                                                                           ~ ",{}]],"2":[["                    ",{}],["|",{"inverse":true}],["  ",{"fg":6,"bg":0,"bold":true}],["  1 ",{"fg":3,"bold":true}],["#include ",{"fg":4,"bold":true,"underline":true}],["<iostream>",{"fg":5,"bold":true,"underline":true}],["                                                                                           ",{}],["|",{"inverse":true}],["  3 ",{"fg":3,"bold":true}],[".. (up a dir)",{"fg":6,"bold":true}],["     ",{}]],"3":[["▼",{"fg":3,"bold":true}],[" First",{"fg":5,"bold":true}],[" : ",{}],["struct",{"fg":2,"bold":true}],["    ",{}],["|",{"inverse":true}],["  ",{"fg":6,"bg":0,"bold":true}],["  4 using",{"fg":3,"bold":true}],[" ",{}],["namespace",{"fg":2,"bold":true}],[" std;                                                                                          ",{}],["|",{"inverse":true}],["  4 /root/",{"fg":3,"bold":true}],["            ",{}]],"4":[["    [prototypes]",{"fg":6,"bold":true}],["    ",{}],["|",{"inverse":true}],["  ",{"fg":6,"bg":0,"bold":true}],["  5 ",{"fg":3,"bold":true}],["                                                                                                              ",{}],["|",{"inverse":true}],["  5 ",{"fg":3,"bold":true}],["▸ .asciinema/",{"fg":6,"bold":true}],["     ",{}]],"5":[["   ",{}],["+",{"fg":2,"bold":true}],["FirstRun(void)  ",{}],["|",{"inverse":true}],["  ",{"fg":6,"bg":0,"bold":true}],["  6 ",{"fg":3,"bold":true}],["struct",{"fg":2,"bold":true}],[" First                                                                                                  ",{}],["|",{"inverse":true}],["  6 ",{"fg":3,"bold":true}],["▸ .cache/",{"fg":6,"bold":true}],["         ",{}]],"6":[["   ",{}],["+",{"fg":2,"bold":true}],["FirstRun2(void) ",{}],["|",{"inverse":true}],["  ",{"fg":6,"bg":0,"bold":true}],["  7 ",{"fg":3,"bold":true}],["{                                                                                                             ",{}],["|",{"inverse":true}],["  7 ",{"fg":3,"bold":true}],["▸ .config/",{"fg":6,"bold":true}],["        ",{}]],"7":[["                    ",{}],["|",{"inverse":true}],["  ",{"fg":6,"bg":0,"bold":true}],["  8 ",{"fg":3,"bold":true}],["    ",{}],["virtual",{"fg":2,"bold":true}],[" ",{}],["void",{"fg":2,"bold":true}],[" FirstRun(",{}],["void",{"fg":2,"bold":true}],[") = ",{}],["0",{"fg":5,"bold":true}],[";                                                                          ",{}],["|",{"inverse":true}],["  8 ",{"fg":3,"bold":true}],["▸ .dbus/",{"fg":6,"bold":true}],["          ",{}]],"8":[["▼",{"fg":3,"bold":true}],[" Last",{"fg":5,"bold":true}],[" : ",{}],["struct",{"fg":2,"bold":true}],["     ",{}],["|",{"inverse":true}],["  ",{"fg":6,"bg":0,"bold":true}],["  9 ",{"fg":3,"bold":true}],["    ",{}],["virtual",{"fg":2,"bold":true}],[" ",{}],["void",{"fg":2,"bold":true}],[" FirstRun2(",{}],["void",{"fg":2,"bold":true}],[") = ",{}],["0",{"fg":5,"bold":true}],[";                                                                         ",{}],["|",{"inverse":true}],["  9 ",{"fg":3,"bold":true}],["▸ .gnupg/",{"fg":6,"bold":true}],["         ",{}]],"9":[["    [functions]",{"fg":6,"bold":true}],["     ",{}],["|",{"inverse":true}],["  ",{"fg":6,"bg":0,"bold":true}],[" 10 ",{"fg":3,"bold":true}],["};                                                                                                            ",{}],["|",{"inverse":true}],[" 10 ",{"fg":3,"bold":true}],["▸ .kde/",{"fg":6,"bold":true}],["           ",{}]],"10":[["   ",{}],["+",{"fg":2,"bold":true}],["FirstRun(void)  ",{}],["|",{"inverse":true}],["  ",{"fg":6,"bg":0,"bold":true}],[" 11 ",{"fg":3,"bold":true}],["                                                                                                              ",{}],["|",{"inverse":true}],[" 11 ",{"fg":3,"bold":true}],["▸ .local/",{"fg":6,"bold":true}],["         ",{}]],"11":[["   ",{}],["+",{"fg":2,"bold":true}],["FirstRun2(void) ",{}],["|",{"inverse":true}],["  ",{"fg":6,"bg":0,"bold":true}],[" 12 ",{"fg":3,"bold":true}],["struct",{"fg":2,"bold":true}],[" Second                                                                                                 ",{}],["|",{"inverse":true}],[" 12 ",{"fg":3,"bold":true}],["▸ .pki/",{"fg":6,"bold":true}],["           ",{}]],"12":[["   ",{}],["+",{"fg":2,"bold":true}],["~Last()         ",{}],["|",{"inverse":true}],["  ",{"fg":6,"bg":0,"bold":true}],[" 13 ",{"fg":3,"bold":true}],["{                                                                                                             ",{}],["|",{"inverse":true}],[" 13 ",{"fg":3,"bold":true}],["▸ .ssh/",{"fg":6,"bold":true}],["           ",{}]],"13":[["   ",{}],["+",{"fg":2,"bold":true}],["SecondRun(void) ",{}],["|",{"inverse":true}],["  ",{"fg":6,"bg":0,"bold":true}],[" 14 ",{"fg":3,"bold":true}],["    ",{}],["virtual",{"fg":2,"bold":true}],[" ",{}],["void",{"fg":2,"bold":true}],[" SecondRun(",{}],["void",{"fg":2,"bold":true}],[") = ",{}],["0",{"fg":5,"bold":true}],[";                                                                         ",{}],["|",{"inverse":true}],[" 14 ",{"fg":3,"bold":true}],["▸ .vim/",{"fg":6,"bold":true}],["           ",{}]],"14":[["   ",{}],["+",{"fg":2,"bold":true}],["SecondRun2(void)",{}],["|",{"inverse":true}],["  ",{"fg":6,"bg":0,"bold":true}],[" 15 ",{"fg":3,"bold":true}],["    ",{}],["virtual",{"fg":2,"bold":true}],[" ",{}],["void",{"fg":2,"bold":true}],[" SecondRun2(",{}],["void",{"fg":2,"bold":true}],[") = ",{}],["0",{"fg":5,"bold":true}],[";                                                                        ",{}],["|",{"inverse":true}],[" 15 ",{"fg":3,"bold":true}],["▸ diary/",{"fg":6,"bold":true}],["          ",{}]],"15":[["                    ",{}],["|",{"inverse":true}],["  ",{"fg":6,"bg":0,"bold":true}],[" 16 ",{"fg":3,"bold":true}],["};                                                                                                            ",{}],["|",{"inverse":true}],[" 16 ",{"fg":3,"bold":true}],["▸ temp/",{"fg":6,"bold":true}],["           ",{}]],"16":[["▼",{"fg":3,"bold":true}],[" Second",{"fg":5,"bold":true}],[" : ",{}],["struct",{"fg":2,"bold":true}],["   ",{}],["|",{"inverse":true}],["  ",{"fg":6,"bg":0,"bold":true}],[" 17 ",{"fg":3,"bold":true}],["                                                                                                              ",{}],["|",{"inverse":true}],[" 17 ",{"fg":3,"bold":true}],["  .bash_history   ",{}]],"17":[["    [prototypes]",{"fg":6,"bold":true}],["    ",{}],["|",{"inverse":true}],["  ",{"fg":6,"bg":0,"bold":true}],[" 18 ",{"fg":3,"bold":true}],["struct",{"fg":2,"bold":true}],[" Last: ",{}],["public",{"fg":3,"bold":true}],[" First,                                                                                    ",{}],["|",{"inverse":true}],[" 18 ",{"fg":3,"bold":true}],["  .bash_logout    ",{}]],"18":[["   ",{}],["+",{"fg":2,"bold":true}],["SecondRun(void) ",{}],["|",{"inverse":true}],["  ",{"fg":6,"bg":0,"bold":true}],[" 19 ",{"fg":3,"bold":true}],["    ",{}],["public",{"fg":3,"bold":true}],[" Second                                                                                             ",{}],["|",{"inverse":true}],[" 19 ",{"fg":3,"bold":true}],["  .bash_profile   ",{"underline":true}]],"19":[["   ",{}],["+",{"fg":2,"bold":true}],["SecondRun2(void)",{}],["|",{"inverse":true}],["  ",{"fg":6,"bg":0,"bold":true}],[" 20 ",{"fg":3,"bold":true}],["{                                                                                                             ",{}],["|",{"inverse":true}],[" 20 ",{"fg":3,"bold":true}],["  .bashrc         ",{}]],"20":[["                    ",{}],["|",{"inverse":true}],["  ",{"fg":6,"bg":0,"bold":true}],[" 21 ",{"fg":3,"bold":true}],["    ",{}],["// 基类First的虚方法",{"fg":6,"bold":true}],["                                                                                      ",{}],["|",{"inverse":true}],[" 21 ",{"fg":3,"bold":true}],["  .cshrc          ",{}]],"21":[["▼",{"fg":3,"bold":true}],[" ",{}],["functions",{"fg":6,"bold":true}],["         ",{}],["|",{"inverse":true}],["  ",{"fg":6,"bg":0,"bold":true}],[" 22 ",{"fg":3,"bold":true}],["    ",{}],["virtual",{"fg":2,"bold":true}],[" ",{}],["void",{"fg":2,"bold":true}],[" FirstRun(",{}],["void",{"fg":2,"bold":true}],[")                                                                               ",{}],["|",{"inverse":true}],[" 22 ",{"fg":3,"bold":true}],["  .dmrc           ",{}]],"22":[["    main(int argc, c",{"underline":true}],["|",{"inverse":true}],["  ",{"fg":6,"bg":0,"bold":true}],[" 23 ",{"fg":3,"bold":true}],["    {                                                                                                         ",{}],["|",{"inverse":true}],[" 23 ",{"fg":3,"bold":true}],["  .esd_auth       ",{}]]},"cursor":{"x":46,"y":2}}],[0.007628,{"lines":{"2":[["                    ",{}],["|",{"inverse":true}],["  ",{"fg":6,"bg":0,"bold":true}],["  1 ",{"fg":3,"bold":true}],["#include ",{"fg":4,"bold":true,"underline":true}],["<iostream>",{"fg":5,"bold":true,"underline":true}],["                                                                                           ",{"underline":true}],["|",{"inverse":true}],["  2 ",{"fg":3,"bold":true}],["                  ",{}]],"3":[["▼",{"fg":3,"bold":true}],[" First",{"fg":5,"bold":true}],[" : ",{}],["struct",{"fg":2,"bold":true}],["    ",{}],["|",{"inverse":true}],["  ",{"fg":6,"bg":0,"bold":true}],["  2 ",{"fg":3,"bold":true}],["#include ",{"fg":4,"bold":true}],["<vector>",{"fg":5,"bold":true}],["                                                                                             ",{}],["|",{"inverse":true}],["  3 ",{"fg":3,"bold":true}],[".. (up a dir)",{"fg":6,"bold":true}],["     ",{}]],"4":[["    [prototypes]",{"fg":6,"bold":true}],["    ",{}],["|",{"inverse":true}],["  ",{"fg":6,"bg":0,"bold":true}],["  3 ",{"fg":3,"bold":true}],["                                                                                                              ",{}],["|",{"inverse":true}],["  4 /root/",{"fg":3,"bold":true}],["            ",{}]],"5":[["   ",{}],["+",{"fg":2,"bold":true}],["FirstRun(void)  ",{}],["|",{"inverse":true}],["  ",{"fg":6,"bg":0,"bold":true}],["  4 using",{"fg":3,"bold":true}],[" ",{}],["namespace",{"fg":2,"bold":true}],[" std;                                                                                          ",{}],["|",{"inverse":true}],["  5 ",{"fg":3,"bold":true}],["▸ .asciinema/",{"fg":6,"bold":true}],["     ",{}]],"6":[["   ",{}],["+",{"fg":2,"bold":true}],["FirstRun2(void) ",{}],["|",{"inverse":true}],["  ",{"fg":6,"bg":0,"bold":true}],["  5 ",{"fg":3,"bold":true}],["                                                                                                              ",{}],["|",{"inverse":true}],["  6 ",{"fg":3,"bold":true}],["▸ .cache/",{"fg":6,"bold":true}],["         ",{}]],"7":[["                    ",{}],["|",{"inverse":true}],["  ",{"fg":6,"bg":0,"bold":true}],["  6 ",{"fg":3,"bold":true}],["struct",{"fg":2,"bold":true}],[" First                                                                                                  ",{}],["|",{"inverse":true}],["  7 ",{"fg":3,"bold":true}],["▸ .config/",{"fg":6,"bold":true}],["        ",{}]],"8":[["▼",{"fg":3,"bold":true}],[" Last",{"fg":5,"bold":true}],[" : ",{}],["struct",{"fg":2,"bold":true}],["     ",{}],["|",{"inverse":true}],["  ",{"fg":6,"bg":0,"bold":true}],["  7 ",{"fg":3,"bold":true}],["{                                                                                                             ",{}],["|",{"inverse":true}],["  8 ",{"fg":3,"bold":true}],["▸ .dbus/",{"fg":6,"bold":true}],["          ",{}]],"9":[["    [functions]",{"fg":6,"bold":true}],["     ",{}],["|",{"inverse":true}],["  ",{"fg":6,"bg":0,"bold":true}],["  8 ",{"fg":3,"bold":true}],["    ",{}],["virtual",{"fg":2,"bold":true}],[" ",{}],["void",{"fg":2,"bold":true}],[" FirstRun(",{}],["void",{"fg":2,"bold":true}],[") = ",{}],["0",{"fg":5,"bold":true}],[";                                                                          ",{}],["|",{"inverse":true}],["  9 ",{"fg":3,"bold":true}],["▸ .gnupg/",{"fg":6,"bold":true}],["         ",{}]],"10":[["   ",{}],["+",{"fg":2,"bold":true}],["FirstRun(void)  ",{}],["|",{"inverse":true}],["  ",{"fg":6,"bg":0,"bold":true}],["  9 ",{"fg":3,"bold":true}],["    ",{}],["virtual",{"fg":2,"bold":true}],[" ",{}],["void",{"fg":2,"bold":true}],[" FirstRun2(",{}],["void",{"fg":2,"bold":true}],[") = ",{}],["0",{"fg":5,"bold":true}],[";                                                                         ",{}],["|",{"inverse":true}],[" 10 ",{"fg":3,"bold":true}],["▸ .kde/",{"fg":6,"bold":true}],["           ",{}]],"11":[["   ",{}],["+",{"fg":2,"bold":true}],["FirstRun2(void) ",{}],["|",{"inverse":true}],["  ",{"fg":6,"bg":0,"bold":true}],[" 10 ",{"fg":3,"bold":true}],["};                                                                                                            ",{}],["|",{"inverse":true}],[" 11 ",{"fg":3,"bold":true}],["▸ .local/",{"fg":6,"bold":true}],["         ",{}]],"12":[["   ",{}],["+",{"fg":2,"bold":true}],["~Last()         ",{}],["|",{"inverse":true}],["  ",{"fg":6,"bg":0,"bold":true}],[" 11 ",{"fg":3,"bold":true}],["                                                                                                              ",{}],["|",{"inverse":true}],[" 12 ",{"fg":3,"bold":true}],["▸ .pki/",{"fg":6,"bold":true}],["           ",{}]],"13":[["   ",{}],["+",{"fg":2,"bold":true}],["SecondRun(void) ",{}],["|",{"inverse":true}],["  ",{"fg":6,"bg":0,"bold":true}],[" 12 ",{"fg":3,"bold":true}],["struct",{"fg":2,"bold":true}],[" Second                                                                                                 ",{}],["|",{"inverse":true}],[" 13 ",{"fg":3,"bold":true}],["▸ .ssh/",{"fg":6,"bold":true}],["           ",{}]],"14":[["   ",{}],["+",{"fg":2,"bold":true}],["SecondRun2(void)",{}],["|",{"inverse":true}],["  ",{"fg":6,"bg":0,"bold":true}],[" 13 ",{"fg":3,"bold":true}],["{                                                                                                             ",{}],["|",{"inverse":true}],[" 14 ",{"fg":3,"bold":true}],["▸ .vim/",{"fg":6,"bold":true}],["           ",{}]],"15":[["                    ",{}],["|",{"inverse":true}],["  ",{"fg":6,"bg":0,"bold":true}],[" 14 ",{"fg":3,"bold":true}],["    ",{}],["virtual",{"fg":2,"bold":true}],[" ",{}],["void",{"fg":2,"bold":true}],[" SecondRun(",{}],["void",{"fg":2,"bold":true}],[") = ",{}],["0",{"fg":5,"bold":true}],[";                                                                         ",{}],["|",{"inverse":true}],[" 15 ",{"fg":3,"bold":true}],["▸ diary/",{"fg":6,"bold":true}],["          ",{}]],"16":[["▼",{"fg":3,"bold":true}],[" Second",{"fg":5,"bold":true}],[" : ",{}],["struct",{"fg":2,"bold":true}],["   ",{}],["|",{"inverse":true}],["  ",{"fg":6,"bg":0,"bold":true}],[" 15 ",{"fg":3,"bold":true}],["    ",{}],["virtual",{"fg":2,"bold":true}],[" ",{}],["void",{"fg":2,"bold":true}],[" SecondRun2(",{}],["void",{"fg":2,"bold":true}],[") = ",{}],["0",{"fg":5,"bold":true}],[";                                                                        ",{}],["|",{"inverse":true}],[" 16 ",{"fg":3,"bold":true}],["▸ temp/",{"fg":6,"bold":true}],["           ",{}]],"17":[["    [prototypes]",{"fg":6,"bold":true}],["    ",{}],["|",{"inverse":true}],["  ",{"fg":6,"bg":0,"bold":true}],[" 16 ",{"fg":3,"bold":true}],["};                                                                                                            ",{}],["|",{"inverse":true}],[" 17 ",{"fg":3,"bold":true}],["  .bash_history   ",{}]],"18":[["   ",{}],["+",{"fg":2,"bold":true}],["SecondRun(void) ",{}],["|",{"inverse":true}],["  ",{"fg":6,"bg":0,"bold":true}],[" 17 ",{"fg":3,"bold":true}],["                                                                                                              ",{}],["|",{"inverse":true}],[" 18 ",{"fg":3,"bold":true}],["  .bash_logout    ",{}]],"19":[["   ",{}],["+",{"fg":2,"bold":true}],["SecondRun2(void)",{}],["|",{"inverse":true}],["  ",{"fg":6,"bg":0,"bold":true}],[" 18 ",{"fg":3,"bold":true}],["struct",{"fg":2,"bold":true}],[" Last: ",{}],["public",{"fg":3,"bold":true}],[" First,                                                                                    ",{}],["|",{"inverse":true}],[" 19 ",{"fg":3,"bold":true}],["  .bash_profile   ",{"underline":true}]],"20":[["                    ",{}],["|",{"inverse":true}],["  ",{"fg":6,"bg":0,"bold":true}],[" 19 ",{"fg":3,"bold":true}],["    ",{}],["public",{"fg":3,"bold":true}],[" Second                                                                                             ",{}],["|",{"inverse":true}],[" 20 ",{"fg":3,"bold":true}],["  .bashrc         ",{}]],"21":[["▼",{"fg":3,"bold":true}],[" ",{}],["functions",{"fg":6,"bold":true}],["         ",{}],["|",{"inverse":true}],["  ",{"fg":6,"bg":0,"bold":true}],[" 20 ",{"fg":3,"bold":true}],["{                                                                                                             ",{}],["|",{"inverse":true}],[" 21 ",{"fg":3,"bold":true}],["  .cshrc          ",{}]],"22":[["    main(int argc, c",{"underline":true}],["|",{"inverse":true}],["  ",{"fg":6,"bg":0,"bold":true}],[" 21 ",{"fg":3,"bold":true}],["    ",{}],["// 基类First的虚方法",{"fg":6,"bold":true}],["                                                                                      ",{}],["|",{"inverse":true}],[" 22 ",{"fg":3,"bold":true}],["  .dmrc           ",{}]],"23":[["~                   ",{"fg":4,"bold":true}],["|",{"inverse":true}],["  ",{"fg":6,"bg":0,"bold":true}],[" 22 ",{"fg":3,"bold":true}],["    ",{}],["virtual",{"fg":2,"bold":true}],[" ",{}],["void",{"fg":2,"bold":true}],[" FirstRun(",{}],["void",{"fg":2,"bold":true}],[")                                                                               ",{}],["|",{"inverse":true}],[" 23 ",{"fg":3,"bold":true}],["  .esd_auth       ",{}]],"24":[["~                   ",{"fg":4,"bold":true}],["|",{"inverse":true}],["  ",{"fg":6,"bg":0,"bold":true}],[" 23 ",{"fg":3,"bold":true}],["    {                                                                                                         ",{}],["|",{"inverse":true}],[" 24 ",{"fg":3,"bold":true}],["  .gtkrc-2.0      ",{}]],"25":[["~                   ",{"fg":4,"bold":true}],["|",{"inverse":true}],["  ",{"fg":6,"bg":0,"bold":true}],[" 24 ",{"fg":3,"bold":true}],["    ",{}],["|",{"fg":2,"bold":true}],["   cout << ",{}],["\"First\"",{"fg":5,"bold":true}],[" << endl;                                                                              ",{}],["|",{"inverse":true}],[" 25 ",{"fg":3,"bold":true}],["  .gtkrc-2.0-kde4 ",{}]],"26":[["~                   ",{"fg":4,"bold":true}],["|",{"inverse":true}],["  ",{"fg":6,"bg":0,"bold":true}],[" 25 ",{"fg":3,"bold":true}],["    }                                                                                                         ",{}],["|",{"inverse":true}],[" 26 ",{"fg":3,"bold":true}],["  .lesshst        ",{}]],"27":[["~                   ",{"fg":4,"bold":true}],["|",{"inverse":true}],["  ",{"fg":6,"bg":0,"bold":true}],[" 26 ",{"fg":3,"bold":true}],["                                                                                                              ",{}],["|",{"inverse":true}],[" 27 ",{"fg":3,"bold":true}],["  .tcshrc         ",{}]],"28":[["~                   ",{"fg":4,"bold":true}],["|",{"inverse":true}],["  ",{"fg":6,"bg":0,"bold":true}],[" 27 ",{"fg":3,"bold":true}],["    ",{}],["virtual",{"fg":2,"bold":true}],[" ",{}],["void",{"fg":2,"bold":true}],[" FirstRun2(",{}],["void",{"fg":2,"bold":true}],[")                                                                              ",{}],["|",{"inverse":true}],[" 28 ",{"fg":3,"bold":true}],["  .viminfo        ",{}]],"29":[["~                   ",{"fg":4,"bold":true}],["|",{"inverse":true}],["  ",{"fg":6,"bg":0,"bold":true}],[" 28 ",{"fg":3,"bold":true}],["    {                                                                                                         ",{}],["|",{"inverse":true}],[" 29 ",{"fg":3,"bold":true}],["  .vimrc          ",{}]],"30":[["~                   ",{"fg":4,"bold":true}],["|",{"inverse":true}],["  ",{"fg":6,"bg":0,"bold":true}],[" 29 ",{"fg":3,"bold":true}],["    ",{}],["|",{"fg":2,"bold":true}],["   cout << ",{}],["\"First2\"",{"fg":5,"bold":true}],[" << endl;                                                                             ",{}],["|",{"inverse":true}],[" 30 ",{"fg":3,"bold":true}],["  .xsession-errors",{}]],"31":[["~                   ",{"fg":4,"bold":true}],["|",{"inverse":true}],["  ",{"fg":6,"bg":0,"bold":true}],[" 30 ",{"fg":3,"bold":true}],["    }                                                                                                         ",{}],["|",{"inverse":true}],[" 31 ",{"fg":3,"bold":true}],["  anaconda-ks.cfg ",{}]],"32":[["~                   ",{"fg":4,"bold":true}],["|",{"inverse":true}],["  ",{"fg":6,"bg":0,"bold":true}],[" 31 ",{"fg":3,"bold":true}],["                                                                                                              ",{}],["|",{"inverse":true}],[" 32 ",{"fg":3,"bold":true}],["  initial-setup-ks",{}]],"33":[["~                   ",{"fg":4,"bold":true}],["|",{"inverse":true}],["  ",{"fg":6,"bg":0,"bold":true}],[" 32 ",{"fg":3,"bold":true}],["    ",{}],["// 基类Second虚方法",{"fg":6,"bold":true}],["                                                                                       ",{}],["|",{"inverse":true}],[" 33 ",{"fg":3,"bold":true}],["  test.c          ",{}]],"34":[["~                   ",{"fg":4,"bold":true}],["|",{"inverse":true}],["  ",{"fg":6,"bg":0,"bold":true}],[" 33 ",{"fg":3,"bold":true}],["    ",{}],["virtual",{"fg":2,"bold":true}],[" ",{}],["void",{"fg":2,"bold":true}],[" SecondRun(",{}],["void",{"fg":2,"bold":true}],[")                                                                              ",{}],["|",{"inverse":true}],[" 34 ",{"fg":3,"bold":true}],["  test.cpp        ",{}]],"35":[["~                   ",{"fg":4,"bold":true}],["|",{"inverse":true}],["  ",{"fg":6,"bg":0,"bold":true}],[" 34 ",{"fg":3,"bold":true}],["    {                                                                                                         ",{}],["|",{"inverse":true}],[" 35 ",{"fg":3,"bold":true}],["  .test.cpp.swp   ",{}]],"36":[["~                   ",{"fg":4,"bold":true}],["|",{"inverse":true}],["  ",{"fg":6,"bg":0,"bold":true}],[" 35 ",{"fg":3,"bold":true}],["    ",{}],["|",{"fg":2,"bold":true}],["   cout <<",{}],["\"Second\"",{"fg":5,"bold":true}],[" << endl;                                                                              ",{}],["|",{"inverse":true}],["~                     ",{"fg":4,"bold":true}]],"37":[["~                   ",{"fg":4,"bold":true}],["|",{"inverse":true}],["  ",{"fg":6,"bg":0,"bold":true}],[" 36 ",{"fg":3,"bold":true}],["    }                                                                                                         ",{}],["|",{"inverse":true}],["~                     ",{"fg":4,"bold":true}]],"38":[["~                   ",{"fg":4,"bold":true}],["|",{"inverse":true}],["  ",{"fg":6,"bg":0,"bold":true}],[" 37 ",{"fg":3,"bold":true}],["                                                                                                              ",{}],["|",{"inverse":true}],["~                     ",{"fg":4,"bold":true}]],"39":[["~                   ",{"fg":4,"bold":true}],["|",{"inverse":true}],["  ",{"fg":6,"bg":0,"bold":true}],[" 38 ",{"fg":3,"bold":true}],["    ",{}],["virtual",{"fg":2,"bold":true}],[" ",{}],["void",{"fg":2,"bold":true}],[" SecondRun2(",{}],["void",{"fg":2,"bold":true}],[")                                                                             ",{}],["|",{"inverse":true}],["~                     ",{"fg":4,"bold":true}]],"40":[["~                   ",{"fg":4,"bold":true}],["|",{"inverse":true}],["  ",{"fg":6,"bg":0,"bold":true}],[" 39 ",{"fg":3,"bold":true}],["    {                                                                                                         ",{}],["|",{"inverse":true}],["~                     ",{"fg":4,"bold":true}]],"41":[["~                   ",{"fg":4,"bold":true}],["|",{"inverse":true}],["  ",{"fg":6,"bg":0,"bold":true}],[" 40 ",{"fg":3,"bold":true}],["    ",{}],["|",{"fg":2,"bold":true}],["   cout <<",{}],["\"Second2\"",{"fg":5,"bold":true}],[" << endl;                                                                             ",{}],["|",{"inverse":true}],["~                     ",{"fg":4,"bold":true}]],"42":[["~                   ",{"fg":4,"bold":true}],["|",{"inverse":true}],["  ",{"fg":6,"bg":0,"bold":true}],[" 41 ",{"fg":3,"bold":true}],["    }                                                                                                         ",{}],["|",{"inverse":true}],["~                     ",{"fg":4,"bold":true}]],"43":[["~                   ",{"fg":4,"bold":true}],["|",{"inverse":true}],["  ",{"fg":6,"bg":0,"bold":true}],[" 42 ",{"fg":3,"bold":true}],["                                                                                                              ",{}],["|",{"inverse":true}],["~                     ",{"fg":4,"bold":true}]],"44":[["~                   ",{"fg":4,"bold":true}],["|",{"inverse":true}],["  ",{"fg":6,"bg":0,"bold":true}],[" 43 ",{"fg":3,"bold":true}],["    ",{}],["virtual",{"fg":2,"bold":true}],[" ~Last()                                                                                           ",{}],["|",{"inverse":true}],["~                     ",{"fg":4,"bold":true}]],"45":[["~                   ",{"fg":4,"bold":true}],["|",{"inverse":true}],["  ",{"fg":6,"bg":0,"bold":true}],[" 44 ",{"fg":3,"bold":true}],["    {                                                                                                         ",{}],["|",{"inverse":true}],["~                     ",{"fg":4,"bold":true}]]},"cursor":{"x":157,"y":35}}],[0.100434,{"lines":{"1":[[" 26                                                                                                                                                           ~ ",{}]]},"cursor":{"x":3,"y":1}}],[0.055594,{"lines":{"1":[[" 41                                                                                                                                                           ~ ",{}]]}}],[0.153137,{"lines":{"1":[[" 161                                                                                                                                                          ~ ",{}]]},"cursor":{"x":4}}],[0.101674,{"lines":{"1":[[" 223                                                                                                                                                          ~ ",{}]]}}],[0.223572,{"lines":{"1":[[" 528                                                                                                                                                          ~ ",{}]]}}],[0.058848,{"lines":{"1":[[" 638                                                                                                                                                          ~ ",{}]]},"cursor":{"x":3}}],[0.063472,{"lines":{"1":[[" 790                                                                                                                                                          ~ ",{}]]},"cursor":{"x":4}}],[0.306683,{"lines":{"1":[[" 1189                                                                                                                                                         ~ ",{}]]},"cursor":{"x":5}}],[0.438025,{"lines":{"1":[[" 2439                                                                                                                                                         ~ ",{}]]},"cursor":{"x":4}}],[0.46127,{"lines":{"1":[[" 3792                                                                                                                                                         ~ ",{}]]},"cursor":{"x":5}}],[0.207838,{"lines":{"1":[[" 4209                                                                                                                                                         ~ ",{}]]}}],[0.165947,{"lines":{"1":[[" 4836                                                                                                                                                         ~ ",{}]]}}],[0.035203,{"lines":{"1":[[" 4932                                                                                                                                                         ~ ",{}]]}}],[0.06775299999999999,{"lines":{"0":[["> .bash_history                                                                                                                                                 ",{"underline":true}]],"1":[["> .bashrc                                                                                                                                                       ",{}]],"2":[["> .dmrc                                                                                                                                                         ",{}]],"3":[["> .cshrc                                                                                                                                                        ",{}]],"4":[["> .viminfo                                                                                                                                                      ",{}]],"5":[["> .vimrc                                                                                                                                                        ",{}]],"6":[["> .lesshst                                                                                                                                                      ",{}]],"7":[["> .esd_auth                                                                                                                                                     ",{}]],"8":[["> .gtkrc-2.0                                                                                                                                                    ",{}]],"9":[["> .tcshrc                                                                                                                                                       ",{}]],"10":[["> .bash_logout                                                                                                                                                  ",{}]],"11":[["> .bash_profile                                                                                                                                                 ",{}]],"12":[["> .gtkrc-2.0-kde4                                                                                                                                               ",{}]],"13":[["> .xsession-errors                                                                                                                                              ",{}]],"14":[["> anaconda-ks.cfg                                                                                                                                               ",{}]],"15":[[" mru ",{}],[" files     ",{"bold":true}],[" buf ",{}],[" - ",{"bold":true}],["                                                                                                                          prt │ file  ~ ",{}]],"16":[["▼",{"fg":3,"bold":true}],[" Last",{"fg":5,"bold":true}],[" : ",{}],["struct",{"fg":2,"bold":true}],["     ",{}],["|",{"inverse":true}],["  ",{"fg":6,"bg":0,"bold":true}],[" 15 ",{"fg":3,"bold":true}],["    ",{}],["virtual",{"fg":2,"bold":true}],[" ",{}],["void",{"fg":2,"bold":true}],[" SecondRun2(",{}],["void",{"fg":2,"bold":true}],[") = ",{}],["0",{"fg":5,"bold":true}],[";                                                                        ",{}],["|",{"inverse":true}],[" 16 ",{"fg":3,"bold":true}],["▸ temp/",{"fg":6,"bold":true}],["           ",{}]],"17":[["    [functions]",{"fg":6,"bold":true}],["     ",{}],["|",{"inverse":true}],["  ",{"fg":6,"bg":0,"bold":true}],[" 16 ",{"fg":3,"bold":true}],["};                                                                                                            ",{}],["|",{"inverse":true}],[" 17 ",{"fg":3,"bold":true}],["  .bash_history   ",{}]],"18":[["   ",{}],["+",{"fg":2,"bold":true}],["FirstRun(void)  ",{}],["|",{"inverse":true}],["  ",{"fg":6,"bg":0,"bold":true}],[" 17 ",{"fg":3,"bold":true}],["                                                                                                              ",{}],["|",{"inverse":true}],[" 18 ",{"fg":3,"bold":true}],["  .bash_logout    ",{}]],"19":[["   ",{}],["+",{"fg":2,"bold":true}],["FirstRun2(void) ",{}],["|",{"inverse":true}],["  ",{"fg":6,"bg":0,"bold":true}],[" 18 ",{"fg":3,"bold":true}],["struct",{"fg":2,"bold":true}],[" Last: ",{}],["public",{"fg":3,"bold":true}],[" First,                                                                                    ",{}],["|",{"inverse":true}],[" 19 ",{"fg":3,"bold":true}],["  .bash_profile   ",{"underline":true}]],"20":[["   ",{}],["+",{"fg":2,"bold":true}],["~Last()         ",{}],["|",{"inverse":true}],["  ",{"fg":6,"bg":0,"bold":true}],[" 19 ",{"fg":3,"bold":true}],["    ",{}],["public",{"fg":3,"bold":true}],[" Second                                                                                             ",{}],["|",{"inverse":true}],[" 20 ",{"fg":3,"bold":true}],["  .bashrc         ",{}]],"21":[["   ",{}],["+",{"fg":2,"bold":true}],["SecondRun(void) ",{}],["|",{"inverse":true}],["  ",{"fg":6,"bg":0,"bold":true}],[" 20 ",{"fg":3,"bold":true}],["{                                                                                                             ",{}],["|",{"inverse":true}],[" 21 ",{"fg":3,"bold":true}],["  .cshrc          ",{}]],"22":[["   ",{}],["+",{"fg":2,"bold":true}],["SecondRun2(void)",{}],["|",{"inverse":true}],["  ",{"fg":6,"bg":0,"bold":true}],[" 21 ",{"fg":3,"bold":true}],["    ",{}],["// 基类First的虚方法",{"fg":6,"bold":true}],["                                                                                      ",{}],["|",{"inverse":true}],[" 22 ",{"fg":3,"bold":true}],["  .dmrc           ",{}]],"23":[["                    ",{}],["|",{"inverse":true}],["  ",{"fg":6,"bg":0,"bold":true}],[" 22 ",{"fg":3,"bold":true}],["    ",{}],["virtual",{"fg":2,"bold":true}],[" ",{}],["void",{"fg":2,"bold":true}],[" FirstRun(",{}],["void",{"fg":2,"bold":true}],[")                                                                               ",{}],["|",{"inverse":true}],[" 23 ",{"fg":3,"bold":true}],["  .esd_auth       ",{}]],"24":[["▼",{"fg":3,"bold":true}],[" Second",{"fg":5,"bold":true}],[" : ",{}],["struct",{"fg":2,"bold":true}],["   ",{"fg":4,"bold":true}],["|",{"inverse":true}],["  ",{"fg":6,"bg":0,"bold":true}],[" 23 ",{"fg":3,"bold":true}],["    {                                                                                                         ",{}],["|",{"inverse":true}],[" 24 ",{"fg":3,"bold":true}],["  .gtkrc-2.0      ",{}]]},"cursor":{"x":17,"y":24}}],[0.006694,{"lines":{"16":[["▼",{"fg":3,"bold":true}],[" Last",{"fg":5,"bold":true}],[" : ",{}],["struct",{"fg":2,"bold":true}],["     ",{}],["|",{"inverse":true}],["  ",{"fg":6,"bg":0,"bold":true}],["  1 ",{"fg":3,"bold":true}],["#include ",{"fg":4,"bold":true,"underline":true}],["<iostream>",{"fg":5,"bold":true,"underline":true}],["                                                                                           ",{"underline":true}],["|",{"inverse":true}],["  7 ",{"fg":3,"bold":true}],["▸ .config/",{"fg":6,"bold":true}],["        ",{}]],"17":[["    [functions]",{"fg":6,"bold":true}],["     ",{}],["|",{"inverse":true}],["  ",{"fg":6,"bg":0,"bold":true}],["  2 ",{"fg":3,"bold":true}],["#include ",{"fg":4,"bold":true}],["<vector>",{"fg":5,"bold":true}],["                                                                                             ",{}],["|",{"inverse":true}],["  8 ",{"fg":3,"bold":true}],["▸ .dbus/",{"fg":6,"bold":true}],["          ",{}]],"18":[["   ",{}],["+",{"fg":2,"bold":true}],["FirstRun(void)  ",{}],["|",{"inverse":true}],["  ",{"fg":6,"bg":0,"bold":true}],["  3 ",{"fg":3,"bold":true}],["                                                                                                              ",{}],["|",{"inverse":true}],["  9 ",{"fg":3,"bold":true}],["▸ .gnupg/",{"fg":6,"bold":true}],["         ",{}]],"19":[["   ",{}],["+",{"fg":2,"bold":true}],["FirstRun2(void) ",{}],["|",{"inverse":true}],["  ",{"fg":6,"bg":0,"bold":true}],["  4 using",{"fg":3,"bold":true}],[" ",{}],["namespace",{"fg":2,"bold":true}],[" std;                                                                                          ",{}],["|",{"inverse":true}],[" 10 ",{"fg":3,"bold":true}],["▸ .kde/",{"fg":6,"bold":true}],["           ",{}]],"20":[["   ",{}],["+",{"fg":2,"bold":true}],["~Last()         ",{}],["|",{"inverse":true}],["  ",{"fg":6,"bg":0,"bold":true}],["  5 ",{"fg":3,"bold":true}],["                                                                                                              ",{}],["|",{"inverse":true}],[" 11 ",{"fg":3,"bold":true}],["▸ .local/",{"fg":6,"bold":true}],["         ",{}]],"21":[["   ",{}],["+",{"fg":2,"bold":true}],["SecondRun(void) ",{}],["|",{"inverse":true}],["  ",{"fg":6,"bg":0,"bold":true}],["  6 ",{"fg":3,"bold":true}],["struct",{"fg":2,"bold":true}],[" First                                                                                                  ",{}],["|",{"inverse":true}],[" 12 ",{"fg":3,"bold":true}],["▸ .pki/",{"fg":6,"bold":true}],["           ",{}]],"22":[["   ",{}],["+",{"fg":2,"bold":true}],["SecondRun2(void)",{}],["|",{"inverse":true}],["  ",{"fg":6,"bg":0,"bold":true}],["  7 ",{"fg":3,"bold":true}],["{                                                                                                             ",{}],["|",{"inverse":true}],[" 13 ",{"fg":3,"bold":true}],["▸ .ssh/",{"fg":6,"bold":true}],["           ",{}]],"23":[["                    ",{}],["|",{"inverse":true}],["  ",{"fg":6,"bg":0,"bold":true}],["  8 ",{"fg":3,"bold":true}],["    ",{}],["virtual",{"fg":2,"bold":true}],[" ",{}],["void",{"fg":2,"bold":true}],[" FirstRun(",{}],["void",{"fg":2,"bold":true}],[") = ",{}],["0",{"fg":5,"bold":true}],[";                                                                          ",{}],["|",{"inverse":true}],[" 14 ",{"fg":3,"bold":true}],["▸ .vim/",{"fg":6,"bold":true}],["           ",{}]],"24":[["▼",{"fg":3,"bold":true}],[" Second",{"fg":5,"bold":true}],[" : ",{}],["struct",{"fg":2,"bold":true}],["   ",{}],["|",{"inverse":true}],["  ",{"fg":6,"bg":0,"bold":true}],["  9 ",{"fg":3,"bold":true}],["    ",{}],["virtual",{"fg":2,"bold":true}],[" ",{}],["void",{"fg":2,"bold":true}],[" FirstRun2(",{}],["void",{"fg":2,"bold":true}],[") = ",{}],["0",{"fg":5,"bold":true}],[";                                                                         ",{}],["|",{"inverse":true}],[" 15 ",{"fg":3,"bold":true}],["▸ diary/",{"fg":6,"bold":true}],["          ",{}]],"25":[["    [prototypes]",{"fg":6,"bold":true}],["    ",{}],["|",{"inverse":true}],["  ",{"fg":6,"bg":0,"bold":true}],[" 10 ",{"fg":3,"bold":true}],["};                                                                                                            ",{}],["|",{"inverse":true}],[" 16 ",{"fg":3,"bold":true}],["▸ temp/",{"fg":6,"bold":true}],["           ",{}]],"26":[["   ",{}],["+",{"fg":2,"bold":true}],["SecondRun(void) ",{}],["|",{"inverse":true}],["  ",{"fg":6,"bg":0,"bold":true}],[" 11 ",{"fg":3,"bold":true}],["                                                                                                              ",{}],["|",{"inverse":true}],[" 17 ",{"fg":3,"bold":true}],["  .bash_history   ",{}]],"27":[["   ",{}],["+",{"fg":2,"bold":true}],["SecondRun2(void)",{}],["|",{"inverse":true}],["  ",{"fg":6,"bg":0,"bold":true}],[" 12 ",{"fg":3,"bold":true}],["struct",{"fg":2,"bold":true}],[" Second                                                                                                 ",{}],["|",{"inverse":true}],[" 18 ",{"fg":3,"bold":true}],["  .bash_logout    ",{}]],"28":[["                    ",{}],["|",{"inverse":true}],["  ",{"fg":6,"bg":0,"bold":true}],[" 13 ",{"fg":3,"bold":true}],["{                                                                                                             ",{}],["|",{"inverse":true}],[" 19 ",{"fg":3,"bold":true}],["  .bash_profile   ",{"underline":true}]],"29":[["▼",{"fg":3,"bold":true}],[" ",{}],["functions",{"fg":6,"bold":true}],["         ",{}],["|",{"inverse":true}],["  ",{"fg":6,"bg":0,"bold":true}],[" 14 ",{"fg":3,"bold":true}],["    ",{}],["virtual",{"fg":2,"bold":true}],[" ",{}],["void",{"fg":2,"bold":true}],[" SecondRun(",{}],["void",{"fg":2,"bold":true}],[") = ",{}],["0",{"fg":5,"bold":true}],[";                                                                         ",{}],["|",{"inverse":true}],[" 20 ",{"fg":3,"bold":true}],["  .bashrc         ",{}]],"30":[["    main(int argc, c",{"underline":true}],["|",{"inverse":true}],["  ",{"fg":6,"bg":0,"bold":true}],[" 15 ",{"fg":3,"bold":true}],["    ",{}],["virtual",{"fg":2,"bold":true}],[" ",{}],["void",{"fg":2,"bold":true}],[" SecondRun2(",{}],["void",{"fg":2,"bold":true}],[") = ",{}],["0",{"fg":5,"bold":true}],[";                                                                        ",{}],["|",{"inverse":true}],[" 21 ",{"fg":3,"bold":true}],["  .cshrc          ",{}]],"31":[["~                   ",{"fg":4,"bold":true}],["|",{"inverse":true}],["  ",{"fg":6,"bg":0,"bold":true}],[" 16 ",{"fg":3,"bold":true}],["};                                                                                                            ",{}],["|",{"inverse":true}],[" 22 ",{"fg":3,"bold":true}],["  .dmrc           ",{}]],"32":[["~                   ",{"fg":4,"bold":true}],["|",{"inverse":true}],["  ",{"fg":6,"bg":0,"bold":true}],[" 17 ",{"fg":3,"bold":true}],["                                                                                                              ",{}],["|",{"inverse":true}],[" 23 ",{"fg":3,"bold":true}],["  .esd_auth       ",{}]],"33":[["~                   ",{"fg":4,"bold":true}],["|",{"inverse":true}],["  ",{"fg":6,"bg":0,"bold":true}],[" 18 ",{"fg":3,"bold":true}],["struct",{"fg":2,"bold":true}],[" Last: ",{}],["public",{"fg":3,"bold":true}],[" First,                                                                                    ",{}],["|",{"inverse":true}],[" 24 ",{"fg":3,"bold":true}],["  .gtkrc-2.0      ",{}]],"34":[["~                   ",{"fg":4,"bold":true}],["|",{"inverse":true}],["  ",{"fg":6,"bg":0,"bold":true}],[" 19 ",{"fg":3,"bold":true}],["    ",{}],["public",{"fg":3,"bold":true}],[" Second                                                                                             ",{}],["|",{"inverse":true}],[" 25 ",{"fg":3,"bold":true}],["  .gtkrc-2.0-kde4 ",{}]],"35":[["~                   ",{"fg":4,"bold":true}],["|",{"inverse":true}],["  ",{"fg":6,"bg":0,"bold":true}],[" 20 ",{"fg":3,"bold":true}],["{                                                                                                             ",{}],["|",{"inverse":true}],[" 26 ",{"fg":3,"bold":true}],["  .lesshst        ",{}]],"36":[["~                   ",{"fg":4,"bold":true}],["|",{"inverse":true}],["  ",{"fg":6,"bg":0,"bold":true}],[" 21 ",{"fg":3,"bold":true}],["    ",{}],["// 基类First的虚方法",{"fg":6,"bold":true}],["                                                                                      ",{}],["|",{"inverse":true}],[" 27 ",{"fg":3,"bold":true}],["  .tcshrc         ",{}]],"37":[["~                   ",{"fg":4,"bold":true}],["|",{"inverse":true}],["  ",{"fg":6,"bg":0,"bold":true}],[" 22 ",{"fg":3,"bold":true}],["    ",{}],["virtual",{"fg":2,"bold":true}],[" ",{}],["void",{"fg":2,"bold":true}],[" FirstRun(",{}],["void",{"fg":2,"bold":true}],[")                                                                               ",{}],["|",{"inverse":true}],[" 28 ",{"fg":3,"bold":true}],["  .viminfo        ",{}]],"38":[["~                   ",{"fg":4,"bold":true}],["|",{"inverse":true}],["  ",{"fg":6,"bg":0,"bold":true}],[" 23 ",{"fg":3,"bold":true}],["    {                                                                                                         ",{}],["|",{"inverse":true}],[" 29 ",{"fg":3,"bold":true}],["  .vimrc          ",{}]],"39":[["~                   ",{"fg":4,"bold":true}],["|",{"inverse":true}],["  ",{"fg":6,"bg":0,"bold":true}],[" 24 ",{"fg":3,"bold":true}],["    ",{}],["|",{"fg":2,"bold":true}],["   cout << ",{}],["\"First\"",{"fg":5,"bold":true}],[" << endl;                                                                              ",{}],["|",{"inverse":true}],[" 30 ",{"fg":3,"bold":true}],["  .xsession-errors",{}]],"40":[["~                   ",{"fg":4,"bold":true}],["|",{"inverse":true}],["  ",{"fg":6,"bg":0,"bold":true}],[" 25 ",{"fg":3,"bold":true}],["    }                                                                                                         ",{}],["|",{"inverse":true}],[" 31 ",{"fg":3,"bold":true}],["  anaconda-ks.cfg ",{}]],"41":[["~                   ",{"fg":4,"bold":true}],["|",{"inverse":true}],["  ",{"fg":6,"bg":0,"bold":true}],[" 26 ",{"fg":3,"bold":true}],["                                                                                                              ",{}],["|",{"inverse":true}],[" 32 ",{"fg":3,"bold":true}],["  initial-setup-ks",{}]],"42":[["~                   ",{"fg":4,"bold":true}],["|",{"inverse":true}],["  ",{"fg":6,"bg":0,"bold":true}],[" 27 ",{"fg":3,"bold":true}],["    ",{}],["virtual",{"fg":2,"bold":true}],[" ",{}],["void",{"fg":2,"bold":true}],[" FirstRun2(",{}],["void",{"fg":2,"bold":true}],[")                                                                              ",{}],["|",{"inverse":true}],[" 33 ",{"fg":3,"bold":true}],["  test.c          ",{}]],"43":[["~                   ",{"fg":4,"bold":true}],["|",{"inverse":true}],["  ",{"fg":6,"bg":0,"bold":true}],[" 28 ",{"fg":3,"bold":true}],["    {                                                                                                         ",{}],["|",{"inverse":true}],[" 34 ",{"fg":3,"bold":true}],["  test.cpp        ",{}]],"44":[["~                   ",{"fg":4,"bold":true}],["|",{"inverse":true}],["  ",{"fg":6,"bg":0,"bold":true}],[" 29 ",{"fg":3,"bold":true}],["    ",{}],["|",{"fg":2,"bold":true}],["   cout << ",{}],["\"First2\"",{"fg":5,"bold":true}],[" << endl;                                                                             ",{}],["|",{"inverse":true}],[" 35 ",{"fg":3,"bold":true}],["  .test.cpp.swp   ",{}]],"45":[["~                   ",{"fg":4,"bold":true}],["|",{"inverse":true}],["  ",{"fg":6,"bg":0,"bold":true}],[" 30 ",{"fg":3,"bold":true}],["    }                                                                                                         ",{}],["|",{"inverse":true}],["~                     ",{"fg":4,"bold":true}]],"47":[["rd> _",{"fg":6,"bold":true}],["                                                                                                                                                           ",{}]]},"cursor":{"x":0,"y":0,"visible":true}}],[6.087294,{"lines":{"0":[["> test.",{"underline":true}],["c",{"fg":6,"bold":true}],["                                                                                                                                                        ",{"underline":true}]],"1":[["> .vimr",{}],["c",{"fg":6,"bold":true}],["                                                                                                                                                        ",{}]],"2":[["> .bashr",{}],["c",{"fg":6,"bold":true}],["                                                                                                                                                       ",{}]],"3":[["> .dmr",{}],["c",{"fg":6,"bold":true}],["                                                                                                                                                         ",{}]],"4":[["> .",{}],["c",{"fg":6,"bold":true}],["shr",{}],["c",{"fg":6,"bold":true}],["                                                                                                                                                        ",{}]],"5":[["> test.",{}],["c",{"fg":6,"bold":true}],["pp                                                                                                                                                      ",{}]],"6":[["> .gtkr",{}],["c",{"fg":6,"bold":true}],["-2.0                                                                                                                                                    ",{}]],"7":[["> .t",{}],["c",{"fg":6,"bold":true}],["shr",{}],["c",{"fg":6,"bold":true}],["                                                                                                                                                       ",{}]],"8":[["> ana",{}],["c",{"fg":6,"bold":true}],["onda-ks.",{}],["c",{"fg":6,"bold":true}],["fg                                                                                                                                               ",{}]],"9":[["> .gtkr",{}],["c",{"fg":6,"bold":true}],["-2.0-kde4                                                                                                                                               ",{}]],"10":[["> initial-setup-ks.",{}],["c",{"fg":6,"bold":true}],["fg                                                                                                                                          ",{}]],"11":[["> .asciinema/",{}],["c",{"fg":6,"bold":true}],["onfig                                                                                                                                             ",{}]],"12":[["> .config/Trollte",{}],["c",{"fg":6,"bold":true}],["h.",{}],["c",{"fg":6,"bold":true}],["onf                                                                                                                                        ",{}]],"13":[["> temp/test.",{}],["c",{"fg":6,"bold":true}],["                                                                                                                                                   ",{}]],"14":[["> .config/user-dirs.lo",{}],["c",{"fg":6,"bold":true}],["ale                                                                                                                                      ",{}]]},"cursor":{"x":26,"y":14,"visible":false}}],[0.000854,{"lines":{"47":[["rd> ",{"fg":6,"bold":true}],["c",{}],["_",{"fg":6,"bold":true}],["                                                                                                                                                          ",{}]]},"cursor":{"x":0,"y":0,"visible":true}}],[0.277151,{"lines":{"0":[["> .cache/ctrlp/mru/",{"underline":true}],["ca",{"fg":6,"bold":true}],["che.txt                                                                                                                                    ",{"underline":true}]],"1":[["> .kde/cache-localhost.localdomain/ksyco",{}],["ca",{"fg":6,"bold":true}],["4                                                                                                                     ",{}]],"2":[["> .kde/cache-localhost.localdomain/ksyco",{}],["ca",{"fg":6,"bold":true}],["4stamp                                                                                                                ",{}]],"3":[["> .kde/share/config/k",{}],["ca",{"fg":6,"bold":true}],["lcrc                                                                                                                                     ",{}]],"4":[["> .config/user-dirs.lo",{}],["ca",{"fg":6,"bold":true}],["le                                                                                                                                      ",{}]],"5":[["> .kde/cache-localhost.localdomain/icon-",{}],["ca",{"fg":6,"bold":true}],["che.k",{}],["ca",{"fg":6,"bold":true}],["che                                                                                                            ",{}]],"6":[["> .kde/cache-localhost.localdomain/plasma_theme_Heisenbug.k",{}],["ca",{"fg":6,"bold":true}],["che                                                                                                ",{}]],"7":[["> .cache/ctrlp/hist/",{}],["ca",{"fg":6,"bold":true}],["che.txt                                                                                                                                   ",{}]],"8":[["> .vim/bundle/calendar-vim/",{}],["ca",{"fg":6,"bold":true}],["lendar.vim.vimup                                                                                                                   ",{}]],"9":[["> .config/pulse/529a0a22407b4e1cbc8e85a898311c46-",{}],["ca",{"fg":6,"bold":true}],["rd-database.tdb                                                                                              ",{}]],"10":[["> .kde/share/config/libk",{}],["ca",{"fg":6,"bold":true}],["l_htmlexportrc                                                                                                                        ",{}]],"11":[["> .kde/share/config/fedora-plasma-",{}],["ca",{"fg":6,"bold":true}],["cherc                                                                                                                       ",{}]],"12":[["> .vim/bundle/vim-powerline/Powerline_default_default_compatible.",{}],["ca",{"fg":6,"bold":true}],["che                                                                                          ",{}]],"13":[["> .vim/bundle/vim-powerline/Powerline_default_solarized256_compatible.",{}],["ca",{"fg":6,"bold":true}],["che                                                                                     ",{}]],"14":[["> .kde/share/apps/kfileplaces/bookmarks.xml.tb",{}],["ca",{"fg":6,"bold":true}],["che                                                                                                             ",{}]]},"cursor":{"x":51,"y":14,"visible":false}}],[0.0008050000000000001,{"lines":{"47":[["rd> ",{"fg":6,"bold":true}],["ca",{}],["_",{"fg":6,"bold":true}],["                                                                                                                                                         ",{}]]},"cursor":{"x":0,"y":0,"visible":true}}],[0.188689,{"lines":{"0":[["> .kde/share/config/k",{"underline":true}],["cal",{"fg":6,"bold":true}],["crc                                                                                                                                     ",{"underline":true}]],"1":[["> .vim/bundle/syntastic/syntax_checkers/scala/s",{}],["cal",{"fg":6,"bold":true}],["ac.vim                                                                                                        ",{}]],"2":[["> .vim/bundle/calendar-vim/doc/",{}],["cal",{"fg":6,"bold":true}],["endar.txt                                                                                                                     ",{}]],"3":[["> .vim/bundle/calendar-vim/plugin/",{}],["cal",{"fg":6,"bold":true}],["endar.vim                                                                                                                  ",{}]],"4":[["> .vim/bundle/calendar-vim/autoload/",{}],["cal",{"fg":6,"bold":true}],["endar.vim                                                                                                                ",{}]],"5":[["> .vim/bundle/YouCompleteMe/third_party/ycmd/cpp/BoostParts/boost/",{}],["cal",{"fg":6,"bold":true}],["l_traits.hpp                                                                               ",{}]],"6":[["> .vim/bundle/YouCompleteMe/third_party/ycmd/cpp/BoostParts/boost/lexi",{}],["cal",{"fg":6,"bold":true}],["_cast.hpp                                                                              ",{}]],"7":[["> .config/user-dirs.lo",{}],["cal",{"fg":6,"bold":true}],["e                                                                                                                                      ",{}]],"8":[["> .vim/bundle/calendar-vim/",{}],["cal",{"fg":6,"bold":true}],["endar.vim.vimup                                                                                                                   ",{}]],"9":[["> .kde/share/config/libk",{}],["cal",{"fg":6,"bold":true}],["_htmlexportrc                                                                                                                        ",{}]],"10":[["> .vim/bundle/YouCompleteMe/third_party/ycmd/third_party/bottle/test/test_contextlo",{}],["cal",{"fg":6,"bold":true}],["s.py                                                                      ",{}]],"11":[["> .vim/bundle/YouCompleteMe/third_party/ycmd/cpp/BoostParts/boost/date_time/gregorian_",{}],["cal",{"fg":6,"bold":true}],["endar.hpp                                                              ",{}]],"12":[["> .vim/bundle/YouCompleteMe/third_party/ycmd/cpp/BoostParts/boost/date_time/gregorian_",{}],["cal",{"fg":6,"bold":true}],["endar.ipp                                                              ",{}]],"13":[["> .vim/bundle/YouCompleteMe/third_pne_default_solarized256_compatible.",{}],["ca",{"fg":6,"bold":true}],["che                                                                                     ",{}]]},"cursor":{"x":35,"y":13,"visible":false}}],[0.0009959999999999999,{"lines":{"13":[["> .vim/bundle/YouCompleteMe/third_party/ycmd/cpp/BoostParts/boost/date_time/date_formatting_lo",{}],["cal",{"fg":6,"bold":true}],["es.hpp                                                         ",{}]],"14":[["> .vim/bundle/YouCompleteMe/third_party/ycmd/cpp/BoostParts/boost/archive/basic_streambuf_lo",{}],["cal",{"fg":6,"bold":true}],["e_saver.hpp                                                      ",{}]],"47":[["rd> ",{"fg":6,"bold":true}],["cal",{}],["_",{"fg":6,"bold":true}],["                                                                                                                                                        ",{}]]},"cursor":{"x":0,"y":0,"visible":true}}],[1.176037,{"lines":{"0":[["> .vim/bundle/calendar-vim/doc/",{"underline":true}],["cale",{"fg":6,"bold":true}],["ndar.txt                                                                                                                     ",{"underline":true}]],"1":[["> .vim/bundle/calendar-vim/plugin/",{}],["cale",{"fg":6,"bold":true}],["ndar.vim                                                                                                                  ",{}]],"2":[["> .vim/bundle/calendar-vim/autoload/",{}],["cale",{"fg":6,"bold":true}],["ndar.vim                                                                                                                ",{}]],"3":[["> .vim/bundle/YouCompleteMe/third_party/ycmd/cpp/BoostParts/boost/config/compiler/paths",{}],["cale",{"fg":6,"bold":true}],[".hpp                                                                 ",{}]],"4":[["> .config/user-dirs.lo",{}],["cale",{"fg":6,"bold":true}],["                                                                                                                                      ",{}]],"5":[["> .vim/bundle/YouCompleteMe/third_party/ycmd/cpp/BoostParts/boost/date_time/lo",{}],["cale",{"fg":6,"bold":true}],["_config.hpp                                                                   ",{}]],"6":[["> .vim/bundle/YouCompleteMe/third_party/ycmd/cpp/BoostParts/boost/date_time/gregorian/greg_",{}],["cale",{"fg":6,"bold":true}],["ndar.hpp                                                         ",{}]],"7":[["> .vim/bundle/calendar-vim/",{}],["cale",{"fg":6,"bold":true}],["ndar.vim.vimup                                                                                                                   ",{}]],"8":[["> .vim/bundle/YouCompleteMe/third_party/ycmd/cpp/BoostParts/boost/date_time/gregorian_",{}],["cale",{"fg":6,"bold":true}],["ndar.hpp                                                              ",{}]],"9":[["> .vim/bundle/YouCompleteMe/third_party/ycmd/cpp/BoostParts/boost/date_time/gregorian_",{}],["cale",{"fg":6,"bold":true}],["ndar.ipp                                                              ",{}]],"10":[["> .vim/bundle/YouCompleteMe/third_party/ycmd/cpp/BoostParts/boost/date_time/date_formatting_lo",{}],["cale",{"fg":6,"bold":true}],["s.hpp                                                         ",{}]],"11":[["> .vim/bundle/YouCompleteMe/third_party/ycmd/cpp/BoostParts/boost/archive/basic_streambuf_lo",{}],["cale",{"fg":6,"bold":true}],["_saver.hpp                                                      ",{}]],"12":[[" mru ",{}],[" files     ",{"bold":true}],[" buf ",{}],[" - ",{"bold":true}],["                                         /date_time/gregorian_",{}],["cal",{"fg":6,"bold":true}],["endar.ipp                                                              ",{}]]},"cursor":{"x":65,"y":12,"visible":false}}],[0.008964,{"lines":{"12":[[" mru ",{}],[" files     ",{"bold":true}],[" buf ",{}],[" - ",{"bold":true}],["                                                                                                                          prt │ file  ~ ",{}]],"13":[["                    ",{}],["|",{"inverse":true}],["  ",{"fg":6,"bg":0,"bold":true}],["  1 ",{"fg":3,"bold":true}],["#include ",{"fg":4,"bold":true,"underline":true}],["<iostream>",{"fg":5,"bold":true,"underline":true}],["                                                                                           ",{"underline":true}],["|",{"inverse":true}],["  6 ",{"fg":3,"bold":true}],["▸ .cache/",{"fg":6,"bold":true}],["         ",{}]],"14":[["▼",{"fg":3,"bold":true}],[" Last",{"fg":5,"bold":true}],[" : ",{}],["struct",{"fg":2,"bold":true}],["     ",{}],["|",{"inverse":true}],["  ",{"fg":6,"bg":0,"bold":true}],["  2 ",{"fg":3,"bold":true}],["#include ",{"fg":4,"bold":true}],["<vector>",{"fg":5,"bold":true}],["                                                                                             ",{}],["|",{"inverse":true}],["  7 ",{"fg":3,"bold":true}],["▸ .config/",{"fg":6,"bold":true}],["        ",{}]],"15":[["    [functions]",{"fg":6,"bold":true}],["     ",{}],["|",{"inverse":true}],["  ",{"fg":6,"bg":0,"bold":true}],["  3 ",{"fg":3,"bold":true}],["                                                                                                              ",{}],["|",{"inverse":true}],["  8 ",{"fg":3,"bold":true}],["▸ .dbus/",{"fg":6,"bold":true}],["          ",{}]],"16":[["   ",{}],["+",{"fg":2,"bold":true}],["FirstRun(void)  ",{}],["|",{"inverse":true}],["  ",{"fg":6,"bg":0,"bold":true}],["  4 using",{"fg":3,"bold":true}],[" ",{}],["namespace",{"fg":2,"bold":true}],[" std;                                                                                          ",{}],["|",{"inverse":true}],["  9 ",{"fg":3,"bold":true}],["▸ .gnupg/",{"fg":6,"bold":true}],["         ",{}]],"17":[["   ",{}],["+",{"fg":2,"bold":true}],["FirstRun2(void) ",{}],["|",{"inverse":true}],["  ",{"fg":6,"bg":0,"bold":true}],["  5 ",{"fg":3,"bold":true}],["                                                                                                              ",{}],["|",{"inverse":true}],[" 10 ",{"fg":3,"bold":true}],["▸ .kde/",{"fg":6,"bold":true}],["           ",{}]],"18":[["   ",{}],["+",{"fg":2,"bold":true}],["~Last()         ",{}],["|",{"inverse":true}],["  ",{"fg":6,"bg":0,"bold":true}],["  6 ",{"fg":3,"bold":true}],["struct",{"fg":2,"bold":true}],[" First                                                                                                  ",{}],["|",{"inverse":true}],[" 11 ",{"fg":3,"bold":true}],["▸ .local/",{"fg":6,"bold":true}],["         ",{}]],"19":[["   ",{}],["+",{"fg":2,"bold":true}],["SecondRun(void) ",{}],["|",{"inverse":true}],["  ",{"fg":6,"bg":0,"bold":true}],["  7 ",{"fg":3,"bold":true}],["{                                                                                                             ",{}],["|",{"inverse":true}],[" 12 ",{"fg":3,"bold":true}],["▸ .pki/",{"fg":6,"bold":true}],["           ",{}]],"20":[["   ",{}],["+",{"fg":2,"bold":true}],["SecondRun2(void)",{}],["|",{"inverse":true}],["  ",{"fg":6,"bg":0,"bold":true}],["  8 ",{"fg":3,"bold":true}],["    ",{}],["virtual",{"fg":2,"bold":true}],[" ",{}],["void",{"fg":2,"bold":true}],[" FirstRun(",{}],["void",{"fg":2,"bold":true}],[") = ",{}],["0",{"fg":5,"bold":true}],[";                                                                          ",{}],["|",{"inverse":true}],[" 13 ",{"fg":3,"bold":true}],["▸ .ssh/",{"fg":6,"bold":true}],["           ",{}]],"21":[["                    ",{}],["|",{"inverse":true}],["  ",{"fg":6,"bg":0,"bold":true}],["  9 ",{"fg":3,"bold":true}],["    ",{}],["virtual",{"fg":2,"bold":true}],[" ",{}],["void",{"fg":2,"bold":true}],[" FirstRun2(",{}],["void",{"fg":2,"bold":true}],[") = ",{}],["0",{"fg":5,"bold":true}],[";                                                                         ",{}],["|",{"inverse":true}],[" 14 ",{"fg":3,"bold":true}],["▸ .vim/",{"fg":6,"bold":true}],["           ",{}]],"22":[["▼",{"fg":3,"bold":true}],[" Second",{"fg":5,"bold":true}],[" : ",{}],["struct",{"fg":2,"bold":true}],["   ",{}],["|",{"inverse":true}],["  ",{"fg":6,"bg":0,"bold":true}],[" 10 ",{"fg":3,"bold":true}],["};                                                                                                            ",{}],["|",{"inverse":true}],[" 15 ",{"fg":3,"bold":true}],["▸ diary/",{"fg":6,"bold":true}],["          ",{}]],"23":[["    [prototypes]",{"fg":6,"bold":true}],["    ",{}],["|",{"inverse":true}],["  ",{"fg":6,"bg":0,"bold":true}],[" 11 ",{"fg":3,"bold":true}],["                                                                                                              ",{}],["|",{"inverse":true}],[" 16 ",{"fg":3,"bold":true}],["▸ temp/",{"fg":6,"bold":true}],["           ",{}]],"24":[["   ",{}],["+",{"fg":2,"bold":true}],["SecondRun(void) ",{}],["|",{"inverse":true}],["  ",{"fg":6,"bg":0,"bold":true}],[" 12 ",{"fg":3,"bold":true}],["struct",{"fg":2,"bold":true}],[" Second                                                                                                 ",{}],["|",{"inverse":true}],[" 17 ",{"fg":3,"bold":true}],["  .bash_history   ",{}]],"25":[["   ",{}],["+",{"fg":2,"bold":true}],["SecondRun2(void)",{}],["|",{"inverse":true}],["  ",{"fg":6,"bg":0,"bold":true}],[" 13 ",{"fg":3,"bold":true}],["{                                                                                                             ",{}],["|",{"inverse":true}],[" 18 ",{"fg":3,"bold":true}],["  .bash_logout    ",{}]],"26":[["                    ",{}],["|",{"inverse":true}],["  ",{"fg":6,"bg":0,"bold":true}],[" 14 ",{"fg":3,"bold":true}],["    ",{}],["virtual",{"fg":2,"bold":true}],[" ",{}],["void",{"fg":2,"bold":true}],[" SecondRun(",{}],["void",{"fg":2,"bold":true}],[") = ",{}],["0",{"fg":5,"bold":true}],[";                                                                         ",{}],["|",{"inverse":true}],[" 19 ",{"fg":3,"bold":true}],["  .bash_profile   ",{"underline":true}]],"27":[["▼",{"fg":3,"bold":true}],[" ",{}],["functions",{"fg":6,"bold":true}],["         ",{}],["|",{"inverse":true}],["  ",{"fg":6,"bg":0,"bold":true}],[" 15 ",{"fg":3,"bold":true}],["    ",{}],["virtual",{"fg":2,"bold":true}],[" ",{}],["void",{"fg":2,"bold":true}],[" SecondRun2(",{}],["void",{"fg":2,"bold":true}],[") = ",{}],["0",{"fg":5,"bold":true}],[";                                                                        ",{}],["|",{"inverse":true}],[" 20 ",{"fg":3,"bold":true}],["  .bashrc         ",{}]],"28":[["    main(int argc, c",{"underline":true}],["|",{"inverse":true}],["  ",{"fg":6,"bg":0,"bold":true}],[" 16 ",{"fg":3,"bold":true}],["};                                                                                                            ",{}],["|",{"inverse":true}],[" 21 ",{"fg":3,"bold":true}],["  .cshrc          ",{}]],"29":[["~                   ",{"fg":4,"bold":true}],["|",{"inverse":true}],["  ",{"fg":6,"bg":0,"bold":true}],[" 17 ",{"fg":3,"bold":true}],["                                                                                                              ",{}],["|",{"inverse":true}],[" 22 ",{"fg":3,"bold":true}],["  .dmrc           ",{}]],"30":[["~                   ",{"fg":4,"bold":true}],["|",{"inverse":true}],["  ",{"fg":6,"bg":0,"bold":true}],[" 18 ",{"fg":3,"bold":true}],["struct",{"fg":2,"bold":true}],[" Last: ",{}],["public",{"fg":3,"bold":true}],[" First,                                                                                    ",{}],["|",{"inverse":true}],[" 23 ",{"fg":3,"bold":true}],["  .esd_auth       ",{}]],"31":[["~                   ",{"fg":4,"bold":true}],["|",{"inverse":true}],["  ",{"fg":6,"bg":0,"bold":true}],[" 19 ",{"fg":3,"bold":true}],["    ",{}],["public",{"fg":3,"bold":true}],[" Second                                                                                             ",{}],["|",{"inverse":true}],[" 24 ",{"fg":3,"bold":true}],["  .gtkrc-2.0      ",{}]],"32":[["~                   ",{"fg":4,"bold":true}],["|",{"inverse":true}],["  ",{"fg":6,"bg":0,"bold":true}],[" 20 ",{"fg":3,"bold":true}],["{                                                                                                             ",{}],["|",{"inverse":true}],[" 25 ",{"fg":3,"bold":true}],["  .gtkrc-2.0-kde4 ",{}]],"33":[["~                   ",{"fg":4,"bold":true}],["|",{"inverse":true}],["  ",{"fg":6,"bg":0,"bold":true}],[" 21 ",{"fg":3,"bold":true}],["    ",{}],["// 基类First的虚方法",{"fg":6,"bold":true}],["                                                                                      ",{}],["|",{"inverse":true}],[" 26 ",{"fg":3,"bold":true}],["  .lesshst        ",{}]],"34":[["~                   ",{"fg":4,"bold":true}],["|",{"inverse":true}],["  ",{"fg":6,"bg":0,"bold":true}],[" 22 ",{"fg":3,"bold":true}],["    ",{}],["virtual",{"fg":2,"bold":true}],[" ",{}],["void",{"fg":2,"bold":true}],[" FirstRun(",{}],["void",{"fg":2,"bold":true}],[")                                                                               ",{}],["|",{"inverse":true}],[" 27 ",{"fg":3,"bold":true}],["  .tcshrc         ",{}]],"35":[["~                   ",{"fg":4,"bold":true}],["|",{"inverse":true}],["  ",{"fg":6,"bg":0,"bold":true}],[" 23 ",{"fg":3,"bold":true}],["    {                                                                                                         ",{}],["|",{"inverse":true}],[" 28 ",{"fg":3,"bold":true}],["  .viminfo        ",{}]],"36":[["~                   ",{"fg":4,"bold":true}],["|",{"inverse":true}],["  ",{"fg":6,"bg":0,"bold":true}],[" 24 ",{"fg":3,"bold":true}],["    ",{}],["|",{"fg":2,"bold":true}],["   cout << ",{}],["\"First\"",{"fg":5,"bold":true}],[" << endl;                                                                              ",{}],["|",{"inverse":true}],[" 29 ",{"fg":3,"bold":true}],["  .vimrc          ",{}]],"37":[["~                   ",{"fg":4,"bold":true}],["|",{"inverse":true}],["  ",{"fg":6,"bg":0,"bold":true}],[" 25 ",{"fg":3,"bold":true}],["    }                                                                                                         ",{}],["|",{"inverse":true}],[" 30 ",{"fg":3,"bold":true}],["  .xsession-errors",{}]],"38":[["~                   ",{"fg":4,"bold":true}],["|",{"inverse":true}],["  ",{"fg":6,"bg":0,"bold":true}],[" 26 ",{"fg":3,"bold":true}],["                                                                                                              ",{}],["|",{"inverse":true}],[" 31 ",{"fg":3,"bold":true}],["  anaconda-ks.cfg ",{}]],"39":[["~                   ",{"fg":4,"bold":true}],["|",{"inverse":true}],["  ",{"fg":6,"bg":0,"bold":true}],[" 27 ",{"fg":3,"bold":true}],["    ",{}],["virtual",{"fg":2,"bold":true}],[" ",{}],["void",{"fg":2,"bold":true}],[" FirstRun2(",{}],["void",{"fg":2,"bold":true}],[")                                                                              ",{}],["|",{"inverse":true}],[" 32 ",{"fg":3,"bold":true}],["  initial-setup-ks",{}]],"40":[["~                   ",{"fg":4,"bold":true}],["|",{"inverse":true}],["  ",{"fg":6,"bg":0,"bold":true}],[" 28 ",{"fg":3,"bold":true}],["    {                                                                                                         ",{}],["|",{"inverse":true}],[" 33 ",{"fg":3,"bold":true}],["  test.c          ",{}]],"41":[["~                   ",{"fg":4,"bold":true}],["|",{"inverse":true}],["  ",{"fg":6,"bg":0,"bold":true}],[" 29 ",{"fg":3,"bold":true}],["    ",{}],["|",{"fg":2,"bold":true}],["   cout << ",{}],["\"First2\"",{"fg":5,"bold":true}],[" << endl;                                                                             ",{}],["|",{"inverse":true}],[" 34 ",{"fg":3,"bold":true}],["  test.cpp        ",{}]],"42":[["~                   ",{"fg":4,"bold":true}],["|",{"inverse":true}],["  ",{"fg":6,"bg":0,"bold":true}],[" 30 ",{"fg":3,"bold":true}],["    }                                                                                                         ",{}],["|",{"inverse":true}],[" 35 ",{"fg":3,"bold":true}],["  .test.cpp.swp   ",{}]],"43":[["~                   ",{"fg":4,"bold":true}],["|",{"inverse":true}],["  ",{"fg":6,"bg":0,"bold":true}],[" 31 ",{"fg":3,"bold":true}],["                                                                                                              ",{}],["|",{"inverse":true}],["~                     ",{"fg":4,"bold":true}]],"44":[["~                   ",{"fg":4,"bold":true}],["|",{"inverse":true}],["  ",{"fg":6,"bg":0,"bold":true}],[" 32 ",{"fg":3,"bold":true}],["    ",{}],["// 基类Second虚方法",{"fg":6,"bold":true}],["                                                                                       ",{}],["|",{"inverse":true}],["~                     ",{"fg":4,"bold":true}]],"45":[["~                   ",{"fg":4,"bold":true}],["|",{"inverse":true}],["  ",{"fg":6,"bg":0,"bold":true}],[" 33 ",{"fg":3,"bold":true}],["    ",{}],["virtual",{"fg":2,"bold":true}],[" ",{}],["void",{"fg":2,"bold":true}],[" SecondRun(",{}],["void",{"fg":2,"bold":true}],[")                                                                              ",{}],["|",{"inverse":true}],["~                     ",{"fg":4,"bold":true}]],"47":[["rd> ",{"fg":6,"bold":true}],["cale",{}],["_",{"fg":6,"bold":true}],["                                                                                                                                                       ",{}]]},"cursor":{"x":0,"y":0,"visible":true}}],[0.049088,{"lines":{"0":[["> .vim/bundle/calendar-vim/doc/",{"underline":true}],["calen",{"fg":6,"bold":true}],["dar.txt                                                                                                                     ",{"underline":true}]],"1":[["> .vim/bundle/calendar-vim/plugin/",{}],["calen",{"fg":6,"bold":true}],["dar.vim                                                                                                                  ",{}]],"2":[["> .vim/bundle/calendar-vim/autoload/",{}],["calen",{"fg":6,"bold":true}],["dar.vim                                                                                                                ",{}]],"3":[["> .vim/bundle/YouCompleteMe/third_party/ycmd/cpp/BoostParts/boost/date_time/gregorian/greg_",{}],["calen",{"fg":6,"bold":true}],["dar.hpp                                                         ",{}]],"4":[["> .vim/bundle/calendar-vim/",{}],["calen",{"fg":6,"bold":true}],["dar.vim.vimup                                                                                                                   ",{}]],"5":[["> .vim/bundle/YouCompleteMe/third_party/ycmd/cpp/BoostParts/boost/date_time/gregorian_",{}],["calen",{"fg":6,"bold":true}],["dar.hpp                                                              ",{}]],"6":[["> .vim/bundle/YouCompleteMe/third_party/ycmd/cpp/BoostParts/boost/date_time/gregorian_",{}],["calen",{"fg":6,"bold":true}],["dar.ipp                                                              ",{}]],"7":[[" mru ",{}],[" files     ",{"bold":true}],[" buf ",{}],[" - ",{"bold":true}],["                                                                                                                          prt │ file  ~ ",{}]],"8":[["   ",{}],["+",{"fg":2,"bold":true}],["FirstRun(void)  ",{}],["|",{"inverse":true}],["leteMe/third_party/ycmd/cpp/BoostParts/boost/date_time/gregorian_",{}],["cale",{"fg":6,"bold":true}],["ndar.hpp                                                              ",{}]],"9":[["   ",{}],["+",{"fg":2,"bold":true}],["FirstRun2(void) ",{}],["|",{"inverse":true}],["leteMe/third_party/ycmd/cpp/BoostParts/boost/date_time/gregorian_",{}],["cale",{"fg":6,"bold":true}],["ndar.ipp                                                              ",{}]],"10":[["                    ",{}],["|",{"inverse":true}],["leteMe/third_party/ycmd/cpp/BoostParts/boost/date_time/date_formatting_lo",{}],["cale",{"fg":6,"bold":true}],["s.hpp                                                         ",{}]],"11":[["▼",{"fg":3,"bold":true}],[" Last",{"fg":5,"bold":true}],[" : ",{}],["struct",{"fg":2,"bold":true}],["     ",{}],["|",{"inverse":true}],["leteMe/third_party/ycmd/cpp/BoostParts/boost/archive/basic_streambuf_lo",{}],["cale",{"fg":6,"bold":true}],["_saver.hpp                                                      ",{}]],"12":[["    [functions]",{"fg":6,"bold":true}],["     ",{}],["|",{"inverse":true}],[" - ",{"bold":true}],["                                                                                                                          prt │ file  ~ ",{}]],"13":[["   ",{}],["+",{"fg":2,"bold":true}],["FirstRun(void)  ",{}],["|",{"inverse":true}],["  ",{"fg":6,"bg":0,"bold":true}],["  1 ",{"fg":3,"bold":true}],["#include ",{"fg":4,"bold":true,"underline":true}],["<iostream>",{"fg":5,"bold":true,"underline":true}],["                                                                                           ",{"underline":true}],["|",{"inverse":true}],["  6 ",{"fg":3,"bold":true}],["▸ .cache/",{"fg":6,"bold":true}],["         ",{}]],"14":[["   ",{}],["+",{"fg":2,"bold":true}],["FirstRun2(void) ",{}],["|",{"inverse":true}],["  ",{"fg":6,"bg":0,"bold":true}],["  2 ",{"fg":3,"bold":true}],["#include ",{"fg":4,"bold":true}],["<vector>",{"fg":5,"bold":true}],["                                                                                             ",{}],["|",{"inverse":true}],["  7 ",{"fg":3,"bold":true}],["▸ .config/",{"fg":6,"bold":true}],["        ",{}]],"15":[["   ",{}],["+",{"fg":2,"bold":true}],["~Last()         ",{}],["|",{"inverse":true}],["  ",{"fg":6,"bg":0,"bold":true}],["  3 ",{"fg":3,"bold":true}],["                                                                                                              ",{}],["|",{"inverse":true}],["  8 ",{"fg":3,"bold":true}],["▸ .dbus/",{"fg":6,"bold":true}],["          ",{}]],"16":[["   ",{}],["+",{"fg":2,"bold":true}],["SecondRun(void) ",{}],["|",{"inverse":true}],["  ",{"fg":6,"bg":0,"bold":true}],["  4 using",{"fg":3,"bold":true}],[" ",{}],["namespace",{"fg":2,"bold":true}],[" std;                                                                                          ",{}],["|",{"inverse":true}],["  9 ",{"fg":3,"bold":true}],["▸ .gnupg/",{"fg":6,"bold":true}],["         ",{}]],"17":[["   ",{}],["+",{"fg":2,"bold":true}],["SecondRun2(void)",{}],["|",{"inverse":true}],["  ",{"fg":6,"bg":0,"bold":true}],["  5 ",{"fg":3,"bold":true}],["                                                                                                              ",{}],["|",{"inverse":true}],[" 10 ",{"fg":3,"bold":true}],["▸ .kde/",{"fg":6,"bold":true}],["           ",{}]],"18":[["                    ",{}],["|",{"inverse":true}],["  ",{"fg":6,"bg":0,"bold":true}],["  6 ",{"fg":3,"bold":true}],["struct",{"fg":2,"bold":true}],[" First                                                                                                  ",{}],["|",{"inverse":true}],[" 11 ",{"fg":3,"bold":true}],["▸ .local/",{"fg":6,"bold":true}],["         ",{}]],"19":[["▼",{"fg":3,"bold":true}],[" Second",{"fg":5,"bold":true}],[" : ",{}],["struct",{"fg":2,"bold":true}],["   ",{}],["|",{"inverse":true}],["  ",{"fg":6,"bg":0,"bold":true}],["  7 ",{"fg":3,"bold":true}],["{                                                                                                             ",{}],["|",{"inverse":true}],[" 12 ",{"fg":3,"bold":true}],["▸ .pki/",{"fg":6,"bold":true}],["           ",{}]],"20":[["    [prototypes]",{"fg":6,"bold":true}],[" id)",{}],["|",{"inverse":true}],["  ",{"fg":6,"bg":0,"bold":true}],["  8 ",{"fg":3,"bold":true}],["    ",{}],["virtual",{"fg":2,"bold":true}],[" ",{}],["void",{"fg":2,"bold":true}],[" FirstRun(",{}],["void",{"fg":2,"bold":true}],[") = ",{}],["0",{"fg":5,"bold":true}],[";                                                                          ",{}],["|",{"inverse":true}],[" 13 ",{"fg":3,"bold":true}],["▸ .ssh/",{"fg":6,"bold":true}],["           ",{}]]},"cursor":{"x":17,"y":20,"visible":false}}],[0.002887,{"lines":{"8":[["   ",{}],["+",{"fg":2,"bold":true}],["FirstRun(void)  ",{}],["|",{"inverse":true}],["  ",{"fg":6,"bg":0,"bold":true}],["  1 ",{"fg":3,"bold":true}],["#include ",{"fg":4,"bold":true,"underline":true}],["<iostream>",{"fg":5,"bold":true,"underline":true}],["                                                                                           ",{"underline":true}],["|",{"inverse":true}],["  4 /root/",{"fg":3,"bold":true}],["            ",{}]],"9":[["   ",{}],["+",{"fg":2,"bold":true}],["FirstRun2(void) ",{}],["|",{"inverse":true}],["  ",{"fg":6,"bg":0,"bold":true}],["  2 ",{"fg":3,"bold":true}],["#include ",{"fg":4,"bold":true}],["<vector>",{"fg":5,"bold":true}],["                                                                                             ",{}],["|",{"inverse":true}],["  5 ",{"fg":3,"bold":true}],["▸ .asciinema/",{"fg":6,"bold":true}],["     ",{}]],"10":[["                    ",{}],["|",{"inverse":true}],["  ",{"fg":6,"bg":0,"bold":true}],["  3 ",{"fg":3,"bold":true}],["                                                                                                              ",{}],["|",{"inverse":true}],["  6 ",{"fg":3,"bold":true}],["▸ .cache/",{"fg":6,"bold":true}],["         ",{}]],"11":[["▼",{"fg":3,"bold":true}],[" Last",{"fg":5,"bold":true}],[" : ",{}],["struct",{"fg":2,"bold":true}],["     ",{}],["|",{"inverse":true}],["  ",{"fg":6,"bg":0,"bold":true}],["  4 using",{"fg":3,"bold":true}],[" ",{}],["namespace",{"fg":2,"bold":true}],[" std;                                                                                          ",{}],["|",{"inverse":true}],["  7 ",{"fg":3,"bold":true}],["▸ .config/",{"fg":6,"bold":true}],["        ",{}]],"12":[["    [functions]",{"fg":6,"bold":true}],["     ",{}],["|",{"inverse":true}],["  ",{"fg":6,"bg":0,"bold":true}],["  5 ",{"fg":3,"bold":true}],["                                                                                                              ",{}],["|",{"inverse":true}],["  8 ",{"fg":3,"bold":true}],["▸ .dbus/",{"fg":6,"bold":true}],["          ",{}]],"13":[["   ",{}],["+",{"fg":2,"bold":true}],["FirstRun(void)  ",{}],["|",{"inverse":true}],["  ",{"fg":6,"bg":0,"bold":true}],["  6 ",{"fg":3,"bold":true}],["struct",{"fg":2,"bold":true}],[" First                                                                                                  ",{}],["|",{"inverse":true}],["  9 ",{"fg":3,"bold":true}],["▸ .gnupg/",{"fg":6,"bold":true}],["         ",{}]],"14":[["   ",{}],["+",{"fg":2,"bold":true}],["FirstRun2(void) ",{}],["|",{"inverse":true}],["  ",{"fg":6,"bg":0,"bold":true}],["  7 ",{"fg":3,"bold":true}],["{                                                                                                             ",{}],["|",{"inverse":true}],[" 10 ",{"fg":3,"bold":true}],["▸ .kde/",{"fg":6,"bold":true}],["           ",{}]],"15":[["   ",{}],["+",{"fg":2,"bold":true}],["~Last()         ",{}],["|",{"inverse":true}],["  ",{"fg":6,"bg":0,"bold":true}],["  8 ",{"fg":3,"bold":true}],["    ",{}],["virtual",{"fg":2,"bold":true}],[" ",{}],["void",{"fg":2,"bold":true}],[" FirstRun(",{}],["void",{"fg":2,"bold":true}],[") = ",{}],["0",{"fg":5,"bold":true}],[";                                                                          ",{}],["|",{"inverse":true}],[" 11 ",{"fg":3,"bold":true}],["▸ .local/",{"fg":6,"bold":true}],["         ",{}]],"16":[["   ",{}],["+",{"fg":2,"bold":true}],["SecondRun(void) ",{}],["|",{"inverse":true}],["  ",{"fg":6,"bg":0,"bold":true}],["  9 ",{"fg":3,"bold":true}],["    ",{}],["virtual",{"fg":2,"bold":true}],[" ",{}],["void",{"fg":2,"bold":true}],[" FirstRun2(",{}],["void",{"fg":2,"bold":true}],[") = ",{}],["0",{"fg":5,"bold":true}],[";                                                                         ",{}],["|",{"inverse":true}],[" 12 ",{"fg":3,"bold":true}],["▸ .pki/",{"fg":6,"bold":true}],["           ",{}]],"17":[["   ",{}],["+",{"fg":2,"bold":true}],["SecondRun2(void)",{}],["|",{"inverse":true}],["  ",{"fg":6,"bg":0,"bold":true}],[" 10 ",{"fg":3,"bold":true}],["};                                                                                                            ",{}],["|",{"inverse":true}],[" 13 ",{"fg":3,"bold":true}],["▸ .ssh/",{"fg":6,"bold":true}],["           ",{}]],"18":[["                    ",{}],["|",{"inverse":true}],["  ",{"fg":6,"bg":0,"bold":true}],[" 11 ",{"fg":3,"bold":true}],["                                                                                                              ",{}],["|",{"inverse":true}],[" 14 ",{"fg":3,"bold":true}],["▸ .vim/",{"fg":6,"bold":true}],["           ",{}]],"19":[["▼",{"fg":3,"bold":true}],[" Second",{"fg":5,"bold":true}],[" : ",{}],["struct",{"fg":2,"bold":true}],["   ",{}],["|",{"inverse":true}],["  ",{"fg":6,"bg":0,"bold":true}],[" 12 ",{"fg":3,"bold":true}],["struct",{"fg":2,"bold":true}],[" Second                                                                                                 ",{}],["|",{"inverse":true}],[" 15 ",{"fg":3,"bold":true}],["▸ diary/",{"fg":6,"bold":true}],["          ",{}]],"20":[["    [prototypes]",{"fg":6,"bold":true}],["    ",{}],["|",{"inverse":true}],["  ",{"fg":6,"bg":0,"bold":true}],[" 13 ",{"fg":3,"bold":true}],["{                                                                                                             ",{}],["|",{"inverse":true}],[" 16 ",{"fg":3,"bold":true}],["▸ temp/",{"fg":6,"bold":true}],["           ",{}]],"21":[["   ",{}],["+",{"fg":2,"bold":true}],["SecondRun(void) ",{}],["|",{"inverse":true}],["  ",{"fg":6,"bg":0,"bold":true}],[" 14 ",{"fg":3,"bold":true}],["    ",{}],["virtual",{"fg":2,"bold":true}],[" ",{}],["void",{"fg":2,"bold":true}],[" SecondRun(",{}],["void",{"fg":2,"bold":true}],[") = ",{}],["0",{"fg":5,"bold":true}],[";                                                                         ",{}],["|",{"inverse":true}],[" 17 ",{"fg":3,"bold":true}],["  .bash_history   ",{}]],"22":[["   ",{}],["+",{"fg":2,"bold":true}],["SecondRun2(void)",{}],["|",{"inverse":true}],["  ",{"fg":6,"bg":0,"bold":true}],[" 15 ",{"fg":3,"bold":true}],["    ",{}],["virtual",{"fg":2,"bold":true}],[" ",{}],["void",{"fg":2,"bold":true}],[" SecondRun2(",{}],["void",{"fg":2,"bold":true}],[") = ",{}],["0",{"fg":5,"bold":true}],[";                                                                        ",{}],["|",{"inverse":true}],[" 18 ",{"fg":3,"bold":true}],["  .bash_logout    ",{}]],"23":[["                    ",{}],["|",{"inverse":true}],["  ",{"fg":6,"bg":0,"bold":true}],[" 16 ",{"fg":3,"bold":true}],["};                                                                                                            ",{}],["|",{"inverse":true}],[" 19 ",{"fg":3,"bold":true}],["  .bash_profile   ",{"underline":true}]],"24":[["▼",{"fg":3,"bold":true}],[" ",{}],["functions",{"fg":6,"bold":true}],["         ",{}],["|",{"inverse":true}],["  ",{"fg":6,"bg":0,"bold":true}],[" 17 ",{"fg":3,"bold":true}],["                                                                                                              ",{}],["|",{"inverse":true}],[" 20 ",{"fg":3,"bold":true}],["  .bashrc         ",{}]],"25":[["    main(int argc, c",{"underline":true}],["|",{"inverse":true}],["  ",{"fg":6,"bg":0,"bold":true}],[" 18 ",{"fg":3,"bold":true}],["struct",{"fg":2,"bold":true}],[" Last: ",{}],["public",{"fg":3,"bold":true}],[" First,                                                                                    ",{}],["|",{"inverse":true}],[" 21 ",{"fg":3,"bold":true}],["  .cshrc          ",{}]],"26":[["~                   ",{"fg":4,"bold":true}],["|",{"inverse":true}],["  ",{"fg":6,"bg":0,"bold":true}],[" 19 ",{"fg":3,"bold":true}],["    ",{}],["public",{"fg":3,"bold":true}],[" Second                                                                                             ",{}],["|",{"inverse":true}],[" 22 ",{"fg":3,"bold":true}],["  .dmrc           ",{}]],"27":[["~                   ",{"fg":4,"bold":true}],["|",{"inverse":true}],["  ",{"fg":6,"bg":0,"bold":true}],[" 20 ",{"fg":3,"bold":true}],["{                                                                                                             ",{}],["|",{"inverse":true}],[" 23 ",{"fg":3,"bold":true}],["  .esd_auth       ",{}]],"28":[["~                   ",{"fg":4,"bold":true}],["|",{"inverse":true}],["  ",{"fg":6,"bg":0,"bold":true}],[" 21 ",{"fg":3,"bold":true}],["    ",{}],["// 基类First的虚方法",{"fg":6,"bold":true}],["                                                                                      ",{}],["|",{"inverse":true}],[" 24 ",{"fg":3,"bold":true}],["  .gtkrc-2.0      ",{}]],"29":[["~                   ",{"fg":4,"bold":true}],["|",{"inverse":true}],["  ",{"fg":6,"bg":0,"bold":true}],[" 22 ",{"fg":3,"bold":true}],["    ",{}],["virtual",{"fg":2,"bold":true}],[" ",{}],["void",{"fg":2,"bold":true}],[" FirstRun(",{}],["void",{"fg":2,"bold":true}],[")                                                                               ",{}],["|",{"inverse":true}],[" 25 ",{"fg":3,"bold":true}],["  .gtkrc-2.0-kde4 ",{}]],"30":[["~                   ",{"fg":4,"bold":true}],["|",{"inverse":true}],["  ",{"fg":6,"bg":0,"bold":true}],[" 23 ",{"fg":3,"bold":true}],["    {                                                                                                         ",{}],["|",{"inverse":true}],[" 26 ",{"fg":3,"bold":true}],["  .lesshst        ",{}]],"31":[["~                   ",{"fg":4,"bold":true}],["|",{"inverse":true}],["  ",{"fg":6,"bg":0,"bold":true}],[" 24 ",{"fg":3,"bold":true}],["    ",{}],["|",{"fg":2,"bold":true}],["   cout << ",{}],["\"First\"",{"fg":5,"bold":true}],[" << endl;                                                                              ",{}],["|",{"inverse":true}],[" 27 ",{"fg":3,"bold":true}],["  .tcshrc         ",{}]],"32":[["~                   ",{"fg":4,"bold":true}],["|",{"inverse":true}],["  ",{"fg":6,"bg":0,"bold":true}],[" 25 ",{"fg":3,"bold":true}],["    }                                                                                                         ",{}],["|",{"inverse":true}],[" 28 ",{"fg":3,"bold":true}],["  .viminfo        ",{}]],"33":[["~                   ",{"fg":4,"bold":true}],["|",{"inverse":true}],["  ",{"fg":6,"bg":0,"bold":true}],[" 26 ",{"fg":3,"bold":true}],["                                                                                                              ",{}],["|",{"inverse":true}],[" 29 ",{"fg":3,"bold":true}],["  .vimrc          ",{}]],"34":[["~                   ",{"fg":4,"bold":true}],["|",{"inverse":true}],["  ",{"fg":6,"bg":0,"bold":true}],[" 27 ",{"fg":3,"bold":true}],["    ",{}],["virtual",{"fg":2,"bold":true}],[" ",{}],["void",{"fg":2,"bold":true}],[" FirstRun2(",{}],["void",{"fg":2,"bold":true}],[")                                                                              ",{}],["|",{"inverse":true}],[" 30 ",{"fg":3,"bold":true}],["  .xsession-errors",{}]],"35":[["~                   ",{"fg":4,"bold":true}],["|",{"inverse":true}],["  ",{"fg":6,"bg":0,"bold":true}],[" 28 ",{"fg":3,"bold":true}],["    {                                                                                                         ",{}],["|",{"inverse":true}],[" 31 ",{"fg":3,"bold":true}],["  anaconda-ks.cfg ",{}]],"36":[["~                   ",{"fg":4,"bold":true}],["|",{"inverse":true}],["  ",{"fg":6,"bg":0,"bold":true}],[" 29 ",{"fg":3,"bold":true}],["    ",{}],["|",{"fg":2,"bold":true}],["   cout << ",{}],["\"First2\"",{"fg":5,"bold":true}],[" << endl;                                                                             ",{}],["|",{"inverse":true}],[" 32 ",{"fg":3,"bold":true}],["  initial-setup-ks",{}]],"37":[["~                   ",{"fg":4,"bold":true}],["|",{"inverse":true}],["  ",{"fg":6,"bg":0,"bold":true}],[" 30 ",{"fg":3,"bold":true}],["    }                                                                                                         ",{}],["|",{"inverse":true}],[" 33 ",{"fg":3,"bold":true}],["  test.c          ",{}]],"38":[["~                   ",{"fg":4,"bold":true}],["|",{"inverse":true}],["  ",{"fg":6,"bg":0,"bold":true}],[" 31 ",{"fg":3,"bold":true}],["                                                                                                              ",{}],["|",{"inverse":true}],[" 34 ",{"fg":3,"bold":true}],["  test.cpp        ",{}]],"39":[["~                   ",{"fg":4,"bold":true}],["|",{"inverse":true}],["  ",{"fg":6,"bg":0,"bold":true}],[" 32 ",{"fg":3,"bold":true}],["    ",{}],["// 基类Second虚方法",{"fg":6,"bold":true}],["                                                                                       ",{}],["|",{"inverse":true}],[" 35 ",{"fg":3,"bold":true}],["  .test.cpp.swp   ",{}]],"40":[["~                   ",{"fg":4,"bold":true}],["|",{"inverse":true}],["  ",{"fg":6,"bg":0,"bold":true}],[" 33 ",{"fg":3,"bold":true}],["    ",{}],["virtual",{"fg":2,"bold":true}],[" ",{}],["void",{"fg":2,"bold":true}],[" SecondRun(",{}],["void",{"fg":2,"bold":true}],[")                                                                              ",{}],["|",{"inverse":true}],["~                     ",{"fg":4,"bold":true}]],"41":[["~                   ",{"fg":4,"bold":true}],["|",{"inverse":true}],["  ",{"fg":6,"bg":0,"bold":true}],[" 34 ",{"fg":3,"bold":true}],["    {                                                                                                         ",{}],["|",{"inverse":true}],["~                     ",{"fg":4,"bold":true}]],"42":[["~                   ",{"fg":4,"bold":true}],["|",{"inverse":true}],["  ",{"fg":6,"bg":0,"bold":true}],[" 35 ",{"fg":3,"bold":true}],["    ",{}],["|",{"fg":2,"bold":true}],["   cout <<",{}],["\"Second\"",{"fg":5,"bold":true}],[" << endl;                                                                              ",{}],["|",{"inverse":true}],["~                     ",{"fg":4,"bold":true}]],"43":[["~                   ",{"fg":4,"bold":true}],["|",{"inverse":true}],["  ",{"fg":6,"bg":0,"bold":true}],[" 36 ",{"fg":3,"bold":true}],["    }                                                                                                         ",{}],["|",{"inverse":true}],["~                     ",{"fg":4,"bold":true}]],"44":[["~                   ",{"fg":4,"bold":true}],["|",{"inverse":true}],["  ",{"fg":6,"bg":0,"bold":true}],[" 37 ",{"fg":3,"bold":true}],["                                                                                                              ",{}],["|",{"inverse":true}],["~                     ",{"fg":4,"bold":true}]],"45":[["~                   ",{"fg":4,"bold":true}],["|",{"inverse":true}],["  ",{"fg":6,"bg":0,"bold":true}],[" 38 ",{"fg":3,"bold":true}],["    ",{}],["virtual",{"fg":2,"bold":true}],[" ",{}],["void",{"fg":2,"bold":true}],[" SecondRun2(",{}],["void",{"fg":2,"bold":true}],[")                                                                             ",{}],["|",{"inverse":true}],["~                     ",{"fg":4,"bold":true}]],"47":[["rd> ",{"fg":6,"bold":true}],["calen",{}],["_",{"fg":6,"bold":true}],["                                                                                                                                                      ",{}]]},"cursor":{"x":0,"y":0,"visible":true}}],[0.225305,{"lines":{"0":[["> .vim/bundle/calendar-vim/doc/",{"underline":true}],["calend",{"fg":6,"bold":true}],["ar.txt                                                                                                                     ",{"underline":true}]],"1":[["> .vim/bundle/calendar-vim/plugin/",{}],["calend",{"fg":6,"bold":true}],["ar.vim                                                                                                                  ",{}]],"2":[["> .vim/bundle/calendar-vim/autoload/",{}],["calend",{"fg":6,"bold":true}],["ar.vim                                                                                                                ",{}]],"3":[["> .vim/bundle/YouCompleteMe/third_party/ycmd/cpp/BoostParts/boost/date_time/gregorian/greg_",{}],["calend",{"fg":6,"bold":true}],["ar.hpp                                                         ",{}]],"4":[["> .vim/bundle/calendar-vim/",{}],["calend",{"fg":6,"bold":true}],["ar.vim.vimup                                                                                                                   ",{}]],"5":[["> .vim/bundle/YouCompleteMe/third_party/ycmd/cpp/BoostParts/boost/date_time/gregorian_",{}],["calend",{"fg":6,"bold":true}],["ar.hpp                                                              ",{}]],"6":[["> .vim/bundle/YouCompleteMe/third_party/ycmd/cpp/BoostParts/boost/date_time/gregorian_",{}],["calend",{"fg":6,"bold":true}],["ar.ipp                                                              ",{}]]},"cursor":{"x":92,"y":6,"visible":false}}],[0.000801,{"lines":{"47":[["rd> ",{"fg":6,"bold":true}],["calend",{}],["_",{"fg":6,"bold":true}],["                                                                                                                                                     ",{}]]},"cursor":{"x":0,"y":0,"visible":true}}],[0.307878,{"lines":{"0":[["> .vim/bundle/calendar-vim/doc/",{"underline":true}],["calenda",{"fg":6,"bold":true}],["r.txt                                                                                                                     ",{"underline":true}]],"1":[["> .vim/bundle/calendar-vim/plugin/",{}],["calenda",{"fg":6,"bold":true}],["r.vim                                                                                                                  ",{}]],"2":[["> .vim/bundle/calendar-vim/autoload/",{}],["calenda",{"fg":6,"bold":true}],["r.vim                                                                                                                ",{}]],"3":[["> .vim/bundle/YouCompleteMe/third_party/ycmd/cpp/BoostParts/boost/date_time/gregorian/greg_",{}],["calenda",{"fg":6,"bold":true}],["r.hpp                                                         ",{}]],"4":[["> .vim/bundle/calendar-vim/",{}],["calenda",{"fg":6,"bold":true}],["r.vim.vimup                                                                                                                   ",{}]],"5":[["> .vim/bundle/YouCompleteMe/third_party/ycmd/cpp/BoostParts/boost/date_time/gregorian_",{}],["calenda",{"fg":6,"bold":true}],["r.hpp                                                              ",{}]],"6":[["> .vim/bundle/YouCompleteMe/third_party/ycmd/cpp/BoostParts/boost/date_time/gregorian_",{}],["calenda",{"fg":6,"bold":true}],["r.ipp                                                              ",{}]]},"cursor":{"x":93,"y":6,"visible":false}}],[0.000666,{"lines":{"47":[["rd> ",{"fg":6,"bold":true}],["calenda",{}],["_",{"fg":6,"bold":true}],["                                                                                                                                                    ",{}]]},"cursor":{"x":0,"y":0,"visible":true}}],[0.07401099999999999,{"lines":{"0":[["> .vim/bundle/calendar-vim/doc/",{"underline":true}],["calendar",{"fg":6,"bold":true}],[".txt                                                                                                                     ",{"underline":true}]],"1":[["> .vim/bundle/calendar-vim/plugin/",{}],["calendar",{"fg":6,"bold":true}],[".vim                                                                                                                  ",{}]],"2":[["> .vim/bundle/calendar-vim/autoload/",{}],["calendar",{"fg":6,"bold":true}],[".vim                                                                                                                ",{}]],"3":[["> .vim/bundle/YouCompleteMe/third_party/ycmd/cpp/BoostParts/boost/date_time/gregorian/greg_",{}],["calendar",{"fg":6,"bold":true}],[".hpp                                                         ",{}]],"4":[["> .vim/bundle/calendar-vim/",{}],["calendar",{"fg":6,"bold":true}],[".vim.vimup                                                                                                                   ",{}]],"5":[["> .vim/bundle/YouCompleteMe/third_party/ycmd/cpp/BoostParts/boost/date_time/gregorian_",{}],["calendar",{"fg":6,"bold":true}],[".hpp                                                              ",{}]],"6":[["> .vim/bundle/YouCompleteMe/third_party/ycmd/cpp/BoostParts/boost/date_time/gregorian_",{}],["calendar",{"fg":6,"bold":true}],[".ipp                                                              ",{}]]},"cursor":{"x":94,"y":6,"visible":false}}],[0.000656,{"lines":{"47":[["rd> ",{"fg":6,"bold":true}],["calendar",{}],["_",{"fg":6,"bold":true}],["                                                                                                                                                   ",{}]]},"cursor":{"x":0,"y":0,"visible":true}}],[2.011974,{"lines":{"0":[["> .vim/bundle/calendar-vim/doc/",{"underline":true}],["calendar.",{"fg":6,"bold":true}],["txt                                                                                                                     ",{"underline":true}]],"1":[["> .vim/bundle/calendar-vim/plugin/",{}],["calendar.",{"fg":6,"bold":true}],["vim                                                                                                                  ",{}]],"2":[["> .vim/bundle/calendar-vim/autoload/",{}],["calendar.",{"fg":6,"bold":true}],["vim                                                                                                                ",{}]],"3":[["> .vim/bundle/YouCompleteMe/third_party/ycmd/cpp/BoostParts/boost/date_time/gregorian/greg_",{}],["calendar.",{"fg":6,"bold":true}],["hpp                                                         ",{}]],"4":[["> .vim/bundle/calendar-vim/",{}],["calendar.",{"fg":6,"bold":true}],["vim.vimup                                                                                                                   ",{}]],"5":[["> .vim/bundle/YouCompleteMe/third_party/ycmd/cpp/BoostParts/boost/date_time/gregorian_",{}],["calendar.",{"fg":6,"bold":true}],["hpp                                                              ",{}]],"6":[["> .vim/bundle/YouCompleteMe/third_party/ycmd/cpp/BoostParts/boost/date_time/gregorian_",{}],["calendar.",{"fg":6,"bold":true}],["ipp                                                              ",{}]]},"cursor":{"x":95,"y":6,"visible":false}}],[0.000795,{"lines":{"47":[["rd> ",{"fg":6,"bold":true}],["calendar.",{}],["_",{"fg":6,"bold":true}],["                                                                                                                                                  ",{}]]},"cursor":{"x":0,"y":0,"visible":true}}],[0.575771,{"lines":{"0":[["> .vim/bundle/calendar-vim/doc/",{"underline":true}],["calendar.t",{"fg":6,"bold":true}],["xt                                                                                                                     ",{"underline":true}]],"1":[[" mru ",{}],[" files     ",{"bold":true}],[" buf ",{}],[" - ",{"bold":true}],["                                                                                                                          prt │ file  ~ ",{}]],"2":[["                    ",{}],["|",{"inverse":true}],["r-vim/autoload/",{}],["calendar.",{"fg":6,"bold":true}],["vim                                                                                                                ",{}]],"3":[["▼",{"fg":3,"bold":true}],[" First",{"fg":5,"bold":true}],[" : ",{}],["struct",{"fg":2,"bold":true}],["    ",{}],["|",{"inverse":true}],["leteMe/third_party/ycmd/cpp/BoostParts/boost/date_time/gregorian/greg_",{}],["calendar.",{"fg":6,"bold":true}],["hpp                                                         ",{}]],"4":[["    [prototypes]",{"fg":6,"bold":true}],["    ",{}],["|",{"inverse":true}],["r-vim/",{}],["calendar.",{"fg":6,"bold":true}],["vim.vimup                                                                                                                   ",{}]],"5":[["   ",{}],["+",{"fg":2,"bold":true}],["FirstRun(void)  ",{}],["|",{"inverse":true}],["leteMe/third_party/ycmd/cpp/BoostParts/boost/date_time/gregorian_",{}],["calendar.",{"fg":6,"bold":true}],["hpp                                                              ",{}]],"6":[["   ",{}],["+",{"fg":2,"bold":true}],["FirstRun2(void) ",{}],["|",{"inverse":true}],["leteMe/third_party/ycmd/cpp/BoostParts/boost/date_time/gregorian_",{}],["calendar.",{"fg":6,"bold":true}],["ipp                                                              ",{}]],"7":[["                    ",{}],["|",{"inverse":true}],[" - ",{"bold":true}],["                                                                                                                          prt │ file  ~ ",{}]],"8":[["▼",{"fg":3,"bold":true}],[" Last",{"fg":5,"bold":true}],[" : ",{}],["struct",{"fg":2,"bold":true}],["     ",{}],["|",{"inverse":true}],["  ",{"fg":6,"bg":0,"bold":true}],["  1 ",{"fg":3,"bold":true}],["#include ",{"fg":4,"bold":true,"underline":true}],["<iostream>",{"fg":5,"bold":true,"underline":true}],["                                                                                           ",{"underline":true}],["|",{"inverse":true}],["  4 /root/",{"fg":3,"bold":true}],["            ",{}]],"9":[["    [functions]",{"fg":6,"bold":true}],["     ",{}],["|",{"inverse":true}],["  ",{"fg":6,"bg":0,"bold":true}],["  2 ",{"fg":3,"bold":true}],["#include ",{"fg":4,"bold":true}],["<vector>",{"fg":5,"bold":true}],["                                                                                             ",{}],["|",{"inverse":true}],["  5 ",{"fg":3,"bold":true}],["▸ .asciinema/",{"fg":6,"bold":true}],["     ",{}]],"10":[["   ",{}],["+",{"fg":2,"bold":true}],["FirstRun(void)  ",{}],["|",{"inverse":true}],["  ",{"fg":6,"bg":0,"bold":true}],["  3 ",{"fg":3,"bold":true}],["                                                                                                              ",{}],["|",{"inverse":true}],["  6 ",{"fg":3,"bold":true}],["▸ .cache/",{"fg":6,"bold":true}],["         ",{}]],"11":[["   ",{}],["+",{"fg":2,"bold":true}],["FirstRun2(void) ",{}],["|",{"inverse":true}],["  ",{"fg":6,"bg":0,"bold":true}],["  4 using",{"fg":3,"bold":true}],[" ",{}],["namespace",{"fg":2,"bold":true}],[" std;                                                                                          ",{}],["|",{"inverse":true}],["  7 ",{"fg":3,"bold":true}],["▸ .config/",{"fg":6,"bold":true}],["        ",{}]],"12":[["   ",{}],["+",{"fg":2,"bold":true}],["~Last()         ",{}],["|",{"inverse":true}],["  ",{"fg":6,"bg":0,"bold":true}],["  5 ",{"fg":3,"bold":true}],["                                                                                                              ",{}],["|",{"inverse":true}],["  8 ",{"fg":3,"bold":true}],["▸ .dbus/",{"fg":6,"bold":true}],["          ",{}]],"13":[["   ",{}],["+",{"fg":2,"bold":true}],["SecondRun(void) ",{}],["|",{"inverse":true}],["  ",{"fg":6,"bg":0,"bold":true}],["  6 ",{"fg":3,"bold":true}],["struct",{"fg":2,"bold":true}],[" First                                                                                                  ",{}],["|",{"inverse":true}],["  9 ",{"fg":3,"bold":true}],["▸ .gnupg/",{"fg":6,"bold":true}],["         ",{}]],"14":[["   ",{}],["+",{"fg":2,"bold":true}],["SecondRun2(void)",{}],["|",{"inverse":true}],["  ",{"fg":6,"bg":0,"bold":true}],["  7 ",{"fg":3,"bold":true}],["{                                                                                                             ",{}],["|",{"inverse":true}],[" 10 ",{"fg":3,"bold":true}],["▸ .kde/",{"fg":6,"bold":true}],["           ",{}]],"15":[["                    ",{}],["|",{"inverse":true}],["  ",{"fg":6,"bg":0,"bold":true}],["  8 ",{"fg":3,"bold":true}],["    ",{}],["virtual",{"fg":2,"bold":true}],[" ",{}],["void",{"fg":2,"bold":true}],[" FirstRun(",{}],["void",{"fg":2,"bold":true}],[") = ",{}],["0",{"fg":5,"bold":true}],[";                                                                          ",{}],["|",{"inverse":true}],[" 11 ",{"fg":3,"bold":true}],["▸ .local/",{"fg":6,"bold":true}],["         ",{}]],"16":[["▼",{"fg":3,"bold":true}],[" Second",{"fg":5,"bold":true}],[" : ",{}],["struct",{"fg":2,"bold":true}],["   ",{}],["|",{"inverse":true}],["  ",{"fg":6,"bg":0,"bold":true}],["  9 ",{"fg":3,"bold":true}],["    ",{}],["virtual",{"fg":2,"bold":true}],[" ",{}],["void",{"fg":2,"bold":true}],[" FirstRun2(",{}],["void",{"fg":2,"bold":true}],[") = ",{}],["0",{"fg":5,"bold":true}],[";                                                                         ",{}],["|",{"inverse":true}],[" 12 ",{"fg":3,"bold":true}],["▸ .pki/",{"fg":6,"bold":true}],["           ",{}]],"17":[["    [prototypes]",{"fg":6,"bold":true}],["    ",{}],["|",{"inverse":true}],["  ",{"fg":6,"bg":0,"bold":true}],[" 10 ",{"fg":3,"bold":true}],["};                                                                                                            ",{}],["|",{"inverse":true}],[" 13 ",{"fg":3,"bold":true}],["▸ .ssh/",{"fg":6,"bold":true}],["           ",{}]],"18":[["   ",{}],["+",{"fg":2,"bold":true}],["SecondRun(void) ",{}],["|",{"inverse":true}],["  ",{"fg":6,"bg":0,"bold":true}],[" 11 ",{"fg":3,"bold":true}],["                                                                                                              ",{}],["|",{"inverse":true}],[" 14 ",{"fg":3,"bold":true}],["▸ .vim/",{"fg":6,"bold":true}],["           ",{}]],"19":[["   ",{}],["+",{"fg":2,"bold":true}],["SecondRun2(void)",{}],["|",{"inverse":true}],["  ",{"fg":6,"bg":0,"bold":true}],[" 12 ",{"fg":3,"bold":true}],["struct",{"fg":2,"bold":true}],[" Second                                                                                                 ",{}],["|",{"inverse":true}],[" 15 ",{"fg":3,"bold":true}],["▸ diary/",{"fg":6,"bold":true}],["          ",{}]],"20":[["                    ",{}],["|",{"inverse":true}],["  ",{"fg":6,"bg":0,"bold":true}],[" 13 ",{"fg":3,"bold":true}],["{                                                                                                             ",{}],["|",{"inverse":true}],[" 16 ",{"fg":3,"bold":true}],["▸ temp/",{"fg":6,"bold":true}],["           ",{}]]},"cursor":{"y":21,"visible":false}}],[0.016228,{"lines":{"2":[["                    ",{}],["|",{"inverse":true}],["  ",{"fg":6,"bg":0,"bold":true}],["  1 ",{"fg":3,"bold":true}],["#include ",{"fg":4,"bold":true,"underline":true}],["<iostream>",{"fg":5,"bold":true,"underline":true}],["                                                                                           ",{"underline":true}],["|",{"inverse":true}],["                      ",{}]],"3":[["▼",{"fg":3,"bold":true}],[" First",{"fg":5,"bold":true}],[" : ",{}],["struct",{"fg":2,"bold":true}],["    ",{}],["|",{"inverse":true}],["  ",{"fg":6,"bg":0,"bold":true}],["  2 ",{"fg":3,"bold":true}],["#include ",{"fg":4,"bold":true}],["<vector>",{"fg":5,"bold":true}],["                                                                                             ",{}],["|",{"inverse":true}],["                      ",{}]],"4":[["    [prototypes]",{"fg":6,"bold":true}],["    ",{}],["|",{"inverse":true}],["  ",{"fg":6,"bg":0,"bold":true}],["  3 ",{"fg":3,"bold":true}],["                                                                                                              ",{}],["|",{"inverse":true}],["                      ",{}]],"5":[["   ",{}],["+",{"fg":2,"bold":true}],["FirstRun(void)  ",{}],["|",{"inverse":true}],["  ",{"fg":6,"bg":0,"bold":true}],["  4 using",{"fg":3,"bold":true}],[" ",{}],["namespace",{"fg":2,"bold":true}],[" std;                                                                                          ",{}],["|",{"inverse":true}],["                      ",{}]],"6":[["   ",{}],["+",{"fg":2,"bold":true}],["FirstRun2(void) ",{}],["|",{"inverse":true}],["  ",{"fg":6,"bg":0,"bold":true}],["  5 ",{"fg":3,"bold":true}],["                                                                                                              ",{}],["|",{"inverse":true}],["                      ",{}]],"7":[["                    ",{}],["|",{"inverse":true}],["  ",{"fg":6,"bg":0,"bold":true}],["  6 ",{"fg":3,"bold":true}],["struct",{"fg":2,"bold":true}],[" First                                                                                                  ",{}],["|",{"inverse":true}],["        prt │ file  ~ ",{}]],"8":[["▼",{"fg":3,"bold":true}],[" Last",{"fg":5,"bold":true}],[" : ",{}],["struct",{"fg":2,"bold":true}],["     ",{}],["|",{"inverse":true}],["  ",{"fg":6,"bg":0,"bold":true}],["  7 ",{"fg":3,"bold":true}],["{                                                                                                             ",{}],["|",{"inverse":true}],["  4 /root/",{"fg":3,"bold":true}],["            ",{}]],"9":[["    [functions]",{"fg":6,"bold":true}],["     ",{}],["|",{"inverse":true}],["  ",{"fg":6,"bg":0,"bold":true}],["  8 ",{"fg":3,"bold":true}],["    ",{}],["virtual",{"fg":2,"bold":true}],[" ",{}],["void",{"fg":2,"bold":true}],[" FirstRun(",{}],["void",{"fg":2,"bold":true}],[") = ",{}],["0",{"fg":5,"bold":true}],[";                                                                          ",{}],["|",{"inverse":true}],["  5 ",{"fg":3,"bold":true}],["▸ .asciinema/",{"fg":6,"bold":true}],["     ",{}]],"10":[["   ",{}],["+",{"fg":2,"bold":true}],["FirstRun(void)  ",{}],["|",{"inverse":true}],["  ",{"fg":6,"bg":0,"bold":true}],["  9 ",{"fg":3,"bold":true}],["    ",{}],["virtual",{"fg":2,"bold":true}],[" ",{}],["void",{"fg":2,"bold":true}],[" FirstRun2(",{}],["void",{"fg":2,"bold":true}],[") = ",{}],["0",{"fg":5,"bold":true}],[";                                                                         ",{}],["|",{"inverse":true}],["  6 ",{"fg":3,"bold":true}],["▸ .cache/",{"fg":6,"bold":true}],["         ",{}]],"11":[["   ",{}],["+",{"fg":2,"bold":true}],["FirstRun2(void) ",{}],["|",{"inverse":true}],["  ",{"fg":6,"bg":0,"bold":true}],[" 10 ",{"fg":3,"bold":true}],["};                                                                                                            ",{}],["|",{"inverse":true}],["  7 ",{"fg":3,"bold":true}],["▸ .config/",{"fg":6,"bold":true}],["        ",{}]],"12":[["   ",{}],["+",{"fg":2,"bold":true}],["~Last()         ",{}],["|",{"inverse":true}],["  ",{"fg":6,"bg":0,"bold":true}],[" 11 ",{"fg":3,"bold":true}],["                                                                                                              ",{}],["|",{"inverse":true}],["  8 ",{"fg":3,"bold":true}],["▸ .dbus/",{"fg":6,"bold":true}],["          ",{}]],"13":[["   ",{}],["+",{"fg":2,"bold":true}],["SecondRun(void) ",{}],["|",{"inverse":true}],["  ",{"fg":6,"bg":0,"bold":true}],[" 12 ",{"fg":3,"bold":true}],["struct",{"fg":2,"bold":true}],[" Second                                                                                                 ",{}],["|",{"inverse":true}],["  9 ",{"fg":3,"bold":true}],["▸ .gnupg/",{"fg":6,"bold":true}],["         ",{}]],"14":[["   ",{}],["+",{"fg":2,"bold":true}],["SecondRun2(void)",{}],["|",{"inverse":true}],["  ",{"fg":6,"bg":0,"bold":true}],[" 13 ",{"fg":3,"bold":true}],["{                                                                                                             ",{}],["|",{"inverse":true}],[" 10 ",{"fg":3,"bold":true}],["▸ .kde/",{"fg":6,"bold":true}],["           ",{}]],"15":[["                    ",{}],["|",{"inverse":true}],["  ",{"fg":6,"bg":0,"bold":true}],[" 14 ",{"fg":3,"bold":true}],["    ",{}],["virtual",{"fg":2,"bold":true}],[" ",{}],["void",{"fg":2,"bold":true}],[" SecondRun(",{}],["void",{"fg":2,"bold":true}],[") = ",{}],["0",{"fg":5,"bold":true}],[";                                                                         ",{}],["|",{"inverse":true}],[" 11 ",{"fg":3,"bold":true}],["▸ .local/",{"fg":6,"bold":true}],["         ",{}]],"16":[["▼",{"fg":3,"bold":true}],[" Second",{"fg":5,"bold":true}],[" : ",{}],["struct",{"fg":2,"bold":true}],["   ",{}],["|",{"inverse":true}],["  ",{"fg":6,"bg":0,"bold":true}],[" 15 ",{"fg":3,"bold":true}],["    ",{}],["virtual",{"fg":2,"bold":true}],[" ",{}],["void",{"fg":2,"bold":true}],[" SecondRun2(",{}],["void",{"fg":2,"bold":true}],[") = ",{}],["0",{"fg":5,"bold":true}],[";                                                                        ",{}],["|",{"inverse":true}],[" 12 ",{"fg":3,"bold":true}],["▸ .pki/",{"fg":6,"bold":true}],["           ",{}]],"17":[["    [prototypes]",{"fg":6,"bold":true}],["    ",{}],["|",{"inverse":true}],["  ",{"fg":6,"bg":0,"bold":true}],[" 16 ",{"fg":3,"bold":true}],["};                                                                                                            ",{}],["|",{"inverse":true}],[" 13 ",{"fg":3,"bold":true}],["▸ .ssh/",{"fg":6,"bold":true}],["           ",{}]],"18":[["   ",{}],["+",{"fg":2,"bold":true}],["SecondRun(void) ",{}],["|",{"inverse":true}],["  ",{"fg":6,"bg":0,"bold":true}],[" 17 ",{"fg":3,"bold":true}],["                                                                                                              ",{}],["|",{"inverse":true}],[" 14 ",{"fg":3,"bold":true}],["▸ .vim/",{"fg":6,"bold":true}],["           ",{}]],"19":[["   ",{}],["+",{"fg":2,"bold":true}],["SecondRun2(void)",{}],["|",{"inverse":true}],["  ",{"fg":6,"bg":0,"bold":true}],[" 18 ",{"fg":3,"bold":true}],["struct",{"fg":2,"bold":true}],[" Last: ",{}],["public",{"fg":3,"bold":true}],[" First,                                                                                    ",{}],["|",{"inverse":true}],[" 15 ",{"fg":3,"bold":true}],["▸ diary/",{"fg":6,"bold":true}],["          ",{}]],"20":[["                    ",{}],["|",{"inverse":true}],["  ",{"fg":6,"bg":0,"bold":true}],[" 19 ",{"fg":3,"bold":true}],["    ",{}],["public",{"fg":3,"bold":true}],[" Second                                                                                             ",{}],["|",{"inverse":true}],[" 16 ",{"fg":3,"bold":true}],["▸ temp/",{"fg":6,"bold":true}],["           ",{}]],"21":[["▼",{"fg":3,"bold":true}],[" ",{}],["functions",{"fg":6,"bold":true}],["         ",{}],["|",{"inverse":true}],["  ",{"fg":6,"bg":0,"bold":true}],[" 20 ",{"fg":3,"bold":true}],["{                                                                                                             ",{}],["|",{"inverse":true}],[" 17 ",{"fg":3,"bold":true}],["  .bash_history   ",{}]],"22":[["    main(int argc, c",{"underline":true}],["|",{"inverse":true}],["  ",{"fg":6,"bg":0,"bold":true}],[" 21 ",{"fg":3,"bold":true}],["    ",{}],["// 基类First的虚方法",{"fg":6,"bold":true}],["                                                                                      ",{}],["|",{"inverse":true}],[" 18 ",{"fg":3,"bold":true}],["  .bash_logout    ",{}]],"23":[["~                   ",{"fg":4,"bold":true}],["|",{"inverse":true}],["  ",{"fg":6,"bg":0,"bold":true}],[" 22 ",{"fg":3,"bold":true}],["    ",{}],["virtual",{"fg":2,"bold":true}],[" ",{}],["void",{"fg":2,"bold":true}],[" FirstRun(",{}],["void",{"fg":2,"bold":true}],[")                                                                               ",{}],["|",{"inverse":true}],[" 19 ",{"fg":3,"bold":true}],["  .bash_profile   ",{"underline":true}]],"24":[["~                   ",{"fg":4,"bold":true}],["|",{"inverse":true}],["  ",{"fg":6,"bg":0,"bold":true}],[" 17 ",{"fg":3,"bold":true}],["                                                                                                              ",{}],["|",{"inverse":true}],[" 20 ",{"fg":3,"bold":true}],["  .bashrc         ",{}]],"25":[["~                   ",{"fg":4,"bold":true}],["|",{"inverse":true}],["  ",{"fg":6,"bg":0,"bold":true}],[" 18 ",{"fg":3,"bold":true}],["struct",{"fg":2,"bold":true}],[" Last: ",{}],["public",{"fg":3,"bold":true}],[" First,                                                                                    ",{}],["|",{"inverse":true}],[" 21 ",{"fg":3,"bold":true}],["  .cshrc          ",{}]]},"cursor":{"x":24,"y":24}}],[0.004228,{"lines":{"2":[["                    ",{}],["|",{"inverse":true}],["  ",{"fg":6,"bg":0,"bold":true}],["  1 ",{"fg":3,"bold":true}],["#include ",{"fg":4,"bold":true,"underline":true}],["<iostream>",{"fg":5,"bold":true,"underline":true}],["                                                                                           ",{"underline":true}],["|",{"inverse":true}],["  2 ",{"fg":3,"bold":true}],["                  ",{}]],"3":[["▼",{"fg":3,"bold":true}],[" First",{"fg":5,"bold":true}],[" : ",{}],["struct",{"fg":2,"bold":true}],["    ",{}],["|",{"inverse":true}],["  ",{"fg":6,"bg":0,"bold":true}],["  2 ",{"fg":3,"bold":true}],["#include ",{"fg":4,"bold":true}],["<vector>",{"fg":5,"bold":true}],["                                                                                             ",{}],["|",{"inverse":true}],["  3 ",{"fg":3,"bold":true}],[".. (up a dir)",{"fg":6,"bold":true}],["     ",{}]],"4":[["    [prototypes]",{"fg":6,"bold":true}],["    ",{}],["|",{"inverse":true}],["  ",{"fg":6,"bg":0,"bold":true}],["  3 ",{"fg":3,"bold":true}],["                                                                                                              ",{}],["|",{"inverse":true}],["  4 /root/",{"fg":3,"bold":true}],["            ",{}]],"5":[["   ",{}],["+",{"fg":2,"bold":true}],["FirstRun(void)  ",{}],["|",{"inverse":true}],["  ",{"fg":6,"bg":0,"bold":true}],["  4 using",{"fg":3,"bold":true}],[" ",{}],["namespace",{"fg":2,"bold":true}],[" std;                                                                                          ",{}],["|",{"inverse":true}],["  5 ",{"fg":3,"bold":true}],["▸ .asciinema/",{"fg":6,"bold":true}],["     ",{}]],"6":[["   ",{}],["+",{"fg":2,"bold":true}],["FirstRun2(void) ",{}],["|",{"inverse":true}],["  ",{"fg":6,"bg":0,"bold":true}],["  5 ",{"fg":3,"bold":true}],["                                                                                                              ",{}],["|",{"inverse":true}],["  6 ",{"fg":3,"bold":true}],["▸ .cache/",{"fg":6,"bold":true}],["         ",{}]],"7":[["                    ",{}],["|",{"inverse":true}],["  ",{"fg":6,"bg":0,"bold":true}],["  6 ",{"fg":3,"bold":true}],["struct",{"fg":2,"bold":true}],[" First                                                                                                  ",{}],["|",{"inverse":true}],["  7 ",{"fg":3,"bold":true}],["▸ .config/",{"fg":6,"bold":true}],["        ",{}]],"8":[["▼",{"fg":3,"bold":true}],[" Last",{"fg":5,"bold":true}],[" : ",{}],["struct",{"fg":2,"bold":true}],["     ",{}],["|",{"inverse":true}],["  ",{"fg":6,"bg":0,"bold":true}],["  7 ",{"fg":3,"bold":true}],["{                                                                                                             ",{}],["|",{"inverse":true}],["  8 ",{"fg":3,"bold":true}],["▸ .dbus/",{"fg":6,"bold":true}],["          ",{}]],"9":[["    [functions]",{"fg":6,"bold":true}],["     ",{}],["|",{"inverse":true}],["  ",{"fg":6,"bg":0,"bold":true}],["  8 ",{"fg":3,"bold":true}],["    ",{}],["virtual",{"fg":2,"bold":true}],[" ",{}],["void",{"fg":2,"bold":true}],[" FirstRun(",{}],["void",{"fg":2,"bold":true}],[") = ",{}],["0",{"fg":5,"bold":true}],[";                                                                          ",{}],["|",{"inverse":true}],["  9 ",{"fg":3,"bold":true}],["▸ .gnupg/",{"fg":6,"bold":true}],["         ",{}]],"10":[["   ",{}],["+",{"fg":2,"bold":true}],["FirstRun(void)  ",{}],["|",{"inverse":true}],["  ",{"fg":6,"bg":0,"bold":true}],["  9 ",{"fg":3,"bold":true}],["    ",{}],["virtual",{"fg":2,"bold":true}],[" ",{}],["void",{"fg":2,"bold":true}],[" FirstRun2(",{}],["void",{"fg":2,"bold":true}],[") = ",{}],["0",{"fg":5,"bold":true}],[";                                                                         ",{}],["|",{"inverse":true}],[" 10 ",{"fg":3,"bold":true}],["▸ .kde/",{"fg":6,"bold":true}],["           ",{}]],"11":[["   ",{}],["+",{"fg":2,"bold":true}],["FirstRun2(void) ",{}],["|",{"inverse":true}],["  ",{"fg":6,"bg":0,"bold":true}],[" 10 ",{"fg":3,"bold":true}],["};                                                                                                            ",{}],["|",{"inverse":true}],[" 11 ",{"fg":3,"bold":true}],["▸ .local/",{"fg":6,"bold":true}],["         ",{}]],"12":[["   ",{}],["+",{"fg":2,"bold":true}],["~Last()         ",{}],["|",{"inverse":true}],["  ",{"fg":6,"bg":0,"bold":true}],[" 11 ",{"fg":3,"bold":true}],["                                                                                                              ",{}],["|",{"inverse":true}],[" 12 ",{"fg":3,"bold":true}],["▸ .pki/",{"fg":6,"bold":true}],["           ",{}]],"13":[["   ",{}],["+",{"fg":2,"bold":true}],["SecondRun(void) ",{}],["|",{"inverse":true}],["  ",{"fg":6,"bg":0,"bold":true}],[" 12 ",{"fg":3,"bold":true}],["struct",{"fg":2,"bold":true}],[" Second                                                                                                 ",{}],["|",{"inverse":true}],[" 13 ",{"fg":3,"bold":true}],["▸ .ssh/",{"fg":6,"bold":true}],["           ",{}]],"14":[["   ",{}],["+",{"fg":2,"bold":true}],["SecondRun2(void)",{}],["|",{"inverse":true}],["  ",{"fg":6,"bg":0,"bold":true}],[" 13 ",{"fg":3,"bold":true}],["{                                                                                                             ",{}],["|",{"inverse":true}],[" 14 ",{"fg":3,"bold":true}],["▸ .vim/",{"fg":6,"bold":true}],["           ",{}]],"15":[["                    ",{}],["|",{"inverse":true}],["  ",{"fg":6,"bg":0,"bold":true}],[" 14 ",{"fg":3,"bold":true}],["    ",{}],["virtual",{"fg":2,"bold":true}],[" ",{}],["void",{"fg":2,"bold":true}],[" SecondRun(",{}],["void",{"fg":2,"bold":true}],[") = ",{}],["0",{"fg":5,"bold":true}],[";                                                                         ",{}],["|",{"inverse":true}],[" 15 ",{"fg":3,"bold":true}],["▸ diary/",{"fg":6,"bold":true}],["          ",{}]],"16":[["▼",{"fg":3,"bold":true}],[" Second",{"fg":5,"bold":true}],[" : ",{}],["struct",{"fg":2,"bold":true}],["   ",{}],["|",{"inverse":true}],["  ",{"fg":6,"bg":0,"bold":true}],[" 15 ",{"fg":3,"bold":true}],["    ",{}],["virtual",{"fg":2,"bold":true}],[" ",{}],["void",{"fg":2,"bold":true}],[" SecondRun2(",{}],["void",{"fg":2,"bold":true}],[") = ",{}],["0",{"fg":5,"bold":true}],[";                                                                        ",{}],["|",{"inverse":true}],[" 16 ",{"fg":3,"bold":true}],["▸ temp/",{"fg":6,"bold":true}],["           ",{}]],"17":[["    [prototypes]",{"fg":6,"bold":true}],["    ",{}],["|",{"inverse":true}],["  ",{"fg":6,"bg":0,"bold":true}],[" 16 ",{"fg":3,"bold":true}],["};                                                                                                            ",{}],["|",{"inverse":true}],[" 17 ",{"fg":3,"bold":true}],["  .bash_history   ",{}]],"18":[["   ",{}],["+",{"fg":2,"bold":true}],["SecondRun(void) ",{}],["|",{"inverse":true}],["  ",{"fg":6,"bg":0,"bold":true}],[" 17 ",{"fg":3,"bold":true}],["                                                                                                              ",{}],["|",{"inverse":true}],[" 18 ",{"fg":3,"bold":true}],["  .bash_logout    ",{}]],"19":[["   ",{}],["+",{"fg":2,"bold":true}],["SecondRun2(void)",{}],["|",{"inverse":true}],["  ",{"fg":6,"bg":0,"bold":true}],[" 18 ",{"fg":3,"bold":true}],["struct",{"fg":2,"bold":true}],[" Last: ",{}],["public",{"fg":3,"bold":true}],[" First,                                                                                    ",{}],["|",{"inverse":true}],[" 19 ",{"fg":3,"bold":true}],["  .bash_profile   ",{"underline":true}]],"20":[["                    ",{}],["|",{"inverse":true}],["  ",{"fg":6,"bg":0,"bold":true}],[" 19 ",{"fg":3,"bold":true}],["    ",{}],["public",{"fg":3,"bold":true}],[" Second                                                                                             ",{}],["|",{"inverse":true}],[" 20 ",{"fg":3,"bold":true}],["  .bashrc         ",{}]],"21":[["▼",{"fg":3,"bold":true}],[" ",{}],["functions",{"fg":6,"bold":true}],["         ",{}],["|",{"inverse":true}],["  ",{"fg":6,"bg":0,"bold":true}],[" 20 ",{"fg":3,"bold":true}],["{                                                                                                             ",{}],["|",{"inverse":true}],[" 21 ",{"fg":3,"bold":true}],["  .cshrc          ",{}]],"22":[["    main(int argc, c",{"underline":true}],["|",{"inverse":true}],["  ",{"fg":6,"bg":0,"bold":true}],[" 21 ",{"fg":3,"bold":true}],["    ",{}],["// 基类First的虚方法",{"fg":6,"bold":true}],["                                                                                      ",{}],["|",{"inverse":true}],[" 22 ",{"fg":3,"bold":true}],["  .dmrc           ",{}]],"23":[["~                   ",{"fg":4,"bold":true}],["|",{"inverse":true}],["  ",{"fg":6,"bg":0,"bold":true}],[" 22 ",{"fg":3,"bold":true}],["    ",{}],["virtual",{"fg":2,"bold":true}],[" ",{}],["void",{"fg":2,"bold":true}],[" FirstRun(",{}],["void",{"fg":2,"bold":true}],[")                                                                               ",{}],["|",{"inverse":true}],[" 23 ",{"fg":3,"bold":true}],["  .esd_auth       ",{}]],"24":[["~                   ",{"fg":4,"bold":true}],["|",{"inverse":true}],["  ",{"fg":6,"bg":0,"bold":true}],[" 23 ",{"fg":3,"bold":true}],["    {                                                                                                         ",{}],["|",{"inverse":true}],[" 24 ",{"fg":3,"bold":true}],["  .gtkrc-2.0      ",{}]],"25":[["~                   ",{"fg":4,"bold":true}],["|",{"inverse":true}],["  ",{"fg":6,"bg":0,"bold":true}],[" 24 ",{"fg":3,"bold":true}],["    ",{}],["|",{"fg":2,"bold":true}],["   cout << ",{}],["\"First\"",{"fg":5,"bold":true}],[" << endl;                                                                              ",{}],["|",{"inverse":true}],[" 25 ",{"fg":3,"bold":true}],["  .gtkrc-2.0-kde4 ",{}]],"26":[["~                   ",{"fg":4,"bold":true}],["|",{"inverse":true}],["  ",{"fg":6,"bg":0,"bold":true}],[" 25 ",{"fg":3,"bold":true}],["    }                                                                                                         ",{}],["|",{"inverse":true}],[" 26 ",{"fg":3,"bold":true}],["  .lesshst        ",{}]],"27":[["~                   ",{"fg":4,"bold":true}],["|",{"inverse":true}],["  ",{"fg":6,"bg":0,"bold":true}],[" 26 ",{"fg":3,"bold":true}],["                                                                                                              ",{}],["|",{"inverse":true}],[" 27 ",{"fg":3,"bold":true}],["  .tcshrc         ",{}]],"28":[["~                   ",{"fg":4,"bold":true}],["|",{"inverse":true}],["  ",{"fg":6,"bg":0,"bold":true}],[" 27 ",{"fg":3,"bold":true}],["    ",{}],["virtual",{"fg":2,"bold":true}],[" ",{}],["void",{"fg":2,"bold":true}],[" FirstRun2(",{}],["void",{"fg":2,"bold":true}],[")                                                                              ",{}],["|",{"inverse":true}],[" 28 ",{"fg":3,"bold":true}],["  .viminfo        ",{}]],"29":[["~                   ",{"fg":4,"bold":true}],["|",{"inverse":true}],["  ",{"fg":6,"bg":0,"bold":true}],[" 28 ",{"fg":3,"bold":true}],["    {                                                                                                         ",{}],["|",{"inverse":true}],[" 29 ",{"fg":3,"bold":true}],["  .vimrc          ",{}]],"30":[["~                   ",{"fg":4,"bold":true}],["|",{"inverse":true}],["  ",{"fg":6,"bg":0,"bold":true}],[" 29 ",{"fg":3,"bold":true}],["    ",{}],["|",{"fg":2,"bold":true}],["   cout << ",{}],["\"First2\"",{"fg":5,"bold":true}],[" << endl;                                                                             ",{}],["|",{"inverse":true}],[" 30 ",{"fg":3,"bold":true}],["  .xsession-errors",{}]],"31":[["~                   ",{"fg":4,"bold":true}],["|",{"inverse":true}],["  ",{"fg":6,"bg":0,"bold":true}],[" 30 ",{"fg":3,"bold":true}],["    }                                                                                                         ",{}],["|",{"inverse":true}],[" 31 ",{"fg":3,"bold":true}],["  anaconda-ks.cfg ",{}]],"32":[["~                   ",{"fg":4,"bold":true}],["|",{"inverse":true}],["  ",{"fg":6,"bg":0,"bold":true}],[" 31 ",{"fg":3,"bold":true}],["                                                                                                              ",{}],["|",{"inverse":true}],[" 32 ",{"fg":3,"bold":true}],["  initial-setup-ks",{}]],"33":[["~                   ",{"fg":4,"bold":true}],["|",{"inverse":true}],["  ",{"fg":6,"bg":0,"bold":true}],[" 32 ",{"fg":3,"bold":true}],["    ",{}],["// 基类Second虚方法",{"fg":6,"bold":true}],["                                                                                       ",{}],["|",{"inverse":true}],[" 33 ",{"fg":3,"bold":true}],["  test.c          ",{}]],"34":[["~                   ",{"fg":4,"bold":true}],["|",{"inverse":true}],["  ",{"fg":6,"bg":0,"bold":true}],[" 33 ",{"fg":3,"bold":true}],["    ",{}],["virtual",{"fg":2,"bold":true}],[" ",{}],["void",{"fg":2,"bold":true}],[" SecondRun(",{}],["void",{"fg":2,"bold":true}],[")                                                                              ",{}],["|",{"inverse":true}],[" 34 ",{"fg":3,"bold":true}],["  test.cpp        ",{}]],"35":[["~                   ",{"fg":4,"bold":true}],["|",{"inverse":true}],["  ",{"fg":6,"bg":0,"bold":true}],[" 34 ",{"fg":3,"bold":true}],["    {                                                                                                         ",{}],["|",{"inverse":true}],[" 35 ",{"fg":3,"bold":true}],["  .test.cpp.swp   ",{}]],"36":[["~                   ",{"fg":4,"bold":true}],["|",{"inverse":true}],["  ",{"fg":6,"bg":0,"bold":true}],[" 35 ",{"fg":3,"bold":true}],["    ",{}],["|",{"fg":2,"bold":true}],["   cout <<",{}],["\"Second\"",{"fg":5,"bold":true}],[" << endl;                                                                              ",{}],["|",{"inverse":true}],["~                     ",{"fg":4,"bold":true}]],"37":[["~                   ",{"fg":4,"bold":true}],["|",{"inverse":true}],["  ",{"fg":6,"bg":0,"bold":true}],[" 36 ",{"fg":3,"bold":true}],["    }                                                                                                         ",{}],["|",{"inverse":true}],["~                     ",{"fg":4,"bold":true}]],"38":[["~                   ",{"fg":4,"bold":true}],["|",{"inverse":true}],["  ",{"fg":6,"bg":0,"bold":true}],[" 37 ",{"fg":3,"bold":true}],["                                                                                                              ",{}],["|",{"inverse":true}],["~                     ",{"fg":4,"bold":true}]],"39":[["~                   ",{"fg":4,"bold":true}],["|",{"inverse":true}],["  ",{"fg":6,"bg":0,"bold":true}],[" 38 ",{"fg":3,"bold":true}],["    ",{}],["virtual",{"fg":2,"bold":true}],[" ",{}],["void",{"fg":2,"bold":true}],[" SecondRun2(",{}],["void",{"fg":2,"bold":true}],[")                                                                             ",{}],["|",{"inverse":true}],["~                     ",{"fg":4,"bold":true}]],"40":[["~                   ",{"fg":4,"bold":true}],["|",{"inverse":true}],["  ",{"fg":6,"bg":0,"bold":true}],[" 39 ",{"fg":3,"bold":true}],["    {                                                                                                         ",{}],["|",{"inverse":true}],["~                     ",{"fg":4,"bold":true}]],"41":[["~                   ",{"fg":4,"bold":true}],["|",{"inverse":true}],["  ",{"fg":6,"bg":0,"bold":true}],[" 40 ",{"fg":3,"bold":true}],["    ",{}],["|",{"fg":2,"bold":true}],["   cout <<",{}],["\"Second2\"",{"fg":5,"bold":true}],[" << endl;                                                                             ",{}],["|",{"inverse":true}],["~                     ",{"fg":4,"bold":true}]],"42":[["~                   ",{"fg":4,"bold":true}],["|",{"inverse":true}],["  ",{"fg":6,"bg":0,"bold":true}],[" 41 ",{"fg":3,"bold":true}],["    }                                                                                                         ",{}],["|",{"inverse":true}],["~                     ",{"fg":4,"bold":true}]],"43":[["~                   ",{"fg":4,"bold":true}],["|",{"inverse":true}],["  ",{"fg":6,"bg":0,"bold":true}],[" 42 ",{"fg":3,"bold":true}],["                                                                                                              ",{}],["|",{"inverse":true}],["~                     ",{"fg":4,"bold":true}]],"44":[["~                   ",{"fg":4,"bold":true}],["|",{"inverse":true}],["  ",{"fg":6,"bg":0,"bold":true}],[" 43 ",{"fg":3,"bold":true}],["    ",{}],["virtual",{"fg":2,"bold":true}],[" ~Last()                                                                                           ",{}],["|",{"inverse":true}],["~                     ",{"fg":4,"bold":true}]],"45":[["~                   ",{"fg":4,"bold":true}],["|",{"inverse":true}],["  ",{"fg":6,"bg":0,"bold":true}],[" 44 ",{"fg":3,"bold":true}],["    {                                                                                                         ",{}],["|",{"inverse":true}],["~                     ",{"fg":4,"bold":true}]],"47":[["rd> ",{"fg":6,"bold":true}],["calendar.t",{}],["_",{"fg":6,"bold":true}],["                                                                                                                                                 ",{}]]},"cursor":{"x":0,"y":0,"visible":true}}],[0.262754,{"lines":{"0":[["> .vim/bundle/calendar-vim/doc/",{"underline":true}],["calendar.tx",{"fg":6,"bold":true}],["t                                                                                                                     ",{"underline":true}]]},"cursor":{"x":42,"visible":false}}],[0.001812,{"lines":{"47":[["rd> ",{"fg":6,"bold":true}],["calendar.tx",{}],["_",{"fg":6,"bold":true}],["                                                                                                                                                ",{}]]},"cursor":{"x":0,"visible":true}}],[0.133875,{"lines":{"0":[["> .vim/bundle/calendar-vim/doc/",{"underline":true}],["calendar.txt",{"fg":6,"bold":true}],["                                                                                                                     ",{"underline":true}]]},"cursor":{"x":43,"visible":false}}],[0.001159,{"lines":{"47":[["rd> ",{"fg":6,"bold":true}],["calendar.txt",{}],["_",{"fg":6,"bold":true}],["                                                                                                                                               ",{}]]},"cursor":{"x":0,"visible":true}}],[1.488942,{"lines":{"47":[["                                                                                                                                                                ",{}]]},"cursor":{"y":47,"visible":false}}],[0.116268,{"lines":{"47":[["\"calendar.txt\"                                                                                                                                                  ",{}]]},"cursor":{"x":14}}],[0.016419,{"lines":{"47":[["\"calendar.txt\" 220L, 9247C                                                                                                                                      ",{}]]},"cursor":{"x":26}}],[0.034324,{"lines":{"0":[["\" Press <F1> for hel",{"fg":6,"bold":true}],["|",{"inverse":true}],["  1 ",{"fg":3,"bold":true}],["*calendar.txt* Calendar utility for vim                                                                         ",{"underline":true}],["|",{"inverse":true}],["                      ",{"underline":true}]],"1":[["                    ",{}],["|",{"inverse":true}],["  2 ",{"fg":3,"bold":true}],["                                                                                                                ",{}],["|",{"inverse":true}],["        prt │ file  ~ ",{}]],"2":[["▼",{"fg":3,"bold":true}],[" First",{"fg":5,"bold":true}],[" : ",{}],["struct",{"fg":2,"bold":true}],["    ",{}],["|",{"inverse":true}],["  3 ",{"fg":3,"bold":true}],["Author:  Yasuhiro Matsumoto <mattn.jp@gmai",{}],["                                                                      ",{"underline":true}],["|",{"inverse":true}],["  2 ",{"fg":3,"bold":true}],["                  ",{}]],"3":[["    [prototypes]",{"fg":6,"bold":true}],["    ",{}],["|",{"inverse":true}],["  ",{"fg":6,"bg":0,"bold":true}],["  2 ",{"fg":3,"bold":true}],["#include ",{"fg":4,"bold":true}],["<vector>",{"fg":5,"bold":true}],["                                                                                             ",{}],["|",{"inverse":true}],["  3 ",{"fg":3,"bold":true}],[".. (up a dir)",{"fg":6,"bold":true}],["     ",{}]],"4":[["   ",{}],["+",{"fg":2,"bold":true}],["FirstRun(void)  ",{}],["|",{"inverse":true}],["  ",{"fg":6,"bg":0,"bold":true}],["  3 ",{"fg":3,"bold":true}],["                                                                                                              ",{}],["|",{"inverse":true}],["  4 /root/",{"fg":3,"bold":true}],["            ",{}]],"5":[["   ",{}],["+",{"fg":2,"bold":true}],["FirstRun2(void) ",{}],["|",{"inverse":true}],["  ",{"fg":6,"bg":0,"bold":true}],["  4 using",{"fg":3,"bold":true}],[" ",{}],["namespace",{"fg":2,"bold":true}],[" std;                                                                                          ",{}],["|",{"inverse":true}],["  5 ",{"fg":3,"bold":true}],["▸ .asciinema/",{"fg":6,"bold":true}],["     ",{}]],"6":[["                    ",{}],["|",{"inverse":true}],["  ",{"fg":6,"bg":0,"bold":true}],["  5 ",{"fg":3,"bold":true}],["                                                                                                              ",{}],["|",{"inverse":true}],["  6 ",{"fg":3,"bold":true}],["▸ .cache/",{"fg":6,"bold":true}],["         ",{}]],"7":[["▼",{"fg":3,"bold":true}],[" Last",{"fg":5,"bold":true}],[" : ",{}],["struct",{"fg":2,"bold":true}],["     ",{}],["|",{"inverse":true}],["  ",{"fg":6,"bg":0,"bold":true}],["  6 ",{"fg":3,"bold":true}],["struct",{"fg":2,"bold":true}],[" First                                                                                                  ",{}],["|",{"inverse":true}],["  7 ",{"fg":3,"bold":true}],["▸ .config/",{"fg":6,"bold":true}],["        ",{}]],"8":[["    [functions]",{"fg":6,"bold":true}],["     ",{}],["|",{"inverse":true}],["  ",{"fg":6,"bg":0,"bold":true}],["  7 ",{"fg":3,"bold":true}],["{                                                                                                             ",{}],["|",{"inverse":true}],["  8 ",{"fg":3,"bold":true}],["▸ .dbus/",{"fg":6,"bold":true}],["          ",{}]],"9":[["   ",{}],["+",{"fg":2,"bold":true}],["FirstRun(void)  ",{}],["|",{"inverse":true}],["  ",{"fg":6,"bg":0,"bold":true}],["  8 ",{"fg":3,"bold":true}],["    ",{}],["virtual",{"fg":2,"bold":true}],[" ",{}],["void",{"fg":2,"bold":true}],[" FirstRun(",{}],["void",{"fg":2,"bold":true}],[") = ",{}],["0",{"fg":5,"bold":true}],[";                                                                          ",{}],["|",{"inverse":true}],["  9 ",{"fg":3,"bold":true}],["▸ .gnupg/",{"fg":6,"bold":true}],["         ",{}]],"10":[["   ",{}],["+",{"fg":2,"bold":true}],["FirstRun2(void) ",{}],["|",{"inverse":true}],["  ",{"fg":6,"bg":0,"bold":true}],["  9 ",{"fg":3,"bold":true}],["    ",{}],["virtual",{"fg":2,"bold":true}],[" ",{}],["void",{"fg":2,"bold":true}],[" FirstRun2(",{}],["void",{"fg":2,"bold":true}],[") = ",{}],["0",{"fg":5,"bold":true}],[";                                                                         ",{}],["|",{"inverse":true}],[" 10 ",{"fg":3,"bold":true}],["▸ .kde/",{"fg":6,"bold":true}],["           ",{}]],"11":[["   ",{}],["+",{"fg":2,"bold":true}],["~Last()         ",{}],["|",{"inverse":true}],["  ",{"fg":6,"bg":0,"bold":true}],[" 10 ",{"fg":3,"bold":true}],["};                                                                                                            ",{}],["|",{"inverse":true}],[" 11 ",{"fg":3,"bold":true}],["▸ .local/",{"fg":6,"bold":true}],["         ",{}]],"12":[["   ",{}],["+",{"fg":2,"bold":true}],["SecondRun(void) ",{}],["|",{"inverse":true}],["  ",{"fg":6,"bg":0,"bold":true}],[" 11 ",{"fg":3,"bold":true}],["                                                                                                              ",{}],["|",{"inverse":true}],[" 12 ",{"fg":3,"bold":true}],["▸ .pki/",{"fg":6,"bold":true}],["           ",{}]],"13":[["   ",{}],["+",{"fg":2,"bold":true}],["SecondRun2(void)",{}],["|",{"inverse":true}],["  ",{"fg":6,"bg":0,"bold":true}],[" 12 ",{"fg":3,"bold":true}],["struct",{"fg":2,"bold":true}],[" Second                                                                                                 ",{}],["|",{"inverse":true}],[" 13 ",{"fg":3,"bold":true}],["▸ .ssh/",{"fg":6,"bold":true}],["           ",{}]],"14":[["                    ",{}],["|",{"inverse":true}],["  ",{"fg":6,"bg":0,"bold":true}],[" 13 ",{"fg":3,"bold":true}],["{                                                                                                             ",{}],["|",{"inverse":true}],[" 14 ",{"fg":3,"bold":true}],["▸ .vim/",{"fg":6,"bold":true}],["           ",{}]],"15":[["▼",{"fg":3,"bold":true}],[" Second",{"fg":5,"bold":true}],[" : ",{}],["struct",{"fg":2,"bold":true}],["   ",{}],["|",{"inverse":true}],["  ",{"fg":6,"bg":0,"bold":true}],[" 14 ",{"fg":3,"bold":true}],["    ",{}],["virtual",{"fg":2,"bold":true}],[" ",{}],["void",{"fg":2,"bold":true}],[" SecondRun(",{}],["void",{"fg":2,"bold":true}],[") = ",{}],["0",{"fg":5,"bold":true}],[";                                                                         ",{}],["|",{"inverse":true}],[" 15 ",{"fg":3,"bold":true}],["▸ diary/",{"fg":6,"bold":true}],["          ",{}]],"16":[["    [prototypes]",{"fg":6,"bold":true}],["    ",{}],["|",{"inverse":true}],["  ",{"fg":6,"bg":0,"bold":true}],[" 15 ",{"fg":3,"bold":true}],["    ",{}],["virtual",{"fg":2,"bold":true}],[" ",{}],["void",{"fg":2,"bold":true}],[" SecondRun2(",{}],["void",{"fg":2,"bold":true}],[") = ",{}],["0",{"fg":5,"bold":true}],[";                                                                        ",{}],["|",{"inverse":true}],[" 16 ",{"fg":3,"bold":true}],["▸ temp/",{"fg":6,"bold":true}],["           ",{}]],"17":[["   ",{}],["+",{"fg":2,"bold":true}],["SecondRun(void) ",{}],["|",{"inverse":true}],["  ",{"fg":6,"bg":0,"bold":true}],[" 16 ",{"fg":3,"bold":true}],["};                                                                                                            ",{}],["|",{"inverse":true}],[" 17 ",{"fg":3,"bold":true}],["  .bash_history   ",{}]],"18":[["   ",{}],["+",{"fg":2,"bold":true}],["SecondRun2(void)",{}],["|",{"inverse":true}],["  ",{"fg":6,"bg":0,"bold":true}],[" 17 ",{"fg":3,"bold":true}],["                                                                                                              ",{}],["|",{"inverse":true}],[" 18 ",{"fg":3,"bold":true}],["  .bash_logout    ",{}]],"19":[["                    ",{}],["|",{"inverse":true}],["  ",{"fg":6,"bg":0,"bold":true}],[" 18 ",{"fg":3,"bold":true}],["struct",{"fg":2,"bold":true}],[" Last: ",{}],["public",{"fg":3,"bold":true}],[" First,                                                                                    ",{}],["|",{"inverse":true}],[" 19 ",{"fg":3,"bold":true}],["  .bash_profile   ",{"underline":true}]],"20":[["▼",{"fg":3,"bold":true}],[" ",{}],["functions",{"fg":6,"bold":true}],["         ",{}],["|",{"inverse":true}],["  ",{"fg":6,"bg":0,"bold":true}],[" 19 ",{"fg":3,"bold":true}],["    ",{}],["public",{"fg":3,"bold":true}],[" Second                                                                                             ",{}],["|",{"inverse":true}],[" 20 ",{"fg":3,"bold":true}],["  .bashrc         ",{}]],"21":[["    main(int argc, c",{"underline":true}],["|",{"inverse":true}],["  ",{"fg":6,"bg":0,"bold":true}],[" 20 ",{"fg":3,"bold":true}],["{                                                                                                             ",{}],["|",{"inverse":true}],[" 21 ",{"fg":3,"bold":true}],["  .cshrc          ",{}]],"22":[["~                   ",{"fg":4,"bold":true}],["|",{"inverse":true}],["  ",{"fg":6,"bg":0,"bold":true}],[" 21 ",{"fg":3,"bold":true}],["    ",{}],["// 基类First的虚方法",{"fg":6,"bold":true}],["                                                                                      ",{}],["|",{"inverse":true}],[" 22 ",{"fg":3,"bold":true}],["  .dmrc           ",{}]]},"cursor":{"x":67,"y":2}}],[0.01425,{"lines":{"2":[["▼",{"fg":3,"bold":true}],[" First",{"fg":5,"bold":true}],[" : ",{}],["struct",{"fg":2,"bold":true}],["    ",{}],["|",{"inverse":true}],["  3 ",{"fg":3,"bold":true}],["Author:  Yasuhiro Matsumoto <mattn.jp@gmail.com>                                                                ",{}],["|",{"inverse":true}],["  2 ",{"fg":3,"bold":true}],["                  ",{}]],"3":[["    [prototypes]",{"fg":6,"bold":true}],["    ",{}],["|",{"inverse":true}],["  4 ",{"fg":3,"bold":true}],["                                                                                                                ",{}],["|",{"inverse":true}],["  3 ",{"fg":3,"bold":true}],[".. (up a dir)",{"fg":6,"bold":true}],["     ",{}]],"4":[["   ",{}],["+",{"fg":2,"bold":true}],["FirstRun(void)  ",{}],["|",{"inverse":true}],["  5 ",{"fg":3,"bold":true}],["INTRODUCTION                                    *calendar*                                                      ",{}],["|",{"inverse":true}],["  4 /root/",{"fg":3,"bold":true}],["            ",{}]],"5":[["   ",{}],["+",{"fg":2,"bold":true}],["FirstRun2(void) ",{}],["|",{"inverse":true}],["  6 ",{"fg":3,"bold":true}],["                                                                                                                ",{}],["|",{"inverse":true}],["  5 ",{"fg":3,"bold":true}],["▸ .asciinema/",{"fg":6,"bold":true}],["     ",{}]],"6":[["                    ",{}],["|",{"inverse":true}],["  7 ",{"fg":3,"bold":true}],["This script creates a calendar window in vim.  It does not rely on any                                          ",{}],["|",{"inverse":true}],["  6 ",{"fg":3,"bold":true}],["▸ .cache/",{"fg":6,"bold":true}],["         ",{}]],"7":[["▼",{"fg":3,"bold":true}],[" Last",{"fg":5,"bold":true}],[" : ",{}],["struct",{"fg":2,"bold":true}],["     ",{}],["|",{"inverse":true}],["  8 ",{"fg":3,"bold":true}],["external program, such as cal, etc.                                                                             ",{}],["|",{"inverse":true}],["  7 ",{"fg":3,"bold":true}],["▸ .config/",{"fg":6,"bold":true}],["        ",{}]],"8":[["    [functions]",{"fg":6,"bold":true}],["     ",{}],["|",{"inverse":true}],["  9 ",{"fg":3,"bold":true}],["                                                                                                                ",{}],["|",{"inverse":true}],["  8 ",{"fg":3,"bold":true}],["▸ .dbus/",{"fg":6,"bold":true}],["          ",{}]],"9":[["   ",{}],["+",{"fg":2,"bold":true}],["FirstRun(void)  ",{}],["|",{"inverse":true}],[" 10 ",{"fg":3,"bold":true}],["COMMANDS                                        *calendar-commands*                                             ",{}],["|",{"inverse":true}],["  9 ",{"fg":3,"bold":true}],["▸ .gnupg/",{"fg":6,"bold":true}],["         ",{}]],"10":[["   ",{}],["+",{"fg":2,"bold":true}],["FirstRun2(void) ",{}],["|",{"inverse":true}],[" 11 ",{"fg":3,"bold":true}],["                                                                                                                ",{}],["|",{"inverse":true}],[" 10 ",{"fg":3,"bold":true}],["▸ .kde/",{"fg":6,"bold":true}],["           ",{}]],"11":[["   ",{}],["+",{"fg":2,"bold":true}],["~Last()         ",{}],["|",{"inverse":true}],[" 12 ",{"fg":3,"bold":true}],["calendar.vim makes the following commands available:                                                            ",{}],["|",{"inverse":true}],[" 11 ",{"fg":3,"bold":true}],["▸ .local/",{"fg":6,"bold":true}],["         ",{}]],"12":[["   ",{}],["+",{"fg":2,"bold":true}],["SecondRun(void) ",{}],["|",{"inverse":true}],[" 13 ",{"fg":3,"bold":true}],["                                                                                                                ",{}],["|",{"inverse":true}],[" 12 ",{"fg":3,"bold":true}],["▸ .pki/",{"fg":6,"bold":true}],["           ",{}]],"13":[["   ",{}],["+",{"fg":2,"bold":true}],["SecondRun2(void)",{}],["|",{"inverse":true}],[" 14 ",{"fg":3,"bold":true}],["    ",{}],["|",{"fg":2,"bold":true}],["   ",{}],["|",{"fg":2,"bold":true}],["   ",{}],["|",{"fg":2,"bold":true}],["   ",{}],["|",{"fg":2,"bold":true}],["   ",{}],["|",{"fg":2,"bold":true}],["   ",{}],["|",{"fg":2,"bold":true}],["   ",{}],["|",{"fg":2,"bold":true}],["   ",{}],["|",{"fg":2,"bold":true}],["   ",{}],["|",{"fg":2,"bold":true}],["   ",{}],["|",{"fg":2,"bold":true}],["       *calendar-:Calendar*                                            ",{}],["|",{"inverse":true}],[" 13 ",{"fg":3,"bold":true}],["▸ .ssh/",{"fg":6,"bold":true}],["           ",{}]],"14":[["                    ",{}],["|",{"inverse":true}],[" 15 ",{"fg":3,"bold":true}],[":Calendar [[year] month]  Show calendar at this year and this month in a                                        ",{}],["|",{"inverse":true}],[" 14 ",{"fg":3,"bold":true}],["▸ .vim/",{"fg":6,"bold":true}],["           ",{}]],"15":[["▼",{"fg":3,"bold":true}],[" Second",{"fg":5,"bold":true}],[" : ",{}],["struct",{"fg":2,"bold":true}],["   ",{}],["|",{"inverse":true}],[" 16 ",{"fg":3,"bold":true}],["    ",{}],["|",{"fg":2,"bold":true}],["   ",{}],["|",{"fg":2,"bold":true}],["   ",{}],["|",{"fg":2,"bold":true}],["   ",{}],["|",{"fg":2,"bold":true}],["   ",{}],["|",{"fg":2,"bold":true}],["   ",{}],["|",{"fg":2,"bold":true}],[" vertical split.  When [year] is omitted, the                                          ",{}],["|",{"inverse":true}],[" 15 ",{"fg":3,"bold":true}],["▸ diary/",{"fg":6,"bold":true}],["          ",{}]],"16":[["    [prototypes]",{"fg":6,"bold":true}],["    ",{}],["|",{"inverse":true}],[" 17 ",{"fg":3,"bold":true}],["    ",{}],["|",{"fg":2,"bold":true}],["   ",{}],["|",{"fg":2,"bold":true}],["   ",{}],["|",{"fg":2,"bold":true}],["   ",{}],["|",{"fg":2,"bold":true}],["   ",{}],["|",{"fg":2,"bold":true}],["   ",{}],["|",{"fg":2,"bold":true}],[" calendar will show the given month in the current                                     ",{}],["|",{"inverse":true}],[" 16 ",{"fg":3,"bold":true}],["▸ temp/",{"fg":6,"bold":true}],["           ",{}]],"17":[["   ",{}],["+",{"fg":2,"bold":true}],["SecondRun(void) ",{}],["|",{"inverse":true}],[" 18 ",{"fg":3,"bold":true}],["    ",{}],["|",{"fg":2,"bold":true}],["   ",{}],["|",{"fg":2,"bold":true}],["   ",{}],["|",{"fg":2,"bold":true}],["   ",{}],["|",{"fg":2,"bold":true}],["   ",{}],["|",{"fg":2,"bold":true}],["   ",{}],["|",{"fg":2,"bold":true}],[" year.  When both [year] and [month] are omitted, the                                  ",{}],["|",{"inverse":true}],[" 17 ",{"fg":3,"bold":true}],["  .bash_history   ",{}]],"18":[["   ",{}],["+",{"fg":2,"bold":true}],["SecondRun2(void)",{}],["|",{"inverse":true}],[" 19 ",{"fg":3,"bold":true}],["    ",{}],["|",{"fg":2,"bold":true}],["   ",{}],["|",{"fg":2,"bold":true}],["   ",{}],["|",{"fg":2,"bold":true}],["   ",{}],["|",{"fg":2,"bold":true}],["   ",{}],["|",{"fg":2,"bold":true}],["   ",{}],["|",{"fg":2,"bold":true}],[" calendar will show the current month.                                                 ",{}],["|",{"inverse":true}],[" 18 ",{"fg":3,"bold":true}],["  .bash_logout    ",{}]],"19":[["                    ",{}],["|",{"inverse":true}],[" 20 ",{"fg":3,"bold":true}],["                                                                                                                ",{}],["|",{"inverse":true}],[" 19 ",{"fg":3,"bold":true}],["  .bash_profile   ",{"underline":true}]],"20":[["▼",{"fg":3,"bold":true}],[" ",{}],["functions",{"fg":6,"bold":true}],["         ",{}],["|",{"inverse":true}],[" 21 ",{"fg":3,"bold":true}],["    ",{}],["|",{"fg":2,"bold":true}],["   ",{}],["|",{"fg":2,"bold":true}],["   ",{}],["|",{"fg":2,"bold":true}],["   ",{}],["|",{"fg":2,"bold":true}],["   ",{}],["|",{"fg":2,"bold":true}],["   ",{}],["|",{"fg":2,"bold":true}],["   ",{}],["|",{"fg":2,"bold":true}],["   ",{}],["|",{"fg":2,"bold":true}],["   ",{}],["|",{"fg":2,"bold":true}],["   ",{}],["|",{"fg":2,"bold":true}],["       *calendar-:CalendarH*                                           ",{}],["|",{"inverse":true}],[" 20 ",{"fg":3,"bold":true}],["  .bashrc         ",{}]],"21":[["    main(int argc, c",{"underline":true}],["|",{"inverse":true}],[" 22 ",{"fg":3,"bold":true}],[":CalendarH [[year] month] Show calendar at this year and this month in a                                        ",{}],["|",{"inverse":true}],[" 21 ",{"fg":3,"bold":true}],["  .cshrc          ",{}]],"22":[["~                   ",{"fg":4,"bold":true}],["|",{"inverse":true}],[" 23 ",{"fg":3,"bold":true}],["    ",{}],["|",{"fg":2,"bold":true}],["   ",{}],["|",{"fg":2,"bold":true}],["   ",{}],["|",{"fg":2,"bold":true}],["   ",{}],["|",{"fg":2,"bold":true}],["   ",{}],["|",{"fg":2,"bold":true}],["   ",{}],["|",{"fg":2,"bold":true}],[" horizontal split.  When [year] is omitted, the                                        ",{}],["|",{"inverse":true}],[" 22 ",{"fg":3,"bold":true}],["  .dmrc           ",{}]],"23":[["~                   ",{"fg":4,"bold":true}],["|",{"inverse":true}],[" 24 ",{"fg":3,"bold":true}],["    ",{}],["|",{"fg":2,"bold":true}],["   ",{}],["|",{"fg":2,"bold":true}],["   ",{}],["|",{"fg":2,"bold":true}],["   ",{}],["|",{"fg":2,"bold":true}],["   ",{}],["|",{"fg":2,"bold":true}],["   ",{}],["|",{"fg":2,"bold":true}],[" calendar will show the given month in the current                                     ",{}],["|",{"inverse":true}],[" 23 ",{"fg":3,"bold":true}],["  .esd_auth       ",{}]],"24":[["~                   ",{"fg":4,"bold":true}],["|",{"inverse":true}],[" 25 ",{"fg":3,"bold":true}],["    ",{}],["|",{"fg":2,"bold":true}],["   ",{}],["|",{"fg":2,"bold":true}],["   ",{}],["|",{"fg":2,"bold":true}],["   ",{}],["|",{"fg":2,"bold":true}],["   ",{}],["|",{"fg":2,"bold":true}],["   ",{}],["|",{"fg":2,"bold":true}],[" year.  When both [year] and [month] are omitted, the                                  ",{}],["|",{"inverse":true}],[" 24 ",{"fg":3,"bold":true}],["  .gtkrc-2.0      ",{}]],"25":[["~                   ",{"fg":4,"bold":true}],["|",{"inverse":true}],[" 26 ",{"fg":3,"bold":true}],["    ",{}],["|",{"fg":2,"bold":true}],["   ",{}],["|",{"fg":2,"bold":true}],["   ",{}],["|",{"fg":2,"bold":true}],["   ",{}],["|",{"fg":2,"bold":true}],["   ",{}],["|",{"fg":2,"bold":true}],["   ",{}],["|",{"fg":2,"bold":true}],[" calendar will show the current month.                                                 ",{}],["|",{"inverse":true}],[" 25 ",{"fg":3,"bold":true}],["  .gtkrc-2.0-kde4 ",{}]],"26":[["~                   ",{"fg":4,"bold":true}],["|",{"inverse":true}],[" 27 ",{"fg":3,"bold":true}],["                                                                                                                ",{}],["|",{"inverse":true}],[" 26 ",{"fg":3,"bold":true}],["  .lesshst        ",{}]],"27":[["~                   ",{"fg":4,"bold":true}],["|",{"inverse":true}],[" 28 ",{"fg":3,"bold":true}],["    ",{}],["|",{"fg":2,"bold":true}],["   ",{}],["|",{"fg":2,"bold":true}],["   ",{}],["|",{"fg":2,"bold":true}],["   ",{}],["|",{"fg":2,"bold":true}],["   ",{}],["|",{"fg":2,"bold":true}],["   ",{}],["|",{"fg":2,"bold":true}],["   ",{}],["|",{"fg":2,"bold":true}],["   ",{}],["|",{"fg":2,"bold":true}],["   ",{}],["|",{"fg":2,"bold":true}],["   ",{}],["|",{"fg":2,"bold":true}],["       *calendar-:CalendarT*                                           ",{}],["|",{"inverse":true}],[" 27 ",{"fg":3,"bold":true}],["  .tcshrc         ",{}]],"28":[["~                   ",{"fg":4,"bold":true}],["|",{"inverse":true}],[" 29 ",{"fg":3,"bold":true}],[":CalendarT [[year] morstRun2(",{}],["void",{"fg":2,"bold":true}],[")                                                                              ",{}],["|",{"inverse":true}],[" 28 ",{"fg":3,"bold":true}],["  .viminfo        ",{}]]},"cursor":{"x":46,"y":28}}],[0.013649,{"lines":{"28":[["~                   ",{"fg":4,"bold":true}],["|",{"inverse":true}],[" 29 ",{"fg":3,"bold":true}],[":CalendarT [[year] month] Show calendar at this year and this month in a                                        ",{}],["|",{"inverse":true}],[" 28 ",{"fg":3,"bold":true}],["  .viminfo        ",{}]],"29":[["~                   ",{"fg":4,"bold":true}],["|",{"inverse":true}],[" 30 ",{"fg":3,"bold":true}],["    ",{}],["|",{"fg":2,"bold":true}],["   ",{}],["|",{"fg":2,"bold":true}],["   ",{}],["|",{"fg":2,"bold":true}],["   ",{}],["|",{"fg":2,"bold":true}],["   ",{}],["|",{"fg":2,"bold":true}],["   ",{}],["|",{"fg":2,"bold":true}],[" full-screen window.  When [year] is omitted, the                                      ",{}],["|",{"inverse":true}],[" 29 ",{"fg":3,"bold":true}],["  .vimrc          ",{}]],"30":[["~                   ",{"fg":4,"bold":true}],["|",{"inverse":true}],[" 31 ",{"fg":3,"bold":true}],["    ",{}],["|",{"fg":2,"bold":true}],["   ",{}],["|",{"fg":2,"bold":true}],["   ",{}],["|",{"fg":2,"bold":true}],["   ",{}],["|",{"fg":2,"bold":true}],["   ",{}],["|",{"fg":2,"bold":true}],["   ",{}],["|",{"fg":2,"bold":true}],[" calendar will show the given month in the current                                     ",{}],["|",{"inverse":true}],[" 30 ",{"fg":3,"bold":true}],["  .xsession-errors",{}]],"31":[["~                   ",{"fg":4,"bold":true}],["|",{"inverse":true}],[" 32 ",{"fg":3,"bold":true}],["    ",{}],["|",{"fg":2,"bold":true}],["   ",{}],["|",{"fg":2,"bold":true}],["   ",{}],["|",{"fg":2,"bold":true}],["   ",{}],["|",{"fg":2,"bold":true}],["   ",{}],["|",{"fg":2,"bold":true}],["   ",{}],["|",{"fg":2,"bold":true}],[" year.  When both [year] and [month] are omitted, the                                  ",{}],["|",{"inverse":true}],[" 31 ",{"fg":3,"bold":true}],["  anaconda-ks.cfg ",{}]],"32":[["~                   ",{"fg":4,"bold":true}],["|",{"inverse":true}],[" 33 ",{"fg":3,"bold":true}],["    ",{}],["|",{"fg":2,"bold":true}],["   ",{}],["|",{"fg":2,"bold":true}],["   ",{}],["|",{"fg":2,"bold":true}],["   ",{}],["|",{"fg":2,"bold":true}],["   ",{}],["|",{"fg":2,"bold":true}],["   ",{}],["|",{"fg":2,"bold":true}],[" calendar will show the current month.                                                 ",{}],["|",{"inverse":true}],[" 32 ",{"fg":3,"bold":true}],["  initial-setup-ks",{}]],"33":[["~                   ",{"fg":4,"bold":true}],["|",{"inverse":true}],[" 34 ",{"fg":3,"bold":true}],["                                                                                                                ",{}],["|",{"inverse":true}],[" 33 ",{"fg":3,"bold":true}],["  test.c          ",{}]],"34":[["~                   ",{"fg":4,"bold":true}],["|",{"inverse":true}],[" 35 ",{"fg":3,"bold":true}],["    ",{}],["|",{"fg":2,"bold":true}],["   ",{}],["|",{"fg":2,"bold":true}],["   ",{}],["|",{"fg":2,"bold":true}],["   ",{}],["|",{"fg":2,"bold":true}],["   ",{}],["|",{"fg":2,"bold":true}],["   ",{}],["|",{"fg":2,"bold":true}],["   ",{}],["|",{"fg":2,"bold":true}],["   ",{}],["|",{"fg":2,"bold":true}],["   ",{}],["|",{"fg":2,"bold":true}],["   ",{}],["|",{"fg":2,"bold":true}],["       *calendar-:CalendarVR*                                          ",{}],["|",{"inverse":true}],[" 34 ",{"fg":3,"bold":true}],["  test.cpp        ",{}]],"35":[["~                   ",{"fg":4,"bold":true}],["|",{"inverse":true}],[" 36 ",{"fg":3,"bold":true}],[":CalendarVR [[year] month]  Show calendar at this year and this month in a                                      ",{}],["|",{"inverse":true}],[" 35 ",{"fg":3,"bold":true}],["  .test.cpp.swp   ",{}]],"36":[["~                   ",{"fg":4,"bold":true}],["|",{"inverse":true}],[" 37 ",{"fg":3,"bold":true}],["    ",{}],["|",{"fg":2,"bold":true}],["   ",{}],["|",{"fg":2,"bold":true}],["   ",{}],["|",{"fg":2,"bold":true}],["   ",{}],["|",{"fg":2,"bold":true}],["   ",{}],["|",{"fg":2,"bold":true}],["   ",{}],["|",{"fg":2,"bold":true}],[" vertical split at the right site.  When [year] is                                     ",{}],["|",{"inverse":true}],["~                     ",{"fg":4,"bold":true}]],"37":[["~                   ",{"fg":4,"bold":true}],["|",{"inverse":true}],[" 38 ",{"fg":3,"bold":true}],["    ",{}],["|",{"fg":2,"bold":true}],["   ",{}],["|",{"fg":2,"bold":true}],["   ",{}],["|",{"fg":2,"bold":true}],["   ",{}],["|",{"fg":2,"bold":true}],["   ",{}],["|",{"fg":2,"bold":true}],["   ",{}],["|",{"fg":2,"bold":true}],[" omitted, the calendar will show the given month in                                    ",{}],["|",{"inverse":true}],["~                     ",{"fg":4,"bold":true}]],"38":[["~                   ",{"fg":4,"bold":true}],["|",{"inverse":true}],[" 39 ",{"fg":3,"bold":true}],["    ",{}],["|",{"fg":2,"bold":true}],["   ",{}],["|",{"fg":2,"bold":true}],["   ",{}],["|",{"fg":2,"bold":true}],["   ",{}],["|",{"fg":2,"bold":true}],["   ",{}],["|",{"fg":2,"bold":true}],["   ",{}],["|",{"fg":2,"bold":true}],[" the current year.  When both [year] and [month] are                                   ",{}],["|",{"inverse":true}],["~                     ",{"fg":4,"bold":true}]],"39":[["~                   ",{"fg":4,"bold":true}],["|",{"inverse":true}],[" 40 ",{"fg":3,"bold":true}],["    ",{}],["|",{"fg":2,"bold":true}],["   ",{}],["|",{"fg":2,"bold":true}],["   ",{}],["|",{"fg":2,"bold":true}],["   ",{}],["|",{"fg":2,"bold":true}],["   ",{}],["|",{"fg":2,"bold":true}],["   ",{}],["|",{"fg":2,"bold":true}],[" omitted, the calendar will show the current month.                                    ",{}],["|",{"inverse":true}],["~                     ",{"fg":4,"bold":true}]],"40":[["~                   ",{"fg":4,"bold":true}],["|",{"inverse":true}],[" 41 ",{"fg":3,"bold":true}],["                                                                                                                ",{}],["|",{"inverse":true}],["~                     ",{"fg":4,"bold":true}]],"41":[["~                   ",{"fg":4,"bold":true}],["|",{"inverse":true}],[" 42 ",{"fg":3,"bold":true}],["MAPPINGS                                        *calendar-mappings*                                             ",{}],["|",{"inverse":true}],["~                     ",{"fg":4,"bold":true}]],"42":[["~                   ",{"fg":4,"bold":true}],["|",{"inverse":true}],[" 43 ",{"fg":3,"bold":true}],["                                                                                                                ",{}],["|",{"inverse":true}],["~                     ",{"fg":4,"bold":true}]],"43":[["~                   ",{"fg":4,"bold":true}],["|",{"inverse":true}],[" 44 ",{"fg":3,"bold":true}],["calendar.vim makes the following n                                                                              ",{}],["|",{"inverse":true}],["~                     ",{"fg":4,"bold":true}]]},"cursor":{"x":59,"y":43}}],[0.004316,{"lines":{"0":[["\" Press <F1> for hel",{"fg":6,"bold":true}],["|",{"inverse":true}],["  1 ",{"fg":3,"bold":true}],["*calendar.txt* Calendar utility for vim                                                                         ",{"underline":true}],["|",{"inverse":true}],["  1 ",{"fg":3,"bold":true}],["\" Press ? for help",{"fg":5,"bold":true}]],"1":[["                    ",{}],["|",{"inverse":true}],["  2 ",{"fg":3,"bold":true}],["                                                                                                                ",{}],["|",{"inverse":true}],["  2 ",{"fg":3,"bold":true}],["                  ",{}]],"2":[["▼",{"fg":3,"bold":true}],[" First",{"fg":5,"bold":true}],[" : ",{}],["struct",{"fg":2,"bold":true}],["    ",{}],["|",{"inverse":true}],["  3 ",{"fg":3,"bold":true}],["Author:  Yasuhiro Matsumoto <mattn.jp@gmail.com>                                                                ",{}],["|",{"inverse":true}],["  3 ",{"fg":3,"bold":true}],[".. (up a dir)",{"fg":6,"bold":true}],["     ",{}]],"3":[["    [prototypes]",{"fg":6,"bold":true}],["    ",{}],["|",{"inverse":true}],["  4 ",{"fg":3,"bold":true}],["                                                                                                                ",{}],["|",{"inverse":true}],["  4 /root/",{"fg":3,"bold":true}],["            ",{}]],"4":[["   ",{}],["+",{"fg":2,"bold":true}],["FirstRun(void)  ",{}],["|",{"inverse":true}],["  5 ",{"fg":3,"bold":true}],["INTRODUCTION                                    *calendar*                                                      ",{}],["|",{"inverse":true}],["  5 ",{"fg":3,"bold":true}],["▸ .asciinema/",{"fg":6,"bold":true}],["     ",{}]],"5":[["   ",{}],["+",{"fg":2,"bold":true}],["FirstRun2(void) ",{}],["|",{"inverse":true}],["  6 ",{"fg":3,"bold":true}],["                                                                                                                ",{}],["|",{"inverse":true}],["  6 ",{"fg":3,"bold":true}],["▸ .cache/",{"fg":6,"bold":true}],["         ",{}]],"6":[["                    ",{}],["|",{"inverse":true}],["  7 ",{"fg":3,"bold":true}],["This script creates a calendar window in vim.  It does not rely on any                                          ",{}],["|",{"inverse":true}],["  7 ",{"fg":3,"bold":true}],["▸ .config/",{"fg":6,"bold":true}],["        ",{}]],"7":[["▼",{"fg":3,"bold":true}],[" Last",{"fg":5,"bold":true}],[" : ",{}],["struct",{"fg":2,"bold":true}],["     ",{}],["|",{"inverse":true}],["  8 ",{"fg":3,"bold":true}],["external program, such as cal, etc.                                                                             ",{}],["|",{"inverse":true}],["  8 ",{"fg":3,"bold":true}],["▸ .dbus/",{"fg":6,"bold":true}],["          ",{}]],"8":[["    [functions]",{"fg":6,"bold":true}],["     ",{}],["|",{"inverse":true}],["  9 ",{"fg":3,"bold":true}],["                                                                                                                ",{}],["|",{"inverse":true}],["  9 ",{"fg":3,"bold":true}],["▸ .gnupg/",{"fg":6,"bold":true}],["         ",{}]],"9":[["   ",{}],["+",{"fg":2,"bold":true}],["FirstRun(void)  ",{}],["|",{"inverse":true}],[" 10 ",{"fg":3,"bold":true}],["COMMANDS                                        *calendar-commands*                                             ",{}],["|",{"inverse":true}],[" 10 ",{"fg":3,"bold":true}],["▸ .kde/",{"fg":6,"bold":true}],["           ",{}]],"10":[["   ",{}],["+",{"fg":2,"bold":true}],["FirstRun2(void) ",{}],["|",{"inverse":true}],[" 11 ",{"fg":3,"bold":true}],["                                                                                                                ",{}],["|",{"inverse":true}],[" 11 ",{"fg":3,"bold":true}],["▸ .local/",{"fg":6,"bold":true}],["         ",{}]],"11":[["   ",{}],["+",{"fg":2,"bold":true}],["~Last()         ",{}],["|",{"inverse":true}],[" 12 ",{"fg":3,"bold":true}],["calendar.vim makes the following commands available:                                                            ",{}],["|",{"inverse":true}],[" 12 ",{"fg":3,"bold":true}],["▸ .pki/",{"fg":6,"bold":true}],["           ",{}]],"12":[["   ",{}],["+",{"fg":2,"bold":true}],["SecondRun(void) ",{}],["|",{"inverse":true}],[" 13 ",{"fg":3,"bold":true}],["                                                                                                                ",{}],["|",{"inverse":true}],[" 13 ",{"fg":3,"bold":true}],["▸ .ssh/",{"fg":6,"bold":true}],["           ",{}]],"13":[["   ",{}],["+",{"fg":2,"bold":true}],["SecondRun2(void)",{}],["|",{"inverse":true}],[" 14 ",{"fg":3,"bold":true}],["    ",{}],["|",{"fg":2,"bold":true}],["   ",{}],["|",{"fg":2,"bold":true}],["   ",{}],["|",{"fg":2,"bold":true}],["   ",{}],["|",{"fg":2,"bold":true}],["   ",{}],["|",{"fg":2,"bold":true}],["   ",{}],["|",{"fg":2,"bold":true}],["   ",{}],["|",{"fg":2,"bold":true}],["   ",{}],["|",{"fg":2,"bold":true}],["   ",{}],["|",{"fg":2,"bold":true}],["   ",{}],["|",{"fg":2,"bold":true}],["       *calendar-:Calendar*                                            ",{}],["|",{"inverse":true}],[" 14 ",{"fg":3,"bold":true}],["▸ .vim/",{"fg":6,"bold":true}],["           ",{}]],"14":[["                    ",{}],["|",{"inverse":true}],[" 15 ",{"fg":3,"bold":true}],[":Calendar [[year] month]  Show calendar at this year and this month in a                                        ",{}],["|",{"inverse":true}],[" 15 ",{"fg":3,"bold":true}],["▸ diary/",{"fg":6,"bold":true}],["          ",{}]],"15":[["▼",{"fg":3,"bold":true}],[" Second",{"fg":5,"bold":true}],[" : ",{}],["struct",{"fg":2,"bold":true}],["   ",{}],["|",{"inverse":true}],[" 16 ",{"fg":3,"bold":true}],["    ",{}],["|",{"fg":2,"bold":true}],["   ",{}],["|",{"fg":2,"bold":true}],["   ",{}],["|",{"fg":2,"bold":true}],["   ",{}],["|",{"fg":2,"bold":true}],["   ",{}],["|",{"fg":2,"bold":true}],["   ",{}],["|",{"fg":2,"bold":true}],[" vertical split.  When [year] is omitted, the                                          ",{}],["|",{"inverse":true}],[" 16 ",{"fg":3,"bold":true}],["▸ temp/",{"fg":6,"bold":true}],["           ",{}]],"16":[["    [prototypes]",{"fg":6,"bold":true}],["    ",{}],["|",{"inverse":true}],[" 17 ",{"fg":3,"bold":true}],["    ",{}],["|",{"fg":2,"bold":true}],["   ",{}],["|",{"fg":2,"bold":true}],["   ",{}],["|",{"fg":2,"bold":true}],["   ",{}],["|",{"fg":2,"bold":true}],["   ",{}],["|",{"fg":2,"bold":true}],["   ",{}],["|",{"fg":2,"bold":true}],[" calendar will show the given month in the current                                     ",{}],["|",{"inverse":true}],[" 17 ",{"fg":3,"bold":true}],["  .bash_history   ",{}]],"17":[["   ",{}],["+",{"fg":2,"bold":true}],["SecondRun(void) ",{}],["|",{"inverse":true}],[" 18 ",{"fg":3,"bold":true}],["    ",{}],["|",{"fg":2,"bold":true}],["   ",{}],["|",{"fg":2,"bold":true}],["   ",{}],["|",{"fg":2,"bold":true}],["   ",{}],["|",{"fg":2,"bold":true}],["   ",{}],["|",{"fg":2,"bold":true}],["   ",{}],["|",{"fg":2,"bold":true}],[" year.  When both [year] and [month] are omitted, the                                  ",{}],["|",{"inverse":true}],[" 18 ",{"fg":3,"bold":true}],["  .bash_logout    ",{}]],"18":[["   ",{}],["+",{"fg":2,"bold":true}],["SecondRun2(void)",{}],["|",{"inverse":true}],[" 19 ",{"fg":3,"bold":true}],["    ",{}],["|",{"fg":2,"bold":true}],["   ",{}],["|",{"fg":2,"bold":true}],["   ",{}],["|",{"fg":2,"bold":true}],["   ",{}],["|",{"fg":2,"bold":true}],["   ",{}],["|",{"fg":2,"bold":true}],["   ",{}],["|",{"fg":2,"bold":true}],[" calendar will show the current month.                                                 ",{}],["|",{"inverse":true}],[" 19 ",{"fg":3,"bold":true}],["  .bash_profile   ",{"underline":true}]],"19":[["                    ",{}],["|",{"inverse":true}],[" 20 ",{"fg":3,"bold":true}],["                                                                                                                ",{}],["|",{"inverse":true}],[" 20 ",{"fg":3,"bold":true}],["  .bashrc         ",{}]],"20":[["▼",{"fg":3,"bold":true}],[" ",{}],["functions",{"fg":6,"bold":true}],["         ",{}],["|",{"inverse":true}],[" 21 ",{"fg":3,"bold":true}],["    ",{}],["|",{"fg":2,"bold":true}],["   ",{}],["|",{"fg":2,"bold":true}],["   ",{}],["|",{"fg":2,"bold":true}],["   ",{}],["|",{"fg":2,"bold":true}],["   ",{}],["|",{"fg":2,"bold":true}],["   ",{}],["|",{"fg":2,"bold":true}],["   ",{}],["|",{"fg":2,"bold":true}],["   ",{}],["|",{"fg":2,"bold":true}],["   ",{}],["|",{"fg":2,"bold":true}],["   ",{}],["|",{"fg":2,"bold":true}],["       *calendar-:CalendarH*                                           ",{}],["|",{"inverse":true}],[" 21 ",{"fg":3,"bold":true}],["  .cshrc          ",{}]],"21":[["    main(int argc, c",{"underline":true}],["|",{"inverse":true}],[" 22 ",{"fg":3,"bold":true}],[":CalendarH [[year] month] Show calendar at this year and this month in a                                        ",{}],["|",{"inverse":true}],[" 22 ",{"fg":3,"bold":true}],["  .dmrc           ",{}]],"22":[["~                   ",{"fg":4,"bold":true}],["|",{"inverse":true}],[" 23 ",{"fg":3,"bold":true}],["    ",{}],["|",{"fg":2,"bold":true}],["   ",{}],["|",{"fg":2,"bold":true}],["   ",{}],["|",{"fg":2,"bold":true}],["   ",{}],["|",{"fg":2,"bold":true}],["   ",{}],["|",{"fg":2,"bold":true}],["   ",{}],["|",{"fg":2,"bold":true}],[" horizontal split.  When [year] is omitted, the                                        ",{}],["|",{"inverse":true}],[" 23 ",{"fg":3,"bold":true}],["  .esd_auth       ",{}]],"23":[["~                   ",{"fg":4,"bold":true}],["|",{"inverse":true}],[" 24 ",{"fg":3,"bold":true}],["    ",{}],["|",{"fg":2,"bold":true}],["   ",{}],["|",{"fg":2,"bold":true}],["   ",{}],["|",{"fg":2,"bold":true}],["   ",{}],["|",{"fg":2,"bold":true}],["   ",{}],["|",{"fg":2,"bold":true}],["   ",{}],["|",{"fg":2,"bold":true}],[" calendar will show the given month in the current                                     ",{}],["|",{"inverse":true}],[" 24 ",{"fg":3,"bold":true}],["  .gtkrc-2.0      ",{}]],"24":[["~                   ",{"fg":4,"bold":true}],["|",{"inverse":true}],[" 25 ",{"fg":3,"bold":true}],["    ",{}],["|",{"fg":2,"bold":true}],["   ",{}],["|",{"fg":2,"bold":true}],["   ",{}],["|",{"fg":2,"bold":true}],["   ",{}],["|",{"fg":2,"bold":true}],["   ",{}],["|",{"fg":2,"bold":true}],["   ",{}],["|",{"fg":2,"bold":true}],[" year.  When both [year] and [month] are omitted, the                                  ",{}],["|",{"inverse":true}],[" 25 ",{"fg":3,"bold":true}],["  .gtkrc-2.0-kde4 ",{}]],"25":[["~                   ",{"fg":4,"bold":true}],["|",{"inverse":true}],[" 26 ",{"fg":3,"bold":true}],["    ",{}],["|",{"fg":2,"bold":true}],["   ",{}],["|",{"fg":2,"bold":true}],["   ",{}],["|",{"fg":2,"bold":true}],["   ",{}],["|",{"fg":2,"bold":true}],["   ",{}],["|",{"fg":2,"bold":true}],["   ",{}],["|",{"fg":2,"bold":true}],[" calendar will show the current month.                                                 ",{}],["|",{"inverse":true}],[" 26 ",{"fg":3,"bold":true}],["  .lesshst        ",{}]],"26":[["~                   ",{"fg":4,"bold":true}],["|",{"inverse":true}],[" 27 ",{"fg":3,"bold":true}],["                                                                                                                ",{}],["|",{"inverse":true}],[" 27 ",{"fg":3,"bold":true}],["  .tcshrc         ",{}]],"27":[["~                   ",{"fg":4,"bold":true}],["|",{"inverse":true}],[" 28 ",{"fg":3,"bold":true}],["    ",{}],["|",{"fg":2,"bold":true}],["   ",{}],["|",{"fg":2,"bold":true}],["   ",{}],["|",{"fg":2,"bold":true}],["   ",{}],["|",{"fg":2,"bold":true}],["   ",{}],["|",{"fg":2,"bold":true}],["   ",{}],["|",{"fg":2,"bold":true}],["   ",{}],["|",{"fg":2,"bold":true}],["   ",{}],["|",{"fg":2,"bold":true}],["   ",{}],["|",{"fg":2,"bold":true}],["   ",{}],["|",{"fg":2,"bold":true}],["       *calendar-:CalendarT*                                           ",{}],["|",{"inverse":true}],[" 28 ",{"fg":3,"bold":true}],["  .viminfo        ",{}]],"28":[["~                   ",{"fg":4,"bold":true}],["|",{"inverse":true}],[" 29 ",{"fg":3,"bold":true}],[":CalendarT [[year] month] Show calendar at this year and this month in a                                        ",{}],["|",{"inverse":true}],[" 29 ",{"fg":3,"bold":true}],["  .vimrc          ",{}]],"29":[["~                   ",{"fg":4,"bold":true}],["|",{"inverse":true}],[" 30 ",{"fg":3,"bold":true}],["    ",{}],["|",{"fg":2,"bold":true}],["   ",{}],["|",{"fg":2,"bold":true}],["   ",{}],["|",{"fg":2,"bold":true}],["   ",{}],["|",{"fg":2,"bold":true}],["   ",{}],["|",{"fg":2,"bold":true}],["   ",{}],["|",{"fg":2,"bold":true}],[" full-screen window.  When [year] is omitted, the                                      ",{}],["|",{"inverse":true}],[" 30 ",{"fg":3,"bold":true}],["  .xsession-errors",{}]],"30":[["~                   ",{"fg":4,"bold":true}],["|",{"inverse":true}],[" 31 ",{"fg":3,"bold":true}],["    ",{}],["|",{"fg":2,"bold":true}],["   ",{}],["|",{"fg":2,"bold":true}],["   ",{}],["|",{"fg":2,"bold":true}],["   ",{}],["|",{"fg":2,"bold":true}],["   ",{}],["|",{"fg":2,"bold":true}],["   ",{}],["|",{"fg":2,"bold":true}],[" calendar will show the given month in the current                                     ",{}],["|",{"inverse":true}],[" 31 ",{"fg":3,"bold":true}],["  anaconda-ks.cfg ",{}]],"31":[["~                   ",{"fg":4,"bold":true}],["|",{"inverse":true}],[" 32 ",{"fg":3,"bold":true}],["    ",{}],["|",{"fg":2,"bold":true}],["   ",{}],["|",{"fg":2,"bold":true}],["   ",{}],["|",{"fg":2,"bold":true}],["   ",{}],["|",{"fg":2,"bold":true}],["   ",{}],["|",{"fg":2,"bold":true}],["   ",{}],["|",{"fg":2,"bold":true}],[" year.  When both [year] and [month] are omitted, the                                  ",{}],["|",{"inverse":true}],[" 32 ",{"fg":3,"bold":true}],["  initial-setup-ks",{}]],"32":[["~                   ",{"fg":4,"bold":true}],["|",{"inverse":true}],[" 33 ",{"fg":3,"bold":true}],["    ",{}],["|",{"fg":2,"bold":true}],["   ",{}],["|",{"fg":2,"bold":true}],["   ",{}],["|",{"fg":2,"bold":true}],["   ",{}],["|",{"fg":2,"bold":true}],["   ",{}],["|",{"fg":2,"bold":true}],["   ",{}],["|",{"fg":2,"bold":true}],[" calendar will show the current month.                                                 ",{}],["|",{"inverse":true}],[" 33 ",{"fg":3,"bold":true}],["  test.cl-setup-ks",{}]],"43":[["~                   ",{"fg":4,"bold":true}],["|",{"inverse":true}],[" 44 ",{"fg":3,"bold":true}],["calendar.vim makes the following normal mode mappings available:                                                ",{}],["|",{"inverse":true}],["~                     ",{"fg":4,"bold":true}]],"44":[["~                   ",{"fg":4,"bold":true}],["|",{"inverse":true}],[" 45 ",{"fg":3,"bold":true}],["                                                                                                                ",{}],["|",{"inverse":true}],["~                     ",{"fg":4,"bold":true}]],"45":[["~                   ",{"fg":4,"bold":true}],["|",{"inverse":true}],[" 46 ",{"fg":3,"bold":true}],["    ",{}],["|",{"fg":2,"bold":true}],["   ",{}],["|",{"fg":2,"bold":true}],["   ",{}],["|",{"fg":2,"bold":true}],["   ",{}],["|",{"fg":2,"bold":true}],["   ",{}],["|",{"fg":2,"bold":true}],["   ",{}],["|",{"fg":2,"bold":true}],["   ",{}],["|",{"fg":2,"bold":true}],["   ",{}],["|",{"fg":2,"bold":true}],["   ",{}],["|",{"fg":2,"bold":true}],["   ",{}],["|",{"fg":2,"bold":true}],["       *calendar-cal*                                                  ",{}],["|",{"inverse":true}],["~                     ",{"fg":4,"bold":true}]],"46":[["[Name] test.cpp      ",{"inverse":true}],[" NORMAL ",{"bold":true}],[" ",{}],["calendar.txt ",{"bold":true}],["                                                        unix │ utf-8 │ text │   0% ",{}],[" LN   1",{"bold":true}],[":1  ",{}],[" ",{"bold":true,"inverse":true}],[" ~/NERD_tree_1 ",{"bold":true}],["       ",{}]]},"cursor":{"x":150,"y":32}}],[0.025484,{"lines":{"32":[["~                   ",{"fg":4,"bold":true}],["|",{"inverse":true}],[" 33 ",{"fg":3,"bold":true}],["    ",{}],["|",{"fg":2,"bold":true}],["   ",{}],["|",{"fg":2,"bold":true}],["   ",{}],["|",{"fg":2,"bold":true}],["   ",{}],["|",{"fg":2,"bold":true}],["   ",{}],["|",{"fg":2,"bold":true}],["   ",{}],["|",{"fg":2,"bold":true}],[" calendar will show the current month.                                                 ",{}],["|",{"inverse":true}],[" 33 ",{"fg":3,"bold":true}],["  test.c          ",{}]],"33":[["~                   ",{"fg":4,"bold":true}],["|",{"inverse":true}],[" 34 ",{"fg":3,"bold":true}],["                                                                                                                ",{}],["|",{"inverse":true}],[" 34 ",{"fg":3,"bold":true}],["  test.cpp        ",{}]],"34":[["~                   ",{"fg":4,"bold":true}],["|",{"inverse":true}],[" 35 ",{"fg":3,"bold":true}],["    ",{}],["|",{"fg":2,"bold":true}],["   ",{}],["|",{"fg":2,"bold":true}],["   ",{}],["|",{"fg":2,"bold":true}],["   ",{}],["|",{"fg":2,"bold":true}],["   ",{}],["|",{"fg":2,"bold":true}],["   ",{}],["|",{"fg":2,"bold":true}],["   ",{}],["|",{"fg":2,"bold":true}],["   ",{}],["|",{"fg":2,"bold":true}],["   ",{}],["|",{"fg":2,"bold":true}],["   ",{}],["|",{"fg":2,"bold":true}],["       *calendar-:CalendarVR*                                          ",{}],["|",{"inverse":true}],[" 35 ",{"fg":3,"bold":true}],["  .test.cpp.swp   ",{}]],"35":[["~                   ",{"fg":4,"bold":true}],["|",{"inverse":true}],[" 36 ",{"fg":3,"bold":true}],[":CalendarVR [[year] month]  Show calendar at this year and this month in a                                      ",{}],["|",{"inverse":true}],["~                     ",{"fg":4,"bold":true}]],"46":[["[Name] test.cpp      ",{"inverse":true}],[" NORMAL ",{"bold":true}],[" ",{}],["calendar.txt ",{"bold":true}],["                                                        unix │ utf-8 │ text │   0% ",{}],[" LN   1",{"bold":true}],[":1  ",{}],[" ",{"bold":true,"inverse":true}],[" ~/…/calendar-vim/doc>",{"bold":true}]]},"cursor":{"x":25,"y":0,"visible":true}}],[0.613046,{"lines":{"47":[["\"calendar.txt\" 220L, 9247C                                                                                                                           j          ",{}]]},"cursor":{"visible":false}}],[0.06819799999999999,{"lines":{"0":[["\" Press <F1> for hel",{"fg":6,"bold":true}],["|",{"inverse":true}],["  1 ",{"fg":3,"bold":true}],["*calendar.txt* Calendar utility for vim                                                                         ",{}],["|",{"inverse":true}],["  1 ",{"fg":3,"bold":true}],["\" Press ? for help",{"fg":5,"bold":true}]],"1":[["                    ",{}],["|",{"inverse":true}],["  2 ",{"fg":3,"bold":true}],["                                                                                                                ",{"underline":true}],["|",{"inverse":true}],["  2 ",{"fg":3,"bold":true}],["                  ",{}]],"46":[["[Name] test.cpp      ",{"inverse":true}],[" NORMAL ",{"bold":true}],[" ",{}],["calendar.txt ",{"bold":true}],["                                                        unix │ utf-8 │ text │   0% ",{}],[" LN   2",{"bold":true}],[":1  ",{}],[" ",{"bold":true,"inverse":true}],[" ~/…/calendar-vim/doc>",{"bold":true}]],"47":[["\"calendar.txt\" 220L, 9247C                                                                                                                                      ",{}]]},"cursor":{"y":1,"visible":true}}],[0.182879,{"lines":{"47":[["\"calendar.txt\" 220L, 9247C                                                                                                                           j          ",{}]]},"cursor":{"visible":false}}],[0.08383500000000001,{"lines":{"1":[["                    ",{}],["|",{"inverse":true}],["  2 ",{"fg":3,"bold":true}],["                                                                                                                ",{}],["|",{"inverse":true}],["  2 ",{"fg":3,"bold":true}],["                  ",{}]],"2":[["▼",{"fg":3,"bold":true}],[" First",{"fg":5,"bold":true}],[" : ",{}],["struct",{"fg":2,"bold":true}],["    ",{}],["|",{"inverse":true}],["  3 ",{"fg":3,"bold":true}],["Author:  Yasuhiro Matsumoto <mattn.jp@gmail.com>                                                                ",{"underline":true}],["|",{"inverse":true}],["  3 ",{"fg":3,"bold":true}],[".. (up a dir)",{"fg":6,"bold":true}],["     ",{}]],"46":[["[Name] test.cpp      ",{"inverse":true}],[" NORMAL ",{"bold":true}],[" ",{}],["calendar.txt ",{"bold":true}],["                                                        unix │ utf-8 │ text │   1% ",{}],[" LN   3",{"bold":true}],[":1  ",{}],[" ",{"bold":true,"inverse":true}],[" ~/…/calendar-vim/doc>",{"bold":true}]]},"cursor":{"y":2}}],[0.028789,{"lines":{"2":[["▼",{"fg":3,"bold":true}],[" First",{"fg":5,"bold":true}],[" : ",{}],["struct",{"fg":2,"bold":true}],["    ",{}],["|",{"inverse":true}],["  3 ",{"fg":3,"bold":true}],["Author:  Yasuhiro Matsumoto <mattn.jp@gmail.com>                                                                ",{}],["|",{"inverse":true}],["  3 ",{"fg":3,"bold":true}],[".. (up a dir)",{"fg":6,"bold":true}],["     ",{}]],"3":[["    [prototypes]",{"fg":6,"bold":true}],["    ",{}],["|",{"inverse":true}],["  4 ",{"fg":3,"bold":true}],["                                                                                                                ",{"underline":true}],["|",{"inverse":true}],["  4 /root/",{"fg":3,"bold":true}],["            ",{}]],"46":[["[Name] test.cpp      ",{"inverse":true}],[" NORMAL ",{"bold":true}],[" ",{}],["calendar.txt ",{"bold":true}],["                                                        unix │ utf-8 │ text │   1% ",{}],[" LN   4",{"bold":true}],[":1  ",{}],[" ",{"bold":true,"inverse":true}],[" ~/…/calendar-vim/doc>",{"bold":true}]],"47":[["\"calendar.txt\" 220L, 9247C                                                                                                                                      ",{}]]},"cursor":{"y":3,"visible":true}}],[0.053564,{"lines":{"3":[["    [prototypes]",{"fg":6,"bold":true}],["    ",{}],["|",{"inverse":true}],["  4 ",{"fg":3,"bold":true}],["                                                                                                                ",{}],["|",{"inverse":true}],["  4 /root/",{"fg":3,"bold":true}],["            ",{}]],"4":[["   ",{}],["+",{"fg":2,"bold":true}],["FirstRun(void)  ",{}],["|",{"inverse":true}],["  5 ",{"fg":3,"bold":true}],["INTRODUCTION                                    *calendar*                                                      ",{"underline":true}],["|",{"inverse":true}],["  5 ",{"fg":3,"bold":true}],["▸ .asciinema/",{"fg":6,"bold":true}],["     ",{}]],"46":[["[Name] test.cpp      ",{"inverse":true}],[" NORMAL ",{"bold":true}],[" ",{}],["calendar.txt ",{"bold":true}],["                                                        unix │ utf-8 │ text │   2% ",{}],[" LN   5",{"bold":true}],[":1  ",{}],[" ",{"bold":true,"inverse":true}],[" ~/…/calendar-vim/doc>",{"bold":true}]]},"cursor":{"y":4}}],[0.051801,{"lines":{"4":[["   ",{}],["+",{"fg":2,"bold":true}],["FirstRun(void)  ",{}],["|",{"inverse":true}],["  5 ",{"fg":3,"bold":true}],["INTRODUCTION                                    *calendar*                                                      ",{}],["|",{"inverse":true}],["  5 ",{"fg":3,"bold":true}],["▸ .asciinema/",{"fg":6,"bold":true}],["     ",{}]],"5":[["   ",{}],["+",{"fg":2,"bold":true}],["FirstRun2(void) ",{}],["|",{"inverse":true}],["  6 ",{"fg":3,"bold":true}],["                                                                                                                ",{"underline":true}],["|",{"inverse":true}],["  6 ",{"fg":3,"bold":true}],["▸ .cache/",{"fg":6,"bold":true}],["         ",{}]],"46":[["[Name] test.cpp      ",{"inverse":true}],[" NORMAL ",{"bold":true}],[" ",{}],["calendar.txt ",{"bold":true}],["                                                        unix │ utf-8 │ text │   2% ",{}],[" LN   6",{"bold":true}],[":1  ",{}],[" ",{"bold":true,"inverse":true}],[" ~/…/calendar-vim/doc>",{"bold":true}]]},"cursor":{"y":5}}],[0.08598,{"lines":{"5":[["   ",{}],["+",{"fg":2,"bold":true}],["FirstRun2(void) ",{}],["|",{"inverse":true}],["  6 ",{"fg":3,"bold":true}],["                                                                                                                ",{}],["|",{"inverse":true}],["  6 ",{"fg":3,"bold":true}],["▸ .cache/",{"fg":6,"bold":true}],["         ",{}]],"7":[["▼",{"fg":3,"bold":true}],[" Last",{"fg":5,"bold":true}],[" : ",{}],["struct",{"fg":2,"bold":true}],["     ",{}],["|",{"inverse":true}],["  8 ",{"fg":3,"bold":true}],["external program, such as cal, etc.                                                                             ",{"underline":true}],["|",{"inverse":true}],["  8 ",{"fg":3,"bold":true}],["▸ .dbus/",{"fg":6,"bold":true}],["          ",{}]],"46":[["[Name] test.cpp      ",{"inverse":true}],[" NORMAL ",{"bold":true}],[" ",{}],["calendar.txt ",{"bold":true}],["                                                        unix │ utf-8 │ text │   3% ",{}],[" LN   8",{"bold":true}],[":1  ",{}],[" ",{"bold":true,"inverse":true}],[" ~/…/calendar-vim/doc>",{"bold":true}]]},"cursor":{"y":7}}],[0.084622,{"lines":{"7":[["▼",{"fg":3,"bold":true}],[" Last",{"fg":5,"bold":true}],[" : ",{}],["struct",{"fg":2,"bold":true}],["     ",{}],["|",{"inverse":true}],["  8 ",{"fg":3,"bold":true}],["external program, such as cal, etc.                                                                             ",{}],["|",{"inverse":true}],["  8 ",{"fg":3,"bold":true}],["▸ .dbus/",{"fg":6,"bold":true}],["          ",{}]],"9":[["   ",{}],["+",{"fg":2,"bold":true}],["FirstRun(void)  ",{}],["|",{"inverse":true}],[" 10 ",{"fg":3,"bold":true}],["COMMANDS                                        *calendar-commands*                                             ",{"underline":true}],["|",{"inverse":true}],[" 10 ",{"fg":3,"bold":true}],["▸ .kde/",{"fg":6,"bold":true}],["           ",{}]],"46":[["[Name] test.cpp      ",{"inverse":true}],[" NORMAL ",{"bold":true}],[" ",{}],["calendar.txt ",{"bold":true}],["                                                        unix │ utf-8 │ text │   4% ",{}],[" LN  10",{"bold":true}],[":1  ",{}],[" ",{"bold":true,"inverse":true}],[" ~/…/calendar-vim/doc>",{"bold":true}]]},"cursor":{"y":9}}],[0.000146,{"lines":{"47":[["\"calendar.txt\" 220L, 9247C                                                                                                                           j          ",{}]]},"cursor":{"visible":false}}],[0.051241,{"lines":{"9":[["   ",{}],["+",{"fg":2,"bold":true}],["FirstRun(void)  ",{}],["|",{"inverse":true}],[" 10 ",{"fg":3,"bold":true}],["COMMANDS                                        *calendar-commands*                                             ",{}],["|",{"inverse":true}],[" 10 ",{"fg":3,"bold":true}],["▸ .kde/",{"fg":6,"bold":true}],["           ",{}]],"10":[["   ",{}],["+",{"fg":2,"bold":true}],["FirstRun2(void) ",{}],["|",{"inverse":true}],[" 11 ",{"fg":3,"bold":true}],["                                                                                                                ",{"underline":true}],["|",{"inverse":true}],[" 11 ",{"fg":3,"bold":true}],["▸ .local/",{"fg":6,"bold":true}],["         ",{}]],"46":[["[Name] test.cpp      ",{"inverse":true}],[" NORMAL ",{"bold":true}],[" ",{}],["calendar.txt ",{"bold":true}],["                                                        unix │ utf-8 │ text │   5% ",{}],[" LN  11",{"bold":true}],[":1  ",{}],[" ",{"bold":true,"inverse":true}],[" ~/…/calendar-vim/doc>",{"bold":true}]],"47":[["\"calendar.txt\" 220L, 9247C                                                                                                                                      ",{}]]},"cursor":{"y":10,"visible":true}}],[0.5444600000000001,{"lines":{"47":[["\"calendar.txt\" 220L, 9247C                                                                                                                           ,          ",{}]]}}],[0.572043,{"lines":{"47":[["\"calendar.txt\" 220L, 9247C                                                                                                                           ,i         ",{}]]}}],[0.133828,{"lines":{"47":[[":IndentLinesToggle                                                                                                                                              ",{}]]},"cursor":{"x":0,"y":47,"visible":false}}],[0.009605000000000001,{"lines":{"13":[["   ",{}],["+",{"fg":2,"bold":true}],["SecondRun2(void)",{}],["|",{"inverse":true}],[" 14 ",{"fg":3,"bold":true}],["                                                *calendar-:Calendar*                                            ",{}],["|",{"inverse":true}],[" 14 ",{"fg":3,"bold":true}],["▸ .vim/",{"fg":6,"bold":true}],["           ",{}]],"15":[["▼",{"fg":3,"bold":true}],[" Second",{"fg":5,"bold":true}],[" : ",{}],["struct",{"fg":2,"bold":true}],["   ",{}],["|",{"inverse":true}],[" 16 ",{"fg":3,"bold":true}],["                          vertical split.  When [year] is omitted, the                                          ",{}],["|",{"inverse":true}],[" 16 ",{"fg":3,"bold":true}],["▸ temp/",{"fg":6,"bold":true}],["           ",{}]],"16":[["    [prototypes]",{"fg":6,"bold":true}],["    ",{}],["|",{"inverse":true}],[" 17 ",{"fg":3,"bold":true}],["                          calendar will show the given month in the current                                     ",{}],["|",{"inverse":true}],[" 17 ",{"fg":3,"bold":true}],["  .bash_history   ",{}]],"17":[["   ",{}],["+",{"fg":2,"bold":true}],["SecondRun(void) ",{}],["|",{"inverse":true}],[" 18 ",{"fg":3,"bold":true}],["                          year.  When both [year] and [month] are omitted, the                                  ",{}],["|",{"inverse":true}],[" 18 ",{"fg":3,"bold":true}],["  .bash_logout    ",{}]],"18":[["   ",{}],["+",{"fg":2,"bold":true}],["SecondRun2(void)",{}],["|",{"inverse":true}],[" 19 ",{"fg":3,"bold":true}],["                          calendar will show the current month.                                                 ",{}],["|",{"inverse":true}],[" 19 ",{"fg":3,"bold":true}],["  .bash_profile   ",{"underline":true}]],"20":[["▼",{"fg":3,"bold":true}],[" ",{}],["functions",{"fg":6,"bold":true}],["         ",{}],["|",{"inverse":true}],[" 21 ",{"fg":3,"bold":true}],["                                                *calendar-:CalendarH*                                           ",{}],["|",{"inverse":true}],[" 21 ",{"fg":3,"bold":true}],["  .cshrc          ",{}]],"22":[["~                   ",{"fg":4,"bold":true}],["|",{"inverse":true}],[" 23 ",{"fg":3,"bold":true}],["                          horizontal split.  When [year] is omitted, the                                        ",{}],["|",{"inverse":true}],[" 23 ",{"fg":3,"bold":true}],["  .esd_auth       ",{}]],"23":[["~                   ",{"fg":4,"bold":true}],["|",{"inverse":true}],[" 24 ",{"fg":3,"bold":true}],["                          calendar will show the given month in the current                                     ",{}],["|",{"inverse":true}],[" 24 ",{"fg":3,"bold":true}],["  .gtkrc-2.0      ",{}]],"24":[["~                   ",{"fg":4,"bold":true}],["|",{"inverse":true}],[" 25 ",{"fg":3,"bold":true}],["                          year.  When both [year] and [month] are omitted, the                                  ",{}],["|",{"inverse":true}],[" 25 ",{"fg":3,"bold":true}],["  .gtkrc-2.0-kde4 ",{}]],"25":[["~                   ",{"fg":4,"bold":true}],["|",{"inverse":true}],[" 26 ",{"fg":3,"bold":true}],["                          calendar will show the current month.                                                 ",{}],["|",{"inverse":true}],[" 26 ",{"fg":3,"bold":true}],["  .lesshst        ",{}]],"27":[["~                   ",{"fg":4,"bold":true}],["|",{"inverse":true}],[" 28 ",{"fg":3,"bold":true}],["                                                *calendar-:CalendarT*                                           ",{}],["|",{"inverse":true}],[" 28 ",{"fg":3,"bold":true}],["  .viminfo        ",{}]],"29":[["~                   ",{"fg":4,"bold":true}],["|",{"inverse":true}],[" 30 ",{"fg":3,"bold":true}],["                          full-screen window.  When [year] is omitted, the                                      ",{}],["|",{"inverse":true}],[" 30 ",{"fg":3,"bold":true}],["  .xsession-errors",{}]],"30":[["~                   ",{"fg":4,"bold":true}],["|",{"inverse":true}],[" 31 ",{"fg":3,"bold":true}],["                          calendar will show the given month in the current                                     ",{}],["|",{"inverse":true}],[" 31 ",{"fg":3,"bold":true}],["  anaconda-ks.cfg ",{}]],"31":[["~                   ",{"fg":4,"bold":true}],["|",{"inverse":true}],[" 32 ",{"fg":3,"bold":true}],["                          year.  When both [year] and [month] are omitted, the                                  ",{}],["|",{"inverse":true}],[" 32 ",{"fg":3,"bold":true}],["  initial-setup-ks",{}]],"32":[["~                   ",{"fg":4,"bold":true}],["|",{"inverse":true}],[" 33 ",{"fg":3,"bold":true}],["                          calendar will show the current month.                                                 ",{}],["|",{"inverse":true}],[" 33 ",{"fg":3,"bold":true}],["  test.c          ",{}]],"34":[["~                   ",{"fg":4,"bold":true}],["|",{"inverse":true}],[" 35 ",{"fg":3,"bold":true}],["                                                *calendar-:CalendarVR*                                          ",{}],["|",{"inverse":true}],[" 35 ",{"fg":3,"bold":true}],["  .test.cpp.swp   ",{}]],"36":[["~                   ",{"fg":4,"bold":true}],["|",{"inverse":true}],[" 37 ",{"fg":3,"bold":true}],["                          vertical split at the right site.  When [year] is                                     ",{}],["|",{"inverse":true}],["~                     ",{"fg":4,"bold":true}]],"37":[["~                   ",{"fg":4,"bold":true}],["|",{"inverse":true}],[" 38 ",{"fg":3,"bold":true}],["                          omitted, the calendar will show the given month in                                    ",{}],["|",{"inverse":true}],["~                     ",{"fg":4,"bold":true}]],"38":[["~                   ",{"fg":4,"bold":true}],["|",{"inverse":true}],[" 39 ",{"fg":3,"bold":true}],["                          the current year.  When both [year] and [month] are                                   ",{}],["|",{"inverse":true}],["~                     ",{"fg":4,"bold":true}]],"39":[["~                   ",{"fg":4,"bold":true}],["|",{"inverse":true}],[" 40 ",{"fg":3,"bold":true}],["                          omitted, the calendar will show the current month.                                    ",{}],["|",{"inverse":true}],["~                     ",{"fg":4,"bold":true}]],"45":[["~                   ",{"fg":4,"bold":true}],["|",{"inverse":true}],[" 46 ",{"fg":3,"bold":true}],["                                                *calendar-cal*                                                  ",{}],["|",{"inverse":true}],["~                     ",{"fg":4,"bold":true}]]},"cursor":{"x":25,"y":10,"visible":true}}],[0.5992729999999999,{"lines":{"47":[[":IndentLinesToggle                                                                                                                                   j          ",{}]]},"cursor":{"visible":false}}],[0.006025,{"lines":{"10":[["   ",{}],["+",{"fg":2,"bold":true}],["FirstRun2(void) ",{}],["|",{"inverse":true}],[" 11 ",{"fg":3,"bold":true}],["                                                                                                                ",{}],["|",{"inverse":true}],[" 11 ",{"fg":3,"bold":true}],["▸ .local/",{"fg":6,"bold":true}],["         ",{}]],"11":[["   ",{}],["+",{"fg":2,"bold":true}],["~Last()         ",{}],["|",{"inverse":true}],[" 12 ",{"fg":3,"bold":true}],["calendar.vim makes the following commands available:                                                            ",{"underline":true}],["|",{"inverse":true}],[" 12 ",{"fg":3,"bold":true}],["▸ .pki/",{"fg":6,"bold":true}],["           ",{}]],"46":[["[Name] test.cpp      ",{"inverse":true}],[" NORMAL ",{"bold":true}],[" ",{}],["calendar.txt ",{"bold":true}],["                                                        unix │ utf-8 │ text │   5% ",{}],[" LN  12",{"bold":true}],[":1  ",{}],[" ",{"bold":true,"inverse":true}],[" ~/…/calendar-vim/doc>",{"bold":true}]],"47":[[":IndentLinesToggle                                                                                                                                              ",{}]]},"cursor":{"y":11,"visible":true}}],[0.24392,{"lines":{"47":[[":IndentLinesToggle                                                                                                                                   j          ",{}]]},"cursor":{"visible":false}}],[0.03688,{"lines":{"11":[["   ",{}],["+",{"fg":2,"bold":true}],["~Last()         ",{}],["|",{"inverse":true}],[" 12 ",{"fg":3,"bold":true}],["calendar.vim makes the following commands available:                                                            ",{}],["|",{"inverse":true}],[" 12 ",{"fg":3,"bold":true}],["▸ .pki/",{"fg":6,"bold":true}],["           ",{}]],"12":[["   ",{}],["+",{"fg":2,"bold":true}],["SecondRun(void) ",{}],["|",{"inverse":true}],[" 13 ",{"fg":3,"bold":true}],["                                                                                                                ",{"underline":true}],["|",{"inverse":true}],[" 13 ",{"fg":3,"bold":true}],["▸ .ssh/",{"fg":6,"bold":true}],["           ",{}]],"46":[["[Name] test.cpp      ",{"inverse":true}],[" NORMAL ",{"bold":true}],[" ",{}],["calendar.txt ",{"bold":true}],["                                                        unix │ utf-8 │ text │   5% ",{}],[" LN  13",{"bold":true}],[":1  ",{}],[" ",{"bold":true,"inverse":true}],[" ~/…/calendar-vim/doc>",{"bold":true}]],"47":[[":IndentLinesToggle                                                                                                                                              ",{}]]},"cursor":{"y":12,"visible":true}}],[0.007114000000000001,{"lines":{"12":[["   ",{}],["+",{"fg":2,"bold":true}],["SecondRun(void) ",{}],["|",{"inverse":true}],[" 13 ",{"fg":3,"bold":true}],["                                                                                                                ",{}],["|",{"inverse":true}],[" 13 ",{"fg":3,"bold":true}],["▸ .ssh/",{"fg":6,"bold":true}],["           ",{}]],"13":[["   ",{}],["+",{"fg":2,"bold":true}],["SecondRun2(void)",{}],["|",{"inverse":true}],[" 14 ",{"fg":3,"bold":true}],["                                                *calendar-:Calendar*                                            ",{"underline":true}],["|",{"inverse":true}],[" 14 ",{"fg":3,"bold":true}],["▸ .vim/",{"fg":6,"bold":true}],["           ",{}]],"46":[["[Name] test.cpp      ",{"inverse":true}],[" NORMAL ",{"bold":true}],[" ",{}],["calendar.txt ",{"bold":true}],["                                                        unix │ utf-8 │ text │   6% ",{}],[" LN  14",{"bold":true}],[":1  ",{}],[" ",{"bold":true,"inverse":true}],[" ~/…/calendar-vim/doc>",{"bold":true}]]},"cursor":{"y":13}}],[0.020469,{"lines":{"47":[[":IndentLinesToggle                                                                                                                                   j          ",{}]]},"cursor":{"visible":false}}],[0.004956,{"lines":{"13":[["   ",{}],["+",{"fg":2,"bold":true}],["SecondRun2(void)",{}],["|",{"inverse":true}],[" 14 ",{"fg":3,"bold":true}],["                                                *calendar-:Calendar*                                            ",{}],["|",{"inverse":true}],[" 14 ",{"fg":3,"bold":true}],["▸ .vim/",{"fg":6,"bold":true}],["           ",{}]],"14":[["                    ",{}],["|",{"inverse":true}],[" 15 ",{"fg":3,"bold":true}],[":Calendar [[year] month]  Show calendar at this year and this month in a                                        ",{"underline":true}],["|",{"inverse":true}],[" 15 ",{"fg":3,"bold":true}],["▸ diary/",{"fg":6,"bold":true}],["          ",{}]],"46":[["[Name] test.cpp      ",{"inverse":true}],[" NORMAL ",{"bold":true}],[" ",{}],["calendar.txt ",{"bold":true}],["                                                        unix │ utf-8 │ text │   6% ",{}],[" LN  15",{"bold":true}],[":1  ",{}],[" ",{"bold":true,"inverse":true}],[" ~/…/calendar-vim/doc>",{"bold":true}]],"47":[[":IndentLinesToggle                                                                                                                                              ",{}]]},"cursor":{"y":14,"visible":true}}],[0.032487,{"lines":{"47":[[":IndentLinesToggle                                                                                                                                   j          ",{}]]},"cursor":{"visible":false}}],[0.001586,{"lines":{"14":[["                    ",{}],["|",{"inverse":true}],[" 15 ",{"fg":3,"bold":true}],[":Calendar [[year] month]  Show calendar at this year and this month in a                                        ",{}],["|",{"inverse":true}],[" 15 ",{"fg":3,"bold":true}],["▸ diary/",{"fg":6,"bold":true}],["          ",{}]],"15":[["▼",{"fg":3,"bold":true}],[" Second",{"fg":5,"bold":true}],[" : ",{}],["struct",{"fg":2,"bold":true}],["   ",{}],["|",{"inverse":true}],[" 16 ",{"fg":3,"bold":true}],["                          vertical split.  When [year] is omitted, the                                          ",{"underline":true}],["|",{"inverse":true}],[" 16 ",{"fg":3,"bold":true}],["▸ temp/",{"fg":6,"bold":true}],["           ",{}]],"46":[["[Name] test.cpp      ",{"inverse":true}],[" NORMAL ",{"bold":true}],[" ",{}],["calendar.txt ",{"bold":true}],["                                                        unix │ utf-8 │ text │   7% ",{}],[" LN  16",{"bold":true}],[":1  ",{}],[" ",{"bold":true,"inverse":true}],[" ~/…/calendar-vim/doc>",{"bold":true}]],"47":[[":IndentLinesToggle                                                                                                                                              ",{}]]},"cursor":{"y":15,"visible":true}}],[0.028905,{"lines":{"47":[[":IndentLinesToggle                                                                                                                                   j          ",{}]]},"cursor":{"visible":false}}],[0.022811,{"lines":{"15":[["▼",{"fg":3,"bold":true}],[" Second",{"fg":5,"bold":true}],[" : ",{}],["struct",{"fg":2,"bold":true}],["   ",{}],["|",{"inverse":true}],[" 16 ",{"fg":3,"bold":true}],["                          vertical split.  When [year] is omitted, the                                          ",{}],["|",{"inverse":true}],[" 16 ",{"fg":3,"bold":true}],["▸ temp/",{"fg":6,"bold":true}],["           ",{}]],"16":[["    [prototypes]",{"fg":6,"bold":true}],["    ",{}],["|",{"inverse":true}],[" 17 ",{"fg":3,"bold":true}],["                          calendar will show the given month in the current                                     ",{"underline":true}],["|",{"inverse":true}],[" 17 ",{"fg":3,"bold":true}],["  .bash_history   ",{}]],"46":[["[Name] test.cpp      ",{"inverse":true}],[" NORMAL ",{"bold":true}],[" ",{}],["calendar.txt ",{"bold":true}],["                                                        unix │ utf-8 │ text │   7% ",{}],[" LN  17",{"bold":true}],[":1  ",{}],[" ",{"bold":true,"inverse":true}],[" ~/…/calendar-vim/doc>",{"bold":true}]],"47":[[":IndentLinesToggle                                                                                                                                              ",{}]]},"cursor":{"y":16,"visible":true}}],[0.01464,{"lines":{"47":[[":IndentLinesToggle                                                                                                                                   j          ",{}]]},"cursor":{"visible":false}}],[0.002343,{"lines":{"16":[["    [prototypes]",{"fg":6,"bold":true}],["    ",{}],["|",{"inverse":true}],[" 17 ",{"fg":3,"bold":true}],["                          calendar will show the given month in the current                                     ",{}],["|",{"inverse":true}],[" 17 ",{"fg":3,"bold":true}],["  .bash_history   ",{}]],"17":[["   ",{}],["+",{"fg":2,"bold":true}],["SecondRun(void) ",{}],["|",{"inverse":true}],[" 18 ",{"fg":3,"bold":true}],["                          year.  When both [year] and [month] are omitted, the                                  ",{"underline":true}],["|",{"inverse":true}],[" 18 ",{"fg":3,"bold":true}],["  .bash_logout    ",{}]],"46":[["[Name] test.cpp      ",{"inverse":true}],[" NORMAL ",{"bold":true}],[" ",{}],["calendar.txt ",{"bold":true}],["                                                        unix │ utf-8 │ text │   8% ",{}],[" LN  18",{"bold":true}],[":1  ",{}],[" ",{"bold":true,"inverse":true}],[" ~/…/calendar-vim/doc>",{"bold":true}]],"47":[[":IndentLinesToggle                                                                                                                                              ",{}]]},"cursor":{"y":17,"visible":true}}],[0.034761,{"lines":{"47":[[":IndentLinesToggle                                                                                                                                   j          ",{}]]},"cursor":{"visible":false}}],[0.003379,{"lines":{"17":[["   ",{}],["+",{"fg":2,"bold":true}],["SecondRun(void) ",{}],["|",{"inverse":true}],[" 18 ",{"fg":3,"bold":true}],["                          year.  When both [year] and [month] are omitted, the                                  ",{}],["|",{"inverse":true}],[" 18 ",{"fg":3,"bold":true}],["  .bash_logout    ",{}]],"18":[["   ",{}],["+",{"fg":2,"bold":true}],["SecondRun2(void)",{}],["|",{"inverse":true}],[" 19 ",{"fg":3,"bold":true}],["                          calendar will show the current month.                                                 ",{"underline":true}],["|",{"inverse":true}],[" 19 ",{"fg":3,"bold":true}],["  .bash_profile   ",{"underline":true}]],"46":[["[Name] test.cpp      ",{"inverse":true}],[" NORMAL ",{"bold":true}],[" ",{}],["calendar.txt ",{"bold":true}],["                                                        unix │ utf-8 │ text │   8% ",{}],[" LN  19",{"bold":true}],[":1  ",{}],[" ",{"bold":true,"inverse":true}],[" ~/…/calendar-vim/doc>",{"bold":true}]],"47":[[":IndentLinesToggle                                                                                                                                              ",{}]]},"cursor":{"y":18,"visible":true}}],[0.024017,{"lines":{"47":[[":IndentLinesToggle                                                                                                                                   j          ",{}]]},"cursor":{"visible":false}}],[0.005458,{"lines":{"18":[["   ",{}],["+",{"fg":2,"bold":true}],["SecondRun2(void)",{}],["|",{"inverse":true}],[" 19 ",{"fg":3,"bold":true}],["                          calendar will show the current month.                                                 ",{}],["|",{"inverse":true}],[" 19 ",{"fg":3,"bold":true}],["  .bash_profile   ",{"underline":true}]],"19":[["                    ",{}],["|",{"inverse":true}],[" 20 ",{"fg":3,"bold":true}],["                                                                                                                ",{"underline":true}],["|",{"inverse":true}],[" 20 ",{"fg":3,"bold":true}],["  .bashrc         ",{}]],"46":[["[Name] test.cpp      ",{"inverse":true}],[" NORMAL ",{"bold":true}],[" ",{}],["calendar.txt ",{"bold":true}],["                                                        unix │ utf-8 │ text │   9% ",{}],[" LN  20",{"bold":true}],[":1  ",{}],[" ",{"bold":true,"inverse":true}],[" ~/…/calendar-vim/doc>",{"bold":true}]],"47":[[":IndentLinesToggle                                                                                                                                              ",{}]]},"cursor":{"y":19,"visible":true}}],[0.032068,{"lines":{"47":[[":IndentLinesToggle                                                                                                                                   j          ",{}]]},"cursor":{"visible":false}}],[0.00144,{"lines":{"19":[["                    ",{}],["|",{"inverse":true}],[" 20 ",{"fg":3,"bold":true}],["                                                                                                                ",{}],["|",{"inverse":true}],[" 20 ",{"fg":3,"bold":true}],["  .bashrc         ",{}]],"20":[["▼",{"fg":3,"bold":true}],[" ",{}],["functions",{"fg":6,"bold":true}],["         ",{}],["|",{"inverse":true}],[" 21 ",{"fg":3,"bold":true}],["                                                *calendar-:CalendarH*                                           ",{"underline":true}],["|",{"inverse":true}],[" 21 ",{"fg":3,"bold":true}],["  .cshrc          ",{}]],"46":[["[Name] test.cpp      ",{"inverse":true}],[" NORMAL ",{"bold":true}],[" ",{}],["calendar.txt ",{"bold":true}],["                                                        unix │ utf-8 │ text │   9% ",{}],[" LN  21",{"bold":true}],[":1  ",{}],[" ",{"bold":true,"inverse":true}],[" ~/…/calendar-vim/doc>",{"bold":true}]],"47":[[":IndentLinesToggle                                                                                                                                              ",{}]]},"cursor":{"y":20,"visible":true}}],[0.029103,{"lines":{"47":[[":IndentLinesToggle                                                                                                                                   j          ",{}]]},"cursor":{"visible":false}}],[0.022948,{"lines":{"20":[["▼",{"fg":3,"bold":true}],[" ",{}],["functions",{"fg":6,"bold":true}],["         ",{}],["|",{"inverse":true}],[" 21 ",{"fg":3,"bold":true}],["                                                *calendar-:CalendarH*                                           ",{}],["|",{"inverse":true}],[" 21 ",{"fg":3,"bold":true}],["  .cshrc          ",{}]],"21":[["    main(int argc, c",{"underline":true}],["|",{"inverse":true}],[" 22 ",{"fg":3,"bold":true}],[":CalendarH [[year] month] Show calendar at this year and this month in a                                        ",{"underline":true}],["|",{"inverse":true}],[" 22 ",{"fg":3,"bold":true}],["  .dmrc           ",{}]],"46":[["[Name] test.cpp      ",{"inverse":true}],[" NORMAL ",{"bold":true}],[" ",{}],["calendar.txt ",{"bold":true}],["                                                        unix │ utf-8 │ text │  10% ",{}],[" LN  22",{"bold":true}],[":1  ",{}],[" ",{"bold":true,"inverse":true}],[" ~/…/calendar-vim/doc>",{"bold":true}]],"47":[[":IndentLinesToggle                                                                                                                                              ",{}]]},"cursor":{"y":21,"visible":true}}],[0.014492,{"lines":{"47":[[":IndentLinesToggle                                                                                                                                   j          ",{}]]},"cursor":{"visible":false}}],[0.002923,{"lines":{"21":[["    main(int argc, c",{"underline":true}],["|",{"inverse":true}],[" 22 ",{"fg":3,"bold":true}],[":CalendarH [[year] month] Show calendar at this year and this month in a                                        ",{}],["|",{"inverse":true}],[" 22 ",{"fg":3,"bold":true}],["  .dmrc           ",{}]],"22":[["~                   ",{"fg":4,"bold":true}],["|",{"inverse":true}],[" 23 ",{"fg":3,"bold":true}],["                          horizontal split.  When [year] is omitted, the                                        ",{"underline":true}],["|",{"inverse":true}],[" 23 ",{"fg":3,"bold":true}],["  .esd_auth       ",{}]],"46":[["[Name] test.cpp      ",{"inverse":true}],[" NORMAL ",{"bold":true}],[" ",{}],["calendar.txt ",{"bold":true}],["                                                        unix │ utf-8 │ text │  10% ",{}],[" LN  23",{"bold":true}],[":1  ",{}],[" ",{"bold":true,"inverse":true}],[" ~/…/calendar-vim/doc>",{"bold":true}]],"47":[[":IndentLinesToggle                                                                                                                                              ",{}]]},"cursor":{"y":22,"visible":true}}],[0.037947,{"lines":{"47":[[":IndentLinesToggle                                                                                                                                   j          ",{}]]},"cursor":{"visible":false}}],[0.003599,{"lines":{"22":[["~                   ",{"fg":4,"bold":true}],["|",{"inverse":true}],[" 23 ",{"fg":3,"bold":true}],["                          horizontal split.  When [year] is omitted, the                                        ",{}],["|",{"inverse":true}],[" 23 ",{"fg":3,"bold":true}],["  .esd_auth       ",{}]],"23":[["~                   ",{"fg":4,"bold":true}],["|",{"inverse":true}],[" 24 ",{"fg":3,"bold":true}],["                          calendar will show the given month in the current                                     ",{"underline":true}],["|",{"inverse":true}],[" 24 ",{"fg":3,"bold":true}],["  .gtkrc-2.0      ",{}]],"46":[["[Name] test.cpp      ",{"inverse":true}],[" NORMAL ",{"bold":true}],[" ",{}],["calendar.txt ",{"bold":true}],["                                                        unix │ utf-8 │ text │  10% ",{}],[" LN  24",{"bold":true}],[":1  ",{}],[" ",{"bold":true,"inverse":true}],[" ~/…/calendar-vim/doc>",{"bold":true}]],"47":[[":IndentLinesToggle                                                                                                                                              ",{}]]},"cursor":{"y":23,"visible":true}}],[0.020141,{"lines":{"47":[[":IndentLinesToggle                                                                                                                                   j          ",{}]]},"cursor":{"visible":false}}],[0.024129,{"lines":{"23":[["~                   ",{"fg":4,"bold":true}],["|",{"inverse":true}],[" 24 ",{"fg":3,"bold":true}],["                          calendar will show the given month in the current                                     ",{}],["|",{"inverse":true}],[" 24 ",{"fg":3,"bold":true}],["  .gtkrc-2.0      ",{}]],"24":[["~                   ",{"fg":4,"bold":true}],["|",{"inverse":true}],[" 25 ",{"fg":3,"bold":true}],["                          year.  When both [year] and [month] are omitted, the                                  ",{"underline":true}],["|",{"inverse":true}],[" 25 ",{"fg":3,"bold":true}],["  .gtkrc-2.0-kde4 ",{}]],"46":[["[Name] test.cpp      ",{"inverse":true}],[" NORMAL ",{"bold":true}],[" ",{}],["calendar.txt ",{"bold":true}],["                                                        unix │ utf-8 │ text │  11% ",{}],[" LN  25",{"bold":true}],[":1  ",{}],[" ",{"bold":true,"inverse":true}],[" ~/…/calendar-vim/doc>",{"bold":true}]],"47":[[":IndentLinesToggle                                                                                                                                              ",{}]]},"cursor":{"y":24,"visible":true}}],[0.015578,{"lines":{"24":[["~                   ",{"fg":4,"bold":true}],["|",{"inverse":true}],[" 25 ",{"fg":3,"bold":true}],["                          year.  When both [year] and [month] are omitted, the                                  ",{}],["|",{"inverse":true}],[" 25 ",{"fg":3,"bold":true}],["  .gtkrc-2.0-kde4 ",{}]],"25":[["~                   ",{"fg":4,"bold":true}],["|",{"inverse":true}],[" 26 ",{"fg":3,"bold":true}],["                          calendar will show the current month.                                                 ",{"underline":true}],["|",{"inverse":true}],[" 26 ",{"fg":3,"bold":true}],["  .lesshst        ",{}]],"46":[["[Name] test.cpp      ",{"inverse":true}],[" NORMAL ",{"bold":true}],[" ",{}],["calendar.txt ",{"bold":true}],["                                                        unix │ utf-8 │ text │  11% ",{}],[" LN  26",{"bold":true}],[":1  ",{}],[" ",{"bold":true,"inverse":true}],[" ~/…/calendar-vim/doc>",{"bold":true}]]},"cursor":{"y":25}}],[0.03951,{"lines":{"25":[["~                   ",{"fg":4,"bold":true}],["|",{"inverse":true}],[" 26 ",{"fg":3,"bold":true}],["                          calendar will show the current month.                                                 ",{}],["|",{"inverse":true}],[" 26 ",{"fg":3,"bold":true}],["  .lesshst        ",{}]],"26":[["~                   ",{"fg":4,"bold":true}],["|",{"inverse":true}],[" 27 ",{"fg":3,"bold":true}],["                                                                                                                ",{"underline":true}],["|",{"inverse":true}],[" 27 ",{"fg":3,"bold":true}],["  .tcshrc         ",{}]],"46":[["[Name] test.cpp      ",{"inverse":true}],[" NORMAL ",{"bold":true}],[" ",{}],["calendar.txt ",{"bold":true}],["                                                        unix │ utf-8 │ text │  12% ",{}],[" LN  27",{"bold":true}],[":1  ",{}],[" ",{"bold":true,"inverse":true}],[" ~/…/calendar-vim/doc>",{"bold":true}]]},"cursor":{"y":26}}],[0.022745,{"lines":{"47":[[":IndentLinesToggle                                                                                                                                   j          ",{}]]},"cursor":{"visible":false}}],[0.006068,{"lines":{"26":[["~                   ",{"fg":4,"bold":true}],["|",{"inverse":true}],[" 27 ",{"fg":3,"bold":true}],["                                                                                                                ",{}],["|",{"inverse":true}],[" 27 ",{"fg":3,"bold":true}],["  .tcshrc         ",{}]],"27":[["~                   ",{"fg":4,"bold":true}],["|",{"inverse":true}],[" 28 ",{"fg":3,"bold":true}],["                                                *calendar-:CalendarT*                                           ",{"underline":true}],["|",{"inverse":true}],[" 28 ",{"fg":3,"bold":true}],["  .viminfo        ",{}]],"46":[["[Name] test.cpp      ",{"inverse":true}],[" NORMAL ",{"bold":true}],[" ",{}],["calendar.txt ",{"bold":true}],["                                                        unix │ utf-8 │ text │  12% ",{}],[" LN  28",{"bold":true}],[":1  ",{}],[" ",{"bold":true,"inverse":true}],[" ~/…/calendar-vim/doc>",{"bold":true}]],"47":[[":IndentLinesToggle                                                                                                                                              ",{}]]},"cursor":{"y":27,"visible":true}}],[0.031385,{"lines":{"47":[[":IndentLinesToggle                                                                                                                                   j          ",{}]]},"cursor":{"visible":false}}],[0.00261,{"lines":{"27":[["~                   ",{"fg":4,"bold":true}],["|",{"inverse":true}],[" 28 ",{"fg":3,"bold":true}],["                                                *calendar-:CalendarT*                                           ",{}],["|",{"inverse":true}],[" 28 ",{"fg":3,"bold":true}],["  .viminfo        ",{}]],"28":[["~                   ",{"fg":4,"bold":true}],["|",{"inverse":true}],[" 29 ",{"fg":3,"bold":true}],[":CalendarT [[year] month] Show calendar at this year and this month in a                                        ",{"underline":true}],["|",{"inverse":true}],[" 29 ",{"fg":3,"bold":true}],["  .vimrc          ",{}]],"46":[["[Name] test.cpp      ",{"inverse":true}],[" NORMAL ",{"bold":true}],[" ",{}],["calendar.txt ",{"bold":true}],["                                                        unix │ utf-8 │ text │  13% ",{}],[" LN  29",{"bold":true}],[":1  ",{}],[" ",{"bold":true,"inverse":true}],[" ~/…/calendar-vim/doc>",{"bold":true}]],"47":[[":IndentLinesToggle                                                                                                                                              ",{}]]},"cursor":{"y":28,"visible":true}}],[0.027921,{"lines":{"47":[[":IndentLinesToggle                                                                                                                                   j          ",{}]]},"cursor":{"visible":false}}],[0.024355,{"lines":{"28":[["~                   ",{"fg":4,"bold":true}],["|",{"inverse":true}],[" 29 ",{"fg":3,"bold":true}],[":CalendarT [[year] month] Show calendar at this year and this month in a                                        ",{}],["|",{"inverse":true}],[" 29 ",{"fg":3,"bold":true}],["  .vimrc          ",{}]],"29":[["~                   ",{"fg":4,"bold":true}],["|",{"inverse":true}],[" 30 ",{"fg":3,"bold":true}],["                          full-screen window.  When [year] is omitted, the                                      ",{"underline":true}],["|",{"inverse":true}],[" 30 ",{"fg":3,"bold":true}],["  .xsession-errors",{}]],"46":[["[Name] test.cpp      ",{"inverse":true}],[" NORMAL ",{"bold":true}],[" ",{}],["calendar.txt ",{"bold":true}],["                                                        unix │ utf-8 │ text │  13% ",{}],[" LN  30",{"bold":true}],[":1  ",{}],[" ",{"bold":true,"inverse":true}],[" ~/…/calendar-vim/doc>",{"bold":true}]],"47":[[":IndentLinesToggle                                                                                                                                              ",{}]]},"cursor":{"y":29,"visible":true}}],[0.01615,{"lines":{"29":[["~                   ",{"fg":4,"bold":true}],["|",{"inverse":true}],[" 30 ",{"fg":3,"bold":true}],["                          full-screen window.  When [year] is omitted, the                                      ",{}],["|",{"inverse":true}],[" 30 ",{"fg":3,"bold":true}],["  .xsession-errors",{}]],"30":[["~                   ",{"fg":4,"bold":true}],["|",{"inverse":true}],[" 31 ",{"fg":3,"bold":true}],["                          calendar will show the given month in the current                                     ",{"underline":true}],["|",{"inverse":true}],[" 31 ",{"fg":3,"bold":true}],["  anaconda-ks.cfg ",{}]],"46":[["[Name] test.cpp      ",{"inverse":true}],[" NORMAL ",{"bold":true}],[" ",{}],["calendar.txt ",{"bold":true}],["                                                        unix │ utf-8 │ text │  14% ",{}],[" LN  31",{"bold":true}],[":1  ",{}],[" ",{"bold":true,"inverse":true}],[" ~/…/calendar-vim/doc>",{"bold":true}]]},"cursor":{"y":30}}],[0.037066,{"lines":{"47":[[":IndentLinesToggle                                                                                                                                   j          ",{}]]},"cursor":{"visible":false}}],[0.00389,{"lines":{"30":[["~                   ",{"fg":4,"bold":true}],["|",{"inverse":true}],[" 31 ",{"fg":3,"bold":true}],["                          calendar will show the given month in the current                                     ",{}],["|",{"inverse":true}],[" 31 ",{"fg":3,"bold":true}],["  anaconda-ks.cfg ",{}]],"31":[["~                   ",{"fg":4,"bold":true}],["|",{"inverse":true}],[" 32 ",{"fg":3,"bold":true}],["                          year.  When both [year] and [month] are omitted, the                                  ",{"underline":true}],["|",{"inverse":true}],[" 32 ",{"fg":3,"bold":true}],["  initial-setup-ks",{}]],"46":[["[Name] test.cpp      ",{"inverse":true}],[" NORMAL ",{"bold":true}],[" ",{}],["calendar.txt ",{"bold":true}],["                                                        unix │ utf-8 │ text │  14% ",{}],[" LN  32",{"bold":true}],[":1  ",{}],[" ",{"bold":true,"inverse":true}],[" ~/…/calendar-vim/doc>",{"bold":true}]],"47":[[":IndentLinesToggle                                                                                                                                              ",{}]]},"cursor":{"y":31,"visible":true}}],[0.020544,{"lines":{"47":[[":IndentLinesToggle                                                                                                                                   j          ",{}]]},"cursor":{"visible":false}}],[0.006872,{"lines":{"31":[["~                   ",{"fg":4,"bold":true}],["|",{"inverse":true}],[" 32 ",{"fg":3,"bold":true}],["                          year.  When both [year] and [month] are omitted, the                                  ",{}],["|",{"inverse":true}],[" 32 ",{"fg":3,"bold":true}],["  initial-setup-ks",{}]],"32":[["~                   ",{"fg":4,"bold":true}],["|",{"inverse":true}],[" 33 ",{"fg":3,"bold":true}],["                          calendar will show the current month.                                                 ",{"underline":true}],["|",{"inverse":true}],[" 33 ",{"fg":3,"bold":true}],["  test.c          ",{}]],"46":[["[Name] test.cpp      ",{"inverse":true}],[" NORMAL ",{"bold":true}],[" ",{}],["calendar.txt ",{"bold":true}],["                                                        unix │ utf-8 │ text │  15% ",{}],[" LN  33",{"bold":true}],[":1  ",{}],[" ",{"bold":true,"inverse":true}],[" ~/…/calendar-vim/doc>",{"bold":true}]],"47":[[":IndentLinesToggle                                                                                                                                              ",{}]]},"cursor":{"y":32,"visible":true}}],[0.030281,{"lines":{"47":[[":IndentLinesToggle                                                                                                                                   j          ",{}]]},"cursor":{"visible":false}}],[0.002638,{"lines":{"32":[["~                   ",{"fg":4,"bold":true}],["|",{"inverse":true}],[" 33 ",{"fg":3,"bold":true}],["                          calendar will show the current month.                                                 ",{}],["|",{"inverse":true}],[" 33 ",{"fg":3,"bold":true}],["  test.c          ",{}]],"33":[["~                   ",{"fg":4,"bold":true}],["|",{"inverse":true}],[" 34 ",{"fg":3,"bold":true}],["                                                                                                                ",{"underline":true}],["|",{"inverse":true}],[" 34 ",{"fg":3,"bold":true}],["  test.cpp        ",{}]],"46":[["[Name] test.cpp      ",{"inverse":true}],[" NORMAL ",{"bold":true}],[" ",{}],["calendar.txt ",{"bold":true}],["                                                        unix │ utf-8 │ text │  15% ",{}],[" LN  34",{"bold":true}],[":1  ",{}],[" ",{"bold":true,"inverse":true}],[" ~/…/calendar-vim/doc>",{"bold":true}]],"47":[[":IndentLinesToggle                                                                                                                                              ",{}]]},"cursor":{"y":33,"visible":true}}],[0.02813,{"lines":{"47":[[":IndentLinesToggle                                                                                                                                   j          ",{}]]},"cursor":{"visible":false}}],[0.018798,{"lines":{"33":[["~                   ",{"fg":4,"bold":true}],["|",{"inverse":true}],[" 34 ",{"fg":3,"bold":true}],["                                                                                                                ",{}],["|",{"inverse":true}],[" 34 ",{"fg":3,"bold":true}],["  test.cpp        ",{}]],"34":[["~                   ",{"fg":4,"bold":true}],["|",{"inverse":true}],[" 35 ",{"fg":3,"bold":true}],["                                                *calendar-:CalendarVR*                                          ",{"underline":true}],["|",{"inverse":true}],[" 35 ",{"fg":3,"bold":true}],["  .test.cpp.swp   ",{}]],"46":[["[Name] test.cpp      ",{"inverse":true}],[" NORMAL ",{"bold":true}],[" ",{}],["calendar.txt ",{"bold":true}],["                                                        unix │ utf-8 │ text │  15% ",{}],[" LN  35",{"bold":true}],[":1  ",{}],[" ",{"bold":true,"inverse":true}],[" ~/…/calendar-vim/doc>",{"bold":true}]],"47":[[":IndentLinesToggle                                                                                                                                              ",{}]]},"cursor":{"y":34,"visible":true}}],[0.018164,{"lines":{"47":[[":IndentLinesToggle                                                                                                                                   j          ",{}]]},"cursor":{"visible":false}}],[0.00364,{"lines":{"34":[["~                   ",{"fg":4,"bold":true}],["|",{"inverse":true}],[" 35 ",{"fg":3,"bold":true}],["                                                *calendar-:CalendarVR*                                          ",{}],["|",{"inverse":true}],[" 35 ",{"fg":3,"bold":true}],["  .test.cpp.swp   ",{}]],"35":[["~                   ",{"fg":4,"bold":true}],["|",{"inverse":true}],[" 36 ",{"fg":3,"bold":true}],[":CalendarVR [[year] month]  Show calendar at this year and this month in a                                      ",{"underline":true}],["|",{"inverse":true}],["~                     ",{"fg":4,"bold":true}]],"46":[["[Name] test.cpp      ",{"inverse":true}],[" NORMAL ",{"bold":true}],[" ",{}],["calendar.txt ",{"bold":true}],["                                                        unix │ utf-8 │ text │  16% ",{}],[" LN  36",{"bold":true}],[":1  ",{}],[" ",{"bold":true,"inverse":true}],[" ~/…/calendar-vim/doc>",{"bold":true}]],"47":[[":IndentLinesToggle                                                                                                                                              ",{}]]},"cursor":{"y":35,"visible":true}}],[0.030978,{"lines":{"47":[[":IndentLinesToggle                                                                                                                                   j          ",{}]]},"cursor":{"visible":false}}],[0.005353,{"lines":{"35":[["~                   ",{"fg":4,"bold":true}],["|",{"inverse":true}],[" 36 ",{"fg":3,"bold":true}],[":CalendarVR [[year] month]  Show calendar at this year and this month in a                                      ",{}],["|",{"inverse":true}],["~                     ",{"fg":4,"bold":true}]],"36":[["~                   ",{"fg":4,"bold":true}],["|",{"inverse":true}],[" 37 ",{"fg":3,"bold":true}],["                          vertical split at the right site.  When [year] is                                     ",{"underline":true}],["|",{"inverse":true}],["~                     ",{"fg":4,"bold":true}]],"46":[["[Name] test.cpp      ",{"inverse":true}],[" NORMAL ",{"bold":true}],[" ",{}],["calendar.txt ",{"bold":true}],["                                                        unix │ utf-8 │ text │  16% ",{}],[" LN  37",{"bold":true}],[":1  ",{}],[" ",{"bold":true,"inverse":true}],[" ~/…/calendar-vim/doc>",{"bold":true}]],"47":[[":IndentLinesToggle                                                                                                                                              ",{}]]},"cursor":{"y":36,"visible":true}}],[0.025149,{"lines":{"47":[[":IndentLinesToggle                                                                                                                                   j          ",{}]]},"cursor":{"visible":false}}],[0.02495,{"lines":{"36":[["~                   ",{"fg":4,"bold":true}],["|",{"inverse":true}],[" 37 ",{"fg":3,"bold":true}],["                          vertical split at the right site.  When [year] is                                     ",{}],["|",{"inverse":true}],["~                     ",{"fg":4,"bold":true}]],"37":[["~                   ",{"fg":4,"bold":true}],["|",{"inverse":true}],[" 38 ",{"fg":3,"bold":true}],["                          omitted, the calendar will show the given month in                                    ",{"underline":true}],["|",{"inverse":true}],["~                     ",{"fg":4,"bold":true}]],"46":[["[Name] test.cpp      ",{"inverse":true}],[" NORMAL ",{"bold":true}],[" ",{}],["calendar.txt ",{"bold":true}],["                                                        unix │ utf-8 │ text │  17% ",{}],[" LN  38",{"bold":true}],[":1  ",{}],[" ",{"bold":true,"inverse":true}],[" ~/…/calendar-vim/doc>",{"bold":true}]],"47":[[":IndentLinesToggle                                                                                                                                              ",{}]]},"cursor":{"y":37,"visible":true}}],[0.016226,{"lines":{"37":[["~                   ",{"fg":4,"bold":true}],["|",{"inverse":true}],[" 38 ",{"fg":3,"bold":true}],["                          omitted, the calendar will show the given month in                                    ",{}],["|",{"inverse":true}],["~                     ",{"fg":4,"bold":true}]],"38":[["~                   ",{"fg":4,"bold":true}],["|",{"inverse":true}],[" 39 ",{"fg":3,"bold":true}],["                          the current year.  When both [year] and [month] are                                   ",{"underline":true}],["|",{"inverse":true}],["~                     ",{"fg":4,"bold":true}]],"46":[["[Name] test.cpp      ",{"inverse":true}],[" NORMAL ",{"bold":true}],[" ",{}],["calendar.txt ",{"bold":true}],["                                                        unix │ utf-8 │ text │  17% ",{}],[" LN  39",{"bold":true}],[":1  ",{}],[" ",{"bold":true,"inverse":true}],[" ~/…/calendar-vim/doc>",{"bold":true}]]},"cursor":{"y":38}}],[0.032359,{"lines":{"47":[[":IndentLinesToggle                                                                                                                                   j          ",{}]]},"cursor":{"visible":false}}],[0.003476,{"lines":{"38":[["~                   ",{"fg":4,"bold":true}],["|",{"inverse":true}],[" 39 ",{"fg":3,"bold":true}],["                          the current year.  When both [year] and [month] are                                   ",{}],["|",{"inverse":true}],["~                     ",{"fg":4,"bold":true}]],"39":[["~                   ",{"fg":4,"bold":true}],["|",{"inverse":true}],[" 40 ",{"fg":3,"bold":true}],["                          omitted, the calendar will show the current month.                                    ",{"underline":true}],["|",{"inverse":true}],["~                     ",{"fg":4,"bold":true}]],"46":[["[Name] test.cpp      ",{"inverse":true}],[" NORMAL ",{"bold":true}],[" ",{}],["calendar.txt ",{"bold":true}],["                                                        unix │ utf-8 │ text │  18% ",{}],[" LN  40",{"bold":true}],[":1  ",{}],[" ",{"bold":true,"inverse":true}],[" ~/…/calendar-vim/doc>",{"bold":true}]],"47":[[":IndentLinesToggle                                                                                                                                              ",{}]]},"cursor":{"y":39,"visible":true}}],[0.025095,{"lines":{"47":[[":IndentLinesToggle                                                                                                                                   j          ",{}]]},"cursor":{"visible":false}}],[0.017787,{"lines":{"39":[["~                   ",{"fg":4,"bold":true}],["|",{"inverse":true}],[" 40 ",{"fg":3,"bold":true}],["                          omitted, the calendar will show the current month.                                    ",{}],["|",{"inverse":true}],["~                     ",{"fg":4,"bold":true}]],"40":[["~                   ",{"fg":4,"bold":true}],["|",{"inverse":true}],[" 41 ",{"fg":3,"bold":true}],["                                                                                                                ",{"underline":true}],["|",{"inverse":true}],["~                     ",{"fg":4,"bold":true}]],"46":[["[Name] test.cpp      ",{"inverse":true}],[" NORMAL ",{"bold":true}],[" ",{}],["calendar.txt ",{"bold":true}],["                                                        unix │ utf-8 │ text │  18% ",{}],[" LN  41",{"bold":true}],[":1  ",{}],[" ",{"bold":true,"inverse":true}],[" ~/…/calendar-vim/doc>",{"bold":true}]],"47":[[":IndentLinesToggle                                                                                                                                              ",{}]]},"cursor":{"y":40,"visible":true}}],[0.019592,{"lines":{"47":[[":IndentLinesToggle                                                                                                                                   j          ",{}]]},"cursor":{"visible":false}}],[0.002724,{"lines":{"40":[["~                   ",{"fg":4,"bold":true}],["|",{"inverse":true}],[" 41 ",{"fg":3,"bold":true}],["                                                                                                                ",{}],["|",{"inverse":true}],["~                     ",{"fg":4,"bold":true}]],"41":[["~                   ",{"fg":4,"bold":true}],["|",{"inverse":true}],[" 42 ",{"fg":3,"bold":true}],["MAPPINGS                                        *calendar-mappings*                                             ",{"underline":true}],["|",{"inverse":true}],["~                     ",{"fg":4,"bold":true}]],"46":[["[Name] test.cpp      ",{"inverse":true}],[" NORMAL ",{"bold":true}],[" ",{}],["calendar.txt ",{"bold":true}],["                                                        unix │ utf-8 │ text │  19% ",{}],[" LN  42",{"bold":true}],[":1  ",{}],[" ",{"bold":true,"inverse":true}],[" ~/…/calendar-vim/doc>",{"bold":true}]],"47":[[":IndentLinesToggle                                                                                                                                              ",{}]]},"cursor":{"y":41,"visible":true}}],[0.031257,{"lines":{"47":[[":IndentLinesToggle                                                                                                                                   j          ",{}]]},"cursor":{"visible":false}}],[0.002898,{"lines":{"41":[["~                   ",{"fg":4,"bold":true}],["|",{"inverse":true}],[" 42 ",{"fg":3,"bold":true}],["MAPPINGS                                        *calendar-mappings*                                             ",{}],["|",{"inverse":true}],["~                     ",{"fg":4,"bold":true}]],"42":[["~                   ",{"fg":4,"bold":true}],["|",{"inverse":true}],[" 43 ",{"fg":3,"bold":true}],["                                                                                                                ",{"underline":true}],["|",{"inverse":true}],["~                     ",{"fg":4,"bold":true}]],"46":[["[Name] test.cpp      ",{"inverse":true}],[" NORMAL ",{"bold":true}],[" ",{}],["calendar.txt ",{"bold":true}],["                                                        unix │ utf-8 │ text │  19% ",{}],[" LN  43",{"bold":true}],[":1  ",{}],[" ",{"bold":true,"inverse":true}],[" ~/…/calendar-vim/doc>",{"bold":true}]],"47":[[":IndentLinesToggle                                                                                                                                              ",{}]]},"cursor":{"y":42,"visible":true}}],[0.027639,{"lines":{"47":[[":IndentLinesToggle                                                                                                                                   j          ",{}]]},"cursor":{"visible":false}}],[0.018291,{"lines":{"42":[["~                   ",{"fg":4,"bold":true}],["|",{"inverse":true}],[" 43 ",{"fg":3,"bold":true}],["                                                                                                                ",{}],["|",{"inverse":true}],["~                     ",{"fg":4,"bold":true}]],"43":[["~                   ",{"fg":4,"bold":true}],["|",{"inverse":true}],[" 44 ",{"fg":3,"bold":true}],["calendar.vim makes the following normal mode mappings available:                                                ",{"underline":true}],["|",{"inverse":true}],["~                     ",{"fg":4,"bold":true}]],"46":[["[Name] test.cpp      ",{"inverse":true}],[" NORMAL ",{"bold":true}],[" ",{}],["calendar.txt ",{"bold":true}],["                                                        unix │ utf-8 │ text │  20% ",{}],[" LN  44",{"bold":true}],[":1  ",{}],[" ",{"bold":true,"inverse":true}],[" ~/…/calendar-vim/doc>",{"bold":true}]],"47":[[":IndentLinesToggle                                                                                                                                              ",{}]]},"cursor":{"y":43,"visible":true}}],[0.019188,{"lines":{"47":[[":IndentLinesToggle                                                                                                                                   j          ",{}]]},"cursor":{"visible":false}}],[0.002736,{"lines":{"43":[["~                   ",{"fg":4,"bold":true}],["|",{"inverse":true}],[" 44 ",{"fg":3,"bold":true}],["calendar.vim makes the following normal mode mappings available:                                                ",{}],["|",{"inverse":true}],["~                     ",{"fg":4,"bold":true}]],"44":[["~                   ",{"fg":4,"bold":true}],["|",{"inverse":true}],[" 45 ",{"fg":3,"bold":true}],["                                                                                                                ",{"underline":true}],["|",{"inverse":true}],["~                     ",{"fg":4,"bold":true}]],"46":[["[Name] test.cpp      ",{"inverse":true}],[" NORMAL ",{"bold":true}],[" ",{}],["calendar.txt ",{"bold":true}],["                                                        unix │ utf-8 │ text │  20% ",{}],[" LN  45",{"bold":true}],[":1  ",{}],[" ",{"bold":true,"inverse":true}],[" ~/…/calendar-vim/doc>",{"bold":true}]],"47":[[":IndentLinesToggle                                                                                                                                              ",{}]]},"cursor":{"y":44,"visible":true}}],[0.031262,{"lines":{"47":[[":IndentLinesToggle                                                                                                                                   j          ",{}]]},"cursor":{"visible":false}}],[0.003411,{"lines":{"44":[["~                   ",{"fg":4,"bold":true}],["|",{"inverse":true}],[" 45 ",{"fg":3,"bold":true}],["                                                                                                                ",{}],["|",{"inverse":true}],["~                     ",{"fg":4,"bold":true}]],"45":[["~                   ",{"fg":4,"bold":true}],["|",{"inverse":true}],[" 46 ",{"fg":3,"bold":true}],["                                                *calendar-cal*                                                  ",{"underline":true}],["|",{"inverse":true}],["~                     ",{"fg":4,"bold":true}]],"46":[["[Name] test.cpp      ",{"inverse":true}],[" NORMAL ",{"bold":true}],[" ",{}],["calendar.txt ",{"bold":true}],["                                                        unix │ utf-8 │ text │  20% ",{}],[" LN  46",{"bold":true}],[":1  ",{}],[" ",{"bold":true,"inverse":true}],[" ~/…/calendar-vim/doc>",{"bold":true}]],"47":[[":IndentLinesToggle                                                                                                                                              ",{}]]},"cursor":{"y":45,"visible":true}}],[0.027158,{"lines":{"47":[[":IndentLinesToggle                                                                                                                                   j          ",{}]]},"cursor":{"visible":false}}],[0.001699,{"lines":{"0":[["\" Press <F1> for hel",{"fg":6,"bold":true}],["|",{"inverse":true}],["  2 ",{"fg":3,"bold":true}],["                                                                                                                ",{}],["|",{"inverse":true}],["  1 ",{"fg":3,"bold":true}],["\" Press ? for help",{"fg":5,"bold":true}]],"1":[["                    ",{}],["|",{"inverse":true}],["  3 ",{"fg":3,"bold":true}],["Author:  Yasuhiro Matsumoto <mattn.jp@gmail.com>                                                                ",{}],["|",{"inverse":true}],["  2 ",{"fg":3,"bold":true}],["                  ",{}]],"2":[["▼",{"fg":3,"bold":true}],[" First",{"fg":5,"bold":true}],[" : ",{}],["struct",{"fg":2,"bold":true}],["    ",{}],["|",{"inverse":true}],["  4 ",{"fg":3,"bold":true}],["                                                                                                                ",{}],["|",{"inverse":true}],["  3 ",{"fg":3,"bold":true}],[".. (up a dir)",{"fg":6,"bold":true}],["     ",{}]],"3":[["    [prototypes]",{"fg":6,"bold":true}],["    ",{}],["|",{"inverse":true}],["  5 ",{"fg":3,"bold":true}],["INTRODUCTION                                    *calendar*                                                      ",{}],["|",{"inverse":true}],["  4 /root/",{"fg":3,"bold":true}],["            ",{}]],"4":[["   ",{}],["+",{"fg":2,"bold":true}],["FirstRun(void)  ",{}],["|",{"inverse":true}],["  6 ",{"fg":3,"bold":true}],["                                                                                                                ",{}],["|",{"inverse":true}],["  5 ",{"fg":3,"bold":true}],["▸ .asciinema/",{"fg":6,"bold":true}],["     ",{}]],"5":[["   ",{}],["+",{"fg":2,"bold":true}],["FirstRun2(void) ",{}],["|",{"inverse":true}],["  7 ",{"fg":3,"bold":true}],["This script creates a calendar window in vim.  It does not rely on any                                          ",{}],["|",{"inverse":true}],["  6 ",{"fg":3,"bold":true}],["▸ .cache/",{"fg":6,"bold":true}],["         ",{}]],"6":[["                    ",{}],["|",{"inverse":true}],["  8 ",{"fg":3,"bold":true}],["external program, such as cal, etc.                                                                             ",{}],["|",{"inverse":true}],["  7 ",{"fg":3,"bold":true}],["▸ .config/",{"fg":6,"bold":true}],["        ",{}]],"7":[["▼",{"fg":3,"bold":true}],[" Last",{"fg":5,"bold":true}],[" : ",{}],["struct",{"fg":2,"bold":true}],["     ",{}],["|",{"inverse":true}],["  9 ",{"fg":3,"bold":true}],["                                                                                                                ",{}],["|",{"inverse":true}],["  8 ",{"fg":3,"bold":true}],["▸ .dbus/",{"fg":6,"bold":true}],["          ",{}]],"8":[["    [functions]",{"fg":6,"bold":true}],["     ",{}],["|",{"inverse":true}],[" 10 ",{"fg":3,"bold":true}],["COMMANDS                                        *calendar-commands*                                             ",{}],["|",{"inverse":true}],["  9 ",{"fg":3,"bold":true}],["▸ .gnupg/",{"fg":6,"bold":true}],["         ",{}]],"9":[["   ",{}],["+",{"fg":2,"bold":true}],["FirstRun(void)  ",{}],["|",{"inverse":true}],[" 11 ",{"fg":3,"bold":true}],["                                                                                                                ",{}],["|",{"inverse":true}],[" 10 ",{"fg":3,"bold":true}],["▸ .kde/",{"fg":6,"bold":true}],["           ",{}]],"10":[["   ",{}],["+",{"fg":2,"bold":true}],["FirstRun2(void) ",{}],["|",{"inverse":true}],[" 12 ",{"fg":3,"bold":true}],["calendar.vim makes the following commands available:                                                            ",{}],["|",{"inverse":true}],[" 11 ",{"fg":3,"bold":true}],["▸ .local/",{"fg":6,"bold":true}],["         ",{}]],"11":[["   ",{}],["+",{"fg":2,"bold":true}],["~Last()         ",{}],["|",{"inverse":true}],[" 13 ",{"fg":3,"bold":true}],["                                                                                                                ",{}],["|",{"inverse":true}],[" 12 ",{"fg":3,"bold":true}],["▸ .pki/",{"fg":6,"bold":true}],["           ",{}]],"12":[["   ",{}],["+",{"fg":2,"bold":true}],["SecondRun(void) ",{}],["|",{"inverse":true}],[" 14 ",{"fg":3,"bold":true}],["                                                *calendar-:Calendar*                                            ",{}],["|",{"inverse":true}],[" 13 ",{"fg":3,"bold":true}],["▸ .ssh/",{"fg":6,"bold":true}],["           ",{}]],"13":[["   ",{}],["+",{"fg":2,"bold":true}],["SecondRun2(void)",{}],["|",{"inverse":true}],[" 15 ",{"fg":3,"bold":true}],[":Calendar [[year] month]  Show calendar at this year and this month in a                                        ",{}],["|",{"inverse":true}],[" 14 ",{"fg":3,"bold":true}],["▸ .vim/",{"fg":6,"bold":true}],["           ",{}]],"14":[["                    ",{}],["|",{"inverse":true}],[" 16 ",{"fg":3,"bold":true}],["                          vertical split.  When [year] is omitted, the                                          ",{}],["|",{"inverse":true}],[" 15 ",{"fg":3,"bold":true}],["▸ diary/",{"fg":6,"bold":true}],["          ",{}]],"47":[[":IndentLinesToggle                                                                                                                                              ",{}]]},"cursor":{"x":120,"y":14}}],[0.02929,{"lines":{"15":[["▼",{"fg":3,"bold":true}],[" Second",{"fg":5,"bold":true}],[" : ",{}],["struct",{"fg":2,"bold":true}],["   ",{}],["|",{"inverse":true}],[" 17 ",{"fg":3,"bold":true}],["                          calendar will show the given month in the current                                     ",{}],["|",{"inverse":true}],[" 16 ",{"fg":3,"bold":true}],["▸ temp/",{"fg":6,"bold":true}],["           ",{}]],"16":[["    [prototypes]",{"fg":6,"bold":true}],["    ",{}],["|",{"inverse":true}],[" 18 ",{"fg":3,"bold":true}],["                          year.  When both [year] and [month] are omitted, the                                  ",{}],["|",{"inverse":true}],[" 17 ",{"fg":3,"bold":true}],["  .bash_history   ",{}]],"17":[["   ",{}],["+",{"fg":2,"bold":true}],["SecondRun(void) ",{}],["|",{"inverse":true}],[" 19 ",{"fg":3,"bold":true}],["                          calendar will show the current month.                                                 ",{}],["|",{"inverse":true}],[" 18 ",{"fg":3,"bold":true}],["  .bash_logout    ",{}]],"18":[["   ",{}],["+",{"fg":2,"bold":true}],["SecondRun2(void)",{}],["|",{"inverse":true}],[" 20 ",{"fg":3,"bold":true}],["                                                                                                                ",{}],["|",{"inverse":true}],[" 19 ",{"fg":3,"bold":true}],["  .bash_profile   ",{"underline":true}]],"19":[["                    ",{}],["|",{"inverse":true}],[" 21 ",{"fg":3,"bold":true}],["                                                *calendar-:CalendarH*                                           ",{}],["|",{"inverse":true}],[" 20 ",{"fg":3,"bold":true}],["  .bashrc         ",{}]],"20":[["▼",{"fg":3,"bold":true}],[" ",{}],["functions",{"fg":6,"bold":true}],["         ",{}],["|",{"inverse":true}],[" 22 ",{"fg":3,"bold":true}],[":CalendarH [[year] month] Show calendar at this year and this month in a                                        ",{}],["|",{"inverse":true}],[" 21 ",{"fg":3,"bold":true}],["  .cshrc          ",{}]],"21":[["    main(int argc, c",{"underline":true}],["|",{"inverse":true}],[" 23 ",{"fg":3,"bold":true}],["                          horizontal split.  When [year] is omitted, the                                        ",{}],["|",{"inverse":true}],[" 22 ",{"fg":3,"bold":true}],["  .dmrc           ",{}]],"22":[["~                   ",{"fg":4,"bold":true}],["|",{"inverse":true}],[" 24 ",{"fg":3,"bold":true}],["                          horizontal split.  When [year] is omitted, the                                        ",{}],["|",{"inverse":true}],[" 23 ",{"fg":3,"bold":true}],["  .esd_auth       ",{}]]},"cursor":{"x":48,"y":22}}],[0.015078,{"lines":{"0":[["\" Press <F1> for hel",{"fg":6,"bold":true}],["|",{"inverse":true}],["  3 ",{"fg":3,"bold":true}],["Author:  Yasuhiro Matsumoto <mattn.jp@gmail.com>                                                                ",{}],["|",{"inverse":true}],["  1 ",{"fg":3,"bold":true}],["\" Press ? for help",{"fg":5,"bold":true}]],"1":[["                    ",{}],["|",{"inverse":true}],["  4 ",{"fg":3,"bold":true}],["                                                                                                                ",{}],["|",{"inverse":true}],["  2 ",{"fg":3,"bold":true}],["                  ",{}]],"2":[["▼",{"fg":3,"bold":true}],[" First",{"fg":5,"bold":true}],[" : ",{}],["struct",{"fg":2,"bold":true}],["    ",{}],["|",{"inverse":true}],["  5 ",{"fg":3,"bold":true}],["INTRODUCTION                                    *calendar*                                                      ",{}],["|",{"inverse":true}],["  3 ",{"fg":3,"bold":true}],[".. (up a dir)",{"fg":6,"bold":true}],["     ",{}]],"3":[["    [prototypes]",{"fg":6,"bold":true}],["    ",{}],["|",{"inverse":true}],["  6 ",{"fg":3,"bold":true}],["                                                                                                                ",{}],["|",{"inverse":true}],["  4 /root/",{"fg":3,"bold":true}],["            ",{}]],"4":[["   ",{}],["+",{"fg":2,"bold":true}],["FirstRun(void)  ",{}],["|",{"inverse":true}],["  7 ",{"fg":3,"bold":true}],["This script creates a calendar window in vim.  It does not rely on any                                          ",{}],["|",{"inverse":true}],["  5 ",{"fg":3,"bold":true}],["▸ .asciinema/",{"fg":6,"bold":true}],["     ",{}]],"5":[["   ",{}],["+",{"fg":2,"bold":true}],["FirstRun2(void) ",{}],["|",{"inverse":true}],["  8 ",{"fg":3,"bold":true}],["external program, such as cal, etc.                                                                             ",{}],["|",{"inverse":true}],["  6 ",{"fg":3,"bold":true}],["▸ .cache/",{"fg":6,"bold":true}],["         ",{}]],"6":[["                    ",{}],["|",{"inverse":true}],["  9 ",{"fg":3,"bold":true}],["                                                                                                                ",{}],["|",{"inverse":true}],["  7 ",{"fg":3,"bold":true}],["▸ .config/",{"fg":6,"bold":true}],["        ",{}]],"7":[["▼",{"fg":3,"bold":true}],[" Last",{"fg":5,"bold":true}],[" : ",{}],["struct",{"fg":2,"bold":true}],["     ",{}],["|",{"inverse":true}],[" 10 ",{"fg":3,"bold":true}],["COMMANDS                                        *calendar-commands*                                             ",{}],["|",{"inverse":true}],["  8 ",{"fg":3,"bold":true}],["▸ .dbus/",{"fg":6,"bold":true}],["          ",{}]],"8":[["    [functions]",{"fg":6,"bold":true}],["     ",{}],["|",{"inverse":true}],[" 11 ",{"fg":3,"bold":true}],["                                                                                                                ",{}],["|",{"inverse":true}],["  9 ",{"fg":3,"bold":true}],["▸ .gnupg/",{"fg":6,"bold":true}],["         ",{}]],"9":[["   ",{}],["+",{"fg":2,"bold":true}],["FirstRun(void)  ",{}],["|",{"inverse":true}],[" 12 ",{"fg":3,"bold":true}],["calendar.vim makes the following commands available:                                                            ",{}],["|",{"inverse":true}],[" 10 ",{"fg":3,"bold":true}],["▸ .kde/",{"fg":6,"bold":true}],["           ",{}]],"10":[["   ",{}],["+",{"fg":2,"bold":true}],["FirstRun2(void) ",{}],["|",{"inverse":true}],[" 13 ",{"fg":3,"bold":true}],["                                                                                                                ",{}],["|",{"inverse":true}],[" 11 ",{"fg":3,"bold":true}],["▸ .local/",{"fg":6,"bold":true}],["         ",{}]],"11":[["   ",{}],["+",{"fg":2,"bold":true}],["~Last()         ",{}],["|",{"inverse":true}],[" 14 ",{"fg":3,"bold":true}],["                                                *calendar-:Calendar*                                            ",{}],["|",{"inverse":true}],[" 12 ",{"fg":3,"bold":true}],["▸ .pki/",{"fg":6,"bold":true}],["           ",{}]],"12":[["   ",{}],["+",{"fg":2,"bold":true}],["SecondRun(void) ",{}],["|",{"inverse":true}],[" 15 ",{"fg":3,"bold":true}],[":Calendar [[year] month]  Show calendar at this year and this month in a                                        ",{}],["|",{"inverse":true}],[" 13 ",{"fg":3,"bold":true}],["▸ .ssh/",{"fg":6,"bold":true}],["           ",{}]],"13":[["   ",{}],["+",{"fg":2,"bold":true}],["SecondRun2(void)",{}],["|",{"inverse":true}],[" 16 ",{"fg":3,"bold":true}],["                          vertical split.  When [year] is omitted, the                                          ",{}],["|",{"inverse":true}],[" 14 ",{"fg":3,"bold":true}],["▸ .vim/",{"fg":6,"bold":true}],["           ",{}]],"14":[["                    ",{}],["|",{"inverse":true}],[" 17 ",{"fg":3,"bold":true}],["                          calendar will show the given month in the current                                     ",{}],["|",{"inverse":true}],[" 15 ",{"fg":3,"bold":true}],["▸ diary/",{"fg":6,"bold":true}],["          ",{}]],"15":[["▼",{"fg":3,"bold":true}],[" Second",{"fg":5,"bold":true}],[" : ",{}],["struct",{"fg":2,"bold":true}],["   ",{}],["|",{"inverse":true}],[" 18 ",{"fg":3,"bold":true}],["                          year.  When both [year] and [month] are omitted, the                                  ",{}],["|",{"inverse":true}],[" 16 ",{"fg":3,"bold":true}],["▸ temp/",{"fg":6,"bold":true}],["           ",{}]],"16":[["    [prototypes]",{"fg":6,"bold":true}],["    ",{}],["|",{"inverse":true}],[" 19 ",{"fg":3,"bold":true}],["                          calendar will show the current month.                                                 ",{}],["|",{"inverse":true}],[" 17 ",{"fg":3,"bold":true}],["  .bash_history   ",{}]],"17":[["   ",{}],["+",{"fg":2,"bold":true}],["SecondRun(void) ",{}],["|",{"inverse":true}],[" 20 ",{"fg":3,"bold":true}],["                                                                                                                ",{}],["|",{"inverse":true}],[" 18 ",{"fg":3,"bold":true}],["  .bash_logout    ",{}]],"18":[["   ",{}],["+",{"fg":2,"bold":true}],["SecondRun2(void)",{}],["|",{"inverse":true}],[" 21 ",{"fg":3,"bold":true}],["                                                *calendar-:CalendarH*                                           ",{}],["|",{"inverse":true}],[" 19 ",{"fg":3,"bold":true}],["  .bash_profile   ",{"underline":true}]],"19":[["                    ",{}],["|",{"inverse":true}],[" 22 ",{"fg":3,"bold":true}],[":CalendarH [[year] month] Show calendar at this year and this month in a                                        ",{}],["|",{"inverse":true}],[" 20 ",{"fg":3,"bold":true}],["  .bashrc         ",{}]],"20":[["▼",{"fg":3,"bold":true}],[" ",{}],["functions",{"fg":6,"bold":true}],["         ",{}],["|",{"inverse":true}],[" 23 ",{"fg":3,"bold":true}],["                          horizontal split.  When [year] is omitted, the                                        ",{}],["|",{"inverse":true}],[" 21 ",{"fg":3,"bold":true}],["  .cshrc          ",{}]],"21":[["    main(int argc, c",{"underline":true}],["|",{"inverse":true}],[" 24 ",{"fg":3,"bold":true}],["                          calendar will show the given month in the current                                     ",{}],["|",{"inverse":true}],[" 22 ",{"fg":3,"bold":true}],["  .dmrc           ",{}]],"22":[["~                   ",{"fg":4,"bold":true}],["|",{"inverse":true}],[" 25 ",{"fg":3,"bold":true}],["                          year.  When both [year] and [month] are omitted, the                                  ",{}],["|",{"inverse":true}],[" 23 ",{"fg":3,"bold":true}],["  .esd_auth       ",{}]],"23":[["~                   ",{"fg":4,"bold":true}],["|",{"inverse":true}],[" 26 ",{"fg":3,"bold":true}],["                          calendar will show the current month.                                                 ",{}],["|",{"inverse":true}],[" 24 ",{"fg":3,"bold":true}],["  .gtkrc-2.0      ",{}]],"24":[["~                   ",{"fg":4,"bold":true}],["|",{"inverse":true}],[" 27 ",{"fg":3,"bold":true}],["                                                                                                                ",{}],["|",{"inverse":true}],[" 25 ",{"fg":3,"bold":true}],["  .gtkrc-2.0-kde4 ",{}]],"25":[["~                   ",{"fg":4,"bold":true}],["|",{"inverse":true}],[" 28 ",{"fg":3,"bold":true}],["                                                *calendar-:CalendarT*                                           ",{}],["|",{"inverse":true}],[" 26 ",{"fg":3,"bold":true}],["  .lesshst        ",{}]],"26":[["~                   ",{"fg":4,"bold":true}],["|",{"inverse":true}],[" 29 ",{"fg":3,"bold":true}],[":CalendarT [[year] month] Show calendar at this year and this month in a                                        ",{}],["|",{"inverse":true}],[" 27 ",{"fg":3,"bold":true}],["  .tcshrc         ",{}]],"27":[["~                   ",{"fg":4,"bold":true}],["|",{"inverse":true}],[" 30 ",{"fg":3,"bold":true}],["                          full-screen window.  When [year] is omitted, the                                      ",{}],["|",{"inverse":true}],[" 28 ",{"fg":3,"bold":true}],["  .viminfo        ",{}]],"28":[["~                   ",{"fg":4,"bold":true}],["|",{"inverse":true}],[" 31 ",{"fg":3,"bold":true}],["                          calendar will show the given month in the current                                     ",{}],["|",{"inverse":true}],[" 29 ",{"fg":3,"bold":true}],["  .vimrc          ",{}]],"29":[["~                   ",{"fg":4,"bold":true}],["|",{"inverse":true}],[" 32 ",{"fg":3,"bold":true}],["                          year.  When both [year] and [month] are omitted, the                                  ",{}],["|",{"inverse":true}],[" 30 ",{"fg":3,"bold":true}],["  .xsession-errors",{}]],"30":[["~                   ",{"fg":4,"bold":true}],["|",{"inverse":true}],[" 33 ",{"fg":3,"bold":true}],["                          calendar will show the current month.                                                 ",{}],["|",{"inverse":true}],[" 31 ",{"fg":3,"bold":true}],["  anaconda-ks.cfg ",{}]],"31":[["~                   ",{"fg":4,"bold":true}],["|",{"inverse":true}],[" 34 ",{"fg":3,"bold":true}],["                                                                                                                ",{}],["|",{"inverse":true}],[" 32 ",{"fg":3,"bold":true}],["  initial-setup-ks",{}]],"32":[["~                   ",{"fg":4,"bold":true}],["|",{"inverse":true}],[" 35 ",{"fg":3,"bold":true}],["                                                *calendar-:CalendarVR*                                          ",{}],["|",{"inverse":true}],[" 33 ",{"fg":3,"bold":true}],["  test.c          ",{}]],"33":[["~                   ",{"fg":4,"bold":true}],["|",{"inverse":true}],[" 36 ",{"fg":3,"bold":true}],[":CalendarVR [[year] month]  Show calendar at this year and this month in a                                      ",{}],["|",{"inverse":true}],[" 34 ",{"fg":3,"bold":true}],["  test.cpp        ",{}]],"34":[["~                   ",{"fg":4,"bold":true}],["|",{"inverse":true}],[" 37 ",{"fg":3,"bold":true}],["                          vertical split at the right site.  When [year] is                                     ",{}],["|",{"inverse":true}],[" 35 ",{"fg":3,"bold":true}],["  .test.cpp.swp   ",{}]],"35":[["~                   ",{"fg":4,"bold":true}],["|",{"inverse":true}],[" 38 ",{"fg":3,"bold":true}],["                          omitted, the calendar will show the given month in                                    ",{}],["|",{"inverse":true}],["~                     ",{"fg":4,"bold":true}]],"36":[["~                   ",{"fg":4,"bold":true}],["|",{"inverse":true}],[" 39 ",{"fg":3,"bold":true}],["                          the current year.  When both [year] and [month] are                                   ",{}],["|",{"inverse":true}],["~                     ",{"fg":4,"bold":true}]],"37":[["~                   ",{"fg":4,"bold":true}],["|",{"inverse":true}],[" 40 ",{"fg":3,"bold":true}],["                          omitted, the calendar will show the current month.                                    ",{}],["|",{"inverse":true}],["~                     ",{"fg":4,"bold":true}]],"38":[["~                   ",{"fg":4,"bold":true}],["|",{"inverse":true}],[" 41 ",{"fg":3,"bold":true}],["                                                                                                                ",{}],["|",{"inverse":true}],["~                     ",{"fg":4,"bold":true}]],"39":[["~                   ",{"fg":4,"bold":true}],["|",{"inverse":true}],[" 42 ",{"fg":3,"bold":true}],["MAPPINGS                                        *calendar-mappings*                                             ",{}],["|",{"inverse":true}],["~                     ",{"fg":4,"bold":true}]],"40":[["~                   ",{"fg":4,"bold":true}],["|",{"inverse":true}],[" 43 ",{"fg":3,"bold":true}],["                                                                                                                ",{}],["|",{"inverse":true}],["~                     ",{"fg":4,"bold":true}]],"41":[["~                   ",{"fg":4,"bold":true}],["|",{"inverse":true}],[" 44 ",{"fg":3,"bold":true}],["calendar.vim makes the following normal mode mappings available:                                                ",{}],["|",{"inverse":true}],["~                     ",{"fg":4,"bold":true}]],"42":[["~                   ",{"fg":4,"bold":true}],["|",{"inverse":true}],[" 45 ",{"fg":3,"bold":true}],["                                                                                                                ",{}],["|",{"inverse":true}],["~                     ",{"fg":4,"bold":true}]],"43":[["~                   ",{"fg":4,"bold":true}],["|",{"inverse":true}],[" 46 ",{"fg":3,"bold":true}],["                                                *calendar-cal*                                                  ",{}],["|",{"inverse":true}],["~                     ",{"fg":4,"bold":true}]],"44":[["~                   ",{"fg":4,"bold":true}],["|",{"inverse":true}],[" 47 ",{"fg":3,"bold":true}],["<LocalLeader>cal          Brings up the calendar in a vertical split.                                           ",{}],["|",{"inverse":true}],["~                     ",{"fg":4,"bold":true}]],"45":[["~                   ",{"fg":4,"bold":true}],["|",{"inverse":true}],[" 48 ",{"fg":3,"bold":true}],["                          Equivalent to calling |:Calendar|.                                                    ",{"underline":true}],["|",{"inverse":true}],["~                     ",{"fg":4,"bold":true}]],"46":[["[Name] test.cpp      ",{"inverse":true}],[" NORMAL ",{"bold":true}],[" ",{}],["calendar.txt ",{"bold":true}],["                                                        unix │ utf-8 │ text │  21% ",{}],[" LN  48",{"bold":true}],[":1  ",{}],[" ",{"bold":true,"inverse":true}],[" ~/…/calendar-vim/doc>",{"bold":true}]],"47":[["                                                                                                                                                                ",{}]]},"cursor":{"x":25,"y":45,"visible":true}}],[0.046585,{"lines":{"0":[["\" Press <F1> for hel",{"fg":6,"bold":true}],["|",{"inverse":true}],["  4 ",{"fg":3,"bold":true}],["                                                                                                                ",{}],["|",{"inverse":true}],["  1 ",{"fg":3,"bold":true}],["\" Press ? for help",{"fg":5,"bold":true}]],"1":[["                    ",{}],["|",{"inverse":true}],["  5 ",{"fg":3,"bold":true}],["INTRODUCTION                                    *calendar*                                                      ",{}],["|",{"inverse":true}],["  2 ",{"fg":3,"bold":true}],["                  ",{}]],"2":[["▼",{"fg":3,"bold":true}],[" First",{"fg":5,"bold":true}],[" : ",{}],["struct",{"fg":2,"bold":true}],["    ",{}],["|",{"inverse":true}],["  6 ",{"fg":3,"bold":true}],["                                                                                                                ",{}],["|",{"inverse":true}],["  3 ",{"fg":3,"bold":true}],[".. (up a dir)",{"fg":6,"bold":true}],["     ",{}]],"3":[["    [prototypes]",{"fg":6,"bold":true}],["    ",{}],["|",{"inverse":true}],["  7 ",{"fg":3,"bold":true}],["This script creates a calendar window in vim.  It does not rely on any                                          ",{}],["|",{"inverse":true}],["  4 /root/",{"fg":3,"bold":true}],["            ",{}]],"4":[["   ",{}],["+",{"fg":2,"bold":true}],["FirstRun(void)  ",{}],["|",{"inverse":true}],["  8 ",{"fg":3,"bold":true}],["external program, such as cal, etc.                                                                             ",{}],["|",{"inverse":true}],["  5 ",{"fg":3,"bold":true}],["▸ .asciinema/",{"fg":6,"bold":true}],["     ",{}]],"5":[["   ",{}],["+",{"fg":2,"bold":true}],["FirstRun2(void) ",{}],["|",{"inverse":true}],["  9 ",{"fg":3,"bold":true}],["                                                                                                                ",{}],["|",{"inverse":true}],["  6 ",{"fg":3,"bold":true}],["▸ .cache/",{"fg":6,"bold":true}],["         ",{}]],"6":[["                    ",{}],["|",{"inverse":true}],[" 10 ",{"fg":3,"bold":true}],["COMMANDS                                        *calendar-commands*                                             ",{}],["|",{"inverse":true}],["  7 ",{"fg":3,"bold":true}],["▸ .config/",{"fg":6,"bold":true}],["        ",{}]],"7":[["▼",{"fg":3,"bold":true}],[" Last",{"fg":5,"bold":true}],[" : ",{}],["struct",{"fg":2,"bold":true}],["     ",{}],["|",{"inverse":true}],[" 11 ",{"fg":3,"bold":true}],["COMMANDS                                        *calendar-commands*                                             ",{}],["|",{"inverse":true}],["  8 ",{"fg":3,"bold":true}],["▸ .dbus/",{"fg":6,"bold":true}],["          ",{}]]},"cursor":{"y":7,"visible":false}}],[0.016602,{"lines":{"0":[["\" Press <F1> for hel",{"fg":6,"bold":true}],["|",{"inverse":true}],["  5 ",{"fg":3,"bold":true}],["INTRODUCTION                                    *calendar*                                                      ",{}],["|",{"inverse":true}],["  1 ",{"fg":3,"bold":true}],["\" Press ? for help",{"fg":5,"bold":true}]],"1":[["                    ",{}],["|",{"inverse":true}],["  6 ",{"fg":3,"bold":true}],["                                                                                                                ",{}],["|",{"inverse":true}],["  2 ",{"fg":3,"bold":true}],["                  ",{}]],"2":[["▼",{"fg":3,"bold":true}],[" First",{"fg":5,"bold":true}],[" : ",{}],["struct",{"fg":2,"bold":true}],["    ",{}],["|",{"inverse":true}],["  7 ",{"fg":3,"bold":true}],["This script creates a calendar window in vim.  It does not rely on any                                          ",{}],["|",{"inverse":true}],["  3 ",{"fg":3,"bold":true}],[".. (up a dir)",{"fg":6,"bold":true}],["     ",{}]],"3":[["    [prototypes]",{"fg":6,"bold":true}],["    ",{}],["|",{"inverse":true}],["  8 ",{"fg":3,"bold":true}],["external program, such as cal, etc.                                                                             ",{}],["|",{"inverse":true}],["  4 /root/",{"fg":3,"bold":true}],["            ",{}]],"4":[["   ",{}],["+",{"fg":2,"bold":true}],["FirstRun(void)  ",{}],["|",{"inverse":true}],["  9 ",{"fg":3,"bold":true}],["                                                                                                                ",{}],["|",{"inverse":true}],["  5 ",{"fg":3,"bold":true}],["▸ .asciinema/",{"fg":6,"bold":true}],["     ",{}]],"5":[["   ",{}],["+",{"fg":2,"bold":true}],["FirstRun2(void) ",{}],["|",{"inverse":true}],[" 10 ",{"fg":3,"bold":true}],["COMMANDS                                        *calendar-commands*                                             ",{}],["|",{"inverse":true}],["  6 ",{"fg":3,"bold":true}],["▸ .cache/",{"fg":6,"bold":true}],["         ",{}]],"6":[["                    ",{}],["|",{"inverse":true}],[" 11 ",{"fg":3,"bold":true}],["                                                                                                                ",{}],["|",{"inverse":true}],["  7 ",{"fg":3,"bold":true}],["▸ .config/",{"fg":6,"bold":true}],["        ",{}]],"7":[["▼",{"fg":3,"bold":true}],[" Last",{"fg":5,"bold":true}],[" : ",{}],["struct",{"fg":2,"bold":true}],["     ",{}],["|",{"inverse":true}],[" 12 ",{"fg":3,"bold":true}],["calendar.vim makes the following commands available:                                                            ",{}],["|",{"inverse":true}],["  8 ",{"fg":3,"bold":true}],["▸ .dbus/",{"fg":6,"bold":true}],["          ",{}]],"8":[["    [functions]",{"fg":6,"bold":true}],["     ",{}],["|",{"inverse":true}],[" 13 ",{"fg":3,"bold":true}],["                                                                                                                ",{}],["|",{"inverse":true}],["  9 ",{"fg":3,"bold":true}],["▸ .gnupg/",{"fg":6,"bold":true}],["         ",{}]],"9":[["   ",{}],["+",{"fg":2,"bold":true}],["FirstRun(void)  ",{}],["|",{"inverse":true}],[" 14 ",{"fg":3,"bold":true}],["                                                *calendar-:Calendar*                                            ",{}],["|",{"inverse":true}],[" 10 ",{"fg":3,"bold":true}],["▸ .kde/",{"fg":6,"bold":true}],["           ",{}]],"10":[["   ",{}],["+",{"fg":2,"bold":true}],["FirstRun2(void) ",{}],["|",{"inverse":true}],[" 15 ",{"fg":3,"bold":true}],[":Calendar [[year] month]  Show calendar at this year and this month in a                                        ",{}],["|",{"inverse":true}],[" 11 ",{"fg":3,"bold":true}],["▸ .local/",{"fg":6,"bold":true}],["         ",{}]],"11":[["   ",{}],["+",{"fg":2,"bold":true}],["~Last()         ",{}],["|",{"inverse":true}],[" 16 ",{"fg":3,"bold":true}],["                          vertical split.  When [year] is omitted, the                                          ",{}],["|",{"inverse":true}],[" 12 ",{"fg":3,"bold":true}],["▸ .pki/",{"fg":6,"bold":true}],["           ",{}]],"12":[["   ",{}],["+",{"fg":2,"bold":true}],["SecondRun(void) ",{}],["|",{"inverse":true}],[" 17 ",{"fg":3,"bold":true}],["                          calendar will show the given month in the current                                     ",{}],["|",{"inverse":true}],[" 13 ",{"fg":3,"bold":true}],["▸ .ssh/",{"fg":6,"bold":true}],["           ",{}]],"13":[["   ",{}],["+",{"fg":2,"bold":true}],["SecondRun2(void)",{}],["|",{"inverse":true}],[" 18 ",{"fg":3,"bold":true}],["                          year.  When both [year] and [month] are omitted, the                                  ",{}],["|",{"inverse":true}],[" 14 ",{"fg":3,"bold":true}],["▸ .vim/",{"fg":6,"bold":true}],["           ",{}]],"14":[["                    ",{}],["|",{"inverse":true}],[" 19 ",{"fg":3,"bold":true}],["                          calendar will show the current month.                                                 ",{}],["|",{"inverse":true}],[" 15 ",{"fg":3,"bold":true}],["▸ diary/",{"fg":6,"bold":true}],["          ",{}]],"15":[["▼",{"fg":3,"bold":true}],[" Second",{"fg":5,"bold":true}],[" : ",{}],["struct",{"fg":2,"bold":true}],["   ",{}],["|",{"inverse":true}],[" 20 ",{"fg":3,"bold":true}],["                                                                                                                ",{}],["|",{"inverse":true}],[" 16 ",{"fg":3,"bold":true}],["▸ temp/",{"fg":6,"bold":true}],["           ",{}]],"16":[["    [prototypes]",{"fg":6,"bold":true}],["    ",{}],["|",{"inverse":true}],[" 21 ",{"fg":3,"bold":true}],["                                                *calendar-:CalendarH*                                           ",{}],["|",{"inverse":true}],[" 17 ",{"fg":3,"bold":true}],["  .bash_history   ",{}]],"17":[["   ",{}],["+",{"fg":2,"bold":true}],["SecondRun(void) ",{}],["|",{"inverse":true}],[" 22 ",{"fg":3,"bold":true}],[":CalendarH [[year] month] Show calendar at this year and this month in a                                        ",{}],["|",{"inverse":true}],[" 18 ",{"fg":3,"bold":true}],["  .bash_logout    ",{}]],"18":[["   ",{}],["+",{"fg":2,"bold":true}],["SecondRun2(void)",{}],["|",{"inverse":true}],[" 23 ",{"fg":3,"bold":true}],["                          horizontal split.  When [year] is omitted, the                                        ",{}],["|",{"inverse":true}],[" 19 ",{"fg":3,"bold":true}],["  .bash_profile   ",{"underline":true}]],"19":[["                    ",{}],["|",{"inverse":true}],[" 24 ",{"fg":3,"bold":true}],["                          calendar will show the given month in the current                                     ",{}],["|",{"inverse":true}],[" 20 ",{"fg":3,"bold":true}],["  .bashrc         ",{}]],"20":[["▼",{"fg":3,"bold":true}],[" ",{}],["functions",{"fg":6,"bold":true}],["         ",{}],["|",{"inverse":true}],[" 25 ",{"fg":3,"bold":true}],["                          year.  When both [year] and [month] are omitted, the                                  ",{}],["|",{"inverse":true}],[" 21 ",{"fg":3,"bold":true}],["  .cshrc          ",{}]],"21":[["    main(int argc, c",{"underline":true}],["|",{"inverse":true}],[" 26 ",{"fg":3,"bold":true}],["                          calendar will show the current month.                                                 ",{}],["|",{"inverse":true}],[" 22 ",{"fg":3,"bold":true}],["  .dmrc           ",{}]],"22":[["~                   ",{"fg":4,"bold":true}],["|",{"inverse":true}],[" 27 ",{"fg":3,"bold":true}],["                                                                                                                ",{}],["|",{"inverse":true}],[" 23 ",{"fg":3,"bold":true}],["  .esd_auth       ",{}]],"23":[["~                   ",{"fg":4,"bold":true}],["|",{"inverse":true}],[" 28 ",{"fg":3,"bold":true}],["                                                *calendar-:CalendarT*                                           ",{}],["|",{"inverse":true}],[" 24 ",{"fg":3,"bold":true}],["  .gtkrc-2.0      ",{}]],"24":[["~                   ",{"fg":4,"bold":true}],["|",{"inverse":true}],[" 29 ",{"fg":3,"bold":true}],[":CalendarT [[year] month] Show calendar at this year and this month in a                                        ",{}],["|",{"inverse":true}],[" 25 ",{"fg":3,"bold":true}],["  .gtkrc-2.0-kde4 ",{}]],"25":[["~                   ",{"fg":4,"bold":true}],["|",{"inverse":true}],[" 30 ",{"fg":3,"bold":true}],["                          full-screen window.  When [year] is omitted, the                                      ",{}],["|",{"inverse":true}],[" 26 ",{"fg":3,"bold":true}],["  .lesshst        ",{}]],"26":[["~                   ",{"fg":4,"bold":true}],["|",{"inverse":true}],[" 31 ",{"fg":3,"bold":true}],["                          calendar will show the given month in the current                                     ",{}],["|",{"inverse":true}],[" 27 ",{"fg":3,"bold":true}],["  .tcshrc         ",{}]],"27":[["~                   ",{"fg":4,"bold":true}],["|",{"inverse":true}],[" 32 ",{"fg":3,"bold":true}],["                          year.  When both [year] and [month] are omitted, the                                  ",{}],["|",{"inverse":true}],[" 28 ",{"fg":3,"bold":true}],["  .viminfo        ",{}]],"28":[["~                   ",{"fg":4,"bold":true}],["|",{"inverse":true}],[" 33 ",{"fg":3,"bold":true}],["                          calendar will show the current month.                                                 ",{}],["|",{"inverse":true}],[" 29 ",{"fg":3,"bold":true}],["  .vimrc          ",{}]],"29":[["~                   ",{"fg":4,"bold":true}],["|",{"inverse":true}],[" 34 ",{"fg":3,"bold":true}],["                                                                                                                ",{}],["|",{"inverse":true}],[" 30 ",{"fg":3,"bold":true}],["  .xsession-errors",{}]],"30":[["~                   ",{"fg":4,"bold":true}],["|",{"inverse":true}],[" 35 ",{"fg":3,"bold":true}],["                                                *calendar-:CalendarVR*                                          ",{}],["|",{"inverse":true}],[" 31 ",{"fg":3,"bold":true}],["  anaconda-ks.cfg ",{}]],"31":[["~                   ",{"fg":4,"bold":true}],["|",{"inverse":true}],[" 36 ",{"fg":3,"bold":true}],[":CalendarVR [[year] month]  Show calendar at this year and this month in a                                      ",{}],["|",{"inverse":true}],[" 32 ",{"fg":3,"bold":true}],["  initial-setup-ks",{}]],"32":[["~                   ",{"fg":4,"bold":true}],["|",{"inverse":true}],[" 37 ",{"fg":3,"bold":true}],["                          vertical split at the right site.  When [year] is                                     ",{}],["|",{"inverse":true}],[" 33 ",{"fg":3,"bold":true}],["  test.c          ",{}]],"33":[["~                   ",{"fg":4,"bold":true}],["|",{"inverse":true}],[" 38 ",{"fg":3,"bold":true}],["                          omitted, the calendar will show the given month in                                    ",{}],["|",{"inverse":true}],[" 34 ",{"fg":3,"bold":true}],["  test.cpp        ",{}]],"34":[["~                   ",{"fg":4,"bold":true}],["|",{"inverse":true}],[" 39 ",{"fg":3,"bold":true}],["                          the current year.  When both [year] and [month] are                                   ",{}],["|",{"inverse":true}],[" 35 ",{"fg":3,"bold":true}],["  .test.cpp.swp   ",{}]],"35":[["~                   ",{"fg":4,"bold":true}],["|",{"inverse":true}],[" 40 ",{"fg":3,"bold":true}],["                          omitted, the calendar will show the current month.                                    ",{}],["|",{"inverse":true}],["~                     ",{"fg":4,"bold":true}]],"36":[["~                   ",{"fg":4,"bold":true}],["|",{"inverse":true}],[" 41 ",{"fg":3,"bold":true}],["                                                                                                                ",{}],["|",{"inverse":true}],["~                     ",{"fg":4,"bold":true}]],"37":[["~                   ",{"fg":4,"bold":true}],["|",{"inverse":true}],[" 41 ",{"fg":3,"bold":true}],["                                                                                                                ",{}],["|",{"inverse":true}],["~                     ",{"fg":4,"bold":true}]],"38":[["~                   ",{"fg":4,"bold":true}],["|",{"inverse":true}],[" 42 ",{"fg":3,"bold":true}],["MAPPINGS                                        *calendar-mappings*                                             ",{}],["|",{"inverse":true}],["~                     ",{"fg":4,"bold":true}]],"39":[["~                   ",{"fg":4,"bold":true}],["|",{"inverse":true}],[" 43 ",{"fg":3,"bold":true}],["                                                                                                                ",{}],["|",{"inverse":true}],["~                     ",{"fg":4,"bold":true}]],"40":[["~                   ",{"fg":4,"bold":true}],["|",{"inverse":true}],[" 44 ",{"fg":3,"bold":true}],["calendar.vim makes the following normal mode mappings available:                                                ",{}],["|",{"inverse":true}],["~                     ",{"fg":4,"bold":true}]],"41":[["~                   ",{"fg":4,"bold":true}],["|",{"inverse":true}],[" 45 ",{"fg":3,"bold":true}],["                                                                                                                ",{}],["|",{"inverse":true}],["~                     ",{"fg":4,"bold":true}]],"42":[["~                   ",{"fg":4,"bold":true}],["|",{"inverse":true}],[" 46 ",{"fg":3,"bold":true}],["                                                *calendar-cal*                                                  ",{}],["|",{"inverse":true}],["~                     ",{"fg":4,"bold":true}]],"43":[["~                   ",{"fg":4,"bold":true}],["|",{"inverse":true}],[" 47 ",{"fg":3,"bold":true}],["<LocalLeader>cal          Brings up the calendar in a vertical split.                                           ",{}],["|",{"inverse":true}],["~                     ",{"fg":4,"bold":true}]],"44":[["~                   ",{"fg":4,"bold":true}],["|",{"inverse":true}],[" 48 ",{"fg":3,"bold":true}],["                          Equivalent to calling |:Calendar|.                                                    ",{}],["|",{"inverse":true}],["~                     ",{"fg":4,"bold":true}]],"45":[["~                   ",{"fg":4,"bold":true}],["|",{"inverse":true}],[" 49 ",{"fg":3,"bold":true}],["                                                                                                                ",{"underline":true}],["|",{"inverse":true}],["~                     ",{"fg":4,"bold":true}]],"46":[["[Name] test.cpp      ",{"inverse":true}],[" NORMAL ",{"bold":true}],[" ",{}],["calendar.txt ",{"bold":true}],["                                                        unix │ utf-8 │ text │  22% ",{}],[" LN  49",{"bold":true}],[":1  ",{}],[" ",{"bold":true,"inverse":true}],[" ~/…/calendar-vim/doc>",{"bold":true}]]},"cursor":{"x":21,"y":37}}],[0.00353,{"lines":{"37":[["~                   ",{"fg":4,"bold":true}],["|",{"inverse":true}],[" 42 ",{"fg":3,"bold":true}],["MAPPINGS                                        *calendar-mappings*                                             ",{}],["|",{"inverse":true}],["~                     ",{"fg":4,"bold":true}]],"38":[["~                   ",{"fg":4,"bold":true}],["|",{"inverse":true}],[" 43 ",{"fg":3,"bold":true}],["                                                                                                                ",{}],["|",{"inverse":true}],["~                     ",{"fg":4,"bold":true}]],"39":[["~                   ",{"fg":4,"bold":true}],["|",{"inverse":true}],[" 44 ",{"fg":3,"bold":true}],["calendar.vim makes the following normal mode mappings available:                                                ",{}],["|",{"inverse":true}],["~                     ",{"fg":4,"bold":true}]],"40":[["~                   ",{"fg":4,"bold":true}],["|",{"inverse":true}],[" 45 ",{"fg":3,"bold":true}],["                                                                                                                ",{}],["|",{"inverse":true}],["~                     ",{"fg":4,"bold":true}]],"41":[["~                   ",{"fg":4,"bold":true}],["|",{"inverse":true}],[" 46 ",{"fg":3,"bold":true}],["                                                *calendar-cal*                                                  ",{}],["|",{"inverse":true}],["~                     ",{"fg":4,"bold":true}]],"42":[["~                   ",{"fg":4,"bold":true}],["|",{"inverse":true}],[" 47 ",{"fg":3,"bold":true}],["<LocalLeader>cal          Brings up the calendar in a vertical split.                                           ",{}],["|",{"inverse":true}],["~                     ",{"fg":4,"bold":true}]],"43":[["~                   ",{"fg":4,"bold":true}],["|",{"inverse":true}],[" 48 ",{"fg":3,"bold":true}],["                          Equivalent to calling |:Calendar|.                                                    ",{}],["|",{"inverse":true}],["~                     ",{"fg":4,"bold":true}]],"44":[["~                   ",{"fg":4,"bold":true}],["|",{"inverse":true}],[" 49 ",{"fg":3,"bold":true}],["                                                                                                                ",{}],["|",{"inverse":true}],["~                     ",{"fg":4,"bold":true}]],"45":[["~                   ",{"fg":4,"bold":true}],["|",{"inverse":true}],[" 50 ",{"fg":3,"bold":true}],["                                                *calendar-caL*                                                  ",{"underline":true}],["|",{"inverse":true}],["~                     ",{"fg":4,"bold":true}]],"46":[["[Name] test.cpp      ",{"inverse":true}],[" NORMAL ",{"bold":true}],[" ",{}],["calendar.txt ",{"bold":true}],["                                                        unix │ utf-8 │ text │  22% ",{}],[" LN  50",{"bold":true}],[":1  ",{}],[" ",{"bold":true,"inverse":true}],[" ~/…/calendar-vim/doc>",{"bold":true}]]},"cursor":{"x":25,"y":45,"visible":true}}],[0.035414,{"lines":{"0":[["\" Press <F1> for hel",{"fg":6,"bold":true}],["|",{"inverse":true}],["  6 ",{"fg":3,"bold":true}],["                                                                                                                ",{}],["|",{"inverse":true}],["  1 ",{"fg":3,"bold":true}],["\" Press ? for help",{"fg":5,"bold":true}]],"1":[["                    ",{}],["|",{"inverse":true}],["  7 ",{"fg":3,"bold":true}],["This script creates a calendar window in vim.  It does not rely on any                                          ",{}],["|",{"inverse":true}],["  2 ",{"fg":3,"bold":true}],["                  ",{}]],"2":[["▼",{"fg":3,"bold":true}],[" First",{"fg":5,"bold":true}],[" : ",{}],["struct",{"fg":2,"bold":true}],["    ",{}],["|",{"inverse":true}],["  8 ",{"fg":3,"bold":true}],["external program, such as cal, etc.                                                                             ",{}],["|",{"inverse":true}],["  3 ",{"fg":3,"bold":true}],[".. (up a dir)",{"fg":6,"bold":true}],["     ",{}]],"3":[["    [prototypes]",{"fg":6,"bold":true}],["    ",{}],["|",{"inverse":true}],["  9 ",{"fg":3,"bold":true}],["                                                                                                                ",{}],["|",{"inverse":true}],["  4 /root/",{"fg":3,"bold":true}],["            ",{}]],"4":[["   ",{}],["+",{"fg":2,"bold":true}],["FirstRun(void)  ",{}],["|",{"inverse":true}],[" 10 ",{"fg":3,"bold":true}],["COMMANDS                                        *calendar-commands*                                             ",{}],["|",{"inverse":true}],["  5 ",{"fg":3,"bold":true}],["▸ .asciinema/",{"fg":6,"bold":true}],["     ",{}]],"5":[["   ",{}],["+",{"fg":2,"bold":true}],["FirstRun2(void) ",{}],["|",{"inverse":true}],[" 11 ",{"fg":3,"bold":true}],["                                                                                                                ",{}],["|",{"inverse":true}],["  6 ",{"fg":3,"bold":true}],["▸ .cache/",{"fg":6,"bold":true}],["         ",{}]],"6":[["                    ",{}],["|",{"inverse":true}],[" 12 ",{"fg":3,"bold":true}],["calendar.vim makes the following commands available:                                                            ",{}],["|",{"inverse":true}],["  7 ",{"fg":3,"bold":true}],["▸ .config/",{"fg":6,"bold":true}],["        ",{}]],"7":[["▼",{"fg":3,"bold":true}],[" Last",{"fg":5,"bold":true}],[" : ",{}],["struct",{"fg":2,"bold":true}],["     ",{}],["|",{"inverse":true}],[" 13 ",{"fg":3,"bold":true}],["calendar.vim makes the following commands available:                                                            ",{}],["|",{"inverse":true}],["  8 ",{"fg":3,"bold":true}],["▸ .dbus/",{"fg":6,"bold":true}],["          ",{}]]},"cursor":{"y":7,"visible":false}}],[0.011116,{"lines":{"7":[["▼",{"fg":3,"bold":true}],[" Last",{"fg":5,"bold":true}],[" : ",{}],["struct",{"fg":2,"bold":true}],["     ",{}],["|",{"inverse":true}],[" 13 ",{"fg":3,"bold":true}],["                                                                                                                ",{}],["|",{"inverse":true}],["  8 ",{"fg":3,"bold":true}],["▸ .dbus/",{"fg":6,"bold":true}],["          ",{}]],"8":[["    [functions]",{"fg":6,"bold":true}],["     ",{}],["|",{"inverse":true}],[" 14 ",{"fg":3,"bold":true}],["                                                *calendar-:Calendar*                                            ",{}],["|",{"inverse":true}],["  9 ",{"fg":3,"bold":true}],["▸ .gnupg/",{"fg":6,"bold":true}],["         ",{}]],"9":[["   ",{}],["+",{"fg":2,"bold":true}],["FirstRun(void)  ",{}],["|",{"inverse":true}],[" 15 ",{"fg":3,"bold":true}],[":Calendar [[year] month]  Show calendar at this year and this month in a                                        ",{}],["|",{"inverse":true}],[" 10 ",{"fg":3,"bold":true}],["▸ .kde/",{"fg":6,"bold":true}],["           ",{}]],"10":[["   ",{}],["+",{"fg":2,"bold":true}],["FirstRun2(void) ",{}],["|",{"inverse":true}],[" 16 ",{"fg":3,"bold":true}],["                          vertical split.  When [year] is omitted, the                                          ",{}],["|",{"inverse":true}],[" 11 ",{"fg":3,"bold":true}],["▸ .local/",{"fg":6,"bold":true}],["         ",{}]],"11":[["   ",{}],["+",{"fg":2,"bold":true}],["~Last()         ",{}],["|",{"inverse":true}],[" 17 ",{"fg":3,"bold":true}],["                          calendar will show the given month in the current                                     ",{}],["|",{"inverse":true}],[" 12 ",{"fg":3,"bold":true}],["▸ .pki/",{"fg":6,"bold":true}],["           ",{}]],"12":[["   ",{}],["+",{"fg":2,"bold":true}],["SecondRun(void) ",{}],["|",{"inverse":true}],[" 18 ",{"fg":3,"bold":true}],["                          year.  When both [year] and [month] are omitted, the                                  ",{}],["|",{"inverse":true}],[" 13 ",{"fg":3,"bold":true}],["▸ .ssh/",{"fg":6,"bold":true}],["           ",{}]],"13":[["   ",{}],["+",{"fg":2,"bold":true}],["SecondRun2(void)",{}],["|",{"inverse":true}],[" 19 ",{"fg":3,"bold":true}],["                          calendar will show the current month.                                                 ",{}],["|",{"inverse":true}],[" 14 ",{"fg":3,"bold":true}],["▸ .vim/",{"fg":6,"bold":true}],["           ",{}]],"14":[["                    ",{}],["|",{"inverse":true}],[" 20 ",{"fg":3,"bold":true}],["                                                                                                                ",{}],["|",{"inverse":true}],[" 15 ",{"fg":3,"bold":true}],["▸ diary/",{"fg":6,"bold":true}],["          ",{}]],"15":[["▼",{"fg":3,"bold":true}],[" Second",{"fg":5,"bold":true}],[" : ",{}],["struct",{"fg":2,"bold":true}],["   ",{}],["|",{"inverse":true}],[" 21 ",{"fg":3,"bold":true}],["                                                *calendar-:CalendarH*                                           ",{}],["|",{"inverse":true}],[" 16 ",{"fg":3,"bold":true}],["▸ temp/",{"fg":6,"bold":true}],["           ",{}]],"16":[["    [prototypes]",{"fg":6,"bold":true}],["    ",{}],["|",{"inverse":true}],[" 22 ",{"fg":3,"bold":true}],[":CalendarH [[year] month] Show calendar at this year and this month in a                                        ",{}],["|",{"inverse":true}],[" 17 ",{"fg":3,"bold":true}],["  .bash_history   ",{}]],"17":[["   ",{}],["+",{"fg":2,"bold":true}],["SecondRun(void) ",{}],["|",{"inverse":true}],[" 23 ",{"fg":3,"bold":true}],["                          horizontal split.  When [year] is omitted, the                                        ",{}],["|",{"inverse":true}],[" 18 ",{"fg":3,"bold":true}],["  .bash_logout    ",{}]],"18":[["   ",{}],["+",{"fg":2,"bold":true}],["SecondRun2(void)",{}],["|",{"inverse":true}],[" 24 ",{"fg":3,"bold":true}],["                          calendar will show the given month in the current                                     ",{}],["|",{"inverse":true}],[" 19 ",{"fg":3,"bold":true}],["  .bash_profile   ",{"underline":true}]],"19":[["                    ",{}],["|",{"inverse":true}],[" 25 ",{"fg":3,"bold":true}],["                          year.  When both [year] and [month] are omitted, the                                  ",{}],["|",{"inverse":true}],[" 20 ",{"fg":3,"bold":true}],["  .bashrc         ",{}]],"20":[["▼",{"fg":3,"bold":true}],[" ",{}],["functions",{"fg":6,"bold":true}],["         ",{}],["|",{"inverse":true}],[" 26 ",{"fg":3,"bold":true}],["                          calendar will show the current month.                                                 ",{}],["|",{"inverse":true}],[" 21 ",{"fg":3,"bold":true}],["  .cshrc          ",{}]],"21":[["    main(int argc, c",{"underline":true}],["|",{"inverse":true}],[" 27 ",{"fg":3,"bold":true}],["                                                                                                                ",{}],["|",{"inverse":true}],[" 22 ",{"fg":3,"bold":true}],["  .dmrc           ",{}]],"22":[["~                   ",{"fg":4,"bold":true}],["|",{"inverse":true}],[" 28 ",{"fg":3,"bold":true}],["                                                *calendar-:CalendarT*                                           ",{}],["|",{"inverse":true}],[" 23 ",{"fg":3,"bold":true}],["  .esd_auth       ",{}]],"23":[["~                   ",{"fg":4,"bold":true}],["|",{"inverse":true}],[" 29 ",{"fg":3,"bold":true}],[":CalendarT [[year] month] Show calendar at this year and this month in a                                        ",{}],["|",{"inverse":true}],[" 24 ",{"fg":3,"bold":true}],["  .gtkrc-2.0      ",{}]],"24":[["~                   ",{"fg":4,"bold":true}],["|",{"inverse":true}],[" 30 ",{"fg":3,"bold":true}],["                          full-screen window.  When [year] is omitted, the                                      ",{}],["|",{"inverse":true}],[" 25 ",{"fg":3,"bold":true}],["  .gtkrc-2.0-kde4 ",{}]],"25":[["~                   ",{"fg":4,"bold":true}],["|",{"inverse":true}],[" 31 ",{"fg":3,"bold":true}],["                          calendar will show the given month in the current                                     ",{}],["|",{"inverse":true}],[" 26 ",{"fg":3,"bold":true}],["  .lesshst        ",{}]],"26":[["~                   ",{"fg":4,"bold":true}],["|",{"inverse":true}],[" 32 ",{"fg":3,"bold":true}],["                          year.  When both [year] and [month] are omitted, the                                  ",{}],["|",{"inverse":true}],[" 27 ",{"fg":3,"bold":true}],["  .tcshrc         ",{}]],"27":[["~                   ",{"fg":4,"bold":true}],["|",{"inverse":true}],[" 33 ",{"fg":3,"bold":true}],["                          calendar will show the current month.                                                 ",{}],["|",{"inverse":true}],[" 28 ",{"fg":3,"bold":true}],["  .viminfo        ",{}]],"28":[["~                   ",{"fg":4,"bold":true}],["|",{"inverse":true}],[" 34 ",{"fg":3,"bold":true}],["                                                                                                                ",{}],["|",{"inverse":true}],[" 29 ",{"fg":3,"bold":true}],["  .vimrc          ",{}]],"29":[["~                   ",{"fg":4,"bold":true}],["|",{"inverse":true}],[" 35 ",{"fg":3,"bold":true}],["                                                *calendar-:CalendarVR*                                          ",{}],["|",{"inverse":true}],[" 30 ",{"fg":3,"bold":true}],["  .xsession-errors",{}]],"30":[["~                   ",{"fg":4,"bold":true}],["|",{"inverse":true}],[" 36 ",{"fg":3,"bold":true}],[":CalendarVR [[year] month]  Show calendar at this year and this month in a                                      ",{}],["|",{"inverse":true}],[" 31 ",{"fg":3,"bold":true}],["  anaconda-ks.cfg ",{}]],"31":[["~                   ",{"fg":4,"bold":true}],["|",{"inverse":true}],[" 37 ",{"fg":3,"bold":true}],["                          vertical split at the right site.  When [year] is                                     ",{}],["|",{"inverse":true}],[" 32 ",{"fg":3,"bold":true}],["  initial-setup-ks",{}]],"32":[["~                   ",{"fg":4,"bold":true}],["|",{"inverse":true}],[" 38 ",{"fg":3,"bold":true}],["                          omitted, the calendar will show the given month in                                    ",{}],["|",{"inverse":true}],[" 33 ",{"fg":3,"bold":true}],["  test.c          ",{}]],"33":[["~                   ",{"fg":4,"bold":true}],["|",{"inverse":true}],[" 39 ",{"fg":3,"bold":true}],["                          the current year.  When both [year] and [month] are                                   ",{}],["|",{"inverse":true}],[" 34 ",{"fg":3,"bold":true}],["  test.cpp        ",{}]],"34":[["~                   ",{"fg":4,"bold":true}],["|",{"inverse":true}],[" 40 ",{"fg":3,"bold":true}],["                          omitted, the calendar will show the current month.                                    ",{}],["|",{"inverse":true}],[" 35 ",{"fg":3,"bold":true}],["  .test.cpp.swp   ",{}]],"35":[["~                   ",{"fg":4,"bold":true}],["|",{"inverse":true}],[" 41 ",{"fg":3,"bold":true}],["                                                                                                                ",{}],["|",{"inverse":true}],["~                     ",{"fg":4,"bold":true}]],"36":[["~                   ",{"fg":4,"bold":true}],["|",{"inverse":true}],[" 42 ",{"fg":3,"bold":true}],["MAPPINGS                                        *calendar-mappings*                                             ",{}],["|",{"inverse":true}],["~                     ",{"fg":4,"bold":true}]],"37":[["~                   ",{"fg":4,"bold":true}],["|",{"inverse":true}],[" 43 ",{"fg":3,"bold":true}],["                                                                                                                ",{}],["|",{"inverse":true}],["~                     ",{"fg":4,"bold":true}]],"38":[["~                   ",{"fg":4,"bold":true}],["|",{"inverse":true}],[" 44 ",{"fg":3,"bold":true}],["calendar.vim makes the following normal mode mappings available:                                                ",{}],["|",{"inverse":true}],["~                     ",{"fg":4,"bold":true}]],"39":[["~                   ",{"fg":4,"bold":true}],["|",{"inverse":true}],[" 45 ",{"fg":3,"bold":true}],["                                                                                                                ",{}],["|",{"inverse":true}],["~                     ",{"fg":4,"bold":true}]],"40":[["~                   ",{"fg":4,"bold":true}],["|",{"inverse":true}],[" 46 ",{"fg":3,"bold":true}],["                                                *calendar-cal*                                                  ",{}],["|",{"inverse":true}],["~                     ",{"fg":4,"bold":true}]],"41":[["~                   ",{"fg":4,"bold":true}],["|",{"inverse":true}],[" 47 ",{"fg":3,"bold":true}],["<LocalLeader>cal          Brings up the calendar in a vertical split.                                           ",{}],["|",{"inverse":true}],["~                     ",{"fg":4,"bold":true}]],"42":[["~                   ",{"fg":4,"bold":true}],["|",{"inverse":true}],[" 48 ",{"fg":3,"bold":true}],["                          Equivalent to calling |:Calendar|.                                                    ",{}],["|",{"inverse":true}],["~                     ",{"fg":4,"bold":true}]],"43":[["~                   ",{"fg":4,"bold":true}],["|",{"inverse":true}],[" 49 ",{"fg":3,"bold":true}],["                                                                                                                ",{}],["|",{"inverse":true}],["~                     ",{"fg":4,"bold":true}]],"44":[["~                   ",{"fg":4,"bold":true}],["|",{"inverse":true}],[" 50 ",{"fg":3,"bold":true}],["                                                *calendar-caL*                                                  ",{}],["|",{"inverse":true}],["~                     ",{"fg":4,"bold":true}]],"45":[["~                   ",{"fg":4,"bold":true}],["|",{"inverse":true}],[" 51 ",{"fg":3,"bold":true}],["<LocalLeader>",{"underline":true}],["caL ",{"bg":1}],["        ",{"underline":true}],[" Bri",{"bg":1}],["ngs up the calendar in a horizontal split.                                         ",{"underline":true}],["|",{"inverse":true}],["~                     ",{"fg":4,"bold":true}]],"46":[["[Name] test.cpp      ",{"inverse":true}],[" NORMAL ",{"bold":true}],[" ",{}],["calendar.txt ",{"bold":true}],["                                                        unix │ utf-8 │ text │  23% ",{}],[" LN  51",{"bold":true}],[":1  ",{}],[" ",{"bold":true,"inverse":true}],[" ~/…/calendar-vim/doc>",{"bold":true}]]},"cursor":{"y":45,"visible":true}}],[0.01534,{"lines":{"0":[["\" Press <F1> for hel",{"fg":6,"bold":true}],["|",{"inverse":true}],["  7 ",{"fg":3,"bold":true}],["This script creates a calendar window in vim.  It does not rely on any                                          ",{}],["|",{"inverse":true}],["  1 ",{"fg":3,"bold":true}],["\" Press ? for help",{"fg":5,"bold":true}]],"1":[["                    ",{}],["|",{"inverse":true}],["  8 ",{"fg":3,"bold":true}],["external program, such as cal, etc.                                                                             ",{}],["|",{"inverse":true}],["  2 ",{"fg":3,"bold":true}],["                  ",{}]],"2":[["▼",{"fg":3,"bold":true}],[" First",{"fg":5,"bold":true}],[" : ",{}],["struct",{"fg":2,"bold":true}],["    ",{}],["|",{"inverse":true}],["  9 ",{"fg":3,"bold":true}],["                                                                                                                ",{}],["|",{"inverse":true}],["  3 ",{"fg":3,"bold":true}],[".. (up a dir)",{"fg":6,"bold":true}],["     ",{}]],"3":[["    [prototypes]",{"fg":6,"bold":true}],["    ",{}],["|",{"inverse":true}],[" 10 ",{"fg":3,"bold":true}],["COMMANDS                                        *calendar-commands*                                             ",{}],["|",{"inverse":true}],["  4 /root/",{"fg":3,"bold":true}],["            ",{}]],"4":[["   ",{}],["+",{"fg":2,"bold":true}],["FirstRun(void)  ",{}],["|",{"inverse":true}],[" 11 ",{"fg":3,"bold":true}],["                                                                                                                ",{}],["|",{"inverse":true}],["  5 ",{"fg":3,"bold":true}],["▸ .asciinema/",{"fg":6,"bold":true}],["     ",{}]],"5":[["   ",{}],["+",{"fg":2,"bold":true}],["FirstRun2(void) ",{}],["|",{"inverse":true}],[" 12 ",{"fg":3,"bold":true}],["calendar.vim makes the following commands available:                                                            ",{}],["|",{"inverse":true}],["  6 ",{"fg":3,"bold":true}],["▸ .cache/",{"fg":6,"bold":true}],["         ",{}]],"6":[["                    ",{}],["|",{"inverse":true}],[" 13 ",{"fg":3,"bold":true}],["                                                                                                                ",{}],["|",{"inverse":true}],["  7 ",{"fg":3,"bold":true}],["▸ .config/",{"fg":6,"bold":true}],["        ",{}]],"7":[["▼",{"fg":3,"bold":true}],[" Last",{"fg":5,"bold":true}],[" : ",{}],["struct",{"fg":2,"bold":true}],["     ",{}],["|",{"inverse":true}],[" 14 ",{"fg":3,"bold":true}],["                                                *calendar-:Calendar*                                            ",{}],["|",{"inverse":true}],["  8 ",{"fg":3,"bold":true}],["▸ .dbus/",{"fg":6,"bold":true}],["          ",{}]],"8":[["    [functions]",{"fg":6,"bold":true}],["     ",{}],["|",{"inverse":true}],[" 15 ",{"fg":3,"bold":true}],[":Calendar [[year] month]  Show calendar at this year and this month in a                                        ",{}],["|",{"inverse":true}],["  9 ",{"fg":3,"bold":true}],["▸ .gnupg/",{"fg":6,"bold":true}],["         ",{}]],"9":[["   ",{}],["+",{"fg":2,"bold":true}],["FirstRun(void)  ",{}],["|",{"inverse":true}],[" 16 ",{"fg":3,"bold":true}],["                          vertical split.  When [year] is omitted, the                                          ",{}],["|",{"inverse":true}],[" 10 ",{"fg":3,"bold":true}],["▸ .kde/",{"fg":6,"bold":true}],["           ",{}]],"10":[["   ",{}],["+",{"fg":2,"bold":true}],["FirstRun2(void) ",{}],["|",{"inverse":true}],[" 17 ",{"fg":3,"bold":true}],["                          calendar will show the given month in the current                                     ",{}],["|",{"inverse":true}],[" 11 ",{"fg":3,"bold":true}],["▸ .local/",{"fg":6,"bold":true}],["         ",{}]],"11":[["   ",{}],["+",{"fg":2,"bold":true}],["~Last()         ",{}],["|",{"inverse":true}],[" 18 ",{"fg":3,"bold":true}],["                          year.  When both [year] and [month] are omitted, the                                  ",{}],["|",{"inverse":true}],[" 12 ",{"fg":3,"bold":true}],["▸ .pki/",{"fg":6,"bold":true}],["           ",{}]],"12":[["   ",{}],["+",{"fg":2,"bold":true}],["SecondRun(void) ",{}],["|",{"inverse":true}],[" 19 ",{"fg":3,"bold":true}],["                          calendar will show the current month.                                                 ",{}],["|",{"inverse":true}],[" 13 ",{"fg":3,"bold":true}],["▸ .ssh/",{"fg":6,"bold":true}],["           ",{}]],"13":[["   ",{}],["+",{"fg":2,"bold":true}],["SecondRun2(void)",{}],["|",{"inverse":true}],[" 20 ",{"fg":3,"bold":true}],["                                                                                                                ",{}],["|",{"inverse":true}],[" 14 ",{"fg":3,"bold":true}],["▸ .vim/",{"fg":6,"bold":true}],["           ",{}]],"14":[["                    ",{}],["|",{"inverse":true}],[" 21 ",{"fg":3,"bold":true}],["                                                *calendar-:CalendarH*                                           ",{}],["|",{"inverse":true}],[" 15 ",{"fg":3,"bold":true}],["▸ diary/",{"fg":6,"bold":true}],["          ",{}]],"15":[["▼",{"fg":3,"bold":true}],[" Second",{"fg":5,"bold":true}],[" : ",{}],["struct",{"fg":2,"bold":true}],["   ",{}],["|",{"inverse":true}],[" 22 ",{"fg":3,"bold":true}],[":CalendarH [[year] month] Show calendar at this year and this month in a                                        ",{}],["|",{"inverse":true}],[" 16 ",{"fg":3,"bold":true}],["▸ temp/",{"fg":6,"bold":true}],["           ",{}]],"16":[["    [prototypes]",{"fg":6,"bold":true}],["    ",{}],["|",{"inverse":true}],[" 23 ",{"fg":3,"bold":true}],["                          horizontal split.  When [year] is omitted, the                                        ",{}],["|",{"inverse":true}],[" 17 ",{"fg":3,"bold":true}],["  .bash_history   ",{}]],"17":[["   ",{}],["+",{"fg":2,"bold":true}],["SecondRun(void) ",{}],["|",{"inverse":true}],[" 24 ",{"fg":3,"bold":true}],["                          calendar will show the given month in the current                                     ",{}],["|",{"inverse":true}],[" 18 ",{"fg":3,"bold":true}],["  .bash_logout    ",{}]],"18":[["   ",{}],["+",{"fg":2,"bold":true}],["SecondRun2(void)",{}],["|",{"inverse":true}],[" 25 ",{"fg":3,"bold":true}],["                          year.  When both [year] and [month] are omitted, the                                  ",{}],["|",{"inverse":true}],[" 19 ",{"fg":3,"bold":true}],["  .bash_profile   ",{"underline":true}]],"19":[["                    ",{}],["|",{"inverse":true}],[" 26 ",{"fg":3,"bold":true}],["                          calendar will show the current month.                                                 ",{}],["|",{"inverse":true}],[" 20 ",{"fg":3,"bold":true}],["  .bashrc         ",{}]],"20":[["▼",{"fg":3,"bold":true}],[" ",{}],["functions",{"fg":6,"bold":true}],["         ",{}],["|",{"inverse":true}],[" 27 ",{"fg":3,"bold":true}],["                                                                                                                ",{}],["|",{"inverse":true}],[" 21 ",{"fg":3,"bold":true}],["  .cshrc          ",{}]],"21":[["    main(int argc, c",{"underline":true}],["|",{"inverse":true}],[" 28 ",{"fg":3,"bold":true}],["                                                *calendar-:CalendarT*                                           ",{}],["|",{"inverse":true}],[" 22 ",{"fg":3,"bold":true}],["  .dmrc           ",{}]],"22":[["~                   ",{"fg":4,"bold":true}],["|",{"inverse":true}],[" 29 ",{"fg":3,"bold":true}],[":CalendarT [[year] month] Show calendar at this year and this month in a                                        ",{}],["|",{"inverse":true}],[" 23 ",{"fg":3,"bold":true}],["  .esd_auth       ",{}]],"23":[["~                   ",{"fg":4,"bold":true}],["|",{"inverse":true}],[" 30 ",{"fg":3,"bold":true}],["                          full-screen window.  When [year] is omitted, the                                      ",{}],["|",{"inverse":true}],[" 24 ",{"fg":3,"bold":true}],["  .gtkrc-2.0      ",{}]],"24":[["~                   ",{"fg":4,"bold":true}],["|",{"inverse":true}],[" 31 ",{"fg":3,"bold":true}],["                          calendar will show the given month in the current                                     ",{}],["|",{"inverse":true}],[" 25 ",{"fg":3,"bold":true}],["  .gtkrc-2.0-kde4 ",{}]],"25":[["~                   ",{"fg":4,"bold":true}],["|",{"inverse":true}],[" 32 ",{"fg":3,"bold":true}],["                          year.  When both [year] and [month] are omitted, the                                  ",{}],["|",{"inverse":true}],[" 26 ",{"fg":3,"bold":true}],["  .lesshst        ",{}]],"26":[["~                   ",{"fg":4,"bold":true}],["|",{"inverse":true}],[" 33 ",{"fg":3,"bold":true}],["                          calendar will show the current month.                                                 ",{}],["|",{"inverse":true}],[" 27 ",{"fg":3,"bold":true}],["  .tcshrc         ",{}]],"27":[["~                   ",{"fg":4,"bold":true}],["|",{"inverse":true}],[" 34 ",{"fg":3,"bold":true}],["                                                                                                                ",{}],["|",{"inverse":true}],[" 28 ",{"fg":3,"bold":true}],["  .viminfo        ",{}]],"28":[["~                   ",{"fg":4,"bold":true}],["|",{"inverse":true}],[" 35 ",{"fg":3,"bold":true}],["                                                *calendar-:CalendarVR*                                          ",{}],["|",{"inverse":true}],[" 29 ",{"fg":3,"bold":true}],["  .vimrc          ",{}]],"29":[["~                   ",{"fg":4,"bold":true}],["|",{"inverse":true}],[" 36 ",{"fg":3,"bold":true}],[":CalendarVR [[year] month]  Show calendar at this year and this month in a                                      ",{}],["|",{"inverse":true}],[" 30 ",{"fg":3,"bold":true}],["  .xsession-errors",{}]],"30":[["~                   ",{"fg":4,"bold":true}],["|",{"inverse":true}],[" 37 ",{"fg":3,"bold":true}],["                          vertical split at the right site.  When [year] is                                     ",{}],["|",{"inverse":true}],[" 31 ",{"fg":3,"bold":true}],["  anaconda-ks.cfg ",{}]],"31":[["~                   ",{"fg":4,"bold":true}],["|",{"inverse":true}],[" 38 ",{"fg":3,"bold":true}],["                          omitted, the calendar will show the given month in                                    ",{}],["|",{"inverse":true}],[" 32 ",{"fg":3,"bold":true}],["  initial-setup-ks",{}]],"32":[["~                   ",{"fg":4,"bold":true}],["|",{"inverse":true}],[" 39 ",{"fg":3,"bold":true}],["                          the current year.  When both [year] and [month] are                                   ",{}],["|",{"inverse":true}],[" 33 ",{"fg":3,"bold":true}],["  test.c          ",{}]],"33":[["~                   ",{"fg":4,"bold":true}],["|",{"inverse":true}],[" 40 ",{"fg":3,"bold":true}],["                          omitted, the calendar will show the current month.                                    ",{}],["|",{"inverse":true}],[" 34 ",{"fg":3,"bold":true}],["  test.cpp        ",{}]],"34":[["~                   ",{"fg":4,"bold":true}],["|",{"inverse":true}],[" 41 ",{"fg":3,"bold":true}],["                                                                                                                ",{}],["|",{"inverse":true}],[" 35 ",{"fg":3,"bold":true}],["  .test.cpp.swp   ",{}]],"35":[["~                   ",{"fg":4,"bold":true}],["|",{"inverse":true}],[" 42 ",{"fg":3,"bold":true}],["MAPPINGS                                        *calendar-mappings*                                             ",{}],["|",{"inverse":true}],["~                     ",{"fg":4,"bold":true}]],"36":[["~                   ",{"fg":4,"bold":true}],["|",{"inverse":true}],[" 43 ",{"fg":3,"bold":true}],["                                                                                                                ",{}],["|",{"inverse":true}],["~                     ",{"fg":4,"bold":true}]],"37":[["~                   ",{"fg":4,"bold":true}],["|",{"inverse":true}],[" 44 ",{"fg":3,"bold":true}],["calendar.vim makes the following normal mode mappings available:                                                ",{}],["|",{"inverse":true}],["~                     ",{"fg":4,"bold":true}]],"38":[["~                   ",{"fg":4,"bold":true}],["|",{"inverse":true}],[" 45 ",{"fg":3,"bold":true}],["                                                                                                                ",{}],["|",{"inverse":true}],["~                     ",{"fg":4,"bold":true}]],"39":[["~                   ",{"fg":4,"bold":true}],["|",{"inverse":true}],[" 46 ",{"fg":3,"bold":true}],["                                                *calendar-cal*                                                  ",{}],["|",{"inverse":true}],["~                     ",{"fg":4,"bold":true}]],"40":[["~                   ",{"fg":4,"bold":true}],["|",{"inverse":true}],[" 47 ",{"fg":3,"bold":true}],["<LocalLeader>cal          Brings up the calendar in a vertical split.                                           ",{}],["|",{"inverse":true}],["~                     ",{"fg":4,"bold":true}]],"41":[["~                   ",{"fg":4,"bold":true}],["|",{"inverse":true}],[" 48 ",{"fg":3,"bold":true}],["                          Equivalent to calling |:Calendar|.                                                    ",{}],["|",{"inverse":true}],["~                     ",{"fg":4,"bold":true}]],"42":[["~                   ",{"fg":4,"bold":true}],["|",{"inverse":true}],[" 49 ",{"fg":3,"bold":true}],["                                                                                                                ",{}],["|",{"inverse":true}],["~                     ",{"fg":4,"bold":true}]],"43":[["~                   ",{"fg":4,"bold":true}],["|",{"inverse":true}],[" 50 ",{"fg":3,"bold":true}],["                                                *calendar-caL*                                                  ",{}],["|",{"inverse":true}],["~                     ",{"fg":4,"bold":true}]],"44":[["~                   ",{"fg":4,"bold":true}],["|",{"inverse":true}],[" 51 ",{"fg":3,"bold":true}],["<LocalLeader>",{"underline":true}],["caL ",{"bg":1}],["        ",{"underline":true}],[" Bri",{"bg":1}],["                   *calendar-caL*                                                  ",{}],["|",{"inverse":true}],["~                     ",{"fg":4,"bold":true}]]},"cursor":{"x":54,"y":44,"visible":false}}],[0.031325,{"lines":{"44":[["~                   ",{"fg":4,"bold":true}],["|",{"inverse":true}],[" 51 ",{"fg":3,"bold":true}],["<LocalLeader>",{}],["caL ",{"bg":1}],["        ",{}],[" Bri",{"bg":1}],["ngs up the calendar in a horizontal split.                                         ",{}],["|",{"inverse":true}],["~                     ",{"fg":4,"bold":true}]],"45":[["~                   ",{"fg":4,"bold":true}],["|",{"inverse":true}],[" 52 ",{"fg":3,"bold":true}],["                          Equivalent to calling |:CalendarH|.                                                   ",{"underline":true}],["|",{"inverse":true}],["~                     ",{"fg":4,"bold":true}]],"46":[["[Name] test.cpp      ",{"inverse":true}],[" NORMAL ",{"bold":true}],[" ",{}],["calendar.txt ",{"bold":true}],["                                                        unix │ utf-8 │ text │  23% ",{}],[" LN  52",{"bold":true}],[":1  ",{}],[" ",{"bold":true,"inverse":true}],[" ~/…/calendar-vim/doc>",{"bold":true}]]},"cursor":{"x":25,"y":45,"visible":true}}],[0.007311,{"lines":{"0":[["\" Press <F1> for hel",{"fg":6,"bold":true}],["|",{"inverse":true}],["  8 ",{"fg":3,"bold":true}],["external program, such as cal, etc.                                                                             ",{}],["|",{"inverse":true}],["  1 ",{"fg":3,"bold":true}],["\" Press ? for help",{"fg":5,"bold":true}]],"1":[["                    ",{}],["|",{"inverse":true}],["  9 ",{"fg":3,"bold":true}],["                                                                                                                ",{}],["|",{"inverse":true}],["  2 ",{"fg":3,"bold":true}],["                  ",{}]],"2":[["▼",{"fg":3,"bold":true}],[" First",{"fg":5,"bold":true}],[" : ",{}],["struct",{"fg":2,"bold":true}],["    ",{}],["|",{"inverse":true}],[" 10 ",{"fg":3,"bold":true}],["COMMANDS                                        *calendar-commands*                                             ",{}],["|",{"inverse":true}],["  3 ",{"fg":3,"bold":true}],[".. (up a dir)",{"fg":6,"bold":true}],["     ",{}]],"3":[["    [prototypes]",{"fg":6,"bold":true}],["    ",{}],["|",{"inverse":true}],[" 11 ",{"fg":3,"bold":true}],["                                                                                                                ",{}],["|",{"inverse":true}],["  4 /root/",{"fg":3,"bold":true}],["            ",{}]],"4":[["   ",{}],["+",{"fg":2,"bold":true}],["FirstRun(void)  ",{}],["|",{"inverse":true}],[" 12 ",{"fg":3,"bold":true}],["calendar.vim makes the following commands available:                                                            ",{}],["|",{"inverse":true}],["  5 ",{"fg":3,"bold":true}],["▸ .asciinema/",{"fg":6,"bold":true}],["     ",{}]],"5":[["   ",{}],["+",{"fg":2,"bold":true}],["FirstRun2(void) ",{}],["|",{"inverse":true}],[" 13 ",{"fg":3,"bold":true}],["                                                                                                                ",{}],["|",{"inverse":true}],["  6 ",{"fg":3,"bold":true}],["▸ .cache/",{"fg":6,"bold":true}],["         ",{}]],"6":[["                    ",{}],["|",{"inverse":true}],[" 14 ",{"fg":3,"bold":true}],["                                                *calendar-:Calendar*                                            ",{}],["|",{"inverse":true}],["  7 ",{"fg":3,"bold":true}],["▸ .config/",{"fg":6,"bold":true}],["        ",{}]],"7":[["▼",{"fg":3,"bold":true}],[" Last",{"fg":5,"bold":true}],[" : ",{}],["struct",{"fg":2,"bold":true}],["     ",{}],["|",{"inverse":true}],[" 15 ",{"fg":3,"bold":true}],[":Calendar [[year] month]  Show calendar at this year and this month in a                                        ",{}],["|",{"inverse":true}],["  8 ",{"fg":3,"bold":true}],["▸ .dbus/",{"fg":6,"bold":true}],["          ",{}]],"8":[["    [functions]",{"fg":6,"bold":true}],["     ",{}],["|",{"inverse":true}],[" 16 ",{"fg":3,"bold":true}],["                          vertical split.  When [year] is omitted, the                                          ",{}],["|",{"inverse":true}],["  9 ",{"fg":3,"bold":true}],["▸ .gnupg/",{"fg":6,"bold":true}],["         ",{}]],"9":[["   ",{}],["+",{"fg":2,"bold":true}],["FirstRun(void)  ",{}],["|",{"inverse":true}],[" 17 ",{"fg":3,"bold":true}],["                          calendar will show the given month in the current                                     ",{}],["|",{"inverse":true}],[" 10 ",{"fg":3,"bold":true}],["▸ .kde/",{"fg":6,"bold":true}],["           ",{}]],"10":[["   ",{}],["+",{"fg":2,"bold":true}],["FirstRun2(void) ",{}],["|",{"inverse":true}],[" 18 ",{"fg":3,"bold":true}],["                          year.  When both [year] and [month] are omitted, the                                  ",{}],["|",{"inverse":true}],[" 11 ",{"fg":3,"bold":true}],["▸ .local/",{"fg":6,"bold":true}],["         ",{}]],"11":[["   ",{}],["+",{"fg":2,"bold":true}],["~Last()         ",{}],["|",{"inverse":true}],[" 19 ",{"fg":3,"bold":true}],["                          calendar will show the current month.                                                 ",{}],["|",{"inverse":true}],[" 12 ",{"fg":3,"bold":true}],["▸ .pki/",{"fg":6,"bold":true}],["           ",{}]],"12":[["   ",{}],["+",{"fg":2,"bold":true}],["SecondRun(void) ",{}],["|",{"inverse":true}],[" 20 ",{"fg":3,"bold":true}],["                                                                                                                ",{}],["|",{"inverse":true}],[" 13 ",{"fg":3,"bold":true}],["▸ .ssh/",{"fg":6,"bold":true}],["           ",{}]],"13":[["   ",{}],["+",{"fg":2,"bold":true}],["SecondRun2(void)",{}],["|",{"inverse":true}],[" 21 ",{"fg":3,"bold":true}],["                                                *calendar-:CalendarH*                                           ",{}],["|",{"inverse":true}],[" 14 ",{"fg":3,"bold":true}],["▸ .vim/",{"fg":6,"bold":true}],["           ",{}]],"14":[["                    ",{}],["|",{"inverse":true}],[" 22 ",{"fg":3,"bold":true}],[":CalendarH [[year] month] Show calendar at this year and this month in a                                        ",{}],["|",{"inverse":true}],[" 15 ",{"fg":3,"bold":true}],["▸ diary/",{"fg":6,"bold":true}],["          ",{}]],"15":[["▼",{"fg":3,"bold":true}],[" Second",{"fg":5,"bold":true}],[" : ",{}],["struct",{"fg":2,"bold":true}],["   ",{}],["|",{"inverse":true}],[" 23 ",{"fg":3,"bold":true}],["                          horizontal split.  When [year] is omitted, the                                        ",{}],["|",{"inverse":true}],[" 16 ",{"fg":3,"bold":true}],["▸ temp/",{"fg":6,"bold":true}],["           ",{}]],"16":[["    [prototypes]",{"fg":6,"bold":true}],["    ",{}],["|",{"inverse":true}],[" 24 ",{"fg":3,"bold":true}],["                          calendar will show the given month in the current                                     ",{}],["|",{"inverse":true}],[" 17 ",{"fg":3,"bold":true}],["  .bash_history   ",{}]],"17":[["   ",{}],["+",{"fg":2,"bold":true}],["SecondRun(void) ",{}],["|",{"inverse":true}],[" 25 ",{"fg":3,"bold":true}],["                          year.  When both [year] and [month] are omitted, the                                  ",{}],["|",{"inverse":true}],[" 18 ",{"fg":3,"bold":true}],["  .bash_logout    ",{}]],"18":[["   ",{}],["+",{"fg":2,"bold":true}],["SecondRun2(void)",{}],["|",{"inverse":true}],[" 26 ",{"fg":3,"bold":true}],["                          calendar will show the current month.                                                 ",{}],["|",{"inverse":true}],[" 19 ",{"fg":3,"bold":true}],["  .bash_profile   ",{"underline":true}]],"19":[["                    ",{}],["|",{"inverse":true}],[" 27 ",{"fg":3,"bold":true}],["                                                                                                                ",{}],["|",{"inverse":true}],[" 20 ",{"fg":3,"bold":true}],["  .bashrc         ",{}]],"20":[["▼",{"fg":3,"bold":true}],[" ",{}],["functions",{"fg":6,"bold":true}],["         ",{}],["|",{"inverse":true}],[" 28 ",{"fg":3,"bold":true}],["                                                *calendar-:CalendarT*                                           ",{}],["|",{"inverse":true}],[" 21 ",{"fg":3,"bold":true}],["  .cshrc          ",{}]],"21":[["    main(int argc, c",{"underline":true}],["|",{"inverse":true}],[" 29 ",{"fg":3,"bold":true}],[":CalendarT [[year] month] Show calendar at this year and this month in a                                        ",{}],["|",{"inverse":true}],[" 22 ",{"fg":3,"bold":true}],["  .dmrc           ",{}]],"22":[["~                   ",{"fg":4,"bold":true}],["|",{"inverse":true}],[" 30 ",{"fg":3,"bold":true}],["                          full-screen window.  When [year] is omitted, the                                      ",{}],["|",{"inverse":true}],[" 23 ",{"fg":3,"bold":true}],["  .esd_auth       ",{}]],"23":[["~                   ",{"fg":4,"bold":true}],["|",{"inverse":true}],[" 31 ",{"fg":3,"bold":true}],["                          calendar will show the given month in the current                                     ",{}],["|",{"inverse":true}],[" 24 ",{"fg":3,"bold":true}],["  .gtkrc-2.0      ",{}]],"24":[["~                   ",{"fg":4,"bold":true}],["|",{"inverse":true}],[" 32 ",{"fg":3,"bold":true}],["                          year.  When both [year] and [month] are omitted, the                                  ",{}],["|",{"inverse":true}],[" 25 ",{"fg":3,"bold":true}],["  .gtkrc-2.0-kde4 ",{}]],"25":[["~                   ",{"fg":4,"bold":true}],["|",{"inverse":true}],[" 33 ",{"fg":3,"bold":true}],["                          calendar will show the current month.                                                 ",{}],["|",{"inverse":true}],[" 26 ",{"fg":3,"bold":true}],["  .lesshst        ",{}]],"26":[["~                   ",{"fg":4,"bold":true}],["|",{"inverse":true}],[" 34 ",{"fg":3,"bold":true}],["                                                                                                                ",{}],["|",{"inverse":true}],[" 27 ",{"fg":3,"bold":true}],["  .tcshrc         ",{}]],"27":[["~                   ",{"fg":4,"bold":true}],["|",{"inverse":true}],[" 35 ",{"fg":3,"bold":true}],["                                                *calendar-:CalendarVR*                                          ",{}],["|",{"inverse":true}],[" 28 ",{"fg":3,"bold":true}],["  .viminfo        ",{}]],"28":[["~                   ",{"fg":4,"bold":true}],["|",{"inverse":true}],[" 36 ",{"fg":3,"bold":true}],[":CalendarVR [[year] month]  Show calendar at this year and this month in a                                      ",{}],["|",{"inverse":true}],[" 29 ",{"fg":3,"bold":true}],["  .vimrc          ",{}]],"29":[["~                   ",{"fg":4,"bold":true}],["|",{"inverse":true}],[" 37 ",{"fg":3,"bold":true}],["                          vertical split at the right site.  When [year] is                                     ",{}],["|",{"inverse":true}],[" 30 ",{"fg":3,"bold":true}],["  .xsession-errors",{}]],"30":[["~                   ",{"fg":4,"bold":true}],["|",{"inverse":true}],[" 38 ",{"fg":3,"bold":true}],["                          omitted, the calendar will show the given month in                                    ",{}],["|",{"inverse":true}],[" 31 ",{"fg":3,"bold":true}],["  anaconda-ks.cfg ",{}]],"31":[["~                   ",{"fg":4,"bold":true}],["|",{"inverse":true}],[" 39 ",{"fg":3,"bold":true}],["                          the current year.  When both [year] and [month] are                                   ",{}],["|",{"inverse":true}],[" 32 ",{"fg":3,"bold":true}],["  initial-setup-ks",{}]],"32":[["~                   ",{"fg":4,"bold":true}],["|",{"inverse":true}],[" 40 ",{"fg":3,"bold":true}],["                          omitted, the calendar will show the current month.                                    ",{}],["|",{"inverse":true}],[" 33 ",{"fg":3,"bold":true}],["  test.c          ",{}]],"33":[["~                   ",{"fg":4,"bold":true}],["|",{"inverse":true}],[" 41 ",{"fg":3,"bold":true}],["                                                                                                                ",{}],["|",{"inverse":true}],[" 34 ",{"fg":3,"bold":true}],["  test.cpp        ",{}]],"34":[["~                   ",{"fg":4,"bold":true}],["|",{"inverse":true}],[" 42 ",{"fg":3,"bold":true}],["MAPPINGS                                        *calendar-mappings*                                             ",{}],["|",{"inverse":true}],[" 35 ",{"fg":3,"bold":true}],["  .test.cpp.swp   ",{}]],"35":[["~                   ",{"fg":4,"bold":true}],["|",{"inverse":true}],[" 43 ",{"fg":3,"bold":true}],["                                                                                                                ",{}],["|",{"inverse":true}],["~                     ",{"fg":4,"bold":true}]],"36":[["~                   ",{"fg":4,"bold":true}],["|",{"inverse":true}],[" 44 ",{"fg":3,"bold":true}],["calendar.vim makes the following normal mode mappings available:                                                ",{}],["|",{"inverse":true}],["~                     ",{"fg":4,"bold":true}]],"37":[["~                   ",{"fg":4,"bold":true}],["|",{"inverse":true}],[" 45 ",{"fg":3,"bold":true}],["                                                                                                                ",{}],["|",{"inverse":true}],["~                     ",{"fg":4,"bold":true}]],"38":[["~                   ",{"fg":4,"bold":true}],["|",{"inverse":true}],[" 46 ",{"fg":3,"bold":true}],["                                                *calendar-cal*                                                  ",{}],["|",{"inverse":true}],["~                     ",{"fg":4,"bold":true}]],"39":[["~                   ",{"fg":4,"bold":true}],["|",{"inverse":true}],[" 47 ",{"fg":3,"bold":true}],["<LocalLeader>cal          Brings up the calendar in a vertical split.                                           ",{}],["|",{"inverse":true}],["~                     ",{"fg":4,"bold":true}]],"40":[["~                   ",{"fg":4,"bold":true}],["|",{"inverse":true}],[" 48 ",{"fg":3,"bold":true}],["                          Equivalent to calling |:Calendar|.                                                    ",{}],["|",{"inverse":true}],["~                     ",{"fg":4,"bold":true}]],"41":[["~                   ",{"fg":4,"bold":true}],["|",{"inverse":true}],[" 49 ",{"fg":3,"bold":true}],["                                                                                                                ",{}],["|",{"inverse":true}],["~                     ",{"fg":4,"bold":true}]],"42":[["~                   ",{"fg":4,"bold":true}],["|",{"inverse":true}],[" 50 ",{"fg":3,"bold":true}],["                                                *calendar-caL*                                                  ",{}],["|",{"inverse":true}],["~                     ",{"fg":4,"bold":true}]],"43":[["~                   ",{"fg":4,"bold":true}],["|",{"inverse":true}],[" 51 ",{"fg":3,"bold":true}],["<LocalLeader>",{}],["caL ",{"bg":1}],["        ",{}],[" Bri",{"bg":1}],["ngs up the calendar in a horizontal split.                                         ",{}],["|",{"inverse":true}],["~                     ",{"fg":4,"bold":true}]],"44":[["~                   ",{"fg":4,"bold":true}],["|",{"inverse":true}],[" 52 ",{"fg":3,"bold":true}],["                          Equivalent to calling |:Calenda",{"underline":true}],["izontal split.                                         ",{}],["|",{"inverse":true}],["~                     ",{"fg":4,"bold":true}]]},"cursor":{"x":82,"y":44,"visible":false}}],[0.010979,{"lines":{"44":[["~                   ",{"fg":4,"bold":true}],["|",{"inverse":true}],[" 52 ",{"fg":3,"bold":true}],["                          Equivalent to calling |:CalendarH|.                                                   ",{}],["|",{"inverse":true}],["~                     ",{"fg":4,"bold":true}]],"45":[["~                   ",{"fg":4,"bold":true}],["|",{"inverse":true}],[" 53 ",{"fg":3,"bold":true}],["                                                                                                                ",{"underline":true}],["|",{"inverse":true}],["~                     ",{"fg":4,"bold":true}]],"46":[["[Name] test.cpp      ",{"inverse":true}],[" NORMAL ",{"bold":true}],[" ",{}],["calendar.txt ",{"bold":true}],["                                                        unix │ utf-8 │ text │  24% ",{}],[" LN  53",{"bold":true}],[":1  ",{}],[" ",{"bold":true,"inverse":true}],[" ~/…/calendar-vim/doc>",{"bold":true}]]},"cursor":{"x":25,"y":45,"visible":true}}],[0.03772,{"lines":{"0":[["\" Press <F1> for hel",{"fg":6,"bold":true}],["|",{"inverse":true}],["  9 ",{"fg":3,"bold":true}],["                                                                                                                ",{}],["|",{"inverse":true}],["  1 ",{"fg":3,"bold":true}],["\" Press ? for help",{"fg":5,"bold":true}]],"1":[["                    ",{}],["|",{"inverse":true}],[" 10 ",{"fg":3,"bold":true}],["COMMANDS                                        *calendar-commands*                                             ",{}],["|",{"inverse":true}],["  2 ",{"fg":3,"bold":true}],["                  ",{}]],"2":[["▼",{"fg":3,"bold":true}],[" First",{"fg":5,"bold":true}],[" : ",{}],["struct",{"fg":2,"bold":true}],["    ",{}],["|",{"inverse":true}],[" 11 ",{"fg":3,"bold":true}],["                                                                                                                ",{}],["|",{"inverse":true}],["  3 ",{"fg":3,"bold":true}],[".. (up a dir)",{"fg":6,"bold":true}],["     ",{}]],"3":[["    [prototypes]",{"fg":6,"bold":true}],["    ",{}],["|",{"inverse":true}],[" 12 ",{"fg":3,"bold":true}],["calendar.vim makes the following commands available:                                                            ",{}],["|",{"inverse":true}],["  4 /root/",{"fg":3,"bold":true}],["            ",{}]],"4":[["   ",{}],["+",{"fg":2,"bold":true}],["FirstRun(void)  ",{}],["|",{"inverse":true}],[" 13 ",{"fg":3,"bold":true}],["                                                                                                                ",{}],["|",{"inverse":true}],["  5 ",{"fg":3,"bold":true}],["▸ .asciinema/",{"fg":6,"bold":true}],["     ",{}]],"5":[["   ",{}],["+",{"fg":2,"bold":true}],["FirstRun2(void) ",{}],["|",{"inverse":true}],[" 14 ",{"fg":3,"bold":true}],["                                                *calendar-:Calendar*                                            ",{}],["|",{"inverse":true}],["  6 ",{"fg":3,"bold":true}],["▸ .cache/",{"fg":6,"bold":true}],["         ",{}]],"6":[["                    ",{}],["|",{"inverse":true}],[" 15 ",{"fg":3,"bold":true}],[":Calendar [[year] month]  Show calendar at this year and this month in a                                        ",{}],["|",{"inverse":true}],["  7 ",{"fg":3,"bold":true}],["▸ .config/",{"fg":6,"bold":true}],["        ",{}]],"7":[["▼",{"fg":3,"bold":true}],[" Last",{"fg":5,"bold":true}],[" : ",{}],["struct",{"fg":2,"bold":true}],["     ",{}],["|",{"inverse":true}],[" 16 ",{"fg":3,"bold":true}],[":Calendar [[year] month]  Show calendar at this year and this month in a                                        ",{}],["|",{"inverse":true}],["  8 ",{"fg":3,"bold":true}],["▸ .dbus/",{"fg":6,"bold":true}],["          ",{}]]},"cursor":{"y":7,"visible":false}}],[0.016479,{"lines":{"0":[["\" Press <F1> for hel",{"fg":6,"bold":true}],["|",{"inverse":true}],[" 10 ",{"fg":3,"bold":true}],["COMMANDS                                        *calendar-commands*                                             ",{}],["|",{"inverse":true}],["  1 ",{"fg":3,"bold":true}],["\" Press ? for help",{"fg":5,"bold":true}]],"1":[["                    ",{}],["|",{"inverse":true}],[" 11 ",{"fg":3,"bold":true}],["                                                                                                                ",{}],["|",{"inverse":true}],["  2 ",{"fg":3,"bold":true}],["                  ",{}]],"2":[["▼",{"fg":3,"bold":true}],[" First",{"fg":5,"bold":true}],[" : ",{}],["struct",{"fg":2,"bold":true}],["    ",{}],["|",{"inverse":true}],[" 12 ",{"fg":3,"bold":true}],["calendar.vim makes the following commands available:                                                            ",{}],["|",{"inverse":true}],["  3 ",{"fg":3,"bold":true}],[".. (up a dir)",{"fg":6,"bold":true}],["     ",{}]],"3":[["    [prototypes]",{"fg":6,"bold":true}],["    ",{}],["|",{"inverse":true}],[" 13 ",{"fg":3,"bold":true}],["                                                                                                                ",{}],["|",{"inverse":true}],["  4 /root/",{"fg":3,"bold":true}],["            ",{}]],"4":[["   ",{}],["+",{"fg":2,"bold":true}],["FirstRun(void)  ",{}],["|",{"inverse":true}],[" 14 ",{"fg":3,"bold":true}],["                                                *calendar-:Calendar*                                            ",{}],["|",{"inverse":true}],["  5 ",{"fg":3,"bold":true}],["▸ .asciinema/",{"fg":6,"bold":true}],["     ",{}]],"5":[["   ",{}],["+",{"fg":2,"bold":true}],["FirstRun2(void) ",{}],["|",{"inverse":true}],[" 15 ",{"fg":3,"bold":true}],[":Calendar [[year] month]  Show calendar at this year and this month in a                                        ",{}],["|",{"inverse":true}],["  6 ",{"fg":3,"bold":true}],["▸ .cache/",{"fg":6,"bold":true}],["         ",{}]],"6":[["                    ",{}],["|",{"inverse":true}],[" 16 ",{"fg":3,"bold":true}],["                          vertical split.  When [year] is omitted, the                                          ",{}],["|",{"inverse":true}],["  7 ",{"fg":3,"bold":true}],["▸ .config/",{"fg":6,"bold":true}],["        ",{}]],"7":[["▼",{"fg":3,"bold":true}],[" Last",{"fg":5,"bold":true}],[" : ",{}],["struct",{"fg":2,"bold":true}],["     ",{}],["|",{"inverse":true}],[" 17 ",{"fg":3,"bold":true}],["                          calendar will show the given month in the current                                     ",{}],["|",{"inverse":true}],["  8 ",{"fg":3,"bold":true}],["▸ .dbus/",{"fg":6,"bold":true}],["          ",{}]],"8":[["    [functions]",{"fg":6,"bold":true}],["     ",{}],["|",{"inverse":true}],[" 18 ",{"fg":3,"bold":true}],["                          year.  When both [year] and [month] are omitted, the                                  ",{}],["|",{"inverse":true}],["  9 ",{"fg":3,"bold":true}],["▸ .gnupg/",{"fg":6,"bold":true}],["         ",{}]],"9":[["   ",{}],["+",{"fg":2,"bold":true}],["FirstRun(void)  ",{}],["|",{"inverse":true}],[" 19 ",{"fg":3,"bold":true}],["                          calendar will show the current month.                                                 ",{}],["|",{"inverse":true}],[" 10 ",{"fg":3,"bold":true}],["▸ .kde/",{"fg":6,"bold":true}],["           ",{}]],"10":[["   ",{}],["+",{"fg":2,"bold":true}],["FirstRun2(void) ",{}],["|",{"inverse":true}],[" 20 ",{"fg":3,"bold":true}],["                                                                                                                ",{}],["|",{"inverse":true}],[" 11 ",{"fg":3,"bold":true}],["▸ .local/",{"fg":6,"bold":true}],["         ",{}]],"11":[["   ",{}],["+",{"fg":2,"bold":true}],["~Last()         ",{}],["|",{"inverse":true}],[" 21 ",{"fg":3,"bold":true}],["                                                *calendar-:CalendarH*                                           ",{}],["|",{"inverse":true}],[" 12 ",{"fg":3,"bold":true}],["▸ .pki/",{"fg":6,"bold":true}],["           ",{}]],"12":[["   ",{}],["+",{"fg":2,"bold":true}],["SecondRun(void) ",{}],["|",{"inverse":true}],[" 22 ",{"fg":3,"bold":true}],[":CalendarH [[year] month] Show calendar at this year and this month in a                                        ",{}],["|",{"inverse":true}],[" 13 ",{"fg":3,"bold":true}],["▸ .ssh/",{"fg":6,"bold":true}],["           ",{}]],"13":[["   ",{}],["+",{"fg":2,"bold":true}],["SecondRun2(void)",{}],["|",{"inverse":true}],[" 23 ",{"fg":3,"bold":true}],["                          horizontal split.  When [year] is omitted, the                                        ",{}],["|",{"inverse":true}],[" 14 ",{"fg":3,"bold":true}],["▸ .vim/",{"fg":6,"bold":true}],["           ",{}]],"14":[["                    ",{}],["|",{"inverse":true}],[" 24 ",{"fg":3,"bold":true}],["                          calendar will show the given month in the current                                     ",{}],["|",{"inverse":true}],[" 15 ",{"fg":3,"bold":true}],["▸ diary/",{"fg":6,"bold":true}],["          ",{}]],"15":[["▼",{"fg":3,"bold":true}],[" Second",{"fg":5,"bold":true}],[" : ",{}],["struct",{"fg":2,"bold":true}],["   ",{}],["|",{"inverse":true}],[" 25 ",{"fg":3,"bold":true}],["                          year.  When both [year] and [month] are omitted, the                                  ",{}],["|",{"inverse":true}],[" 16 ",{"fg":3,"bold":true}],["▸ temp/",{"fg":6,"bold":true}],["           ",{}]],"16":[["    [prototypes]",{"fg":6,"bold":true}],["    ",{}],["|",{"inverse":true}],[" 26 ",{"fg":3,"bold":true}],["                          calendar will show the current month.                                                 ",{}],["|",{"inverse":true}],[" 17 ",{"fg":3,"bold":true}],["  .bash_history   ",{}]],"17":[["   ",{}],["+",{"fg":2,"bold":true}],["SecondRun(void) ",{}],["|",{"inverse":true}],[" 27 ",{"fg":3,"bold":true}],["                                                                                                                ",{}],["|",{"inverse":true}],[" 18 ",{"fg":3,"bold":true}],["  .bash_logout    ",{}]],"18":[["   ",{}],["+",{"fg":2,"bold":true}],["SecondRun2(void)",{}],["|",{"inverse":true}],[" 28 ",{"fg":3,"bold":true}],["                                                *calendar-:CalendarT*                                           ",{}],["|",{"inverse":true}],[" 19 ",{"fg":3,"bold":true}],["  .bash_profile   ",{"underline":true}]],"19":[["                    ",{}],["|",{"inverse":true}],[" 29 ",{"fg":3,"bold":true}],[":CalendarT [[year] month] Show calendar at this year and this month in a                                        ",{}],["|",{"inverse":true}],[" 20 ",{"fg":3,"bold":true}],["  .bashrc         ",{}]],"20":[["▼",{"fg":3,"bold":true}],[" ",{}],["functions",{"fg":6,"bold":true}],["         ",{}],["|",{"inverse":true}],[" 30 ",{"fg":3,"bold":true}],["                          full-screen window.  When [year] is omitted, the                                      ",{}],["|",{"inverse":true}],[" 21 ",{"fg":3,"bold":true}],["  .cshrc          ",{}]],"21":[["    main(int argc, c",{"underline":true}],["|",{"inverse":true}],[" 31 ",{"fg":3,"bold":true}],["                          calendar will show the given month in the current                                     ",{}],["|",{"inverse":true}],[" 22 ",{"fg":3,"bold":true}],["  .dmrc           ",{}]],"22":[["~                   ",{"fg":4,"bold":true}],["|",{"inverse":true}],[" 32 ",{"fg":3,"bold":true}],["                          year.  When both [year] and [month] are omitted, the                                  ",{}],["|",{"inverse":true}],[" 23 ",{"fg":3,"bold":true}],["  .esd_auth       ",{}]],"23":[["~                   ",{"fg":4,"bold":true}],["|",{"inverse":true}],[" 33 ",{"fg":3,"bold":true}],["                          calendar will show the current month.                                                 ",{}],["|",{"inverse":true}],[" 24 ",{"fg":3,"bold":true}],["  .gtkrc-2.0      ",{}]],"24":[["~                   ",{"fg":4,"bold":true}],["|",{"inverse":true}],[" 34 ",{"fg":3,"bold":true}],["                                                                                                                ",{}],["|",{"inverse":true}],[" 25 ",{"fg":3,"bold":true}],["  .gtkrc-2.0-kde4 ",{}]],"25":[["~                   ",{"fg":4,"bold":true}],["|",{"inverse":true}],[" 35 ",{"fg":3,"bold":true}],["                                                *calendar-:CalendarVR*                                          ",{}],["|",{"inverse":true}],[" 26 ",{"fg":3,"bold":true}],["  .lesshst        ",{}]],"26":[["~                   ",{"fg":4,"bold":true}],["|",{"inverse":true}],[" 36 ",{"fg":3,"bold":true}],[":CalendarVR [[year] month]  Show calendar at this year and this month in a                                      ",{}],["|",{"inverse":true}],[" 27 ",{"fg":3,"bold":true}],["  .tcshrc         ",{}]],"27":[["~                   ",{"fg":4,"bold":true}],["|",{"inverse":true}],[" 37 ",{"fg":3,"bold":true}],["                          vertical split at the right site.  When [year] is                                     ",{}],["|",{"inverse":true}],[" 28 ",{"fg":3,"bold":true}],["  .viminfo        ",{}]],"28":[["~                   ",{"fg":4,"bold":true}],["|",{"inverse":true}],[" 38 ",{"fg":3,"bold":true}],["                          omitted, the calendar will show the given month in                                    ",{}],["|",{"inverse":true}],[" 29 ",{"fg":3,"bold":true}],["  .vimrc          ",{}]],"29":[["~                   ",{"fg":4,"bold":true}],["|",{"inverse":true}],[" 39 ",{"fg":3,"bold":true}],["                          the current year.  When both [year] and [month] are                                   ",{}],["|",{"inverse":true}],[" 30 ",{"fg":3,"bold":true}],["  .xsession-errors",{}]],"30":[["~                   ",{"fg":4,"bold":true}],["|",{"inverse":true}],[" 39 ",{"fg":3,"bold":true}],["                          the current year.  When both [year] and [month] are                                   ",{}],["|",{"inverse":true}],[" 31 ",{"fg":3,"bold":true}],["  anaconda-ks.cfg ",{}]],"31":[["~                   ",{"fg":4,"bold":true}],["|",{"inverse":true}],[" 40 ",{"fg":3,"bold":true}],["                          omitted, the calendar will show the current month.                                    ",{}],["|",{"inverse":true}],[" 32 ",{"fg":3,"bold":true}],["  initial-setup-ks",{}]],"32":[["~                   ",{"fg":4,"bold":true}],["|",{"inverse":true}],[" 41 ",{"fg":3,"bold":true}],["                                                                                                                ",{}],["|",{"inverse":true}],[" 33 ",{"fg":3,"bold":true}],["  test.c          ",{}]],"33":[["~                   ",{"fg":4,"bold":true}],["|",{"inverse":true}],[" 42 ",{"fg":3,"bold":true}],["MAPPINGS                                        *calendar-mappings*                                             ",{}],["|",{"inverse":true}],[" 34 ",{"fg":3,"bold":true}],["  test.cpp        ",{}]],"34":[["~                   ",{"fg":4,"bold":true}],["|",{"inverse":true}],[" 43 ",{"fg":3,"bold":true}],["                                                                                                                ",{}],["|",{"inverse":true}],[" 35 ",{"fg":3,"bold":true}],["  .test.cpp.swp   ",{}]],"35":[["~                   ",{"fg":4,"bold":true}],["|",{"inverse":true}],[" 44 ",{"fg":3,"bold":true}],["calendar.vim makes the following normal mode mappings available:                                                ",{}],["|",{"inverse":true}],["~                     ",{"fg":4,"bold":true}]],"36":[["~                   ",{"fg":4,"bold":true}],["|",{"inverse":true}],[" 45 ",{"fg":3,"bold":true}],["                                                                                                                ",{}],["|",{"inverse":true}],["~                     ",{"fg":4,"bold":true}]],"37":[["~                   ",{"fg":4,"bold":true}],["|",{"inverse":true}],[" 46 ",{"fg":3,"bold":true}],["                                                *calendar-cal*                                                  ",{}],["|",{"inverse":true}],["~                     ",{"fg":4,"bold":true}]],"38":[["~                   ",{"fg":4,"bold":true}],["|",{"inverse":true}],[" 47 ",{"fg":3,"bold":true}],["<LocalLeader>cal          Brings up the calendar in a vertical split.                                           ",{}],["|",{"inverse":true}],["~                     ",{"fg":4,"bold":true}]],"39":[["~                   ",{"fg":4,"bold":true}],["|",{"inverse":true}],[" 48 ",{"fg":3,"bold":true}],["                          Equivalent to calling |:Calendar|.                                                    ",{}],["|",{"inverse":true}],["~                     ",{"fg":4,"bold":true}]],"40":[["~                   ",{"fg":4,"bold":true}],["|",{"inverse":true}],[" 49 ",{"fg":3,"bold":true}],["                                                                                                                ",{}],["|",{"inverse":true}],["~                     ",{"fg":4,"bold":true}]],"41":[["~                   ",{"fg":4,"bold":true}],["|",{"inverse":true}],[" 50 ",{"fg":3,"bold":true}],["                                                *calendar-caL*                                                  ",{}],["|",{"inverse":true}],["~                     ",{"fg":4,"bold":true}]],"42":[["~                   ",{"fg":4,"bold":true}],["|",{"inverse":true}],[" 51 ",{"fg":3,"bold":true}],["<LocalLeader>",{}],["caL ",{"bg":1}],["        ",{}],[" Bri",{"bg":1}],["ngs up the calendar in a horizontal split.                                         ",{}],["|",{"inverse":true}],["~                     ",{"fg":4,"bold":true}]],"43":[["~                   ",{"fg":4,"bold":true}],["|",{"inverse":true}],[" 52 ",{"fg":3,"bold":true}],["                          Equivalent to calling |:CalendarH|.                                                   ",{}],["|",{"inverse":true}],["~                     ",{"fg":4,"bold":true}]],"44":[["~                   ",{"fg":4,"bold":true}],["|",{"inverse":true}],[" 53 ",{"fg":3,"bold":true}],["                                                                                                                ",{}],["|",{"inverse":true}],["~                     ",{"fg":4,"bold":true}]],"45":[["~                   ",{"fg":4,"bold":true}],["|",{"inverse":true}],[" 54 ",{"fg":3,"bold":true}],["SETTINGS                                        *calendar-settings*                                             ",{"underline":true}],["|",{"inverse":true}],["~                     ",{"fg":4,"bold":true}]],"46":[["[Name] test.cpp      ",{"inverse":true}],[" NORMAL ",{"bold":true}],[" ",{}],["calendar.txt ",{"bold":true}],["                                                        unix │ utf-8 │ text │  24% ",{}],[" LN  54",{"bold":true}],[":1  ",{}],[" ",{"bold":true,"inverse":true}],[" ~/…/calendar-vim/doc>",{"bold":true}]]},"cursor":{"x":112,"y":29}}],[0.014147,{"lines":{"30":[["~                   ",{"fg":4,"bold":true}],["|",{"inverse":true}],[" 40 ",{"fg":3,"bold":true}],["                          omitted, the calendar will show the current month.                                    ",{}],["|",{"inverse":true}],[" 31 ",{"fg":3,"bold":true}],["  anaconda-ks.cfg ",{}]],"31":[["~                   ",{"fg":4,"bold":true}],["|",{"inverse":true}],[" 41 ",{"fg":3,"bold":true}],["                                                                                                                ",{}],["|",{"inverse":true}],[" 32 ",{"fg":3,"bold":true}],["  initial-setup-ks",{}]],"32":[["~                   ",{"fg":4,"bold":true}],["|",{"inverse":true}],[" 42 ",{"fg":3,"bold":true}],["MAPPINGS                                        *calendar-mappings*                                             ",{}],["|",{"inverse":true}],[" 33 ",{"fg":3,"bold":true}],["  test.c          ",{}]],"33":[["~                   ",{"fg":4,"bold":true}],["|",{"inverse":true}],[" 43 ",{"fg":3,"bold":true}],["                                                                                                                ",{}],["|",{"inverse":true}],[" 34 ",{"fg":3,"bold":true}],["  test.cpp        ",{}]],"34":[["~                   ",{"fg":4,"bold":true}],["|",{"inverse":true}],[" 44 ",{"fg":3,"bold":true}],["calendar.vim makes the following normal mode mappings available:                                                ",{}],["|",{"inverse":true}],[" 35 ",{"fg":3,"bold":true}],["  .test.cpp.swp   ",{}]],"35":[["~                   ",{"fg":4,"bold":true}],["|",{"inverse":true}],[" 45 ",{"fg":3,"bold":true}],["                                                                                                                ",{}],["|",{"inverse":true}],["~                     ",{"fg":4,"bold":true}]],"36":[["~                   ",{"fg":4,"bold":true}],["|",{"inverse":true}],[" 46 ",{"fg":3,"bold":true}],["                                                *calendar-cal*                                                  ",{}],["|",{"inverse":true}],["~                     ",{"fg":4,"bold":true}]],"37":[["~                   ",{"fg":4,"bold":true}],["|",{"inverse":true}],[" 47 ",{"fg":3,"bold":true}],["<LocalLeader>cal          Brings up the calendar in a vertical split.                                           ",{}],["|",{"inverse":true}],["~                     ",{"fg":4,"bold":true}]],"38":[["~                   ",{"fg":4,"bold":true}],["|",{"inverse":true}],[" 48 ",{"fg":3,"bold":true}],["                          Equivalent to calling |:Calendar|.                                                    ",{}],["|",{"inverse":true}],["~                     ",{"fg":4,"bold":true}]],"39":[["~                   ",{"fg":4,"bold":true}],["|",{"inverse":true}],[" 49 ",{"fg":3,"bold":true}],["                                                                                                                ",{}],["|",{"inverse":true}],["~                     ",{"fg":4,"bold":true}]],"40":[["~                   ",{"fg":4,"bold":true}],["|",{"inverse":true}],[" 50 ",{"fg":3,"bold":true}],["                                                *calendar-caL*                                                  ",{}],["|",{"inverse":true}],["~                     ",{"fg":4,"bold":true}]],"41":[["~                   ",{"fg":4,"bold":true}],["|",{"inverse":true}],[" 51 ",{"fg":3,"bold":true}],["<LocalLeader>",{}],["caL ",{"bg":1}],["        ",{}],[" Bri",{"bg":1}],["ngs up the calendar in a horizontal split.                                         ",{}],["|",{"inverse":true}],["~                     ",{"fg":4,"bold":true}]],"42":[["~                   ",{"fg":4,"bold":true}],["|",{"inverse":true}],[" 52 ",{"fg":3,"bold":true}],["                          Equivalent to calling |:CalendarH|.                                                   ",{}],["|",{"inverse":true}],["~                     ",{"fg":4,"bold":true}]],"43":[["~                   ",{"fg":4,"bold":true}],["|",{"inverse":true}],[" 53 ",{"fg":3,"bold":true}],["                                                                                                                ",{}],["|",{"inverse":true}],["~                     ",{"fg":4,"bold":true}]],"44":[["~                   ",{"fg":4,"bold":true}],["|",{"inverse":true}],[" 54 ",{"fg":3,"bold":true}],["SETTINGS                                        *calendar-settings*                                             ",{}],["|",{"inverse":true}],["~                     ",{"fg":4,"bold":true}]],"45":[["~                   ",{"fg":4,"bold":true}],["|",{"inverse":true}],[" 55 ",{"fg":3,"bold":true}],["                                                                                                                ",{"underline":true}],["|",{"inverse":true}],["~                     ",{"fg":4,"bold":true}]],"46":[["[Name] test.cpp      ",{"inverse":true}],[" NORMAL ",{"bold":true}],[" ",{}],["calendar.txt ",{"bold":true}],["                                                        unix │ utf-8 │ text │  25% ",{}],[" LN  55",{"bold":true}],[":1  ",{}],[" ",{"bold":true,"inverse":true}],[" ~/…/calendar-vim/doc>",{"bold":true}]]},"cursor":{"x":25,"y":45,"visible":true}}],[0.023656,{"lines":{"0":[["\" Press <F1> for hel",{"fg":6,"bold":true}],["|",{"inverse":true}],[" 11 ",{"fg":3,"bold":true}],["                                                                                                                ",{}],["|",{"inverse":true}],["  1 ",{"fg":3,"bold":true}],["\" Press ? for help",{"fg":5,"bold":true}]],"1":[["                    ",{}],["|",{"inverse":true}],[" 12 ",{"fg":3,"bold":true}],["calendar.vim makes the following commands available:                                                            ",{}],["|",{"inverse":true}],["  2 ",{"fg":3,"bold":true}],["                  ",{}]],"2":[["▼",{"fg":3,"bold":true}],[" First",{"fg":5,"bold":true}],[" : ",{}],["struct",{"fg":2,"bold":true}],["    ",{}],["|",{"inverse":true}],[" 13 ",{"fg":3,"bold":true}],["                                                                                                                ",{}],["|",{"inverse":true}],["  3 ",{"fg":3,"bold":true}],[".. (up a dir)",{"fg":6,"bold":true}],["     ",{}]],"3":[["    [prototypes]",{"fg":6,"bold":true}],["    ",{}],["|",{"inverse":true}],[" 14 ",{"fg":3,"bold":true}],["                                                *calendar-:Calendar*                                            ",{}],["|",{"inverse":true}],["  4 /root/",{"fg":3,"bold":true}],["            ",{}]],"4":[["   ",{}],["+",{"fg":2,"bold":true}],["FirstRun(void)  ",{}],["|",{"inverse":true}],[" 15 ",{"fg":3,"bold":true}],[":Calendar [[year] month]  Show calendar at this year and this month in a                                        ",{}],["|",{"inverse":true}],["  5 ",{"fg":3,"bold":true}],["▸ .asciinema/",{"fg":6,"bold":true}],["     ",{}]],"5":[["   ",{}],["+",{"fg":2,"bold":true}],["FirstRun2(void) ",{}],["|",{"inverse":true}],[" 16 ",{"fg":3,"bold":true}],["                          vertical split.  When [year] is omitted, the                                          ",{}],["|",{"inverse":true}],["  6 ",{"fg":3,"bold":true}],["▸ .cache/",{"fg":6,"bold":true}],["         ",{}]],"6":[["                    ",{}],["|",{"inverse":true}],[" 17 ",{"fg":3,"bold":true}],["                          calendar will show the given month in the current                                     ",{}],["|",{"inverse":true}],["  7 ",{"fg":3,"bold":true}],["▸ .config/",{"fg":6,"bold":true}],["        ",{}]],"7":[["▼",{"fg":3,"bold":true}],[" Last",{"fg":5,"bold":true}],[" : ",{}],["struct",{"fg":2,"bold":true}],["     ",{}],["|",{"inverse":true}],[" 18 ",{"fg":3,"bold":true}],["                          calendar will show the given month in the current                                     ",{}],["|",{"inverse":true}],["  8 ",{"fg":3,"bold":true}],["▸ .dbus/",{"fg":6,"bold":true}],["          ",{}]]},"cursor":{"y":7,"visible":false}}],[0.003618000000000001,{"lines":{"7":[["▼",{"fg":3,"bold":true}],[" Last",{"fg":5,"bold":true}],[" : ",{}],["struct",{"fg":2,"bold":true}],["     ",{}],["|",{"inverse":true}],[" 18 ",{"fg":3,"bold":true}],["                          year.  When both [year] and [month] are omitted, the                                  ",{}],["|",{"inverse":true}],["  8 ",{"fg":3,"bold":true}],["▸ .dbus/",{"fg":6,"bold":true}],["          ",{}]],"8":[["    [functions]",{"fg":6,"bold":true}],["     ",{}],["|",{"inverse":true}],[" 19 ",{"fg":3,"bold":true}],["                          calendar will show the current month.                                                 ",{}],["|",{"inverse":true}],["  9 ",{"fg":3,"bold":true}],["▸ .gnupg/",{"fg":6,"bold":true}],["         ",{}]],"9":[["   ",{}],["+",{"fg":2,"bold":true}],["FirstRun(void)  ",{}],["|",{"inverse":true}],[" 20 ",{"fg":3,"bold":true}],["                                                                                                                ",{}],["|",{"inverse":true}],[" 10 ",{"fg":3,"bold":true}],["▸ .kde/",{"fg":6,"bold":true}],["           ",{}]],"10":[["   ",{}],["+",{"fg":2,"bold":true}],["FirstRun2(void) ",{}],["|",{"inverse":true}],[" 21 ",{"fg":3,"bold":true}],["                                                *calendar-:CalendarH*                                           ",{}],["|",{"inverse":true}],[" 11 ",{"fg":3,"bold":true}],["▸ .local/",{"fg":6,"bold":true}],["         ",{}]],"11":[["   ",{}],["+",{"fg":2,"bold":true}],["~Last()         ",{}],["|",{"inverse":true}],[" 22 ",{"fg":3,"bold":true}],[":CalendarH [[year] month] Show calendar at this year and this month in a                                        ",{}],["|",{"inverse":true}],[" 12 ",{"fg":3,"bold":true}],["▸ .pki/",{"fg":6,"bold":true}],["           ",{}]],"12":[["   ",{}],["+",{"fg":2,"bold":true}],["SecondRun(void) ",{}],["|",{"inverse":true}],[" 23 ",{"fg":3,"bold":true}],["                          horizontal split.  When [year] is omitted, the                                        ",{}],["|",{"inverse":true}],[" 13 ",{"fg":3,"bold":true}],["▸ .ssh/",{"fg":6,"bold":true}],["           ",{}]],"13":[["   ",{}],["+",{"fg":2,"bold":true}],["SecondRun2(void)",{}],["|",{"inverse":true}],[" 24 ",{"fg":3,"bold":true}],["                          calendar will show the given month in the current                                     ",{}],["|",{"inverse":true}],[" 14 ",{"fg":3,"bold":true}],["▸ .vim/",{"fg":6,"bold":true}],["           ",{}]],"14":[["                    ",{}],["|",{"inverse":true}],[" 25 ",{"fg":3,"bold":true}],["                          year.  When both [year] and [month] are omitted, the                                  ",{}],["|",{"inverse":true}],[" 15 ",{"fg":3,"bold":true}],["▸ diary/",{"fg":6,"bold":true}],["          ",{}]],"15":[["▼",{"fg":3,"bold":true}],[" Second",{"fg":5,"bold":true}],[" : ",{}],["struct",{"fg":2,"bold":true}],["   ",{}],["|",{"inverse":true}],[" 26 ",{"fg":3,"bold":true}],["                          calendar will show the current month.                                                 ",{}],["|",{"inverse":true}],[" 16 ",{"fg":3,"bold":true}],["▸ temp/",{"fg":6,"bold":true}],["           ",{}]],"16":[["    [prototypes]",{"fg":6,"bold":true}],["    ",{}],["|",{"inverse":true}],[" 27 ",{"fg":3,"bold":true}],["                                                                                                                ",{}],["|",{"inverse":true}],[" 17 ",{"fg":3,"bold":true}],["  .bash_history   ",{}]],"17":[["   ",{}],["+",{"fg":2,"bold":true}],["SecondRun(void) ",{}],["|",{"inverse":true}],[" 28 ",{"fg":3,"bold":true}],["                                                *calendar-:CalendarT*                                           ",{}],["|",{"inverse":true}],[" 18 ",{"fg":3,"bold":true}],["  .bash_logout    ",{}]],"18":[["   ",{}],["+",{"fg":2,"bold":true}],["SecondRun2(void)",{}],["|",{"inverse":true}],[" 29 ",{"fg":3,"bold":true}],[":CalendarT [[year] month] Show calendar at this year and this month in a                                        ",{}],["|",{"inverse":true}],[" 19 ",{"fg":3,"bold":true}],["  .bash_profile   ",{"underline":true}]],"19":[["                    ",{}],["|",{"inverse":true}],[" 30 ",{"fg":3,"bold":true}],["                          full-screen window.  When [year] is omitted, the                                      ",{}],["|",{"inverse":true}],[" 20 ",{"fg":3,"bold":true}],["  .bashrc         ",{}]],"20":[["▼",{"fg":3,"bold":true}],[" ",{}],["functions",{"fg":6,"bold":true}],["         ",{}],["|",{"inverse":true}],[" 31 ",{"fg":3,"bold":true}],["                          calendar will show the given month in the current                                     ",{}],["|",{"inverse":true}],[" 21 ",{"fg":3,"bold":true}],["  .cshrc          ",{}]],"21":[["    main(int argc, c",{"underline":true}],["|",{"inverse":true}],[" 32 ",{"fg":3,"bold":true}],["                          year.  When both [year] and [month] are omitted, the                                  ",{}],["|",{"inverse":true}],[" 22 ",{"fg":3,"bold":true}],["  .dmrc           ",{}]],"22":[["~                   ",{"fg":4,"bold":true}],["|",{"inverse":true}],[" 33 ",{"fg":3,"bold":true}],["                          calendar will show the current month.                                                 ",{}],["|",{"inverse":true}],[" 23 ",{"fg":3,"bold":true}],["  .esd_auth       ",{}]],"23":[["~                   ",{"fg":4,"bold":true}],["|",{"inverse":true}],[" 34 ",{"fg":3,"bold":true}],["                                                                                                                ",{}],["|",{"inverse":true}],[" 24 ",{"fg":3,"bold":true}],["  .gtkrc-2.0      ",{}]],"24":[["~                   ",{"fg":4,"bold":true}],["|",{"inverse":true}],[" 35 ",{"fg":3,"bold":true}],["                                                *calendar-:CalendarVR*                                          ",{}],["|",{"inverse":true}],[" 25 ",{"fg":3,"bold":true}],["  .gtkrc-2.0-kde4 ",{}]],"25":[["~                   ",{"fg":4,"bold":true}],["|",{"inverse":true}],[" 36 ",{"fg":3,"bold":true}],[":CalendarVR [[year] month]  Show calendar at this year and this month in a                                      ",{}],["|",{"inverse":true}],[" 26 ",{"fg":3,"bold":true}],["  .lesshst        ",{}]],"26":[["~                   ",{"fg":4,"bold":true}],["|",{"inverse":true}],[" 37 ",{"fg":3,"bold":true}],["                          vertical split at the right site.  When [year] is                                     ",{}],["|",{"inverse":true}],[" 27 ",{"fg":3,"bold":true}],["  .tcshrc         ",{}]],"27":[["~                   ",{"fg":4,"bold":true}],["|",{"inverse":true}],[" 38 ",{"fg":3,"bold":true}],["                          omitted, the calendar will show the given month in                                    ",{}],["|",{"inverse":true}],[" 28 ",{"fg":3,"bold":true}],["  .viminfo        ",{}]],"28":[["~                   ",{"fg":4,"bold":true}],["|",{"inverse":true}],[" 39 ",{"fg":3,"bold":true}],["                          the current year.  When both [year] and [month] are                                   ",{}],["|",{"inverse":true}],[" 29 ",{"fg":3,"bold":true}],["  .vimrc          ",{}]],"29":[["~                   ",{"fg":4,"bold":true}],["|",{"inverse":true}],[" 40 ",{"fg":3,"bold":true}],["                          omitted, the calendar will show the current month.                                    ",{}],["|",{"inverse":true}],[" 30 ",{"fg":3,"bold":true}],["  .xsession-errors",{}]],"30":[["~                   ",{"fg":4,"bold":true}],["|",{"inverse":true}],[" 41 ",{"fg":3,"bold":true}],["                                                                                                                ",{}],["|",{"inverse":true}],[" 31 ",{"fg":3,"bold":true}],["  anaconda-ks.cfg ",{}]],"31":[["~                   ",{"fg":4,"bold":true}],["|",{"inverse":true}],[" 42 ",{"fg":3,"bold":true}],["MAPPINGS                                        *calendar-mappings*                                             ",{}],["|",{"inverse":true}],[" 32 ",{"fg":3,"bold":true}],["  initial-setup-ks",{}]],"32":[["~                   ",{"fg":4,"bold":true}],["|",{"inverse":true}],[" 43 ",{"fg":3,"bold":true}],["                                                                                                                ",{}],["|",{"inverse":true}],[" 33 ",{"fg":3,"bold":true}],["  test.c          ",{}]],"33":[["~                   ",{"fg":4,"bold":true}],["|",{"inverse":true}],[" 44 ",{"fg":3,"bold":true}],["calendar.vim makes the following normal mode mappings available:                                                ",{}],["|",{"inverse":true}],[" 34 ",{"fg":3,"bold":true}],["  test.cpp        ",{}]],"34":[["~                   ",{"fg":4,"bold":true}],["|",{"inverse":true}],[" 45 ",{"fg":3,"bold":true}],["                                                                                                                ",{}],["|",{"inverse":true}],[" 35 ",{"fg":3,"bold":true}],["  .test.cpp.swp   ",{}]],"35":[["~                   ",{"fg":4,"bold":true}],["|",{"inverse":true}],[" 46 ",{"fg":3,"bold":true}],["                                                *calendar-cal*                                                  ",{}],["|",{"inverse":true}],["~                     ",{"fg":4,"bold":true}]],"36":[["~                   ",{"fg":4,"bold":true}],["|",{"inverse":true}],[" 47 ",{"fg":3,"bold":true}],["<LocalLeader>cal          Brings up the calendar in a vertical split.                                           ",{}],["|",{"inverse":true}],["~                     ",{"fg":4,"bold":true}]],"37":[["~                   ",{"fg":4,"bold":true}],["|",{"inverse":true}],[" 48 ",{"fg":3,"bold":true}],["                          Equivalent to calling |:Calendar|.                                                    ",{}],["|",{"inverse":true}],["~                     ",{"fg":4,"bold":true}]],"38":[["~                   ",{"fg":4,"bold":true}],["|",{"inverse":true}],[" 49 ",{"fg":3,"bold":true}],["                                                                                                                ",{}],["|",{"inverse":true}],["~                     ",{"fg":4,"bold":true}]],"39":[["~                   ",{"fg":4,"bold":true}],["|",{"inverse":true}],[" 50 ",{"fg":3,"bold":true}],["                                                *calendar-caL*                                                  ",{}],["|",{"inverse":true}],["~                     ",{"fg":4,"bold":true}]],"40":[["~                   ",{"fg":4,"bold":true}],["|",{"inverse":true}],[" 51 ",{"fg":3,"bold":true}],["<LocalLeader>",{}],["caL ",{"bg":1}],["        ",{}],[" Bri",{"bg":1}],["ngs up the calendar in a horizontal split.                                         ",{}],["|",{"inverse":true}],["~                     ",{"fg":4,"bold":true}]],"41":[["~                   ",{"fg":4,"bold":true}],["|",{"inverse":true}],[" 52 ",{"fg":3,"bold":true}],["                          Equivalent to calling |:CalendarH|.                                                   ",{}],["|",{"inverse":true}],["~                     ",{"fg":4,"bold":true}]],"42":[["~                   ",{"fg":4,"bold":true}],["|",{"inverse":true}],[" 53 ",{"fg":3,"bold":true}],["                                                                                                                ",{}],["|",{"inverse":true}],["~                     ",{"fg":4,"bold":true}]],"43":[["~                   ",{"fg":4,"bold":true}],["|",{"inverse":true}],[" 54 ",{"fg":3,"bold":true}],["SETTINGS                                        *calendar-settings*                                             ",{}],["|",{"inverse":true}],["~                     ",{"fg":4,"bold":true}]],"44":[["~                   ",{"fg":4,"bold":true}],["|",{"inverse":true}],[" 55 ",{"fg":3,"bold":true}],["                                                         ",{"underline":true}],["-settings*                                             ",{}],["|",{"inverse":true}],["~                     ",{"fg":4,"bold":true}]]},"cursor":{"x":82,"y":44}}],[0.015269,{"lines":{"44":[["~                   ",{"fg":4,"bold":true}],["|",{"inverse":true}],[" 55 ",{"fg":3,"bold":true}],["                                                                                                                ",{}],["|",{"inverse":true}],["~                     ",{"fg":4,"bold":true}]],"45":[["~                   ",{"fg":4,"bold":true}],["|",{"inverse":true}],[" 56 ",{"fg":3,"bold":true}],["calendar.vim can be con",{"underline":true}],["figured using the following sett",{"bg":1}],["ings:                                                    ",{"underline":true}],["|",{"inverse":true}],["~                     ",{"fg":4,"bold":true}]],"46":[["[Name] test.cpp      ",{"inverse":true}],[" NORMAL ",{"bold":true}],[" ",{}],["calendar.txt ",{"bold":true}],["                                                        unix │ utf-8 │ text │  25% ",{}],[" LN  56",{"bold":true}],[":1  ",{}],[" ",{"bold":true,"inverse":true}],[" ~/…/calendar-vim/doc>",{"bold":true}]]},"cursor":{"x":25,"y":45,"visible":true}}],[0.009676000000000001,{"lines":{"0":[["\" Press <F1> for hel",{"fg":6,"bold":true}],["|",{"inverse":true}],[" 12 ",{"fg":3,"bold":true}],["calendar.vim makes the following commands available:                                                            ",{}],["|",{"inverse":true}],["  1 ",{"fg":3,"bold":true}],["\" Press ? for help",{"fg":5,"bold":true}]],"1":[["                    ",{}],["|",{"inverse":true}],[" 13 ",{"fg":3,"bold":true}],["                                                                                                                ",{}],["|",{"inverse":true}],["  2 ",{"fg":3,"bold":true}],["                  ",{}]],"2":[["▼",{"fg":3,"bold":true}],[" First",{"fg":5,"bold":true}],[" : ",{}],["struct",{"fg":2,"bold":true}],["    ",{}],["|",{"inverse":true}],[" 14 ",{"fg":3,"bold":true}],["                                                *calendar-:Calendar*                                            ",{}],["|",{"inverse":true}],["  3 ",{"fg":3,"bold":true}],[".. (up a dir)",{"fg":6,"bold":true}],["     ",{}]],"3":[["    [prototypes]",{"fg":6,"bold":true}],["    ",{}],["|",{"inverse":true}],[" 15 ",{"fg":3,"bold":true}],[":Calendar [[year] month]  Show calendar at this year and this month in a                                        ",{}],["|",{"inverse":true}],["  4 /root/",{"fg":3,"bold":true}],["            ",{}]],"4":[["   ",{}],["+",{"fg":2,"bold":true}],["FirstRun(void)  ",{}],["|",{"inverse":true}],[" 16 ",{"fg":3,"bold":true}],["                          vertical split.  When [year] is omitted, the                                          ",{}],["|",{"inverse":true}],["  5 ",{"fg":3,"bold":true}],["▸ .asciinema/",{"fg":6,"bold":true}],["     ",{}]],"5":[["   ",{}],["+",{"fg":2,"bold":true}],["FirstRun2(void) ",{}],["|",{"inverse":true}],[" 17 ",{"fg":3,"bold":true}],["                          calendar will show the given month in the current                                     ",{}],["|",{"inverse":true}],["  6 ",{"fg":3,"bold":true}],["▸ .cache/",{"fg":6,"bold":true}],["         ",{}]],"6":[["                    ",{}],["|",{"inverse":true}],[" 18 ",{"fg":3,"bold":true}],["                          year.  When both [year] and [month] are omitted, the                                  ",{}],["|",{"inverse":true}],["  7 ",{"fg":3,"bold":true}],["▸ .config/",{"fg":6,"bold":true}],["        ",{}]],"7":[["▼",{"fg":3,"bold":true}],[" Last",{"fg":5,"bold":true}],[" : ",{}],["struct",{"fg":2,"bold":true}],["     ",{}],["|",{"inverse":true}],[" 19 ",{"fg":3,"bold":true}],["                          calendar will show the current month.                                                 ",{}],["|",{"inverse":true}],["  8 ",{"fg":3,"bold":true}],["▸ .dbus/",{"fg":6,"bold":true}],["          ",{}]],"8":[["    [functions]",{"fg":6,"bold":true}],["     ",{}],["|",{"inverse":true}],[" 20 ",{"fg":3,"bold":true}],["                                                                                                                ",{}],["|",{"inverse":true}],["  9 ",{"fg":3,"bold":true}],["▸ .gnupg/",{"fg":6,"bold":true}],["         ",{}]],"9":[["   ",{}],["+",{"fg":2,"bold":true}],["FirstRun(void)  ",{}],["|",{"inverse":true}],[" 21 ",{"fg":3,"bold":true}],["                                                *calendar-:CalendarH*                                           ",{}],["|",{"inverse":true}],[" 10 ",{"fg":3,"bold":true}],["▸ .kde/",{"fg":6,"bold":true}],["           ",{}]],"10":[["   ",{}],["+",{"fg":2,"bold":true}],["FirstRun2(void) ",{}],["|",{"inverse":true}],[" 22 ",{"fg":3,"bold":true}],[":CalendarH [[year] month] Show calendar at this year and this month in a                                        ",{}],["|",{"inverse":true}],[" 11 ",{"fg":3,"bold":true}],["▸ .local/",{"fg":6,"bold":true}],["         ",{}]],"11":[["   ",{}],["+",{"fg":2,"bold":true}],["~Last()         ",{}],["|",{"inverse":true}],[" 23 ",{"fg":3,"bold":true}],["                          horizontal split.  When [year] is omitted, the                                        ",{}],["|",{"inverse":true}],[" 12 ",{"fg":3,"bold":true}],["▸ .pki/",{"fg":6,"bold":true}],["           ",{}]],"12":[["   ",{}],["+",{"fg":2,"bold":true}],["SecondRun(void) ",{}],["|",{"inverse":true}],[" 24 ",{"fg":3,"bold":true}],["                          calendar will show the given month in the current                                     ",{}],["|",{"inverse":true}],[" 13 ",{"fg":3,"bold":true}],["▸ .ssh/",{"fg":6,"bold":true}],["           ",{}]],"13":[["   ",{}],["+",{"fg":2,"bold":true}],["SecondRun2(void)",{}],["|",{"inverse":true}],[" 25 ",{"fg":3,"bold":true}],["                          year.  When both [year] and [month] are omitted, the                                  ",{}],["|",{"inverse":true}],[" 14 ",{"fg":3,"bold":true}],["▸ .vim/",{"fg":6,"bold":true}],["           ",{}]],"14":[["                    ",{}],["|",{"inverse":true}],[" 26 ",{"fg":3,"bold":true}],["                          calendar will show the current month.                                                 ",{}],["|",{"inverse":true}],[" 15 ",{"fg":3,"bold":true}],["▸ diary/",{"fg":6,"bold":true}],["          ",{}]],"15":[["▼",{"fg":3,"bold":true}],[" Second",{"fg":5,"bold":true}],[" : ",{}],["struct",{"fg":2,"bold":true}],["   ",{}],["|",{"inverse":true}],[" 27 ",{"fg":3,"bold":true}],["                                                                                                                ",{}],["|",{"inverse":true}],[" 16 ",{"fg":3,"bold":true}],["▸ temp/",{"fg":6,"bold":true}],["           ",{}]],"16":[["    [prototypes]",{"fg":6,"bold":true}],["    ",{}],["|",{"inverse":true}],[" 28 ",{"fg":3,"bold":true}],["                                                *calendar-:CalendarT*                                           ",{}],["|",{"inverse":true}],[" 17 ",{"fg":3,"bold":true}],["  .bash_history   ",{}]],"17":[["   ",{}],["+",{"fg":2,"bold":true}],["SecondRun(void) ",{}],["|",{"inverse":true}],[" 29 ",{"fg":3,"bold":true}],[":CalendarT [[year] month] Show calendar at this year and this month in a                                        ",{}],["|",{"inverse":true}],[" 18 ",{"fg":3,"bold":true}],["  .bash_logout    ",{}]],"18":[["   ",{}],["+",{"fg":2,"bold":true}],["SecondRun2(void)",{}],["|",{"inverse":true}],[" 30 ",{"fg":3,"bold":true}],["                          full-screen window.  When [year] is omitted, the                                      ",{}],["|",{"inverse":true}],[" 19 ",{"fg":3,"bold":true}],["  .bash_profile   ",{"underline":true}]],"19":[["                    ",{}],["|",{"inverse":true}],[" 31 ",{"fg":3,"bold":true}],["                          calendar will show the given month in the current                                     ",{}],["|",{"inverse":true}],[" 20 ",{"fg":3,"bold":true}],["  .bashrc         ",{}]],"20":[["▼",{"fg":3,"bold":true}],[" ",{}],["functions",{"fg":6,"bold":true}],["         ",{}],["|",{"inverse":true}],[" 32 ",{"fg":3,"bold":true}],["                          year.  When both [year] and [month] are omitted, the                                  ",{}],["|",{"inverse":true}],[" 21 ",{"fg":3,"bold":true}],["  .cshrc          ",{}]],"21":[["    main(int argc, c",{"underline":true}],["|",{"inverse":true}],[" 33 ",{"fg":3,"bold":true}],["                          calendar will show the current month.                                                 ",{}],["|",{"inverse":true}],[" 22 ",{"fg":3,"bold":true}],["  .dmrc           ",{}]],"22":[["~                   ",{"fg":4,"bold":true}],["|",{"inverse":true}],[" 34 ",{"fg":3,"bold":true}],["                                                                                                                ",{}],["|",{"inverse":true}],[" 23 ",{"fg":3,"bold":true}],["  .esd_auth       ",{}]],"23":[["~                   ",{"fg":4,"bold":true}],["|",{"inverse":true}],[" 35 ",{"fg":3,"bold":true}],["                                                *calendar-:CalendarVR*                                          ",{}],["|",{"inverse":true}],[" 24 ",{"fg":3,"bold":true}],["  .gtkrc-2.0      ",{}]],"24":[["~                   ",{"fg":4,"bold":true}],["|",{"inverse":true}],[" 36 ",{"fg":3,"bold":true}],[":CalendarVR [[year] month]  Show calendar at this year and this month in a                                      ",{}],["|",{"inverse":true}],[" 25 ",{"fg":3,"bold":true}],["  .gtkrc-2.0-kde4 ",{}]],"25":[["~                   ",{"fg":4,"bold":true}],["|",{"inverse":true}],[" 37 ",{"fg":3,"bold":true}],["                          vertical split at the right site.  When [year] is                                     ",{}],["|",{"inverse":true}],[" 26 ",{"fg":3,"bold":true}],["  .lesshst        ",{}]],"26":[["~                   ",{"fg":4,"bold":true}],["|",{"inverse":true}],[" 38 ",{"fg":3,"bold":true}],["                          omitted, the calendar will show the given month in                                    ",{}],["|",{"inverse":true}],[" 27 ",{"fg":3,"bold":true}],["  .tcshrc         ",{}]],"27":[["~                   ",{"fg":4,"bold":true}],["|",{"inverse":true}],[" 39 ",{"fg":3,"bold":true}],["                          the current year.  When both [year] and [month] are                                   ",{}],["|",{"inverse":true}],[" 28 ",{"fg":3,"bold":true}],["  .viminfo        ",{}]],"28":[["~                   ",{"fg":4,"bold":true}],["|",{"inverse":true}],[" 40 ",{"fg":3,"bold":true}],["                          omitted, the calendar will show the current month.                                    ",{}],["|",{"inverse":true}],[" 29 ",{"fg":3,"bold":true}],["  .vimrc          ",{}]],"29":[["~                   ",{"fg":4,"bold":true}],["|",{"inverse":true}],[" 41 ",{"fg":3,"bold":true}],["                                                                                                                ",{}],["|",{"inverse":true}],[" 30 ",{"fg":3,"bold":true}],["  .xsession-errors",{}]],"30":[["~                   ",{"fg":4,"bold":true}],["|",{"inverse":true}],[" 42 ",{"fg":3,"bold":true}],["MAPPINGS                                        *calendar-mappings*                                             ",{}],["|",{"inverse":true}],[" 31 ",{"fg":3,"bold":true}],["  anaconda-ks.cfg ",{}]],"31":[["~                   ",{"fg":4,"bold":true}],["|",{"inverse":true}],[" 43 ",{"fg":3,"bold":true}],["                                                                                                                ",{}],["|",{"inverse":true}],[" 32 ",{"fg":3,"bold":true}],["  initial-setup-ks",{}]],"32":[["~                   ",{"fg":4,"bold":true}],["|",{"inverse":true}],[" 44 ",{"fg":3,"bold":true}],["calendar.vim makes the following normal mode mappings available:                                                ",{}],["|",{"inverse":true}],[" 33 ",{"fg":3,"bold":true}],["  test.c          ",{}]],"33":[["~                   ",{"fg":4,"bold":true}],["|",{"inverse":true}],[" 45 ",{"fg":3,"bold":true}],["                                                                                                                ",{}],["|",{"inverse":true}],[" 34 ",{"fg":3,"bold":true}],["  test.cpp        ",{}]],"34":[["~                   ",{"fg":4,"bold":true}],["|",{"inverse":true}],[" 46 ",{"fg":3,"bold":true}],["                                                *calendar-cal*                                                  ",{}],["|",{"inverse":true}],[" 35 ",{"fg":3,"bold":true}],["  .test.cpp.swp   ",{}]],"35":[["~                   ",{"fg":4,"bold":true}],["|",{"inverse":true}],[" 47 ",{"fg":3,"bold":true}],["<LocalLeader>cal          Brings up the calendar in a vertical split.                                           ",{}],["|",{"inverse":true}],["~                     ",{"fg":4,"bold":true}]],"36":[["~                   ",{"fg":4,"bold":true}],["|",{"inverse":true}],[" 48 ",{"fg":3,"bold":true}],["                          Equivalent to calling |:Calendar|.                                                    ",{}],["|",{"inverse":true}],["~                     ",{"fg":4,"bold":true}]],"37":[["~                   ",{"fg":4,"bold":true}],["|",{"inverse":true}],[" 49 ",{"fg":3,"bold":true}],["                                                                                                                ",{}],["|",{"inverse":true}],["~                     ",{"fg":4,"bold":true}]],"38":[["~                   ",{"fg":4,"bold":true}],["|",{"inverse":true}],[" 50 ",{"fg":3,"bold":true}],["                                                *calendar-caL*                                                  ",{}],["|",{"inverse":true}],["~                     ",{"fg":4,"bold":true}]],"39":[["~                   ",{"fg":4,"bold":true}],["|",{"inverse":true}],[" 51 ",{"fg":3,"bold":true}],["<LocalLeader>",{}],["caL ",{"bg":1}],["        ",{}],[" Bri",{"bg":1}],["ngs up the calendar in a horizontal split.                                         ",{}],["|",{"inverse":true}],["~                     ",{"fg":4,"bold":true}]],"40":[["~                   ",{"fg":4,"bold":true}],["|",{"inverse":true}],[" 52 ",{"fg":3,"bold":true}],["                          Equivalent to calling |:CalendarH|.                                                   ",{}],["|",{"inverse":true}],["~                     ",{"fg":4,"bold":true}]],"41":[["~                   ",{"fg":4,"bold":true}],["|",{"inverse":true}],[" 53 ",{"fg":3,"bold":true}],["                                                                                                                ",{}],["|",{"inverse":true}],["~                     ",{"fg":4,"bold":true}]],"42":[["~                   ",{"fg":4,"bold":true}],["|",{"inverse":true}],[" 54 ",{"fg":3,"bold":true}],["SETTINGS                                        *calendar-settings*                                             ",{}],["|",{"inverse":true}],["~                     ",{"fg":4,"bold":true}]],"43":[["~                   ",{"fg":4,"bold":true}],["|",{"inverse":true}],[" 55 ",{"fg":3,"bold":true}],["                                                                                                                ",{}],["|",{"inverse":true}],["~                     ",{"fg":4,"bold":true}]],"44":[["~                   ",{"fg":4,"bold":true}],["|",{"inverse":true}],[" 56 ",{"fg":3,"bold":true}],["calendar.vim can be con",{"underline":true}],["figured using the follow",{"bg":1}],["                                                                 ",{}],["|",{"inverse":true}],["~                     ",{"fg":4,"bold":true}]]},"cursor":{"x":72,"y":44,"visible":false}}],[0.040201,{"lines":{"44":[["~                   ",{"fg":4,"bold":true}],["|",{"inverse":true}],[" 56 ",{"fg":3,"bold":true}],["calendar.vim can be con",{}],["figured using the following sett",{"bg":1}],["ings:                                                    ",{}],["|",{"inverse":true}],["~                     ",{"fg":4,"bold":true}]],"45":[["~                   ",{"fg":4,"bold":true}],["|",{"inverse":true}],[" 57 ",{"fg":3,"bold":true}],["                                                                                                                ",{"underline":true}],["|",{"inverse":true}],["~                     ",{"fg":4,"bold":true}]],"46":[["[Name] test.cpp      ",{"inverse":true}],[" NORMAL ",{"bold":true}],[" ",{}],["calendar.txt ",{"bold":true}],["                                                        unix │ utf-8 │ text │  25% ",{}],[" LN  57",{"bold":true}],[":1  ",{}],[" ",{"bold":true,"inverse":true}],[" ~/…/calendar-vim/doc>",{"bold":true}]]},"cursor":{"x":25,"y":45,"visible":true}}],[0.004118999999999999,{"lines":{"0":[["\" Press <F1> for hel",{"fg":6,"bold":true}],["|",{"inverse":true}],[" 13 ",{"fg":3,"bold":true}],["                                                                                                                ",{}],["|",{"inverse":true}],["  1 ",{"fg":3,"bold":true}],["\" Press ? for help",{"fg":5,"bold":true}]],"1":[["                    ",{}],["|",{"inverse":true}],[" 14 ",{"fg":3,"bold":true}],["                                                *calendar-:Calendar*                                            ",{}],["|",{"inverse":true}],["  2 ",{"fg":3,"bold":true}],["                  ",{}]],"2":[["▼",{"fg":3,"bold":true}],[" First",{"fg":5,"bold":true}],[" : ",{}],["struct",{"fg":2,"bold":true}],["    ",{}],["|",{"inverse":true}],[" 15 ",{"fg":3,"bold":true}],[":Calendar [[year] month]  Show calendar at this year and this month in a                                        ",{}],["|",{"inverse":true}],["  3 ",{"fg":3,"bold":true}],[".. (up a dir)",{"fg":6,"bold":true}],["     ",{}]],"3":[["    [prototypes]",{"fg":6,"bold":true}],["    ",{}],["|",{"inverse":true}],[" 16 ",{"fg":3,"bold":true}],["                          vertical split.  When [year] is omitted, the                                          ",{}],["|",{"inverse":true}],["  4 /root/",{"fg":3,"bold":true}],["            ",{}]],"4":[["   ",{}],["+",{"fg":2,"bold":true}],["FirstRun(void)  ",{}],["|",{"inverse":true}],[" 17 ",{"fg":3,"bold":true}],["                          calendar will show the given month in the current                                     ",{}],["|",{"inverse":true}],["  5 ",{"fg":3,"bold":true}],["▸ .asciinema/",{"fg":6,"bold":true}],["     ",{}]],"5":[["   ",{}],["+",{"fg":2,"bold":true}],["FirstRun2(void) ",{}],["|",{"inverse":true}],[" 18 ",{"fg":3,"bold":true}],["                          year.  When both [year] and [month] are omitted, the                                  ",{}],["|",{"inverse":true}],["  6 ",{"fg":3,"bold":true}],["▸ .cache/",{"fg":6,"bold":true}],["         ",{}]],"6":[["                    ",{}],["|",{"inverse":true}],[" 19 ",{"fg":3,"bold":true}],["                          calendar will show the current month.                                                 ",{}],["|",{"inverse":true}],["  7 ",{"fg":3,"bold":true}],["▸ .config/",{"fg":6,"bold":true}],["        ",{}]],"7":[["▼",{"fg":3,"bold":true}],[" Last",{"fg":5,"bold":true}],[" : ",{}],["struct",{"fg":2,"bold":true}],["     ",{}],["|",{"inverse":true}],[" 20 ",{"fg":3,"bold":true}],["                                                                                                                ",{}],["|",{"inverse":true}],["  8 ",{"fg":3,"bold":true}],["▸ .dbus/",{"fg":6,"bold":true}],["          ",{}]],"8":[["    [functions]",{"fg":6,"bold":true}],["     ",{}],["|",{"inverse":true}],[" 21 ",{"fg":3,"bold":true}],["                                                *calendar-:CalendarH*                                           ",{}],["|",{"inverse":true}],["  9 ",{"fg":3,"bold":true}],["▸ .gnupg/",{"fg":6,"bold":true}],["         ",{}]],"9":[["   ",{}],["+",{"fg":2,"bold":true}],["FirstRun(void)  ",{}],["|",{"inverse":true}],[" 22 ",{"fg":3,"bold":true}],[":CalendarH [[year] month] Show calendar at this year and this month in a                                        ",{}],["|",{"inverse":true}],[" 10 ",{"fg":3,"bold":true}],["▸ .kde/",{"fg":6,"bold":true}],["           ",{}]],"10":[["   ",{}],["+",{"fg":2,"bold":true}],["FirstRun2(void) ",{}],["|",{"inverse":true}],[" 23 ",{"fg":3,"bold":true}],["                          horizontal split.  When [year] is omitted, the                                        ",{}],["|",{"inverse":true}],[" 11 ",{"fg":3,"bold":true}],["▸ .local/",{"fg":6,"bold":true}],["         ",{}]],"11":[["   ",{}],["+",{"fg":2,"bold":true}],["~Last()         ",{}],["|",{"inverse":true}],[" 24 ",{"fg":3,"bold":true}],["                          calendar will show the given month in the current                                     ",{}],["|",{"inverse":true}],[" 12 ",{"fg":3,"bold":true}],["▸ .pki/",{"fg":6,"bold":true}],["           ",{}]],"12":[["   ",{}],["+",{"fg":2,"bold":true}],["SecondRun(void) ",{}],["|",{"inverse":true}],[" 25 ",{"fg":3,"bold":true}],["                          year.  When both [year] and [month] are omitted, the                                  ",{}],["|",{"inverse":true}],[" 13 ",{"fg":3,"bold":true}],["▸ .ssh/",{"fg":6,"bold":true}],["           ",{}]],"13":[["   ",{}],["+",{"fg":2,"bold":true}],["SecondRun2(void)",{}],["|",{"inverse":true}],[" 26 ",{"fg":3,"bold":true}],["                          calendar will show the current month.                                                 ",{}],["|",{"inverse":true}],[" 14 ",{"fg":3,"bold":true}],["▸ .vim/",{"fg":6,"bold":true}],["           ",{}]],"14":[["                    ",{}],["|",{"inverse":true}],[" 27 ",{"fg":3,"bold":true}],["                                                                                                                ",{}],["|",{"inverse":true}],[" 15 ",{"fg":3,"bold":true}],["▸ diary/",{"fg":6,"bold":true}],["          ",{}]],"15":[["▼",{"fg":3,"bold":true}],[" Second",{"fg":5,"bold":true}],[" : ",{}],["struct",{"fg":2,"bold":true}],["   ",{}],["|",{"inverse":true}],[" 28 ",{"fg":3,"bold":true}],["                                                *calendar-:CalendarT*                                           ",{}],["|",{"inverse":true}],[" 16 ",{"fg":3,"bold":true}],["▸ temp/",{"fg":6,"bold":true}],["           ",{}]],"16":[["    [prototypes]",{"fg":6,"bold":true}],["    ",{}],["|",{"inverse":true}],[" 29 ",{"fg":3,"bold":true}],[":CalendarT [[year] month] Show calendar at this year and this month in a                                        ",{}],["|",{"inverse":true}],[" 17 ",{"fg":3,"bold":true}],["  .bash_history   ",{}]],"17":[["   ",{}],["+",{"fg":2,"bold":true}],["SecondRun(void) ",{}],["|",{"inverse":true}],[" 30 ",{"fg":3,"bold":true}],["                          full-screen window.  When [year] is omitted, the                                      ",{}],["|",{"inverse":true}],[" 18 ",{"fg":3,"bold":true}],["  .bash_logout    ",{}]],"18":[["   ",{}],["+",{"fg":2,"bold":true}],["SecondRun2(void)",{}],["|",{"inverse":true}],[" 31 ",{"fg":3,"bold":true}],["                          calendar will show the given month in the current                                     ",{}],["|",{"inverse":true}],[" 19 ",{"fg":3,"bold":true}],["  .bash_profile   ",{"underline":true}]],"19":[["                    ",{}],["|",{"inverse":true}],[" 32 ",{"fg":3,"bold":true}],["                          year.  When both [year] and [month] are omitted, the                                  ",{}],["|",{"inverse":true}],[" 20 ",{"fg":3,"bold":true}],["  .bashrc         ",{}]],"20":[["▼",{"fg":3,"bold":true}],[" ",{}],["functions",{"fg":6,"bold":true}],["         ",{}],["|",{"inverse":true}],[" 33 ",{"fg":3,"bold":true}],["                          calendar will show the current month.                                                 ",{}],["|",{"inverse":true}],[" 21 ",{"fg":3,"bold":true}],["  .cshrc          ",{}]],"21":[["    main(int argc, c",{"underline":true}],["|",{"inverse":true}],[" 34 ",{"fg":3,"bold":true}],["                                                                                                                ",{}],["|",{"inverse":true}],[" 22 ",{"fg":3,"bold":true}],["  .dmrc           ",{}]],"22":[["~                   ",{"fg":4,"bold":true}],["|",{"inverse":true}],[" 35 ",{"fg":3,"bold":true}],["                                                *calendar-:CalendarVR*                                          ",{}],["|",{"inverse":true}],[" 23 ",{"fg":3,"bold":true}],["  .esd_auth       ",{}]],"23":[["~                   ",{"fg":4,"bold":true}],["|",{"inverse":true}],[" 36 ",{"fg":3,"bold":true}],[":CalendarVR [[year] month]  Show calendar at this year and this month in a                                      ",{}],["|",{"inverse":true}],[" 24 ",{"fg":3,"bold":true}],["  .gtkrc-2.0      ",{}]],"24":[["~                   ",{"fg":4,"bold":true}],["|",{"inverse":true}],[" 37 ",{"fg":3,"bold":true}],["                          vertical split at the right site.  When [year] is                                     ",{}],["|",{"inverse":true}],[" 25 ",{"fg":3,"bold":true}],["  .gtkrc-2.0-kde4 ",{}]],"25":[["~                   ",{"fg":4,"bold":true}],["|",{"inverse":true}],[" 38 ",{"fg":3,"bold":true}],["                          omitted, the calendar will show the given month in                                    ",{}],["|",{"inverse":true}],[" 26 ",{"fg":3,"bold":true}],["  .lesshst        ",{}]],"26":[["~                   ",{"fg":4,"bold":true}],["|",{"inverse":true}],[" 39 ",{"fg":3,"bold":true}],["                          the current year.  When both [year] and [month] are                                   ",{}],["|",{"inverse":true}],[" 27 ",{"fg":3,"bold":true}],["  .tcshrc         ",{}]],"27":[["~                   ",{"fg":4,"bold":true}],["|",{"inverse":true}],[" 40 ",{"fg":3,"bold":true}],["                          omitted, the calendar will show the current month.                                    ",{}],["|",{"inverse":true}],[" 28 ",{"fg":3,"bold":true}],["  .viminfo        ",{}]],"28":[["~                   ",{"fg":4,"bold":true}],["|",{"inverse":true}],[" 41 ",{"fg":3,"bold":true}],["                                                                                                                ",{}],["|",{"inverse":true}],[" 29 ",{"fg":3,"bold":true}],["  .vimrc          ",{}]],"29":[["~                   ",{"fg":4,"bold":true}],["|",{"inverse":true}],[" 42 ",{"fg":3,"bold":true}],["MAPPINGS                                        *calendar-mappings*                                             ",{}],["|",{"inverse":true}],[" 30 ",{"fg":3,"bold":true}],["  .xsession-errors",{}]],"30":[["~                   ",{"fg":4,"bold":true}],["|",{"inverse":true}],[" 43 ",{"fg":3,"bold":true}],["                                                                                                                ",{}],["|",{"inverse":true}],[" 31 ",{"fg":3,"bold":true}],["  anaconda-ks.cfg ",{}]],"31":[["~                   ",{"fg":4,"bold":true}],["|",{"inverse":true}],[" 44 ",{"fg":3,"bold":true}],["calendar.vim makes the following normal mode mappings available:                                                ",{}],["|",{"inverse":true}],[" 32 ",{"fg":3,"bold":true}],["  initial-setup-ks",{}]],"32":[["~                   ",{"fg":4,"bold":true}],["|",{"inverse":true}],[" 45 ",{"fg":3,"bold":true}],["                                                                                                                ",{}],["|",{"inverse":true}],[" 33 ",{"fg":3,"bold":true}],["  test.c          ",{}]],"33":[["~                   ",{"fg":4,"bold":true}],["|",{"inverse":true}],[" 46 ",{"fg":3,"bold":true}],["                                                *calendar-cal*                                                  ",{}],["|",{"inverse":true}],[" 34 ",{"fg":3,"bold":true}],["  test.cpp        ",{}]],"34":[["~                   ",{"fg":4,"bold":true}],["|",{"inverse":true}],[" 47 ",{"fg":3,"bold":true}],["<LocalLeader>cal          Brings up the calendar in a vertical split.                                           ",{}],["|",{"inverse":true}],[" 35 ",{"fg":3,"bold":true}],["  .test.cpp.swp   ",{}]],"35":[["~                   ",{"fg":4,"bold":true}],["|",{"inverse":true}],[" 48 ",{"fg":3,"bold":true}],["                          Equivalent to calling |:Calendar|.                                                    ",{}],["|",{"inverse":true}],["~                     ",{"fg":4,"bold":true}]],"36":[["~                   ",{"fg":4,"bold":true}],["|",{"inverse":true}],[" 49 ",{"fg":3,"bold":true}],["                                                                                                                ",{}],["|",{"inverse":true}],["~                     ",{"fg":4,"bold":true}]],"37":[["~                   ",{"fg":4,"bold":true}],["|",{"inverse":true}],[" 50 ",{"fg":3,"bold":true}],["                                                *calendar-caL*                                                  ",{}],["|",{"inverse":true}],["~                     ",{"fg":4,"bold":true}]],"38":[["~                   ",{"fg":4,"bold":true}],["|",{"inverse":true}],[" 51 ",{"fg":3,"bold":true}],["<LocalLeader>",{}],["caL ",{"bg":1}],["        ",{}],[" Bri",{"bg":1}],["ngs up the calendar in a horizontal split.                                         ",{}],["|",{"inverse":true}],["~                     ",{"fg":4,"bold":true}]],"39":[["~                   ",{"fg":4,"bold":true}],["|",{"inverse":true}],[" 52 ",{"fg":3,"bold":true}],["                          Equivalent to calling |:CalendarH|.                                                   ",{}],["|",{"inverse":true}],["~                     ",{"fg":4,"bold":true}]],"40":[["~                   ",{"fg":4,"bold":true}],["|",{"inverse":true}],[" 53 ",{"fg":3,"bold":true}],["                                                                                                                ",{}],["|",{"inverse":true}],["~                     ",{"fg":4,"bold":true}]],"41":[["~                   ",{"fg":4,"bold":true}],["|",{"inverse":true}],[" 54 ",{"fg":3,"bold":true}],["SETTINGS                                        *calendar-settings*                                             ",{}],["|",{"inverse":true}],["~                     ",{"fg":4,"bold":true}]],"42":[["~                   ",{"fg":4,"bold":true}],["|",{"inverse":true}],[" 55 ",{"fg":3,"bold":true}],["                                                                                                                ",{}],["|",{"inverse":true}],["~                     ",{"fg":4,"bold":true}]],"43":[["~                   ",{"fg":4,"bold":true}],["|",{"inverse":true}],[" 56 ",{"fg":3,"bold":true}],["calendar.vim can be con",{}],["figured using the following sett",{"bg":1}],["ings:                                                    ",{}],["|",{"inverse":true}],["~                     ",{"fg":4,"bold":true}]],"44":[["~                   ",{"fg":4,"bold":true}],["|",{"inverse":true}],[" 57 ",{"fg":3,"bold":true}],["                                                ",{"underline":true}],["ng sett",{"bg":1}],["ings:                                                    ",{}],["|",{"inverse":true}],["~                     ",{"fg":4,"bold":true}]]},"cursor":{"x":73,"y":44,"visible":false}}],[0.019597,{"lines":{"44":[["~                   ",{"fg":4,"bold":true}],["|",{"inverse":true}],[" 57 ",{"fg":3,"bold":true}],["                                                                                                                ",{}],["|",{"inverse":true}],["~                     ",{"fg":4,"bold":true}]],"45":[["~                   ",{"fg":4,"bold":true}],["|",{"inverse":true}],[" 58 ",{"fg":3,"bold":true}],["                                                *g:calendar_focus_today*                                        ",{"underline":true}],["|",{"inverse":true}],["~                     ",{"fg":4,"bold":true}]],"46":[["[Name] test.cpp      ",{"inverse":true}],[" NORMAL ",{"bold":true}],[" ",{}],["calendar.txt ",{"bold":true}],["                                                        unix │ utf-8 │ text │  26% ",{}],[" LN  58",{"bold":true}],[":1  ",{}],[" ",{"bold":true,"inverse":true}],[" ~/…/calendar-vim/doc>",{"bold":true}]]},"cursor":{"x":25,"y":45,"visible":true}}],[0.004276,{"lines":{"0":[["\" Press <F1> for hel",{"fg":6,"bold":true}],["|",{"inverse":true}],[" 14 ",{"fg":3,"bold":true}],["                                                *calendar-:Calendar*                                            ",{}],["|",{"inverse":true}],["  1 ",{"fg":3,"bold":true}],["\" Press ? for help",{"fg":5,"bold":true}]],"1":[["                    ",{}],["|",{"inverse":true}],[" 15 ",{"fg":3,"bold":true}],[":Calendar [[year] month]  Show calendar at this year and this month in a                                        ",{}],["|",{"inverse":true}],["  2 ",{"fg":3,"bold":true}],["                  ",{}]],"2":[["▼",{"fg":3,"bold":true}],[" First",{"fg":5,"bold":true}],[" : ",{}],["struct",{"fg":2,"bold":true}],["    ",{}],["|",{"inverse":true}],[" 16 ",{"fg":3,"bold":true}],["                          vertical split.  When [year] is omitted, the                                          ",{}],["|",{"inverse":true}],["  3 ",{"fg":3,"bold":true}],[".. (up a dir)",{"fg":6,"bold":true}],["     ",{}]],"3":[["    [prototypes]",{"fg":6,"bold":true}],["    ",{}],["|",{"inverse":true}],[" 17 ",{"fg":3,"bold":true}],["                          calendar will show the given month in the current                                     ",{}],["|",{"inverse":true}],["  4 /root/",{"fg":3,"bold":true}],["            ",{}]],"4":[["   ",{}],["+",{"fg":2,"bold":true}],["FirstRun(void)  ",{}],["|",{"inverse":true}],[" 18 ",{"fg":3,"bold":true}],["                          year.  When both [year] and [month] are omitted, the                                  ",{}],["|",{"inverse":true}],["  5 ",{"fg":3,"bold":true}],["▸ .asciinema/",{"fg":6,"bold":true}],["     ",{}]],"5":[["   ",{}],["+",{"fg":2,"bold":true}],["FirstRun2(void) ",{}],["|",{"inverse":true}],[" 19 ",{"fg":3,"bold":true}],["                          calendar will show the current month.                                                 ",{}],["|",{"inverse":true}],["  6 ",{"fg":3,"bold":true}],["▸ .cache/",{"fg":6,"bold":true}],["         ",{}]],"6":[["                    ",{}],["|",{"inverse":true}],[" 20 ",{"fg":3,"bold":true}],["                                                                                                                ",{}],["|",{"inverse":true}],["  7 ",{"fg":3,"bold":true}],["▸ .config/",{"fg":6,"bold":true}],["        ",{}]],"7":[["▼",{"fg":3,"bold":true}],[" Last",{"fg":5,"bold":true}],[" : ",{}],["struct",{"fg":2,"bold":true}],["     ",{}],["|",{"inverse":true}],[" 21 ",{"fg":3,"bold":true}],["                                                *calendar-:CalendarH*                                           ",{}],["|",{"inverse":true}],["  8 ",{"fg":3,"bold":true}],["▸ .dbus/",{"fg":6,"bold":true}],["          ",{}]],"8":[["    [functions]",{"fg":6,"bold":true}],["     ",{}],["|",{"inverse":true}],[" 22 ",{"fg":3,"bold":true}],[":CalendarH [[year] month] Show calendar at this year and this month in a                                        ",{}],["|",{"inverse":true}],["  9 ",{"fg":3,"bold":true}],["▸ .gnupg/",{"fg":6,"bold":true}],["         ",{}]],"9":[["   ",{}],["+",{"fg":2,"bold":true}],["FirstRun(void)  ",{}],["|",{"inverse":true}],[" 23 ",{"fg":3,"bold":true}],["                          horizontal split.  When [year] is omitted, the                                        ",{}],["|",{"inverse":true}],[" 10 ",{"fg":3,"bold":true}],["▸ .kde/",{"fg":6,"bold":true}],["           ",{}]],"10":[["   ",{}],["+",{"fg":2,"bold":true}],["FirstRun2(void) ",{}],["|",{"inverse":true}],[" 24 ",{"fg":3,"bold":true}],["                          calendar will show the given month in the current                                     ",{}],["|",{"inverse":true}],[" 11 ",{"fg":3,"bold":true}],["▸ .local/",{"fg":6,"bold":true}],["         ",{}]],"11":[["   ",{}],["+",{"fg":2,"bold":true}],["~Last()         ",{}],["|",{"inverse":true}],[" 25 ",{"fg":3,"bold":true}],["                          year.  When both [year] and [month] are omitted, the                                  ",{}],["|",{"inverse":true}],[" 12 ",{"fg":3,"bold":true}],["▸ .pki/",{"fg":6,"bold":true}],["           ",{}]],"12":[["   ",{}],["+",{"fg":2,"bold":true}],["SecondRun(void) ",{}],["|",{"inverse":true}],[" 26 ",{"fg":3,"bold":true}],["                          calendar will show the current month.                                                 ",{}],["|",{"inverse":true}],[" 13 ",{"fg":3,"bold":true}],["▸ .ssh/",{"fg":6,"bold":true}],["           ",{}]],"13":[["   ",{}],["+",{"fg":2,"bold":true}],["SecondRun2(void)",{}],["|",{"inverse":true}],[" 27 ",{"fg":3,"bold":true}],["                                                                                                                ",{}],["|",{"inverse":true}],[" 14 ",{"fg":3,"bold":true}],["▸ .vim/",{"fg":6,"bold":true}],["           ",{}]],"14":[["                    ",{}],["|",{"inverse":true}],[" 28 ",{"fg":3,"bold":true}],["                                                *calendar-:CalendarT*                                           ",{}],["|",{"inverse":true}],[" 15 ",{"fg":3,"bold":true}],["▸ diary/",{"fg":6,"bold":true}],["          ",{}]],"15":[["▼",{"fg":3,"bold":true}],[" Second",{"fg":5,"bold":true}],[" : ",{}],["struct",{"fg":2,"bold":true}],["   ",{}],["|",{"inverse":true}],[" 29 ",{"fg":3,"bold":true}],[":CalendarT [[year] month] Show calendar at this year and this month in a                                        ",{}],["|",{"inverse":true}],[" 16 ",{"fg":3,"bold":true}],["▸ temp/",{"fg":6,"bold":true}],["           ",{}]],"16":[["    [prototypes]",{"fg":6,"bold":true}],["    ",{}],["|",{"inverse":true}],[" 30 ",{"fg":3,"bold":true}],["                          full-screen window.  When [year] is omitted, the                                      ",{}],["|",{"inverse":true}],[" 17 ",{"fg":3,"bold":true}],["  .bash_history   ",{}]],"17":[["   ",{}],["+",{"fg":2,"bold":true}],["SecondRun(void) ",{}],["|",{"inverse":true}],[" 31 ",{"fg":3,"bold":true}],["                          calendar will show the given month in the current                                     ",{}],["|",{"inverse":true}],[" 18 ",{"fg":3,"bold":true}],["  .bash_logout    ",{}]],"18":[["   ",{}],["+",{"fg":2,"bold":true}],["SecondRun2(void)",{}],["|",{"inverse":true}],[" 32 ",{"fg":3,"bold":true}],["                          year.  When both [year] and [month] are omitted, the                                  ",{}],["|",{"inverse":true}],[" 19 ",{"fg":3,"bold":true}],["  .bash_profile   ",{"underline":true}]],"19":[["                    ",{}],["|",{"inverse":true}],[" 33 ",{"fg":3,"bold":true}],["                          calendar will show the current month.                                                 ",{}],["|",{"inverse":true}],[" 20 ",{"fg":3,"bold":true}],["  .bashrc         ",{}]],"20":[["▼",{"fg":3,"bold":true}],[" ",{}],["functions",{"fg":6,"bold":true}],["         ",{}],["|",{"inverse":true}],[" 34 ",{"fg":3,"bold":true}],["                                                                                                                ",{}],["|",{"inverse":true}],[" 21 ",{"fg":3,"bold":true}],["  .cshrc          ",{}]],"21":[["    main(int argc, c",{"underline":true}],["|",{"inverse":true}],[" 35 ",{"fg":3,"bold":true}],["                                                *calendar-:CalendarVR*                                          ",{}],["|",{"inverse":true}],[" 22 ",{"fg":3,"bold":true}],["  .dmrc           ",{}]],"22":[["~                   ",{"fg":4,"bold":true}],["|",{"inverse":true}],[" 36 ",{"fg":3,"bold":true}],[":CalendarVR [[year] month]  Show calendar at this year and this month in a                                      ",{}],["|",{"inverse":true}],[" 23 ",{"fg":3,"bold":true}],["  .esd_auth       ",{}]],"23":[["~                   ",{"fg":4,"bold":true}],["|",{"inverse":true}],[" 37 ",{"fg":3,"bold":true}],["                          vertical split at the right site.  When [year] is                                     ",{}],["|",{"inverse":true}],[" 24 ",{"fg":3,"bold":true}],["  .gtkrc-2.0      ",{}]],"24":[["~                   ",{"fg":4,"bold":true}],["|",{"inverse":true}],[" 38 ",{"fg":3,"bold":true}],["                          omitted, the calendar will show the given month in                                    ",{}],["|",{"inverse":true}],[" 25 ",{"fg":3,"bold":true}],["  .gtkrc-2.0-kde4 ",{}]],"25":[["~                   ",{"fg":4,"bold":true}],["|",{"inverse":true}],[" 39 ",{"fg":3,"bold":true}],["                          the current year.  When both [year] and [month] are                                   ",{}],["|",{"inverse":true}],[" 26 ",{"fg":3,"bold":true}],["  .lesshst        ",{}]],"26":[["~                   ",{"fg":4,"bold":true}],["|",{"inverse":true}],[" 40 ",{"fg":3,"bold":true}],["                          omitted, the calendar will show the current month.                                    ",{}],["|",{"inverse":true}],[" 27 ",{"fg":3,"bold":true}],["  .tcshrc         ",{}]],"27":[["~                   ",{"fg":4,"bold":true}],["|",{"inverse":true}],[" 41 ",{"fg":3,"bold":true}],["                                                                                                                ",{}],["|",{"inverse":true}],[" 28 ",{"fg":3,"bold":true}],["  .viminfo        ",{}]],"28":[["~                   ",{"fg":4,"bold":true}],["|",{"inverse":true}],[" 42 ",{"fg":3,"bold":true}],["MAPPINGS                                        *calendar-mappings*                                             ",{}],["|",{"inverse":true}],[" 29 ",{"fg":3,"bold":true}],["  .vimrc          ",{}]],"29":[["~                   ",{"fg":4,"bold":true}],["|",{"inverse":true}],[" 43 ",{"fg":3,"bold":true}],["                                                                                                                ",{}],["|",{"inverse":true}],[" 30 ",{"fg":3,"bold":true}],["  .xsession-errors",{}]],"30":[["~                   ",{"fg":4,"bold":true}],["|",{"inverse":true}],[" 44 ",{"fg":3,"bold":true}],["calendar.vim makes the following normal mode mappings available:                                                ",{}],["|",{"inverse":true}],[" 31 ",{"fg":3,"bold":true}],["  anaconda-ks.cfg ",{}]],"31":[["~                   ",{"fg":4,"bold":true}],["|",{"inverse":true}],[" 45 ",{"fg":3,"bold":true}],["                                                                                                                ",{}],["|",{"inverse":true}],[" 32 ",{"fg":3,"bold":true}],["  initial-setup-ks",{}]],"32":[["~                   ",{"fg":4,"bold":true}],["|",{"inverse":true}],[" 46 ",{"fg":3,"bold":true}],["                                                *calendar-cal*                                                  ",{}],["|",{"inverse":true}],[" 33 ",{"fg":3,"bold":true}],["  test.c          ",{}]],"33":[["~                   ",{"fg":4,"bold":true}],["|",{"inverse":true}],[" 47 ",{"fg":3,"bold":true}],["<LocalLeader>cal          Brings up the calendar in a vertical split.                                           ",{}],["|",{"inverse":true}],[" 34 ",{"fg":3,"bold":true}],["  test.cpp        ",{}]],"34":[["~                   ",{"fg":4,"bold":true}],["|",{"inverse":true}],[" 48 ",{"fg":3,"bold":true}],["                          Equivalent to calling |:Calendar|.                                                    ",{}],["|",{"inverse":true}],[" 35 ",{"fg":3,"bold":true}],["  .test.cpp.swp   ",{}]],"35":[["~                   ",{"fg":4,"bold":true}],["|",{"inverse":true}],[" 49 ",{"fg":3,"bold":true}],["                                                                                                                ",{}],["|",{"inverse":true}],["~                     ",{"fg":4,"bold":true}]],"36":[["~                   ",{"fg":4,"bold":true}],["|",{"inverse":true}],[" 50 ",{"fg":3,"bold":true}],["                                                *calendar-caL*                                                  ",{}],["|",{"inverse":true}],["~                     ",{"fg":4,"bold":true}]],"37":[["~                   ",{"fg":4,"bold":true}],["|",{"inverse":true}],[" 51 ",{"fg":3,"bold":true}],["<LocalLeader>",{}],["caL ",{"bg":1}],["        ",{}],[" Bri",{"bg":1}],["ngs up the calendar in a horizontal split.                                         ",{}],["|",{"inverse":true}],["~                     ",{"fg":4,"bold":true}]],"38":[["~                   ",{"fg":4,"bold":true}],["|",{"inverse":true}],[" 52 ",{"fg":3,"bold":true}],["                          Equivalent to calling |:CalendarH|.                                                   ",{}],["|",{"inverse":true}],["~                     ",{"fg":4,"bold":true}]],"39":[["~                   ",{"fg":4,"bold":true}],["|",{"inverse":true}],[" 53 ",{"fg":3,"bold":true}],["                                                                                                                ",{}],["|",{"inverse":true}],["~                     ",{"fg":4,"bold":true}]],"40":[["~                   ",{"fg":4,"bold":true}],["|",{"inverse":true}],[" 54 ",{"fg":3,"bold":true}],["SETTINGS                                        *calendar-settings*                                             ",{}],["|",{"inverse":true}],["~                     ",{"fg":4,"bold":true}]],"41":[["~                   ",{"fg":4,"bold":true}],["|",{"inverse":true}],[" 55 ",{"fg":3,"bold":true}],["                                                                                                                ",{}],["|",{"inverse":true}],["~                     ",{"fg":4,"bold":true}]],"42":[["~                   ",{"fg":4,"bold":true}],["|",{"inverse":true}],[" 56 ",{"fg":3,"bold":true}],["calendar.vim can be con",{}],["figured using the following sett",{"bg":1}],["ings:                                                    ",{}],["|",{"inverse":true}],["~                     ",{"fg":4,"bold":true}]],"43":[["~                   ",{"fg":4,"bold":true}],["|",{"inverse":true}],[" 57 ",{"fg":3,"bold":true}],["                                                                                                                ",{}],["|",{"inverse":true}],["~                     ",{"fg":4,"bold":true}]],"44":[["~                   ",{"fg":4,"bold":true}],["|",{"inverse":true}],[" 58 ",{"fg":3,"bold":true}],["                                                ",{"underline":true}],["                                                                ",{}],["|",{"inverse":true}],["~                     ",{"fg":4,"bold":true}]]},"cursor":{"x":73,"y":44,"visible":false}}],[0.039847,{"lines":{"44":[["~                   ",{"fg":4,"bold":true}],["|",{"inverse":true}],[" 58 ",{"fg":3,"bold":true}],["                                                *g:calendar_focus_today*                                        ",{}],["|",{"inverse":true}],["~                     ",{"fg":4,"bold":true}]],"45":[["~                   ",{"fg":4,"bold":true}],["|",{"inverse":true}],[" 59 ",{"fg":3,"bold":true}],["Keeps focus when moving to next or previous calendar: >                                                         ",{"underline":true}],["|",{"inverse":true}],["~                     ",{"fg":4,"bold":true}]],"46":[["[Name] test.cpp      ",{"inverse":true}],[" NORMAL ",{"bold":true}],[" ",{}],["calendar.txt ",{"bold":true}],["                                                        unix │ utf-8 │ text │  26% ",{}],[" LN  59",{"bold":true}],[":1  ",{}],[" ",{"bold":true,"inverse":true}],[" ~/…/calendar-vim/doc>",{"bold":true}]]},"cursor":{"x":25,"y":45,"visible":true}}],[0.004262,{"lines":{"0":[["\" Press <F1> for hel",{"fg":6,"bold":true}],["|",{"inverse":true}],[" 15 ",{"fg":3,"bold":true}],[":Calendar [[year] month]  Show calendar at this year and this month in a                                        ",{}],["|",{"inverse":true}],["  1 ",{"fg":3,"bold":true}],["\" Press ? for help",{"fg":5,"bold":true}]],"1":[["                    ",{}],["|",{"inverse":true}],[" 16 ",{"fg":3,"bold":true}],["                          vertical split.  When [year] is omitted, the                                          ",{}],["|",{"inverse":true}],["  2 ",{"fg":3,"bold":true}],["                  ",{}]],"2":[["▼",{"fg":3,"bold":true}],[" First",{"fg":5,"bold":true}],[" : ",{}],["struct",{"fg":2,"bold":true}],["    ",{}],["|",{"inverse":true}],[" 17 ",{"fg":3,"bold":true}],["                          calendar will show the given month in the current                                     ",{}],["|",{"inverse":true}],["  3 ",{"fg":3,"bold":true}],[".. (up a dir)",{"fg":6,"bold":true}],["     ",{}]],"3":[["    [prototypes]",{"fg":6,"bold":true}],["    ",{}],["|",{"inverse":true}],[" 18 ",{"fg":3,"bold":true}],["                          year.  When both [year] and [month] are omitted, the                                  ",{}],["|",{"inverse":true}],["  4 /root/",{"fg":3,"bold":true}],["            ",{}]],"4":[["   ",{}],["+",{"fg":2,"bold":true}],["FirstRun(void)  ",{}],["|",{"inverse":true}],[" 19 ",{"fg":3,"bold":true}],["                          calendar will show the current month.                                                 ",{}],["|",{"inverse":true}],["  5 ",{"fg":3,"bold":true}],["▸ .asciinema/",{"fg":6,"bold":true}],["     ",{}]],"5":[["   ",{}],["+",{"fg":2,"bold":true}],["FirstRun2(void) ",{}],["|",{"inverse":true}],[" 20 ",{"fg":3,"bold":true}],["                                                                                                                ",{}],["|",{"inverse":true}],["  6 ",{"fg":3,"bold":true}],["▸ .cache/",{"fg":6,"bold":true}],["         ",{}]],"6":[["                    ",{}],["|",{"inverse":true}],[" 21 ",{"fg":3,"bold":true}],["                                                *calendar-:CalendarH*                                           ",{}],["|",{"inverse":true}],["  7 ",{"fg":3,"bold":true}],["▸ .config/",{"fg":6,"bold":true}],["        ",{}]],"7":[["▼",{"fg":3,"bold":true}],[" Last",{"fg":5,"bold":true}],[" : ",{}],["struct",{"fg":2,"bold":true}],["     ",{}],["|",{"inverse":true}],[" 22 ",{"fg":3,"bold":true}],[":CalendarH [[year] month] Show calendar at this year and this month in a                                        ",{}],["|",{"inverse":true}],["  8 ",{"fg":3,"bold":true}],["▸ .dbus/",{"fg":6,"bold":true}],["          ",{}]],"8":[["    [functions]",{"fg":6,"bold":true}],["     ",{}],["|",{"inverse":true}],[" 23 ",{"fg":3,"bold":true}],["                          horizontal split.  When [year] is omitted, the                                        ",{}],["|",{"inverse":true}],["  9 ",{"fg":3,"bold":true}],["▸ .gnupg/",{"fg":6,"bold":true}],["         ",{}]],"9":[["   ",{}],["+",{"fg":2,"bold":true}],["FirstRun(void)  ",{}],["|",{"inverse":true}],[" 24 ",{"fg":3,"bold":true}],["                          calendar will show the given month in the current                                     ",{}],["|",{"inverse":true}],[" 10 ",{"fg":3,"bold":true}],["▸ .kde/",{"fg":6,"bold":true}],["           ",{}]],"10":[["   ",{}],["+",{"fg":2,"bold":true}],["FirstRun2(void) ",{}],["|",{"inverse":true}],[" 25 ",{"fg":3,"bold":true}],["                          year.  When both [year] and [month] are omitted, the                                  ",{}],["|",{"inverse":true}],[" 11 ",{"fg":3,"bold":true}],["▸ .local/",{"fg":6,"bold":true}],["         ",{}]],"11":[["   ",{}],["+",{"fg":2,"bold":true}],["~Last()         ",{}],["|",{"inverse":true}],[" 26 ",{"fg":3,"bold":true}],["                          calendar will show the current month.                                                 ",{}],["|",{"inverse":true}],[" 12 ",{"fg":3,"bold":true}],["▸ .pki/",{"fg":6,"bold":true}],["           ",{}]],"12":[["   ",{}],["+",{"fg":2,"bold":true}],["SecondRun(void) ",{}],["|",{"inverse":true}],[" 27 ",{"fg":3,"bold":true}],["                                                                                                                ",{}],["|",{"inverse":true}],[" 13 ",{"fg":3,"bold":true}],["▸ .ssh/",{"fg":6,"bold":true}],["           ",{}]],"13":[["   ",{}],["+",{"fg":2,"bold":true}],["SecondRun2(void)",{}],["|",{"inverse":true}],[" 28 ",{"fg":3,"bold":true}],["                                                *calendar-:CalendarT*                                           ",{}],["|",{"inverse":true}],[" 14 ",{"fg":3,"bold":true}],["▸ .vim/",{"fg":6,"bold":true}],["           ",{}]],"14":[["                    ",{}],["|",{"inverse":true}],[" 29 ",{"fg":3,"bold":true}],[":CalendarT [[year] month] Show calendar at this year and this month in a                                        ",{}],["|",{"inverse":true}],[" 15 ",{"fg":3,"bold":true}],["▸ diary/",{"fg":6,"bold":true}],["          ",{}]],"15":[["▼",{"fg":3,"bold":true}],[" Second",{"fg":5,"bold":true}],[" : ",{}],["struct",{"fg":2,"bold":true}],["   ",{}],["|",{"inverse":true}],[" 30 ",{"fg":3,"bold":true}],["                          full-screen window.  When [year] is omitted, the                                      ",{}],["|",{"inverse":true}],[" 16 ",{"fg":3,"bold":true}],["▸ temp/",{"fg":6,"bold":true}],["           ",{}]],"16":[["    [prototypes]",{"fg":6,"bold":true}],["    ",{}],["|",{"inverse":true}],[" 31 ",{"fg":3,"bold":true}],["                          calendar will show the given month in the current                                     ",{}],["|",{"inverse":true}],[" 17 ",{"fg":3,"bold":true}],["  .bash_history   ",{}]],"17":[["   ",{}],["+",{"fg":2,"bold":true}],["SecondRun(void) ",{}],["|",{"inverse":true}],[" 32 ",{"fg":3,"bold":true}],["                          year.  When both [year] and [month] are omitted, the                                  ",{}],["|",{"inverse":true}],[" 18 ",{"fg":3,"bold":true}],["  .bash_logout    ",{}]],"18":[["   ",{}],["+",{"fg":2,"bold":true}],["SecondRun2(void)",{}],["|",{"inverse":true}],[" 33 ",{"fg":3,"bold":true}],["                          calendar will show the current month.                                                 ",{}],["|",{"inverse":true}],[" 19 ",{"fg":3,"bold":true}],["  .bash_profile   ",{"underline":true}]],"19":[["                    ",{}],["|",{"inverse":true}],[" 34 ",{"fg":3,"bold":true}],["                                                                                                                ",{}],["|",{"inverse":true}],[" 20 ",{"fg":3,"bold":true}],["  .bashrc         ",{}]],"20":[["▼",{"fg":3,"bold":true}],[" ",{}],["functions",{"fg":6,"bold":true}],["         ",{}],["|",{"inverse":true}],[" 35 ",{"fg":3,"bold":true}],["                                                *calendar-:CalendarVR*                                          ",{}],["|",{"inverse":true}],[" 21 ",{"fg":3,"bold":true}],["  .cshrc          ",{}]],"21":[["    main(int argc, c",{"underline":true}],["|",{"inverse":true}],[" 36 ",{"fg":3,"bold":true}],[":CalendarVR [[year] month]  Show calendar at this year and this month in a                                      ",{}],["|",{"inverse":true}],[" 22 ",{"fg":3,"bold":true}],["  .dmrc           ",{}]],"22":[["~                   ",{"fg":4,"bold":true}],["|",{"inverse":true}],[" 37 ",{"fg":3,"bold":true}],["                          vertical split at the right site.  When [year] is                                     ",{}],["|",{"inverse":true}],[" 23 ",{"fg":3,"bold":true}],["  .esd_auth       ",{}]],"23":[["~                   ",{"fg":4,"bold":true}],["|",{"inverse":true}],[" 38 ",{"fg":3,"bold":true}],["                          omitted, the calendar will show the given month in                                    ",{}],["|",{"inverse":true}],[" 24 ",{"fg":3,"bold":true}],["  .gtkrc-2.0      ",{}]],"24":[["~                   ",{"fg":4,"bold":true}],["|",{"inverse":true}],[" 39 ",{"fg":3,"bold":true}],["                          the current year.  When both [year] and [month] are                                   ",{}],["|",{"inverse":true}],[" 25 ",{"fg":3,"bold":true}],["  .gtkrc-2.0-kde4 ",{}]],"25":[["~                   ",{"fg":4,"bold":true}],["|",{"inverse":true}],[" 40 ",{"fg":3,"bold":true}],["                          omitted, the calendar will show the current month.                                    ",{}],["|",{"inverse":true}],[" 26 ",{"fg":3,"bold":true}],["  .lesshst        ",{}]],"26":[["~                   ",{"fg":4,"bold":true}],["|",{"inverse":true}],[" 41 ",{"fg":3,"bold":true}],["                                                                                                                ",{}],["|",{"inverse":true}],[" 27 ",{"fg":3,"bold":true}],["  .tcshrc         ",{}]],"27":[["~                   ",{"fg":4,"bold":true}],["|",{"inverse":true}],[" 42 ",{"fg":3,"bold":true}],["MAPPINGS                                        *calendar-mappings*                                             ",{}],["|",{"inverse":true}],[" 28 ",{"fg":3,"bold":true}],["  .viminfo        ",{}]],"28":[["~                   ",{"fg":4,"bold":true}],["|",{"inverse":true}],[" 43 ",{"fg":3,"bold":true}],["                                                                                                                ",{}],["|",{"inverse":true}],[" 29 ",{"fg":3,"bold":true}],["  .vimrc          ",{}]],"29":[["~                   ",{"fg":4,"bold":true}],["|",{"inverse":true}],[" 44 ",{"fg":3,"bold":true}],["calendar.vim makes the following normal mode mappings available:                                                ",{}],["|",{"inverse":true}],[" 30 ",{"fg":3,"bold":true}],["  .xsession-errors",{}]],"30":[["~                   ",{"fg":4,"bold":true}],["|",{"inverse":true}],[" 45 ",{"fg":3,"bold":true}],["                                                                                                                ",{}],["|",{"inverse":true}],[" 31 ",{"fg":3,"bold":true}],["  anaconda-ks.cfg ",{}]],"31":[["~                   ",{"fg":4,"bold":true}],["|",{"inverse":true}],[" 46 ",{"fg":3,"bold":true}],["                                                *calendar-cal*                                                  ",{}],["|",{"inverse":true}],[" 32 ",{"fg":3,"bold":true}],["  initial-setup-ks",{}]],"32":[["~                   ",{"fg":4,"bold":true}],["|",{"inverse":true}],[" 47 ",{"fg":3,"bold":true}],["<LocalLeader>cal          Brings up the calendar in a vertical split.                                           ",{}],["|",{"inverse":true}],[" 33 ",{"fg":3,"bold":true}],["  test.c          ",{}]],"33":[["~                   ",{"fg":4,"bold":true}],["|",{"inverse":true}],[" 48 ",{"fg":3,"bold":true}],["                          Equivalent to calling |:Calendar|.                                                    ",{}],["|",{"inverse":true}],[" 34 ",{"fg":3,"bold":true}],["  test.cpp        ",{}]],"34":[["~                   ",{"fg":4,"bold":true}],["|",{"inverse":true}],[" 49 ",{"fg":3,"bold":true}],["                                                                                                                ",{}],["|",{"inverse":true}],[" 35 ",{"fg":3,"bold":true}],["  .test.cpp.swp   ",{}]],"35":[["~                   ",{"fg":4,"bold":true}],["|",{"inverse":true}],[" 50 ",{"fg":3,"bold":true}],["                                                *calendar-caL*                                                  ",{}],["|",{"inverse":true}],["~                     ",{"fg":4,"bold":true}]],"36":[["~                   ",{"fg":4,"bold":true}],["|",{"inverse":true}],[" 51 ",{"fg":3,"bold":true}],["<LocalLeader>",{}],["caL ",{"bg":1}],["        ",{}],[" Bri",{"bg":1}],["ngs up the calendar in a horizontal split.                                         ",{}],["|",{"inverse":true}],["~                     ",{"fg":4,"bold":true}]],"37":[["~                   ",{"fg":4,"bold":true}],["|",{"inverse":true}],[" 52 ",{"fg":3,"bold":true}],["                          Equivalent to calling |:CalendarH|.                                                   ",{}],["|",{"inverse":true}],["~                     ",{"fg":4,"bold":true}]],"38":[["~                   ",{"fg":4,"bold":true}],["|",{"inverse":true}],[" 53 ",{"fg":3,"bold":true}],["                                                                                                                ",{}],["|",{"inverse":true}],["~                     ",{"fg":4,"bold":true}]],"39":[["~                   ",{"fg":4,"bold":true}],["|",{"inverse":true}],[" 54 ",{"fg":3,"bold":true}],["SETTINGS                                        *calendar-settings*                                             ",{}],["|",{"inverse":true}],["~                     ",{"fg":4,"bold":true}]],"40":[["~                   ",{"fg":4,"bold":true}],["|",{"inverse":true}],[" 55 ",{"fg":3,"bold":true}],["                                                                                                                ",{}],["|",{"inverse":true}],["~                     ",{"fg":4,"bold":true}]],"41":[["~                   ",{"fg":4,"bold":true}],["|",{"inverse":true}],[" 56 ",{"fg":3,"bold":true}],["calendar.vim can be con",{}],["figured using the following sett",{"bg":1}],["ings:                                                    ",{}],["|",{"inverse":true}],["~                     ",{"fg":4,"bold":true}]],"42":[["~                   ",{"fg":4,"bold":true}],["|",{"inverse":true}],[" 57 ",{"fg":3,"bold":true}],["                                                                                                                ",{}],["|",{"inverse":true}],["~                     ",{"fg":4,"bold":true}]],"43":[["~                   ",{"fg":4,"bold":true}],["|",{"inverse":true}],[" 58 ",{"fg":3,"bold":true}],["                                                *g:calendar_focus_today*                                        ",{}],["|",{"inverse":true}],["~                     ",{"fg":4,"bold":true}]],"44":[["~                   ",{"fg":4,"bold":true}],["|",{"inverse":true}],[" 59 ",{"fg":3,"bold":true}],["Keeps focus when moving to next or previous cale",{"underline":true}],["*g:calendar_focus_today*                                        ",{}],["|",{"inverse":true}],["~                     ",{"fg":4,"bold":true}]]},"cursor":{"x":73,"y":44,"visible":false}}],[0.019641,{"lines":{"44":[["~                   ",{"fg":4,"bold":true}],["|",{"inverse":true}],[" 59 ",{"fg":3,"bold":true}],["Keeps focus when moving to next or previous calendar: >                                                         ",{}],["|",{"inverse":true}],["~                     ",{"fg":4,"bold":true}]],"45":[["~                   ",{"fg":4,"bold":true}],["|",{"inverse":true}],[" 60 ",{"fg":3,"bold":true}],["  let g:calendar_focus_today = 1                                                                                ",{"underline":true}],["|",{"inverse":true}],["~                     ",{"fg":4,"bold":true}]],"46":[["[Name] test.cpp      ",{"inverse":true}],[" NORMAL ",{"bold":true}],[" ",{}],["calendar.txt ",{"bold":true}],["                                                        unix │ utf-8 │ text │  27% ",{}],[" LN  60",{"bold":true}],[":1  ",{}],[" ",{"bold":true,"inverse":true}],[" ~/…/calendar-vim/doc>",{"bold":true}]]},"cursor":{"x":25,"y":45,"visible":true}}],[0.004692,{"lines":{"0":[["\" Press <F1> for hel",{"fg":6,"bold":true}],["|",{"inverse":true}],[" 16 ",{"fg":3,"bold":true}],["                          vertical split.  When [year] is omitted, the                                          ",{}],["|",{"inverse":true}],["  1 ",{"fg":3,"bold":true}],["\" Press ? for help",{"fg":5,"bold":true}]],"1":[["                    ",{}],["|",{"inverse":true}],[" 17 ",{"fg":3,"bold":true}],["                          calendar will show the given month in the current                                     ",{}],["|",{"inverse":true}],["  2 ",{"fg":3,"bold":true}],["                  ",{}]],"2":[["▼",{"fg":3,"bold":true}],[" First",{"fg":5,"bold":true}],[" : ",{}],["struct",{"fg":2,"bold":true}],["    ",{}],["|",{"inverse":true}],[" 18 ",{"fg":3,"bold":true}],["                          year.  When both [year] and [month] are omitted, the                                  ",{}],["|",{"inverse":true}],["  3 ",{"fg":3,"bold":true}],[".. (up a dir)",{"fg":6,"bold":true}],["     ",{}]],"3":[["    [prototypes]",{"fg":6,"bold":true}],["    ",{}],["|",{"inverse":true}],[" 19 ",{"fg":3,"bold":true}],["                          calendar will show the current month.                                                 ",{}],["|",{"inverse":true}],["  4 /root/",{"fg":3,"bold":true}],["            ",{}]],"4":[["   ",{}],["+",{"fg":2,"bold":true}],["FirstRun(void)  ",{}],["|",{"inverse":true}],[" 20 ",{"fg":3,"bold":true}],["                                                                                                                ",{}],["|",{"inverse":true}],["  5 ",{"fg":3,"bold":true}],["▸ .asciinema/",{"fg":6,"bold":true}],["     ",{}]],"5":[["   ",{}],["+",{"fg":2,"bold":true}],["FirstRun2(void) ",{}],["|",{"inverse":true}],[" 21 ",{"fg":3,"bold":true}],["                                                *calendar-:CalendarH*                                           ",{}],["|",{"inverse":true}],["  6 ",{"fg":3,"bold":true}],["▸ .cache/",{"fg":6,"bold":true}],["         ",{}]],"6":[["                    ",{}],["|",{"inverse":true}],[" 22 ",{"fg":3,"bold":true}],[":CalendarH [[year] month] Show calendar at this year and this month in a                                        ",{}],["|",{"inverse":true}],["  7 ",{"fg":3,"bold":true}],["▸ .config/",{"fg":6,"bold":true}],["        ",{}]],"7":[["▼",{"fg":3,"bold":true}],[" Last",{"fg":5,"bold":true}],[" : ",{}],["struct",{"fg":2,"bold":true}],["     ",{}],["|",{"inverse":true}],[" 23 ",{"fg":3,"bold":true}],["                          horizontal split.  When [year] is omitted, the                                        ",{}],["|",{"inverse":true}],["  8 ",{"fg":3,"bold":true}],["▸ .dbus/",{"fg":6,"bold":true}],["          ",{}]],"8":[["    [functions]",{"fg":6,"bold":true}],["     ",{}],["|",{"inverse":true}],[" 24 ",{"fg":3,"bold":true}],["                          calendar will show the given month in the current                                     ",{}],["|",{"inverse":true}],["  9 ",{"fg":3,"bold":true}],["▸ .gnupg/",{"fg":6,"bold":true}],["         ",{}]],"9":[["   ",{}],["+",{"fg":2,"bold":true}],["FirstRun(void)  ",{}],["|",{"inverse":true}],[" 25 ",{"fg":3,"bold":true}],["                          year.  When both [year] and [month] are omitted, the                                  ",{}],["|",{"inverse":true}],[" 10 ",{"fg":3,"bold":true}],["▸ .kde/",{"fg":6,"bold":true}],["           ",{}]],"10":[["   ",{}],["+",{"fg":2,"bold":true}],["FirstRun2(void) ",{}],["|",{"inverse":true}],[" 26 ",{"fg":3,"bold":true}],["                          calendar will show the current month.                                                 ",{}],["|",{"inverse":true}],[" 11 ",{"fg":3,"bold":true}],["▸ .local/",{"fg":6,"bold":true}],["         ",{}]],"11":[["   ",{}],["+",{"fg":2,"bold":true}],["~Last()         ",{}],["|",{"inverse":true}],[" 27 ",{"fg":3,"bold":true}],["                                                                                                                ",{}],["|",{"inverse":true}],[" 12 ",{"fg":3,"bold":true}],["▸ .pki/",{"fg":6,"bold":true}],["           ",{}]],"12":[["   ",{}],["+",{"fg":2,"bold":true}],["SecondRun(void) ",{}],["|",{"inverse":true}],[" 28 ",{"fg":3,"bold":true}],["                                                *calendar-:CalendarT*                                           ",{}],["|",{"inverse":true}],[" 13 ",{"fg":3,"bold":true}],["▸ .ssh/",{"fg":6,"bold":true}],["           ",{}]],"13":[["   ",{}],["+",{"fg":2,"bold":true}],["SecondRun2(void)",{}],["|",{"inverse":true}],[" 29 ",{"fg":3,"bold":true}],[":CalendarT [[year] month] Show calendar at this year and this month in a                                        ",{}],["|",{"inverse":true}],[" 14 ",{"fg":3,"bold":true}],["▸ .vim/",{"fg":6,"bold":true}],["           ",{}]],"14":[["                    ",{}],["|",{"inverse":true}],[" 30 ",{"fg":3,"bold":true}],["                          full-screen window.  When [year] is omitted, the                                      ",{}],["|",{"inverse":true}],[" 15 ",{"fg":3,"bold":true}],["▸ diary/",{"fg":6,"bold":true}],["          ",{}]],"15":[["▼",{"fg":3,"bold":true}],[" Second",{"fg":5,"bold":true}],[" : ",{}],["struct",{"fg":2,"bold":true}],["   ",{}],["|",{"inverse":true}],[" 31 ",{"fg":3,"bold":true}],["                          calendar will show the given month in the current                                     ",{}],["|",{"inverse":true}],[" 16 ",{"fg":3,"bold":true}],["▸ temp/",{"fg":6,"bold":true}],["           ",{}]],"16":[["    [prototypes]",{"fg":6,"bold":true}],["    ",{}],["|",{"inverse":true}],[" 32 ",{"fg":3,"bold":true}],["                          year.  When both [year] and [month] are omitted, the                                  ",{}],["|",{"inverse":true}],[" 17 ",{"fg":3,"bold":true}],["  .bash_history   ",{}]],"17":[["   ",{}],["+",{"fg":2,"bold":true}],["SecondRun(void) ",{}],["|",{"inverse":true}],[" 33 ",{"fg":3,"bold":true}],["                          calendar will show the current month.                                                 ",{}],["|",{"inverse":true}],[" 18 ",{"fg":3,"bold":true}],["  .bash_logout    ",{}]],"18":[["   ",{}],["+",{"fg":2,"bold":true}],["SecondRun2(void)",{}],["|",{"inverse":true}],[" 34 ",{"fg":3,"bold":true}],["                                                                                                                ",{}],["|",{"inverse":true}],[" 19 ",{"fg":3,"bold":true}],["  .bash_profile   ",{"underline":true}]],"19":[["                    ",{}],["|",{"inverse":true}],[" 35 ",{"fg":3,"bold":true}],["                                                *calendar-:CalendarVR*                                          ",{}],["|",{"inverse":true}],[" 20 ",{"fg":3,"bold":true}],["  .bashrc         ",{}]],"20":[["▼",{"fg":3,"bold":true}],[" ",{}],["functions",{"fg":6,"bold":true}],["         ",{}],["|",{"inverse":true}],[" 36 ",{"fg":3,"bold":true}],[":CalendarVR [[year] month]  Show calendar at this year and this month in a                                      ",{}],["|",{"inverse":true}],[" 21 ",{"fg":3,"bold":true}],["  .cshrc          ",{}]],"21":[["    main(int argc, c",{"underline":true}],["|",{"inverse":true}],[" 37 ",{"fg":3,"bold":true}],["                          vertical split at the right site.  When [year] is                                     ",{}],["|",{"inverse":true}],[" 22 ",{"fg":3,"bold":true}],["  .dmrc           ",{}]],"22":[["~                   ",{"fg":4,"bold":true}],["|",{"inverse":true}],[" 38 ",{"fg":3,"bold":true}],["                          omitted, the calendar will show the given month in                                    ",{}],["|",{"inverse":true}],[" 23 ",{"fg":3,"bold":true}],["  .esd_auth       ",{}]],"23":[["~                   ",{"fg":4,"bold":true}],["|",{"inverse":true}],[" 39 ",{"fg":3,"bold":true}],["                          the current year.  When both [year] and [month] are                                   ",{}],["|",{"inverse":true}],[" 24 ",{"fg":3,"bold":true}],["  .gtkrc-2.0      ",{}]],"24":[["~                   ",{"fg":4,"bold":true}],["|",{"inverse":true}],[" 40 ",{"fg":3,"bold":true}],["                          omitted, the calendar will show the current month.                                    ",{}],["|",{"inverse":true}],[" 25 ",{"fg":3,"bold":true}],["  .gtkrc-2.0-kde4 ",{}]],"25":[["~                   ",{"fg":4,"bold":true}],["|",{"inverse":true}],[" 41 ",{"fg":3,"bold":true}],["                                                                                                                ",{}],["|",{"inverse":true}],[" 26 ",{"fg":3,"bold":true}],["  .lesshst        ",{}]],"26":[["~                   ",{"fg":4,"bold":true}],["|",{"inverse":true}],[" 42 ",{"fg":3,"bold":true}],["MAPPINGS                                        *calendar-mappings*                                             ",{}],["|",{"inverse":true}],[" 27 ",{"fg":3,"bold":true}],["  .tcshrc         ",{}]],"27":[["~                   ",{"fg":4,"bold":true}],["|",{"inverse":true}],[" 43 ",{"fg":3,"bold":true}],["                                                                                                                ",{}],["|",{"inverse":true}],[" 28 ",{"fg":3,"bold":true}],["  .viminfo        ",{}]],"28":[["~                   ",{"fg":4,"bold":true}],["|",{"inverse":true}],[" 44 ",{"fg":3,"bold":true}],["calendar.vim makes the following normal mode mappings available:                                                ",{}],["|",{"inverse":true}],[" 29 ",{"fg":3,"bold":true}],["  .vimrc          ",{}]],"29":[["~                   ",{"fg":4,"bold":true}],["|",{"inverse":true}],[" 45 ",{"fg":3,"bold":true}],["                                                                                                                ",{}],["|",{"inverse":true}],[" 30 ",{"fg":3,"bold":true}],["  .xsession-errors",{}]],"30":[["~                   ",{"fg":4,"bold":true}],["|",{"inverse":true}],[" 46 ",{"fg":3,"bold":true}],["                                                *calendar-cal*                                                  ",{}],["|",{"inverse":true}],[" 31 ",{"fg":3,"bold":true}],["  anaconda-ks.cfg ",{}]],"31":[["~                   ",{"fg":4,"bold":true}],["|",{"inverse":true}],[" 47 ",{"fg":3,"bold":true}],["<LocalLeader>cal          Brings up the calendar in a vertical split.                                           ",{}],["|",{"inverse":true}],[" 32 ",{"fg":3,"bold":true}],["  initial-setup-ks",{}]],"32":[["~                   ",{"fg":4,"bold":true}],["|",{"inverse":true}],[" 48 ",{"fg":3,"bold":true}],["                          Equivalent to calling |:Calendar|.                                                    ",{}],["|",{"inverse":true}],[" 33 ",{"fg":3,"bold":true}],["  test.c          ",{}]],"33":[["~                   ",{"fg":4,"bold":true}],["|",{"inverse":true}],[" 49 ",{"fg":3,"bold":true}],["                                                                                                                ",{}],["|",{"inverse":true}],[" 34 ",{"fg":3,"bold":true}],["  test.cpp        ",{}]],"34":[["~                   ",{"fg":4,"bold":true}],["|",{"inverse":true}],[" 50 ",{"fg":3,"bold":true}],["                                                *calendar-caL*                                                  ",{}],["|",{"inverse":true}],[" 35 ",{"fg":3,"bold":true}],["  .test.cpp.swp   ",{}]],"35":[["~                   ",{"fg":4,"bold":true}],["|",{"inverse":true}],[" 51 ",{"fg":3,"bold":true}],["<LocalLeader>",{}],["caL ",{"bg":1}],["        ",{}],[" Bri",{"bg":1}],["ngs up the calendar in a horizontal split.                                         ",{}],["|",{"inverse":true}],["~                     ",{"fg":4,"bold":true}]],"36":[["~                   ",{"fg":4,"bold":true}],["|",{"inverse":true}],[" 52 ",{"fg":3,"bold":true}],["                          Equivalent to calling |:CalendarH|.                                                   ",{}],["|",{"inverse":true}],["~                     ",{"fg":4,"bold":true}]],"37":[["~                   ",{"fg":4,"bold":true}],["|",{"inverse":true}],[" 53 ",{"fg":3,"bold":true}],["                                                                                                                ",{}],["|",{"inverse":true}],["~                     ",{"fg":4,"bold":true}]],"38":[["~                   ",{"fg":4,"bold":true}],["|",{"inverse":true}],[" 54 ",{"fg":3,"bold":true}],["SETTINGS                                        *calendar-settings*                                             ",{}],["|",{"inverse":true}],["~                     ",{"fg":4,"bold":true}]],"39":[["~                   ",{"fg":4,"bold":true}],["|",{"inverse":true}],[" 55 ",{"fg":3,"bold":true}],["                                                                                                                ",{}],["|",{"inverse":true}],["~                     ",{"fg":4,"bold":true}]],"40":[["~                   ",{"fg":4,"bold":true}],["|",{"inverse":true}],[" 56 ",{"fg":3,"bold":true}],["calendar.vim can be con",{}],["figured using the following sett",{"bg":1}],["ings:                                                    ",{}],["|",{"inverse":true}],["~                     ",{"fg":4,"bold":true}]],"41":[["~                   ",{"fg":4,"bold":true}],["|",{"inverse":true}],[" 57 ",{"fg":3,"bold":true}],["                                                                                                                ",{}],["|",{"inverse":true}],["~                     ",{"fg":4,"bold":true}]],"42":[["~                   ",{"fg":4,"bold":true}],["|",{"inverse":true}],[" 58 ",{"fg":3,"bold":true}],["                                                *g:calendar_focus_today*                                        ",{}],["|",{"inverse":true}],["~                     ",{"fg":4,"bold":true}]],"43":[["~                   ",{"fg":4,"bold":true}],["|",{"inverse":true}],[" 59 ",{"fg":3,"bold":true}],["Keeps focus when moving to next or previous calendar: >                                                         ",{}],["|",{"inverse":true}],["~                     ",{"fg":4,"bold":true}]],"44":[["~                   ",{"fg":4,"bold":true}],["|",{"inverse":true}],[" 60 ",{"fg":3,"bold":true}],["  let g:calendar_focus_today = 1                ",{"underline":true}],["ndar: >                                                         ",{}],["|",{"inverse":true}],["~                     ",{"fg":4,"bold":true}]]},"cursor":{"x":73,"y":44,"visible":false}}],[0.037568,{"lines":{"44":[["~                   ",{"fg":4,"bold":true}],["|",{"inverse":true}],[" 60 ",{"fg":3,"bold":true}],["  let g:calendar_focus_today = 1                                                                                ",{}],["|",{"inverse":true}],["~                     ",{"fg":4,"bold":true}]],"45":[["~                   ",{"fg":4,"bold":true}],["|",{"inverse":true}],[" 61 ",{"fg":3,"bold":true}],["<                                                                                                               ",{"underline":true}],["|",{"inverse":true}],["~                     ",{"fg":4,"bold":true}]],"46":[["[Name] test.cpp      ",{"inverse":true}],[" NORMAL ",{"bold":true}],[" ",{}],["calendar.txt ",{"bold":true}],["                                                        unix │ utf-8 │ text │  27% ",{}],[" LN  61",{"bold":true}],[":1  ",{}],[" ",{"bold":true,"inverse":true}],[" ~/…/calendar-vim/doc>",{"bold":true}]]},"cursor":{"x":25,"y":45,"visible":true}}],[0.008298,{"lines":{"0":[["\" Press <F1> for hel",{"fg":6,"bold":true}],["|",{"inverse":true}],[" 17 ",{"fg":3,"bold":true}],["                          calendar will show the given month in the current                                     ",{}],["|",{"inverse":true}],["  1 ",{"fg":3,"bold":true}],["\" Press ? for help",{"fg":5,"bold":true}]],"1":[["                    ",{}],["|",{"inverse":true}],[" 18 ",{"fg":3,"bold":true}],["                          year.  When both [year] and [month] are omitted, the                                  ",{}],["|",{"inverse":true}],["  2 ",{"fg":3,"bold":true}],["                  ",{}]],"2":[["▼",{"fg":3,"bold":true}],[" First",{"fg":5,"bold":true}],[" : ",{}],["struct",{"fg":2,"bold":true}],["    ",{}],["|",{"inverse":true}],[" 19 ",{"fg":3,"bold":true}],["                          calendar will show the current month.                                                 ",{}],["|",{"inverse":true}],["  3 ",{"fg":3,"bold":true}],[".. (up a dir)",{"fg":6,"bold":true}],["     ",{}]],"3":[["    [prototypes]",{"fg":6,"bold":true}],["    ",{}],["|",{"inverse":true}],[" 20 ",{"fg":3,"bold":true}],["                                                                                                                ",{}],["|",{"inverse":true}],["  4 /root/",{"fg":3,"bold":true}],["            ",{}]],"4":[["   ",{}],["+",{"fg":2,"bold":true}],["FirstRun(void)  ",{}],["|",{"inverse":true}],[" 21 ",{"fg":3,"bold":true}],["                                                *calendar-:CalendarH*                                           ",{}],["|",{"inverse":true}],["  5 ",{"fg":3,"bold":true}],["▸ .asciinema/",{"fg":6,"bold":true}],["     ",{}]],"5":[["   ",{}],["+",{"fg":2,"bold":true}],["FirstRun2(void) ",{}],["|",{"inverse":true}],[" 22 ",{"fg":3,"bold":true}],[":CalendarH [[year] month] Show calendar at this year and this month in a                                        ",{}],["|",{"inverse":true}],["  6 ",{"fg":3,"bold":true}],["▸ .cache/",{"fg":6,"bold":true}],["         ",{}]],"6":[["                    ",{}],["|",{"inverse":true}],[" 23 ",{"fg":3,"bold":true}],["                          horizontal split.  When [year] is omitted, the                                        ",{}],["|",{"inverse":true}],["  7 ",{"fg":3,"bold":true}],["▸ .config/",{"fg":6,"bold":true}],["        ",{}]],"7":[["▼",{"fg":3,"bold":true}],[" Last",{"fg":5,"bold":true}],[" : ",{}],["struct",{"fg":2,"bold":true}],["     ",{}],["|",{"inverse":true}],[" 24 ",{"fg":3,"bold":true}],["                          calendar will show the given month in the current                                     ",{}],["|",{"inverse":true}],["  8 ",{"fg":3,"bold":true}],["▸ .dbus/",{"fg":6,"bold":true}],["          ",{}]],"8":[["    [functions]",{"fg":6,"bold":true}],["     ",{}],["|",{"inverse":true}],[" 25 ",{"fg":3,"bold":true}],["                          year.  When both [year] and [month] are omitted, the                                  ",{}],["|",{"inverse":true}],["  9 ",{"fg":3,"bold":true}],["▸ .gnupg/",{"fg":6,"bold":true}],["         ",{}]],"9":[["   ",{}],["+",{"fg":2,"bold":true}],["FirstRun(void)  ",{}],["|",{"inverse":true}],[" 26 ",{"fg":3,"bold":true}],["                          calendar will show the current month.                                                 ",{}],["|",{"inverse":true}],[" 10 ",{"fg":3,"bold":true}],["▸ .kde/",{"fg":6,"bold":true}],["           ",{}]],"10":[["   ",{}],["+",{"fg":2,"bold":true}],["FirstRun2(void) ",{}],["|",{"inverse":true}],[" 27 ",{"fg":3,"bold":true}],["                                                                                                                ",{}],["|",{"inverse":true}],[" 11 ",{"fg":3,"bold":true}],["▸ .local/",{"fg":6,"bold":true}],["         ",{}]],"11":[["   ",{}],["+",{"fg":2,"bold":true}],["~Last()         ",{}],["|",{"inverse":true}],[" 28 ",{"fg":3,"bold":true}],["                                                *calendar-:CalendarT*                                           ",{}],["|",{"inverse":true}],[" 12 ",{"fg":3,"bold":true}],["▸ .pki/",{"fg":6,"bold":true}],["           ",{}]],"12":[["   ",{}],["+",{"fg":2,"bold":true}],["SecondRun(void) ",{}],["|",{"inverse":true}],[" 29 ",{"fg":3,"bold":true}],[":CalendarT [[year] month] Show calendar at this year and this month in a                                        ",{}],["|",{"inverse":true}],[" 13 ",{"fg":3,"bold":true}],["▸ .ssh/",{"fg":6,"bold":true}],["           ",{}]],"13":[["   ",{}],["+",{"fg":2,"bold":true}],["SecondRun2(void)",{}],["|",{"inverse":true}],[" 30 ",{"fg":3,"bold":true}],["                          full-screen window.  When [year] is omitted, the                                      ",{}],["|",{"inverse":true}],[" 14 ",{"fg":3,"bold":true}],["▸ .vim/",{"fg":6,"bold":true}],["           ",{}]],"14":[["                    ",{}],["|",{"inverse":true}],[" 31 ",{"fg":3,"bold":true}],["                          calendar will show the given month in the current                                     ",{}],["|",{"inverse":true}],[" 15 ",{"fg":3,"bold":true}],["▸ diary/",{"fg":6,"bold":true}],["          ",{}]],"15":[["▼",{"fg":3,"bold":true}],[" Second",{"fg":5,"bold":true}],[" : ",{}],["struct",{"fg":2,"bold":true}],["   ",{}],["|",{"inverse":true}],[" 32 ",{"fg":3,"bold":true}],["                          year.  When both [year] and [month] are omitted, the                                  ",{}],["|",{"inverse":true}],[" 16 ",{"fg":3,"bold":true}],["▸ temp/",{"fg":6,"bold":true}],["           ",{}]],"16":[["    [prototypes]",{"fg":6,"bold":true}],["    ",{}],["|",{"inverse":true}],[" 33 ",{"fg":3,"bold":true}],["                          calendar will show the current month.                                                 ",{}],["|",{"inverse":true}],[" 17 ",{"fg":3,"bold":true}],["  .bash_history   ",{}]],"17":[["   ",{}],["+",{"fg":2,"bold":true}],["SecondRun(void) ",{}],["|",{"inverse":true}],[" 34 ",{"fg":3,"bold":true}],["                                                                                                                ",{}],["|",{"inverse":true}],[" 18 ",{"fg":3,"bold":true}],["  .bash_logout    ",{}]],"18":[["   ",{}],["+",{"fg":2,"bold":true}],["SecondRun2(void)",{}],["|",{"inverse":true}],[" 35 ",{"fg":3,"bold":true}],["                                                *calendar-:CalendarVR*                                          ",{}],["|",{"inverse":true}],[" 19 ",{"fg":3,"bold":true}],["  .bash_profile   ",{"underline":true}]],"19":[["                    ",{}],["|",{"inverse":true}],[" 36 ",{"fg":3,"bold":true}],[":CalendarVR [[year] month]  Show calendar at this year and this month in a                                      ",{}],["|",{"inverse":true}],[" 20 ",{"fg":3,"bold":true}],["  .bashrc         ",{}]],"20":[["▼",{"fg":3,"bold":true}],[" ",{}],["functions",{"fg":6,"bold":true}],["         ",{}],["|",{"inverse":true}],[" 37 ",{"fg":3,"bold":true}],["                          vertical split at the right site.  When [year] is                                     ",{}],["|",{"inverse":true}],[" 21 ",{"fg":3,"bold":true}],["  .cshrc          ",{}]],"21":[["    main(int argc, c",{"underline":true}],["|",{"inverse":true}],[" 38 ",{"fg":3,"bold":true}],["                          omitted, the calendar will show the given month in                                    ",{}],["|",{"inverse":true}],[" 22 ",{"fg":3,"bold":true}],["  .dmrc           ",{}]],"22":[["~                   ",{"fg":4,"bold":true}],["|",{"inverse":true}],[" 39 ",{"fg":3,"bold":true}],["                          the current year.  When both [year] and [month] are                                   ",{}],["|",{"inverse":true}],[" 23 ",{"fg":3,"bold":true}],["  .esd_auth       ",{}]],"23":[["~                   ",{"fg":4,"bold":true}],["|",{"inverse":true}],[" 40 ",{"fg":3,"bold":true}],["                          omitted, the calendar will show the current month.                                    ",{}],["|",{"inverse":true}],[" 24 ",{"fg":3,"bold":true}],["  .gtkrc-2.0      ",{}]],"24":[["~                   ",{"fg":4,"bold":true}],["|",{"inverse":true}],[" 41 ",{"fg":3,"bold":true}],["                                                                                                                ",{}],["|",{"inverse":true}],[" 25 ",{"fg":3,"bold":true}],["  .gtkrc-2.0-kde4 ",{}]],"25":[["~                   ",{"fg":4,"bold":true}],["|",{"inverse":true}],[" 42 ",{"fg":3,"bold":true}],["MAPPINGS                                        *calendar-mappings*                                             ",{}],["|",{"inverse":true}],[" 26 ",{"fg":3,"bold":true}],["  .lesshst        ",{}]],"26":[["~                   ",{"fg":4,"bold":true}],["|",{"inverse":true}],[" 43 ",{"fg":3,"bold":true}],["                                                                                                                ",{}],["|",{"inverse":true}],[" 27 ",{"fg":3,"bold":true}],["  .tcshrc         ",{}]],"27":[["~                   ",{"fg":4,"bold":true}],["|",{"inverse":true}],[" 44 ",{"fg":3,"bold":true}],["calendar.vim makes the following normal mode mappings available:                                                ",{}],["|",{"inverse":true}],[" 28 ",{"fg":3,"bold":true}],["  .viminfo        ",{}]],"28":[["~                   ",{"fg":4,"bold":true}],["|",{"inverse":true}],[" 45 ",{"fg":3,"bold":true}],["                                                                                                                ",{}],["|",{"inverse":true}],[" 29 ",{"fg":3,"bold":true}],["  .vimrc          ",{}]],"29":[["~                   ",{"fg":4,"bold":true}],["|",{"inverse":true}],[" 46 ",{"fg":3,"bold":true}],["                                                *calendar-cal*                                                  ",{}],["|",{"inverse":true}],[" 30 ",{"fg":3,"bold":true}],["  .xsession-errors",{}]],"30":[["~                   ",{"fg":4,"bold":true}],["|",{"inverse":true}],[" 47 ",{"fg":3,"bold":true}],["<LocalLeader>cal          Brings up the calendar in a vertical split.                                           ",{}],["|",{"inverse":true}],[" 31 ",{"fg":3,"bold":true}],["  anaconda-ks.cfg ",{}]],"31":[["~                   ",{"fg":4,"bold":true}],["|",{"inverse":true}],[" 48 ",{"fg":3,"bold":true}],["                          Equivalent to calling |:Calendar|.                                                    ",{}],["|",{"inverse":true}],[" 32 ",{"fg":3,"bold":true}],["  initial-setup-ks",{}]],"32":[["~                   ",{"fg":4,"bold":true}],["|",{"inverse":true}],[" 49 ",{"fg":3,"bold":true}],["                                                                                                                ",{}],["|",{"inverse":true}],[" 33 ",{"fg":3,"bold":true}],["  test.c          ",{}]],"33":[["~                   ",{"fg":4,"bold":true}],["|",{"inverse":true}],[" 50 ",{"fg":3,"bold":true}],["                                                *calendar-caL*                                                  ",{}],["|",{"inverse":true}],[" 34 ",{"fg":3,"bold":true}],["  test.cpp        ",{}]],"34":[["~                   ",{"fg":4,"bold":true}],["|",{"inverse":true}],[" 51 ",{"fg":3,"bold":true}],["<LocalLeader>",{}],["caL ",{"bg":1}],["        ",{}],[" Bri",{"bg":1}],["ngs up the calendar in a horizontal split.                                         ",{}],["|",{"inverse":true}],[" 35 ",{"fg":3,"bold":true}],["  .test.cpp.swp   ",{}]],"35":[["~                   ",{"fg":4,"bold":true}],["|",{"inverse":true}],[" 52 ",{"fg":3,"bold":true}],["                          Equivalent to calling |:CalendarH|.                                                   ",{}],["|",{"inverse":true}],["~                     ",{"fg":4,"bold":true}]],"36":[["~                   ",{"fg":4,"bold":true}],["|",{"inverse":true}],[" 53 ",{"fg":3,"bold":true}],["                                                                                                                ",{}],["|",{"inverse":true}],["~                     ",{"fg":4,"bold":true}]],"37":[["~                   ",{"fg":4,"bold":true}],["|",{"inverse":true}],[" 54 ",{"fg":3,"bold":true}],["SETTINGS                                        *calendar-settings*                                             ",{}],["|",{"inverse":true}],["~                     ",{"fg":4,"bold":true}]],"38":[["~                   ",{"fg":4,"bold":true}],["|",{"inverse":true}],[" 55 ",{"fg":3,"bold":true}],["                                                                                                                ",{}],["|",{"inverse":true}],["~                     ",{"fg":4,"bold":true}]],"39":[["~                   ",{"fg":4,"bold":true}],["|",{"inverse":true}],[" 56 ",{"fg":3,"bold":true}],["calendar.vim can be con",{}],["figured using the following sett",{"bg":1}],["ings:                                                    ",{}],["|",{"inverse":true}],["~                     ",{"fg":4,"bold":true}]],"40":[["~                   ",{"fg":4,"bold":true}],["|",{"inverse":true}],[" 57 ",{"fg":3,"bold":true}],["                                                                                                                ",{}],["|",{"inverse":true}],["~                     ",{"fg":4,"bold":true}]],"41":[["~                   ",{"fg":4,"bold":true}],["|",{"inverse":true}],[" 58 ",{"fg":3,"bold":true}],["                                                *g:calendar_focus_today*                                        ",{}],["|",{"inverse":true}],["~                     ",{"fg":4,"bold":true}]],"42":[["~                   ",{"fg":4,"bold":true}],["|",{"inverse":true}],[" 59 ",{"fg":3,"bold":true}],["Keeps focus when moving to next or previous calendar: >                                                         ",{}],["|",{"inverse":true}],["~                     ",{"fg":4,"bold":true}]],"43":[["~                   ",{"fg":4,"bold":true}],["|",{"inverse":true}],[" 60 ",{"fg":3,"bold":true}],["  let g:calendar_focus_today = 1                                                                                ",{}],["|",{"inverse":true}],["~                     ",{"fg":4,"bold":true}]],"44":[["~                   ",{"fg":4,"bold":true}],["|",{"inverse":true}],[" 61 ",{"fg":3,"bold":true}],["<                                               ",{"underline":true}],["                                                                ",{}],["|",{"inverse":true}],["~                     ",{"fg":4,"bold":true}]]},"cursor":{"x":73,"y":44,"visible":false}}],[0.017225,{"lines":{"44":[["~                   ",{"fg":4,"bold":true}],["|",{"inverse":true}],[" 61 ",{"fg":3,"bold":true}],["<                                                                                                               ",{}],["|",{"inverse":true}],["~                     ",{"fg":4,"bold":true}]],"45":[["~                   ",{"fg":4,"bold":true}],["|",{"inverse":true}],[" 62 ",{"fg":3,"bold":true}],["                                                                                                                ",{"underline":true}],["|",{"inverse":true}],["~                     ",{"fg":4,"bold":true}]],"46":[["[Name] test.cpp      ",{"inverse":true}],[" NORMAL ",{"bold":true}],[" ",{}],["calendar.txt ",{"bold":true}],["                                                        unix │ utf-8 │ text │  28% ",{}],[" LN  62",{"bold":true}],[":1  ",{}],[" ",{"bold":true,"inverse":true}],[" ~/…/calendar-vim/doc>",{"bold":true}]]},"cursor":{"x":25,"y":45,"visible":true}}],[0.00435,{"lines":{"0":[["\" Press <F1> for hel",{"fg":6,"bold":true}],["|",{"inverse":true}],[" 18 ",{"fg":3,"bold":true}],["                          year.  When both [year] and [month] are omitted, the                                  ",{}],["|",{"inverse":true}],["  1 ",{"fg":3,"bold":true}],["\" Press ? for help",{"fg":5,"bold":true}]],"1":[["                    ",{}],["|",{"inverse":true}],[" 19 ",{"fg":3,"bold":true}],["                          calendar will show the current month.                                                 ",{}],["|",{"inverse":true}],["  2 ",{"fg":3,"bold":true}],["                  ",{}]],"2":[["▼",{"fg":3,"bold":true}],[" First",{"fg":5,"bold":true}],[" : ",{}],["struct",{"fg":2,"bold":true}],["    ",{}],["|",{"inverse":true}],[" 20 ",{"fg":3,"bold":true}],["                                                                                                                ",{}],["|",{"inverse":true}],["  3 ",{"fg":3,"bold":true}],[".. (up a dir)",{"fg":6,"bold":true}],["     ",{}]],"3":[["    [prototypes]",{"fg":6,"bold":true}],["    ",{}],["|",{"inverse":true}],[" 21 ",{"fg":3,"bold":true}],["                                                *calendar-:CalendarH*                                           ",{}],["|",{"inverse":true}],["  4 /root/",{"fg":3,"bold":true}],["            ",{}]],"4":[["   ",{}],["+",{"fg":2,"bold":true}],["FirstRun(void)  ",{}],["|",{"inverse":true}],[" 22 ",{"fg":3,"bold":true}],[":CalendarH [[year] month] Show calendar at this year and this month in a                                        ",{}],["|",{"inverse":true}],["  5 ",{"fg":3,"bold":true}],["▸ .asciinema/",{"fg":6,"bold":true}],["     ",{}]],"5":[["   ",{}],["+",{"fg":2,"bold":true}],["FirstRun2(void) ",{}],["|",{"inverse":true}],[" 23 ",{"fg":3,"bold":true}],["                          horizontal split.  When [year] is omitted, the                                        ",{}],["|",{"inverse":true}],["  6 ",{"fg":3,"bold":true}],["▸ .cache/",{"fg":6,"bold":true}],["         ",{}]],"6":[["                    ",{}],["|",{"inverse":true}],[" 24 ",{"fg":3,"bold":true}],["                          calendar will show the given month in the current                                     ",{}],["|",{"inverse":true}],["  7 ",{"fg":3,"bold":true}],["▸ .config/",{"fg":6,"bold":true}],["        ",{}]],"7":[["▼",{"fg":3,"bold":true}],[" Last",{"fg":5,"bold":true}],[" : ",{}],["struct",{"fg":2,"bold":true}],["     ",{}],["|",{"inverse":true}],[" 25 ",{"fg":3,"bold":true}],["                          year.  When both [year] and [month] are omitted, the                                  ",{}],["|",{"inverse":true}],["  8 ",{"fg":3,"bold":true}],["▸ .dbus/",{"fg":6,"bold":true}],["          ",{}]],"8":[["    [functions]",{"fg":6,"bold":true}],["     ",{}],["|",{"inverse":true}],[" 26 ",{"fg":3,"bold":true}],["                          calendar will show the current month.                                                 ",{}],["|",{"inverse":true}],["  9 ",{"fg":3,"bold":true}],["▸ .gnupg/",{"fg":6,"bold":true}],["         ",{}]],"9":[["   ",{}],["+",{"fg":2,"bold":true}],["FirstRun(void)  ",{}],["|",{"inverse":true}],[" 27 ",{"fg":3,"bold":true}],["                                                                                                                ",{}],["|",{"inverse":true}],[" 10 ",{"fg":3,"bold":true}],["▸ .kde/",{"fg":6,"bold":true}],["           ",{}]],"10":[["   ",{}],["+",{"fg":2,"bold":true}],["FirstRun2(void) ",{}],["|",{"inverse":true}],[" 28 ",{"fg":3,"bold":true}],["                                                *calendar-:CalendarT*                                           ",{}],["|",{"inverse":true}],[" 11 ",{"fg":3,"bold":true}],["▸ .local/",{"fg":6,"bold":true}],["         ",{}]],"11":[["   ",{}],["+",{"fg":2,"bold":true}],["~Last()         ",{}],["|",{"inverse":true}],[" 29 ",{"fg":3,"bold":true}],[":CalendarT [[year] month] Show calendar at this year and this month in a                                        ",{}],["|",{"inverse":true}],[" 12 ",{"fg":3,"bold":true}],["▸ .pki/",{"fg":6,"bold":true}],["           ",{}]],"12":[["   ",{}],["+",{"fg":2,"bold":true}],["SecondRun(void) ",{}],["|",{"inverse":true}],[" 30 ",{"fg":3,"bold":true}],["                          full-screen window.  When [year] is omitted, the                                      ",{}],["|",{"inverse":true}],[" 13 ",{"fg":3,"bold":true}],["▸ .ssh/",{"fg":6,"bold":true}],["           ",{}]],"13":[["   ",{}],["+",{"fg":2,"bold":true}],["SecondRun2(void)",{}],["|",{"inverse":true}],[" 31 ",{"fg":3,"bold":true}],["                          calendar will show the given month in the current                                     ",{}],["|",{"inverse":true}],[" 14 ",{"fg":3,"bold":true}],["▸ .vim/",{"fg":6,"bold":true}],["           ",{}]],"14":[["                    ",{}],["|",{"inverse":true}],[" 32 ",{"fg":3,"bold":true}],["                          year.  When both [year] and [month] are omitted, the                                  ",{}],["|",{"inverse":true}],[" 15 ",{"fg":3,"bold":true}],["▸ diary/",{"fg":6,"bold":true}],["          ",{}]],"15":[["▼",{"fg":3,"bold":true}],[" Second",{"fg":5,"bold":true}],[" : ",{}],["struct",{"fg":2,"bold":true}],["   ",{}],["|",{"inverse":true}],[" 33 ",{"fg":3,"bold":true}],["                          calendar will show the current month.                                                 ",{}],["|",{"inverse":true}],[" 16 ",{"fg":3,"bold":true}],["▸ temp/",{"fg":6,"bold":true}],["           ",{}]],"16":[["    [prototypes]",{"fg":6,"bold":true}],["    ",{}],["|",{"inverse":true}],[" 34 ",{"fg":3,"bold":true}],["                                                                                                                ",{}],["|",{"inverse":true}],[" 17 ",{"fg":3,"bold":true}],["  .bash_history   ",{}]],"17":[["   ",{}],["+",{"fg":2,"bold":true}],["SecondRun(void) ",{}],["|",{"inverse":true}],[" 35 ",{"fg":3,"bold":true}],["                                                *calendar-:CalendarVR*                                          ",{}],["|",{"inverse":true}],[" 18 ",{"fg":3,"bold":true}],["  .bash_logout    ",{}]],"18":[["   ",{}],["+",{"fg":2,"bold":true}],["SecondRun2(void)",{}],["|",{"inverse":true}],[" 36 ",{"fg":3,"bold":true}],[":CalendarVR [[year] month]  Show calendar at this year and this month in a                                      ",{}],["|",{"inverse":true}],[" 19 ",{"fg":3,"bold":true}],["  .bash_profile   ",{"underline":true}]],"19":[["                    ",{}],["|",{"inverse":true}],[" 37 ",{"fg":3,"bold":true}],["                          vertical split at the right site.  When [year] is                                     ",{}],["|",{"inverse":true}],[" 20 ",{"fg":3,"bold":true}],["  .bashrc         ",{}]],"20":[["▼",{"fg":3,"bold":true}],[" ",{}],["functions",{"fg":6,"bold":true}],["         ",{}],["|",{"inverse":true}],[" 38 ",{"fg":3,"bold":true}],["                          omitted, the calendar will show the given month in                                    ",{}],["|",{"inverse":true}],[" 21 ",{"fg":3,"bold":true}],["  .cshrc          ",{}]],"21":[["    main(int argc, c",{"underline":true}],["|",{"inverse":true}],[" 39 ",{"fg":3,"bold":true}],["                          the current year.  When both [year] and [month] are                                   ",{}],["|",{"inverse":true}],[" 22 ",{"fg":3,"bold":true}],["  .dmrc           ",{}]],"22":[["~                   ",{"fg":4,"bold":true}],["|",{"inverse":true}],[" 40 ",{"fg":3,"bold":true}],["                          omitted, the calendar will show the current month.                                    ",{}],["|",{"inverse":true}],[" 23 ",{"fg":3,"bold":true}],["  .esd_auth       ",{}]],"23":[["~                   ",{"fg":4,"bold":true}],["|",{"inverse":true}],[" 41 ",{"fg":3,"bold":true}],["                                                                                                                ",{}],["|",{"inverse":true}],[" 24 ",{"fg":3,"bold":true}],["  .gtkrc-2.0      ",{}]],"24":[["~                   ",{"fg":4,"bold":true}],["|",{"inverse":true}],[" 42 ",{"fg":3,"bold":true}],["MAPPINGS                                        *calendar-mappings*                                             ",{}],["|",{"inverse":true}],[" 25 ",{"fg":3,"bold":true}],["  .gtkrc-2.0-kde4 ",{}]],"25":[["~                   ",{"fg":4,"bold":true}],["|",{"inverse":true}],[" 43 ",{"fg":3,"bold":true}],["                                                                                                                ",{}],["|",{"inverse":true}],[" 26 ",{"fg":3,"bold":true}],["  .lesshst        ",{}]],"26":[["~                   ",{"fg":4,"bold":true}],["|",{"inverse":true}],[" 44 ",{"fg":3,"bold":true}],["calendar.vim makes the following normal mode mappings available:                                                ",{}],["|",{"inverse":true}],[" 27 ",{"fg":3,"bold":true}],["  .tcshrc         ",{}]],"27":[["~                   ",{"fg":4,"bold":true}],["|",{"inverse":true}],[" 45 ",{"fg":3,"bold":true}],["                                                                                                                ",{}],["|",{"inverse":true}],[" 28 ",{"fg":3,"bold":true}],["  .viminfo        ",{}]],"28":[["~                   ",{"fg":4,"bold":true}],["|",{"inverse":true}],[" 46 ",{"fg":3,"bold":true}],["                                                *calendar-cal*                                                  ",{}],["|",{"inverse":true}],[" 29 ",{"fg":3,"bold":true}],["  .vimrc          ",{}]],"29":[["~                   ",{"fg":4,"bold":true}],["|",{"inverse":true}],[" 47 ",{"fg":3,"bold":true}],["<LocalLeader>cal          Brings up the calendar in a vertical split.                                           ",{}],["|",{"inverse":true}],[" 30 ",{"fg":3,"bold":true}],["  .xsession-errors",{}]],"30":[["~                   ",{"fg":4,"bold":true}],["|",{"inverse":true}],[" 48 ",{"fg":3,"bold":true}],["                          Equivalent to calling |:Calendar|.                                                    ",{}],["|",{"inverse":true}],[" 31 ",{"fg":3,"bold":true}],["  anaconda-ks.cfg ",{}]],"31":[["~                   ",{"fg":4,"bold":true}],["|",{"inverse":true}],[" 49 ",{"fg":3,"bold":true}],["                                                                                                                ",{}],["|",{"inverse":true}],[" 32 ",{"fg":3,"bold":true}],["  initial-setup-ks",{}]],"32":[["~                   ",{"fg":4,"bold":true}],["|",{"inverse":true}],[" 50 ",{"fg":3,"bold":true}],["                                                *calendar-caL*                                                  ",{}],["|",{"inverse":true}],[" 33 ",{"fg":3,"bold":true}],["  test.c          ",{}]],"33":[["~                   ",{"fg":4,"bold":true}],["|",{"inverse":true}],[" 51 ",{"fg":3,"bold":true}],["<LocalLeader>",{}],["caL ",{"bg":1}],["        ",{}],[" Bri",{"bg":1}],["ngs up the calendar in a horizontal split.                                         ",{}],["|",{"inverse":true}],[" 34 ",{"fg":3,"bold":true}],["  test.cpp        ",{}]],"34":[["~                   ",{"fg":4,"bold":true}],["|",{"inverse":true}],[" 52 ",{"fg":3,"bold":true}],["                          Equivalent to calling |:CalendarH|.                                                   ",{}],["|",{"inverse":true}],[" 35 ",{"fg":3,"bold":true}],["  .test.cpp.swp   ",{}]],"35":[["~                   ",{"fg":4,"bold":true}],["|",{"inverse":true}],[" 53 ",{"fg":3,"bold":true}],["                                                                                                                ",{}],["|",{"inverse":true}],["~                     ",{"fg":4,"bold":true}]],"36":[["~                   ",{"fg":4,"bold":true}],["|",{"inverse":true}],[" 54 ",{"fg":3,"bold":true}],["SETTINGS                                        *calendar-settings*                                             ",{}],["|",{"inverse":true}],["~                     ",{"fg":4,"bold":true}]],"37":[["~                   ",{"fg":4,"bold":true}],["|",{"inverse":true}],[" 55 ",{"fg":3,"bold":true}],["                                                                                                                ",{}],["|",{"inverse":true}],["~                     ",{"fg":4,"bold":true}]],"38":[["~                   ",{"fg":4,"bold":true}],["|",{"inverse":true}],[" 56 ",{"fg":3,"bold":true}],["calendar.vim can be con",{}],["figured using the following sett",{"bg":1}],["ings:                                                    ",{}],["|",{"inverse":true}],["~                     ",{"fg":4,"bold":true}]],"39":[["~                   ",{"fg":4,"bold":true}],["|",{"inverse":true}],[" 57 ",{"fg":3,"bold":true}],["                                                                                                                ",{}],["|",{"inverse":true}],["~                     ",{"fg":4,"bold":true}]],"40":[["~                   ",{"fg":4,"bold":true}],["|",{"inverse":true}],[" 58 ",{"fg":3,"bold":true}],["                                                *g:calendar_focus_today*                                        ",{}],["|",{"inverse":true}],["~                     ",{"fg":4,"bold":true}]],"41":[["~                   ",{"fg":4,"bold":true}],["|",{"inverse":true}],[" 59 ",{"fg":3,"bold":true}],["Keeps focus when moving to next or previous calendar: >                                                         ",{}],["|",{"inverse":true}],["~                     ",{"fg":4,"bold":true}]],"42":[["~                   ",{"fg":4,"bold":true}],["|",{"inverse":true}],[" 60 ",{"fg":3,"bold":true}],["  let g:calendar_focus_today = 1                                                                                ",{}],["|",{"inverse":true}],["~                     ",{"fg":4,"bold":true}]],"43":[["~                   ",{"fg":4,"bold":true}],["|",{"inverse":true}],[" 61 ",{"fg":3,"bold":true}],["<                                                                                                               ",{}],["|",{"inverse":true}],["~                     ",{"fg":4,"bold":true}]],"44":[["~                   ",{"fg":4,"bold":true}],["|",{"inverse":true}],[" 62 ",{"fg":3,"bold":true}],["                                                ",{"underline":true}],["                                                                ",{}],["|",{"inverse":true}],["~                     ",{"fg":4,"bold":true}]]},"cursor":{"x":73,"y":44,"visible":false}}],[0.037716,{"lines":{"44":[["~                   ",{"fg":4,"bold":true}],["|",{"inverse":true}],[" 62 ",{"fg":3,"bold":true}],["                                                                                                                ",{}],["|",{"inverse":true}],["~                     ",{"fg":4,"bold":true}]],"45":[["~                   ",{"fg":4,"bold":true}],["|",{"inverse":true}],[" 63 ",{"fg":3,"bold":true}],["                                                *g:calendar_keys*                                               ",{"underline":true}],["|",{"inverse":true}],["~                     ",{"fg":4,"bold":true}]],"46":[["[Name] test.cpp      ",{"inverse":true}],[" NORMAL ",{"bold":true}],[" ",{}],["calendar.txt ",{"bold":true}],["                                                        unix │ utf-8 │ text │  28% ",{}],[" LN  63",{"bold":true}],[":1  ",{}],[" ",{"bold":true,"inverse":true}],[" ~/…/calendar-vim/doc>",{"bold":true}]]},"cursor":{"x":25,"y":45,"visible":true}}],[0.00697,{"lines":{"0":[["\" Press <F1> for hel",{"fg":6,"bold":true}],["|",{"inverse":true}],[" 19 ",{"fg":3,"bold":true}],["                          calendar will show the current month.                                                 ",{}],["|",{"inverse":true}],["  1 ",{"fg":3,"bold":true}],["\" Press ? for help",{"fg":5,"bold":true}]],"1":[["                    ",{}],["|",{"inverse":true}],[" 20 ",{"fg":3,"bold":true}],["                                                                                                                ",{}],["|",{"inverse":true}],["  2 ",{"fg":3,"bold":true}],["                  ",{}]],"2":[["▼",{"fg":3,"bold":true}],[" First",{"fg":5,"bold":true}],[" : ",{}],["struct",{"fg":2,"bold":true}],["    ",{}],["|",{"inverse":true}],[" 21 ",{"fg":3,"bold":true}],["                                                *calendar-:CalendarH*                                           ",{}],["|",{"inverse":true}],["  3 ",{"fg":3,"bold":true}],[".. (up a dir)",{"fg":6,"bold":true}],["     ",{}]],"3":[["    [prototypes]",{"fg":6,"bold":true}],["    ",{}],["|",{"inverse":true}],[" 22 ",{"fg":3,"bold":true}],[":CalendarH [[year] month] Show calendar at this year and this month in a                                        ",{}],["|",{"inverse":true}],["  4 /root/",{"fg":3,"bold":true}],["            ",{}]],"4":[["   ",{}],["+",{"fg":2,"bold":true}],["FirstRun(void)  ",{}],["|",{"inverse":true}],[" 23 ",{"fg":3,"bold":true}],["                          horizontal split.  When [year] is omitted, the                                        ",{}],["|",{"inverse":true}],["  5 ",{"fg":3,"bold":true}],["▸ .asciinema/",{"fg":6,"bold":true}],["     ",{}]],"5":[["   ",{}],["+",{"fg":2,"bold":true}],["FirstRun2(void) ",{}],["|",{"inverse":true}],[" 24 ",{"fg":3,"bold":true}],["                          calendar will show the given month in the current                                     ",{}],["|",{"inverse":true}],["  6 ",{"fg":3,"bold":true}],["▸ .cache/",{"fg":6,"bold":true}],["         ",{}]],"6":[["                    ",{}],["|",{"inverse":true}],[" 25 ",{"fg":3,"bold":true}],["                          year.  When both [year] and [month] are omitted, the                                  ",{}],["|",{"inverse":true}],["  7 ",{"fg":3,"bold":true}],["▸ .config/",{"fg":6,"bold":true}],["        ",{}]],"7":[["▼",{"fg":3,"bold":true}],[" Last",{"fg":5,"bold":true}],[" : ",{}],["struct",{"fg":2,"bold":true}],["     ",{}],["|",{"inverse":true}],[" 26 ",{"fg":3,"bold":true}],["                          calendar will show the current month.                                                 ",{}],["|",{"inverse":true}],["  8 ",{"fg":3,"bold":true}],["▸ .dbus/",{"fg":6,"bold":true}],["          ",{}]],"8":[["    [functions]",{"fg":6,"bold":true}],["     ",{}],["|",{"inverse":true}],[" 27 ",{"fg":3,"bold":true}],["                                                                                                                ",{}],["|",{"inverse":true}],["  9 ",{"fg":3,"bold":true}],["▸ .gnupg/",{"fg":6,"bold":true}],["         ",{}]],"9":[["   ",{}],["+",{"fg":2,"bold":true}],["FirstRun(void)  ",{}],["|",{"inverse":true}],[" 28 ",{"fg":3,"bold":true}],["                                                *calendar-:CalendarT*                                           ",{}],["|",{"inverse":true}],[" 10 ",{"fg":3,"bold":true}],["▸ .kde/",{"fg":6,"bold":true}],["           ",{}]],"10":[["   ",{}],["+",{"fg":2,"bold":true}],["FirstRun2(void) ",{}],["|",{"inverse":true}],[" 29 ",{"fg":3,"bold":true}],[":CalendarT [[year] month] Show calendar at this year and this month in a                                        ",{}],["|",{"inverse":true}],[" 11 ",{"fg":3,"bold":true}],["▸ .local/",{"fg":6,"bold":true}],["         ",{}]],"11":[["   ",{}],["+",{"fg":2,"bold":true}],["~Last()         ",{}],["|",{"inverse":true}],[" 30 ",{"fg":3,"bold":true}],["                          full-screen window.  When [year] is omitted, the                                      ",{}],["|",{"inverse":true}],[" 12 ",{"fg":3,"bold":true}],["▸ .pki/",{"fg":6,"bold":true}],["           ",{}]],"12":[["   ",{}],["+",{"fg":2,"bold":true}],["SecondRun(void) ",{}],["|",{"inverse":true}],[" 31 ",{"fg":3,"bold":true}],["                          calendar will show the given month in the current                                     ",{}],["|",{"inverse":true}],[" 13 ",{"fg":3,"bold":true}],["▸ .ssh/",{"fg":6,"bold":true}],["           ",{}]],"13":[["   ",{}],["+",{"fg":2,"bold":true}],["SecondRun2(void)",{}],["|",{"inverse":true}],[" 32 ",{"fg":3,"bold":true}],["                          year.  When both [year] and [month] are omitted, the                                  ",{}],["|",{"inverse":true}],[" 14 ",{"fg":3,"bold":true}],["▸ .vim/",{"fg":6,"bold":true}],["           ",{}]],"14":[["                    ",{}],["|",{"inverse":true}],[" 33 ",{"fg":3,"bold":true}],["                          calendar will show the current month.                                                 ",{}],["|",{"inverse":true}],[" 15 ",{"fg":3,"bold":true}],["▸ diary/",{"fg":6,"bold":true}],["          ",{}]],"15":[["▼",{"fg":3,"bold":true}],[" Second",{"fg":5,"bold":true}],[" : ",{}],["struct",{"fg":2,"bold":true}],["   ",{}],["|",{"inverse":true}],[" 34 ",{"fg":3,"bold":true}],["                                                                                                                ",{}],["|",{"inverse":true}],[" 16 ",{"fg":3,"bold":true}],["▸ temp/",{"fg":6,"bold":true}],["           ",{}]],"16":[["    [prototypes]",{"fg":6,"bold":true}],["    ",{}],["|",{"inverse":true}],[" 35 ",{"fg":3,"bold":true}],["                                                *calendar-:CalendarVR*                                          ",{}],["|",{"inverse":true}],[" 17 ",{"fg":3,"bold":true}],["  .bash_history   ",{}]],"17":[["   ",{}],["+",{"fg":2,"bold":true}],["SecondRun(void) ",{}],["|",{"inverse":true}],[" 36 ",{"fg":3,"bold":true}],[":CalendarVR [[year] month]  Show calendar at this year and this month in a                                      ",{}],["|",{"inverse":true}],[" 18 ",{"fg":3,"bold":true}],["  .bash_logout    ",{}]],"18":[["   ",{}],["+",{"fg":2,"bold":true}],["SecondRun2(void)",{}],["|",{"inverse":true}],[" 37 ",{"fg":3,"bold":true}],["                          vertical split at the right site.  When [year] is                                     ",{}],["|",{"inverse":true}],[" 19 ",{"fg":3,"bold":true}],["  .bash_profile   ",{"underline":true}]],"19":[["                    ",{}],["|",{"inverse":true}],[" 38 ",{"fg":3,"bold":true}],["                          omitted, the calendar will show the given month in                                    ",{}],["|",{"inverse":true}],[" 20 ",{"fg":3,"bold":true}],["  .bashrc         ",{}]],"20":[["▼",{"fg":3,"bold":true}],[" ",{}],["functions",{"fg":6,"bold":true}],["         ",{}],["|",{"inverse":true}],[" 39 ",{"fg":3,"bold":true}],["                          the current year.  When both [year] and [month] are                                   ",{}],["|",{"inverse":true}],[" 21 ",{"fg":3,"bold":true}],["  .cshrc          ",{}]],"21":[["    main(int argc, c",{"underline":true}],["|",{"inverse":true}],[" 40 ",{"fg":3,"bold":true}],["                          omitted, the calendar will show the current month.                                    ",{}],["|",{"inverse":true}],[" 22 ",{"fg":3,"bold":true}],["  .dmrc           ",{}]],"22":[["~                   ",{"fg":4,"bold":true}],["|",{"inverse":true}],[" 41 ",{"fg":3,"bold":true}],["                                                                                                                ",{}],["|",{"inverse":true}],[" 23 ",{"fg":3,"bold":true}],["  .esd_auth       ",{}]],"23":[["~                   ",{"fg":4,"bold":true}],["|",{"inverse":true}],[" 42 ",{"fg":3,"bold":true}],["MAPPINGS                                        *calendar-mappings*                                             ",{}],["|",{"inverse":true}],[" 24 ",{"fg":3,"bold":true}],["  .gtkrc-2.0      ",{}]],"24":[["~                   ",{"fg":4,"bold":true}],["|",{"inverse":true}],[" 43 ",{"fg":3,"bold":true}],["                                                                                                                ",{}],["|",{"inverse":true}],[" 25 ",{"fg":3,"bold":true}],["  .gtkrc-2.0-kde4 ",{}]],"25":[["~                   ",{"fg":4,"bold":true}],["|",{"inverse":true}],[" 44 ",{"fg":3,"bold":true}],["calendar.vim makes the following normal mode mappings available:                                                ",{}],["|",{"inverse":true}],[" 26 ",{"fg":3,"bold":true}],["  .lesshst        ",{}]],"26":[["~                   ",{"fg":4,"bold":true}],["|",{"inverse":true}],[" 45 ",{"fg":3,"bold":true}],["                                                                                                                ",{}],["|",{"inverse":true}],[" 27 ",{"fg":3,"bold":true}],["  .tcshrc         ",{}]],"27":[["~                   ",{"fg":4,"bold":true}],["|",{"inverse":true}],[" 46 ",{"fg":3,"bold":true}],["                                                *calendar-cal*                                                  ",{}],["|",{"inverse":true}],[" 28 ",{"fg":3,"bold":true}],["  .viminfo        ",{}]],"28":[["~                   ",{"fg":4,"bold":true}],["|",{"inverse":true}],[" 47 ",{"fg":3,"bold":true}],["<LocalLeader>cal          Brings up the calendar in a vertical split.                                           ",{}],["|",{"inverse":true}],[" 29 ",{"fg":3,"bold":true}],["  .vimrc          ",{}]],"29":[["~                   ",{"fg":4,"bold":true}],["|",{"inverse":true}],[" 48 ",{"fg":3,"bold":true}],["                          Equivalent to calling |:Calendar|.                                                    ",{}],["|",{"inverse":true}],[" 30 ",{"fg":3,"bold":true}],["  .xsession-errors",{}]],"30":[["~                   ",{"fg":4,"bold":true}],["|",{"inverse":true}],[" 49 ",{"fg":3,"bold":true}],["                                                                                                                ",{}],["|",{"inverse":true}],[" 31 ",{"fg":3,"bold":true}],["  anaconda-ks.cfg ",{}]],"31":[["~                   ",{"fg":4,"bold":true}],["|",{"inverse":true}],[" 50 ",{"fg":3,"bold":true}],["                                                *calendar-caL*                                                  ",{}],["|",{"inverse":true}],[" 32 ",{"fg":3,"bold":true}],["  initial-setup-ks",{}]],"32":[["~                   ",{"fg":4,"bold":true}],["|",{"inverse":true}],[" 51 ",{"fg":3,"bold":true}],["<LocalLeader>",{}],["caL ",{"bg":1}],["        ",{}],[" Bri",{"bg":1}],["ngs up the calendar in a horizontal split.                                         ",{}],["|",{"inverse":true}],[" 33 ",{"fg":3,"bold":true}],["  test.c          ",{}]],"33":[["~                   ",{"fg":4,"bold":true}],["|",{"inverse":true}],[" 52 ",{"fg":3,"bold":true}],["                          Equivalent to calling |:CalendarH|.                                                   ",{}],["|",{"inverse":true}],[" 34 ",{"fg":3,"bold":true}],["  test.cpp        ",{}]],"34":[["~                   ",{"fg":4,"bold":true}],["|",{"inverse":true}],[" 53 ",{"fg":3,"bold":true}],["                                                                                                                ",{}],["|",{"inverse":true}],[" 35 ",{"fg":3,"bold":true}],["  .test.cpp.swp   ",{}]],"35":[["~                   ",{"fg":4,"bold":true}],["|",{"inverse":true}],[" 54 ",{"fg":3,"bold":true}],["SETTINGS                                        *calendar-settings*                                             ",{}],["|",{"inverse":true}],["~                     ",{"fg":4,"bold":true}]],"36":[["~                   ",{"fg":4,"bold":true}],["|",{"inverse":true}],[" 55 ",{"fg":3,"bold":true}],["                                                                                                                ",{}],["|",{"inverse":true}],["~                     ",{"fg":4,"bold":true}]],"37":[["~                   ",{"fg":4,"bold":true}],["|",{"inverse":true}],[" 56 ",{"fg":3,"bold":true}],["calendar.vim can be con",{}],["figured using the following sett",{"bg":1}],["ings:                                                    ",{}],["|",{"inverse":true}],["~                     ",{"fg":4,"bold":true}]],"38":[["~                   ",{"fg":4,"bold":true}],["|",{"inverse":true}],[" 57 ",{"fg":3,"bold":true}],["                                                                                                                ",{}],["|",{"inverse":true}],["~                     ",{"fg":4,"bold":true}]],"39":[["~                   ",{"fg":4,"bold":true}],["|",{"inverse":true}],[" 58 ",{"fg":3,"bold":true}],["                                                *g:calendar_focus_today*                                        ",{}],["|",{"inverse":true}],["~                     ",{"fg":4,"bold":true}]],"40":[["~                   ",{"fg":4,"bold":true}],["|",{"inverse":true}],[" 59 ",{"fg":3,"bold":true}],["Keeps focus when moving to next or previous calendar: >                                                         ",{}],["|",{"inverse":true}],["~                     ",{"fg":4,"bold":true}]],"41":[["~                   ",{"fg":4,"bold":true}],["|",{"inverse":true}],[" 60 ",{"fg":3,"bold":true}],["  let g:calendar_focus_today = 1                                                                                ",{}],["|",{"inverse":true}],["~                     ",{"fg":4,"bold":true}]],"42":[["~                   ",{"fg":4,"bold":true}],["|",{"inverse":true}],[" 61 ",{"fg":3,"bold":true}],["<                                                                                                               ",{}],["|",{"inverse":true}],["~                     ",{"fg":4,"bold":true}]],"43":[["~                   ",{"fg":4,"bold":true}],["|",{"inverse":true}],[" 62 ",{"fg":3,"bold":true}],["                                                                                                                ",{}],["|",{"inverse":true}],["~                     ",{"fg":4,"bold":true}]],"44":[["~                   ",{"fg":4,"bold":true}],["|",{"inverse":true}],[" 63 ",{"fg":3,"bold":true}],["                                                ",{"underline":true}],["                                                                ",{}],["|",{"inverse":true}],["~                     ",{"fg":4,"bold":true}]]},"cursor":{"x":73,"y":44,"visible":false}}],[0.018152,{"lines":{"44":[["~                   ",{"fg":4,"bold":true}],["|",{"inverse":true}],[" 63 ",{"fg":3,"bold":true}],["                                                *g:calendar_keys*                                               ",{}],["|",{"inverse":true}],["~                     ",{"fg":4,"bold":true}]],"45":[["~                   ",{"fg":4,"bold":true}],["|",{"inverse":true}],[" 64 ",{"fg":3,"bold":true}],["To change the key bindings in the calendar window, add entries to this                                          ",{"underline":true}],["|",{"inverse":true}],["~                     ",{"fg":4,"bold":true}]],"46":[["[Name] test.cpp      ",{"inverse":true}],[" NORMAL ",{"bold":true}],[" ",{}],["calendar.txt ",{"bold":true}],["                                                        unix │ utf-8 │ text │  29% ",{}],[" LN  64",{"bold":true}],[":1  ",{}],[" ",{"bold":true,"inverse":true}],[" ~/…/calendar-vim/doc>",{"bold":true}]]},"cursor":{"x":25,"y":45,"visible":true}}],[0.005171,{"lines":{"0":[["\" Press <F1> for hel",{"fg":6,"bold":true}],["|",{"inverse":true}],[" 20 ",{"fg":3,"bold":true}],["                                                                                                                ",{}],["|",{"inverse":true}],["  1 ",{"fg":3,"bold":true}],["\" Press ? for help",{"fg":5,"bold":true}]],"1":[["                    ",{}],["|",{"inverse":true}],[" 21 ",{"fg":3,"bold":true}],["                                                *calendar-:CalendarH*                                           ",{}],["|",{"inverse":true}],["  2 ",{"fg":3,"bold":true}],["                  ",{}]],"2":[["▼",{"fg":3,"bold":true}],[" First",{"fg":5,"bold":true}],[" : ",{}],["struct",{"fg":2,"bold":true}],["    ",{}],["|",{"inverse":true}],[" 22 ",{"fg":3,"bold":true}],[":CalendarH [[year] month] Show calendar at this year and this month in a                                        ",{}],["|",{"inverse":true}],["  3 ",{"fg":3,"bold":true}],[".. (up a dir)",{"fg":6,"bold":true}],["     ",{}]],"3":[["    [prototypes]",{"fg":6,"bold":true}],["    ",{}],["|",{"inverse":true}],[" 23 ",{"fg":3,"bold":true}],["                          horizontal split.  When [year] is omitted, the                                        ",{}],["|",{"inverse":true}],["  4 /root/",{"fg":3,"bold":true}],["            ",{}]],"4":[["   ",{}],["+",{"fg":2,"bold":true}],["FirstRun(void)  ",{}],["|",{"inverse":true}],[" 24 ",{"fg":3,"bold":true}],["                          calendar will show the given month in the current                                     ",{}],["|",{"inverse":true}],["  5 ",{"fg":3,"bold":true}],["▸ .asciinema/",{"fg":6,"bold":true}],["     ",{}]],"5":[["   ",{}],["+",{"fg":2,"bold":true}],["FirstRun2(void) ",{}],["|",{"inverse":true}],[" 25 ",{"fg":3,"bold":true}],["                          year.  When both [year] and [month] are omitted, the                                  ",{}],["|",{"inverse":true}],["  6 ",{"fg":3,"bold":true}],["▸ .cache/",{"fg":6,"bold":true}],["         ",{}]],"6":[["                    ",{}],["|",{"inverse":true}],[" 26 ",{"fg":3,"bold":true}],["                          calendar will show the current month.                                                 ",{}],["|",{"inverse":true}],["  7 ",{"fg":3,"bold":true}],["▸ .config/",{"fg":6,"bold":true}],["        ",{}]],"7":[["▼",{"fg":3,"bold":true}],[" Last",{"fg":5,"bold":true}],[" : ",{}],["struct",{"fg":2,"bold":true}],["     ",{}],["|",{"inverse":true}],[" 27 ",{"fg":3,"bold":true}],["                                                                                                                ",{}],["|",{"inverse":true}],["  8 ",{"fg":3,"bold":true}],["▸ .dbus/",{"fg":6,"bold":true}],["          ",{}]],"8":[["    [functions]",{"fg":6,"bold":true}],["     ",{}],["|",{"inverse":true}],[" 28 ",{"fg":3,"bold":true}],["                                                *calendar-:CalendarT*                                           ",{}],["|",{"inverse":true}],["  9 ",{"fg":3,"bold":true}],["▸ .gnupg/",{"fg":6,"bold":true}],["         ",{}]],"9":[["   ",{}],["+",{"fg":2,"bold":true}],["FirstRun(void)  ",{}],["|",{"inverse":true}],[" 29 ",{"fg":3,"bold":true}],[":CalendarT [[year] month] Show calendar at this year and this month in a                                        ",{}],["|",{"inverse":true}],[" 10 ",{"fg":3,"bold":true}],["▸ .kde/",{"fg":6,"bold":true}],["           ",{}]],"10":[["   ",{}],["+",{"fg":2,"bold":true}],["FirstRun2(void) ",{}],["|",{"inverse":true}],[" 30 ",{"fg":3,"bold":true}],["                          full-screen window.  When [year] is omitted, the                                      ",{}],["|",{"inverse":true}],[" 11 ",{"fg":3,"bold":true}],["▸ .local/",{"fg":6,"bold":true}],["         ",{}]],"11":[["   ",{}],["+",{"fg":2,"bold":true}],["~Last()         ",{}],["|",{"inverse":true}],[" 31 ",{"fg":3,"bold":true}],["                          calendar will show the given month in the current                                     ",{}],["|",{"inverse":true}],[" 12 ",{"fg":3,"bold":true}],["▸ .pki/",{"fg":6,"bold":true}],["           ",{}]],"12":[["   ",{}],["+",{"fg":2,"bold":true}],["SecondRun(void) ",{}],["|",{"inverse":true}],[" 32 ",{"fg":3,"bold":true}],["                          year.  When both [year] and [month] are omitted, the                                  ",{}],["|",{"inverse":true}],[" 13 ",{"fg":3,"bold":true}],["▸ .ssh/",{"fg":6,"bold":true}],["           ",{}]],"13":[["   ",{}],["+",{"fg":2,"bold":true}],["SecondRun2(void)",{}],["|",{"inverse":true}],[" 33 ",{"fg":3,"bold":true}],["                          calendar will show the current month.                                                 ",{}],["|",{"inverse":true}],[" 14 ",{"fg":3,"bold":true}],["▸ .vim/",{"fg":6,"bold":true}],["           ",{}]],"14":[["                    ",{}],["|",{"inverse":true}],[" 34 ",{"fg":3,"bold":true}],["                                                                                                                ",{}],["|",{"inverse":true}],[" 15 ",{"fg":3,"bold":true}],["▸ diary/",{"fg":6,"bold":true}],["          ",{}]],"15":[["▼",{"fg":3,"bold":true}],[" Second",{"fg":5,"bold":true}],[" : ",{}],["struct",{"fg":2,"bold":true}],["   ",{}],["|",{"inverse":true}],[" 35 ",{"fg":3,"bold":true}],["                                                *calendar-:CalendarVR*                                          ",{}],["|",{"inverse":true}],[" 16 ",{"fg":3,"bold":true}],["▸ temp/",{"fg":6,"bold":true}],["           ",{}]],"16":[["    [prototypes]",{"fg":6,"bold":true}],["    ",{}],["|",{"inverse":true}],[" 36 ",{"fg":3,"bold":true}],[":CalendarVR [[year] month]  Show calendar at this year and this month in a                                      ",{}],["|",{"inverse":true}],[" 17 ",{"fg":3,"bold":true}],["  .bash_history   ",{}]],"17":[["   ",{}],["+",{"fg":2,"bold":true}],["SecondRun(void) ",{}],["|",{"inverse":true}],[" 37 ",{"fg":3,"bold":true}],["                          vertical split at the right site.  When [year] is                                     ",{}],["|",{"inverse":true}],[" 18 ",{"fg":3,"bold":true}],["  .bash_logout    ",{}]],"18":[["   ",{}],["+",{"fg":2,"bold":true}],["SecondRun2(void)",{}],["|",{"inverse":true}],[" 38 ",{"fg":3,"bold":true}],["                          omitted, the calendar will show the given month in                                    ",{}],["|",{"inverse":true}],[" 19 ",{"fg":3,"bold":true}],["  .bash_profile   ",{"underline":true}]],"19":[["                    ",{}],["|",{"inverse":true}],[" 39 ",{"fg":3,"bold":true}],["                          the current year.  When both [year] and [month] are                                   ",{}],["|",{"inverse":true}],[" 20 ",{"fg":3,"bold":true}],["  .bashrc         ",{}]],"20":[["▼",{"fg":3,"bold":true}],[" ",{}],["functions",{"fg":6,"bold":true}],["         ",{}],["|",{"inverse":true}],[" 40 ",{"fg":3,"bold":true}],["                          omitted, the calendar will show the current month.                                    ",{}],["|",{"inverse":true}],[" 21 ",{"fg":3,"bold":true}],["  .cshrc          ",{}]],"21":[["    main(int argc, c",{"underline":true}],["|",{"inverse":true}],[" 41 ",{"fg":3,"bold":true}],["                                                                                                                ",{}],["|",{"inverse":true}],[" 22 ",{"fg":3,"bold":true}],["  .dmrc           ",{}]],"22":[["~                   ",{"fg":4,"bold":true}],["|",{"inverse":true}],[" 42 ",{"fg":3,"bold":true}],["MAPPINGS                                        *calendar-mappings*                                             ",{}],["|",{"inverse":true}],[" 23 ",{"fg":3,"bold":true}],["  .esd_auth       ",{}]],"23":[["~                   ",{"fg":4,"bold":true}],["|",{"inverse":true}],[" 43 ",{"fg":3,"bold":true}],["                                                                                                                ",{}],["|",{"inverse":true}],[" 24 ",{"fg":3,"bold":true}],["  .gtkrc-2.0      ",{}]],"24":[["~                   ",{"fg":4,"bold":true}],["|",{"inverse":true}],[" 44 ",{"fg":3,"bold":true}],["calendar.vim makes the following normal mode mappings available:                                                ",{}],["|",{"inverse":true}],[" 25 ",{"fg":3,"bold":true}],["  .gtkrc-2.0-kde4 ",{}]],"25":[["~                   ",{"fg":4,"bold":true}],["|",{"inverse":true}],[" 45 ",{"fg":3,"bold":true}],["                                                                                                                ",{}],["|",{"inverse":true}],[" 26 ",{"fg":3,"bold":true}],["  .lesshst        ",{}]],"26":[["~                   ",{"fg":4,"bold":true}],["|",{"inverse":true}],[" 46 ",{"fg":3,"bold":true}],["                                                *calendar-cal*                                                  ",{}],["|",{"inverse":true}],[" 27 ",{"fg":3,"bold":true}],["  .tcshrc         ",{}]],"27":[["~                   ",{"fg":4,"bold":true}],["|",{"inverse":true}],[" 47 ",{"fg":3,"bold":true}],["<LocalLeader>cal          Brings up the calendar in a vertical split.                                           ",{}],["|",{"inverse":true}],[" 28 ",{"fg":3,"bold":true}],["  .viminfo        ",{}]],"28":[["~                   ",{"fg":4,"bold":true}],["|",{"inverse":true}],[" 48 ",{"fg":3,"bold":true}],["                          Equivalent to calling |:Calendar|.                                                    ",{}],["|",{"inverse":true}],[" 29 ",{"fg":3,"bold":true}],["  .vimrc          ",{}]],"29":[["~                   ",{"fg":4,"bold":true}],["|",{"inverse":true}],[" 49 ",{"fg":3,"bold":true}],["                                                                                                                ",{}],["|",{"inverse":true}],[" 30 ",{"fg":3,"bold":true}],["  .xsession-errors",{}]],"30":[["~                   ",{"fg":4,"bold":true}],["|",{"inverse":true}],[" 50 ",{"fg":3,"bold":true}],["                                                *calendar-caL*                                                  ",{}],["|",{"inverse":true}],[" 31 ",{"fg":3,"bold":true}],["  anaconda-ks.cfg ",{}]],"31":[["~                   ",{"fg":4,"bold":true}],["|",{"inverse":true}],[" 51 ",{"fg":3,"bold":true}],["<LocalLeader>",{}],["caL ",{"bg":1}],["        ",{}],[" Bri",{"bg":1}],["ngs up the calendar in a horizontal split.                                         ",{}],["|",{"inverse":true}],[" 32 ",{"fg":3,"bold":true}],["  initial-setup-ks",{}]],"32":[["~                   ",{"fg":4,"bold":true}],["|",{"inverse":true}],[" 52 ",{"fg":3,"bold":true}],["                          Equivalent to calling |:CalendarH|.                                                   ",{}],["|",{"inverse":true}],[" 33 ",{"fg":3,"bold":true}],["  test.c          ",{}]],"33":[["~                   ",{"fg":4,"bold":true}],["|",{"inverse":true}],[" 53 ",{"fg":3,"bold":true}],["                                                                                                                ",{}],["|",{"inverse":true}],[" 34 ",{"fg":3,"bold":true}],["  test.cpp        ",{}]],"34":[["~                   ",{"fg":4,"bold":true}],["|",{"inverse":true}],[" 54 ",{"fg":3,"bold":true}],["SETTINGS                                        *calendar-settings*                                             ",{}],["|",{"inverse":true}],[" 35 ",{"fg":3,"bold":true}],["  .test.cpp.swp   ",{}]],"35":[["~                   ",{"fg":4,"bold":true}],["|",{"inverse":true}],[" 55 ",{"fg":3,"bold":true}],["                                                                                                                ",{}],["|",{"inverse":true}],["~                     ",{"fg":4,"bold":true}]],"36":[["~                   ",{"fg":4,"bold":true}],["|",{"inverse":true}],[" 56 ",{"fg":3,"bold":true}],["calendar.vim can be con",{}],["figured using the following sett",{"bg":1}],["ings:                                                    ",{}],["|",{"inverse":true}],["~                     ",{"fg":4,"bold":true}]],"37":[["~                   ",{"fg":4,"bold":true}],["|",{"inverse":true}],[" 57 ",{"fg":3,"bold":true}],["                                                                                                                ",{}],["|",{"inverse":true}],["~                     ",{"fg":4,"bold":true}]],"38":[["~                   ",{"fg":4,"bold":true}],["|",{"inverse":true}],[" 58 ",{"fg":3,"bold":true}],["                                                *g:calendar_focus_today*                                        ",{}],["|",{"inverse":true}],["~                     ",{"fg":4,"bold":true}]],"39":[["~                   ",{"fg":4,"bold":true}],["|",{"inverse":true}],[" 59 ",{"fg":3,"bold":true}],["Keeps focus when moving to next or previous calendar: >                                                         ",{}],["|",{"inverse":true}],["~                     ",{"fg":4,"bold":true}]],"40":[["~                   ",{"fg":4,"bold":true}],["|",{"inverse":true}],[" 60 ",{"fg":3,"bold":true}],["  let g:calendar_focus_today = 1                                                                                ",{}],["|",{"inverse":true}],["~                     ",{"fg":4,"bold":true}]],"41":[["~                   ",{"fg":4,"bold":true}],["|",{"inverse":true}],[" 61 ",{"fg":3,"bold":true}],["<                                                                                                               ",{}],["|",{"inverse":true}],["~                     ",{"fg":4,"bold":true}]],"42":[["~                   ",{"fg":4,"bold":true}],["|",{"inverse":true}],[" 62 ",{"fg":3,"bold":true}],["                                                                                                                ",{}],["|",{"inverse":true}],["~                     ",{"fg":4,"bold":true}]],"43":[["~                   ",{"fg":4,"bold":true}],["|",{"inverse":true}],[" 63 ",{"fg":3,"bold":true}],["                                                *g:calendar_keys*                                               ",{}],["|",{"inverse":true}],["~                     ",{"fg":4,"bold":true}]],"44":[["~                   ",{"fg":4,"bold":true}],["|",{"inverse":true}],[" 64 ",{"fg":3,"bold":true}],["To change the key bindings in the calendar windo",{"underline":true}],["*g:calendar_keys*                                               ",{}],["|",{"inverse":true}],["~                     ",{"fg":4,"bold":true}]]},"cursor":{"x":73,"y":44,"visible":false}}],[0.0378,{"lines":{"44":[["~                   ",{"fg":4,"bold":true}],["|",{"inverse":true}],[" 64 ",{"fg":3,"bold":true}],["To change the key bindings in the calendar window, add entries to this                                          ",{}],["|",{"inverse":true}],["~                     ",{"fg":4,"bold":true}]],"45":[["~                   ",{"fg":4,"bold":true}],["|",{"inverse":true}],[" 65 ",{"fg":3,"bold":true}],["dictionary.   Possible keys, the action bound to the keycode given in the                                       ",{"underline":true}],["|",{"inverse":true}],["~                     ",{"fg":4,"bold":true}]],"46":[["[Name] test.cpp      ",{"inverse":true}],[" NORMAL ",{"bold":true}],[" ",{}],["calendar.txt ",{"bold":true}],["                                                        unix │ utf-8 │ text │  29% ",{}],[" LN  65",{"bold":true}],[":1  ",{}],[" ",{"bold":true,"inverse":true}],[" ~/…/calendar-vim/doc>",{"bold":true}]]},"cursor":{"x":25,"y":45,"visible":true}}],[0.005933,{"lines":{"0":[["\" Press <F1> for hel",{"fg":6,"bold":true}],["|",{"inverse":true}],[" 21 ",{"fg":3,"bold":true}],["                                                *calendar-:CalendarH*                                           ",{}],["|",{"inverse":true}],["  1 ",{"fg":3,"bold":true}],["\" Press ? for help",{"fg":5,"bold":true}]],"1":[["                    ",{}],["|",{"inverse":true}],[" 22 ",{"fg":3,"bold":true}],[":CalendarH [[year] month] Show calendar at this year and this month in a                                        ",{}],["|",{"inverse":true}],["  2 ",{"fg":3,"bold":true}],["                  ",{}]],"2":[["▼",{"fg":3,"bold":true}],[" First",{"fg":5,"bold":true}],[" : ",{}],["struct",{"fg":2,"bold":true}],["    ",{}],["|",{"inverse":true}],[" 23 ",{"fg":3,"bold":true}],["                          horizontal split.  When [year] is omitted, the                                        ",{}],["|",{"inverse":true}],["  3 ",{"fg":3,"bold":true}],[".. (up a dir)",{"fg":6,"bold":true}],["     ",{}]],"3":[["    [prototypes]",{"fg":6,"bold":true}],["    ",{}],["|",{"inverse":true}],[" 24 ",{"fg":3,"bold":true}],["                          calendar will show the given month in the current                                     ",{}],["|",{"inverse":true}],["  4 /root/",{"fg":3,"bold":true}],["            ",{}]],"4":[["   ",{}],["+",{"fg":2,"bold":true}],["FirstRun(void)  ",{}],["|",{"inverse":true}],[" 25 ",{"fg":3,"bold":true}],["                          year.  When both [year] and [month] are omitted, the                                  ",{}],["|",{"inverse":true}],["  5 ",{"fg":3,"bold":true}],["▸ .asciinema/",{"fg":6,"bold":true}],["     ",{}]],"5":[["   ",{}],["+",{"fg":2,"bold":true}],["FirstRun2(void) ",{}],["|",{"inverse":true}],[" 26 ",{"fg":3,"bold":true}],["                          calendar will show the current month.                                                 ",{}],["|",{"inverse":true}],["  6 ",{"fg":3,"bold":true}],["▸ .cache/",{"fg":6,"bold":true}],["         ",{}]],"6":[["                    ",{}],["|",{"inverse":true}],[" 27 ",{"fg":3,"bold":true}],["                                                                                                                ",{}],["|",{"inverse":true}],["  7 ",{"fg":3,"bold":true}],["▸ .config/",{"fg":6,"bold":true}],["        ",{}]],"7":[["▼",{"fg":3,"bold":true}],[" Last",{"fg":5,"bold":true}],[" : ",{}],["struct",{"fg":2,"bold":true}],["     ",{}],["|",{"inverse":true}],[" 28 ",{"fg":3,"bold":true}],["                                                *calendar-:CalendarT*                                           ",{}],["|",{"inverse":true}],["  8 ",{"fg":3,"bold":true}],["▸ .dbus/",{"fg":6,"bold":true}],["          ",{}]],"8":[["    [functions]",{"fg":6,"bold":true}],["     ",{}],["|",{"inverse":true}],[" 29 ",{"fg":3,"bold":true}],[":CalendarT [[year] month] Show calendar at this year and this month in a                                        ",{}],["|",{"inverse":true}],["  9 ",{"fg":3,"bold":true}],["▸ .gnupg/",{"fg":6,"bold":true}],["         ",{}]],"9":[["   ",{}],["+",{"fg":2,"bold":true}],["FirstRun(void)  ",{}],["|",{"inverse":true}],[" 30 ",{"fg":3,"bold":true}],["                          full-screen window.  When [year] is omitted, the                                      ",{}],["|",{"inverse":true}],[" 10 ",{"fg":3,"bold":true}],["▸ .kde/",{"fg":6,"bold":true}],["           ",{}]],"10":[["   ",{}],["+",{"fg":2,"bold":true}],["FirstRun2(void) ",{}],["|",{"inverse":true}],[" 31 ",{"fg":3,"bold":true}],["                          calendar will show the given month in the current                                     ",{}],["|",{"inverse":true}],[" 11 ",{"fg":3,"bold":true}],["▸ .local/",{"fg":6,"bold":true}],["         ",{}]],"11":[["   ",{}],["+",{"fg":2,"bold":true}],["~Last()         ",{}],["|",{"inverse":true}],[" 32 ",{"fg":3,"bold":true}],["                          year.  When both [year] and [month] are omitted, the                                  ",{}],["|",{"inverse":true}],[" 12 ",{"fg":3,"bold":true}],["▸ .pki/",{"fg":6,"bold":true}],["           ",{}]],"12":[["   ",{}],["+",{"fg":2,"bold":true}],["SecondRun(void) ",{}],["|",{"inverse":true}],[" 33 ",{"fg":3,"bold":true}],["                          calendar will show the current month.                                                 ",{}],["|",{"inverse":true}],[" 13 ",{"fg":3,"bold":true}],["▸ .ssh/",{"fg":6,"bold":true}],["           ",{}]],"13":[["   ",{}],["+",{"fg":2,"bold":true}],["SecondRun2(void)",{}],["|",{"inverse":true}],[" 34 ",{"fg":3,"bold":true}],["                                                                                                                ",{}],["|",{"inverse":true}],[" 14 ",{"fg":3,"bold":true}],["▸ .vim/",{"fg":6,"bold":true}],["           ",{}]],"14":[["                    ",{}],["|",{"inverse":true}],[" 35 ",{"fg":3,"bold":true}],["                                                *calendar-:CalendarVR*                                          ",{}],["|",{"inverse":true}],[" 15 ",{"fg":3,"bold":true}],["▸ diary/",{"fg":6,"bold":true}],["          ",{}]],"15":[["▼",{"fg":3,"bold":true}],[" Second",{"fg":5,"bold":true}],[" : ",{}],["struct",{"fg":2,"bold":true}],["   ",{}],["|",{"inverse":true}],[" 36 ",{"fg":3,"bold":true}],[":CalendarVR [[year] month]  Show calendar at this year and this month in a                                      ",{}],["|",{"inverse":true}],[" 16 ",{"fg":3,"bold":true}],["▸ temp/",{"fg":6,"bold":true}],["           ",{}]],"16":[["    [prototypes]",{"fg":6,"bold":true}],["    ",{}],["|",{"inverse":true}],[" 37 ",{"fg":3,"bold":true}],["                          vertical split at the right site.  When [year] is                                     ",{}],["|",{"inverse":true}],[" 17 ",{"fg":3,"bold":true}],["  .bash_history   ",{}]],"17":[["   ",{}],["+",{"fg":2,"bold":true}],["SecondRun(void) ",{}],["|",{"inverse":true}],[" 38 ",{"fg":3,"bold":true}],["                          omitted, the calendar will show the given month in                                    ",{}],["|",{"inverse":true}],[" 18 ",{"fg":3,"bold":true}],["  .bash_logout    ",{}]],"18":[["   ",{}],["+",{"fg":2,"bold":true}],["SecondRun2(void)",{}],["|",{"inverse":true}],[" 39 ",{"fg":3,"bold":true}],["                          the current year.  When both [year] and [month] are                                   ",{}],["|",{"inverse":true}],[" 19 ",{"fg":3,"bold":true}],["  .bash_profile   ",{"underline":true}]],"19":[["                    ",{}],["|",{"inverse":true}],[" 40 ",{"fg":3,"bold":true}],["                          omitted, the calendar will show the current month.                                    ",{}],["|",{"inverse":true}],[" 20 ",{"fg":3,"bold":true}],["  .bashrc         ",{}]],"20":[["▼",{"fg":3,"bold":true}],[" ",{}],["functions",{"fg":6,"bold":true}],["         ",{}],["|",{"inverse":true}],[" 41 ",{"fg":3,"bold":true}],["                                                                                                                ",{}],["|",{"inverse":true}],[" 21 ",{"fg":3,"bold":true}],["  .cshrc          ",{}]],"21":[["    main(int argc, c",{"underline":true}],["|",{"inverse":true}],[" 42 ",{"fg":3,"bold":true}],["MAPPINGS                                        *calendar-mappings*                                             ",{}],["|",{"inverse":true}],[" 22 ",{"fg":3,"bold":true}],["  .dmrc           ",{}]],"22":[["~                   ",{"fg":4,"bold":true}],["|",{"inverse":true}],[" 43 ",{"fg":3,"bold":true}],["                                                                                                                ",{}],["|",{"inverse":true}],[" 23 ",{"fg":3,"bold":true}],["  .esd_auth       ",{}]],"23":[["~                   ",{"fg":4,"bold":true}],["|",{"inverse":true}],[" 44 ",{"fg":3,"bold":true}],["calendar.vim makes the following normal mode mappings available:                                                ",{}],["|",{"inverse":true}],[" 24 ",{"fg":3,"bold":true}],["  .gtkrc-2.0      ",{}]],"24":[["~                   ",{"fg":4,"bold":true}],["|",{"inverse":true}],[" 45 ",{"fg":3,"bold":true}],["                                                                                                                ",{}],["|",{"inverse":true}],[" 25 ",{"fg":3,"bold":true}],["  .gtkrc-2.0-kde4 ",{}]],"25":[["~                   ",{"fg":4,"bold":true}],["|",{"inverse":true}],[" 46 ",{"fg":3,"bold":true}],["                                                *calendar-cal*                                                  ",{}],["|",{"inverse":true}],[" 26 ",{"fg":3,"bold":true}],["  .lesshst        ",{}]],"26":[["~                   ",{"fg":4,"bold":true}],["|",{"inverse":true}],[" 47 ",{"fg":3,"bold":true}],["<LocalLeader>cal          Brings up the calendar in a vertical split.                                           ",{}],["|",{"inverse":true}],[" 27 ",{"fg":3,"bold":true}],["  .tcshrc         ",{}]],"27":[["~                   ",{"fg":4,"bold":true}],["|",{"inverse":true}],[" 48 ",{"fg":3,"bold":true}],["                          Equivalent to calling |:Calendar|.                                                    ",{}],["|",{"inverse":true}],[" 28 ",{"fg":3,"bold":true}],["  .viminfo        ",{}]],"28":[["~                   ",{"fg":4,"bold":true}],["|",{"inverse":true}],[" 49 ",{"fg":3,"bold":true}],["                                                                                                                ",{}],["|",{"inverse":true}],[" 29 ",{"fg":3,"bold":true}],["  .vimrc          ",{}]],"29":[["~                   ",{"fg":4,"bold":true}],["|",{"inverse":true}],[" 50 ",{"fg":3,"bold":true}],["                                                *calendar-caL*                                                  ",{}],["|",{"inverse":true}],[" 30 ",{"fg":3,"bold":true}],["  .xsession-errors",{}]],"30":[["~                   ",{"fg":4,"bold":true}],["|",{"inverse":true}],[" 51 ",{"fg":3,"bold":true}],["<LocalLeader>",{}],["caL ",{"bg":1}],["        ",{}],[" Bri",{"bg":1}],["ngs up the calendar in a horizontal split.                                         ",{}],["|",{"inverse":true}],[" 31 ",{"fg":3,"bold":true}],["  anaconda-ks.cfg ",{}]],"31":[["~                   ",{"fg":4,"bold":true}],["|",{"inverse":true}],[" 52 ",{"fg":3,"bold":true}],["                          Equivalent to calling |:CalendarH|.                                                   ",{}],["|",{"inverse":true}],[" 32 ",{"fg":3,"bold":true}],["  initial-setup-ks",{}]],"32":[["~                   ",{"fg":4,"bold":true}],["|",{"inverse":true}],[" 53 ",{"fg":3,"bold":true}],["                                                                                                                ",{}],["|",{"inverse":true}],[" 33 ",{"fg":3,"bold":true}],["  test.c          ",{}]],"33":[["~                   ",{"fg":4,"bold":true}],["|",{"inverse":true}],[" 54 ",{"fg":3,"bold":true}],["SETTINGS                                        *calendar-settings*                                             ",{}],["|",{"inverse":true}],[" 34 ",{"fg":3,"bold":true}],["  test.cpp        ",{}]],"34":[["~                   ",{"fg":4,"bold":true}],["|",{"inverse":true}],[" 55 ",{"fg":3,"bold":true}],["                                                                                                                ",{}],["|",{"inverse":true}],[" 35 ",{"fg":3,"bold":true}],["  .test.cpp.swp   ",{}]],"35":[["~                   ",{"fg":4,"bold":true}],["|",{"inverse":true}],[" 56 ",{"fg":3,"bold":true}],["calendar.vim can be con",{}],["figured using the following sett",{"bg":1}],["ings:                                                    ",{}],["|",{"inverse":true}],["~                     ",{"fg":4,"bold":true}]],"36":[["~                   ",{"fg":4,"bold":true}],["|",{"inverse":true}],[" 57 ",{"fg":3,"bold":true}],["                                                                                                                ",{}],["|",{"inverse":true}],["~                     ",{"fg":4,"bold":true}]],"37":[["~                   ",{"fg":4,"bold":true}],["|",{"inverse":true}],[" 58 ",{"fg":3,"bold":true}],["                                                *g:calendar_focus_today*                                        ",{}],["|",{"inverse":true}],["~                     ",{"fg":4,"bold":true}]],"38":[["~                   ",{"fg":4,"bold":true}],["|",{"inverse":true}],[" 59 ",{"fg":3,"bold":true}],["Keeps focus when moving to next or previous calendar: >                                                         ",{}],["|",{"inverse":true}],["~                     ",{"fg":4,"bold":true}]],"39":[["~                   ",{"fg":4,"bold":true}],["|",{"inverse":true}],[" 60 ",{"fg":3,"bold":true}],["  let g:calendar_focus_today = 1                                                                                ",{}],["|",{"inverse":true}],["~                     ",{"fg":4,"bold":true}]],"40":[["~                   ",{"fg":4,"bold":true}],["|",{"inverse":true}],[" 61 ",{"fg":3,"bold":true}],["<                                                                                                               ",{}],["|",{"inverse":true}],["~                     ",{"fg":4,"bold":true}]],"41":[["~                   ",{"fg":4,"bold":true}],["|",{"inverse":true}],[" 62 ",{"fg":3,"bold":true}],["                                                                                                                ",{}],["|",{"inverse":true}],["~                     ",{"fg":4,"bold":true}]],"42":[["~                   ",{"fg":4,"bold":true}],["|",{"inverse":true}],[" 63 ",{"fg":3,"bold":true}],["                                                *g:calendar_keys*                                               ",{}],["|",{"inverse":true}],["~                     ",{"fg":4,"bold":true}]],"43":[["~                   ",{"fg":4,"bold":true}],["|",{"inverse":true}],[" 64 ",{"fg":3,"bold":true}],["To change the key bindings in the calendar window, add entries to this                                          ",{}],["|",{"inverse":true}],["~                     ",{"fg":4,"bold":true}]],"44":[["~                   ",{"fg":4,"bold":true}],["|",{"inverse":true}],[" 65 ",{"fg":3,"bold":true}],["dictionary.   Possible keys, the action bound to",{"underline":true}],["w, add entries to this                                          ",{}],["|",{"inverse":true}],["~                     ",{"fg":4,"bold":true}]]},"cursor":{"x":73,"y":44,"visible":false}}],[0.02015,{"lines":{"44":[["~                   ",{"fg":4,"bold":true}],["|",{"inverse":true}],[" 65 ",{"fg":3,"bold":true}],["dictionary.   Possible keys, the action bound to the keycode given in the                                       ",{}],["|",{"inverse":true}],["~                     ",{"fg":4,"bold":true}]],"45":[["~                   ",{"fg":4,"bold":true}],["|",{"inverse":true}],[" 66 ",{"fg":3,"bold":true}],["respective value for this key and the default binding are listed below.                                         ",{"underline":true}],["|",{"inverse":true}],["~                     ",{"fg":4,"bold":true}]],"46":[["[Name] test.cpp      ",{"inverse":true}],[" NORMAL ",{"bold":true}],[" ",{}],["calendar.txt ",{"bold":true}],["                                                        unix │ utf-8 │ text │  30% ",{}],[" LN  66",{"bold":true}],[":1  ",{}],[" ",{"bold":true,"inverse":true}],[" ~/…/calendar-vim/doc>",{"bold":true}]]},"cursor":{"x":25,"y":45,"visible":true}}],[0.004212,{"lines":{"0":[["\" Press <F1> for hel",{"fg":6,"bold":true}],["|",{"inverse":true}],[" 22 ",{"fg":3,"bold":true}],[":CalendarH [[year] month] Show calendar at this year and this month in a                                        ",{}],["|",{"inverse":true}],["  1 ",{"fg":3,"bold":true}],["\" Press ? for help",{"fg":5,"bold":true}]],"1":[["                    ",{}],["|",{"inverse":true}],[" 23 ",{"fg":3,"bold":true}],["                          horizontal split.  When [year] is omitted, the                                        ",{}],["|",{"inverse":true}],["  2 ",{"fg":3,"bold":true}],["                  ",{}]],"2":[["▼",{"fg":3,"bold":true}],[" First",{"fg":5,"bold":true}],[" : ",{}],["struct",{"fg":2,"bold":true}],["    ",{}],["|",{"inverse":true}],[" 24 ",{"fg":3,"bold":true}],["                          calendar will show the given month in the current                                     ",{}],["|",{"inverse":true}],["  3 ",{"fg":3,"bold":true}],[".. (up a dir)",{"fg":6,"bold":true}],["     ",{}]],"3":[["    [prototypes]",{"fg":6,"bold":true}],["    ",{}],["|",{"inverse":true}],[" 25 ",{"fg":3,"bold":true}],["                          year.  When both [year] and [month] are omitted, the                                  ",{}],["|",{"inverse":true}],["  4 /root/",{"fg":3,"bold":true}],["            ",{}]],"4":[["   ",{}],["+",{"fg":2,"bold":true}],["FirstRun(void)  ",{}],["|",{"inverse":true}],[" 26 ",{"fg":3,"bold":true}],["                          calendar will show the current month.                                                 ",{}],["|",{"inverse":true}],["  5 ",{"fg":3,"bold":true}],["▸ .asciinema/",{"fg":6,"bold":true}],["     ",{}]],"5":[["   ",{}],["+",{"fg":2,"bold":true}],["FirstRun2(void) ",{}],["|",{"inverse":true}],[" 27 ",{"fg":3,"bold":true}],["                                                                                                                ",{}],["|",{"inverse":true}],["  6 ",{"fg":3,"bold":true}],["▸ .cache/",{"fg":6,"bold":true}],["         ",{}]],"6":[["                    ",{}],["|",{"inverse":true}],[" 28 ",{"fg":3,"bold":true}],["                                                *calendar-:CalendarT*                                           ",{}],["|",{"inverse":true}],["  7 ",{"fg":3,"bold":true}],["▸ .config/",{"fg":6,"bold":true}],["        ",{}]],"7":[["▼",{"fg":3,"bold":true}],[" Last",{"fg":5,"bold":true}],[" : ",{}],["struct",{"fg":2,"bold":true}],["     ",{}],["|",{"inverse":true}],[" 29 ",{"fg":3,"bold":true}],[":CalendarT [[year] month] Show calendar at this year and this month in a                                        ",{}],["|",{"inverse":true}],["  8 ",{"fg":3,"bold":true}],["▸ .dbus/",{"fg":6,"bold":true}],["          ",{}]],"8":[["    [functions]",{"fg":6,"bold":true}],["     ",{}],["|",{"inverse":true}],[" 30 ",{"fg":3,"bold":true}],["                          full-screen window.  When [year] is omitted, the                                      ",{}],["|",{"inverse":true}],["  9 ",{"fg":3,"bold":true}],["▸ .gnupg/",{"fg":6,"bold":true}],["         ",{}]],"9":[["   ",{}],["+",{"fg":2,"bold":true}],["FirstRun(void)  ",{}],["|",{"inverse":true}],[" 31 ",{"fg":3,"bold":true}],["                          calendar will show the given month in the current                                     ",{}],["|",{"inverse":true}],[" 10 ",{"fg":3,"bold":true}],["▸ .kde/",{"fg":6,"bold":true}],["           ",{}]],"10":[["   ",{}],["+",{"fg":2,"bold":true}],["FirstRun2(void) ",{}],["|",{"inverse":true}],[" 32 ",{"fg":3,"bold":true}],["                          year.  When both [year] and [month] are omitted, the                                  ",{}],["|",{"inverse":true}],[" 11 ",{"fg":3,"bold":true}],["▸ .local/",{"fg":6,"bold":true}],["         ",{}]],"11":[["   ",{}],["+",{"fg":2,"bold":true}],["~Last()         ",{}],["|",{"inverse":true}],[" 33 ",{"fg":3,"bold":true}],["                          calendar will show the current month.                                                 ",{}],["|",{"inverse":true}],[" 12 ",{"fg":3,"bold":true}],["▸ .pki/",{"fg":6,"bold":true}],["           ",{}]],"12":[["   ",{}],["+",{"fg":2,"bold":true}],["SecondRun(void) ",{}],["|",{"inverse":true}],[" 34 ",{"fg":3,"bold":true}],["                                                                                                                ",{}],["|",{"inverse":true}],[" 13 ",{"fg":3,"bold":true}],["▸ .ssh/",{"fg":6,"bold":true}],["           ",{}]],"13":[["   ",{}],["+",{"fg":2,"bold":true}],["SecondRun2(void)",{}],["|",{"inverse":true}],[" 35 ",{"fg":3,"bold":true}],["                                                *calendar-:CalendarVR*                                          ",{}],["|",{"inverse":true}],[" 14 ",{"fg":3,"bold":true}],["▸ .vim/",{"fg":6,"bold":true}],["           ",{}]],"14":[["                    ",{}],["|",{"inverse":true}],[" 36 ",{"fg":3,"bold":true}],[":CalendarVR [[year] month]  Show calendar at this year and this month in a                                      ",{}],["|",{"inverse":true}],[" 15 ",{"fg":3,"bold":true}],["▸ diary/",{"fg":6,"bold":true}],["          ",{}]],"15":[["▼",{"fg":3,"bold":true}],[" Second",{"fg":5,"bold":true}],[" : ",{}],["struct",{"fg":2,"bold":true}],["   ",{}],["|",{"inverse":true}],[" 37 ",{"fg":3,"bold":true}],["                          vertical split at the right site.  When [year] is                                     ",{}],["|",{"inverse":true}],[" 16 ",{"fg":3,"bold":true}],["▸ temp/",{"fg":6,"bold":true}],["           ",{}]],"16":[["    [prototypes]",{"fg":6,"bold":true}],["    ",{}],["|",{"inverse":true}],[" 38 ",{"fg":3,"bold":true}],["                          omitted, the calendar will show the given month in                                    ",{}],["|",{"inverse":true}],[" 17 ",{"fg":3,"bold":true}],["  .bash_history   ",{}]],"17":[["   ",{}],["+",{"fg":2,"bold":true}],["SecondRun(void) ",{}],["|",{"inverse":true}],[" 39 ",{"fg":3,"bold":true}],["                          the current year.  When both [year] and [month] are                                   ",{}],["|",{"inverse":true}],[" 18 ",{"fg":3,"bold":true}],["  .bash_logout    ",{}]],"18":[["   ",{}],["+",{"fg":2,"bold":true}],["SecondRun2(void)",{}],["|",{"inverse":true}],[" 40 ",{"fg":3,"bold":true}],["                          omitted, the calendar will show the current month.                                    ",{}],["|",{"inverse":true}],[" 19 ",{"fg":3,"bold":true}],["  .bash_profile   ",{"underline":true}]],"19":[["                    ",{}],["|",{"inverse":true}],[" 41 ",{"fg":3,"bold":true}],["                                                                                                                ",{}],["|",{"inverse":true}],[" 20 ",{"fg":3,"bold":true}],["  .bashrc         ",{}]],"20":[["▼",{"fg":3,"bold":true}],[" ",{}],["functions",{"fg":6,"bold":true}],["         ",{}],["|",{"inverse":true}],[" 42 ",{"fg":3,"bold":true}],["MAPPINGS                                        *calendar-mappings*                                             ",{}],["|",{"inverse":true}],[" 21 ",{"fg":3,"bold":true}],["  .cshrc          ",{}]],"21":[["    main(int argc, c",{"underline":true}],["|",{"inverse":true}],[" 43 ",{"fg":3,"bold":true}],["                                                                                                                ",{}],["|",{"inverse":true}],[" 22 ",{"fg":3,"bold":true}],["  .dmrc           ",{}]],"22":[["~                   ",{"fg":4,"bold":true}],["|",{"inverse":true}],[" 44 ",{"fg":3,"bold":true}],["calendar.vim makes the following normal mode mappings available:                                                ",{}],["|",{"inverse":true}],[" 23 ",{"fg":3,"bold":true}],["  .esd_auth       ",{}]],"23":[["~                   ",{"fg":4,"bold":true}],["|",{"inverse":true}],[" 45 ",{"fg":3,"bold":true}],["                                                                                                                ",{}],["|",{"inverse":true}],[" 24 ",{"fg":3,"bold":true}],["  .gtkrc-2.0      ",{}]],"24":[["~                   ",{"fg":4,"bold":true}],["|",{"inverse":true}],[" 46 ",{"fg":3,"bold":true}],["                                                *calendar-cal*                                                  ",{}],["|",{"inverse":true}],[" 25 ",{"fg":3,"bold":true}],["  .gtkrc-2.0-kde4 ",{}]],"25":[["~                   ",{"fg":4,"bold":true}],["|",{"inverse":true}],[" 47 ",{"fg":3,"bold":true}],["<LocalLeader>cal          Brings up the calendar in a vertical split.                                           ",{}],["|",{"inverse":true}],[" 26 ",{"fg":3,"bold":true}],["  .lesshst        ",{}]],"26":[["~                   ",{"fg":4,"bold":true}],["|",{"inverse":true}],[" 48 ",{"fg":3,"bold":true}],["                          Equivalent to calling |:Calendar|.                                                    ",{}],["|",{"inverse":true}],[" 27 ",{"fg":3,"bold":true}],["  .tcshrc         ",{}]],"27":[["~                   ",{"fg":4,"bold":true}],["|",{"inverse":true}],[" 49 ",{"fg":3,"bold":true}],["                                                                                                                ",{}],["|",{"inverse":true}],[" 28 ",{"fg":3,"bold":true}],["  .viminfo        ",{}]],"28":[["~                   ",{"fg":4,"bold":true}],["|",{"inverse":true}],[" 50 ",{"fg":3,"bold":true}],["                                                *calendar-caL*                                                  ",{}],["|",{"inverse":true}],[" 29 ",{"fg":3,"bold":true}],["  .vimrc          ",{}]],"29":[["~                   ",{"fg":4,"bold":true}],["|",{"inverse":true}],[" 51 ",{"fg":3,"bold":true}],["<LocalLeader>",{}],["caL ",{"bg":1}],["        ",{}],[" Bri",{"bg":1}],["ngs up the calendar in a horizontal split.                                         ",{}],["|",{"inverse":true}],[" 30 ",{"fg":3,"bold":true}],["  .xsession-errors",{}]],"30":[["~                   ",{"fg":4,"bold":true}],["|",{"inverse":true}],[" 52 ",{"fg":3,"bold":true}],["                          Equivalent to calling |:CalendarH|.                                                   ",{}],["|",{"inverse":true}],[" 31 ",{"fg":3,"bold":true}],["  anaconda-ks.cfg ",{}]],"31":[["~                   ",{"fg":4,"bold":true}],["|",{"inverse":true}],[" 53 ",{"fg":3,"bold":true}],["                                                                                                                ",{}],["|",{"inverse":true}],[" 32 ",{"fg":3,"bold":true}],["  initial-setup-ks",{}]],"32":[["~                   ",{"fg":4,"bold":true}],["|",{"inverse":true}],[" 54 ",{"fg":3,"bold":true}],["SETTINGS                                        *calendar-settings*                                             ",{}],["|",{"inverse":true}],[" 33 ",{"fg":3,"bold":true}],["  test.c          ",{}]],"33":[["~                   ",{"fg":4,"bold":true}],["|",{"inverse":true}],[" 55 ",{"fg":3,"bold":true}],["                                                                                                                ",{}],["|",{"inverse":true}],[" 34 ",{"fg":3,"bold":true}],["  test.cpp        ",{}]],"34":[["~                   ",{"fg":4,"bold":true}],["|",{"inverse":true}],[" 56 ",{"fg":3,"bold":true}],["calendar.vim can be con",{}],["figured using the following sett",{"bg":1}],["ings:                                                    ",{}],["|",{"inverse":true}],[" 35 ",{"fg":3,"bold":true}],["  .test.cpp.swp   ",{}]],"35":[["~                   ",{"fg":4,"bold":true}],["|",{"inverse":true}],[" 57 ",{"fg":3,"bold":true}],["                                                                                                                ",{}],["|",{"inverse":true}],["~                     ",{"fg":4,"bold":true}]],"36":[["~                   ",{"fg":4,"bold":true}],["|",{"inverse":true}],[" 58 ",{"fg":3,"bold":true}],["                                                *g:calendar_focus_today*                                        ",{}],["|",{"inverse":true}],["~                     ",{"fg":4,"bold":true}]],"37":[["~                   ",{"fg":4,"bold":true}],["|",{"inverse":true}],[" 59 ",{"fg":3,"bold":true}],["Keeps focus when moving to next or previous calendar: >                                                         ",{}],["|",{"inverse":true}],["~                     ",{"fg":4,"bold":true}]],"38":[["~                   ",{"fg":4,"bold":true}],["|",{"inverse":true}],[" 60 ",{"fg":3,"bold":true}],["  let g:calendar_focus_today = 1                                                                                ",{}],["|",{"inverse":true}],["~                     ",{"fg":4,"bold":true}]],"39":[["~                   ",{"fg":4,"bold":true}],["|",{"inverse":true}],[" 61 ",{"fg":3,"bold":true}],["<                                                                                                               ",{}],["|",{"inverse":true}],["~                     ",{"fg":4,"bold":true}]],"40":[["~                   ",{"fg":4,"bold":true}],["|",{"inverse":true}],[" 62 ",{"fg":3,"bold":true}],["                                                                                                                ",{}],["|",{"inverse":true}],["~                     ",{"fg":4,"bold":true}]],"41":[["~                   ",{"fg":4,"bold":true}],["|",{"inverse":true}],[" 63 ",{"fg":3,"bold":true}],["                                                *g:calendar_keys*                                               ",{}],["|",{"inverse":true}],["~                     ",{"fg":4,"bold":true}]],"42":[["~                   ",{"fg":4,"bold":true}],["|",{"inverse":true}],[" 64 ",{"fg":3,"bold":true}],["To change the key bindings in the calendar window, add entries to this                                          ",{}],["|",{"inverse":true}],["~                     ",{"fg":4,"bold":true}]],"43":[["~                   ",{"fg":4,"bold":true}],["|",{"inverse":true}],[" 65 ",{"fg":3,"bold":true}],["dictionary.   Possible keys, the action bound to the keycode given in the                                       ",{}],["|",{"inverse":true}],["~                     ",{"fg":4,"bold":true}]],"44":[["~                   ",{"fg":4,"bold":true}],["|",{"inverse":true}],[" 66 ",{"fg":3,"bold":true}],["respective value for this key and the default bi",{"underline":true}],[" the keycode given in the                                       ",{}],["|",{"inverse":true}],["~                     ",{"fg":4,"bold":true}]]},"cursor":{"x":73,"y":44,"visible":false}}],[0.037524,{"lines":{"44":[["~                   ",{"fg":4,"bold":true}],["|",{"inverse":true}],[" 66 ",{"fg":3,"bold":true}],["respective value for this key and the default binding are listed below.                                         ",{}],["|",{"inverse":true}],["~                     ",{"fg":4,"bold":true}]],"45":[["~                   ",{"fg":4,"bold":true}],["|",{"inverse":true}],[" 67 ",{"fg":3,"bold":true}],["'close'                     Closes calendar window.             'q'                                             ",{"underline":true}],["|",{"inverse":true}],["~                     ",{"fg":4,"bold":true}]],"46":[["[Name] test.cpp      ",{"inverse":true}],[" NORMAL ",{"bold":true}],[" ",{}],["calendar.txt ",{"bold":true}],["                                                        unix │ utf-8 │ text │  30% ",{}],[" LN  67",{"bold":true}],[":1  ",{}],[" ",{"bold":true,"inverse":true}],[" ~/…/calendar-vim/doc>",{"bold":true}]]},"cursor":{"x":25,"y":45,"visible":true}}],[0.005366000000000001,{"lines":{"0":[["\" Press <F1> for hel",{"fg":6,"bold":true}],["|",{"inverse":true}],[" 23 ",{"fg":3,"bold":true}],["                          horizontal split.  When [year] is omitted, the                                        ",{}],["|",{"inverse":true}],["  1 ",{"fg":3,"bold":true}],["\" Press ? for help",{"fg":5,"bold":true}]],"1":[["                    ",{}],["|",{"inverse":true}],[" 24 ",{"fg":3,"bold":true}],["                          calendar will show the given month in the current                                     ",{}],["|",{"inverse":true}],["  2 ",{"fg":3,"bold":true}],["                  ",{}]],"2":[["▼",{"fg":3,"bold":true}],[" First",{"fg":5,"bold":true}],[" : ",{}],["struct",{"fg":2,"bold":true}],["    ",{}],["|",{"inverse":true}],[" 25 ",{"fg":3,"bold":true}],["                          year.  When both [year] and [month] are omitted, the                                  ",{}],["|",{"inverse":true}],["  3 ",{"fg":3,"bold":true}],[".. (up a dir)",{"fg":6,"bold":true}],["     ",{}]],"3":[["    [prototypes]",{"fg":6,"bold":true}],["    ",{}],["|",{"inverse":true}],[" 26 ",{"fg":3,"bold":true}],["                          calendar will show the current month.                                                 ",{}],["|",{"inverse":true}],["  4 /root/",{"fg":3,"bold":true}],["            ",{}]],"4":[["   ",{}],["+",{"fg":2,"bold":true}],["FirstRun(void)  ",{}],["|",{"inverse":true}],[" 27 ",{"fg":3,"bold":true}],["                                                                                                                ",{}],["|",{"inverse":true}],["  5 ",{"fg":3,"bold":true}],["▸ .asciinema/",{"fg":6,"bold":true}],["     ",{}]],"5":[["   ",{}],["+",{"fg":2,"bold":true}],["FirstRun2(void) ",{}],["|",{"inverse":true}],[" 28 ",{"fg":3,"bold":true}],["                                                *calendar-:CalendarT*                                           ",{}],["|",{"inverse":true}],["  6 ",{"fg":3,"bold":true}],["▸ .cache/",{"fg":6,"bold":true}],["         ",{}]],"6":[["                    ",{}],["|",{"inverse":true}],[" 29 ",{"fg":3,"bold":true}],[":CalendarT [[year] month] Show calendar at this year and this month in a                                        ",{}],["|",{"inverse":true}],["  7 ",{"fg":3,"bold":true}],["▸ .config/",{"fg":6,"bold":true}],["        ",{}]],"7":[["▼",{"fg":3,"bold":true}],[" Last",{"fg":5,"bold":true}],[" : ",{}],["struct",{"fg":2,"bold":true}],["     ",{}],["|",{"inverse":true}],[" 30 ",{"fg":3,"bold":true}],["                          full-screen window.  When [year] is omitted, the                                      ",{}],["|",{"inverse":true}],["  8 ",{"fg":3,"bold":true}],["▸ .dbus/",{"fg":6,"bold":true}],["          ",{}]],"8":[["    [functions]",{"fg":6,"bold":true}],["     ",{}],["|",{"inverse":true}],[" 31 ",{"fg":3,"bold":true}],["                          calendar will show the given month in the current                                     ",{}],["|",{"inverse":true}],["  9 ",{"fg":3,"bold":true}],["▸ .gnupg/",{"fg":6,"bold":true}],["         ",{}]],"9":[["   ",{}],["+",{"fg":2,"bold":true}],["FirstRun(void)  ",{}],["|",{"inverse":true}],[" 32 ",{"fg":3,"bold":true}],["                          year.  When both [year] and [month] are omitted, the                                  ",{}],["|",{"inverse":true}],[" 10 ",{"fg":3,"bold":true}],["▸ .kde/",{"fg":6,"bold":true}],["           ",{}]],"10":[["   ",{}],["+",{"fg":2,"bold":true}],["FirstRun2(void) ",{}],["|",{"inverse":true}],[" 33 ",{"fg":3,"bold":true}],["                          calendar will show the current month.                                                 ",{}],["|",{"inverse":true}],[" 11 ",{"fg":3,"bold":true}],["▸ .local/",{"fg":6,"bold":true}],["         ",{}]],"11":[["   ",{}],["+",{"fg":2,"bold":true}],["~Last()         ",{}],["|",{"inverse":true}],[" 34 ",{"fg":3,"bold":true}],["                                                                                                                ",{}],["|",{"inverse":true}],[" 12 ",{"fg":3,"bold":true}],["▸ .pki/",{"fg":6,"bold":true}],["           ",{}]],"12":[["   ",{}],["+",{"fg":2,"bold":true}],["SecondRun(void) ",{}],["|",{"inverse":true}],[" 35 ",{"fg":3,"bold":true}],["                                                *calendar-:CalendarVR*                                          ",{}],["|",{"inverse":true}],[" 13 ",{"fg":3,"bold":true}],["▸ .ssh/",{"fg":6,"bold":true}],["           ",{}]],"13":[["   ",{}],["+",{"fg":2,"bold":true}],["SecondRun2(void)",{}],["|",{"inverse":true}],[" 36 ",{"fg":3,"bold":true}],[":CalendarVR [[year] month]  Show calendar at this year and this month in a                                      ",{}],["|",{"inverse":true}],[" 14 ",{"fg":3,"bold":true}],["▸ .vim/",{"fg":6,"bold":true}],["           ",{}]],"14":[["                    ",{}],["|",{"inverse":true}],[" 37 ",{"fg":3,"bold":true}],["                          vertical split at the right site.  When [year] is                                     ",{}],["|",{"inverse":true}],[" 15 ",{"fg":3,"bold":true}],["▸ diary/",{"fg":6,"bold":true}],["          ",{}]],"15":[["▼",{"fg":3,"bold":true}],[" Second",{"fg":5,"bold":true}],[" : ",{}],["struct",{"fg":2,"bold":true}],["   ",{}],["|",{"inverse":true}],[" 38 ",{"fg":3,"bold":true}],["                          omitted, the calendar will show the given month in                                    ",{}],["|",{"inverse":true}],[" 16 ",{"fg":3,"bold":true}],["▸ temp/",{"fg":6,"bold":true}],["           ",{}]],"16":[["    [prototypes]",{"fg":6,"bold":true}],["    ",{}],["|",{"inverse":true}],[" 39 ",{"fg":3,"bold":true}],["                          the current year.  When both [year] and [month] are                                   ",{}],["|",{"inverse":true}],[" 17 ",{"fg":3,"bold":true}],["  .bash_history   ",{}]],"17":[["   ",{}],["+",{"fg":2,"bold":true}],["SecondRun(void) ",{}],["|",{"inverse":true}],[" 40 ",{"fg":3,"bold":true}],["                          omitted, the calendar will show the current month.                                    ",{}],["|",{"inverse":true}],[" 18 ",{"fg":3,"bold":true}],["  .bash_logout    ",{}]],"18":[["   ",{}],["+",{"fg":2,"bold":true}],["SecondRun2(void)",{}],["|",{"inverse":true}],[" 41 ",{"fg":3,"bold":true}],["                                                                                                                ",{}],["|",{"inverse":true}],[" 19 ",{"fg":3,"bold":true}],["  .bash_profile   ",{"underline":true}]],"19":[["                    ",{}],["|",{"inverse":true}],[" 42 ",{"fg":3,"bold":true}],["MAPPINGS                                        *calendar-mappings*                                             ",{}],["|",{"inverse":true}],[" 20 ",{"fg":3,"bold":true}],["  .bashrc         ",{}]],"20":[["▼",{"fg":3,"bold":true}],[" ",{}],["functions",{"fg":6,"bold":true}],["         ",{}],["|",{"inverse":true}],[" 43 ",{"fg":3,"bold":true}],["                                                                                                                ",{}],["|",{"inverse":true}],[" 21 ",{"fg":3,"bold":true}],["  .cshrc          ",{}]],"21":[["    main(int argc, c",{"underline":true}],["|",{"inverse":true}],[" 44 ",{"fg":3,"bold":true}],["calendar.vim makes the following normal mode mappings available:                                                ",{}],["|",{"inverse":true}],[" 22 ",{"fg":3,"bold":true}],["  .dmrc           ",{}]],"22":[["~                   ",{"fg":4,"bold":true}],["|",{"inverse":true}],[" 45 ",{"fg":3,"bold":true}],["                                                                                                                ",{}],["|",{"inverse":true}],[" 23 ",{"fg":3,"bold":true}],["  .esd_auth       ",{}]],"23":[["~                   ",{"fg":4,"bold":true}],["|",{"inverse":true}],[" 46 ",{"fg":3,"bold":true}],["                                                *calendar-cal*                                                  ",{}],["|",{"inverse":true}],[" 24 ",{"fg":3,"bold":true}],["  .gtkrc-2.0      ",{}]],"24":[["~                   ",{"fg":4,"bold":true}],["|",{"inverse":true}],[" 47 ",{"fg":3,"bold":true}],["<LocalLeader>cal          Brings up the calendar in a vertical split.                                           ",{}],["|",{"inverse":true}],[" 25 ",{"fg":3,"bold":true}],["  .gtkrc-2.0-kde4 ",{}]],"25":[["~                   ",{"fg":4,"bold":true}],["|",{"inverse":true}],[" 48 ",{"fg":3,"bold":true}],["                          Equivalent to calling |:Calendar|.                                                    ",{}],["|",{"inverse":true}],[" 26 ",{"fg":3,"bold":true}],["  .lesshst        ",{}]],"26":[["~                   ",{"fg":4,"bold":true}],["|",{"inverse":true}],[" 49 ",{"fg":3,"bold":true}],["                                                                                                                ",{}],["|",{"inverse":true}],[" 27 ",{"fg":3,"bold":true}],["  .tcshrc         ",{}]],"27":[["~                   ",{"fg":4,"bold":true}],["|",{"inverse":true}],[" 50 ",{"fg":3,"bold":true}],["                                                *calendar-caL*                                                  ",{}],["|",{"inverse":true}],[" 28 ",{"fg":3,"bold":true}],["  .viminfo        ",{}]],"28":[["~                   ",{"fg":4,"bold":true}],["|",{"inverse":true}],[" 51 ",{"fg":3,"bold":true}],["<LocalLeader>",{}],["caL ",{"bg":1}],["        ",{}],[" Bri",{"bg":1}],["ngs up the calendar in a horizontal split.                                         ",{}],["|",{"inverse":true}],[" 29 ",{"fg":3,"bold":true}],["  .vimrc          ",{}]],"29":[["~                   ",{"fg":4,"bold":true}],["|",{"inverse":true}],[" 52 ",{"fg":3,"bold":true}],["                          Equivalent to calling |:CalendarH|.                                                   ",{}],["|",{"inverse":true}],[" 30 ",{"fg":3,"bold":true}],["  .xsession-errors",{}]],"30":[["~                   ",{"fg":4,"bold":true}],["|",{"inverse":true}],[" 53 ",{"fg":3,"bold":true}],["                                                                                                                ",{}],["|",{"inverse":true}],[" 31 ",{"fg":3,"bold":true}],["  anaconda-ks.cfg ",{}]],"31":[["~                   ",{"fg":4,"bold":true}],["|",{"inverse":true}],[" 54 ",{"fg":3,"bold":true}],["SETTINGS                                        *calendar-settings*                                             ",{}],["|",{"inverse":true}],[" 32 ",{"fg":3,"bold":true}],["  initial-setup-ks",{}]],"32":[["~                   ",{"fg":4,"bold":true}],["|",{"inverse":true}],[" 55 ",{"fg":3,"bold":true}],["                                                                                                                ",{}],["|",{"inverse":true}],[" 33 ",{"fg":3,"bold":true}],["  test.c          ",{}]],"33":[["~                   ",{"fg":4,"bold":true}],["|",{"inverse":true}],[" 56 ",{"fg":3,"bold":true}],["calendar.vim can be con",{}],["figured using the following sett",{"bg":1}],["ings:                                                    ",{}],["|",{"inverse":true}],[" 34 ",{"fg":3,"bold":true}],["  test.cpp        ",{}]],"34":[["~                   ",{"fg":4,"bold":true}],["|",{"inverse":true}],[" 57 ",{"fg":3,"bold":true}],["                                                                                                                ",{}],["|",{"inverse":true}],[" 35 ",{"fg":3,"bold":true}],["  .test.cpp.swp   ",{}]],"35":[["~                   ",{"fg":4,"bold":true}],["|",{"inverse":true}],[" 58 ",{"fg":3,"bold":true}],["                                                *g:calendar_focus_today*                                        ",{}],["|",{"inverse":true}],["~                     ",{"fg":4,"bold":true}]],"36":[["~                   ",{"fg":4,"bold":true}],["|",{"inverse":true}],[" 59 ",{"fg":3,"bold":true}],["Keeps focus when moving to next or previous calendar: >                                                         ",{}],["|",{"inverse":true}],["~                     ",{"fg":4,"bold":true}]],"37":[["~                   ",{"fg":4,"bold":true}],["|",{"inverse":true}],[" 60 ",{"fg":3,"bold":true}],["  let g:calendar_focus_today = 1                                                                                ",{}],["|",{"inverse":true}],["~                     ",{"fg":4,"bold":true}]],"38":[["~                   ",{"fg":4,"bold":true}],["|",{"inverse":true}],[" 61 ",{"fg":3,"bold":true}],["<                                                                                                               ",{}],["|",{"inverse":true}],["~                     ",{"fg":4,"bold":true}]],"39":[["~                   ",{"fg":4,"bold":true}],["|",{"inverse":true}],[" 62 ",{"fg":3,"bold":true}],["                                                                                                                ",{}],["|",{"inverse":true}],["~                     ",{"fg":4,"bold":true}]],"40":[["~                   ",{"fg":4,"bold":true}],["|",{"inverse":true}],[" 63 ",{"fg":3,"bold":true}],["                                                *g:calendar_keys*                                               ",{}],["|",{"inverse":true}],["~                     ",{"fg":4,"bold":true}]],"41":[["~                   ",{"fg":4,"bold":true}],["|",{"inverse":true}],[" 64 ",{"fg":3,"bold":true}],["To change the key bindings in the calendar window, add entries to this                                          ",{}],["|",{"inverse":true}],["~                     ",{"fg":4,"bold":true}]],"42":[["~                   ",{"fg":4,"bold":true}],["|",{"inverse":true}],[" 65 ",{"fg":3,"bold":true}],["dictionary.   Possible keys, the action bound to the keycode given in the                                       ",{}],["|",{"inverse":true}],["~                     ",{"fg":4,"bold":true}]],"43":[["~                   ",{"fg":4,"bold":true}],["|",{"inverse":true}],[" 66 ",{"fg":3,"bold":true}],["respective value for this key and the default binding are listed below.                                         ",{}],["|",{"inverse":true}],["~                     ",{"fg":4,"bold":true}]],"44":[["~                   ",{"fg":4,"bold":true}],["|",{"inverse":true}],[" 67 ",{"fg":3,"bold":true}],["'close'                     Closes calendar wind",{"underline":true}],["nding are listed below.                                         ",{}],["|",{"inverse":true}],["~                     ",{"fg":4,"bold":true}]]},"cursor":{"x":73,"y":44,"visible":false}}],[0.019823,{"lines":{"44":[["~                   ",{"fg":4,"bold":true}],["|",{"inverse":true}],[" 67 ",{"fg":3,"bold":true}],["'close'                     Closes calendar window.             'q'                                             ",{}],["|",{"inverse":true}],["~                     ",{"fg":4,"bold":true}]],"45":[["~                   ",{"fg":4,"bold":true}],["|",{"inverse":true}],[" 68 ",{"fg":3,"bold":true}],["'do_action'                 Executes |calendar_action|.           '<CR>'                                        ",{"underline":true}],["|",{"inverse":true}],["~                     ",{"fg":4,"bold":true}]],"46":[["[Name] test.cpp      ",{"inverse":true}],[" NORMAL ",{"bold":true}],[" ",{}],["calendar.txt ",{"bold":true}],["                                                        unix │ utf-8 │ text │  30% ",{}],[" LN  68",{"bold":true}],[":1  ",{}],[" ",{"bold":true,"inverse":true}],[" ~/…/calendar-vim/doc>",{"bold":true}]]},"cursor":{"x":25,"y":45,"visible":true}}],[0.005449,{"lines":{"0":[["\" Press <F1> for hel",{"fg":6,"bold":true}],["|",{"inverse":true}],[" 24 ",{"fg":3,"bold":true}],["                          calendar will show the given month in the current                                     ",{}],["|",{"inverse":true}],["  1 ",{"fg":3,"bold":true}],["\" Press ? for help",{"fg":5,"bold":true}]],"1":[["                    ",{}],["|",{"inverse":true}],[" 25 ",{"fg":3,"bold":true}],["                          year.  When both [year] and [month] are omitted, the                                  ",{}],["|",{"inverse":true}],["  2 ",{"fg":3,"bold":true}],["                  ",{}]],"2":[["▼",{"fg":3,"bold":true}],[" First",{"fg":5,"bold":true}],[" : ",{}],["struct",{"fg":2,"bold":true}],["    ",{}],["|",{"inverse":true}],[" 26 ",{"fg":3,"bold":true}],["                          calendar will show the current month.                                                 ",{}],["|",{"inverse":true}],["  3 ",{"fg":3,"bold":true}],[".. (up a dir)",{"fg":6,"bold":true}],["     ",{}]],"3":[["    [prototypes]",{"fg":6,"bold":true}],["    ",{}],["|",{"inverse":true}],[" 27 ",{"fg":3,"bold":true}],["                                                                                                                ",{}],["|",{"inverse":true}],["  4 /root/",{"fg":3,"bold":true}],["            ",{}]],"4":[["   ",{}],["+",{"fg":2,"bold":true}],["FirstRun(void)  ",{}],["|",{"inverse":true}],[" 28 ",{"fg":3,"bold":true}],["                                                *calendar-:CalendarT*                                           ",{}],["|",{"inverse":true}],["  5 ",{"fg":3,"bold":true}],["▸ .asciinema/",{"fg":6,"bold":true}],["     ",{}]],"5":[["   ",{}],["+",{"fg":2,"bold":true}],["FirstRun2(void) ",{}],["|",{"inverse":true}],[" 29 ",{"fg":3,"bold":true}],[":CalendarT [[year] month] Show calendar at this year and this month in a                                        ",{}],["|",{"inverse":true}],["  6 ",{"fg":3,"bold":true}],["▸ .cache/",{"fg":6,"bold":true}],["         ",{}]],"6":[["                    ",{}],["|",{"inverse":true}],[" 30 ",{"fg":3,"bold":true}],["                          full-screen window.  When [year] is omitted, the                                      ",{}],["|",{"inverse":true}],["  7 ",{"fg":3,"bold":true}],["▸ .config/",{"fg":6,"bold":true}],["        ",{}]],"7":[["▼",{"fg":3,"bold":true}],[" Last",{"fg":5,"bold":true}],[" : ",{}],["struct",{"fg":2,"bold":true}],["     ",{}],["|",{"inverse":true}],[" 31 ",{"fg":3,"bold":true}],["                          calendar will show the given month in the current                                     ",{}],["|",{"inverse":true}],["  8 ",{"fg":3,"bold":true}],["▸ .dbus/",{"fg":6,"bold":true}],["          ",{}]],"8":[["    [functions]",{"fg":6,"bold":true}],["     ",{}],["|",{"inverse":true}],[" 32 ",{"fg":3,"bold":true}],["                          year.  When both [year] and [month] are omitted, the                                  ",{}],["|",{"inverse":true}],["  9 ",{"fg":3,"bold":true}],["▸ .gnupg/",{"fg":6,"bold":true}],["         ",{}]],"9":[["   ",{}],["+",{"fg":2,"bold":true}],["FirstRun(void)  ",{}],["|",{"inverse":true}],[" 33 ",{"fg":3,"bold":true}],["                          calendar will show the current month.                                                 ",{}],["|",{"inverse":true}],[" 10 ",{"fg":3,"bold":true}],["▸ .kde/",{"fg":6,"bold":true}],["           ",{}]],"10":[["   ",{}],["+",{"fg":2,"bold":true}],["FirstRun2(void) ",{}],["|",{"inverse":true}],[" 34 ",{"fg":3,"bold":true}],["                                                                                                                ",{}],["|",{"inverse":true}],[" 11 ",{"fg":3,"bold":true}],["▸ .local/",{"fg":6,"bold":true}],["         ",{}]],"11":[["   ",{}],["+",{"fg":2,"bold":true}],["~Last()         ",{}],["|",{"inverse":true}],[" 35 ",{"fg":3,"bold":true}],["                                                *calendar-:CalendarVR*                                          ",{}],["|",{"inverse":true}],[" 12 ",{"fg":3,"bold":true}],["▸ .pki/",{"fg":6,"bold":true}],["           ",{}]],"12":[["   ",{}],["+",{"fg":2,"bold":true}],["SecondRun(void) ",{}],["|",{"inverse":true}],[" 36 ",{"fg":3,"bold":true}],[":CalendarVR [[year] month]  Show calendar at this year and this month in a                                      ",{}],["|",{"inverse":true}],[" 13 ",{"fg":3,"bold":true}],["▸ .ssh/",{"fg":6,"bold":true}],["           ",{}]],"13":[["   ",{}],["+",{"fg":2,"bold":true}],["SecondRun2(void)",{}],["|",{"inverse":true}],[" 37 ",{"fg":3,"bold":true}],["                          vertical split at the right site.  When [year] is                                     ",{}],["|",{"inverse":true}],[" 14 ",{"fg":3,"bold":true}],["▸ .vim/",{"fg":6,"bold":true}],["           ",{}]],"14":[["                    ",{}],["|",{"inverse":true}],[" 38 ",{"fg":3,"bold":true}],["                          omitted, the calendar will show the given month in                                    ",{}],["|",{"inverse":true}],[" 15 ",{"fg":3,"bold":true}],["▸ diary/",{"fg":6,"bold":true}],["          ",{}]],"15":[["▼",{"fg":3,"bold":true}],[" Second",{"fg":5,"bold":true}],[" : ",{}],["struct",{"fg":2,"bold":true}],["   ",{}],["|",{"inverse":true}],[" 39 ",{"fg":3,"bold":true}],["                          the current year.  When both [year] and [month] are                                   ",{}],["|",{"inverse":true}],[" 16 ",{"fg":3,"bold":true}],["▸ temp/",{"fg":6,"bold":true}],["           ",{}]],"16":[["    [prototypes]",{"fg":6,"bold":true}],["    ",{}],["|",{"inverse":true}],[" 40 ",{"fg":3,"bold":true}],["                          omitted, the calendar will show the current month.                                    ",{}],["|",{"inverse":true}],[" 17 ",{"fg":3,"bold":true}],["  .bash_history   ",{}]],"17":[["   ",{}],["+",{"fg":2,"bold":true}],["SecondRun(void) ",{}],["|",{"inverse":true}],[" 41 ",{"fg":3,"bold":true}],["                                                                                                                ",{}],["|",{"inverse":true}],[" 18 ",{"fg":3,"bold":true}],["  .bash_logout    ",{}]],"18":[["   ",{}],["+",{"fg":2,"bold":true}],["SecondRun2(void)",{}],["|",{"inverse":true}],[" 42 ",{"fg":3,"bold":true}],["MAPPINGS                                        *calendar-mappings*                                             ",{}],["|",{"inverse":true}],[" 19 ",{"fg":3,"bold":true}],["  .bash_profile   ",{"underline":true}]],"19":[["                    ",{}],["|",{"inverse":true}],[" 43 ",{"fg":3,"bold":true}],["                                                                                                                ",{}],["|",{"inverse":true}],[" 20 ",{"fg":3,"bold":true}],["  .bashrc         ",{}]],"20":[["▼",{"fg":3,"bold":true}],[" ",{}],["functions",{"fg":6,"bold":true}],["         ",{}],["|",{"inverse":true}],[" 44 ",{"fg":3,"bold":true}],["calendar.vim makes the following normal mode mappings available:                                                ",{}],["|",{"inverse":true}],[" 21 ",{"fg":3,"bold":true}],["  .cshrc          ",{}]],"21":[["    main(int argc, c",{"underline":true}],["|",{"inverse":true}],[" 45 ",{"fg":3,"bold":true}],["                                                                                                                ",{}],["|",{"inverse":true}],[" 22 ",{"fg":3,"bold":true}],["  .dmrc           ",{}]],"22":[["~                   ",{"fg":4,"bold":true}],["|",{"inverse":true}],[" 46 ",{"fg":3,"bold":true}],["                                                *calendar-cal*                                                  ",{}],["|",{"inverse":true}],[" 23 ",{"fg":3,"bold":true}],["  .esd_auth       ",{}]],"23":[["~                   ",{"fg":4,"bold":true}],["|",{"inverse":true}],[" 47 ",{"fg":3,"bold":true}],["<LocalLeader>cal          Brings up the calendar in a vertical split.                                           ",{}],["|",{"inverse":true}],[" 24 ",{"fg":3,"bold":true}],["  .gtkrc-2.0      ",{}]],"24":[["~                   ",{"fg":4,"bold":true}],["|",{"inverse":true}],[" 48 ",{"fg":3,"bold":true}],["                          Equivalent to calling |:Calendar|.                                                    ",{}],["|",{"inverse":true}],[" 25 ",{"fg":3,"bold":true}],["  .gtkrc-2.0-kde4 ",{}]],"25":[["~                   ",{"fg":4,"bold":true}],["|",{"inverse":true}],[" 49 ",{"fg":3,"bold":true}],["                                                                                                                ",{}],["|",{"inverse":true}],[" 26 ",{"fg":3,"bold":true}],["  .lesshst        ",{}]],"26":[["~                   ",{"fg":4,"bold":true}],["|",{"inverse":true}],[" 50 ",{"fg":3,"bold":true}],["                                                *calendar-caL*                                                  ",{}],["|",{"inverse":true}],[" 27 ",{"fg":3,"bold":true}],["  .tcshrc         ",{}]],"27":[["~                   ",{"fg":4,"bold":true}],["|",{"inverse":true}],[" 51 ",{"fg":3,"bold":true}],["<LocalLeader>",{}],["caL ",{"bg":1}],["        ",{}],[" Bri",{"bg":1}],["ngs up the calendar in a horizontal split.                                         ",{}],["|",{"inverse":true}],[" 28 ",{"fg":3,"bold":true}],["  .viminfo        ",{}]],"28":[["~                   ",{"fg":4,"bold":true}],["|",{"inverse":true}],[" 52 ",{"fg":3,"bold":true}],["                          Equivalent to calling |:CalendarH|.                                                   ",{}],["|",{"inverse":true}],[" 29 ",{"fg":3,"bold":true}],["  .vimrc          ",{}]],"29":[["~                   ",{"fg":4,"bold":true}],["|",{"inverse":true}],[" 53 ",{"fg":3,"bold":true}],["                                                                                                                ",{}],["|",{"inverse":true}],[" 30 ",{"fg":3,"bold":true}],["  .xsession-errors",{}]],"30":[["~                   ",{"fg":4,"bold":true}],["|",{"inverse":true}],[" 54 ",{"fg":3,"bold":true}],["SETTINGS                                        *calendar-settings*                                             ",{}],["|",{"inverse":true}],[" 31 ",{"fg":3,"bold":true}],["  anaconda-ks.cfg ",{}]],"31":[["~                   ",{"fg":4,"bold":true}],["|",{"inverse":true}],[" 55 ",{"fg":3,"bold":true}],["                                                                                                                ",{}],["|",{"inverse":true}],[" 32 ",{"fg":3,"bold":true}],["  initial-setup-ks",{}]],"32":[["~                   ",{"fg":4,"bold":true}],["|",{"inverse":true}],[" 56 ",{"fg":3,"bold":true}],["calendar.vim can be con",{}],["figured using the following sett",{"bg":1}],["ings:                                                    ",{}],["|",{"inverse":true}],[" 33 ",{"fg":3,"bold":true}],["  test.c          ",{}]],"33":[["~                   ",{"fg":4,"bold":true}],["|",{"inverse":true}],[" 57 ",{"fg":3,"bold":true}],["                                                                                                                ",{}],["|",{"inverse":true}],[" 34 ",{"fg":3,"bold":true}],["  test.cpp        ",{}]],"34":[["~                   ",{"fg":4,"bold":true}],["|",{"inverse":true}],[" 58 ",{"fg":3,"bold":true}],["                                                *g:calendar_focus_today*                                        ",{}],["|",{"inverse":true}],[" 35 ",{"fg":3,"bold":true}],["  .test.cpp.swp   ",{}]],"35":[["~                   ",{"fg":4,"bold":true}],["|",{"inverse":true}],[" 59 ",{"fg":3,"bold":true}],["Keeps focus when moving to next or previous calendar: >                                                         ",{}],["|",{"inverse":true}],["~                     ",{"fg":4,"bold":true}]],"36":[["~                   ",{"fg":4,"bold":true}],["|",{"inverse":true}],[" 60 ",{"fg":3,"bold":true}],["  let g:calendar_focus_today = 1                                                                                ",{}],["|",{"inverse":true}],["~                     ",{"fg":4,"bold":true}]],"37":[["~                   ",{"fg":4,"bold":true}],["|",{"inverse":true}],[" 61 ",{"fg":3,"bold":true}],["<                                                                                                               ",{}],["|",{"inverse":true}],["~                     ",{"fg":4,"bold":true}]],"38":[["~                   ",{"fg":4,"bold":true}],["|",{"inverse":true}],[" 62 ",{"fg":3,"bold":true}],["                                                                                                                ",{}],["|",{"inverse":true}],["~                     ",{"fg":4,"bold":true}]],"39":[["~                   ",{"fg":4,"bold":true}],["|",{"inverse":true}],[" 63 ",{"fg":3,"bold":true}],["                                                *g:calendar_keys*                                               ",{}],["|",{"inverse":true}],["~                     ",{"fg":4,"bold":true}]],"40":[["~                   ",{"fg":4,"bold":true}],["|",{"inverse":true}],[" 64 ",{"fg":3,"bold":true}],["To change the key bindings in the calendar window, add entries to this                                          ",{}],["|",{"inverse":true}],["~                     ",{"fg":4,"bold":true}]],"41":[["~                   ",{"fg":4,"bold":true}],["|",{"inverse":true}],[" 65 ",{"fg":3,"bold":true}],["dictionary.   Possible keys, the action bound to the keycode given in the                                       ",{}],["|",{"inverse":true}],["~                     ",{"fg":4,"bold":true}]],"42":[["~                   ",{"fg":4,"bold":true}],["|",{"inverse":true}],[" 66 ",{"fg":3,"bold":true}],["respective value for this key and the default binding are listed below.                                         ",{}],["|",{"inverse":true}],["~                     ",{"fg":4,"bold":true}]],"43":[["~                   ",{"fg":4,"bold":true}],["|",{"inverse":true}],[" 67 ",{"fg":3,"bold":true}],["'close'                     Closes calendar window.             'q'                                             ",{}],["|",{"inverse":true}],["~                     ",{"fg":4,"bold":true}]],"44":[["~                   ",{"fg":4,"bold":true}],["|",{"inverse":true}],[" 68 ",{"fg":3,"bold":true}],["'do_action'                 Executes |calendar_a",{"underline":true}],["ow.             'q'                                             ",{}],["|",{"inverse":true}],["~                     ",{"fg":4,"bold":true}]]},"cursor":{"x":73,"y":44,"visible":false}}],[0.042128,{"lines":{"44":[["~                   ",{"fg":4,"bold":true}],["|",{"inverse":true}],[" 68 ",{"fg":3,"bold":true}],["'do_action'                 Executes |calendar_action|.           '<CR>'                                        ",{}],["|",{"inverse":true}],["~                     ",{"fg":4,"bold":true}]],"45":[["~                   ",{"fg":4,"bold":true}],["|",{"inverse":true}],[" 69 ",{"fg":3,"bold":true}],["'goto_today'                Executes |calendar_today|.            't'                                           ",{"underline":true}],["|",{"inverse":true}],["~                     ",{"fg":4,"bold":true}]],"46":[["[Name] test.cpp      ",{"inverse":true}],[" NORMAL ",{"bold":true}],[" ",{}],["calendar.txt ",{"bold":true}],["                                                        unix │ utf-8 │ text │  31% ",{}],[" LN  69",{"bold":true}],[":1  ",{}],[" ",{"bold":true,"inverse":true}],[" ~/…/calendar-vim/doc>",{"bold":true}]]},"cursor":{"x":25,"y":45,"visible":true}}],[0.00428,{"lines":{"0":[["\" Press <F1> for hel",{"fg":6,"bold":true}],["|",{"inverse":true}],[" 25 ",{"fg":3,"bold":true}],["                          year.  When both [year] and [month] are omitted, the                                  ",{}],["|",{"inverse":true}],["  1 ",{"fg":3,"bold":true}],["\" Press ? for help",{"fg":5,"bold":true}]],"1":[["                    ",{}],["|",{"inverse":true}],[" 26 ",{"fg":3,"bold":true}],["                          calendar will show the current month.                                                 ",{}],["|",{"inverse":true}],["  2 ",{"fg":3,"bold":true}],["                  ",{}]],"2":[["▼",{"fg":3,"bold":true}],[" First",{"fg":5,"bold":true}],[" : ",{}],["struct",{"fg":2,"bold":true}],["    ",{}],["|",{"inverse":true}],[" 27 ",{"fg":3,"bold":true}],["                                                                                                                ",{}],["|",{"inverse":true}],["  3 ",{"fg":3,"bold":true}],[".. (up a dir)",{"fg":6,"bold":true}],["     ",{}]],"3":[["    [prototypes]",{"fg":6,"bold":true}],["    ",{}],["|",{"inverse":true}],[" 28 ",{"fg":3,"bold":true}],["                                                *calendar-:CalendarT*                                           ",{}],["|",{"inverse":true}],["  4 /root/",{"fg":3,"bold":true}],["            ",{}]],"4":[["   ",{}],["+",{"fg":2,"bold":true}],["FirstRun(void)  ",{}],["|",{"inverse":true}],[" 29 ",{"fg":3,"bold":true}],[":CalendarT [[year] month] Show calendar at this year and this month in a                                        ",{}],["|",{"inverse":true}],["  5 ",{"fg":3,"bold":true}],["▸ .asciinema/",{"fg":6,"bold":true}],["     ",{}]],"5":[["   ",{}],["+",{"fg":2,"bold":true}],["FirstRun2(void) ",{}],["|",{"inverse":true}],[" 30 ",{"fg":3,"bold":true}],["                          full-screen window.  When [year] is omitted, the                                      ",{}],["|",{"inverse":true}],["  6 ",{"fg":3,"bold":true}],["▸ .cache/",{"fg":6,"bold":true}],["         ",{}]],"6":[["                    ",{}],["|",{"inverse":true}],[" 31 ",{"fg":3,"bold":true}],["                          calendar will show the given month in the current                                     ",{}],["|",{"inverse":true}],["  7 ",{"fg":3,"bold":true}],["▸ .config/",{"fg":6,"bold":true}],["        ",{}]],"7":[["▼",{"fg":3,"bold":true}],[" Last",{"fg":5,"bold":true}],[" : ",{}],["struct",{"fg":2,"bold":true}],["     ",{}],["|",{"inverse":true}],[" 32 ",{"fg":3,"bold":true}],["                          year.  When both [year] and [month] are omitted, the                                  ",{}],["|",{"inverse":true}],["  8 ",{"fg":3,"bold":true}],["▸ .dbus/",{"fg":6,"bold":true}],["          ",{}]],"8":[["    [functions]",{"fg":6,"bold":true}],["     ",{}],["|",{"inverse":true}],[" 33 ",{"fg":3,"bold":true}],["                          calendar will show the current month.                                                 ",{}],["|",{"inverse":true}],["  9 ",{"fg":3,"bold":true}],["▸ .gnupg/",{"fg":6,"bold":true}],["         ",{}]],"9":[["   ",{}],["+",{"fg":2,"bold":true}],["FirstRun(void)  ",{}],["|",{"inverse":true}],[" 34 ",{"fg":3,"bold":true}],["                                                                                                                ",{}],["|",{"inverse":true}],[" 10 ",{"fg":3,"bold":true}],["▸ .kde/",{"fg":6,"bold":true}],["           ",{}]],"10":[["   ",{}],["+",{"fg":2,"bold":true}],["FirstRun2(void) ",{}],["|",{"inverse":true}],[" 35 ",{"fg":3,"bold":true}],["                                                *calendar-:CalendarVR*                                          ",{}],["|",{"inverse":true}],[" 11 ",{"fg":3,"bold":true}],["▸ .local/",{"fg":6,"bold":true}],["         ",{}]],"11":[["   ",{}],["+",{"fg":2,"bold":true}],["~Last()         ",{}],["|",{"inverse":true}],[" 36 ",{"fg":3,"bold":true}],[":CalendarVR [[year] month]  Show calendar at this year and this month in a                                      ",{}],["|",{"inverse":true}],[" 12 ",{"fg":3,"bold":true}],["▸ .pki/",{"fg":6,"bold":true}],["           ",{}]],"12":[["   ",{}],["+",{"fg":2,"bold":true}],["SecondRun(void) ",{}],["|",{"inverse":true}],[" 37 ",{"fg":3,"bold":true}],["                          vertical split at the right site.  When [year] is                                     ",{}],["|",{"inverse":true}],[" 13 ",{"fg":3,"bold":true}],["▸ .ssh/",{"fg":6,"bold":true}],["           ",{}]],"13":[["   ",{}],["+",{"fg":2,"bold":true}],["SecondRun2(void)",{}],["|",{"inverse":true}],[" 38 ",{"fg":3,"bold":true}],["                          omitted, the calendar will show the given month in                                    ",{}],["|",{"inverse":true}],[" 14 ",{"fg":3,"bold":true}],["▸ .vim/",{"fg":6,"bold":true}],["           ",{}]],"14":[["                    ",{}],["|",{"inverse":true}],[" 39 ",{"fg":3,"bold":true}],["                          the current year.  When both [year] and [month] are                                   ",{}],["|",{"inverse":true}],[" 15 ",{"fg":3,"bold":true}],["▸ diary/",{"fg":6,"bold":true}],["          ",{}]],"15":[["▼",{"fg":3,"bold":true}],[" Second",{"fg":5,"bold":true}],[" : ",{}],["struct",{"fg":2,"bold":true}],["   ",{}],["|",{"inverse":true}],[" 40 ",{"fg":3,"bold":true}],["                          omitted, the calendar will show the current month.                                    ",{}],["|",{"inverse":true}],[" 16 ",{"fg":3,"bold":true}],["▸ temp/",{"fg":6,"bold":true}],["           ",{}]],"16":[["    [prototypes]",{"fg":6,"bold":true}],["    ",{}],["|",{"inverse":true}],[" 41 ",{"fg":3,"bold":true}],["                                                                                                                ",{}],["|",{"inverse":true}],[" 17 ",{"fg":3,"bold":true}],["  .bash_history   ",{}]],"17":[["   ",{}],["+",{"fg":2,"bold":true}],["SecondRun(void) ",{}],["|",{"inverse":true}],[" 42 ",{"fg":3,"bold":true}],["MAPPINGS                                        *calendar-mappings*                                             ",{}],["|",{"inverse":true}],[" 18 ",{"fg":3,"bold":true}],["  .bash_logout    ",{}]],"18":[["   ",{}],["+",{"fg":2,"bold":true}],["SecondRun2(void)",{}],["|",{"inverse":true}],[" 43 ",{"fg":3,"bold":true}],["                                                                                                                ",{}],["|",{"inverse":true}],[" 19 ",{"fg":3,"bold":true}],["  .bash_profile   ",{"underline":true}]],"19":[["                    ",{}],["|",{"inverse":true}],[" 44 ",{"fg":3,"bold":true}],["calendar.vim makes the following normal mode mappings available:                                                ",{}],["|",{"inverse":true}],[" 20 ",{"fg":3,"bold":true}],["  .bashrc         ",{}]],"20":[["▼",{"fg":3,"bold":true}],[" ",{}],["functions",{"fg":6,"bold":true}],["         ",{}],["|",{"inverse":true}],[" 45 ",{"fg":3,"bold":true}],["                                                                                                                ",{}],["|",{"inverse":true}],[" 21 ",{"fg":3,"bold":true}],["  .cshrc          ",{}]],"21":[["    main(int argc, c",{"underline":true}],["|",{"inverse":true}],[" 46 ",{"fg":3,"bold":true}],["                                                *calendar-cal*                                                  ",{}],["|",{"inverse":true}],[" 22 ",{"fg":3,"bold":true}],["  .dmrc           ",{}]],"22":[["~                   ",{"fg":4,"bold":true}],["|",{"inverse":true}],[" 47 ",{"fg":3,"bold":true}],["<LocalLeader>cal          Brings up the calendar in a vertical split.                                           ",{}],["|",{"inverse":true}],[" 23 ",{"fg":3,"bold":true}],["  .esd_auth       ",{}]],"23":[["~                   ",{"fg":4,"bold":true}],["|",{"inverse":true}],[" 48 ",{"fg":3,"bold":true}],["                          Equivalent to calling |:Calendar|.                                                    ",{}],["|",{"inverse":true}],[" 24 ",{"fg":3,"bold":true}],["  .gtkrc-2.0      ",{}]],"24":[["~                   ",{"fg":4,"bold":true}],["|",{"inverse":true}],[" 49 ",{"fg":3,"bold":true}],["                                                                                                                ",{}],["|",{"inverse":true}],[" 25 ",{"fg":3,"bold":true}],["  .gtkrc-2.0-kde4 ",{}]],"25":[["~                   ",{"fg":4,"bold":true}],["|",{"inverse":true}],[" 50 ",{"fg":3,"bold":true}],["                                                *calendar-caL*                                                  ",{}],["|",{"inverse":true}],[" 26 ",{"fg":3,"bold":true}],["  .lesshst        ",{}]],"26":[["~                   ",{"fg":4,"bold":true}],["|",{"inverse":true}],[" 51 ",{"fg":3,"bold":true}],["<LocalLeader>",{}],["caL ",{"bg":1}],["        ",{}],[" Bri",{"bg":1}],["ngs up the calendar in a horizontal split.                                         ",{}],["|",{"inverse":true}],[" 27 ",{"fg":3,"bold":true}],["  .tcshrc         ",{}]],"27":[["~                   ",{"fg":4,"bold":true}],["|",{"inverse":true}],[" 52 ",{"fg":3,"bold":true}],["                          Equivalent to calling |:CalendarH|.                                                   ",{}],["|",{"inverse":true}],[" 28 ",{"fg":3,"bold":true}],["  .viminfo        ",{}]],"28":[["~                   ",{"fg":4,"bold":true}],["|",{"inverse":true}],[" 53 ",{"fg":3,"bold":true}],["                                                                                                                ",{}],["|",{"inverse":true}],[" 29 ",{"fg":3,"bold":true}],["  .vimrc          ",{}]],"29":[["~                   ",{"fg":4,"bold":true}],["|",{"inverse":true}],[" 54 ",{"fg":3,"bold":true}],["SETTINGS                                        *calendar-settings*                                             ",{}],["|",{"inverse":true}],[" 30 ",{"fg":3,"bold":true}],["  .xsession-errors",{}]],"30":[["~                   ",{"fg":4,"bold":true}],["|",{"inverse":true}],[" 55 ",{"fg":3,"bold":true}],["                                                                                                                ",{}],["|",{"inverse":true}],[" 31 ",{"fg":3,"bold":true}],["  anaconda-ks.cfg ",{}]],"31":[["~                   ",{"fg":4,"bold":true}],["|",{"inverse":true}],[" 56 ",{"fg":3,"bold":true}],["calendar.vim can be con",{}],["figured using the following sett",{"bg":1}],["ings:                                                    ",{}],["|",{"inverse":true}],[" 32 ",{"fg":3,"bold":true}],["  initial-setup-ks",{}]],"32":[["~                   ",{"fg":4,"bold":true}],["|",{"inverse":true}],[" 57 ",{"fg":3,"bold":true}],["                                                                                                                ",{}],["|",{"inverse":true}],[" 33 ",{"fg":3,"bold":true}],["  test.c          ",{}]],"33":[["~                   ",{"fg":4,"bold":true}],["|",{"inverse":true}],[" 58 ",{"fg":3,"bold":true}],["                                                *g:calendar_focus_today*                                        ",{}],["|",{"inverse":true}],[" 34 ",{"fg":3,"bold":true}],["  test.cpp        ",{}]],"34":[["~                   ",{"fg":4,"bold":true}],["|",{"inverse":true}],[" 59 ",{"fg":3,"bold":true}],["Keeps focus when moving to next or previous calendar: >                                                         ",{}],["|",{"inverse":true}],[" 35 ",{"fg":3,"bold":true}],["  .test.cpp.swp   ",{}]],"35":[["~                   ",{"fg":4,"bold":true}],["|",{"inverse":true}],[" 60 ",{"fg":3,"bold":true}],["  let g:calendar_focus_today = 1                                                                                ",{}],["|",{"inverse":true}],["~                     ",{"fg":4,"bold":true}]],"36":[["~                   ",{"fg":4,"bold":true}],["|",{"inverse":true}],[" 61 ",{"fg":3,"bold":true}],["<                                                                                                               ",{}],["|",{"inverse":true}],["~                     ",{"fg":4,"bold":true}]],"37":[["~                   ",{"fg":4,"bold":true}],["|",{"inverse":true}],[" 62 ",{"fg":3,"bold":true}],["                                                                                                                ",{}],["|",{"inverse":true}],["~                     ",{"fg":4,"bold":true}]],"38":[["~                   ",{"fg":4,"bold":true}],["|",{"inverse":true}],[" 63 ",{"fg":3,"bold":true}],["                                                *g:calendar_keys*                                               ",{}],["|",{"inverse":true}],["~                     ",{"fg":4,"bold":true}]],"39":[["~                   ",{"fg":4,"bold":true}],["|",{"inverse":true}],[" 64 ",{"fg":3,"bold":true}],["To change the key bindings in the calendar window, add entries to this                                          ",{}],["|",{"inverse":true}],["~                     ",{"fg":4,"bold":true}]],"40":[["~                   ",{"fg":4,"bold":true}],["|",{"inverse":true}],[" 65 ",{"fg":3,"bold":true}],["dictionary.   Possible keys, the action bound to the keycode given in the                                       ",{}],["|",{"inverse":true}],["~                     ",{"fg":4,"bold":true}]],"41":[["~                   ",{"fg":4,"bold":true}],["|",{"inverse":true}],[" 66 ",{"fg":3,"bold":true}],["respective value for this key and the default binding are listed below.                                         ",{}],["|",{"inverse":true}],["~                     ",{"fg":4,"bold":true}]],"42":[["~                   ",{"fg":4,"bold":true}],["|",{"inverse":true}],[" 67 ",{"fg":3,"bold":true}],["'close'                     Closes calendar window.             'q'                                             ",{}],["|",{"inverse":true}],["~                     ",{"fg":4,"bold":true}]],"43":[["~                   ",{"fg":4,"bold":true}],["|",{"inverse":true}],[" 68 ",{"fg":3,"bold":true}],["'do_action'                 Executes |calendar_action|.           '<CR>'                                        ",{}],["|",{"inverse":true}],["~                     ",{"fg":4,"bold":true}]],"44":[["~                   ",{"fg":4,"bold":true}],["|",{"inverse":true}],[" 69 ",{"fg":3,"bold":true}],["'goto_today'                Executes |calendar_t",{"underline":true}],["ction|.           '<CR>'                                        ",{}],["|",{"inverse":true}],["~                     ",{"fg":4,"bold":true}]]},"cursor":{"x":73,"y":44,"visible":false}}],[0.019521,{"lines":{"44":[["~                   ",{"fg":4,"bold":true}],["|",{"inverse":true}],[" 69 ",{"fg":3,"bold":true}],["'goto_today'                Executes |calendar_today|.            't'                                           ",{}],["|",{"inverse":true}],["~                     ",{"fg":4,"bold":true}]],"45":[["~                   ",{"fg":4,"bold":true}],["|",{"inverse":true}],[" 70 ",{"fg":3,"bold":true}],["'show_help'                 Displays a short help message.      '?'                                             ",{"underline":true}],["|",{"inverse":true}],["~                     ",{"fg":4,"bold":true}]],"46":[["[Name] test.cpp      ",{"inverse":true}],[" NORMAL ",{"bold":true}],[" ",{}],["calendar.txt ",{"bold":true}],["                                                        unix │ utf-8 │ text │  31% ",{}],[" LN  70",{"bold":true}],[":1  ",{}],[" ",{"bold":true,"inverse":true}],[" ~/…/calendar-vim/doc>",{"bold":true}]]},"cursor":{"x":25,"y":45,"visible":true}}],[0.004051,{"lines":{"0":[["\" Press <F1> for hel",{"fg":6,"bold":true}],["|",{"inverse":true}],[" 26 ",{"fg":3,"bold":true}],["                          calendar will show the current month.                                                 ",{}],["|",{"inverse":true}],["  1 ",{"fg":3,"bold":true}],["\" Press ? for help",{"fg":5,"bold":true}]],"1":[["                    ",{}],["|",{"inverse":true}],[" 27 ",{"fg":3,"bold":true}],["                                                                                                                ",{}],["|",{"inverse":true}],["  2 ",{"fg":3,"bold":true}],["                  ",{}]],"2":[["▼",{"fg":3,"bold":true}],[" First",{"fg":5,"bold":true}],[" : ",{}],["struct",{"fg":2,"bold":true}],["    ",{}],["|",{"inverse":true}],[" 28 ",{"fg":3,"bold":true}],["                                                *calendar-:CalendarT*                                           ",{}],["|",{"inverse":true}],["  3 ",{"fg":3,"bold":true}],[".. (up a dir)",{"fg":6,"bold":true}],["     ",{}]],"3":[["    [prototypes]",{"fg":6,"bold":true}],["    ",{}],["|",{"inverse":true}],[" 29 ",{"fg":3,"bold":true}],[":CalendarT [[year] month] Show calendar at this year and this month in a                                        ",{}],["|",{"inverse":true}],["  4 /root/",{"fg":3,"bold":true}],["            ",{}]],"4":[["   ",{}],["+",{"fg":2,"bold":true}],["FirstRun(void)  ",{}],["|",{"inverse":true}],[" 30 ",{"fg":3,"bold":true}],["                          full-screen window.  When [year] is omitted, the                                      ",{}],["|",{"inverse":true}],["  5 ",{"fg":3,"bold":true}],["▸ .asciinema/",{"fg":6,"bold":true}],["     ",{}]],"5":[["   ",{}],["+",{"fg":2,"bold":true}],["FirstRun2(void) ",{}],["|",{"inverse":true}],[" 31 ",{"fg":3,"bold":true}],["                          calendar will show the given month in the current                                     ",{}],["|",{"inverse":true}],["  6 ",{"fg":3,"bold":true}],["▸ .cache/",{"fg":6,"bold":true}],["         ",{}]],"6":[["                    ",{}],["|",{"inverse":true}],[" 32 ",{"fg":3,"bold":true}],["                          year.  When both [year] and [month] are omitted, the                                  ",{}],["|",{"inverse":true}],["  7 ",{"fg":3,"bold":true}],["▸ .config/",{"fg":6,"bold":true}],["        ",{}]],"7":[["▼",{"fg":3,"bold":true}],[" Last",{"fg":5,"bold":true}],[" : ",{}],["struct",{"fg":2,"bold":true}],["     ",{}],["|",{"inverse":true}],[" 33 ",{"fg":3,"bold":true}],["                          calendar will show the current month.                                                 ",{}],["|",{"inverse":true}],["  8 ",{"fg":3,"bold":true}],["▸ .dbus/",{"fg":6,"bold":true}],["          ",{}]],"8":[["    [functions]",{"fg":6,"bold":true}],["     ",{}],["|",{"inverse":true}],[" 34 ",{"fg":3,"bold":true}],["                                                                                                                ",{}],["|",{"inverse":true}],["  9 ",{"fg":3,"bold":true}],["▸ .gnupg/",{"fg":6,"bold":true}],["         ",{}]],"9":[["   ",{}],["+",{"fg":2,"bold":true}],["FirstRun(void)  ",{}],["|",{"inverse":true}],[" 35 ",{"fg":3,"bold":true}],["                                                *calendar-:CalendarVR*                                          ",{}],["|",{"inverse":true}],[" 10 ",{"fg":3,"bold":true}],["▸ .kde/",{"fg":6,"bold":true}],["           ",{}]],"10":[["   ",{}],["+",{"fg":2,"bold":true}],["FirstRun2(void) ",{}],["|",{"inverse":true}],[" 36 ",{"fg":3,"bold":true}],[":CalendarVR [[year] month]  Show calendar at this year and this month in a                                      ",{}],["|",{"inverse":true}],[" 11 ",{"fg":3,"bold":true}],["▸ .local/",{"fg":6,"bold":true}],["         ",{}]],"11":[["   ",{}],["+",{"fg":2,"bold":true}],["~Last()         ",{}],["|",{"inverse":true}],[" 37 ",{"fg":3,"bold":true}],["                          vertical split at the right site.  When [year] is                                     ",{}],["|",{"inverse":true}],[" 12 ",{"fg":3,"bold":true}],["▸ .pki/",{"fg":6,"bold":true}],["           ",{}]],"12":[["   ",{}],["+",{"fg":2,"bold":true}],["SecondRun(void) ",{}],["|",{"inverse":true}],[" 38 ",{"fg":3,"bold":true}],["                          omitted, the calendar will show the given month in                                    ",{}],["|",{"inverse":true}],[" 13 ",{"fg":3,"bold":true}],["▸ .ssh/",{"fg":6,"bold":true}],["           ",{}]],"13":[["   ",{}],["+",{"fg":2,"bold":true}],["SecondRun2(void)",{}],["|",{"inverse":true}],[" 39 ",{"fg":3,"bold":true}],["                          the current year.  When both [year] and [month] are                                   ",{}],["|",{"inverse":true}],[" 14 ",{"fg":3,"bold":true}],["▸ .vim/",{"fg":6,"bold":true}],["           ",{}]],"14":[["                    ",{}],["|",{"inverse":true}],[" 40 ",{"fg":3,"bold":true}],["                          omitted, the calendar will show the current month.                                    ",{}],["|",{"inverse":true}],[" 15 ",{"fg":3,"bold":true}],["▸ diary/",{"fg":6,"bold":true}],["          ",{}]],"15":[["▼",{"fg":3,"bold":true}],[" Second",{"fg":5,"bold":true}],[" : ",{}],["struct",{"fg":2,"bold":true}],["   ",{}],["|",{"inverse":true}],[" 41 ",{"fg":3,"bold":true}],["                                                                                                                ",{}],["|",{"inverse":true}],[" 16 ",{"fg":3,"bold":true}],["▸ temp/",{"fg":6,"bold":true}],["           ",{}]],"16":[["    [prototypes]",{"fg":6,"bold":true}],["    ",{}],["|",{"inverse":true}],[" 42 ",{"fg":3,"bold":true}],["MAPPINGS                                        *calendar-mappings*                                             ",{}],["|",{"inverse":true}],[" 17 ",{"fg":3,"bold":true}],["  .bash_history   ",{}]],"17":[["   ",{}],["+",{"fg":2,"bold":true}],["SecondRun(void) ",{}],["|",{"inverse":true}],[" 43 ",{"fg":3,"bold":true}],["                                                                                                                ",{}],["|",{"inverse":true}],[" 18 ",{"fg":3,"bold":true}],["  .bash_logout    ",{}]],"18":[["   ",{}],["+",{"fg":2,"bold":true}],["SecondRun2(void)",{}],["|",{"inverse":true}],[" 44 ",{"fg":3,"bold":true}],["calendar.vim makes the following normal mode mappings available:                                                ",{}],["|",{"inverse":true}],[" 19 ",{"fg":3,"bold":true}],["  .bash_profile   ",{"underline":true}]],"19":[["                    ",{}],["|",{"inverse":true}],[" 45 ",{"fg":3,"bold":true}],["                                                                                                                ",{}],["|",{"inverse":true}],[" 20 ",{"fg":3,"bold":true}],["  .bashrc         ",{}]],"20":[["▼",{"fg":3,"bold":true}],[" ",{}],["functions",{"fg":6,"bold":true}],["         ",{}],["|",{"inverse":true}],[" 46 ",{"fg":3,"bold":true}],["                                                *calendar-cal*                                                  ",{}],["|",{"inverse":true}],[" 21 ",{"fg":3,"bold":true}],["  .cshrc          ",{}]],"21":[["    main(int argc, c",{"underline":true}],["|",{"inverse":true}],[" 47 ",{"fg":3,"bold":true}],["<LocalLeader>cal          Brings up the calendar in a vertical split.                                           ",{}],["|",{"inverse":true}],[" 22 ",{"fg":3,"bold":true}],["  .dmrc           ",{}]],"22":[["~                   ",{"fg":4,"bold":true}],["|",{"inverse":true}],[" 48 ",{"fg":3,"bold":true}],["                          Equivalent to calling |:Calendar|.                                                    ",{}],["|",{"inverse":true}],[" 23 ",{"fg":3,"bold":true}],["  .esd_auth       ",{}]],"23":[["~                   ",{"fg":4,"bold":true}],["|",{"inverse":true}],[" 49 ",{"fg":3,"bold":true}],["                                                                                                                ",{}],["|",{"inverse":true}],[" 24 ",{"fg":3,"bold":true}],["  .gtkrc-2.0      ",{}]],"24":[["~                   ",{"fg":4,"bold":true}],["|",{"inverse":true}],[" 50 ",{"fg":3,"bold":true}],["                                                *calendar-caL*                                                  ",{}],["|",{"inverse":true}],[" 25 ",{"fg":3,"bold":true}],["  .gtkrc-2.0-kde4 ",{}]],"25":[["~                   ",{"fg":4,"bold":true}],["|",{"inverse":true}],[" 51 ",{"fg":3,"bold":true}],["<LocalLeader>",{}],["caL ",{"bg":1}],["        ",{}],[" Bri",{"bg":1}],["ngs up the calendar in a horizontal split.                                         ",{}],["|",{"inverse":true}],[" 26 ",{"fg":3,"bold":true}],["  .lesshst        ",{}]],"26":[["~                   ",{"fg":4,"bold":true}],["|",{"inverse":true}],[" 52 ",{"fg":3,"bold":true}],["                          Equivalent to calling |:CalendarH|.                                                   ",{}],["|",{"inverse":true}],[" 27 ",{"fg":3,"bold":true}],["  .tcshrc         ",{}]],"27":[["~                   ",{"fg":4,"bold":true}],["|",{"inverse":true}],[" 53 ",{"fg":3,"bold":true}],["                                                                                                                ",{}],["|",{"inverse":true}],[" 28 ",{"fg":3,"bold":true}],["  .viminfo        ",{}]],"28":[["~                   ",{"fg":4,"bold":true}],["|",{"inverse":true}],[" 54 ",{"fg":3,"bold":true}],["SETTINGS                                        *calendar-settings*                                             ",{}],["|",{"inverse":true}],[" 29 ",{"fg":3,"bold":true}],["  .vimrc          ",{}]],"29":[["~                   ",{"fg":4,"bold":true}],["|",{"inverse":true}],[" 55 ",{"fg":3,"bold":true}],["                                                                                                                ",{}],["|",{"inverse":true}],[" 30 ",{"fg":3,"bold":true}],["  .xsession-errors",{}]],"30":[["~                   ",{"fg":4,"bold":true}],["|",{"inverse":true}],[" 56 ",{"fg":3,"bold":true}],["calendar.vim can be con",{}],["figured using the following sett",{"bg":1}],["ings:                                                    ",{}],["|",{"inverse":true}],[" 31 ",{"fg":3,"bold":true}],["  anaconda-ks.cfg ",{}]],"31":[["~                   ",{"fg":4,"bold":true}],["|",{"inverse":true}],[" 57 ",{"fg":3,"bold":true}],["                                                                                                                ",{}],["|",{"inverse":true}],[" 32 ",{"fg":3,"bold":true}],["  initial-setup-ks",{}]],"32":[["~                   ",{"fg":4,"bold":true}],["|",{"inverse":true}],[" 58 ",{"fg":3,"bold":true}],["                                                *g:calendar_focus_today*                                        ",{}],["|",{"inverse":true}],[" 33 ",{"fg":3,"bold":true}],["  test.c          ",{}]],"33":[["~                   ",{"fg":4,"bold":true}],["|",{"inverse":true}],[" 59 ",{"fg":3,"bold":true}],["Keeps focus when moving to next or previous calendar: >                                                         ",{}],["|",{"inverse":true}],[" 34 ",{"fg":3,"bold":true}],["  test.cpp        ",{}]],"34":[["~                   ",{"fg":4,"bold":true}],["|",{"inverse":true}],[" 60 ",{"fg":3,"bold":true}],["  let g:calendar_focus_today = 1                                                                                ",{}],["|",{"inverse":true}],[" 35 ",{"fg":3,"bold":true}],["  .test.cpp.swp   ",{}]],"35":[["~                   ",{"fg":4,"bold":true}],["|",{"inverse":true}],[" 61 ",{"fg":3,"bold":true}],["<                                                                                                               ",{}],["|",{"inverse":true}],["~                     ",{"fg":4,"bold":true}]],"36":[["~                   ",{"fg":4,"bold":true}],["|",{"inverse":true}],[" 62 ",{"fg":3,"bold":true}],["                                                                                                                ",{}],["|",{"inverse":true}],["~                     ",{"fg":4,"bold":true}]],"37":[["~                   ",{"fg":4,"bold":true}],["|",{"inverse":true}],[" 63 ",{"fg":3,"bold":true}],["                                                *g:calendar_keys*                                               ",{}],["|",{"inverse":true}],["~                     ",{"fg":4,"bold":true}]],"38":[["~                   ",{"fg":4,"bold":true}],["|",{"inverse":true}],[" 64 ",{"fg":3,"bold":true}],["To change the key bindings in the calendar window, add entries to this                                          ",{}],["|",{"inverse":true}],["~                     ",{"fg":4,"bold":true}]],"39":[["~                   ",{"fg":4,"bold":true}],["|",{"inverse":true}],[" 65 ",{"fg":3,"bold":true}],["dictionary.   Possible keys, the action bound to the keycode given in the                                       ",{}],["|",{"inverse":true}],["~                     ",{"fg":4,"bold":true}]],"40":[["~                   ",{"fg":4,"bold":true}],["|",{"inverse":true}],[" 66 ",{"fg":3,"bold":true}],["respective value for this key and the default binding are listed below.                                         ",{}],["|",{"inverse":true}],["~                     ",{"fg":4,"bold":true}]],"41":[["~                   ",{"fg":4,"bold":true}],["|",{"inverse":true}],[" 67 ",{"fg":3,"bold":true}],["'close'                     Closes calendar window.             'q'                                             ",{}],["|",{"inverse":true}],["~                     ",{"fg":4,"bold":true}]],"42":[["~                   ",{"fg":4,"bold":true}],["|",{"inverse":true}],[" 68 ",{"fg":3,"bold":true}],["'do_action'                 Executes |calendar_action|.           '<CR>'                                        ",{}],["|",{"inverse":true}],["~                     ",{"fg":4,"bold":true}]],"43":[["~                   ",{"fg":4,"bold":true}],["|",{"inverse":true}],[" 69 ",{"fg":3,"bold":true}],["'goto_today'                Executes |calendar_today|.            't'                                           ",{}],["|",{"inverse":true}],["~                     ",{"fg":4,"bold":true}]],"44":[["~                   ",{"fg":4,"bold":true}],["|",{"inverse":true}],[" 70 ",{"fg":3,"bold":true}],["'show_help'                 Displays a short hel",{"underline":true}],["oday|.            't'                                           ",{}],["|",{"inverse":true}],["~                     ",{"fg":4,"bold":true}]]},"cursor":{"x":73,"y":44,"visible":false}}],[0.037953,{"lines":{"44":[["~                   ",{"fg":4,"bold":true}],["|",{"inverse":true}],[" 70 ",{"fg":3,"bold":true}],["'show_help'                 Displays a short help message.      '?'                                             ",{}],["|",{"inverse":true}],["~                     ",{"fg":4,"bold":true}]],"45":[["~                   ",{"fg":4,"bold":true}],["|",{"inverse":true}],[" 71 ",{"fg":3,"bold":true}],["'redisplay'                 Redraws calendar window.            'r'                                             ",{"underline":true}],["|",{"inverse":true}],["~                     ",{"fg":4,"bold":true}]],"46":[["[Name] test.cpp      ",{"inverse":true}],[" NORMAL ",{"bold":true}],[" ",{}],["calendar.txt ",{"bold":true}],["                                                        unix │ utf-8 │ text │  32% ",{}],[" LN  71",{"bold":true}],[":1  ",{}],[" ",{"bold":true,"inverse":true}],[" ~/…/calendar-vim/doc>",{"bold":true}]]},"cursor":{"x":25,"y":45,"visible":true}}],[0.005724999999999999,{"lines":{"0":[["\" Press <F1> for hel",{"fg":6,"bold":true}],["|",{"inverse":true}],[" 27 ",{"fg":3,"bold":true}],["                                                                                                                ",{}],["|",{"inverse":true}],["  1 ",{"fg":3,"bold":true}],["\" Press ? for help",{"fg":5,"bold":true}]],"1":[["                    ",{}],["|",{"inverse":true}],[" 28 ",{"fg":3,"bold":true}],["                                                *calendar-:CalendarT*                                           ",{}],["|",{"inverse":true}],["  2 ",{"fg":3,"bold":true}],["                  ",{}]],"2":[["▼",{"fg":3,"bold":true}],[" First",{"fg":5,"bold":true}],[" : ",{}],["struct",{"fg":2,"bold":true}],["    ",{}],["|",{"inverse":true}],[" 29 ",{"fg":3,"bold":true}],[":CalendarT [[year] month] Show calendar at this year and this month in a                                        ",{}],["|",{"inverse":true}],["  3 ",{"fg":3,"bold":true}],[".. (up a dir)",{"fg":6,"bold":true}],["     ",{}]],"3":[["    [prototypes]",{"fg":6,"bold":true}],["    ",{}],["|",{"inverse":true}],[" 30 ",{"fg":3,"bold":true}],["                          full-screen window.  When [year] is omitted, the                                      ",{}],["|",{"inverse":true}],["  4 /root/",{"fg":3,"bold":true}],["            ",{}]],"4":[["   ",{}],["+",{"fg":2,"bold":true}],["FirstRun(void)  ",{}],["|",{"inverse":true}],[" 31 ",{"fg":3,"bold":true}],["                          calendar will show the given month in the current                                     ",{}],["|",{"inverse":true}],["  5 ",{"fg":3,"bold":true}],["▸ .asciinema/",{"fg":6,"bold":true}],["     ",{}]],"5":[["   ",{}],["+",{"fg":2,"bold":true}],["FirstRun2(void) ",{}],["|",{"inverse":true}],[" 32 ",{"fg":3,"bold":true}],["                          year.  When both [year] and [month] are omitted, the                                  ",{}],["|",{"inverse":true}],["  6 ",{"fg":3,"bold":true}],["▸ .cache/",{"fg":6,"bold":true}],["         ",{}]],"6":[["                    ",{}],["|",{"inverse":true}],[" 33 ",{"fg":3,"bold":true}],["                          calendar will show the current month.                                                 ",{}],["|",{"inverse":true}],["  7 ",{"fg":3,"bold":true}],["▸ .config/",{"fg":6,"bold":true}],["        ",{}]],"7":[["▼",{"fg":3,"bold":true}],[" Last",{"fg":5,"bold":true}],[" : ",{}],["struct",{"fg":2,"bold":true}],["     ",{}],["|",{"inverse":true}],[" 34 ",{"fg":3,"bold":true}],["                                                                                                                ",{}],["|",{"inverse":true}],["  8 ",{"fg":3,"bold":true}],["▸ .dbus/",{"fg":6,"bold":true}],["          ",{}]],"8":[["    [functions]",{"fg":6,"bold":true}],["     ",{}],["|",{"inverse":true}],[" 35 ",{"fg":3,"bold":true}],["                                                *calendar-:CalendarVR*                                          ",{}],["|",{"inverse":true}],["  9 ",{"fg":3,"bold":true}],["▸ .gnupg/",{"fg":6,"bold":true}],["         ",{}]],"9":[["   ",{}],["+",{"fg":2,"bold":true}],["FirstRun(void)  ",{}],["|",{"inverse":true}],[" 36 ",{"fg":3,"bold":true}],[":CalendarVR [[year] month]  Show calendar at this year and this month in a                                      ",{}],["|",{"inverse":true}],[" 10 ",{"fg":3,"bold":true}],["▸ .kde/",{"fg":6,"bold":true}],["           ",{}]],"10":[["   ",{}],["+",{"fg":2,"bold":true}],["FirstRun2(void) ",{}],["|",{"inverse":true}],[" 37 ",{"fg":3,"bold":true}],["                          vertical split at the right site.  When [year] is                                     ",{}],["|",{"inverse":true}],[" 11 ",{"fg":3,"bold":true}],["▸ .local/",{"fg":6,"bold":true}],["         ",{}]],"11":[["   ",{}],["+",{"fg":2,"bold":true}],["~Last()         ",{}],["|",{"inverse":true}],[" 38 ",{"fg":3,"bold":true}],["                          omitted, the calendar will show the given month in                                    ",{}],["|",{"inverse":true}],[" 12 ",{"fg":3,"bold":true}],["▸ .pki/",{"fg":6,"bold":true}],["           ",{}]],"12":[["   ",{}],["+",{"fg":2,"bold":true}],["SecondRun(void) ",{}],["|",{"inverse":true}],[" 39 ",{"fg":3,"bold":true}],["                          the current year.  When both [year] and [month] are                                   ",{}],["|",{"inverse":true}],[" 13 ",{"fg":3,"bold":true}],["▸ .ssh/",{"fg":6,"bold":true}],["           ",{}]],"13":[["   ",{}],["+",{"fg":2,"bold":true}],["SecondRun2(void)",{}],["|",{"inverse":true}],[" 40 ",{"fg":3,"bold":true}],["                          omitted, the calendar will show the current month.                                    ",{}],["|",{"inverse":true}],[" 14 ",{"fg":3,"bold":true}],["▸ .vim/",{"fg":6,"bold":true}],["           ",{}]],"14":[["                    ",{}],["|",{"inverse":true}],[" 41 ",{"fg":3,"bold":true}],["                                                                                                                ",{}],["|",{"inverse":true}],[" 15 ",{"fg":3,"bold":true}],["▸ diary/",{"fg":6,"bold":true}],["          ",{}]],"15":[["▼",{"fg":3,"bold":true}],[" Second",{"fg":5,"bold":true}],[" : ",{}],["struct",{"fg":2,"bold":true}],["   ",{}],["|",{"inverse":true}],[" 42 ",{"fg":3,"bold":true}],["MAPPINGS                                        *calendar-mappings*                                             ",{}],["|",{"inverse":true}],[" 16 ",{"fg":3,"bold":true}],["▸ temp/",{"fg":6,"bold":true}],["           ",{}]],"16":[["    [prototypes]",{"fg":6,"bold":true}],["    ",{}],["|",{"inverse":true}],[" 43 ",{"fg":3,"bold":true}],["                                                                                                                ",{}],["|",{"inverse":true}],[" 17 ",{"fg":3,"bold":true}],["  .bash_history   ",{}]],"17":[["   ",{}],["+",{"fg":2,"bold":true}],["SecondRun(void) ",{}],["|",{"inverse":true}],[" 44 ",{"fg":3,"bold":true}],["calendar.vim makes the following normal mode mappings available:                                                ",{}],["|",{"inverse":true}],[" 18 ",{"fg":3,"bold":true}],["  .bash_logout    ",{}]],"18":[["   ",{}],["+",{"fg":2,"bold":true}],["SecondRun2(void)",{}],["|",{"inverse":true}],[" 45 ",{"fg":3,"bold":true}],["                                                                                                                ",{}],["|",{"inverse":true}],[" 19 ",{"fg":3,"bold":true}],["  .bash_profile   ",{"underline":true}]],"19":[["                    ",{}],["|",{"inverse":true}],[" 46 ",{"fg":3,"bold":true}],["                                                *calendar-cal*                                                  ",{}],["|",{"inverse":true}],[" 20 ",{"fg":3,"bold":true}],["  .bashrc         ",{}]],"20":[["▼",{"fg":3,"bold":true}],[" ",{}],["functions",{"fg":6,"bold":true}],["         ",{}],["|",{"inverse":true}],[" 47 ",{"fg":3,"bold":true}],["<LocalLeader>cal          Brings up the calendar in a vertical split.                                           ",{}],["|",{"inverse":true}],[" 21 ",{"fg":3,"bold":true}],["  .cshrc          ",{}]],"21":[["    main(int argc, c",{"underline":true}],["|",{"inverse":true}],[" 48 ",{"fg":3,"bold":true}],["                          Equivalent to calling |:Calendar|.                                                    ",{}],["|",{"inverse":true}],[" 22 ",{"fg":3,"bold":true}],["  .dmrc           ",{}]],"22":[["~                   ",{"fg":4,"bold":true}],["|",{"inverse":true}],[" 49 ",{"fg":3,"bold":true}],["                                                                                                                ",{}],["|",{"inverse":true}],[" 23 ",{"fg":3,"bold":true}],["  .esd_auth       ",{}]],"23":[["~                   ",{"fg":4,"bold":true}],["|",{"inverse":true}],[" 50 ",{"fg":3,"bold":true}],["                                                *calendar-caL*                                                  ",{}],["|",{"inverse":true}],[" 24 ",{"fg":3,"bold":true}],["  .gtkrc-2.0      ",{}]],"24":[["~                   ",{"fg":4,"bold":true}],["|",{"inverse":true}],[" 51 ",{"fg":3,"bold":true}],["<LocalLeader>",{}],["caL ",{"bg":1}],["        ",{}],[" Bri",{"bg":1}],["ngs up the calendar in a horizontal split.                                         ",{}],["|",{"inverse":true}],[" 25 ",{"fg":3,"bold":true}],["  .gtkrc-2.0-kde4 ",{}]],"25":[["~                   ",{"fg":4,"bold":true}],["|",{"inverse":true}],[" 52 ",{"fg":3,"bold":true}],["                          Equivalent to calling |:CalendarH|.                                                   ",{}],["|",{"inverse":true}],[" 26 ",{"fg":3,"bold":true}],["  .lesshst        ",{}]],"26":[["~                   ",{"fg":4,"bold":true}],["|",{"inverse":true}],[" 53 ",{"fg":3,"bold":true}],["                                                                                                                ",{}],["|",{"inverse":true}],[" 27 ",{"fg":3,"bold":true}],["  .tcshrc         ",{}]],"27":[["~                   ",{"fg":4,"bold":true}],["|",{"inverse":true}],[" 54 ",{"fg":3,"bold":true}],["SETTINGS                                        *calendar-settings*                                             ",{}],["|",{"inverse":true}],[" 28 ",{"fg":3,"bold":true}],["  .viminfo        ",{}]],"28":[["~                   ",{"fg":4,"bold":true}],["|",{"inverse":true}],[" 55 ",{"fg":3,"bold":true}],["                                                                                                                ",{}],["|",{"inverse":true}],[" 29 ",{"fg":3,"bold":true}],["  .vimrc          ",{}]],"29":[["~                   ",{"fg":4,"bold":true}],["|",{"inverse":true}],[" 56 ",{"fg":3,"bold":true}],["calendar.vim can be con",{}],["figured using the following sett",{"bg":1}],["ings:                                                    ",{}],["|",{"inverse":true}],[" 30 ",{"fg":3,"bold":true}],["  .xsession-errors",{}]],"30":[["~                   ",{"fg":4,"bold":true}],["|",{"inverse":true}],[" 57 ",{"fg":3,"bold":true}],["                                                                                                                ",{}],["|",{"inverse":true}],[" 31 ",{"fg":3,"bold":true}],["  anaconda-ks.cfg ",{}]],"31":[["~                   ",{"fg":4,"bold":true}],["|",{"inverse":true}],[" 58 ",{"fg":3,"bold":true}],["                                                *g:calendar_focus_today*                                        ",{}],["|",{"inverse":true}],[" 32 ",{"fg":3,"bold":true}],["  initial-setup-ks",{}]],"32":[["~                   ",{"fg":4,"bold":true}],["|",{"inverse":true}],[" 59 ",{"fg":3,"bold":true}],["Keeps focus when moving to next or previous calendar: >                                                         ",{}],["|",{"inverse":true}],[" 33 ",{"fg":3,"bold":true}],["  test.c          ",{}]],"33":[["~                   ",{"fg":4,"bold":true}],["|",{"inverse":true}],[" 60 ",{"fg":3,"bold":true}],["  let g:calendar_focus_today = 1                                                                                ",{}],["|",{"inverse":true}],[" 34 ",{"fg":3,"bold":true}],["  test.cpp        ",{}]],"34":[["~                   ",{"fg":4,"bold":true}],["|",{"inverse":true}],[" 61 ",{"fg":3,"bold":true}],["<                                                                                                               ",{}],["|",{"inverse":true}],[" 35 ",{"fg":3,"bold":true}],["  .test.cpp.swp   ",{}]],"35":[["~                   ",{"fg":4,"bold":true}],["|",{"inverse":true}],[" 62 ",{"fg":3,"bold":true}],["                                                                                                                ",{}],["|",{"inverse":true}],["~                     ",{"fg":4,"bold":true}]],"36":[["~                   ",{"fg":4,"bold":true}],["|",{"inverse":true}],[" 63 ",{"fg":3,"bold":true}],["                                                *g:calendar_keys*                                               ",{}],["|",{"inverse":true}],["~                     ",{"fg":4,"bold":true}]],"37":[["~                   ",{"fg":4,"bold":true}],["|",{"inverse":true}],[" 64 ",{"fg":3,"bold":true}],["To change the key bindings in the calendar window, add entries to this                                          ",{}],["|",{"inverse":true}],["~                     ",{"fg":4,"bold":true}]],"38":[["~                   ",{"fg":4,"bold":true}],["|",{"inverse":true}],[" 65 ",{"fg":3,"bold":true}],["dictionary.   Possible keys, the action bound to the keycode given in the                                       ",{}],["|",{"inverse":true}],["~                     ",{"fg":4,"bold":true}]],"39":[["~                   ",{"fg":4,"bold":true}],["|",{"inverse":true}],[" 66 ",{"fg":3,"bold":true}],["respective value for this key and the default binding are listed below.                                         ",{}],["|",{"inverse":true}],["~                     ",{"fg":4,"bold":true}]],"40":[["~                   ",{"fg":4,"bold":true}],["|",{"inverse":true}],[" 67 ",{"fg":3,"bold":true}],["'close'                     Closes calendar window.             'q'                                             ",{}],["|",{"inverse":true}],["~                     ",{"fg":4,"bold":true}]],"41":[["~                   ",{"fg":4,"bold":true}],["|",{"inverse":true}],[" 68 ",{"fg":3,"bold":true}],["'do_action'                 Executes |calendar_action|.           '<CR>'                                        ",{}],["|",{"inverse":true}],["~                     ",{"fg":4,"bold":true}]],"42":[["~                   ",{"fg":4,"bold":true}],["|",{"inverse":true}],[" 69 ",{"fg":3,"bold":true}],["'goto_today'                Executes |calendar_today|.            't'                                           ",{}],["|",{"inverse":true}],["~                     ",{"fg":4,"bold":true}]],"43":[["~                   ",{"fg":4,"bold":true}],["|",{"inverse":true}],[" 70 ",{"fg":3,"bold":true}],["'show_help'                 Displays a short help message.      '?'                                             ",{}],["|",{"inverse":true}],["~                     ",{"fg":4,"bold":true}]],"44":[["~                   ",{"fg":4,"bold":true}],["|",{"inverse":true}],[" 71 ",{"fg":3,"bold":true}],["'redisplay'                 Redraws cal",{"underline":true}],["short help message.      '?'                                             ",{}],["|",{"inverse":true}],["~                     ",{"fg":4,"bold":true}]]},"cursor":{"x":64,"y":44,"visible":false}}],[0.020289,{"lines":{"44":[["~                   ",{"fg":4,"bold":true}],["|",{"inverse":true}],[" 71 ",{"fg":3,"bold":true}],["'redisplay'                 Redraws calendar window.            'r'                                             ",{}],["|",{"inverse":true}],["~                     ",{"fg":4,"bold":true}]],"45":[["~                   ",{"fg":4,"bold":true}],["|",{"inverse":true}],[" 72 ",{"fg":3,"bold":true}],["'goto_next_month'           Jumps to the next month.            '<Right>'                                       ",{"underline":true}],["|",{"inverse":true}],["~                     ",{"fg":4,"bold":true}]],"46":[["[Name] test.cpp      ",{"inverse":true}],[" NORMAL ",{"bold":true}],[" ",{}],["calendar.txt ",{"bold":true}],["                                                        unix │ utf-8 │ text │  32% ",{}],[" LN  72",{"bold":true}],[":1  ",{}],[" ",{"bold":true,"inverse":true}],[" ~/…/calendar-vim/doc>",{"bold":true}]]},"cursor":{"x":25,"y":45,"visible":true}}],[0.004649,{"lines":{"0":[["\" Press <F1> for hel",{"fg":6,"bold":true}],["|",{"inverse":true}],[" 28 ",{"fg":3,"bold":true}],["                                                *calendar-:CalendarT*                                           ",{}],["|",{"inverse":true}],["  1 ",{"fg":3,"bold":true}],["\" Press ? for help",{"fg":5,"bold":true}]],"1":[["                    ",{}],["|",{"inverse":true}],[" 29 ",{"fg":3,"bold":true}],[":CalendarT [[year] month] Show calendar at this year and this month in a                                        ",{}],["|",{"inverse":true}],["  2 ",{"fg":3,"bold":true}],["                  ",{}]],"2":[["▼",{"fg":3,"bold":true}],[" First",{"fg":5,"bold":true}],[" : ",{}],["struct",{"fg":2,"bold":true}],["    ",{}],["|",{"inverse":true}],[" 30 ",{"fg":3,"bold":true}],["                          full-screen window.  When [year] is omitted, the                                      ",{}],["|",{"inverse":true}],["  3 ",{"fg":3,"bold":true}],[".. (up a dir)",{"fg":6,"bold":true}],["     ",{}]],"3":[["    [prototypes]",{"fg":6,"bold":true}],["    ",{}],["|",{"inverse":true}],[" 31 ",{"fg":3,"bold":true}],["                          calendar will show the given month in the current                                     ",{}],["|",{"inverse":true}],["  4 /root/",{"fg":3,"bold":true}],["            ",{}]],"4":[["   ",{}],["+",{"fg":2,"bold":true}],["FirstRun(void)  ",{}],["|",{"inverse":true}],[" 32 ",{"fg":3,"bold":true}],["                          year.  When both [year] and [month] are omitted, the                                  ",{}],["|",{"inverse":true}],["  5 ",{"fg":3,"bold":true}],["▸ .asciinema/",{"fg":6,"bold":true}],["     ",{}]],"5":[["   ",{}],["+",{"fg":2,"bold":true}],["FirstRun2(void) ",{}],["|",{"inverse":true}],[" 33 ",{"fg":3,"bold":true}],["                          calendar will show the current month.                                                 ",{}],["|",{"inverse":true}],["  6 ",{"fg":3,"bold":true}],["▸ .cache/",{"fg":6,"bold":true}],["         ",{}]],"6":[["                    ",{}],["|",{"inverse":true}],[" 34 ",{"fg":3,"bold":true}],["                                                                                                                ",{}],["|",{"inverse":true}],["  7 ",{"fg":3,"bold":true}],["▸ .config/",{"fg":6,"bold":true}],["        ",{}]],"7":[["▼",{"fg":3,"bold":true}],[" Last",{"fg":5,"bold":true}],[" : ",{}],["struct",{"fg":2,"bold":true}],["     ",{}],["|",{"inverse":true}],[" 35 ",{"fg":3,"bold":true}],["                                                *calendar-:CalendarVR*                                          ",{}],["|",{"inverse":true}],["  8 ",{"fg":3,"bold":true}],["▸ .dbus/",{"fg":6,"bold":true}],["          ",{}]],"8":[["    [functions]",{"fg":6,"bold":true}],["     ",{}],["|",{"inverse":true}],[" 36 ",{"fg":3,"bold":true}],[":CalendarVR [[year] month]  Show calendar at this year and this month in a                                      ",{}],["|",{"inverse":true}],["  9 ",{"fg":3,"bold":true}],["▸ .gnupg/",{"fg":6,"bold":true}],["         ",{}]],"9":[["   ",{}],["+",{"fg":2,"bold":true}],["FirstRun(void)  ",{}],["|",{"inverse":true}],[" 37 ",{"fg":3,"bold":true}],["                          vertical split at the right site.  When [year] is                                     ",{}],["|",{"inverse":true}],[" 10 ",{"fg":3,"bold":true}],["▸ .kde/",{"fg":6,"bold":true}],["           ",{}]],"10":[["   ",{}],["+",{"fg":2,"bold":true}],["FirstRun2(void) ",{}],["|",{"inverse":true}],[" 38 ",{"fg":3,"bold":true}],["                          omitted, the calendar will show the given month in                                    ",{}],["|",{"inverse":true}],[" 11 ",{"fg":3,"bold":true}],["▸ .local/",{"fg":6,"bold":true}],["         ",{}]],"11":[["   ",{}],["+",{"fg":2,"bold":true}],["~Last()         ",{}],["|",{"inverse":true}],[" 39 ",{"fg":3,"bold":true}],["                          the current year.  When both [year] and [month] are                                   ",{}],["|",{"inverse":true}],[" 12 ",{"fg":3,"bold":true}],["▸ .pki/",{"fg":6,"bold":true}],["           ",{}]],"12":[["   ",{}],["+",{"fg":2,"bold":true}],["SecondRun(void) ",{}],["|",{"inverse":true}],[" 40 ",{"fg":3,"bold":true}],["                          omitted, the calendar will show the current month.                                    ",{}],["|",{"inverse":true}],[" 13 ",{"fg":3,"bold":true}],["▸ .ssh/",{"fg":6,"bold":true}],["           ",{}]],"13":[["   ",{}],["+",{"fg":2,"bold":true}],["SecondRun2(void)",{}],["|",{"inverse":true}],[" 41 ",{"fg":3,"bold":true}],["                                                                                                                ",{}],["|",{"inverse":true}],[" 14 ",{"fg":3,"bold":true}],["▸ .vim/",{"fg":6,"bold":true}],["           ",{}]],"14":[["                    ",{}],["|",{"inverse":true}],[" 42 ",{"fg":3,"bold":true}],["MAPPINGS                                        *calendar-mappings*                                             ",{}],["|",{"inverse":true}],[" 15 ",{"fg":3,"bold":true}],["▸ diary/",{"fg":6,"bold":true}],["          ",{}]],"15":[["▼",{"fg":3,"bold":true}],[" Second",{"fg":5,"bold":true}],[" : ",{}],["struct",{"fg":2,"bold":true}],["   ",{}],["|",{"inverse":true}],[" 43 ",{"fg":3,"bold":true}],["                                                                                                                ",{}],["|",{"inverse":true}],[" 16 ",{"fg":3,"bold":true}],["▸ temp/",{"fg":6,"bold":true}],["           ",{}]],"16":[["    [prototypes]",{"fg":6,"bold":true}],["    ",{}],["|",{"inverse":true}],[" 44 ",{"fg":3,"bold":true}],["calendar.vim makes the following normal mode mappings available:                                                ",{}],["|",{"inverse":true}],[" 17 ",{"fg":3,"bold":true}],["  .bash_history   ",{}]],"17":[["   ",{}],["+",{"fg":2,"bold":true}],["SecondRun(void) ",{}],["|",{"inverse":true}],[" 45 ",{"fg":3,"bold":true}],["                                                                                                                ",{}],["|",{"inverse":true}],[" 18 ",{"fg":3,"bold":true}],["  .bash_logout    ",{}]],"18":[["   ",{}],["+",{"fg":2,"bold":true}],["SecondRun2(void)",{}],["|",{"inverse":true}],[" 46 ",{"fg":3,"bold":true}],["                                                *calendar-cal*                                                  ",{}],["|",{"inverse":true}],[" 19 ",{"fg":3,"bold":true}],["  .bash_profile   ",{"underline":true}]],"19":[["                    ",{}],["|",{"inverse":true}],[" 47 ",{"fg":3,"bold":true}],["<LocalLeader>cal          Brings up the calendar in a vertical split.                                           ",{}],["|",{"inverse":true}],[" 20 ",{"fg":3,"bold":true}],["  .bashrc         ",{}]],"20":[["▼",{"fg":3,"bold":true}],[" ",{}],["functions",{"fg":6,"bold":true}],["         ",{}],["|",{"inverse":true}],[" 48 ",{"fg":3,"bold":true}],["                          Equivalent to calling |:Calendar|.                                                    ",{}],["|",{"inverse":true}],[" 21 ",{"fg":3,"bold":true}],["  .cshrc          ",{}]],"21":[["    main(int argc, c",{"underline":true}],["|",{"inverse":true}],[" 49 ",{"fg":3,"bold":true}],["                                                                                                                ",{}],["|",{"inverse":true}],[" 22 ",{"fg":3,"bold":true}],["  .dmrc           ",{}]],"22":[["~                   ",{"fg":4,"bold":true}],["|",{"inverse":true}],[" 50 ",{"fg":3,"bold":true}],["                                                *calendar-caL*                                                  ",{}],["|",{"inverse":true}],[" 23 ",{"fg":3,"bold":true}],["  .esd_auth       ",{}]],"23":[["~                   ",{"fg":4,"bold":true}],["|",{"inverse":true}],[" 51 ",{"fg":3,"bold":true}],["<LocalLeader>",{}],["caL ",{"bg":1}],["        ",{}],[" Bri",{"bg":1}],["ngs up the calendar in a horizontal split.                                         ",{}],["|",{"inverse":true}],[" 24 ",{"fg":3,"bold":true}],["  .gtkrc-2.0      ",{}]],"24":[["~                   ",{"fg":4,"bold":true}],["|",{"inverse":true}],[" 52 ",{"fg":3,"bold":true}],["                          Equivalent to calling |:CalendarH|.                                                   ",{}],["|",{"inverse":true}],[" 25 ",{"fg":3,"bold":true}],["  .gtkrc-2.0-kde4 ",{}]],"25":[["~                   ",{"fg":4,"bold":true}],["|",{"inverse":true}],[" 53 ",{"fg":3,"bold":true}],["                                                                                                                ",{}],["|",{"inverse":true}],[" 26 ",{"fg":3,"bold":true}],["  .lesshst        ",{}]],"26":[["~                   ",{"fg":4,"bold":true}],["|",{"inverse":true}],[" 54 ",{"fg":3,"bold":true}],["SETTINGS                                        *calendar-settings*                                             ",{}],["|",{"inverse":true}],[" 27 ",{"fg":3,"bold":true}],["  .tcshrc         ",{}]],"27":[["~                   ",{"fg":4,"bold":true}],["|",{"inverse":true}],[" 55 ",{"fg":3,"bold":true}],["                                                                                                                ",{}],["|",{"inverse":true}],[" 28 ",{"fg":3,"bold":true}],["  .viminfo        ",{}]],"28":[["~                   ",{"fg":4,"bold":true}],["|",{"inverse":true}],[" 56 ",{"fg":3,"bold":true}],["calendar.vim can be con",{}],["figured using the following sett",{"bg":1}],["ings:                                                    ",{}],["|",{"inverse":true}],[" 29 ",{"fg":3,"bold":true}],["  .vimrc          ",{}]],"29":[["~                   ",{"fg":4,"bold":true}],["|",{"inverse":true}],[" 57 ",{"fg":3,"bold":true}],["                                                                                                                ",{}],["|",{"inverse":true}],[" 30 ",{"fg":3,"bold":true}],["  .xsession-errors",{}]],"30":[["~                   ",{"fg":4,"bold":true}],["|",{"inverse":true}],[" 58 ",{"fg":3,"bold":true}],["                                                *g:calendar_focus_today*                                        ",{}],["|",{"inverse":true}],[" 31 ",{"fg":3,"bold":true}],["  anaconda-ks.cfg ",{}]],"31":[["~                   ",{"fg":4,"bold":true}],["|",{"inverse":true}],[" 59 ",{"fg":3,"bold":true}],["Keeps focus when moving to next or previous calendar: >                                                         ",{}],["|",{"inverse":true}],[" 32 ",{"fg":3,"bold":true}],["  initial-setup-ks",{}]],"32":[["~                   ",{"fg":4,"bold":true}],["|",{"inverse":true}],[" 60 ",{"fg":3,"bold":true}],["  let g:calendar_focus_today = 1                                                                                ",{}],["|",{"inverse":true}],[" 33 ",{"fg":3,"bold":true}],["  test.c          ",{}]],"33":[["~                   ",{"fg":4,"bold":true}],["|",{"inverse":true}],[" 61 ",{"fg":3,"bold":true}],["<                                                                                                               ",{}],["|",{"inverse":true}],[" 34 ",{"fg":3,"bold":true}],["  test.cpp        ",{}]],"34":[["~                   ",{"fg":4,"bold":true}],["|",{"inverse":true}],[" 62 ",{"fg":3,"bold":true}],["                                                                                                                ",{}],["|",{"inverse":true}],[" 35 ",{"fg":3,"bold":true}],["  .test.cpp.swp   ",{}]],"35":[["~                   ",{"fg":4,"bold":true}],["|",{"inverse":true}],[" 63 ",{"fg":3,"bold":true}],["                                                *g:calendar_keys*                                               ",{}],["|",{"inverse":true}],["~                     ",{"fg":4,"bold":true}]],"36":[["~                   ",{"fg":4,"bold":true}],["|",{"inverse":true}],[" 64 ",{"fg":3,"bold":true}],["To change the key bindings in the calendar window, add entries to this                                          ",{}],["|",{"inverse":true}],["~                     ",{"fg":4,"bold":true}]],"37":[["~                   ",{"fg":4,"bold":true}],["|",{"inverse":true}],[" 65 ",{"fg":3,"bold":true}],["dictionary.   Possible keys, the action bound to the keycode given in the                                       ",{}],["|",{"inverse":true}],["~                     ",{"fg":4,"bold":true}]],"38":[["~                   ",{"fg":4,"bold":true}],["|",{"inverse":true}],[" 66 ",{"fg":3,"bold":true}],["respective value for this key and the default binding are listed below.                                         ",{}],["|",{"inverse":true}],["~                     ",{"fg":4,"bold":true}]],"39":[["~                   ",{"fg":4,"bold":true}],["|",{"inverse":true}],[" 67 ",{"fg":3,"bold":true}],["'close'                     Closes calendar window.             'q'                                             ",{}],["|",{"inverse":true}],["~                     ",{"fg":4,"bold":true}]],"40":[["~                   ",{"fg":4,"bold":true}],["|",{"inverse":true}],[" 68 ",{"fg":3,"bold":true}],["'do_action'                 Executes |calendar_action|.           '<CR>'                                        ",{}],["|",{"inverse":true}],["~                     ",{"fg":4,"bold":true}]],"41":[["~                   ",{"fg":4,"bold":true}],["|",{"inverse":true}],[" 69 ",{"fg":3,"bold":true}],["'goto_today'                Executes |calendar_today|.            't'                                           ",{}],["|",{"inverse":true}],["~                     ",{"fg":4,"bold":true}]],"42":[["~                   ",{"fg":4,"bold":true}],["|",{"inverse":true}],[" 70 ",{"fg":3,"bold":true}],["'show_help'                 Displays a short help message.      '?'                                             ",{}],["|",{"inverse":true}],["~                     ",{"fg":4,"bold":true}]],"43":[["~                   ",{"fg":4,"bold":true}],["|",{"inverse":true}],[" 71 ",{"fg":3,"bold":true}],["'redisplay'                 Redraws calendar window.            'r'                                             ",{}],["|",{"inverse":true}],["~                     ",{"fg":4,"bold":true}]],"44":[["~                   ",{"fg":4,"bold":true}],["|",{"inverse":true}],[" 72 ",{"fg":3,"bold":true}],["'goto_next_month'           Jumps to the next mo",{"underline":true}],["dow.            'r'                                             ",{}],["|",{"inverse":true}],["~                     ",{"fg":4,"bold":true}]]},"cursor":{"x":73,"y":44,"visible":false}}],[0.040353,{"lines":{"44":[["~                   ",{"fg":4,"bold":true}],["|",{"inverse":true}],[" 72 ",{"fg":3,"bold":true}],["'goto_next_month'           Jumps to the next month.            '<Right>'                                       ",{}],["|",{"inverse":true}],["~                     ",{"fg":4,"bold":true}]],"45":[["~                   ",{"fg":4,"bold":true}],["|",{"inverse":true}],[" 73 ",{"fg":3,"bold":true}],["'goto_prev_month'           Jumps to the previous month.        '<Left>'                                        ",{"underline":true}],["|",{"inverse":true}],["~                     ",{"fg":4,"bold":true}]],"46":[["[Name] test.cpp      ",{"inverse":true}],[" NORMAL ",{"bold":true}],[" ",{}],["calendar.txt ",{"bold":true}],["                                                        unix │ utf-8 │ text │  33% ",{}],[" LN  73",{"bold":true}],[":1  ",{}],[" ",{"bold":true,"inverse":true}],[" ~/…/calendar-vim/doc>",{"bold":true}]]},"cursor":{"x":25,"y":45,"visible":true}}],[0.009427000000000001,{"lines":{"0":[["\" Press <F1> for hel",{"fg":6,"bold":true}],["|",{"inverse":true}],[" 29 ",{"fg":3,"bold":true}],[":CalendarT [[year] month] Show calendar at this year and this month in a                                        ",{}],["|",{"inverse":true}],["  1 ",{"fg":3,"bold":true}],["\" Press ? for help",{"fg":5,"bold":true}]],"1":[["                    ",{}],["|",{"inverse":true}],[" 30 ",{"fg":3,"bold":true}],["                          full-screen window.  When [year] is omitted, the                                      ",{}],["|",{"inverse":true}],["  2 ",{"fg":3,"bold":true}],["                  ",{}]],"2":[["▼",{"fg":3,"bold":true}],[" First",{"fg":5,"bold":true}],[" : ",{}],["struct",{"fg":2,"bold":true}],["    ",{}],["|",{"inverse":true}],[" 31 ",{"fg":3,"bold":true}],["                          calendar will show the given month in the current                                     ",{}],["|",{"inverse":true}],["  3 ",{"fg":3,"bold":true}],[".. (up a dir)",{"fg":6,"bold":true}],["     ",{}]],"3":[["    [prototypes]",{"fg":6,"bold":true}],["    ",{}],["|",{"inverse":true}],[" 32 ",{"fg":3,"bold":true}],["                          year.  When both [year] and [month] are omitted, the                                  ",{}],["|",{"inverse":true}],["  4 /root/",{"fg":3,"bold":true}],["            ",{}]],"4":[["   ",{}],["+",{"fg":2,"bold":true}],["FirstRun(void)  ",{}],["|",{"inverse":true}],[" 33 ",{"fg":3,"bold":true}],["                          calendar will show the current month.                                                 ",{}],["|",{"inverse":true}],["  5 ",{"fg":3,"bold":true}],["▸ .asciinema/",{"fg":6,"bold":true}],["     ",{}]],"5":[["   ",{}],["+",{"fg":2,"bold":true}],["FirstRun2(void) ",{}],["|",{"inverse":true}],[" 34 ",{"fg":3,"bold":true}],["                                                                                                                ",{}],["|",{"inverse":true}],["  6 ",{"fg":3,"bold":true}],["▸ .cache/",{"fg":6,"bold":true}],["         ",{}]],"6":[["                    ",{}],["|",{"inverse":true}],[" 35 ",{"fg":3,"bold":true}],["                                                *calendar-:CalendarVR*                                          ",{}],["|",{"inverse":true}],["  7 ",{"fg":3,"bold":true}],["▸ .config/",{"fg":6,"bold":true}],["        ",{}]],"7":[["▼",{"fg":3,"bold":true}],[" Last",{"fg":5,"bold":true}],[" : ",{}],["struct",{"fg":2,"bold":true}],["     ",{}],["|",{"inverse":true}],[" 36 ",{"fg":3,"bold":true}],[":CalendarVR [[year] month]  Show calendar at this year and this month in a                                      ",{}],["|",{"inverse":true}],["  8 ",{"fg":3,"bold":true}],["▸ .dbus/",{"fg":6,"bold":true}],["          ",{}]],"8":[["    [functions]",{"fg":6,"bold":true}],["     ",{}],["|",{"inverse":true}],[" 37 ",{"fg":3,"bold":true}],["                          vertical split at the right site.  When [year] is                                     ",{}],["|",{"inverse":true}],["  9 ",{"fg":3,"bold":true}],["▸ .gnupg/",{"fg":6,"bold":true}],["         ",{}]],"9":[["   ",{}],["+",{"fg":2,"bold":true}],["FirstRun(void)  ",{}],["|",{"inverse":true}],[" 38 ",{"fg":3,"bold":true}],["                          omitted, the calendar will show the given month in                                    ",{}],["|",{"inverse":true}],[" 10 ",{"fg":3,"bold":true}],["▸ .kde/",{"fg":6,"bold":true}],["           ",{}]],"10":[["   ",{}],["+",{"fg":2,"bold":true}],["FirstRun2(void) ",{}],["|",{"inverse":true}],[" 39 ",{"fg":3,"bold":true}],["                          the current year.  When both [year] and [month] are                                   ",{}],["|",{"inverse":true}],[" 11 ",{"fg":3,"bold":true}],["▸ .local/",{"fg":6,"bold":true}],["         ",{}]],"11":[["   ",{}],["+",{"fg":2,"bold":true}],["~Last()         ",{}],["|",{"inverse":true}],[" 40 ",{"fg":3,"bold":true}],["                          omitted, the calendar will show the current month.                                    ",{}],["|",{"inverse":true}],[" 12 ",{"fg":3,"bold":true}],["▸ .pki/",{"fg":6,"bold":true}],["           ",{}]],"12":[["   ",{}],["+",{"fg":2,"bold":true}],["SecondRun(void) ",{}],["|",{"inverse":true}],[" 41 ",{"fg":3,"bold":true}],["                                                                                                                ",{}],["|",{"inverse":true}],[" 13 ",{"fg":3,"bold":true}],["▸ .ssh/",{"fg":6,"bold":true}],["           ",{}]],"13":[["   ",{}],["+",{"fg":2,"bold":true}],["SecondRun2(void)",{}],["|",{"inverse":true}],[" 42 ",{"fg":3,"bold":true}],["MAPPINGS                                        *calendar-mappings*                                             ",{}],["|",{"inverse":true}],[" 14 ",{"fg":3,"bold":true}],["▸ .vim/",{"fg":6,"bold":true}],["           ",{}]],"14":[["                    ",{}],["|",{"inverse":true}],[" 43 ",{"fg":3,"bold":true}],["                                                                                                                ",{}],["|",{"inverse":true}],[" 15 ",{"fg":3,"bold":true}],["▸ diary/",{"fg":6,"bold":true}],["          ",{}]],"15":[["▼",{"fg":3,"bold":true}],[" Second",{"fg":5,"bold":true}],[" : ",{}],["struct",{"fg":2,"bold":true}],["   ",{}],["|",{"inverse":true}],[" 44 ",{"fg":3,"bold":true}],["calendar.vim makes the following normal mode mappings available:                                                ",{}],["|",{"inverse":true}],[" 16 ",{"fg":3,"bold":true}],["▸ temp/",{"fg":6,"bold":true}],["           ",{}]],"16":[["    [prototypes]",{"fg":6,"bold":true}],["    ",{}],["|",{"inverse":true}],[" 45 ",{"fg":3,"bold":true}],["                                                                                                                ",{}],["|",{"inverse":true}],[" 17 ",{"fg":3,"bold":true}],["  .bash_history   ",{}]],"17":[["   ",{}],["+",{"fg":2,"bold":true}],["SecondRun(void) ",{}],["|",{"inverse":true}],[" 46 ",{"fg":3,"bold":true}],["                                                *calendar-cal*                                                  ",{}],["|",{"inverse":true}],[" 18 ",{"fg":3,"bold":true}],["  .bash_logout    ",{}]],"18":[["   ",{}],["+",{"fg":2,"bold":true}],["SecondRun2(void)",{}],["|",{"inverse":true}],[" 47 ",{"fg":3,"bold":true}],["<LocalLeader>cal          Brings up the calendar in a vertical split.                                           ",{}],["|",{"inverse":true}],[" 19 ",{"fg":3,"bold":true}],["  .bash_profile   ",{"underline":true}]],"19":[["                    ",{}],["|",{"inverse":true}],[" 48 ",{"fg":3,"bold":true}],["                          Equivalent to calling |:Calendar|.                                                    ",{}],["|",{"inverse":true}],[" 20 ",{"fg":3,"bold":true}],["  .bashrc         ",{}]],"20":[["▼",{"fg":3,"bold":true}],[" ",{}],["functions",{"fg":6,"bold":true}],["         ",{}],["|",{"inverse":true}],[" 49 ",{"fg":3,"bold":true}],["                                                                                                                ",{}],["|",{"inverse":true}],[" 21 ",{"fg":3,"bold":true}],["  .cshrc          ",{}]],"21":[["    main(int argc, c",{"underline":true}],["|",{"inverse":true}],[" 50 ",{"fg":3,"bold":true}],["                                                *calendar-caL*                                                  ",{}],["|",{"inverse":true}],[" 22 ",{"fg":3,"bold":true}],["  .dmrc           ",{}]],"22":[["~                   ",{"fg":4,"bold":true}],["|",{"inverse":true}],[" 51 ",{"fg":3,"bold":true}],["<LocalLeader>",{}],["caL ",{"bg":1}],["        ",{}],[" Bri",{"bg":1}],["ngs up the calendar in a horizontal split.                                         ",{}],["|",{"inverse":true}],[" 23 ",{"fg":3,"bold":true}],["  .esd_auth       ",{}]],"23":[["~                   ",{"fg":4,"bold":true}],["|",{"inverse":true}],[" 52 ",{"fg":3,"bold":true}],["                          Equivalent to calling |:CalendarH|.                                                   ",{}],["|",{"inverse":true}],[" 24 ",{"fg":3,"bold":true}],["  .gtkrc-2.0      ",{}]],"24":[["~                   ",{"fg":4,"bold":true}],["|",{"inverse":true}],[" 53 ",{"fg":3,"bold":true}],["                                                                                                                ",{}],["|",{"inverse":true}],[" 25 ",{"fg":3,"bold":true}],["  .gtkrc-2.0-kde4 ",{}]],"25":[["~                   ",{"fg":4,"bold":true}],["|",{"inverse":true}],[" 54 ",{"fg":3,"bold":true}],["SETTINGS                                        *calendar-settings*                                             ",{}],["|",{"inverse":true}],[" 26 ",{"fg":3,"bold":true}],["  .lesshst        ",{}]],"26":[["~                   ",{"fg":4,"bold":true}],["|",{"inverse":true}],[" 55 ",{"fg":3,"bold":true}],["                                                                                                                ",{}],["|",{"inverse":true}],[" 27 ",{"fg":3,"bold":true}],["  .tcshrc         ",{}]],"27":[["~                   ",{"fg":4,"bold":true}],["|",{"inverse":true}],[" 56 ",{"fg":3,"bold":true}],["calendar.vim can be con",{}],["figured using the following sett",{"bg":1}],["ings:                                                    ",{}],["|",{"inverse":true}],[" 28 ",{"fg":3,"bold":true}],["  .viminfo        ",{}]],"28":[["~                   ",{"fg":4,"bold":true}],["|",{"inverse":true}],[" 57 ",{"fg":3,"bold":true}],["                                                                                                                ",{}],["|",{"inverse":true}],[" 29 ",{"fg":3,"bold":true}],["  .vimrc          ",{}]],"29":[["~                   ",{"fg":4,"bold":true}],["|",{"inverse":true}],[" 58 ",{"fg":3,"bold":true}],["                                                *g:calendar_focus_today*                                        ",{}],["|",{"inverse":true}],[" 30 ",{"fg":3,"bold":true}],["  .xsession-errors",{}]],"30":[["~                   ",{"fg":4,"bold":true}],["|",{"inverse":true}],[" 59 ",{"fg":3,"bold":true}],["Keeps focus when moving to next or previous calendar: >                                                         ",{}],["|",{"inverse":true}],[" 31 ",{"fg":3,"bold":true}],["  anaconda-ks.cfg ",{}]],"31":[["~                   ",{"fg":4,"bold":true}],["|",{"inverse":true}],[" 60 ",{"fg":3,"bold":true}],["  let g:calendar_focus_today = 1                                                                                ",{}],["|",{"inverse":true}],[" 32 ",{"fg":3,"bold":true}],["  initial-setup-ks",{}]],"32":[["~                   ",{"fg":4,"bold":true}],["|",{"inverse":true}],[" 61 ",{"fg":3,"bold":true}],["<                                                                                                               ",{}],["|",{"inverse":true}],[" 33 ",{"fg":3,"bold":true}],["  test.c          ",{}]],"33":[["~                   ",{"fg":4,"bold":true}],["|",{"inverse":true}],[" 62 ",{"fg":3,"bold":true}],["                                                                                                                ",{}],["|",{"inverse":true}],[" 34 ",{"fg":3,"bold":true}],["  test.cpp        ",{}]],"34":[["~                   ",{"fg":4,"bold":true}],["|",{"inverse":true}],[" 63 ",{"fg":3,"bold":true}],["                                                *g:calendar_keys*                                               ",{}],["|",{"inverse":true}],[" 35 ",{"fg":3,"bold":true}],["  .test.cpp.swp   ",{}]],"35":[["~                   ",{"fg":4,"bold":true}],["|",{"inverse":true}],[" 64 ",{"fg":3,"bold":true}],["To change the key bindings in the calendar window, add entries to this                                          ",{}],["|",{"inverse":true}],["~                     ",{"fg":4,"bold":true}]],"36":[["~                   ",{"fg":4,"bold":true}],["|",{"inverse":true}],[" 65 ",{"fg":3,"bold":true}],["dictionary.   Possible keys, the action bound to the keycode given in the                                       ",{}],["|",{"inverse":true}],["~                     ",{"fg":4,"bold":true}]],"37":[["~                   ",{"fg":4,"bold":true}],["|",{"inverse":true}],[" 66 ",{"fg":3,"bold":true}],["respective value for this key and the default binding are listed below.                                         ",{}],["|",{"inverse":true}],["~                     ",{"fg":4,"bold":true}]],"38":[["~                   ",{"fg":4,"bold":true}],["|",{"inverse":true}],[" 67 ",{"fg":3,"bold":true}],["'close'                     Closes calendar window.             'q'                                             ",{}],["|",{"inverse":true}],["~                     ",{"fg":4,"bold":true}]],"39":[["~                   ",{"fg":4,"bold":true}],["|",{"inverse":true}],[" 68 ",{"fg":3,"bold":true}],["'do_action'                 Executes |calendar_action|.           '<CR>'                                        ",{}],["|",{"inverse":true}],["~                     ",{"fg":4,"bold":true}]],"40":[["~                   ",{"fg":4,"bold":true}],["|",{"inverse":true}],[" 69 ",{"fg":3,"bold":true}],["'goto_today'                Executes |calendar_today|.            't'                                           ",{}],["|",{"inverse":true}],["~                     ",{"fg":4,"bold":true}]],"41":[["~                   ",{"fg":4,"bold":true}],["|",{"inverse":true}],[" 70 ",{"fg":3,"bold":true}],["'show_help'                 Displays a short help message.      '?'                                             ",{}],["|",{"inverse":true}],["~                     ",{"fg":4,"bold":true}]],"42":[["~                   ",{"fg":4,"bold":true}],["|",{"inverse":true}],[" 71 ",{"fg":3,"bold":true}],["'redisplay'                 Redraws calendar window.            'r'                                             ",{}],["|",{"inverse":true}],["~                     ",{"fg":4,"bold":true}]],"43":[["~                   ",{"fg":4,"bold":true}],["|",{"inverse":true}],[" 72 ",{"fg":3,"bold":true}],["'goto_next_month'           Jumps to the next month.            '<Right>'                                       ",{}],["|",{"inverse":true}],["~                     ",{"fg":4,"bold":true}]],"44":[["~                   ",{"fg":4,"bold":true}],["|",{"inverse":true}],[" 73 ",{"fg":3,"bold":true}],["'goto_prev_month'           Jumps to the previou",{"underline":true}],["nth.            '<Right>'                                       ",{}],["|",{"inverse":true}],["~                     ",{"fg":4,"bold":true}]]},"cursor":{"x":73,"y":44,"visible":false}}],[0.017591,{"lines":{"44":[["~                   ",{"fg":4,"bold":true}],["|",{"inverse":true}],[" 73 ",{"fg":3,"bold":true}],["'goto_prev_month'           Jumps to the previous month.        '<Left>'                                        ",{}],["|",{"inverse":true}],["~                     ",{"fg":4,"bold":true}]],"45":[["~                   ",{"fg":4,"bold":true}],["|",{"inverse":true}],[" 74 ",{"fg":3,"bold":true}],["'goto_next_year'            Jumps to the next year.             '<Up>'                                          ",{"underline":true}],["|",{"inverse":true}],["~                     ",{"fg":4,"bold":true}]],"46":[["[Name] test.cpp      ",{"inverse":true}],[" NORMAL ",{"bold":true}],[" ",{}],["calendar.txt ",{"bold":true}],["                                                        unix │ utf-8 │ text │  33% ",{}],[" LN  74",{"bold":true}],[":1  ",{}],[" ",{"bold":true,"inverse":true}],[" ~/…/calendar-vim/doc>",{"bold":true}]]},"cursor":{"x":25,"y":45,"visible":true}}],[0.005004,{"lines":{"0":[["\" Press <F1> for hel",{"fg":6,"bold":true}],["|",{"inverse":true}],[" 30 ",{"fg":3,"bold":true}],["                          full-screen window.  When [year] is omitted, the                                      ",{}],["|",{"inverse":true}],["  1 ",{"fg":3,"bold":true}],["\" Press ? for help",{"fg":5,"bold":true}]],"1":[["                    ",{}],["|",{"inverse":true}],[" 31 ",{"fg":3,"bold":true}],["                          calendar will show the given month in the current                                     ",{}],["|",{"inverse":true}],["  2 ",{"fg":3,"bold":true}],["                  ",{}]],"2":[["▼",{"fg":3,"bold":true}],[" First",{"fg":5,"bold":true}],[" : ",{}],["struct",{"fg":2,"bold":true}],["    ",{}],["|",{"inverse":true}],[" 32 ",{"fg":3,"bold":true}],["                          year.  When both [year] and [month] are omitted, the                                  ",{}],["|",{"inverse":true}],["  3 ",{"fg":3,"bold":true}],[".. (up a dir)",{"fg":6,"bold":true}],["     ",{}]],"3":[["    [prototypes]",{"fg":6,"bold":true}],["    ",{}],["|",{"inverse":true}],[" 33 ",{"fg":3,"bold":true}],["                          calendar will show the current month.                                                 ",{}],["|",{"inverse":true}],["  4 /root/",{"fg":3,"bold":true}],["            ",{}]],"4":[["   ",{}],["+",{"fg":2,"bold":true}],["FirstRun(void)  ",{}],["|",{"inverse":true}],[" 34 ",{"fg":3,"bold":true}],["                                                                                                                ",{}],["|",{"inverse":true}],["  5 ",{"fg":3,"bold":true}],["▸ .asciinema/",{"fg":6,"bold":true}],["     ",{}]],"5":[["   ",{}],["+",{"fg":2,"bold":true}],["FirstRun2(void) ",{}],["|",{"inverse":true}],[" 35 ",{"fg":3,"bold":true}],["                                                *calendar-:CalendarVR*                                          ",{}],["|",{"inverse":true}],["  6 ",{"fg":3,"bold":true}],["▸ .cache/",{"fg":6,"bold":true}],["         ",{}]],"6":[["                    ",{}],["|",{"inverse":true}],[" 36 ",{"fg":3,"bold":true}],[":CalendarVR [[year] month]  Show calendar at this year and this month in a                                      ",{}],["|",{"inverse":true}],["  7 ",{"fg":3,"bold":true}],["▸ .config/",{"fg":6,"bold":true}],["        ",{}]],"7":[["▼",{"fg":3,"bold":true}],[" Last",{"fg":5,"bold":true}],[" : ",{}],["struct",{"fg":2,"bold":true}],["     ",{}],["|",{"inverse":true}],[" 37 ",{"fg":3,"bold":true}],["                          vertical split at the right site.  When [year] is                                     ",{}],["|",{"inverse":true}],["  8 ",{"fg":3,"bold":true}],["▸ .dbus/",{"fg":6,"bold":true}],["          ",{}]],"8":[["    [functions]",{"fg":6,"bold":true}],["     ",{}],["|",{"inverse":true}],[" 38 ",{"fg":3,"bold":true}],["                          omitted, the calendar will show the given month in                                    ",{}],["|",{"inverse":true}],["  9 ",{"fg":3,"bold":true}],["▸ .gnupg/",{"fg":6,"bold":true}],["         ",{}]],"9":[["   ",{}],["+",{"fg":2,"bold":true}],["FirstRun(void)  ",{}],["|",{"inverse":true}],[" 39 ",{"fg":3,"bold":true}],["                          the current year.  When both [year] and [month] are                                   ",{}],["|",{"inverse":true}],[" 10 ",{"fg":3,"bold":true}],["▸ .kde/",{"fg":6,"bold":true}],["           ",{}]],"10":[["   ",{}],["+",{"fg":2,"bold":true}],["FirstRun2(void) ",{}],["|",{"inverse":true}],[" 40 ",{"fg":3,"bold":true}],["                          omitted, the calendar will show the current month.                                    ",{}],["|",{"inverse":true}],[" 11 ",{"fg":3,"bold":true}],["▸ .local/",{"fg":6,"bold":true}],["         ",{}]],"11":[["   ",{}],["+",{"fg":2,"bold":true}],["~Last()         ",{}],["|",{"inverse":true}],[" 41 ",{"fg":3,"bold":true}],["                                                                                                                ",{}],["|",{"inverse":true}],[" 12 ",{"fg":3,"bold":true}],["▸ .pki/",{"fg":6,"bold":true}],["           ",{}]],"12":[["   ",{}],["+",{"fg":2,"bold":true}],["SecondRun(void) ",{}],["|",{"inverse":true}],[" 42 ",{"fg":3,"bold":true}],["MAPPINGS                                        *calendar-mappings*                                             ",{}],["|",{"inverse":true}],[" 13 ",{"fg":3,"bold":true}],["▸ .ssh/",{"fg":6,"bold":true}],["           ",{}]],"13":[["   ",{}],["+",{"fg":2,"bold":true}],["SecondRun2(void)",{}],["|",{"inverse":true}],[" 43 ",{"fg":3,"bold":true}],["                                                                                                                ",{}],["|",{"inverse":true}],[" 14 ",{"fg":3,"bold":true}],["▸ .vim/",{"fg":6,"bold":true}],["           ",{}]],"14":[["                    ",{}],["|",{"inverse":true}],[" 44 ",{"fg":3,"bold":true}],["calendar.vim makes the following normal mode mappings available:                                                ",{}],["|",{"inverse":true}],[" 15 ",{"fg":3,"bold":true}],["▸ diary/",{"fg":6,"bold":true}],["          ",{}]],"15":[["▼",{"fg":3,"bold":true}],[" Second",{"fg":5,"bold":true}],[" : ",{}],["struct",{"fg":2,"bold":true}],["   ",{}],["|",{"inverse":true}],[" 45 ",{"fg":3,"bold":true}],["                                                                                                                ",{}],["|",{"inverse":true}],[" 16 ",{"fg":3,"bold":true}],["▸ temp/",{"fg":6,"bold":true}],["           ",{}]],"16":[["    [prototypes]",{"fg":6,"bold":true}],["    ",{}],["|",{"inverse":true}],[" 46 ",{"fg":3,"bold":true}],["                                                *calendar-cal*                                                  ",{}],["|",{"inverse":true}],[" 17 ",{"fg":3,"bold":true}],["  .bash_history   ",{}]],"17":[["   ",{}],["+",{"fg":2,"bold":true}],["SecondRun(void) ",{}],["|",{"inverse":true}],[" 47 ",{"fg":3,"bold":true}],["<LocalLeader>cal          Brings up the calendar in a vertical split.                                           ",{}],["|",{"inverse":true}],[" 18 ",{"fg":3,"bold":true}],["  .bash_logout    ",{}]],"18":[["   ",{}],["+",{"fg":2,"bold":true}],["SecondRun2(void)",{}],["|",{"inverse":true}],[" 48 ",{"fg":3,"bold":true}],["                          Equivalent to calling |:Calendar|.                                                    ",{}],["|",{"inverse":true}],[" 19 ",{"fg":3,"bold":true}],["  .bash_profile   ",{"underline":true}]],"19":[["                    ",{}],["|",{"inverse":true}],[" 49 ",{"fg":3,"bold":true}],["                                                                                                                ",{}],["|",{"inverse":true}],[" 20 ",{"fg":3,"bold":true}],["  .bashrc         ",{}]],"20":[["▼",{"fg":3,"bold":true}],[" ",{}],["functions",{"fg":6,"bold":true}],["         ",{}],["|",{"inverse":true}],[" 50 ",{"fg":3,"bold":true}],["                                                *calendar-caL*                                                  ",{}],["|",{"inverse":true}],[" 21 ",{"fg":3,"bold":true}],["  .cshrc          ",{}]],"21":[["    main(int argc, c",{"underline":true}],["|",{"inverse":true}],[" 51 ",{"fg":3,"bold":true}],["<LocalLeader>",{}],["caL ",{"bg":1}],["        ",{}],[" Bri",{"bg":1}],["ngs up the calendar in a horizontal split.                                         ",{}],["|",{"inverse":true}],[" 22 ",{"fg":3,"bold":true}],["  .dmrc           ",{}]],"22":[["~                   ",{"fg":4,"bold":true}],["|",{"inverse":true}],[" 52 ",{"fg":3,"bold":true}],["                          Equivalent to calling |:CalendarH|.                                                   ",{}],["|",{"inverse":true}],[" 23 ",{"fg":3,"bold":true}],["  .esd_auth       ",{}]],"23":[["~                   ",{"fg":4,"bold":true}],["|",{"inverse":true}],[" 53 ",{"fg":3,"bold":true}],["                                                                                                                ",{}],["|",{"inverse":true}],[" 24 ",{"fg":3,"bold":true}],["  .gtkrc-2.0      ",{}]],"24":[["~                   ",{"fg":4,"bold":true}],["|",{"inverse":true}],[" 54 ",{"fg":3,"bold":true}],["SETTINGS                                        *calendar-settings*                                             ",{}],["|",{"inverse":true}],[" 25 ",{"fg":3,"bold":true}],["  .gtkrc-2.0-kde4 ",{}]],"25":[["~                   ",{"fg":4,"bold":true}],["|",{"inverse":true}],[" 55 ",{"fg":3,"bold":true}],["                                                                                                                ",{}],["|",{"inverse":true}],[" 26 ",{"fg":3,"bold":true}],["  .lesshst        ",{}]],"26":[["~                   ",{"fg":4,"bold":true}],["|",{"inverse":true}],[" 56 ",{"fg":3,"bold":true}],["calendar.vim can be con",{}],["figured using the following sett",{"bg":1}],["ings:                                                    ",{}],["|",{"inverse":true}],[" 27 ",{"fg":3,"bold":true}],["  .tcshrc         ",{}]],"27":[["~                   ",{"fg":4,"bold":true}],["|",{"inverse":true}],[" 57 ",{"fg":3,"bold":true}],["                                                                                                                ",{}],["|",{"inverse":true}],[" 28 ",{"fg":3,"bold":true}],["  .viminfo        ",{}]],"28":[["~                   ",{"fg":4,"bold":true}],["|",{"inverse":true}],[" 58 ",{"fg":3,"bold":true}],["                                                *g:calendar_focus_today*                                        ",{}],["|",{"inverse":true}],[" 29 ",{"fg":3,"bold":true}],["  .vimrc          ",{}]],"29":[["~                   ",{"fg":4,"bold":true}],["|",{"inverse":true}],[" 59 ",{"fg":3,"bold":true}],["Keeps focus when moving to next or previous calendar: >                                                         ",{}],["|",{"inverse":true}],[" 30 ",{"fg":3,"bold":true}],["  .xsession-errors",{}]],"30":[["~                   ",{"fg":4,"bold":true}],["|",{"inverse":true}],[" 60 ",{"fg":3,"bold":true}],["  let g:calendar_focus_today = 1                                                                                ",{}],["|",{"inverse":true}],[" 31 ",{"fg":3,"bold":true}],["  anaconda-ks.cfg ",{}]],"31":[["~                   ",{"fg":4,"bold":true}],["|",{"inverse":true}],[" 61 ",{"fg":3,"bold":true}],["<                                                                                                               ",{}],["|",{"inverse":true}],[" 32 ",{"fg":3,"bold":true}],["  initial-setup-ks",{}]],"32":[["~                   ",{"fg":4,"bold":true}],["|",{"inverse":true}],[" 62 ",{"fg":3,"bold":true}],["                                                                                                                ",{}],["|",{"inverse":true}],[" 33 ",{"fg":3,"bold":true}],["  test.c          ",{}]],"33":[["~                   ",{"fg":4,"bold":true}],["|",{"inverse":true}],[" 63 ",{"fg":3,"bold":true}],["                                                *g:calendar_keys*                                               ",{}],["|",{"inverse":true}],[" 34 ",{"fg":3,"bold":true}],["  test.cpp        ",{}]],"34":[["~                   ",{"fg":4,"bold":true}],["|",{"inverse":true}],[" 64 ",{"fg":3,"bold":true}],["To change the key bindings in the calendar window, add entries to this                                          ",{}],["|",{"inverse":true}],[" 35 ",{"fg":3,"bold":true}],["  .test.cpp.swp   ",{}]],"35":[["~                   ",{"fg":4,"bold":true}],["|",{"inverse":true}],[" 65 ",{"fg":3,"bold":true}],["dictionary.   Possible keys, the action bound to the keycode given in the                                       ",{}],["|",{"inverse":true}],["~                     ",{"fg":4,"bold":true}]],"36":[["~                   ",{"fg":4,"bold":true}],["|",{"inverse":true}],[" 66 ",{"fg":3,"bold":true}],["respective value for this key and the default binding are listed below.                                         ",{}],["|",{"inverse":true}],["~                     ",{"fg":4,"bold":true}]],"37":[["~                   ",{"fg":4,"bold":true}],["|",{"inverse":true}],[" 67 ",{"fg":3,"bold":true}],["'close'                     Closes calendar window.             'q'                                             ",{}],["|",{"inverse":true}],["~                     ",{"fg":4,"bold":true}]],"38":[["~                   ",{"fg":4,"bold":true}],["|",{"inverse":true}],[" 68 ",{"fg":3,"bold":true}],["'do_action'                 Executes |calendar_action|.           '<CR>'                                        ",{}],["|",{"inverse":true}],["~                     ",{"fg":4,"bold":true}]],"39":[["~                   ",{"fg":4,"bold":true}],["|",{"inverse":true}],[" 69 ",{"fg":3,"bold":true}],["'goto_today'                Executes |calendar_today|.            't'                                           ",{}],["|",{"inverse":true}],["~                     ",{"fg":4,"bold":true}]],"40":[["~                   ",{"fg":4,"bold":true}],["|",{"inverse":true}],[" 70 ",{"fg":3,"bold":true}],["'show_help'                 Displays a short help message.      '?'                                             ",{}],["|",{"inverse":true}],["~                     ",{"fg":4,"bold":true}]],"41":[["~                   ",{"fg":4,"bold":true}],["|",{"inverse":true}],[" 71 ",{"fg":3,"bold":true}],["'redisplay'                 Redraws calendar window.            'r'                                             ",{}],["|",{"inverse":true}],["~                     ",{"fg":4,"bold":true}]],"42":[["~                   ",{"fg":4,"bold":true}],["|",{"inverse":true}],[" 72 ",{"fg":3,"bold":true}],["'goto_next_month'           Jumps to the next month.            '<Right>'                                       ",{}],["|",{"inverse":true}],["~                     ",{"fg":4,"bold":true}]],"43":[["~                   ",{"fg":4,"bold":true}],["|",{"inverse":true}],[" 73 ",{"fg":3,"bold":true}],["'goto_prev_month'           Jumps to the previous month.        '<Left>'                                        ",{}],["|",{"inverse":true}],["~                     ",{"fg":4,"bold":true}]],"44":[["~                   ",{"fg":4,"bold":true}],["|",{"inverse":true}],[" 74 ",{"fg":3,"bold":true}],["'goto_next_year'            Jumps to the next ye",{"underline":true}],["s month.        '<Left>'                                        ",{}],["|",{"inverse":true}],["~                     ",{"fg":4,"bold":true}]]},"cursor":{"x":73,"y":44,"visible":false}}],[0.041405,{"lines":{"44":[["~                   ",{"fg":4,"bold":true}],["|",{"inverse":true}],[" 74 ",{"fg":3,"bold":true}],["'goto_next_year'            Jumps to the next year.             '<Up>'                                          ",{}],["|",{"inverse":true}],["~                     ",{"fg":4,"bold":true}]],"45":[["~                   ",{"fg":4,"bold":true}],["|",{"inverse":true}],[" 75 ",{"fg":3,"bold":true}],["'goto_prev_year'            Jumps to the previous year.         '<Down>'                                        ",{"underline":true}],["|",{"inverse":true}],["~                     ",{"fg":4,"bold":true}]],"46":[["[Name] test.cpp      ",{"inverse":true}],[" NORMAL ",{"bold":true}],[" ",{}],["calendar.txt ",{"bold":true}],["                                                        unix │ utf-8 │ text │  34% ",{}],[" LN  75",{"bold":true}],[":1  ",{}],[" ",{"bold":true,"inverse":true}],[" ~/…/calendar-vim/doc>",{"bold":true}]]},"cursor":{"x":25,"y":45,"visible":true}}],[0.004286,{"lines":{"0":[["\" Press <F1> for hel",{"fg":6,"bold":true}],["|",{"inverse":true}],[" 31 ",{"fg":3,"bold":true}],["                          calendar will show the given month in the current                                     ",{}],["|",{"inverse":true}],["  1 ",{"fg":3,"bold":true}],["\" Press ? for help",{"fg":5,"bold":true}]],"1":[["                    ",{}],["|",{"inverse":true}],[" 32 ",{"fg":3,"bold":true}],["                          year.  When both [year] and [month] are omitted, the                                  ",{}],["|",{"inverse":true}],["  2 ",{"fg":3,"bold":true}],["                  ",{}]],"2":[["▼",{"fg":3,"bold":true}],[" First",{"fg":5,"bold":true}],[" : ",{}],["struct",{"fg":2,"bold":true}],["    ",{}],["|",{"inverse":true}],[" 33 ",{"fg":3,"bold":true}],["                          calendar will show the current month.                                                 ",{}],["|",{"inverse":true}],["  3 ",{"fg":3,"bold":true}],[".. (up a dir)",{"fg":6,"bold":true}],["     ",{}]],"3":[["    [prototypes]",{"fg":6,"bold":true}],["    ",{}],["|",{"inverse":true}],[" 34 ",{"fg":3,"bold":true}],["                                                                                                                ",{}],["|",{"inverse":true}],["  4 /root/",{"fg":3,"bold":true}],["            ",{}]],"4":[["   ",{}],["+",{"fg":2,"bold":true}],["FirstRun(void)  ",{}],["|",{"inverse":true}],[" 35 ",{"fg":3,"bold":true}],["                                                *calendar-:CalendarVR*                                          ",{}],["|",{"inverse":true}],["  5 ",{"fg":3,"bold":true}],["▸ .asciinema/",{"fg":6,"bold":true}],["     ",{}]],"5":[["   ",{}],["+",{"fg":2,"bold":true}],["FirstRun2(void) ",{}],["|",{"inverse":true}],[" 36 ",{"fg":3,"bold":true}],[":CalendarVR [[year] month]  Show calendar at this year and this month in a                                      ",{}],["|",{"inverse":true}],["  6 ",{"fg":3,"bold":true}],["▸ .cache/",{"fg":6,"bold":true}],["         ",{}]],"6":[["                    ",{}],["|",{"inverse":true}],[" 37 ",{"fg":3,"bold":true}],["                          vertical split at the right site.  When [year] is                                     ",{}],["|",{"inverse":true}],["  7 ",{"fg":3,"bold":true}],["▸ .config/",{"fg":6,"bold":true}],["        ",{}]],"7":[["▼",{"fg":3,"bold":true}],[" Last",{"fg":5,"bold":true}],[" : ",{}],["struct",{"fg":2,"bold":true}],["     ",{}],["|",{"inverse":true}],[" 38 ",{"fg":3,"bold":true}],["                          omitted, the calendar will show the given month in                                    ",{}],["|",{"inverse":true}],["  8 ",{"fg":3,"bold":true}],["▸ .dbus/",{"fg":6,"bold":true}],["          ",{}]],"8":[["    [functions]",{"fg":6,"bold":true}],["     ",{}],["|",{"inverse":true}],[" 39 ",{"fg":3,"bold":true}],["                          the current year.  When both [year] and [month] are                                   ",{}],["|",{"inverse":true}],["  9 ",{"fg":3,"bold":true}],["▸ .gnupg/",{"fg":6,"bold":true}],["         ",{}]],"9":[["   ",{}],["+",{"fg":2,"bold":true}],["FirstRun(void)  ",{}],["|",{"inverse":true}],[" 40 ",{"fg":3,"bold":true}],["                          omitted, the calendar will show the current month.                                    ",{}],["|",{"inverse":true}],[" 10 ",{"fg":3,"bold":true}],["▸ .kde/",{"fg":6,"bold":true}],["           ",{}]],"10":[["   ",{}],["+",{"fg":2,"bold":true}],["FirstRun2(void) ",{}],["|",{"inverse":true}],[" 41 ",{"fg":3,"bold":true}],["                                                                                                                ",{}],["|",{"inverse":true}],[" 11 ",{"fg":3,"bold":true}],["▸ .local/",{"fg":6,"bold":true}],["         ",{}]],"11":[["   ",{}],["+",{"fg":2,"bold":true}],["~Last()         ",{}],["|",{"inverse":true}],[" 42 ",{"fg":3,"bold":true}],["MAPPINGS                                        *calendar-mappings*                                             ",{}],["|",{"inverse":true}],[" 12 ",{"fg":3,"bold":true}],["▸ .pki/",{"fg":6,"bold":true}],["           ",{}]],"12":[["   ",{}],["+",{"fg":2,"bold":true}],["SecondRun(void) ",{}],["|",{"inverse":true}],[" 43 ",{"fg":3,"bold":true}],["                                                                                                                ",{}],["|",{"inverse":true}],[" 13 ",{"fg":3,"bold":true}],["▸ .ssh/",{"fg":6,"bold":true}],["           ",{}]],"13":[["   ",{}],["+",{"fg":2,"bold":true}],["SecondRun2(void)",{}],["|",{"inverse":true}],[" 44 ",{"fg":3,"bold":true}],["calendar.vim makes the following normal mode mappings available:                                                ",{}],["|",{"inverse":true}],[" 14 ",{"fg":3,"bold":true}],["▸ .vim/",{"fg":6,"bold":true}],["           ",{}]],"14":[["                    ",{}],["|",{"inverse":true}],[" 45 ",{"fg":3,"bold":true}],["                                                                                                                ",{}],["|",{"inverse":true}],[" 15 ",{"fg":3,"bold":true}],["▸ diary/",{"fg":6,"bold":true}],["          ",{}]],"15":[["▼",{"fg":3,"bold":true}],[" Second",{"fg":5,"bold":true}],[" : ",{}],["struct",{"fg":2,"bold":true}],["   ",{}],["|",{"inverse":true}],[" 46 ",{"fg":3,"bold":true}],["                                                *calendar-cal*                                                  ",{}],["|",{"inverse":true}],[" 16 ",{"fg":3,"bold":true}],["▸ temp/",{"fg":6,"bold":true}],["           ",{}]],"16":[["    [prototypes]",{"fg":6,"bold":true}],["    ",{}],["|",{"inverse":true}],[" 47 ",{"fg":3,"bold":true}],["<LocalLeader>cal          Brings up the calendar in a vertical split.                                           ",{}],["|",{"inverse":true}],[" 17 ",{"fg":3,"bold":true}],["  .bash_history   ",{}]],"17":[["   ",{}],["+",{"fg":2,"bold":true}],["SecondRun(void) ",{}],["|",{"inverse":true}],[" 48 ",{"fg":3,"bold":true}],["                          Equivalent to calling |:Calendar|.                                                    ",{}],["|",{"inverse":true}],[" 18 ",{"fg":3,"bold":true}],["  .bash_logout    ",{}]],"18":[["   ",{}],["+",{"fg":2,"bold":true}],["SecondRun2(void)",{}],["|",{"inverse":true}],[" 49 ",{"fg":3,"bold":true}],["                                                                                                                ",{}],["|",{"inverse":true}],[" 19 ",{"fg":3,"bold":true}],["  .bash_profile   ",{"underline":true}]],"19":[["                    ",{}],["|",{"inverse":true}],[" 50 ",{"fg":3,"bold":true}],["                                                *calendar-caL*                                                  ",{}],["|",{"inverse":true}],[" 20 ",{"fg":3,"bold":true}],["  .bashrc         ",{}]],"20":[["▼",{"fg":3,"bold":true}],[" ",{}],["functions",{"fg":6,"bold":true}],["         ",{}],["|",{"inverse":true}],[" 51 ",{"fg":3,"bold":true}],["<LocalLeader>",{}],["caL ",{"bg":1}],["        ",{}],[" Bri",{"bg":1}],["ngs up the calendar in a horizontal split.                                         ",{}],["|",{"inverse":true}],[" 21 ",{"fg":3,"bold":true}],["  .cshrc          ",{}]],"21":[["    main(int argc, c",{"underline":true}],["|",{"inverse":true}],[" 52 ",{"fg":3,"bold":true}],["                          Equivalent to calling |:CalendarH|.                                                   ",{}],["|",{"inverse":true}],[" 22 ",{"fg":3,"bold":true}],["  .dmrc           ",{}]],"22":[["~                   ",{"fg":4,"bold":true}],["|",{"inverse":true}],[" 53 ",{"fg":3,"bold":true}],["                                                                                                                ",{}],["|",{"inverse":true}],[" 23 ",{"fg":3,"bold":true}],["  .esd_auth       ",{}]],"23":[["~                   ",{"fg":4,"bold":true}],["|",{"inverse":true}],[" 54 ",{"fg":3,"bold":true}],["SETTINGS                                        *calendar-settings*                                             ",{}],["|",{"inverse":true}],[" 24 ",{"fg":3,"bold":true}],["  .gtkrc-2.0      ",{}]],"24":[["~                   ",{"fg":4,"bold":true}],["|",{"inverse":true}],[" 55 ",{"fg":3,"bold":true}],["                                                                                                                ",{}],["|",{"inverse":true}],[" 25 ",{"fg":3,"bold":true}],["  .gtkrc-2.0-kde4 ",{}]],"25":[["~                   ",{"fg":4,"bold":true}],["|",{"inverse":true}],[" 56 ",{"fg":3,"bold":true}],["calendar.vim can be con",{}],["figured using the following sett",{"bg":1}],["ings:                                                    ",{}],["|",{"inverse":true}],[" 26 ",{"fg":3,"bold":true}],["  .lesshst        ",{}]],"26":[["~                   ",{"fg":4,"bold":true}],["|",{"inverse":true}],[" 57 ",{"fg":3,"bold":true}],["                                                                                                                ",{}],["|",{"inverse":true}],[" 27 ",{"fg":3,"bold":true}],["  .tcshrc         ",{}]],"27":[["~                   ",{"fg":4,"bold":true}],["|",{"inverse":true}],[" 58 ",{"fg":3,"bold":true}],["                                                *g:calendar_focus_today*                                        ",{}],["|",{"inverse":true}],[" 28 ",{"fg":3,"bold":true}],["  .viminfo        ",{}]],"28":[["~                   ",{"fg":4,"bold":true}],["|",{"inverse":true}],[" 59 ",{"fg":3,"bold":true}],["Keeps focus when moving to next or previous calendar: >                                                         ",{}],["|",{"inverse":true}],[" 29 ",{"fg":3,"bold":true}],["  .vimrc          ",{}]],"29":[["~                   ",{"fg":4,"bold":true}],["|",{"inverse":true}],[" 60 ",{"fg":3,"bold":true}],["  let g:calendar_focus_today = 1                                                                                ",{}],["|",{"inverse":true}],[" 30 ",{"fg":3,"bold":true}],["  .xsession-errors",{}]],"30":[["~                   ",{"fg":4,"bold":true}],["|",{"inverse":true}],[" 61 ",{"fg":3,"bold":true}],["<                                                                                                               ",{}],["|",{"inverse":true}],[" 31 ",{"fg":3,"bold":true}],["  anaconda-ks.cfg ",{}]],"31":[["~                   ",{"fg":4,"bold":true}],["|",{"inverse":true}],[" 62 ",{"fg":3,"bold":true}],["                                                                                                                ",{}],["|",{"inverse":true}],[" 32 ",{"fg":3,"bold":true}],["  initial-setup-ks",{}]],"32":[["~                   ",{"fg":4,"bold":true}],["|",{"inverse":true}],[" 63 ",{"fg":3,"bold":true}],["                                                *g:calendar_keys*                                               ",{}],["|",{"inverse":true}],[" 33 ",{"fg":3,"bold":true}],["  test.c          ",{}]],"33":[["~                   ",{"fg":4,"bold":true}],["|",{"inverse":true}],[" 64 ",{"fg":3,"bold":true}],["To change the key bindings in the calendar window, add entries to this                                          ",{}],["|",{"inverse":true}],[" 34 ",{"fg":3,"bold":true}],["  test.cpp        ",{}]],"34":[["~                   ",{"fg":4,"bold":true}],["|",{"inverse":true}],[" 65 ",{"fg":3,"bold":true}],["dictionary.   Possible keys, the action bound to the keycode given in the                                       ",{}],["|",{"inverse":true}],[" 35 ",{"fg":3,"bold":true}],["  .test.cpp.swp   ",{}]],"35":[["~                   ",{"fg":4,"bold":true}],["|",{"inverse":true}],[" 66 ",{"fg":3,"bold":true}],["respective value for this key and the default binding are listed below.                                         ",{}],["|",{"inverse":true}],["~                     ",{"fg":4,"bold":true}]],"36":[["~                   ",{"fg":4,"bold":true}],["|",{"inverse":true}],[" 67 ",{"fg":3,"bold":true}],["'close'                     Closes calendar window.             'q'                                             ",{}],["|",{"inverse":true}],["~                     ",{"fg":4,"bold":true}]],"37":[["~                   ",{"fg":4,"bold":true}],["|",{"inverse":true}],[" 68 ",{"fg":3,"bold":true}],["'do_action'                 Executes |calendar_action|.           '<CR>'                                        ",{}],["|",{"inverse":true}],["~                     ",{"fg":4,"bold":true}]],"38":[["~                   ",{"fg":4,"bold":true}],["|",{"inverse":true}],[" 69 ",{"fg":3,"bold":true}],["'goto_today'                Executes |calendar_today|.            't'                                           ",{}],["|",{"inverse":true}],["~                     ",{"fg":4,"bold":true}]],"39":[["~                   ",{"fg":4,"bold":true}],["|",{"inverse":true}],[" 70 ",{"fg":3,"bold":true}],["'show_help'                 Displays a short help message.      '?'                                             ",{}],["|",{"inverse":true}],["~                     ",{"fg":4,"bold":true}]],"40":[["~                   ",{"fg":4,"bold":true}],["|",{"inverse":true}],[" 71 ",{"fg":3,"bold":true}],["'redisplay'                 Redraws calendar window.            'r'                                             ",{}],["|",{"inverse":true}],["~                     ",{"fg":4,"bold":true}]],"41":[["~                   ",{"fg":4,"bold":true}],["|",{"inverse":true}],[" 72 ",{"fg":3,"bold":true}],["'goto_next_month'           Jumps to the next month.            '<Right>'                                       ",{}],["|",{"inverse":true}],["~                     ",{"fg":4,"bold":true}]],"42":[["~                   ",{"fg":4,"bold":true}],["|",{"inverse":true}],[" 73 ",{"fg":3,"bold":true}],["'goto_prev_month'           Jumps to the previous month.        '<Left>'                                        ",{}],["|",{"inverse":true}],["~                     ",{"fg":4,"bold":true}]],"43":[["~                   ",{"fg":4,"bold":true}],["|",{"inverse":true}],[" 74 ",{"fg":3,"bold":true}],["'goto_next_year'            Jumps to the next year.             '<Up>'                                          ",{}],["|",{"inverse":true}],["~                     ",{"fg":4,"bold":true}]],"44":[["~                   ",{"fg":4,"bold":true}],["|",{"inverse":true}],[" 75 ",{"fg":3,"bold":true}],["'goto_prev_year'            Jumps to the previou",{"underline":true}],["ar.             '<Up>'                                          ",{}],["|",{"inverse":true}],["~                     ",{"fg":4,"bold":true}]]},"cursor":{"x":73,"y":44,"visible":false}}],[0.020865,{"lines":{"44":[["~                   ",{"fg":4,"bold":true}],["|",{"inverse":true}],[" 75 ",{"fg":3,"bold":true}],["'goto_prev_year'            Jumps to the previous year.         '<Down>'                                        ",{}],["|",{"inverse":true}],["~                     ",{"fg":4,"bold":true}]],"45":[["~                   ",{"fg":4,"bold":true}],["|",{"inverse":true}],[" 76 ",{"fg":3,"bold":true}],["An example in your .vimrc might look like this: >                                                               ",{"underline":true}],["|",{"inverse":true}],["~                     ",{"fg":4,"bold":true}]],"46":[["[Name] test.cpp      ",{"inverse":true}],[" NORMAL ",{"bold":true}],[" ",{}],["calendar.txt ",{"bold":true}],["                                                        unix │ utf-8 │ text │  34% ",{}],[" LN  76",{"bold":true}],[":1  ",{}],[" ",{"bold":true,"inverse":true}],[" ~/…/calendar-vim/doc>",{"bold":true}]]},"cursor":{"x":25,"y":45,"visible":true}}],[0.691937,{"lines":{"47":[["                                                                                                                                                     k          ",{}]]},"cursor":{"visible":false}}],[0.054195,{"lines":{"44":[["~                   ",{"fg":4,"bold":true}],["|",{"inverse":true}],[" 75 ",{"fg":3,"bold":true}],["'goto_prev_year'            Jumps to the previous year.         '<Down>'                                        ",{"underline":true}],["|",{"inverse":true}],["~                     ",{"fg":4,"bold":true}]],"45":[["~                   ",{"fg":4,"bold":true}],["|",{"inverse":true}],[" 76 ",{"fg":3,"bold":true}],["An example in your .vimrc might look like this: >                                                               ",{}],["|",{"inverse":true}],["~                     ",{"fg":4,"bold":true}]],"46":[["[Name] test.cpp      ",{"inverse":true}],[" NORMAL ",{"bold":true}],[" ",{}],["calendar.txt ",{"bold":true}],["                                                        unix │ utf-8 │ text │  34% ",{}],[" LN  75",{"bold":true}],[":1  ",{}],[" ",{"bold":true,"inverse":true}],[" ~/…/calendar-vim/doc>",{"bold":true}]],"47":[["                                                                                                                                                                ",{}]]},"cursor":{"y":44,"visible":true}}],[0.195871,{"lines":{"47":[["                                                                                                                                                     k          ",{}]]},"cursor":{"visible":false}}],[0.06832100000000001,{"lines":{"43":[["~                   ",{"fg":4,"bold":true}],["|",{"inverse":true}],[" 74 ",{"fg":3,"bold":true}],["'goto_next_year'            Jumps to the next year.             '<Up>'                                          ",{"underline":true}],["|",{"inverse":true}],["~                     ",{"fg":4,"bold":true}]],"44":[["~                   ",{"fg":4,"bold":true}],["|",{"inverse":true}],[" 75 ",{"fg":3,"bold":true}],["'goto_prev_year'            Jumps to the previous year.         '<Down>'                                        ",{}],["|",{"inverse":true}],["~                     ",{"fg":4,"bold":true}]],"46":[["[Name] test.cpp      ",{"inverse":true}],[" NORMAL ",{"bold":true}],[" ",{}],["calendar.txt ",{"bold":true}],["                                                        unix │ utf-8 │ text │  33% ",{}],[" LN  74",{"bold":true}],[":1  ",{}],[" ",{"bold":true,"inverse":true}],[" ~/…/calendar-vim/doc>",{"bold":true}]]},"cursor":{"y":43}}],[0.015805,{"lines":{"42":[["~                   ",{"fg":4,"bold":true}],["|",{"inverse":true}],[" 73 ",{"fg":3,"bold":true}],["'goto_prev_month'           Jumps to the previous month.        '<Left>'                                        ",{"underline":true}],["|",{"inverse":true}],["~                     ",{"fg":4,"bold":true}]],"43":[["~                   ",{"fg":4,"bold":true}],["|",{"inverse":true}],[" 74 ",{"fg":3,"bold":true}],["'goto_next_year'            Jumps to the next year.             '<Up>'                                          ",{}],["|",{"inverse":true}],["~                     ",{"fg":4,"bold":true}]],"46":[["[Name] test.cpp      ",{"inverse":true}],[" NORMAL ",{"bold":true}],[" ",{}],["calendar.txt ",{"bold":true}],["                                                        unix │ utf-8 │ text │  33% ",{}],[" LN  73",{"bold":true}],[":1  ",{}],[" ",{"bold":true,"inverse":true}],[" ~/…/calendar-vim/doc>",{"bold":true}]]},"cursor":{"y":42}}],[0.032765,{"lines":{"41":[["~                   ",{"fg":4,"bold":true}],["|",{"inverse":true}],[" 72 ",{"fg":3,"bold":true}],["'goto_next_month'           Jumps to the next month.            '<Right>'                                       ",{"underline":true}],["|",{"inverse":true}],["~                     ",{"fg":4,"bold":true}]],"42":[["~                   ",{"fg":4,"bold":true}],["|",{"inverse":true}],[" 73 ",{"fg":3,"bold":true}],["'goto_prev_month'           Jumps to the previous month.        '<Left>'                                        ",{}],["|",{"inverse":true}],["~                     ",{"fg":4,"bold":true}]],"46":[["[Name] test.cpp      ",{"inverse":true}],[" NORMAL ",{"bold":true}],[" ",{}],["calendar.txt ",{"bold":true}],["                                                        unix │ utf-8 │ text │  32% ",{}],[" LN  72",{"bold":true}],[":1  ",{}],[" ",{"bold":true,"inverse":true}],[" ~/…/calendar-vim/doc>",{"bold":true}]],"47":[["                                                                                                                                                                ",{}]]},"cursor":{"y":41,"visible":true}}],[0.000145,{"lines":{"47":[["                                                                                                                                                     k          ",{}]]},"cursor":{"visible":false}}],[0.020561,{"lines":{"40":[["~                   ",{"fg":4,"bold":true}],["|",{"inverse":true}],[" 71 ",{"fg":3,"bold":true}],["'redisplay'                 Redraws calendar window.            'r'                                             ",{"underline":true}],["|",{"inverse":true}],["~                     ",{"fg":4,"bold":true}]],"41":[["~                   ",{"fg":4,"bold":true}],["|",{"inverse":true}],[" 72 ",{"fg":3,"bold":true}],["'goto_next_month'           Jumps to the next month.            '<Right>'                                       ",{}],["|",{"inverse":true}],["~                     ",{"fg":4,"bold":true}]],"46":[["[Name] test.cpp      ",{"inverse":true}],[" NORMAL ",{"bold":true}],[" ",{}],["calendar.txt ",{"bold":true}],["                                                        unix │ utf-8 │ text │  32% ",{}],[" LN  71",{"bold":true}],[":1  ",{}],[" ",{"bold":true,"inverse":true}],[" ~/…/calendar-vim/doc>",{"bold":true}]],"47":[["                                                                                                                                                                ",{}]]},"cursor":{"y":40,"visible":true}}],[0.000211,{"lines":{"47":[["                                                                                                                                                     k          ",{}]]},"cursor":{"visible":false}}],[0.032201,{"lines":{"39":[["~                   ",{"fg":4,"bold":true}],["|",{"inverse":true}],[" 70 ",{"fg":3,"bold":true}],["'show_help'                 Displays a short help message.      '?'                                             ",{"underline":true}],["|",{"inverse":true}],["~                     ",{"fg":4,"bold":true}]],"40":[["~                   ",{"fg":4,"bold":true}],["|",{"inverse":true}],[" 71 ",{"fg":3,"bold":true}],["'redisplay'                 Redraws calendar window.            'r'                                             ",{}],["|",{"inverse":true}],["~                     ",{"fg":4,"bold":true}]],"46":[["[Name] test.cpp      ",{"inverse":true}],[" NORMAL ",{"bold":true}],[" ",{}],["calendar.txt ",{"bold":true}],["                                                        unix │ utf-8 │ text │  31% ",{}],[" LN  70",{"bold":true}],[":1  ",{}],[" ",{"bold":true,"inverse":true}],[" ~/…/calendar-vim/doc>",{"bold":true}]],"47":[["                                                                                                                                                                ",{}]]},"cursor":{"y":39,"visible":true}}],[0.003826,{"lines":{"47":[["                                                                                                                                                     k          ",{}]]},"cursor":{"visible":false}}],[0.01623,{"lines":{"38":[["~                   ",{"fg":4,"bold":true}],["|",{"inverse":true}],[" 69 ",{"fg":3,"bold":true}],["'goto_today'                Executes |calendar_today|.            't'                                           ",{"underline":true}],["|",{"inverse":true}],["~                     ",{"fg":4,"bold":true}]],"39":[["~                   ",{"fg":4,"bold":true}],["|",{"inverse":true}],[" 70 ",{"fg":3,"bold":true}],["'show_help'                 Displays a short help message.      '?'                                             ",{}],["|",{"inverse":true}],["~                     ",{"fg":4,"bold":true}]],"46":[["[Name] test.cpp      ",{"inverse":true}],[" NORMAL ",{"bold":true}],[" ",{}],["calendar.txt ",{"bold":true}],["                                                        unix │ utf-8 │ text │  31% ",{}],[" LN  69",{"bold":true}],[":1  ",{}],[" ",{"bold":true,"inverse":true}],[" ~/…/calendar-vim/doc>",{"bold":true}]],"47":[["                                                                                                                                                                ",{}]]},"cursor":{"y":38,"visible":true}}],[0.010093,{"lines":{"47":[["                                                                                                                                                     k          ",{}]]},"cursor":{"visible":false}}],[0.032775,{"lines":{"37":[["~                   ",{"fg":4,"bold":true}],["|",{"inverse":true}],[" 68 ",{"fg":3,"bold":true}],["'do_action'                 Executes |calendar_action|.           '<CR>'                                        ",{"underline":true}],["|",{"inverse":true}],["~                     ",{"fg":4,"bold":true}]],"38":[["~                   ",{"fg":4,"bold":true}],["|",{"inverse":true}],[" 69 ",{"fg":3,"bold":true}],["'goto_today'                Executes |calendar_today|.            't'                                           ",{}],["|",{"inverse":true}],["~                     ",{"fg":4,"bold":true}]],"46":[["[Name] test.cpp      ",{"inverse":true}],[" NORMAL ",{"bold":true}],[" ",{}],["calendar.txt ",{"bold":true}],["                                                        unix │ utf-8 │ text │  30% ",{}],[" LN  68",{"bold":true}],[":1  ",{}],[" ",{"bold":true,"inverse":true}],[" ~/…/calendar-vim/doc>",{"bold":true}]],"47":[["                                                                                                                                                                ",{}]]},"cursor":{"y":37,"visible":true}}],[0.00127,{"lines":{"47":[["                                                                                                                                                     k          ",{}]]},"cursor":{"visible":false}}],[0.019516,{"lines":{"36":[["~                   ",{"fg":4,"bold":true}],["|",{"inverse":true}],[" 67 ",{"fg":3,"bold":true}],["'close'                     Closes calendar window.             'q'                                             ",{"underline":true}],["|",{"inverse":true}],["~                     ",{"fg":4,"bold":true}]],"37":[["~                   ",{"fg":4,"bold":true}],["|",{"inverse":true}],[" 68 ",{"fg":3,"bold":true}],["'do_action'                 Executes |calendar_action|.           '<CR>'                                        ",{}],["|",{"inverse":true}],["~                     ",{"fg":4,"bold":true}]],"46":[["[Name] test.cpp      ",{"inverse":true}],[" NORMAL ",{"bold":true}],[" ",{}],["calendar.txt ",{"bold":true}],["                                                        unix │ utf-8 │ text │  30% ",{}],[" LN  67",{"bold":true}],[":1  ",{}],[" ",{"bold":true,"inverse":true}],[" ~/…/calendar-vim/doc>",{"bold":true}]],"47":[["                                                                                                                                                                ",{}]]},"cursor":{"y":36,"visible":true}}],[0.027225,{"lines":{"47":[["                                                                                                                                                     k          ",{}]]},"cursor":{"visible":false}}],[0.016813,{"lines":{"35":[["~                   ",{"fg":4,"bold":true}],["|",{"inverse":true}],[" 66 ",{"fg":3,"bold":true}],["respective value for this key and the default binding are listed below.                                         ",{"underline":true}],["|",{"inverse":true}],["~                     ",{"fg":4,"bold":true}]],"36":[["~                   ",{"fg":4,"bold":true}],["|",{"inverse":true}],[" 67 ",{"fg":3,"bold":true}],["'close'                     Closes calendar window.             'q'                                             ",{}],["|",{"inverse":true}],["~                     ",{"fg":4,"bold":true}]],"46":[["[Name] test.cpp      ",{"inverse":true}],[" NORMAL ",{"bold":true}],[" ",{}],["calendar.txt ",{"bold":true}],["                                                        unix │ utf-8 │ text │  30% ",{}],[" LN  66",{"bold":true}],[":1  ",{}],[" ",{"bold":true,"inverse":true}],[" ~/…/calendar-vim/doc>",{"bold":true}]],"47":[["                                                                                                                                                                ",{}]]},"cursor":{"y":35,"visible":true}}],[0.004426,{"lines":{"47":[["                                                                                                                                                     k          ",{}]]},"cursor":{"visible":false}}],[0.033732,{"lines":{"34":[["~                   ",{"fg":4,"bold":true}],["|",{"inverse":true}],[" 65 ",{"fg":3,"bold":true}],["dictionary.   Possible keys, the action bound to the keycode given in the                                       ",{"underline":true}],["|",{"inverse":true}],[" 35 ",{"fg":3,"bold":true}],["  .test.cpp.swp   ",{}]],"35":[["~                   ",{"fg":4,"bold":true}],["|",{"inverse":true}],[" 66 ",{"fg":3,"bold":true}],["respective value for this key and the default binding are listed below.                                         ",{}],["|",{"inverse":true}],["~                     ",{"fg":4,"bold":true}]],"46":[["[Name] test.cpp      ",{"inverse":true}],[" NORMAL ",{"bold":true}],[" ",{}],["calendar.txt ",{"bold":true}],["                                                        unix │ utf-8 │ text │  29% ",{}],[" LN  65",{"bold":true}],[":1  ",{}],[" ",{"bold":true,"inverse":true}],[" ~/…/calendar-vim/doc>",{"bold":true}]],"47":[["                                                                                                                                                                ",{}]]},"cursor":{"y":34,"visible":true}}],[0.000265,{"lines":{"47":[["                                                                                                                                                     k          ",{}]]},"cursor":{"visible":false}}],[0.019954,{"lines":{"33":[["~                   ",{"fg":4,"bold":true}],["|",{"inverse":true}],[" 64 ",{"fg":3,"bold":true}],["To change the key bindings in the calendar window, add entries to this                                          ",{"underline":true}],["|",{"inverse":true}],[" 34 ",{"fg":3,"bold":true}],["  test.cpp        ",{}]],"34":[["~                   ",{"fg":4,"bold":true}],["|",{"inverse":true}],[" 65 ",{"fg":3,"bold":true}],["dictionary.   Possible keys, the action bound to the keycode given in the                                       ",{}],["|",{"inverse":true}],[" 35 ",{"fg":3,"bold":true}],["  .test.cpp.swp   ",{}]],"46":[["[Name] test.cpp      ",{"inverse":true}],[" NORMAL ",{"bold":true}],[" ",{}],["calendar.txt ",{"bold":true}],["                                                        unix │ utf-8 │ text │  29% ",{}],[" LN  64",{"bold":true}],[":1  ",{}],[" ",{"bold":true,"inverse":true}],[" ~/…/calendar-vim/doc>",{"bold":true}]],"47":[["                                                                                                                                                                ",{}]]},"cursor":{"y":33,"visible":true}}],[0.029794,{"lines":{"47":[["                                                                                                                                                     k          ",{}]]},"cursor":{"visible":false}}],[0.016269,{"lines":{"32":[["~                   ",{"fg":4,"bold":true}],["|",{"inverse":true}],[" 63 ",{"fg":3,"bold":true}],["                                                *g:calendar_keys*                                               ",{"underline":true}],["|",{"inverse":true}],[" 33 ",{"fg":3,"bold":true}],["  test.c          ",{}]],"33":[["~                   ",{"fg":4,"bold":true}],["|",{"inverse":true}],[" 64 ",{"fg":3,"bold":true}],["To change the key bindings in the calendar window, add entries to this                                          ",{}],["|",{"inverse":true}],[" 34 ",{"fg":3,"bold":true}],["  test.cpp        ",{}]],"46":[["[Name] test.cpp      ",{"inverse":true}],[" NORMAL ",{"bold":true}],[" ",{}],["calendar.txt ",{"bold":true}],["                                                        unix │ utf-8 │ text │  28% ",{}],[" LN  63",{"bold":true}],[":1  ",{}],[" ",{"bold":true,"inverse":true}],[" ~/…/calendar-vim/doc>",{"bold":true}]],"47":[["                                                                                                                                                                ",{}]]},"cursor":{"y":32,"visible":true}}],[0.00213,{"lines":{"47":[["                                                                                                                                                     k          ",{}]]},"cursor":{"visible":false}}],[0.03491,{"lines":{"31":[["~                   ",{"fg":4,"bold":true}],["|",{"inverse":true}],[" 62 ",{"fg":3,"bold":true}],["                                                                                                                ",{"underline":true}],["|",{"inverse":true}],[" 32 ",{"fg":3,"bold":true}],["  initial-setup-ks",{}]],"32":[["~                   ",{"fg":4,"bold":true}],["|",{"inverse":true}],[" 63 ",{"fg":3,"bold":true}],["                                                *g:calendar_keys*                                               ",{}],["|",{"inverse":true}],[" 33 ",{"fg":3,"bold":true}],["  test.c          ",{}]],"46":[["[Name] test.cpp      ",{"inverse":true}],[" NORMAL ",{"bold":true}],[" ",{}],["calendar.txt ",{"bold":true}],["                                                        unix │ utf-8 │ text │  28% ",{}],[" LN  62",{"bold":true}],[":1  ",{}],[" ",{"bold":true,"inverse":true}],[" ~/…/calendar-vim/doc>",{"bold":true}]],"47":[["                                                                                                                                                                ",{}]]},"cursor":{"y":31,"visible":true}}],[0.004088,{"lines":{"47":[["                                                                                                                                                     k          ",{}]]},"cursor":{"visible":false}}],[0.017005,{"lines":{"30":[["~                   ",{"fg":4,"bold":true}],["|",{"inverse":true}],[" 61 ",{"fg":3,"bold":true}],["<                                                                                                               ",{"underline":true}],["|",{"inverse":true}],[" 31 ",{"fg":3,"bold":true}],["  anaconda-ks.cfg ",{}]],"31":[["~                   ",{"fg":4,"bold":true}],["|",{"inverse":true}],[" 62 ",{"fg":3,"bold":true}],["                                                                                                                ",{}],["|",{"inverse":true}],[" 32 ",{"fg":3,"bold":true}],["  initial-setup-ks",{}]],"46":[["[Name] test.cpp      ",{"inverse":true}],[" NORMAL ",{"bold":true}],[" ",{}],["calendar.txt ",{"bold":true}],["                                                        unix │ utf-8 │ text │  27% ",{}],[" LN  61",{"bold":true}],[":1  ",{}],[" ",{"bold":true,"inverse":true}],[" ~/…/calendar-vim/doc>",{"bold":true}]],"47":[["                                                                                                                                                                ",{}]]},"cursor":{"y":30,"visible":true}}],[0.029443,{"lines":{"47":[["                                                                                                                                                     k          ",{}]]},"cursor":{"visible":false}}],[0.016071,{"lines":{"29":[["~                   ",{"fg":4,"bold":true}],["|",{"inverse":true}],[" 60 ",{"fg":3,"bold":true}],["  let g:calendar_focus_today = 1                                                                                ",{"underline":true}],["|",{"inverse":true}],[" 30 ",{"fg":3,"bold":true}],["  .xsession-errors",{}]],"30":[["~                   ",{"fg":4,"bold":true}],["|",{"inverse":true}],[" 61 ",{"fg":3,"bold":true}],["<                                                                                                               ",{}],["|",{"inverse":true}],[" 31 ",{"fg":3,"bold":true}],["  anaconda-ks.cfg ",{}]],"46":[["[Name] test.cpp      ",{"inverse":true}],[" NORMAL ",{"bold":true}],[" ",{}],["calendar.txt ",{"bold":true}],["                                                        unix │ utf-8 │ text │  27% ",{}],[" LN  60",{"bold":true}],[":1  ",{}],[" ",{"bold":true,"inverse":true}],[" ~/…/calendar-vim/doc>",{"bold":true}]],"47":[["                                                                                                                                                                ",{}]]},"cursor":{"y":29,"visible":true}}],[0.000642,{"lines":{"47":[["                                                                                                                                                     k          ",{}]]},"cursor":{"visible":false}}],[0.033334,{"lines":{"28":[["~                   ",{"fg":4,"bold":true}],["|",{"inverse":true}],[" 59 ",{"fg":3,"bold":true}],["Keeps focus when moving to next or previous calendar: >                                                         ",{"underline":true}],["|",{"inverse":true}],[" 29 ",{"fg":3,"bold":true}],["  .vimrc          ",{}]],"29":[["~                   ",{"fg":4,"bold":true}],["|",{"inverse":true}],[" 60 ",{"fg":3,"bold":true}],["  let g:calendar_focus_today = 1                                                                                ",{}],["|",{"inverse":true}],[" 30 ",{"fg":3,"bold":true}],["  .xsession-errors",{}]],"46":[["[Name] test.cpp      ",{"inverse":true}],[" NORMAL ",{"bold":true}],[" ",{}],["calendar.txt ",{"bold":true}],["                                                        unix │ utf-8 │ text │  26% ",{}],[" LN  59",{"bold":true}],[":1  ",{}],[" ",{"bold":true,"inverse":true}],[" ~/…/calendar-vim/doc>",{"bold":true}]],"47":[["                                                                                                                                                                ",{}]]},"cursor":{"y":28,"visible":true}}],[0.005551,{"lines":{"47":[["                                                                                                                                                     k          ",{}]]},"cursor":{"visible":false}}],[0.016594,{"lines":{"27":[["~                   ",{"fg":4,"bold":true}],["|",{"inverse":true}],[" 58 ",{"fg":3,"bold":true}],["                                                *g:calendar_focus_today*                                        ",{"underline":true}],["|",{"inverse":true}],[" 28 ",{"fg":3,"bold":true}],["  .viminfo        ",{}]],"28":[["~                   ",{"fg":4,"bold":true}],["|",{"inverse":true}],[" 59 ",{"fg":3,"bold":true}],["Keeps focus when moving to next or previous calendar: >                                                         ",{}],["|",{"inverse":true}],[" 29 ",{"fg":3,"bold":true}],["  .vimrc          ",{}]],"46":[["[Name] test.cpp      ",{"inverse":true}],[" NORMAL ",{"bold":true}],[" ",{}],["calendar.txt ",{"bold":true}],["                                                        unix │ utf-8 │ text │  26% ",{}],[" LN  58",{"bold":true}],[":1  ",{}],[" ",{"bold":true,"inverse":true}],[" ~/…/calendar-vim/doc>",{"bold":true}]],"47":[["                                                                                                                                                                ",{}]]},"cursor":{"y":27,"visible":true}}],[0.028133,{"lines":{"47":[["                                                                                                                                                     k          ",{}]]},"cursor":{"visible":false}}],[0.01688,{"lines":{"26":[["~                   ",{"fg":4,"bold":true}],["|",{"inverse":true}],[" 57 ",{"fg":3,"bold":true}],["                                                                                                                ",{"underline":true}],["|",{"inverse":true}],[" 27 ",{"fg":3,"bold":true}],["  .tcshrc         ",{}]],"27":[["~                   ",{"fg":4,"bold":true}],["|",{"inverse":true}],[" 58 ",{"fg":3,"bold":true}],["                                                *g:calendar_focus_today*                                        ",{}],["|",{"inverse":true}],[" 28 ",{"fg":3,"bold":true}],["  .viminfo        ",{}]],"46":[["[Name] test.cpp      ",{"inverse":true}],[" NORMAL ",{"bold":true}],[" ",{}],["calendar.txt ",{"bold":true}],["                                                        unix │ utf-8 │ text │  25% ",{}],[" LN  57",{"bold":true}],[":1  ",{}],[" ",{"bold":true,"inverse":true}],[" ~/…/calendar-vim/doc>",{"bold":true}]],"47":[["                                                                                                                                                                ",{}]]},"cursor":{"y":26,"visible":true}}],[0.004227,{"lines":{"47":[["                                                                                                                                                     k          ",{}]]},"cursor":{"visible":false}}],[0.034004,{"lines":{"25":[["~                   ",{"fg":4,"bold":true}],["|",{"inverse":true}],[" 56 ",{"fg":3,"bold":true}],["calendar.vim can be con",{"underline":true}],["figured using the following sett",{"bg":1}],["ings:                                                    ",{"underline":true}],["|",{"inverse":true}],[" 26 ",{"fg":3,"bold":true}],["  .lesshst        ",{}]],"26":[["~                   ",{"fg":4,"bold":true}],["|",{"inverse":true}],[" 57 ",{"fg":3,"bold":true}],["                                                                                                                ",{}],["|",{"inverse":true}],[" 27 ",{"fg":3,"bold":true}],["  .tcshrc         ",{}]],"46":[["[Name] test.cpp      ",{"inverse":true}],[" NORMAL ",{"bold":true}],[" ",{}],["calendar.txt ",{"bold":true}],["                                                        unix │ utf-8 │ text │  25% ",{}],[" LN  56",{"bold":true}],[":1  ",{}],[" ",{"bold":true,"inverse":true}],[" ~/…/calendar-vim/doc>",{"bold":true}]],"47":[["                                                                                                                                                                ",{}]]},"cursor":{"y":25,"visible":true}}],[0.004321,{"lines":{"47":[["                                                                                                                                                     k          ",{}]]},"cursor":{"visible":false}}],[0.014315,{"lines":{"24":[["~                   ",{"fg":4,"bold":true}],["|",{"inverse":true}],[" 55 ",{"fg":3,"bold":true}],["                                                                                                                ",{"underline":true}],["|",{"inverse":true}],[" 25 ",{"fg":3,"bold":true}],["  .gtkrc-2.0-kde4 ",{}]],"25":[["~                   ",{"fg":4,"bold":true}],["|",{"inverse":true}],[" 56 ",{"fg":3,"bold":true}],["calendar.vim can be con",{}],["figured using the following sett",{"bg":1}],["ings:                                                    ",{}],["|",{"inverse":true}],[" 26 ",{"fg":3,"bold":true}],["  .lesshst        ",{}]],"46":[["[Name] test.cpp      ",{"inverse":true}],[" NORMAL ",{"bold":true}],[" ",{}],["calendar.txt ",{"bold":true}],["                                                        unix │ utf-8 │ text │  25% ",{}],[" LN  55",{"bold":true}],[":1  ",{}],[" ",{"bold":true,"inverse":true}],[" ~/…/calendar-vim/doc>",{"bold":true}]],"47":[["                                                                                                                                                                ",{}]]},"cursor":{"y":24,"visible":true}}],[0.033476,{"lines":{"47":[["                                                                                                                                                     k          ",{}]]},"cursor":{"visible":false}}],[0.015944,{"lines":{"23":[["~                   ",{"fg":4,"bold":true}],["|",{"inverse":true}],[" 54 ",{"fg":3,"bold":true}],["SETTINGS                                        *calendar-settings*                                             ",{"underline":true}],["|",{"inverse":true}],[" 24 ",{"fg":3,"bold":true}],["  .gtkrc-2.0      ",{}]],"24":[["~                   ",{"fg":4,"bold":true}],["|",{"inverse":true}],[" 55 ",{"fg":3,"bold":true}],["                                                                                                                ",{}],["|",{"inverse":true}],[" 25 ",{"fg":3,"bold":true}],["  .gtkrc-2.0-kde4 ",{}]],"46":[["[Name] test.cpp      ",{"inverse":true}],[" NORMAL ",{"bold":true}],[" ",{}],["calendar.txt ",{"bold":true}],["                                                        unix │ utf-8 │ text │  24% ",{}],[" LN  54",{"bold":true}],[":1  ",{}],[" ",{"bold":true,"inverse":true}],[" ~/…/calendar-vim/doc>",{"bold":true}]]},"cursor":{"y":23}}],[0.016048,{"lines":{"22":[["~                   ",{"fg":4,"bold":true}],["|",{"inverse":true}],[" 53 ",{"fg":3,"bold":true}],["                                                                                                                ",{"underline":true}],["|",{"inverse":true}],[" 23 ",{"fg":3,"bold":true}],["  .esd_auth       ",{}]],"23":[["~                   ",{"fg":4,"bold":true}],["|",{"inverse":true}],[" 54 ",{"fg":3,"bold":true}],["SETTINGS                                        *calendar-settings*                                             ",{}],["|",{"inverse":true}],[" 24 ",{"fg":3,"bold":true}],["  .gtkrc-2.0      ",{}]],"46":[["[Name] test.cpp      ",{"inverse":true}],[" NORMAL ",{"bold":true}],[" ",{}],["calendar.txt ",{"bold":true}],["                                                        unix │ utf-8 │ text │  24% ",{}],[" LN  53",{"bold":true}],[":1  ",{}],[" ",{"bold":true,"inverse":true}],[" ~/…/calendar-vim/doc>",{"bold":true}]],"47":[["                                                                                                                                                                ",{}]]},"cursor":{"y":22,"visible":true}}],[0.022039,{"lines":{"47":[["                                                                                                                                                     k          ",{}]]},"cursor":{"visible":false}}],[0.012745,{"lines":{"21":[["    main(int argc, c",{"underline":true}],["|",{"inverse":true}],[" 52 ",{"fg":3,"bold":true}],["                          Equivalent to calling |:CalendarH|.                                                   ",{"underline":true}],["|",{"inverse":true}],[" 22 ",{"fg":3,"bold":true}],["  .dmrc           ",{}]],"22":[["~                   ",{"fg":4,"bold":true}],["|",{"inverse":true}],[" 53 ",{"fg":3,"bold":true}],["                                                                                                                ",{}],["|",{"inverse":true}],[" 23 ",{"fg":3,"bold":true}],["  .esd_auth       ",{}]],"46":[["[Name] test.cpp      ",{"inverse":true}],[" NORMAL ",{"bold":true}],[" ",{}],["calendar.txt ",{"bold":true}],["                                                        unix │ utf-8 │ text │  23% ",{}],[" LN  52",{"bold":true}],[":1  ",{}],[" ",{"bold":true,"inverse":true}],[" ~/…/calendar-vim/doc>",{"bold":true}]],"47":[["                                                                                                                                                                ",{}]]},"cursor":{"y":21,"visible":true}}],[0.017282,{"lines":{"47":[["                                                                                                                                                     k          ",{}]]},"cursor":{"visible":false}}],[0.032305,{"lines":{"20":[["▼",{"fg":3,"bold":true}],[" ",{}],["functions",{"fg":6,"bold":true}],["         ",{}],["|",{"inverse":true}],[" 51 ",{"fg":3,"bold":true}],["<LocalLeader>",{"underline":true}],["caL ",{"bg":1}],["        ",{"underline":true}],[" Bri",{"bg":1}],["ngs up the calendar in a horizontal split.                                         ",{"underline":true}],["|",{"inverse":true}],[" 21 ",{"fg":3,"bold":true}],["  .cshrc          ",{}]],"21":[["    main(int argc, c",{"underline":true}],["|",{"inverse":true}],[" 52 ",{"fg":3,"bold":true}],["                          Equivalent to calling |:CalendarH|.                                                   ",{}],["|",{"inverse":true}],[" 22 ",{"fg":3,"bold":true}],["  .dmrc           ",{}]],"46":[["[Name] test.cpp      ",{"inverse":true}],[" NORMAL ",{"bold":true}],[" ",{}],["calendar.txt ",{"bold":true}],["                                                        unix │ utf-8 │ text │  23% ",{}],[" LN  51",{"bold":true}],[":1  ",{}],[" ",{"bold":true,"inverse":true}],[" ~/…/calendar-vim/doc>",{"bold":true}]],"47":[["                                                                                                                                                                ",{}]]},"cursor":{"y":20,"visible":true}}],[0.278322,{"lines":{"47":[["                                                                                                                                                     j          ",{}]]},"cursor":{"visible":false}}],[0.050152,{"lines":{"20":[["▼",{"fg":3,"bold":true}],[" ",{}],["functions",{"fg":6,"bold":true}],["         ",{}],["|",{"inverse":true}],[" 51 ",{"fg":3,"bold":true}],["<LocalLeader>",{}],["caL ",{"bg":1}],["        ",{}],[" Bri",{"bg":1}],["ngs up the calendar in a horizontal split.                                         ",{}],["|",{"inverse":true}],[" 21 ",{"fg":3,"bold":true}],["  .cshrc          ",{}]],"21":[["    main(int argc, c",{"underline":true}],["|",{"inverse":true}],[" 52 ",{"fg":3,"bold":true}],["                          Equivalent to calling |:CalendarH|.                                                   ",{"underline":true}],["|",{"inverse":true}],[" 22 ",{"fg":3,"bold":true}],["  .dmrc           ",{}]],"46":[["[Name] test.cpp      ",{"inverse":true}],[" NORMAL ",{"bold":true}],[" ",{}],["calendar.txt ",{"bold":true}],["                                                        unix │ utf-8 │ text │  23% ",{}],[" LN  52",{"bold":true}],[":1  ",{}],[" ",{"bold":true,"inverse":true}],[" ~/…/calendar-vim/doc>",{"bold":true}]],"47":[["                                                                                                                                                                ",{}]]},"cursor":{"y":21,"visible":true}}],[0.199878,{"lines":{"47":[["                                                                                                                                                     j          ",{}]]},"cursor":{"visible":false}}],[0.091182,{"lines":{"21":[["    main(int argc, c",{"underline":true}],["|",{"inverse":true}],[" 52 ",{"fg":3,"bold":true}],["                          Equivalent to calling |:CalendarH|.                                                   ",{}],["|",{"inverse":true}],[" 22 ",{"fg":3,"bold":true}],["  .dmrc           ",{}]],"23":[["~                   ",{"fg":4,"bold":true}],["|",{"inverse":true}],[" 54 ",{"fg":3,"bold":true}],["SETTINGS                                        *calendar-settings*                                             ",{"underline":true}],["|",{"inverse":true}],[" 24 ",{"fg":3,"bold":true}],["  .gtkrc-2.0      ",{}]],"46":[["[Name] test.cpp      ",{"inverse":true}],[" NORMAL ",{"bold":true}],[" ",{}],["calendar.txt ",{"bold":true}],["                                                        unix │ utf-8 │ text │  24% ",{}],[" LN  54",{"bold":true}],[":1  ",{}],[" ",{"bold":true,"inverse":true}],[" ~/…/calendar-vim/doc>",{"bold":true}]],"47":[["                                                                                                                                                                ",{}]]},"cursor":{"y":23,"visible":true}}],[0.003834,{"lines":{"47":[["                                                                                                                                                     j          ",{}]]},"cursor":{"visible":false}}],[0.01325,{"lines":{"23":[["~                   ",{"fg":4,"bold":true}],["|",{"inverse":true}],[" 54 ",{"fg":3,"bold":true}],["SETTINGS                                        *calendar-settings*                                             ",{}],["|",{"inverse":true}],[" 24 ",{"fg":3,"bold":true}],["  .gtkrc-2.0      ",{}]],"24":[["~                   ",{"fg":4,"bold":true}],["|",{"inverse":true}],[" 55 ",{"fg":3,"bold":true}],["                                                                                                                ",{"underline":true}],["|",{"inverse":true}],[" 25 ",{"fg":3,"bold":true}],["  .gtkrc-2.0-kde4 ",{}]],"46":[["[Name] test.cpp      ",{"inverse":true}],[" NORMAL ",{"bold":true}],[" ",{}],["calendar.txt ",{"bold":true}],["                                                        unix │ utf-8 │ text │  25% ",{}],[" LN  55",{"bold":true}],[":1  ",{}],[" ",{"bold":true,"inverse":true}],[" ~/…/calendar-vim/doc>",{"bold":true}]]},"cursor":{"y":24}}],[0.033556,{"lines":{"24":[["~                   ",{"fg":4,"bold":true}],["|",{"inverse":true}],[" 55 ",{"fg":3,"bold":true}],["                                                                                                                ",{}],["|",{"inverse":true}],[" 25 ",{"fg":3,"bold":true}],["  .gtkrc-2.0-kde4 ",{}]],"25":[["~                   ",{"fg":4,"bold":true}],["|",{"inverse":true}],[" 56 ",{"fg":3,"bold":true}],["calendar.vim can be con",{"underline":true}],["figured using the following sett",{"bg":1}],["ings:                                                    ",{"underline":true}],["|",{"inverse":true}],[" 26 ",{"fg":3,"bold":true}],["  .lesshst        ",{}]],"46":[["[Name] test.cpp      ",{"inverse":true}],[" NORMAL ",{"bold":true}],[" ",{}],["calendar.txt ",{"bold":true}],["                                                        unix │ utf-8 │ text │  25% ",{}],[" LN  56",{"bold":true}],[":1  ",{}],[" ",{"bold":true,"inverse":true}],[" ~/…/calendar-vim/doc>",{"bold":true}]],"47":[["                                                                                                                                                                ",{}]]},"cursor":{"y":25,"visible":true}}],[0.004122,{"lines":{"47":[["                                                                                                                                                     j          ",{}]]},"cursor":{"visible":false}}],[0.016243,{"lines":{"25":[["~                   ",{"fg":4,"bold":true}],["|",{"inverse":true}],[" 56 ",{"fg":3,"bold":true}],["calendar.vim can be con",{}],["figured using the following sett",{"bg":1}],["ings:                                                    ",{}],["|",{"inverse":true}],[" 26 ",{"fg":3,"bold":true}],["  .lesshst        ",{}]],"26":[["~                   ",{"fg":4,"bold":true}],["|",{"inverse":true}],[" 57 ",{"fg":3,"bold":true}],["                                                                                                                ",{"underline":true}],["|",{"inverse":true}],[" 27 ",{"fg":3,"bold":true}],["  .tcshrc         ",{}]],"46":[["[Name] test.cpp      ",{"inverse":true}],[" NORMAL ",{"bold":true}],[" ",{}],["calendar.txt ",{"bold":true}],["                                                        unix │ utf-8 │ text │  25% ",{}],[" LN  57",{"bold":true}],[":1  ",{}],[" ",{"bold":true,"inverse":true}],[" ~/…/calendar-vim/doc>",{"bold":true}]],"47":[["                                                                                                                                                                ",{}]]},"cursor":{"y":26,"visible":true}}],[0.004032,{"lines":{"47":[["                                                                                                                                                     j          ",{}]]},"cursor":{"visible":false}}],[0.033988,{"lines":{"26":[["~                   ",{"fg":4,"bold":true}],["|",{"inverse":true}],[" 57 ",{"fg":3,"bold":true}],["                                                                                                                ",{}],["|",{"inverse":true}],[" 27 ",{"fg":3,"bold":true}],["  .tcshrc         ",{}]],"27":[["~                   ",{"fg":4,"bold":true}],["|",{"inverse":true}],[" 58 ",{"fg":3,"bold":true}],["                                                *g:calendar_focus_today*                                        ",{"underline":true}],["|",{"inverse":true}],[" 28 ",{"fg":3,"bold":true}],["  .viminfo        ",{}]],"46":[["[Name] test.cpp      ",{"inverse":true}],[" NORMAL ",{"bold":true}],[" ",{}],["calendar.txt ",{"bold":true}],["                                                        unix │ utf-8 │ text │  26% ",{}],[" LN  58",{"bold":true}],[":1  ",{}],[" ",{"bold":true,"inverse":true}],[" ~/…/calendar-vim/doc>",{"bold":true}]],"47":[["                                                                                                                                                                ",{}]]},"cursor":{"y":27,"visible":true}}],[0.004648,{"lines":{"47":[["                                                                                                                                                     j          ",{}]]},"cursor":{"visible":false}}],[0.017658,{"lines":{"27":[["~                   ",{"fg":4,"bold":true}],["|",{"inverse":true}],[" 58 ",{"fg":3,"bold":true}],["                                                *g:calendar_focus_today*                                        ",{}],["|",{"inverse":true}],[" 28 ",{"fg":3,"bold":true}],["  .viminfo        ",{}]],"28":[["~                   ",{"fg":4,"bold":true}],["|",{"inverse":true}],[" 59 ",{"fg":3,"bold":true}],["Keeps focus when moving to next or previous calendar: >                                                         ",{"underline":true}],["|",{"inverse":true}],[" 29 ",{"fg":3,"bold":true}],["  .vimrc          ",{}]],"46":[["[Name] test.cpp      ",{"inverse":true}],[" NORMAL ",{"bold":true}],[" ",{}],["calendar.txt ",{"bold":true}],["                                                        unix │ utf-8 │ text │  26% ",{}],[" LN  59",{"bold":true}],[":1  ",{}],[" ",{"bold":true,"inverse":true}],[" ~/…/calendar-vim/doc>",{"bold":true}]],"47":[["                                                                                                                                                                ",{}]]},"cursor":{"y":28,"visible":true}}],[0.028709,{"lines":{"47":[["                                                                                                                                                     j          ",{}]]},"cursor":{"visible":false}}],[0.016631,{"lines":{"28":[["~                   ",{"fg":4,"bold":true}],["|",{"inverse":true}],[" 59 ",{"fg":3,"bold":true}],["Keeps focus when moving to next or previous calendar: >                                                         ",{}],["|",{"inverse":true}],[" 29 ",{"fg":3,"bold":true}],["  .vimrc          ",{}]],"29":[["~                   ",{"fg":4,"bold":true}],["|",{"inverse":true}],[" 60 ",{"fg":3,"bold":true}],["  let g:calendar_focus_today = 1                                                                                ",{"underline":true}],["|",{"inverse":true}],[" 30 ",{"fg":3,"bold":true}],["  .xsession-errors",{}]],"46":[["[Name] test.cpp      ",{"inverse":true}],[" NORMAL ",{"bold":true}],[" ",{}],["calendar.txt ",{"bold":true}],["                                                        unix │ utf-8 │ text │  27% ",{}],[" LN  60",{"bold":true}],[":1  ",{}],[" ",{"bold":true,"inverse":true}],[" ~/…/calendar-vim/doc>",{"bold":true}]],"47":[["                                                                                                                                                                ",{}]]},"cursor":{"y":29,"visible":true}}],[0.002451,{"lines":{"47":[["                                                                                                                                                     j          ",{}]]},"cursor":{"visible":false}}],[0.03308,{"lines":{"29":[["~                   ",{"fg":4,"bold":true}],["|",{"inverse":true}],[" 60 ",{"fg":3,"bold":true}],["  let g:calendar_focus_today = 1                                                                                ",{}],["|",{"inverse":true}],[" 30 ",{"fg":3,"bold":true}],["  .xsession-errors",{}]],"30":[["~                   ",{"fg":4,"bold":true}],["|",{"inverse":true}],[" 61 ",{"fg":3,"bold":true}],["<                                                                                                               ",{"underline":true}],["|",{"inverse":true}],[" 31 ",{"fg":3,"bold":true}],["  anaconda-ks.cfg ",{}]],"46":[["[Name] test.cpp      ",{"inverse":true}],[" NORMAL ",{"bold":true}],[" ",{}],["calendar.txt ",{"bold":true}],["                                                        unix │ utf-8 │ text │  27% ",{}],[" LN  61",{"bold":true}],[":1  ",{}],[" ",{"bold":true,"inverse":true}],[" ~/…/calendar-vim/doc>",{"bold":true}]],"47":[["                                                                                                                                                                ",{}]]},"cursor":{"y":30,"visible":true}}],[0.005531,{"lines":{"47":[["                                                                                                                                                     j          ",{}]]},"cursor":{"visible":false}}],[0.016064,{"lines":{"30":[["~                   ",{"fg":4,"bold":true}],["|",{"inverse":true}],[" 61 ",{"fg":3,"bold":true}],["<                                                                                                               ",{}],["|",{"inverse":true}],[" 31 ",{"fg":3,"bold":true}],["  anaconda-ks.cfg ",{}]],"31":[["~                   ",{"fg":4,"bold":true}],["|",{"inverse":true}],[" 62 ",{"fg":3,"bold":true}],["                                                                                                                ",{"underline":true}],["|",{"inverse":true}],[" 32 ",{"fg":3,"bold":true}],["  initial-setup-ks",{}]],"46":[["[Name] test.cpp      ",{"inverse":true}],[" NORMAL ",{"bold":true}],[" ",{}],["calendar.txt ",{"bold":true}],["                                                        unix │ utf-8 │ text │  28% ",{}],[" LN  62",{"bold":true}],[":1  ",{}],[" ",{"bold":true,"inverse":true}],[" ~/…/calendar-vim/doc>",{"bold":true}]],"47":[["                                                                                                                                                                ",{}]]},"cursor":{"y":31,"visible":true}}],[0.028979,{"lines":{"47":[["                                                                                                                                                     j          ",{}]]},"cursor":{"visible":false}}],[0.017296,{"lines":{"31":[["~                   ",{"fg":4,"bold":true}],["|",{"inverse":true}],[" 62 ",{"fg":3,"bold":true}],["                                                                                                                ",{}],["|",{"inverse":true}],[" 32 ",{"fg":3,"bold":true}],["  initial-setup-ks",{}]],"32":[["~                   ",{"fg":4,"bold":true}],["|",{"inverse":true}],[" 63 ",{"fg":3,"bold":true}],["                                                *g:calendar_keys*                                               ",{"underline":true}],["|",{"inverse":true}],[" 33 ",{"fg":3,"bold":true}],["  test.c          ",{}]],"46":[["[Name] test.cpp      ",{"inverse":true}],[" NORMAL ",{"bold":true}],[" ",{}],["calendar.txt ",{"bold":true}],["                                                        unix │ utf-8 │ text │  28% ",{}],[" LN  63",{"bold":true}],[":1  ",{}],[" ",{"bold":true,"inverse":true}],[" ~/…/calendar-vim/doc>",{"bold":true}]],"47":[["                                                                                                                                                                ",{}]]},"cursor":{"y":32,"visible":true}}],[0.002169,{"lines":{"47":[["                                                                                                                                                     j          ",{}]]},"cursor":{"visible":false}}],[0.032992,{"lines":{"32":[["~                   ",{"fg":4,"bold":true}],["|",{"inverse":true}],[" 63 ",{"fg":3,"bold":true}],["                                                *g:calendar_keys*                                               ",{}],["|",{"inverse":true}],[" 33 ",{"fg":3,"bold":true}],["  test.c          ",{}]],"33":[["~                   ",{"fg":4,"bold":true}],["|",{"inverse":true}],[" 64 ",{"fg":3,"bold":true}],["To change the key bindings in the calendar window, add entries to this                                          ",{"underline":true}],["|",{"inverse":true}],[" 34 ",{"fg":3,"bold":true}],["  test.cpp        ",{}]],"46":[["[Name] test.cpp      ",{"inverse":true}],[" NORMAL ",{"bold":true}],[" ",{}],["calendar.txt ",{"bold":true}],["                                                        unix │ utf-8 │ text │  29% ",{}],[" LN  64",{"bold":true}],[":1  ",{}],[" ",{"bold":true,"inverse":true}],[" ~/…/calendar-vim/doc>",{"bold":true}]],"47":[["                                                                                                                                                                ",{}]]},"cursor":{"y":33,"visible":true}}],[0.005505,{"lines":{"47":[["                                                                                                                                                     j          ",{}]]},"cursor":{"visible":false}}],[0.017228,{"lines":{"33":[["~                   ",{"fg":4,"bold":true}],["|",{"inverse":true}],[" 64 ",{"fg":3,"bold":true}],["To change the key bindings in the calendar window, add entries to this                                          ",{}],["|",{"inverse":true}],[" 34 ",{"fg":3,"bold":true}],["  test.cpp        ",{}]],"34":[["~                   ",{"fg":4,"bold":true}],["|",{"inverse":true}],[" 65 ",{"fg":3,"bold":true}],["dictionary.   Possible keys, the action bound to the keycode given in the                                       ",{"underline":true}],["|",{"inverse":true}],[" 35 ",{"fg":3,"bold":true}],["  .test.cpp.swp   ",{}]],"46":[["[Name] test.cpp      ",{"inverse":true}],[" NORMAL ",{"bold":true}],[" ",{}],["calendar.txt ",{"bold":true}],["                                                        unix │ utf-8 │ text │  29% ",{}],[" LN  65",{"bold":true}],[":1  ",{}],[" ",{"bold":true,"inverse":true}],[" ~/…/calendar-vim/doc>",{"bold":true}]],"47":[["                                                                                                                                                                ",{}]]},"cursor":{"y":34,"visible":true}}],[0.026803,{"lines":{"47":[["                                                                                                                                                     j          ",{}]]},"cursor":{"visible":false}}],[0.017244,{"lines":{"34":[["~                   ",{"fg":4,"bold":true}],["|",{"inverse":true}],[" 65 ",{"fg":3,"bold":true}],["dictionary.   Possible keys, the action bound to the keycode given in the                                       ",{}],["|",{"inverse":true}],[" 35 ",{"fg":3,"bold":true}],["  .test.cpp.swp   ",{}]],"35":[["~                   ",{"fg":4,"bold":true}],["|",{"inverse":true}],[" 66 ",{"fg":3,"bold":true}],["respective value for this key and the default binding are listed below.                                         ",{"underline":true}],["|",{"inverse":true}],["~                     ",{"fg":4,"bold":true}]],"46":[["[Name] test.cpp      ",{"inverse":true}],[" NORMAL ",{"bold":true}],[" ",{}],["calendar.txt ",{"bold":true}],["                                                        unix │ utf-8 │ text │  30% ",{}],[" LN  66",{"bold":true}],[":1  ",{}],[" ",{"bold":true,"inverse":true}],[" ~/…/calendar-vim/doc>",{"bold":true}]],"47":[["                                                                                                                                                                ",{}]]},"cursor":{"y":35,"visible":true}}],[0.002967,{"lines":{"47":[["                                                                                                                                                     j          ",{}]]},"cursor":{"visible":false}}],[0.033227,{"lines":{"35":[["~                   ",{"fg":4,"bold":true}],["|",{"inverse":true}],[" 66 ",{"fg":3,"bold":true}],["respective value for this key and the default binding are listed below.                                         ",{}],["|",{"inverse":true}],["~                     ",{"fg":4,"bold":true}]],"36":[["~                   ",{"fg":4,"bold":true}],["|",{"inverse":true}],[" 67 ",{"fg":3,"bold":true}],["'close'                     Closes calendar window.             'q'                                             ",{"underline":true}],["|",{"inverse":true}],["~                     ",{"fg":4,"bold":true}]],"46":[["[Name] test.cpp      ",{"inverse":true}],[" NORMAL ",{"bold":true}],[" ",{}],["calendar.txt ",{"bold":true}],["                                                        unix │ utf-8 │ text │  30% ",{}],[" LN  67",{"bold":true}],[":1  ",{}],[" ",{"bold":true,"inverse":true}],[" ~/…/calendar-vim/doc>",{"bold":true}]],"47":[["                                                                                                                                                                ",{}]]},"cursor":{"y":36,"visible":true}}],[0.007522,{"lines":{"47":[["                                                                                                                                                     j          ",{}]]},"cursor":{"visible":false}}],[0.014207,{"lines":{"36":[["~                   ",{"fg":4,"bold":true}],["|",{"inverse":true}],[" 67 ",{"fg":3,"bold":true}],["'close'                     Closes calendar window.             'q'                                             ",{}],["|",{"inverse":true}],["~                     ",{"fg":4,"bold":true}]],"37":[["~                   ",{"fg":4,"bold":true}],["|",{"inverse":true}],[" 68 ",{"fg":3,"bold":true}],["'do_action'                 Executes |calendar_action|.           '<CR>'                                        ",{"underline":true}],["|",{"inverse":true}],["~                     ",{"fg":4,"bold":true}]],"46":[["[Name] test.cpp      ",{"inverse":true}],[" NORMAL ",{"bold":true}],[" ",{}],["calendar.txt ",{"bold":true}],["                                                        unix │ utf-8 │ text │  30% ",{}],[" LN  68",{"bold":true}],[":1  ",{}],[" ",{"bold":true,"inverse":true}],[" ~/…/calendar-vim/doc>",{"bold":true}]],"47":[["                                                                                                                                                                ",{}]]},"cursor":{"y":37,"visible":true}}],[0.027832,{"lines":{"47":[["                                                                                                                                                     j          ",{}]]},"cursor":{"visible":false}}],[0.018413,{"lines":{"37":[["~                   ",{"fg":4,"bold":true}],["|",{"inverse":true}],[" 68 ",{"fg":3,"bold":true}],["'do_action'                 Executes |calendar_action|.           '<CR>'                                        ",{}],["|",{"inverse":true}],["~                     ",{"fg":4,"bold":true}]],"38":[["~                   ",{"fg":4,"bold":true}],["|",{"inverse":true}],[" 69 ",{"fg":3,"bold":true}],["'goto_today'                Executes |calendar_today|.            't'                                           ",{"underline":true}],["|",{"inverse":true}],["~                     ",{"fg":4,"bold":true}]],"46":[["[Name] test.cpp      ",{"inverse":true}],[" NORMAL ",{"bold":true}],[" ",{}],["calendar.txt ",{"bold":true}],["                                                        unix │ utf-8 │ text │  31% ",{}],[" LN  69",{"bold":true}],[":1  ",{}],[" ",{"bold":true,"inverse":true}],[" ~/…/calendar-vim/doc>",{"bold":true}]],"47":[["                                                                                                                                                                ",{}]]},"cursor":{"y":38,"visible":true}}],[0.000887,{"lines":{"47":[["                                                                                                                                                     j          ",{}]]},"cursor":{"visible":false}}],[0.032154,{"lines":{"38":[["~                   ",{"fg":4,"bold":true}],["|",{"inverse":true}],[" 69 ",{"fg":3,"bold":true}],["'goto_today'                Executes |calendar_today|.            't'                                           ",{}],["|",{"inverse":true}],["~                     ",{"fg":4,"bold":true}]],"39":[["~                   ",{"fg":4,"bold":true}],["|",{"inverse":true}],[" 70 ",{"fg":3,"bold":true}],["'show_help'                 Displays a short help message.      '?'                                             ",{"underline":true}],["|",{"inverse":true}],["~                     ",{"fg":4,"bold":true}]],"46":[["[Name] test.cpp      ",{"inverse":true}],[" NORMAL ",{"bold":true}],[" ",{}],["calendar.txt ",{"bold":true}],["                                                        unix │ utf-8 │ text │  31% ",{}],[" LN  70",{"bold":true}],[":1  ",{}],[" ",{"bold":true,"inverse":true}],[" ~/…/calendar-vim/doc>",{"bold":true}]],"47":[["                                                                                                                                                                ",{}]]},"cursor":{"y":39,"visible":true}}],[0.007486,{"lines":{"47":[["                                                                                                                                                     j          ",{}]]},"cursor":{"visible":false}}],[0.015189,{"lines":{"39":[["~                   ",{"fg":4,"bold":true}],["|",{"inverse":true}],[" 70 ",{"fg":3,"bold":true}],["'show_help'                 Displays a short help message.      '?'                                             ",{}],["|",{"inverse":true}],["~                     ",{"fg":4,"bold":true}]],"40":[["~                   ",{"fg":4,"bold":true}],["|",{"inverse":true}],[" 71 ",{"fg":3,"bold":true}],["'redisplay'                 Redraws calendar window.            'r'                                             ",{"underline":true}],["|",{"inverse":true}],["~                     ",{"fg":4,"bold":true}]],"46":[["[Name] test.cpp      ",{"inverse":true}],[" NORMAL ",{"bold":true}],[" ",{}],["calendar.txt ",{"bold":true}],["                                                        unix │ utf-8 │ text │  32% ",{}],[" LN  71",{"bold":true}],[":1  ",{}],[" ",{"bold":true,"inverse":true}],[" ~/…/calendar-vim/doc>",{"bold":true}]],"47":[["                                                                                                                                                                ",{}]]},"cursor":{"y":40,"visible":true}}],[0.025887,{"lines":{"47":[["                                                                                                                                                     j          ",{}]]},"cursor":{"visible":false}}],[0.017755,{"lines":{"40":[["~                   ",{"fg":4,"bold":true}],["|",{"inverse":true}],[" 71 ",{"fg":3,"bold":true}],["'redisplay'                 Redraws calendar window.            'r'                                             ",{}],["|",{"inverse":true}],["~                     ",{"fg":4,"bold":true}]],"41":[["~                   ",{"fg":4,"bold":true}],["|",{"inverse":true}],[" 72 ",{"fg":3,"bold":true}],["'goto_next_month'           Jumps to the next month.            '<Right>'                                       ",{"underline":true}],["|",{"inverse":true}],["~                     ",{"fg":4,"bold":true}]],"46":[["[Name] test.cpp      ",{"inverse":true}],[" NORMAL ",{"bold":true}],[" ",{}],["calendar.txt ",{"bold":true}],["                                                        unix │ utf-8 │ text │  32% ",{}],[" LN  72",{"bold":true}],[":1  ",{}],[" ",{"bold":true,"inverse":true}],[" ~/…/calendar-vim/doc>",{"bold":true}]],"47":[["                                                                                                                                                                ",{}]]},"cursor":{"y":41,"visible":true}}],[0.003513,{"lines":{"47":[["                                                                                                                                                     j          ",{}]]},"cursor":{"visible":false}}],[0.031972,{"lines":{"41":[["~                   ",{"fg":4,"bold":true}],["|",{"inverse":true}],[" 72 ",{"fg":3,"bold":true}],["'goto_next_month'           Jumps to the next month.            '<Right>'                                       ",{}],["|",{"inverse":true}],["~                     ",{"fg":4,"bold":true}]],"42":[["~                   ",{"fg":4,"bold":true}],["|",{"inverse":true}],[" 73 ",{"fg":3,"bold":true}],["'goto_prev_month'           Jumps to the previous month.        '<Left>'                                        ",{"underline":true}],["|",{"inverse":true}],["~                     ",{"fg":4,"bold":true}]],"46":[["[Name] test.cpp      ",{"inverse":true}],[" NORMAL ",{"bold":true}],[" ",{}],["calendar.txt ",{"bold":true}],["                                                        unix │ utf-8 │ text │  33% ",{}],[" LN  73",{"bold":true}],[":1  ",{}],[" ",{"bold":true,"inverse":true}],[" ~/…/calendar-vim/doc>",{"bold":true}]],"47":[["                                                                                                                                                                ",{}]]},"cursor":{"y":42,"visible":true}}],[0.006679,{"lines":{"47":[["                                                                                                                                                     j          ",{}]]},"cursor":{"visible":false}}],[0.01674,{"lines":{"42":[["~                   ",{"fg":4,"bold":true}],["|",{"inverse":true}],[" 73 ",{"fg":3,"bold":true}],["'goto_prev_month'           Jumps to the previous month.        '<Left>'                                        ",{}],["|",{"inverse":true}],["~                     ",{"fg":4,"bold":true}]],"43":[["~                   ",{"fg":4,"bold":true}],["|",{"inverse":true}],[" 74 ",{"fg":3,"bold":true}],["'goto_next_year'            Jumps to the next year.             '<Up>'                                          ",{"underline":true}],["|",{"inverse":true}],["~                     ",{"fg":4,"bold":true}]],"46":[["[Name] test.cpp      ",{"inverse":true}],[" NORMAL ",{"bold":true}],[" ",{}],["calendar.txt ",{"bold":true}],["                                                        unix │ utf-8 │ text │  33% ",{}],[" LN  74",{"bold":true}],[":1  ",{}],[" ",{"bold":true,"inverse":true}],[" ~/…/calendar-vim/doc>",{"bold":true}]],"47":[["                                                                                                                                                                ",{}]]},"cursor":{"y":43,"visible":true}}],[0.02431,{"lines":{"47":[["                                                                                                                                                     j          ",{}]]},"cursor":{"visible":false}}],[0.018009,{"lines":{"43":[["~                   ",{"fg":4,"bold":true}],["|",{"inverse":true}],[" 74 ",{"fg":3,"bold":true}],["'goto_next_year'            Jumps to the next year.             '<Up>'                                          ",{}],["|",{"inverse":true}],["~                     ",{"fg":4,"bold":true}]],"44":[["~                   ",{"fg":4,"bold":true}],["|",{"inverse":true}],[" 75 ",{"fg":3,"bold":true}],["'goto_prev_year'            Jumps to the previous year.         '<Down>'                                        ",{"underline":true}],["|",{"inverse":true}],["~                     ",{"fg":4,"bold":true}]],"46":[["[Name] test.cpp      ",{"inverse":true}],[" NORMAL ",{"bold":true}],[" ",{}],["calendar.txt ",{"bold":true}],["                                                        unix │ utf-8 │ text │  34% ",{}],[" LN  75",{"bold":true}],[":1  ",{}],[" ",{"bold":true,"inverse":true}],[" ~/…/calendar-vim/doc>",{"bold":true}]],"47":[["                                                                                                                                                                ",{}]]},"cursor":{"y":44,"visible":true}}],[0.00429,{"lines":{"47":[["                                                                                                                                                     j          ",{}]]},"cursor":{"visible":false}}],[0.03173,{"lines":{"44":[["~                   ",{"fg":4,"bold":true}],["|",{"inverse":true}],[" 75 ",{"fg":3,"bold":true}],["'goto_prev_year'            Jumps to the previous year.         '<Down>'                                        ",{}],["|",{"inverse":true}],["~                     ",{"fg":4,"bold":true}]],"45":[["~                   ",{"fg":4,"bold":true}],["|",{"inverse":true}],[" 76 ",{"fg":3,"bold":true}],["An example in your .vimrc might look like this: >                                                               ",{"underline":true}],["|",{"inverse":true}],["~                     ",{"fg":4,"bold":true}]],"46":[["[Name] test.cpp      ",{"inverse":true}],[" NORMAL ",{"bold":true}],[" ",{}],["calendar.txt ",{"bold":true}],["                                                        unix │ utf-8 │ text │  34% ",{}],[" LN  76",{"bold":true}],[":1  ",{}],[" ",{"bold":true,"inverse":true}],[" ~/…/calendar-vim/doc>",{"bold":true}]],"47":[["                                                                                                                                                                ",{}]]},"cursor":{"y":45,"visible":true}}],[0.006473,{"lines":{"0":[["\" Press <F1> for hel",{"fg":6,"bold":true}],["|",{"inverse":true}],[" 32 ",{"fg":3,"bold":true}],["                          year.  When both [year] and [month] are omitted, the                                  ",{}],["|",{"inverse":true}],["  1 ",{"fg":3,"bold":true}],["\" Press ? for help",{"fg":5,"bold":true}]],"1":[["                    ",{}],["|",{"inverse":true}],[" 33 ",{"fg":3,"bold":true}],["                          calendar will show the current month.                                                 ",{}],["|",{"inverse":true}],["  2 ",{"fg":3,"bold":true}],["                  ",{}]],"2":[["▼",{"fg":3,"bold":true}],[" First",{"fg":5,"bold":true}],[" : ",{}],["struct",{"fg":2,"bold":true}],["    ",{}],["|",{"inverse":true}],[" 34 ",{"fg":3,"bold":true}],["                                                                                                                ",{}],["|",{"inverse":true}],["  3 ",{"fg":3,"bold":true}],[".. (up a dir)",{"fg":6,"bold":true}],["     ",{}]],"3":[["    [prototypes]",{"fg":6,"bold":true}],["    ",{}],["|",{"inverse":true}],[" 35 ",{"fg":3,"bold":true}],["                                                *calendar-:CalendarVR*                                          ",{}],["|",{"inverse":true}],["  4 /root/",{"fg":3,"bold":true}],["            ",{}]],"4":[["   ",{}],["+",{"fg":2,"bold":true}],["FirstRun(void)  ",{}],["|",{"inverse":true}],[" 36 ",{"fg":3,"bold":true}],[":CalendarVR [[year] month]  Show calendar at this year and this month in a                                      ",{}],["|",{"inverse":true}],["  5 ",{"fg":3,"bold":true}],["▸ .asciinema/",{"fg":6,"bold":true}],["     ",{}]],"5":[["   ",{}],["+",{"fg":2,"bold":true}],["FirstRun2(void) ",{}],["|",{"inverse":true}],[" 37 ",{"fg":3,"bold":true}],["                          vertical split at the right site.  When [year] is                                     ",{}],["|",{"inverse":true}],["  6 ",{"fg":3,"bold":true}],["▸ .cache/",{"fg":6,"bold":true}],["         ",{}]],"6":[["                    ",{}],["|",{"inverse":true}],[" 38 ",{"fg":3,"bold":true}],["                          omitted, the calendar will show the given month in                                    ",{}],["|",{"inverse":true}],["  7 ",{"fg":3,"bold":true}],["▸ .config/",{"fg":6,"bold":true}],["        ",{}]],"7":[["▼",{"fg":3,"bold":true}],[" Last",{"fg":5,"bold":true}],[" : ",{}],["struct",{"fg":2,"bold":true}],["     ",{}],["|",{"inverse":true}],[" 39 ",{"fg":3,"bold":true}],["                          the current year.  When both [year] and [month] are                                   ",{}],["|",{"inverse":true}],["  8 ",{"fg":3,"bold":true}],["▸ .dbus/",{"fg":6,"bold":true}],["          ",{}]],"8":[["    [functions]",{"fg":6,"bold":true}],["     ",{}],["|",{"inverse":true}],[" 40 ",{"fg":3,"bold":true}],["                          omitted, the calendar will show the current month.                                    ",{}],["|",{"inverse":true}],["  9 ",{"fg":3,"bold":true}],["▸ .gnupg/",{"fg":6,"bold":true}],["         ",{}]],"9":[["   ",{}],["+",{"fg":2,"bold":true}],["FirstRun(void)  ",{}],["|",{"inverse":true}],[" 41 ",{"fg":3,"bold":true}],["                                                                                                                ",{}],["|",{"inverse":true}],[" 10 ",{"fg":3,"bold":true}],["▸ .kde/",{"fg":6,"bold":true}],["           ",{}]],"10":[["   ",{}],["+",{"fg":2,"bold":true}],["FirstRun2(void) ",{}],["|",{"inverse":true}],[" 42 ",{"fg":3,"bold":true}],["MAPPINGS                                        *calendar-mappings*                                             ",{}],["|",{"inverse":true}],[" 11 ",{"fg":3,"bold":true}],["▸ .local/",{"fg":6,"bold":true}],["         ",{}]],"11":[["   ",{}],["+",{"fg":2,"bold":true}],["~Last()         ",{}],["|",{"inverse":true}],[" 43 ",{"fg":3,"bold":true}],["                                                                                                                ",{}],["|",{"inverse":true}],[" 12 ",{"fg":3,"bold":true}],["▸ .pki/",{"fg":6,"bold":true}],["           ",{}]],"12":[["   ",{}],["+",{"fg":2,"bold":true}],["SecondRun(void) ",{}],["|",{"inverse":true}],[" 44 ",{"fg":3,"bold":true}],["calendar.vim makes the following normal mode mappings available:                                                ",{}],["|",{"inverse":true}],[" 13 ",{"fg":3,"bold":true}],["▸ .ssh/",{"fg":6,"bold":true}],["           ",{}]],"13":[["   ",{}],["+",{"fg":2,"bold":true}],["SecondRun2(void)",{}],["|",{"inverse":true}],[" 45 ",{"fg":3,"bold":true}],["                                                                                                                ",{}],["|",{"inverse":true}],[" 14 ",{"fg":3,"bold":true}],["▸ .vim/",{"fg":6,"bold":true}],["           ",{}]],"14":[["                    ",{}],["|",{"inverse":true}],[" 46 ",{"fg":3,"bold":true}],["                                                *calendar-cal*                                                  ",{}],["|",{"inverse":true}],[" 15 ",{"fg":3,"bold":true}],["▸ diary/",{"fg":6,"bold":true}],["          ",{}]],"15":[["▼",{"fg":3,"bold":true}],[" Second",{"fg":5,"bold":true}],[" : ",{}],["struct",{"fg":2,"bold":true}],["   ",{}],["|",{"inverse":true}],[" 47 ",{"fg":3,"bold":true}],["<LocalLeader>cal          Brings up the calendar in a vertical split.                                           ",{}],["|",{"inverse":true}],[" 16 ",{"fg":3,"bold":true}],["▸ temp/",{"fg":6,"bold":true}],["           ",{}]],"16":[["    [prototypes]",{"fg":6,"bold":true}],["    ",{}],["|",{"inverse":true}],[" 48 ",{"fg":3,"bold":true}],["                          Equivalent to calling |:Calendar|.                                                    ",{}],["|",{"inverse":true}],[" 17 ",{"fg":3,"bold":true}],["  .bash_history   ",{}]],"17":[["   ",{}],["+",{"fg":2,"bold":true}],["SecondRun(void) ",{}],["|",{"inverse":true}],[" 49 ",{"fg":3,"bold":true}],["                                                                                                                ",{}],["|",{"inverse":true}],[" 18 ",{"fg":3,"bold":true}],["  .bash_logout    ",{}]],"18":[["   ",{}],["+",{"fg":2,"bold":true}],["SecondRun2(void)",{}],["|",{"inverse":true}],[" 50 ",{"fg":3,"bold":true}],["                                                *calendar-caL*                                                  ",{}],["|",{"inverse":true}],[" 19 ",{"fg":3,"bold":true}],["  .bash_profile   ",{"underline":true}]],"19":[["                    ",{}],["|",{"inverse":true}],[" 51 ",{"fg":3,"bold":true}],["<LocalLeader>",{}],["caL ",{"bg":1}],["        ",{}],[" Bri",{"bg":1}],["ngs up the calendar in a horizontal split.                                         ",{}],["|",{"inverse":true}],[" 20 ",{"fg":3,"bold":true}],["  .bashrc         ",{}]],"20":[["▼",{"fg":3,"bold":true}],[" ",{}],["functions",{"fg":6,"bold":true}],["         ",{}],["|",{"inverse":true}],[" 52 ",{"fg":3,"bold":true}],["                          Equivalent to calling |:CalendarH|.                                                   ",{}],["|",{"inverse":true}],[" 21 ",{"fg":3,"bold":true}],["  .cshrc          ",{}]],"21":[["    main(int argc, c",{"underline":true}],["|",{"inverse":true}],[" 53 ",{"fg":3,"bold":true}],["                                                                                                                ",{}],["|",{"inverse":true}],[" 22 ",{"fg":3,"bold":true}],["  .dmrc           ",{}]],"22":[["~                   ",{"fg":4,"bold":true}],["|",{"inverse":true}],[" 54 ",{"fg":3,"bold":true}],["SETTINGS                                        *calendar-settings*                                             ",{}],["|",{"inverse":true}],[" 23 ",{"fg":3,"bold":true}],["  .esd_auth       ",{}]],"23":[["~                   ",{"fg":4,"bold":true}],["|",{"inverse":true}],[" 55 ",{"fg":3,"bold":true}],["                                                                                                                ",{}],["|",{"inverse":true}],[" 24 ",{"fg":3,"bold":true}],["  .gtkrc-2.0      ",{}]],"24":[["~                   ",{"fg":4,"bold":true}],["|",{"inverse":true}],[" 56 ",{"fg":3,"bold":true}],["calendar.vim can be con",{}],["figured using the following sett",{"bg":1}],["ings:                                                    ",{}],["|",{"inverse":true}],[" 25 ",{"fg":3,"bold":true}],["  .gtkrc-2.0-kde4 ",{}]],"25":[["~                   ",{"fg":4,"bold":true}],["|",{"inverse":true}],[" 57 ",{"fg":3,"bold":true}],["                                                                                                                ",{}],["|",{"inverse":true}],[" 26 ",{"fg":3,"bold":true}],["  .lesshst        ",{}]],"26":[["~                   ",{"fg":4,"bold":true}],["|",{"inverse":true}],[" 58 ",{"fg":3,"bold":true}],["                                                *g:calendar_focus_today*                                        ",{}],["|",{"inverse":true}],[" 27 ",{"fg":3,"bold":true}],["  .tcshrc         ",{}]],"27":[["~                   ",{"fg":4,"bold":true}],["|",{"inverse":true}],[" 59 ",{"fg":3,"bold":true}],["Keeps focus when moving to next or previous calendar: >                                                         ",{}],["|",{"inverse":true}],[" 28 ",{"fg":3,"bold":true}],["  .viminfo        ",{}]],"28":[["~                   ",{"fg":4,"bold":true}],["|",{"inverse":true}],[" 60 ",{"fg":3,"bold":true}],["  let g:calendar_focus_today = 1                                                                                ",{}],["|",{"inverse":true}],[" 29 ",{"fg":3,"bold":true}],["  .vimrc          ",{}]],"29":[["~                   ",{"fg":4,"bold":true}],["|",{"inverse":true}],[" 61 ",{"fg":3,"bold":true}],["<                                                                                                               ",{}],["|",{"inverse":true}],[" 30 ",{"fg":3,"bold":true}],["  .xsession-errors",{}]],"30":[["~                   ",{"fg":4,"bold":true}],["|",{"inverse":true}],[" 62 ",{"fg":3,"bold":true}],["                                                                                                                ",{}],["|",{"inverse":true}],[" 31 ",{"fg":3,"bold":true}],["  anaconda-ks.cfg ",{}]],"31":[["~                   ",{"fg":4,"bold":true}],["|",{"inverse":true}],[" 63 ",{"fg":3,"bold":true}],["                                                *g:calendar_keys*                                               ",{}],["|",{"inverse":true}],[" 32 ",{"fg":3,"bold":true}],["  initial-setup-ks",{}]],"32":[["~                   ",{"fg":4,"bold":true}],["|",{"inverse":true}],[" 64 ",{"fg":3,"bold":true}],["To change the key bindings in the calendar window, add entries to this                                          ",{}],["|",{"inverse":true}],[" 33 ",{"fg":3,"bold":true}],["  test.c          ",{}]],"33":[["~                   ",{"fg":4,"bold":true}],["|",{"inverse":true}],[" 65 ",{"fg":3,"bold":true}],["dictionary.   Possible keys, the action bound to the keycode given in the                                       ",{}],["|",{"inverse":true}],[" 34 ",{"fg":3,"bold":true}],["  test.cpp        ",{}]],"34":[["~                   ",{"fg":4,"bold":true}],["|",{"inverse":true}],[" 66 ",{"fg":3,"bold":true}],["respective value for this key and the default binding are listed below.                                         ",{}],["|",{"inverse":true}],[" 35 ",{"fg":3,"bold":true}],["  .test.cpp.swp   ",{}]],"35":[["~                   ",{"fg":4,"bold":true}],["|",{"inverse":true}],[" 67 ",{"fg":3,"bold":true}],["'close'                     Closes calendar window.             'q'                                             ",{}],["|",{"inverse":true}],["~                     ",{"fg":4,"bold":true}]],"36":[["~                   ",{"fg":4,"bold":true}],["|",{"inverse":true}],[" 68 ",{"fg":3,"bold":true}],["'do_action'                 Executes |calendar_action|.           '<CR>'                                        ",{}],["|",{"inverse":true}],["~                     ",{"fg":4,"bold":true}]],"37":[["~                   ",{"fg":4,"bold":true}],["|",{"inverse":true}],[" 69 ",{"fg":3,"bold":true}],["'goto_today'                Executes |calendar_today|.            't'                                           ",{}],["|",{"inverse":true}],["~                     ",{"fg":4,"bold":true}]],"38":[["~                   ",{"fg":4,"bold":true}],["|",{"inverse":true}],[" 70 ",{"fg":3,"bold":true}],["'show_help'                 Displays a short help message.      '?'                                             ",{}],["|",{"inverse":true}],["~                     ",{"fg":4,"bold":true}]],"39":[["~                   ",{"fg":4,"bold":true}],["|",{"inverse":true}],[" 71 ",{"fg":3,"bold":true}],["'redisplay'                 Redraws calendar window.            'r'                                             ",{}],["|",{"inverse":true}],["~                     ",{"fg":4,"bold":true}]],"40":[["~                   ",{"fg":4,"bold":true}],["|",{"inverse":true}],[" 72 ",{"fg":3,"bold":true}],["'goto_next_month'           Jumps to the next month.            '<Right>'                                       ",{}],["|",{"inverse":true}],["~                     ",{"fg":4,"bold":true}]],"41":[["~                   ",{"fg":4,"bold":true}],["|",{"inverse":true}],[" 73 ",{"fg":3,"bold":true}],["'goto_prev_month'           Jumps to the previous month.        '<Left>'                                        ",{}],["|",{"inverse":true}],["~                     ",{"fg":4,"bold":true}]],"42":[["~                   ",{"fg":4,"bold":true}],["|",{"inverse":true}],[" 74 ",{"fg":3,"bold":true}],["'goto_next_year'            Jumps to the next year.             '<Up>'                                          ",{}],["|",{"inverse":true}],["~                     ",{"fg":4,"bold":true}]],"43":[["~                   ",{"fg":4,"bold":true}],["|",{"inverse":true}],[" 75 ",{"fg":3,"bold":true}],["'goto_prev_year'            Jumps to the previous year.         '<Down>'                                        ",{}],["|",{"inverse":true}],["~                     ",{"fg":4,"bold":true}]],"44":[["~                   ",{"fg":4,"bold":true}],["|",{"inverse":true}],[" 76 ",{"fg":3,"bold":true}],["An example in your .vimrc might look like this: ",{"underline":true}],["s year.         '<Down>'                                        ",{}],["|",{"inverse":true}],["~                     ",{"fg":4,"bold":true}]]},"cursor":{"x":73,"y":44,"visible":false}}],[0.020526,{"lines":{"44":[["~                   ",{"fg":4,"bold":true}],["|",{"inverse":true}],[" 76 ",{"fg":3,"bold":true}],["An example in your .vimrc might look like this: >                                                               ",{}],["|",{"inverse":true}],["~                     ",{"fg":4,"bold":true}]],"45":[["~                   ",{"fg":4,"bold":true}],["|",{"inverse":true}],[" 77 ",{"fg":3,"bold":true}],["  let g:calendar_keys = { 'goto_next_month': '<C-Right>', 'goto_prev_month': '<C-Left>'}                        ",{"underline":true}],["|",{"inverse":true}],["~                     ",{"fg":4,"bold":true}]],"46":[["[Name] test.cpp      ",{"inverse":true}],[" NORMAL ",{"bold":true}],[" ",{}],["calendar.txt ",{"bold":true}],["                                                        unix │ utf-8 │ text │  35% ",{}],[" LN  77",{"bold":true}],[":1  ",{}],[" ",{"bold":true,"inverse":true}],[" ~/…/calendar-vim/doc>",{"bold":true}]]},"cursor":{"x":25,"y":45,"visible":true}}],[0.029545,{"lines":{"0":[["\" Press <F1> for hel",{"fg":6,"bold":true}],["|",{"inverse":true}],[" 33 ",{"fg":3,"bold":true}],["                          calendar will show the current month.                                                 ",{}],["|",{"inverse":true}],["  1 ",{"fg":3,"bold":true}],["\" Press ? for help",{"fg":5,"bold":true}]],"1":[["                    ",{}],["|",{"inverse":true}],[" 34 ",{"fg":3,"bold":true}],["                                                                                                                ",{}],["|",{"inverse":true}],["  2 ",{"fg":3,"bold":true}],["                  ",{}]],"2":[["▼",{"fg":3,"bold":true}],[" First",{"fg":5,"bold":true}],[" : ",{}],["struct",{"fg":2,"bold":true}],["    ",{}],["|",{"inverse":true}],[" 35 ",{"fg":3,"bold":true}],["                                                *calendar-:CalendarVR*                                          ",{}],["|",{"inverse":true}],["  3 ",{"fg":3,"bold":true}],[".. (up a dir)",{"fg":6,"bold":true}],["     ",{}]],"3":[["    [prototypes]",{"fg":6,"bold":true}],["    ",{}],["|",{"inverse":true}],[" 36 ",{"fg":3,"bold":true}],[":CalendarVR [[year] month]  Show calendar at this year and this month in a                                      ",{}],["|",{"inverse":true}],["  4 /root/",{"fg":3,"bold":true}],["            ",{}]],"4":[["   ",{}],["+",{"fg":2,"bold":true}],["FirstRun(void)  ",{}],["|",{"inverse":true}],[" 37 ",{"fg":3,"bold":true}],["                          vertical split at the right site.  When [year] is                                     ",{}],["|",{"inverse":true}],["  5 ",{"fg":3,"bold":true}],["▸ .asciinema/",{"fg":6,"bold":true}],["     ",{}]],"5":[["   ",{}],["+",{"fg":2,"bold":true}],["FirstRun2(void) ",{}],["|",{"inverse":true}],[" 38 ",{"fg":3,"bold":true}],["                          omitted, the calendar will show the given month in                                    ",{}],["|",{"inverse":true}],["  6 ",{"fg":3,"bold":true}],["▸ .cache/",{"fg":6,"bold":true}],["         ",{}]],"6":[["                    ",{}],["|",{"inverse":true}],[" 39 ",{"fg":3,"bold":true}],["                          the current year.  When both [year] and [month] are                                   ",{}],["|",{"inverse":true}],["  7 ",{"fg":3,"bold":true}],["▸ .config/",{"fg":6,"bold":true}],["        ",{}]],"7":[["▼",{"fg":3,"bold":true}],[" Last",{"fg":5,"bold":true}],[" : ",{}],["struct",{"fg":2,"bold":true}],["     ",{}],["|",{"inverse":true}],[" 40 ",{"fg":3,"bold":true}],["                          the current year.  When both [year] and [month] are                                   ",{}],["|",{"inverse":true}],["  8 ",{"fg":3,"bold":true}],["▸ .dbus/",{"fg":6,"bold":true}],["          ",{}]]},"cursor":{"y":7,"visible":false}}],[0.003012,{"lines":{"7":[["▼",{"fg":3,"bold":true}],[" Last",{"fg":5,"bold":true}],[" : ",{}],["struct",{"fg":2,"bold":true}],["     ",{}],["|",{"inverse":true}],[" 40 ",{"fg":3,"bold":true}],["                          omitted, the calendar will show the current month.                                    ",{}],["|",{"inverse":true}],["  8 ",{"fg":3,"bold":true}],["▸ .dbus/",{"fg":6,"bold":true}],["          ",{}]],"8":[["    [functions]",{"fg":6,"bold":true}],["     ",{}],["|",{"inverse":true}],[" 41 ",{"fg":3,"bold":true}],["                                                                                                                ",{}],["|",{"inverse":true}],["  9 ",{"fg":3,"bold":true}],["▸ .gnupg/",{"fg":6,"bold":true}],["         ",{}]],"9":[["   ",{}],["+",{"fg":2,"bold":true}],["FirstRun(void)  ",{}],["|",{"inverse":true}],[" 42 ",{"fg":3,"bold":true}],["MAPPINGS                                        *calendar-mappings*                                             ",{}],["|",{"inverse":true}],[" 10 ",{"fg":3,"bold":true}],["▸ .kde/",{"fg":6,"bold":true}],["           ",{}]],"10":[["   ",{}],["+",{"fg":2,"bold":true}],["FirstRun2(void) ",{}],["|",{"inverse":true}],[" 43 ",{"fg":3,"bold":true}],["                                                                                                                ",{}],["|",{"inverse":true}],[" 11 ",{"fg":3,"bold":true}],["▸ .local/",{"fg":6,"bold":true}],["         ",{}]],"11":[["   ",{}],["+",{"fg":2,"bold":true}],["~Last()         ",{}],["|",{"inverse":true}],[" 44 ",{"fg":3,"bold":true}],["calendar.vim makes the following normal mode mappings available:                                                ",{}],["|",{"inverse":true}],[" 12 ",{"fg":3,"bold":true}],["▸ .pki/",{"fg":6,"bold":true}],["           ",{}]],"12":[["   ",{}],["+",{"fg":2,"bold":true}],["SecondRun(void) ",{}],["|",{"inverse":true}],[" 45 ",{"fg":3,"bold":true}],["                                                                                                                ",{}],["|",{"inverse":true}],[" 13 ",{"fg":3,"bold":true}],["▸ .ssh/",{"fg":6,"bold":true}],["           ",{}]],"13":[["   ",{}],["+",{"fg":2,"bold":true}],["SecondRun2(void)",{}],["|",{"inverse":true}],[" 46 ",{"fg":3,"bold":true}],["                                                *calendar-cal*                                                  ",{}],["|",{"inverse":true}],[" 14 ",{"fg":3,"bold":true}],["▸ .vim/",{"fg":6,"bold":true}],["           ",{}]],"14":[["                    ",{}],["|",{"inverse":true}],[" 47 ",{"fg":3,"bold":true}],["<LocalLeader>cal          Brings up the calendar in a vertical split.                                           ",{}],["|",{"inverse":true}],[" 15 ",{"fg":3,"bold":true}],["▸ diary/",{"fg":6,"bold":true}],["          ",{}]],"15":[["▼",{"fg":3,"bold":true}],[" Second",{"fg":5,"bold":true}],[" : ",{}],["struct",{"fg":2,"bold":true}],["   ",{}],["|",{"inverse":true}],[" 48 ",{"fg":3,"bold":true}],["                          Equivalent to calling |:Calendar|.                                                    ",{}],["|",{"inverse":true}],[" 16 ",{"fg":3,"bold":true}],["▸ temp/",{"fg":6,"bold":true}],["           ",{}]],"16":[["    [prototypes]",{"fg":6,"bold":true}],["    ",{}],["|",{"inverse":true}],[" 49 ",{"fg":3,"bold":true}],["                                                                                                                ",{}],["|",{"inverse":true}],[" 17 ",{"fg":3,"bold":true}],["  .bash_history   ",{}]],"17":[["   ",{}],["+",{"fg":2,"bold":true}],["SecondRun(void) ",{}],["|",{"inverse":true}],[" 50 ",{"fg":3,"bold":true}],["                                                *calendar-caL*                                                  ",{}],["|",{"inverse":true}],[" 18 ",{"fg":3,"bold":true}],["  .bash_logout    ",{}]],"18":[["   ",{}],["+",{"fg":2,"bold":true}],["SecondRun2(void)",{}],["|",{"inverse":true}],[" 51 ",{"fg":3,"bold":true}],["<LocalLeader>",{}],["caL ",{"bg":1}],["        ",{}],[" Bri",{"bg":1}],["ngs up the calendar in a horizontal split.                                         ",{}],["|",{"inverse":true}],[" 19 ",{"fg":3,"bold":true}],["  .bash_profile   ",{"underline":true}]],"19":[["                    ",{}],["|",{"inverse":true}],[" 52 ",{"fg":3,"bold":true}],["                          Equivalent to calling |:CalendarH|.                                                   ",{}],["|",{"inverse":true}],[" 20 ",{"fg":3,"bold":true}],["  .bashrc         ",{}]],"20":[["▼",{"fg":3,"bold":true}],[" ",{}],["functions",{"fg":6,"bold":true}],["         ",{}],["|",{"inverse":true}],[" 53 ",{"fg":3,"bold":true}],["                                                                                                                ",{}],["|",{"inverse":true}],[" 21 ",{"fg":3,"bold":true}],["  .cshrc          ",{}]],"21":[["    main(int argc, c",{"underline":true}],["|",{"inverse":true}],[" 54 ",{"fg":3,"bold":true}],["SETTINGS                                        *calendar-settings*                                             ",{}],["|",{"inverse":true}],[" 22 ",{"fg":3,"bold":true}],["  .dmrc           ",{}]],"22":[["~                   ",{"fg":4,"bold":true}],["|",{"inverse":true}],[" 55 ",{"fg":3,"bold":true}],["                                                                                                                ",{}],["|",{"inverse":true}],[" 23 ",{"fg":3,"bold":true}],["  .esd_auth       ",{}]],"23":[["~                   ",{"fg":4,"bold":true}],["|",{"inverse":true}],[" 56 ",{"fg":3,"bold":true}],["calendar.vim can be con",{}],["figured using the following sett",{"bg":1}],["ings:                                                    ",{}],["|",{"inverse":true}],[" 24 ",{"fg":3,"bold":true}],["  .gtkrc-2.0      ",{}]],"24":[["~                   ",{"fg":4,"bold":true}],["|",{"inverse":true}],[" 57 ",{"fg":3,"bold":true}],["                                                                                                                ",{}],["|",{"inverse":true}],[" 25 ",{"fg":3,"bold":true}],["  .gtkrc-2.0-kde4 ",{}]],"25":[["~                   ",{"fg":4,"bold":true}],["|",{"inverse":true}],[" 58 ",{"fg":3,"bold":true}],["                                                *g:calendar_focus_today*                                        ",{}],["|",{"inverse":true}],[" 26 ",{"fg":3,"bold":true}],["  .lesshst        ",{}]],"26":[["~                   ",{"fg":4,"bold":true}],["|",{"inverse":true}],[" 59 ",{"fg":3,"bold":true}],["Keeps focus when moving to next or previous calendar: >                                                         ",{}],["|",{"inverse":true}],[" 27 ",{"fg":3,"bold":true}],["  .tcshrc         ",{}]],"27":[["~                   ",{"fg":4,"bold":true}],["|",{"inverse":true}],[" 60 ",{"fg":3,"bold":true}],["  let g:calendar_focus_today = 1                                                                                ",{}],["|",{"inverse":true}],[" 28 ",{"fg":3,"bold":true}],["  .viminfo        ",{}]],"28":[["~                   ",{"fg":4,"bold":true}],["|",{"inverse":true}],[" 61 ",{"fg":3,"bold":true}],["<                                                                                                               ",{}],["|",{"inverse":true}],[" 29 ",{"fg":3,"bold":true}],["  .vimrc          ",{}]],"29":[["~                   ",{"fg":4,"bold":true}],["|",{"inverse":true}],[" 62 ",{"fg":3,"bold":true}],["                                                                                                                ",{}],["|",{"inverse":true}],[" 30 ",{"fg":3,"bold":true}],["  .xsession-errors",{}]],"30":[["~                   ",{"fg":4,"bold":true}],["|",{"inverse":true}],[" 63 ",{"fg":3,"bold":true}],["                                                *g:calendar_keys*                                               ",{}],["|",{"inverse":true}],[" 31 ",{"fg":3,"bold":true}],["  anaconda-ks.cfg ",{}]],"31":[["~                   ",{"fg":4,"bold":true}],["|",{"inverse":true}],[" 64 ",{"fg":3,"bold":true}],["To change the key bindings in the calendar window, add entries to this                                          ",{}],["|",{"inverse":true}],[" 32 ",{"fg":3,"bold":true}],["  initial-setup-ks",{}]],"32":[["~                   ",{"fg":4,"bold":true}],["|",{"inverse":true}],[" 65 ",{"fg":3,"bold":true}],["dictionary.   Possible keys, the action bound to the keycode given in the                                       ",{}],["|",{"inverse":true}],[" 33 ",{"fg":3,"bold":true}],["  test.c          ",{}]],"33":[["~                   ",{"fg":4,"bold":true}],["|",{"inverse":true}],[" 66 ",{"fg":3,"bold":true}],["respective value for this key and the default binding are listed below.                                         ",{}],["|",{"inverse":true}],[" 34 ",{"fg":3,"bold":true}],["  test.cpp        ",{}]],"34":[["~                   ",{"fg":4,"bold":true}],["|",{"inverse":true}],[" 67 ",{"fg":3,"bold":true}],["'close'                     Closes calendar window.             'q'                                             ",{}],["|",{"inverse":true}],[" 35 ",{"fg":3,"bold":true}],["  .test.cpp.swp   ",{}]],"35":[["~                   ",{"fg":4,"bold":true}],["|",{"inverse":true}],[" 68 ",{"fg":3,"bold":true}],["'do_action'                 Executes |calendar_action|.           '<CR>'                                        ",{}],["|",{"inverse":true}],["~                     ",{"fg":4,"bold":true}]],"36":[["~                   ",{"fg":4,"bold":true}],["|",{"inverse":true}],[" 69 ",{"fg":3,"bold":true}],["'goto_today'                Executes |calendar_today|.            't'                                           ",{}],["|",{"inverse":true}],["~                     ",{"fg":4,"bold":true}]],"37":[["~                   ",{"fg":4,"bold":true}],["|",{"inverse":true}],[" 70 ",{"fg":3,"bold":true}],["'show_help'                 Displays a short help message.      '?'                                             ",{}],["|",{"inverse":true}],["~                     ",{"fg":4,"bold":true}]],"38":[["~                   ",{"fg":4,"bold":true}],["|",{"inverse":true}],[" 71 ",{"fg":3,"bold":true}],["'redisplay'                 Redraws calendar window.            'r'                                             ",{}],["|",{"inverse":true}],["~                     ",{"fg":4,"bold":true}]],"39":[["~                   ",{"fg":4,"bold":true}],["|",{"inverse":true}],[" 72 ",{"fg":3,"bold":true}],["'goto_next_month'           Jumps to the next month.            '<Right>'                                       ",{}],["|",{"inverse":true}],["~                     ",{"fg":4,"bold":true}]],"40":[["~                   ",{"fg":4,"bold":true}],["|",{"inverse":true}],[" 73 ",{"fg":3,"bold":true}],["'goto_prev_month'           Jumps to the previous month.        '<Left>'                                        ",{}],["|",{"inverse":true}],["~                     ",{"fg":4,"bold":true}]],"41":[["~                   ",{"fg":4,"bold":true}],["|",{"inverse":true}],[" 74 ",{"fg":3,"bold":true}],["'goto_next_year'            Jumps to the next year.             '<Up>'                                          ",{}],["|",{"inverse":true}],["~                     ",{"fg":4,"bold":true}]],"42":[["~                   ",{"fg":4,"bold":true}],["|",{"inverse":true}],[" 75 ",{"fg":3,"bold":true}],["'goto_prev_year'            Jumps to the previous year.         '<Down>'                                        ",{}],["|",{"inverse":true}],["~                     ",{"fg":4,"bold":true}]],"43":[["~                   ",{"fg":4,"bold":true}],["|",{"inverse":true}],[" 76 ",{"fg":3,"bold":true}],["An example in your .vimrc might look like this: >                                                               ",{}],["|",{"inverse":true}],["~                     ",{"fg":4,"bold":true}]],"44":[["~                   ",{"fg":4,"bold":true}],["|",{"inverse":true}],[" 77 ",{"fg":3,"bold":true}],["  let g:calendar_keys = { 'goto_next_month': '<C",{"underline":true}],[">                                                               ",{}],["|",{"inverse":true}],["~                     ",{"fg":4,"bold":true}]]},"cursor":{"x":73,"y":44}}],[0.018419,{"lines":{"44":[["~                   ",{"fg":4,"bold":true}],["|",{"inverse":true}],[" 77 ",{"fg":3,"bold":true}],["  let g:calendar_keys = { 'goto_next_month': '<C-Right>', 'goto_prev_month': '<C-Left>'}                        ",{}],["|",{"inverse":true}],["~                     ",{"fg":4,"bold":true}]],"45":[["~                   ",{"fg":4,"bold":true}],["|",{"inverse":true}],[" 78 ",{"fg":3,"bold":true}],["<                                                                                                               ",{"underline":true}],["|",{"inverse":true}],["~                     ",{"fg":4,"bold":true}]],"46":[["[Name] test.cpp      ",{"inverse":true}],[" NORMAL ",{"bold":true}],[" ",{}],["calendar.txt ",{"bold":true}],["                                                        unix │ utf-8 │ text │  35% ",{}],[" LN  78",{"bold":true}],[":1  ",{}],[" ",{"bold":true,"inverse":true}],[" ~/…/calendar-vim/doc>",{"bold":true}]]},"cursor":{"x":25,"y":45,"visible":true}}],[0.004393999999999999,{"lines":{"0":[["\" Press <F1> for hel",{"fg":6,"bold":true}],["|",{"inverse":true}],[" 34 ",{"fg":3,"bold":true}],["                                                                                                                ",{}],["|",{"inverse":true}],["  1 ",{"fg":3,"bold":true}],["\" Press ? for help",{"fg":5,"bold":true}]],"1":[["                    ",{}],["|",{"inverse":true}],[" 35 ",{"fg":3,"bold":true}],["                                                *calendar-:CalendarVR*                                          ",{}],["|",{"inverse":true}],["  2 ",{"fg":3,"bold":true}],["                  ",{}]],"2":[["▼",{"fg":3,"bold":true}],[" First",{"fg":5,"bold":true}],[" : ",{}],["struct",{"fg":2,"bold":true}],["    ",{}],["|",{"inverse":true}],[" 36 ",{"fg":3,"bold":true}],[":CalendarVR [[year] month]  Show calendar at this year and this month in a                                      ",{}],["|",{"inverse":true}],["  3 ",{"fg":3,"bold":true}],[".. (up a dir)",{"fg":6,"bold":true}],["     ",{}]],"3":[["    [prototypes]",{"fg":6,"bold":true}],["    ",{}],["|",{"inverse":true}],[" 37 ",{"fg":3,"bold":true}],["                          vertical split at the right site.  When [year] is                                     ",{}],["|",{"inverse":true}],["  4 /root/",{"fg":3,"bold":true}],["            ",{}]],"4":[["   ",{}],["+",{"fg":2,"bold":true}],["FirstRun(void)  ",{}],["|",{"inverse":true}],[" 38 ",{"fg":3,"bold":true}],["                          omitted, the calendar will show the given month in                                    ",{}],["|",{"inverse":true}],["  5 ",{"fg":3,"bold":true}],["▸ .asciinema/",{"fg":6,"bold":true}],["     ",{}]],"5":[["   ",{}],["+",{"fg":2,"bold":true}],["FirstRun2(void) ",{}],["|",{"inverse":true}],[" 39 ",{"fg":3,"bold":true}],["                          the current year.  When both [year] and [month] are                                   ",{}],["|",{"inverse":true}],["  6 ",{"fg":3,"bold":true}],["▸ .cache/",{"fg":6,"bold":true}],["         ",{}]],"6":[["                    ",{}],["|",{"inverse":true}],[" 40 ",{"fg":3,"bold":true}],["                          omitted, the calendar will show the current month.                                    ",{}],["|",{"inverse":true}],["  7 ",{"fg":3,"bold":true}],["▸ .config/",{"fg":6,"bold":true}],["        ",{}]],"7":[["▼",{"fg":3,"bold":true}],[" Last",{"fg":5,"bold":true}],[" : ",{}],["struct",{"fg":2,"bold":true}],["     ",{}],["|",{"inverse":true}],[" 41 ",{"fg":3,"bold":true}],["                                                                                                                ",{}],["|",{"inverse":true}],["  8 ",{"fg":3,"bold":true}],["▸ .dbus/",{"fg":6,"bold":true}],["          ",{}]],"8":[["    [functions]",{"fg":6,"bold":true}],["     ",{}],["|",{"inverse":true}],[" 42 ",{"fg":3,"bold":true}],["MAPPINGS                                        *calendar-mappings*                                             ",{}],["|",{"inverse":true}],["  9 ",{"fg":3,"bold":true}],["▸ .gnupg/",{"fg":6,"bold":true}],["         ",{}]],"9":[["   ",{}],["+",{"fg":2,"bold":true}],["FirstRun(void)  ",{}],["|",{"inverse":true}],[" 43 ",{"fg":3,"bold":true}],["                                                                                                                ",{}],["|",{"inverse":true}],[" 10 ",{"fg":3,"bold":true}],["▸ .kde/",{"fg":6,"bold":true}],["           ",{}]],"10":[["   ",{}],["+",{"fg":2,"bold":true}],["FirstRun2(void) ",{}],["|",{"inverse":true}],[" 44 ",{"fg":3,"bold":true}],["calendar.vim makes the following normal mode mappings available:                                                ",{}],["|",{"inverse":true}],[" 11 ",{"fg":3,"bold":true}],["▸ .local/",{"fg":6,"bold":true}],["         ",{}]],"11":[["   ",{}],["+",{"fg":2,"bold":true}],["~Last()         ",{}],["|",{"inverse":true}],[" 45 ",{"fg":3,"bold":true}],["                                                                                                                ",{}],["|",{"inverse":true}],[" 12 ",{"fg":3,"bold":true}],["▸ .pki/",{"fg":6,"bold":true}],["           ",{}]],"12":[["   ",{}],["+",{"fg":2,"bold":true}],["SecondRun(void) ",{}],["|",{"inverse":true}],[" 46 ",{"fg":3,"bold":true}],["                                                *calendar-cal*                                                  ",{}],["|",{"inverse":true}],[" 13 ",{"fg":3,"bold":true}],["▸ .ssh/",{"fg":6,"bold":true}],["           ",{}]],"13":[["   ",{}],["+",{"fg":2,"bold":true}],["SecondRun2(void)",{}],["|",{"inverse":true}],[" 47 ",{"fg":3,"bold":true}],["<LocalLeader>cal          Brings up the calendar in a vertical split.                                           ",{}],["|",{"inverse":true}],[" 14 ",{"fg":3,"bold":true}],["▸ .vim/",{"fg":6,"bold":true}],["           ",{}]],"14":[["                    ",{}],["|",{"inverse":true}],[" 48 ",{"fg":3,"bold":true}],["                          Equivalent to calling |:Calendar|.                                                    ",{}],["|",{"inverse":true}],[" 15 ",{"fg":3,"bold":true}],["▸ diary/",{"fg":6,"bold":true}],["          ",{}]],"15":[["▼",{"fg":3,"bold":true}],[" Second",{"fg":5,"bold":true}],[" : ",{}],["struct",{"fg":2,"bold":true}],["   ",{}],["|",{"inverse":true}],[" 49 ",{"fg":3,"bold":true}],["                                                                                                                ",{}],["|",{"inverse":true}],[" 16 ",{"fg":3,"bold":true}],["▸ temp/",{"fg":6,"bold":true}],["           ",{}]],"16":[["    [prototypes]",{"fg":6,"bold":true}],["    ",{}],["|",{"inverse":true}],[" 50 ",{"fg":3,"bold":true}],["                                                *calendar-caL*                                                  ",{}],["|",{"inverse":true}],[" 17 ",{"fg":3,"bold":true}],["  .bash_history   ",{}]],"17":[["   ",{}],["+",{"fg":2,"bold":true}],["SecondRun(void) ",{}],["|",{"inverse":true}],[" 51 ",{"fg":3,"bold":true}],["<LocalLeader>",{}],["caL ",{"bg":1}],["        ",{}],[" Bri",{"bg":1}],["ngs up the calendar in a horizontal split.                                         ",{}],["|",{"inverse":true}],[" 18 ",{"fg":3,"bold":true}],["  .bash_logout    ",{}]],"18":[["   ",{}],["+",{"fg":2,"bold":true}],["SecondRun2(void)",{}],["|",{"inverse":true}],[" 52 ",{"fg":3,"bold":true}],["                          Equivalent to calling |:CalendarH|.                                                   ",{}],["|",{"inverse":true}],[" 19 ",{"fg":3,"bold":true}],["  .bash_profile   ",{"underline":true}]],"19":[["                    ",{}],["|",{"inverse":true}],[" 53 ",{"fg":3,"bold":true}],["                                                                                                                ",{}],["|",{"inverse":true}],[" 20 ",{"fg":3,"bold":true}],["  .bashrc         ",{}]],"20":[["▼",{"fg":3,"bold":true}],[" ",{}],["functions",{"fg":6,"bold":true}],["         ",{}],["|",{"inverse":true}],[" 54 ",{"fg":3,"bold":true}],["SETTINGS                                        *calendar-settings*                                             ",{}],["|",{"inverse":true}],[" 21 ",{"fg":3,"bold":true}],["  .cshrc          ",{}]],"21":[["    main(int argc, c",{"underline":true}],["|",{"inverse":true}],[" 55 ",{"fg":3,"bold":true}],["                                                                                                                ",{}],["|",{"inverse":true}],[" 22 ",{"fg":3,"bold":true}],["  .dmrc           ",{}]],"22":[["~                   ",{"fg":4,"bold":true}],["|",{"inverse":true}],[" 56 ",{"fg":3,"bold":true}],["calendar.vim can be con",{}],["figured using the following sett",{"bg":1}],["ings:                                                    ",{}],["|",{"inverse":true}],[" 23 ",{"fg":3,"bold":true}],["  .esd_auth       ",{}]],"23":[["~                   ",{"fg":4,"bold":true}],["|",{"inverse":true}],[" 57 ",{"fg":3,"bold":true}],["                                                                                                                ",{}],["|",{"inverse":true}],[" 24 ",{"fg":3,"bold":true}],["  .gtkrc-2.0      ",{}]],"24":[["~                   ",{"fg":4,"bold":true}],["|",{"inverse":true}],[" 58 ",{"fg":3,"bold":true}],["                                                *g:calendar_focus_today*                                        ",{}],["|",{"inverse":true}],[" 25 ",{"fg":3,"bold":true}],["  .gtkrc-2.0-kde4 ",{}]],"25":[["~                   ",{"fg":4,"bold":true}],["|",{"inverse":true}],[" 59 ",{"fg":3,"bold":true}],["Keeps focus when moving to next or previous calendar: >                                                         ",{}],["|",{"inverse":true}],[" 26 ",{"fg":3,"bold":true}],["  .lesshst        ",{}]],"26":[["~                   ",{"fg":4,"bold":true}],["|",{"inverse":true}],[" 60 ",{"fg":3,"bold":true}],["  let g:calendar_focus_today = 1                                                                                ",{}],["|",{"inverse":true}],[" 27 ",{"fg":3,"bold":true}],["  .tcshrc         ",{}]],"27":[["~                   ",{"fg":4,"bold":true}],["|",{"inverse":true}],[" 61 ",{"fg":3,"bold":true}],["<                                                                                                               ",{}],["|",{"inverse":true}],[" 28 ",{"fg":3,"bold":true}],["  .viminfo        ",{}]],"28":[["~                   ",{"fg":4,"bold":true}],["|",{"inverse":true}],[" 62 ",{"fg":3,"bold":true}],["                                                                                                                ",{}],["|",{"inverse":true}],[" 29 ",{"fg":3,"bold":true}],["  .vimrc          ",{}]],"29":[["~                   ",{"fg":4,"bold":true}],["|",{"inverse":true}],[" 63 ",{"fg":3,"bold":true}],["                                                *g:calendar_keys*                                               ",{}],["|",{"inverse":true}],[" 30 ",{"fg":3,"bold":true}],["  .xsession-errors",{}]],"30":[["~                   ",{"fg":4,"bold":true}],["|",{"inverse":true}],[" 64 ",{"fg":3,"bold":true}],["To change the key bindings in the calendar window, add entries to this                                          ",{}],["|",{"inverse":true}],[" 31 ",{"fg":3,"bold":true}],["  anaconda-ks.cfg ",{}]],"31":[["~                   ",{"fg":4,"bold":true}],["|",{"inverse":true}],[" 65 ",{"fg":3,"bold":true}],["dictionary.   Possible keys, the action bound to the keycode given in the                                       ",{}],["|",{"inverse":true}],[" 32 ",{"fg":3,"bold":true}],["  initial-setup-ks",{}]],"32":[["~                   ",{"fg":4,"bold":true}],["|",{"inverse":true}],[" 66 ",{"fg":3,"bold":true}],["respective value for this key and the default binding are listed below.                                         ",{}],["|",{"inverse":true}],[" 33 ",{"fg":3,"bold":true}],["  test.c          ",{}]],"33":[["~                   ",{"fg":4,"bold":true}],["|",{"inverse":true}],[" 67 ",{"fg":3,"bold":true}],["'close'                     Closes calendar window.             'q'                                             ",{}],["|",{"inverse":true}],[" 34 ",{"fg":3,"bold":true}],["  test.cpp        ",{}]],"34":[["~                   ",{"fg":4,"bold":true}],["|",{"inverse":true}],[" 68 ",{"fg":3,"bold":true}],["'do_action'                 Executes |calendar_action|.           '<CR>'                                        ",{}],["|",{"inverse":true}],[" 35 ",{"fg":3,"bold":true}],["  .test.cpp.swp   ",{}]],"35":[["~                   ",{"fg":4,"bold":true}],["|",{"inverse":true}],[" 69 ",{"fg":3,"bold":true}],["'goto_today'                Executes |calendar_today|.            't'                                           ",{}],["|",{"inverse":true}],["~                     ",{"fg":4,"bold":true}]],"36":[["~                   ",{"fg":4,"bold":true}],["|",{"inverse":true}],[" 70 ",{"fg":3,"bold":true}],["'show_help'                 Displays a short help message.      '?'                                             ",{}],["|",{"inverse":true}],["~                     ",{"fg":4,"bold":true}]],"37":[["~                   ",{"fg":4,"bold":true}],["|",{"inverse":true}],[" 71 ",{"fg":3,"bold":true}],["'redisplay'                 Redraws calendar window.            'r'                                             ",{}],["|",{"inverse":true}],["~                     ",{"fg":4,"bold":true}]],"38":[["~                   ",{"fg":4,"bold":true}],["|",{"inverse":true}],[" 72 ",{"fg":3,"bold":true}],["'goto_next_month'           Jumps to the next month.            '<Right>'                                       ",{}],["|",{"inverse":true}],["~                     ",{"fg":4,"bold":true}]],"39":[["~                   ",{"fg":4,"bold":true}],["|",{"inverse":true}],[" 73 ",{"fg":3,"bold":true}],["'goto_prev_month'           Jumps to the previous month.        '<Left>'                                        ",{}],["|",{"inverse":true}],["~                     ",{"fg":4,"bold":true}]],"40":[["~                   ",{"fg":4,"bold":true}],["|",{"inverse":true}],[" 74 ",{"fg":3,"bold":true}],["'goto_next_year'            Jumps to the next year.             '<Up>'                                          ",{}],["|",{"inverse":true}],["~                     ",{"fg":4,"bold":true}]],"41":[["~                   ",{"fg":4,"bold":true}],["|",{"inverse":true}],[" 75 ",{"fg":3,"bold":true}],["'goto_prev_year'            Jumps to the previous year.         '<Down>'                                        ",{}],["|",{"inverse":true}],["~                     ",{"fg":4,"bold":true}]],"42":[["~                   ",{"fg":4,"bold":true}],["|",{"inverse":true}],[" 76 ",{"fg":3,"bold":true}],["An example in your .vimrc might look like this: >                                                               ",{}],["|",{"inverse":true}],["~                     ",{"fg":4,"bold":true}]],"43":[["~                   ",{"fg":4,"bold":true}],["|",{"inverse":true}],[" 77 ",{"fg":3,"bold":true}],["  let g:calendar_keys = { 'goto_next_month': '<C-Right>', 'goto_prev_month': '<C-Left>'}                        ",{}],["|",{"inverse":true}],["~                     ",{"fg":4,"bold":true}]],"44":[["~                   ",{"fg":4,"bold":true}],["|",{"inverse":true}],[" 78 ",{"fg":3,"bold":true}],["<                                               ",{"underline":true}],["-Right>', 'goto_prev_month': '<C-Left>'}                        ",{}],["|",{"inverse":true}],["~                     ",{"fg":4,"bold":true}]]},"cursor":{"x":73,"y":44,"visible":false}}],[0.040071,{"lines":{"44":[["~                   ",{"fg":4,"bold":true}],["|",{"inverse":true}],[" 78 ",{"fg":3,"bold":true}],["<                                                                                                               ",{}],["|",{"inverse":true}],["~                     ",{"fg":4,"bold":true}]],"45":[["~                   ",{"fg":4,"bold":true}],["|",{"inverse":true}],[" 79 ",{"fg":3,"bold":true}],["                                                                                                                ",{"underline":true}],["|",{"inverse":true}],["~                     ",{"fg":4,"bold":true}]],"46":[["[Name] test.cpp      ",{"inverse":true}],[" NORMAL ",{"bold":true}],[" ",{}],["calendar.txt ",{"bold":true}],["                                                        unix │ utf-8 │ text │  35% ",{}],[" LN  79",{"bold":true}],[":1  ",{}],[" ",{"bold":true,"inverse":true}],[" ~/…/calendar-vim/doc>",{"bold":true}]]},"cursor":{"x":25,"y":45,"visible":true}}],[0.005413,{"lines":{"0":[["\" Press <F1> for hel",{"fg":6,"bold":true}],["|",{"inverse":true}],[" 35 ",{"fg":3,"bold":true}],["                                                *calendar-:CalendarVR*                                          ",{}],["|",{"inverse":true}],["  1 ",{"fg":3,"bold":true}],["\" Press ? for help",{"fg":5,"bold":true}]],"1":[["                    ",{}],["|",{"inverse":true}],[" 36 ",{"fg":3,"bold":true}],[":CalendarVR [[year] month]  Show calendar at this year and this month in a                                      ",{}],["|",{"inverse":true}],["  2 ",{"fg":3,"bold":true}],["                  ",{}]],"2":[["▼",{"fg":3,"bold":true}],[" First",{"fg":5,"bold":true}],[" : ",{}],["struct",{"fg":2,"bold":true}],["    ",{}],["|",{"inverse":true}],[" 37 ",{"fg":3,"bold":true}],["                          vertical split at the right site.  When [year] is                                     ",{}],["|",{"inverse":true}],["  3 ",{"fg":3,"bold":true}],[".. (up a dir)",{"fg":6,"bold":true}],["     ",{}]],"3":[["    [prototypes]",{"fg":6,"bold":true}],["    ",{}],["|",{"inverse":true}],[" 38 ",{"fg":3,"bold":true}],["                          omitted, the calendar will show the given month in                                    ",{}],["|",{"inverse":true}],["  4 /root/",{"fg":3,"bold":true}],["            ",{}]],"4":[["   ",{}],["+",{"fg":2,"bold":true}],["FirstRun(void)  ",{}],["|",{"inverse":true}],[" 39 ",{"fg":3,"bold":true}],["                          the current year.  When both [year] and [month] are                                   ",{}],["|",{"inverse":true}],["  5 ",{"fg":3,"bold":true}],["▸ .asciinema/",{"fg":6,"bold":true}],["     ",{}]],"5":[["   ",{}],["+",{"fg":2,"bold":true}],["FirstRun2(void) ",{}],["|",{"inverse":true}],[" 40 ",{"fg":3,"bold":true}],["                          omitted, the calendar will show the current month.                                    ",{}],["|",{"inverse":true}],["  6 ",{"fg":3,"bold":true}],["▸ .cache/",{"fg":6,"bold":true}],["         ",{}]],"6":[["                    ",{}],["|",{"inverse":true}],[" 41 ",{"fg":3,"bold":true}],["                                                                                                                ",{}],["|",{"inverse":true}],["  7 ",{"fg":3,"bold":true}],["▸ .config/",{"fg":6,"bold":true}],["        ",{}]],"7":[["▼",{"fg":3,"bold":true}],[" Last",{"fg":5,"bold":true}],[" : ",{}],["struct",{"fg":2,"bold":true}],["     ",{}],["|",{"inverse":true}],[" 42 ",{"fg":3,"bold":true}],["MAPPINGS                                        *calendar-mappings*                                             ",{}],["|",{"inverse":true}],["  8 ",{"fg":3,"bold":true}],["▸ .dbus/",{"fg":6,"bold":true}],["          ",{}]],"8":[["    [functions]",{"fg":6,"bold":true}],["     ",{}],["|",{"inverse":true}],[" 43 ",{"fg":3,"bold":true}],["                                                                                                                ",{}],["|",{"inverse":true}],["  9 ",{"fg":3,"bold":true}],["▸ .gnupg/",{"fg":6,"bold":true}],["         ",{}]],"9":[["   ",{}],["+",{"fg":2,"bold":true}],["FirstRun(void)  ",{}],["|",{"inverse":true}],[" 44 ",{"fg":3,"bold":true}],["calendar.vim makes the following normal mode mappings available:                                                ",{}],["|",{"inverse":true}],[" 10 ",{"fg":3,"bold":true}],["▸ .kde/",{"fg":6,"bold":true}],["           ",{}]],"10":[["   ",{}],["+",{"fg":2,"bold":true}],["FirstRun2(void) ",{}],["|",{"inverse":true}],[" 45 ",{"fg":3,"bold":true}],["                                                                                                                ",{}],["|",{"inverse":true}],[" 11 ",{"fg":3,"bold":true}],["▸ .local/",{"fg":6,"bold":true}],["         ",{}]],"11":[["   ",{}],["+",{"fg":2,"bold":true}],["~Last()         ",{}],["|",{"inverse":true}],[" 46 ",{"fg":3,"bold":true}],["                                                *calendar-cal*                                                  ",{}],["|",{"inverse":true}],[" 12 ",{"fg":3,"bold":true}],["▸ .pki/",{"fg":6,"bold":true}],["           ",{}]],"12":[["   ",{}],["+",{"fg":2,"bold":true}],["SecondRun(void) ",{}],["|",{"inverse":true}],[" 47 ",{"fg":3,"bold":true}],["<LocalLeader>cal          Brings up the calendar in a vertical split.                                           ",{}],["|",{"inverse":true}],[" 13 ",{"fg":3,"bold":true}],["▸ .ssh/",{"fg":6,"bold":true}],["           ",{}]],"13":[["   ",{}],["+",{"fg":2,"bold":true}],["SecondRun2(void)",{}],["|",{"inverse":true}],[" 48 ",{"fg":3,"bold":true}],["                          Equivalent to calling |:Calendar|.                                                    ",{}],["|",{"inverse":true}],[" 14 ",{"fg":3,"bold":true}],["▸ .vim/",{"fg":6,"bold":true}],["           ",{}]],"14":[["                    ",{}],["|",{"inverse":true}],[" 49 ",{"fg":3,"bold":true}],["                                                                                                                ",{}],["|",{"inverse":true}],[" 15 ",{"fg":3,"bold":true}],["▸ diary/",{"fg":6,"bold":true}],["          ",{}]],"15":[["▼",{"fg":3,"bold":true}],[" Second",{"fg":5,"bold":true}],[" : ",{}],["struct",{"fg":2,"bold":true}],["   ",{}],["|",{"inverse":true}],[" 50 ",{"fg":3,"bold":true}],["                                                *calendar-caL*                                                  ",{}],["|",{"inverse":true}],[" 16 ",{"fg":3,"bold":true}],["▸ temp/",{"fg":6,"bold":true}],["           ",{}]],"16":[["    [prototypes]",{"fg":6,"bold":true}],["    ",{}],["|",{"inverse":true}],[" 51 ",{"fg":3,"bold":true}],["<LocalLeader>",{}],["caL ",{"bg":1}],["        ",{}],[" Bri",{"bg":1}],["ngs up the calendar in a horizontal split.                                         ",{}],["|",{"inverse":true}],[" 17 ",{"fg":3,"bold":true}],["  .bash_history   ",{}]],"17":[["   ",{}],["+",{"fg":2,"bold":true}],["SecondRun(void) ",{}],["|",{"inverse":true}],[" 52 ",{"fg":3,"bold":true}],["                          Equivalent to calling |:CalendarH|.                                                   ",{}],["|",{"inverse":true}],[" 18 ",{"fg":3,"bold":true}],["  .bash_logout    ",{}]],"18":[["   ",{}],["+",{"fg":2,"bold":true}],["SecondRun2(void)",{}],["|",{"inverse":true}],[" 53 ",{"fg":3,"bold":true}],["                                                                                                                ",{}],["|",{"inverse":true}],[" 19 ",{"fg":3,"bold":true}],["  .bash_profile   ",{"underline":true}]],"19":[["                    ",{}],["|",{"inverse":true}],[" 54 ",{"fg":3,"bold":true}],["SETTINGS                                        *calendar-settings*                                             ",{}],["|",{"inverse":true}],[" 20 ",{"fg":3,"bold":true}],["  .bashrc         ",{}]],"20":[["▼",{"fg":3,"bold":true}],[" ",{}],["functions",{"fg":6,"bold":true}],["         ",{}],["|",{"inverse":true}],[" 55 ",{"fg":3,"bold":true}],["                                                                                                                ",{}],["|",{"inverse":true}],[" 21 ",{"fg":3,"bold":true}],["  .cshrc          ",{}]],"21":[["    main(int argc, c",{"underline":true}],["|",{"inverse":true}],[" 56 ",{"fg":3,"bold":true}],["calendar.vim can be con",{}],["figured using the following sett",{"bg":1}],["ings:                                                    ",{}],["|",{"inverse":true}],[" 22 ",{"fg":3,"bold":true}],["  .dmrc           ",{}]],"22":[["~                   ",{"fg":4,"bold":true}],["|",{"inverse":true}],[" 57 ",{"fg":3,"bold":true}],["                                                                                                                ",{}],["|",{"inverse":true}],[" 23 ",{"fg":3,"bold":true}],["  .esd_auth       ",{}]],"23":[["~                   ",{"fg":4,"bold":true}],["|",{"inverse":true}],[" 58 ",{"fg":3,"bold":true}],["                                                *g:calendar_focus_today*                                        ",{}],["|",{"inverse":true}],[" 24 ",{"fg":3,"bold":true}],["  .gtkrc-2.0      ",{}]],"24":[["~                   ",{"fg":4,"bold":true}],["|",{"inverse":true}],[" 59 ",{"fg":3,"bold":true}],["Keeps focus when moving to next or previous calendar: >                                                         ",{}],["|",{"inverse":true}],[" 25 ",{"fg":3,"bold":true}],["  .gtkrc-2.0-kde4 ",{}]],"25":[["~                   ",{"fg":4,"bold":true}],["|",{"inverse":true}],[" 60 ",{"fg":3,"bold":true}],["  let g:calendar_focus_today = 1                                                                                ",{}],["|",{"inverse":true}],[" 26 ",{"fg":3,"bold":true}],["  .lesshst        ",{}]],"26":[["~                   ",{"fg":4,"bold":true}],["|",{"inverse":true}],[" 61 ",{"fg":3,"bold":true}],["<                                                                                                               ",{}],["|",{"inverse":true}],[" 27 ",{"fg":3,"bold":true}],["  .tcshrc         ",{}]],"27":[["~                   ",{"fg":4,"bold":true}],["|",{"inverse":true}],[" 62 ",{"fg":3,"bold":true}],["                                                                                                                ",{}],["|",{"inverse":true}],[" 28 ",{"fg":3,"bold":true}],["  .viminfo        ",{}]],"28":[["~                   ",{"fg":4,"bold":true}],["|",{"inverse":true}],[" 63 ",{"fg":3,"bold":true}],["                                                *g:calendar_keys*                                               ",{}],["|",{"inverse":true}],[" 29 ",{"fg":3,"bold":true}],["  .vimrc          ",{}]],"29":[["~                   ",{"fg":4,"bold":true}],["|",{"inverse":true}],[" 64 ",{"fg":3,"bold":true}],["To change the key bindings in the calendar window, add entries to this                                          ",{}],["|",{"inverse":true}],[" 30 ",{"fg":3,"bold":true}],["  .xsession-errors",{}]],"30":[["~                   ",{"fg":4,"bold":true}],["|",{"inverse":true}],[" 65 ",{"fg":3,"bold":true}],["dictionary.   Possible keys, the action bound to the keycode given in the                                       ",{}],["|",{"inverse":true}],[" 31 ",{"fg":3,"bold":true}],["  anaconda-ks.cfg ",{}]],"31":[["~                   ",{"fg":4,"bold":true}],["|",{"inverse":true}],[" 66 ",{"fg":3,"bold":true}],["respective value for this key and the default binding are listed below.                                         ",{}],["|",{"inverse":true}],[" 32 ",{"fg":3,"bold":true}],["  initial-setup-ks",{}]],"32":[["~                   ",{"fg":4,"bold":true}],["|",{"inverse":true}],[" 67 ",{"fg":3,"bold":true}],["'close'                     Closes calendar window.             'q'                                             ",{}],["|",{"inverse":true}],[" 33 ",{"fg":3,"bold":true}],["  test.c          ",{}]],"33":[["~                   ",{"fg":4,"bold":true}],["|",{"inverse":true}],[" 68 ",{"fg":3,"bold":true}],["'do_action'                 Executes |calendar_action|.           '<CR>'                                        ",{}],["|",{"inverse":true}],[" 34 ",{"fg":3,"bold":true}],["  test.cpp        ",{}]],"34":[["~                   ",{"fg":4,"bold":true}],["|",{"inverse":true}],[" 69 ",{"fg":3,"bold":true}],["'goto_today'                Executes |calendar_today|.            't'                                           ",{}],["|",{"inverse":true}],[" 35 ",{"fg":3,"bold":true}],["  .test.cpp.swp   ",{}]],"35":[["~                   ",{"fg":4,"bold":true}],["|",{"inverse":true}],[" 70 ",{"fg":3,"bold":true}],["'show_help'                 Displays a short help message.      '?'                                             ",{}],["|",{"inverse":true}],["~                     ",{"fg":4,"bold":true}]],"36":[["~                   ",{"fg":4,"bold":true}],["|",{"inverse":true}],[" 71 ",{"fg":3,"bold":true}],["'redisplay'                 Redraws calendar window.            'r'                                             ",{}],["|",{"inverse":true}],["~                     ",{"fg":4,"bold":true}]],"37":[["~                   ",{"fg":4,"bold":true}],["|",{"inverse":true}],[" 72 ",{"fg":3,"bold":true}],["'goto_next_month'           Jumps to the next month.            '<Right>'                                       ",{}],["|",{"inverse":true}],["~                     ",{"fg":4,"bold":true}]],"38":[["~                   ",{"fg":4,"bold":true}],["|",{"inverse":true}],[" 73 ",{"fg":3,"bold":true}],["'goto_prev_month'           Jumps to the previous month.        '<Left>'                                        ",{}],["|",{"inverse":true}],["~                     ",{"fg":4,"bold":true}]],"39":[["~                   ",{"fg":4,"bold":true}],["|",{"inverse":true}],[" 74 ",{"fg":3,"bold":true}],["'goto_next_year'            Jumps to the next year.             '<Up>'                                          ",{}],["|",{"inverse":true}],["~                     ",{"fg":4,"bold":true}]],"40":[["~                   ",{"fg":4,"bold":true}],["|",{"inverse":true}],[" 75 ",{"fg":3,"bold":true}],["'goto_prev_year'            Jumps to the previous year.         '<Down>'                                        ",{}],["|",{"inverse":true}],["~                     ",{"fg":4,"bold":true}]],"41":[["~                   ",{"fg":4,"bold":true}],["|",{"inverse":true}],[" 76 ",{"fg":3,"bold":true}],["An example in your .vimrc might look like this: >                                                               ",{}],["|",{"inverse":true}],["~                     ",{"fg":4,"bold":true}]],"42":[["~                   ",{"fg":4,"bold":true}],["|",{"inverse":true}],[" 77 ",{"fg":3,"bold":true}],["  let g:calendar_keys = { 'goto_next_month': '<C-Right>', 'goto_prev_month': '<C-Left>'}                        ",{}],["|",{"inverse":true}],["~                     ",{"fg":4,"bold":true}]],"43":[["~                   ",{"fg":4,"bold":true}],["|",{"inverse":true}],[" 78 ",{"fg":3,"bold":true}],["<                                                                                                               ",{}],["|",{"inverse":true}],["~                     ",{"fg":4,"bold":true}]],"44":[["~                   ",{"fg":4,"bold":true}],["|",{"inverse":true}],[" 79 ",{"fg":3,"bold":true}],["                                                ",{"underline":true}],["                                                                ",{}],["|",{"inverse":true}],["~                     ",{"fg":4,"bold":true}]]},"cursor":{"x":73,"y":44,"visible":false}}],[0.020323,{"lines":{"44":[["~                   ",{"fg":4,"bold":true}],["|",{"inverse":true}],[" 79 ",{"fg":3,"bold":true}],["                                                                                                                ",{}],["|",{"inverse":true}],["~                     ",{"fg":4,"bold":true}]],"45":[["~                   ",{"fg":4,"bold":true}],["|",{"inverse":true}],[" 80 ",{"fg":3,"bold":true}],["                                                *g:calendar_mark*                                               ",{"underline":true}],["|",{"inverse":true}],["~                     ",{"fg":4,"bold":true}]],"46":[["[Name] test.cpp      ",{"inverse":true}],[" NORMAL ",{"bold":true}],[" ",{}],["calendar.txt ",{"bold":true}],["                                                        unix │ utf-8 │ text │  36% ",{}],[" LN  80",{"bold":true}],[":1  ",{}],[" ",{"bold":true,"inverse":true}],[" ~/…/calendar-vim/doc>",{"bold":true}]]},"cursor":{"x":25,"y":45,"visible":true}}],[0.004888,{"lines":{"0":[["\" Press <F1> for hel",{"fg":6,"bold":true}],["|",{"inverse":true}],[" 36 ",{"fg":3,"bold":true}],[":CalendarVR [[year] month]  Show calendar at this year and this month in a                                      ",{}],["|",{"inverse":true}],["  1 ",{"fg":3,"bold":true}],["\" Press ? for help",{"fg":5,"bold":true}]],"1":[["                    ",{}],["|",{"inverse":true}],[" 37 ",{"fg":3,"bold":true}],["                          vertical split at the right site.  When [year] is                                     ",{}],["|",{"inverse":true}],["  2 ",{"fg":3,"bold":true}],["                  ",{}]],"2":[["▼",{"fg":3,"bold":true}],[" First",{"fg":5,"bold":true}],[" : ",{}],["struct",{"fg":2,"bold":true}],["    ",{}],["|",{"inverse":true}],[" 38 ",{"fg":3,"bold":true}],["                          omitted, the calendar will show the given month in                                    ",{}],["|",{"inverse":true}],["  3 ",{"fg":3,"bold":true}],[".. (up a dir)",{"fg":6,"bold":true}],["     ",{}]],"3":[["    [prototypes]",{"fg":6,"bold":true}],["    ",{}],["|",{"inverse":true}],[" 39 ",{"fg":3,"bold":true}],["                          the current year.  When both [year] and [month] are                                   ",{}],["|",{"inverse":true}],["  4 /root/",{"fg":3,"bold":true}],["            ",{}]],"4":[["   ",{}],["+",{"fg":2,"bold":true}],["FirstRun(void)  ",{}],["|",{"inverse":true}],[" 40 ",{"fg":3,"bold":true}],["                          omitted, the calendar will show the current month.                                    ",{}],["|",{"inverse":true}],["  5 ",{"fg":3,"bold":true}],["▸ .asciinema/",{"fg":6,"bold":true}],["     ",{}]],"5":[["   ",{}],["+",{"fg":2,"bold":true}],["FirstRun2(void) ",{}],["|",{"inverse":true}],[" 41 ",{"fg":3,"bold":true}],["                                                                                                                ",{}],["|",{"inverse":true}],["  6 ",{"fg":3,"bold":true}],["▸ .cache/",{"fg":6,"bold":true}],["         ",{}]],"6":[["                    ",{}],["|",{"inverse":true}],[" 42 ",{"fg":3,"bold":true}],["MAPPINGS                                        *calendar-mappings*                                             ",{}],["|",{"inverse":true}],["  7 ",{"fg":3,"bold":true}],["▸ .config/",{"fg":6,"bold":true}],["        ",{}]],"7":[["▼",{"fg":3,"bold":true}],[" Last",{"fg":5,"bold":true}],[" : ",{}],["struct",{"fg":2,"bold":true}],["     ",{}],["|",{"inverse":true}],[" 43 ",{"fg":3,"bold":true}],["                                                                                                                ",{}],["|",{"inverse":true}],["  8 ",{"fg":3,"bold":true}],["▸ .dbus/",{"fg":6,"bold":true}],["          ",{}]],"8":[["    [functions]",{"fg":6,"bold":true}],["     ",{}],["|",{"inverse":true}],[" 44 ",{"fg":3,"bold":true}],["calendar.vim makes the following normal mode mappings available:                                                ",{}],["|",{"inverse":true}],["  9 ",{"fg":3,"bold":true}],["▸ .gnupg/",{"fg":6,"bold":true}],["         ",{}]],"9":[["   ",{}],["+",{"fg":2,"bold":true}],["FirstRun(void)  ",{}],["|",{"inverse":true}],[" 45 ",{"fg":3,"bold":true}],["                                                                                                                ",{}],["|",{"inverse":true}],[" 10 ",{"fg":3,"bold":true}],["▸ .kde/",{"fg":6,"bold":true}],["           ",{}]],"10":[["   ",{}],["+",{"fg":2,"bold":true}],["FirstRun2(void) ",{}],["|",{"inverse":true}],[" 46 ",{"fg":3,"bold":true}],["                                                *calendar-cal*                                                  ",{}],["|",{"inverse":true}],[" 11 ",{"fg":3,"bold":true}],["▸ .local/",{"fg":6,"bold":true}],["         ",{}]],"11":[["   ",{}],["+",{"fg":2,"bold":true}],["~Last()         ",{}],["|",{"inverse":true}],[" 47 ",{"fg":3,"bold":true}],["<LocalLeader>cal          Brings up the calendar in a vertical split.                                           ",{}],["|",{"inverse":true}],[" 12 ",{"fg":3,"bold":true}],["▸ .pki/",{"fg":6,"bold":true}],["           ",{}]],"12":[["   ",{}],["+",{"fg":2,"bold":true}],["SecondRun(void) ",{}],["|",{"inverse":true}],[" 48 ",{"fg":3,"bold":true}],["                          Equivalent to calling |:Calendar|.                                                    ",{}],["|",{"inverse":true}],[" 13 ",{"fg":3,"bold":true}],["▸ .ssh/",{"fg":6,"bold":true}],["           ",{}]],"13":[["   ",{}],["+",{"fg":2,"bold":true}],["SecondRun2(void)",{}],["|",{"inverse":true}],[" 49 ",{"fg":3,"bold":true}],["                                                                                                                ",{}],["|",{"inverse":true}],[" 14 ",{"fg":3,"bold":true}],["▸ .vim/",{"fg":6,"bold":true}],["           ",{}]],"14":[["                    ",{}],["|",{"inverse":true}],[" 50 ",{"fg":3,"bold":true}],["                                                *calendar-caL*                                                  ",{}],["|",{"inverse":true}],[" 15 ",{"fg":3,"bold":true}],["▸ diary/",{"fg":6,"bold":true}],["          ",{}]],"15":[["▼",{"fg":3,"bold":true}],[" Second",{"fg":5,"bold":true}],[" : ",{}],["struct",{"fg":2,"bold":true}],["   ",{}],["|",{"inverse":true}],[" 51 ",{"fg":3,"bold":true}],["<LocalLeader>",{}],["caL ",{"bg":1}],["        ",{}],[" Bri",{"bg":1}],["ngs up the calendar in a horizontal split.                                         ",{}],["|",{"inverse":true}],[" 16 ",{"fg":3,"bold":true}],["▸ temp/",{"fg":6,"bold":true}],["           ",{}]],"16":[["    [prototypes]",{"fg":6,"bold":true}],["    ",{}],["|",{"inverse":true}],[" 52 ",{"fg":3,"bold":true}],["                          Equivalent to calling |:CalendarH|.                                                   ",{}],["|",{"inverse":true}],[" 17 ",{"fg":3,"bold":true}],["  .bash_history   ",{}]],"17":[["   ",{}],["+",{"fg":2,"bold":true}],["SecondRun(void) ",{}],["|",{"inverse":true}],[" 53 ",{"fg":3,"bold":true}],["                                                                                                                ",{}],["|",{"inverse":true}],[" 18 ",{"fg":3,"bold":true}],["  .bash_logout    ",{}]],"18":[["   ",{}],["+",{"fg":2,"bold":true}],["SecondRun2(void)",{}],["|",{"inverse":true}],[" 54 ",{"fg":3,"bold":true}],["SETTINGS                                        *calendar-settings*                                             ",{}],["|",{"inverse":true}],[" 19 ",{"fg":3,"bold":true}],["  .bash_profile   ",{"underline":true}]],"19":[["                    ",{}],["|",{"inverse":true}],[" 55 ",{"fg":3,"bold":true}],["                                                                                                                ",{}],["|",{"inverse":true}],[" 20 ",{"fg":3,"bold":true}],["  .bashrc         ",{}]],"20":[["▼",{"fg":3,"bold":true}],[" ",{}],["functions",{"fg":6,"bold":true}],["         ",{}],["|",{"inverse":true}],[" 56 ",{"fg":3,"bold":true}],["calendar.vim can be con",{}],["figured using the following sett",{"bg":1}],["ings:                                                    ",{}],["|",{"inverse":true}],[" 21 ",{"fg":3,"bold":true}],["  .cshrc          ",{}]],"21":[["    main(int argc, c",{"underline":true}],["|",{"inverse":true}],[" 57 ",{"fg":3,"bold":true}],["                                                                                                                ",{}],["|",{"inverse":true}],[" 22 ",{"fg":3,"bold":true}],["  .dmrc           ",{}]],"22":[["~                   ",{"fg":4,"bold":true}],["|",{"inverse":true}],[" 58 ",{"fg":3,"bold":true}],["                                                *g:calendar_focus_today*                                        ",{}],["|",{"inverse":true}],[" 23 ",{"fg":3,"bold":true}],["  .esd_auth       ",{}]],"23":[["~                   ",{"fg":4,"bold":true}],["|",{"inverse":true}],[" 59 ",{"fg":3,"bold":true}],["Keeps focus when moving to next or previous calendar: >                                                         ",{}],["|",{"inverse":true}],[" 24 ",{"fg":3,"bold":true}],["  .gtkrc-2.0      ",{}]],"24":[["~                   ",{"fg":4,"bold":true}],["|",{"inverse":true}],[" 60 ",{"fg":3,"bold":true}],["  let g:calendar_focus_today = 1                                                                                ",{}],["|",{"inverse":true}],[" 25 ",{"fg":3,"bold":true}],["  .gtkrc-2.0-kde4 ",{}]],"25":[["~                   ",{"fg":4,"bold":true}],["|",{"inverse":true}],[" 61 ",{"fg":3,"bold":true}],["<                                                                                                               ",{}],["|",{"inverse":true}],[" 26 ",{"fg":3,"bold":true}],["  .lesshst        ",{}]],"26":[["~                   ",{"fg":4,"bold":true}],["|",{"inverse":true}],[" 62 ",{"fg":3,"bold":true}],["                                                                                                                ",{}],["|",{"inverse":true}],[" 27 ",{"fg":3,"bold":true}],["  .tcshrc         ",{}]],"27":[["~                   ",{"fg":4,"bold":true}],["|",{"inverse":true}],[" 63 ",{"fg":3,"bold":true}],["                                                *g:calendar_keys*                                               ",{}],["|",{"inverse":true}],[" 28 ",{"fg":3,"bold":true}],["  .viminfo        ",{}]],"28":[["~                   ",{"fg":4,"bold":true}],["|",{"inverse":true}],[" 64 ",{"fg":3,"bold":true}],["To change the key bindings in the calendar window, add entries to this                                          ",{}],["|",{"inverse":true}],[" 29 ",{"fg":3,"bold":true}],["  .vimrc          ",{}]],"29":[["~                   ",{"fg":4,"bold":true}],["|",{"inverse":true}],[" 65 ",{"fg":3,"bold":true}],["dictionary.   Possible keys, the action bound to the keycode given in the                                       ",{}],["|",{"inverse":true}],[" 30 ",{"fg":3,"bold":true}],["  .xsession-errors",{}]],"30":[["~                   ",{"fg":4,"bold":true}],["|",{"inverse":true}],[" 66 ",{"fg":3,"bold":true}],["respective value for this key and the default binding are listed below.                                         ",{}],["|",{"inverse":true}],[" 31 ",{"fg":3,"bold":true}],["  anaconda-ks.cfg ",{}]],"31":[["~                   ",{"fg":4,"bold":true}],["|",{"inverse":true}],[" 67 ",{"fg":3,"bold":true}],["'close'                     Closes calendar window.             'q'                                             ",{}],["|",{"inverse":true}],[" 32 ",{"fg":3,"bold":true}],["  initial-setup-ks",{}]],"32":[["~                   ",{"fg":4,"bold":true}],["|",{"inverse":true}],[" 68 ",{"fg":3,"bold":true}],["'do_action'                 Executes |calendar_action|.           '<CR>'                                        ",{}],["|",{"inverse":true}],[" 33 ",{"fg":3,"bold":true}],["  test.c          ",{}]],"33":[["~                   ",{"fg":4,"bold":true}],["|",{"inverse":true}],[" 69 ",{"fg":3,"bold":true}],["'goto_today'                Executes |calendar_today|.            't'                                           ",{}],["|",{"inverse":true}],[" 34 ",{"fg":3,"bold":true}],["  test.cpp        ",{}]],"34":[["~                   ",{"fg":4,"bold":true}],["|",{"inverse":true}],[" 70 ",{"fg":3,"bold":true}],["'show_help'                 Displays a short help message.      '?'                                             ",{}],["|",{"inverse":true}],[" 35 ",{"fg":3,"bold":true}],["  .test.cpp.swp   ",{}]],"35":[["~                   ",{"fg":4,"bold":true}],["|",{"inverse":true}],[" 71 ",{"fg":3,"bold":true}],["'redisplay'                 Redraws calendar window.            'r'                                             ",{}],["|",{"inverse":true}],["~                     ",{"fg":4,"bold":true}]],"36":[["~                   ",{"fg":4,"bold":true}],["|",{"inverse":true}],[" 72 ",{"fg":3,"bold":true}],["'goto_next_month'           Jumps to the next month.            '<Right>'                                       ",{}],["|",{"inverse":true}],["~                     ",{"fg":4,"bold":true}]],"37":[["~                   ",{"fg":4,"bold":true}],["|",{"inverse":true}],[" 73 ",{"fg":3,"bold":true}],["'goto_prev_month'           Jumps to the previous month.        '<Left>'                                        ",{}],["|",{"inverse":true}],["~                     ",{"fg":4,"bold":true}]],"38":[["~                   ",{"fg":4,"bold":true}],["|",{"inverse":true}],[" 74 ",{"fg":3,"bold":true}],["'goto_next_year'            Jumps to the next year.             '<Up>'                                          ",{}],["|",{"inverse":true}],["~                     ",{"fg":4,"bold":true}]],"39":[["~                   ",{"fg":4,"bold":true}],["|",{"inverse":true}],[" 75 ",{"fg":3,"bold":true}],["'goto_prev_year'            Jumps to the previous year.         '<Down>'                                        ",{}],["|",{"inverse":true}],["~                     ",{"fg":4,"bold":true}]],"40":[["~                   ",{"fg":4,"bold":true}],["|",{"inverse":true}],[" 76 ",{"fg":3,"bold":true}],["An example in your .vimrc might look like this: >                                                               ",{}],["|",{"inverse":true}],["~                     ",{"fg":4,"bold":true}]],"41":[["~                   ",{"fg":4,"bold":true}],["|",{"inverse":true}],[" 77 ",{"fg":3,"bold":true}],["  let g:calendar_keys = { 'goto_next_month': '<C-Right>', 'goto_prev_month': '<C-Left>'}                        ",{}],["|",{"inverse":true}],["~                     ",{"fg":4,"bold":true}]],"42":[["~                   ",{"fg":4,"bold":true}],["|",{"inverse":true}],[" 78 ",{"fg":3,"bold":true}],["<                                                                                                               ",{}],["|",{"inverse":true}],["~                     ",{"fg":4,"bold":true}]],"43":[["~                   ",{"fg":4,"bold":true}],["|",{"inverse":true}],[" 79 ",{"fg":3,"bold":true}],["                                                                                                                ",{}],["|",{"inverse":true}],["~                     ",{"fg":4,"bold":true}]],"44":[["~                   ",{"fg":4,"bold":true}],["|",{"inverse":true}],[" 80 ",{"fg":3,"bold":true}],["                                                ",{"underline":true}],["                                                                ",{}],["|",{"inverse":true}],["~                     ",{"fg":4,"bold":true}]]},"cursor":{"x":73,"y":44,"visible":false}}],[0.039096,{"lines":{"44":[["~                   ",{"fg":4,"bold":true}],["|",{"inverse":true}],[" 80 ",{"fg":3,"bold":true}],["                                                *g:calendar_mark*                                               ",{}],["|",{"inverse":true}],["~                     ",{"fg":4,"bold":true}]],"45":[["~                   ",{"fg":4,"bold":true}],["|",{"inverse":true}],[" 81 ",{"fg":3,"bold":true}],["Place a '*' or '+' mark after the day.  Acceptable values are 'left',                                           ",{"underline":true}],["|",{"inverse":true}],["~                     ",{"fg":4,"bold":true}]],"46":[["[Name] test.cpp      ",{"inverse":true}],[" NORMAL ",{"bold":true}],[" ",{}],["calendar.txt ",{"bold":true}],["                                                        unix │ utf-8 │ text │  36% ",{}],[" LN  81",{"bold":true}],[":1  ",{}],[" ",{"bold":true,"inverse":true}],[" ~/…/calendar-vim/doc>",{"bold":true}]]},"cursor":{"x":25,"y":45,"visible":true}}],[0.00574,{"lines":{"0":[["\" Press <F1> for hel",{"fg":6,"bold":true}],["|",{"inverse":true}],[" 37 ",{"fg":3,"bold":true}],["                          vertical split at the right site.  When [year] is                                     ",{}],["|",{"inverse":true}],["  1 ",{"fg":3,"bold":true}],["\" Press ? for help",{"fg":5,"bold":true}]],"1":[["                    ",{}],["|",{"inverse":true}],[" 38 ",{"fg":3,"bold":true}],["                          omitted, the calendar will show the given month in                                    ",{}],["|",{"inverse":true}],["  2 ",{"fg":3,"bold":true}],["                  ",{}]],"2":[["▼",{"fg":3,"bold":true}],[" First",{"fg":5,"bold":true}],[" : ",{}],["struct",{"fg":2,"bold":true}],["    ",{}],["|",{"inverse":true}],[" 39 ",{"fg":3,"bold":true}],["                          the current year.  When both [year] and [month] are                                   ",{}],["|",{"inverse":true}],["  3 ",{"fg":3,"bold":true}],[".. (up a dir)",{"fg":6,"bold":true}],["     ",{}]],"3":[["    [prototypes]",{"fg":6,"bold":true}],["    ",{}],["|",{"inverse":true}],[" 40 ",{"fg":3,"bold":true}],["                          omitted, the calendar will show the current month.                                    ",{}],["|",{"inverse":true}],["  4 /root/",{"fg":3,"bold":true}],["            ",{}]],"4":[["   ",{}],["+",{"fg":2,"bold":true}],["FirstRun(void)  ",{}],["|",{"inverse":true}],[" 41 ",{"fg":3,"bold":true}],["                                                                                                                ",{}],["|",{"inverse":true}],["  5 ",{"fg":3,"bold":true}],["▸ .asciinema/",{"fg":6,"bold":true}],["     ",{}]],"5":[["   ",{}],["+",{"fg":2,"bold":true}],["FirstRun2(void) ",{}],["|",{"inverse":true}],[" 42 ",{"fg":3,"bold":true}],["MAPPINGS                                        *calendar-mappings*                                             ",{}],["|",{"inverse":true}],["  6 ",{"fg":3,"bold":true}],["▸ .cache/",{"fg":6,"bold":true}],["         ",{}]],"6":[["                    ",{}],["|",{"inverse":true}],[" 43 ",{"fg":3,"bold":true}],["                                                                                                                ",{}],["|",{"inverse":true}],["  7 ",{"fg":3,"bold":true}],["▸ .config/",{"fg":6,"bold":true}],["        ",{}]],"7":[["▼",{"fg":3,"bold":true}],[" Last",{"fg":5,"bold":true}],[" : ",{}],["struct",{"fg":2,"bold":true}],["     ",{}],["|",{"inverse":true}],[" 44 ",{"fg":3,"bold":true}],["calendar.vim makes the following normal mode mappings available:                                                ",{}],["|",{"inverse":true}],["  8 ",{"fg":3,"bold":true}],["▸ .dbus/",{"fg":6,"bold":true}],["          ",{}]],"8":[["    [functions]",{"fg":6,"bold":true}],["     ",{}],["|",{"inverse":true}],[" 45 ",{"fg":3,"bold":true}],["                                                                                                                ",{}],["|",{"inverse":true}],["  9 ",{"fg":3,"bold":true}],["▸ .gnupg/",{"fg":6,"bold":true}],["         ",{}]],"9":[["   ",{}],["+",{"fg":2,"bold":true}],["FirstRun(void)  ",{}],["|",{"inverse":true}],[" 46 ",{"fg":3,"bold":true}],["                                                *calendar-cal*                                                  ",{}],["|",{"inverse":true}],[" 10 ",{"fg":3,"bold":true}],["▸ .kde/",{"fg":6,"bold":true}],["           ",{}]],"10":[["   ",{}],["+",{"fg":2,"bold":true}],["FirstRun2(void) ",{}],["|",{"inverse":true}],[" 47 ",{"fg":3,"bold":true}],["<LocalLeader>cal          Brings up the calendar in a vertical split.                                           ",{}],["|",{"inverse":true}],[" 11 ",{"fg":3,"bold":true}],["▸ .local/",{"fg":6,"bold":true}],["         ",{}]],"11":[["   ",{}],["+",{"fg":2,"bold":true}],["~Last()         ",{}],["|",{"inverse":true}],[" 48 ",{"fg":3,"bold":true}],["                          Equivalent to calling |:Calendar|.                                                    ",{}],["|",{"inverse":true}],[" 12 ",{"fg":3,"bold":true}],["▸ .pki/",{"fg":6,"bold":true}],["           ",{}]],"12":[["   ",{}],["+",{"fg":2,"bold":true}],["SecondRun(void) ",{}],["|",{"inverse":true}],[" 49 ",{"fg":3,"bold":true}],["                                                                                                                ",{}],["|",{"inverse":true}],[" 13 ",{"fg":3,"bold":true}],["▸ .ssh/",{"fg":6,"bold":true}],["           ",{}]],"13":[["   ",{}],["+",{"fg":2,"bold":true}],["SecondRun2(void)",{}],["|",{"inverse":true}],[" 50 ",{"fg":3,"bold":true}],["                                                *calendar-caL*                                                  ",{}],["|",{"inverse":true}],[" 14 ",{"fg":3,"bold":true}],["▸ .vim/",{"fg":6,"bold":true}],["           ",{}]],"14":[["                    ",{}],["|",{"inverse":true}],[" 51 ",{"fg":3,"bold":true}],["<LocalLeader>",{}],["caL ",{"bg":1}],["        ",{}],[" Bri",{"bg":1}],["ngs up the calendar in a horizontal split.                                         ",{}],["|",{"inverse":true}],[" 15 ",{"fg":3,"bold":true}],["▸ diary/",{"fg":6,"bold":true}],["          ",{}]],"15":[["▼",{"fg":3,"bold":true}],[" Second",{"fg":5,"bold":true}],[" : ",{}],["struct",{"fg":2,"bold":true}],["   ",{}],["|",{"inverse":true}],[" 52 ",{"fg":3,"bold":true}],["                          Equivalent to calling |:CalendarH|.                                                   ",{}],["|",{"inverse":true}],[" 16 ",{"fg":3,"bold":true}],["▸ temp/",{"fg":6,"bold":true}],["           ",{}]],"16":[["    [prototypes]",{"fg":6,"bold":true}],["    ",{}],["|",{"inverse":true}],[" 53 ",{"fg":3,"bold":true}],["                                                                                                                ",{}],["|",{"inverse":true}],[" 17 ",{"fg":3,"bold":true}],["  .bash_history   ",{}]],"17":[["   ",{}],["+",{"fg":2,"bold":true}],["SecondRun(void) ",{}],["|",{"inverse":true}],[" 54 ",{"fg":3,"bold":true}],["SETTINGS                                        *calendar-settings*                                             ",{}],["|",{"inverse":true}],[" 18 ",{"fg":3,"bold":true}],["  .bash_logout    ",{}]],"18":[["   ",{}],["+",{"fg":2,"bold":true}],["SecondRun2(void)",{}],["|",{"inverse":true}],[" 55 ",{"fg":3,"bold":true}],["                                                                                                                ",{}],["|",{"inverse":true}],[" 19 ",{"fg":3,"bold":true}],["  .bash_profile   ",{"underline":true}]],"19":[["                    ",{}],["|",{"inverse":true}],[" 56 ",{"fg":3,"bold":true}],["calendar.vim can be con",{}],["figured using the following sett",{"bg":1}],["ings:                                                    ",{}],["|",{"inverse":true}],[" 20 ",{"fg":3,"bold":true}],["  .bashrc         ",{}]],"20":[["▼",{"fg":3,"bold":true}],[" ",{}],["functions",{"fg":6,"bold":true}],["         ",{}],["|",{"inverse":true}],[" 57 ",{"fg":3,"bold":true}],["                                                                                                                ",{}],["|",{"inverse":true}],[" 21 ",{"fg":3,"bold":true}],["  .cshrc          ",{}]],"21":[["    main(int argc, c",{"underline":true}],["|",{"inverse":true}],[" 58 ",{"fg":3,"bold":true}],["                                                *g:calendar_focus_today*                                        ",{}],["|",{"inverse":true}],[" 22 ",{"fg":3,"bold":true}],["  .dmrc           ",{}]],"22":[["~                   ",{"fg":4,"bold":true}],["|",{"inverse":true}],[" 59 ",{"fg":3,"bold":true}],["Keeps focus when moving to next or previous calendar: >                                                         ",{}],["|",{"inverse":true}],[" 23 ",{"fg":3,"bold":true}],["  .esd_auth       ",{}]],"23":[["~                   ",{"fg":4,"bold":true}],["|",{"inverse":true}],[" 60 ",{"fg":3,"bold":true}],["  let g:calendar_focus_today = 1                                                                                ",{}],["|",{"inverse":true}],[" 24 ",{"fg":3,"bold":true}],["  .gtkrc-2.0      ",{}]],"24":[["~                   ",{"fg":4,"bold":true}],["|",{"inverse":true}],[" 61 ",{"fg":3,"bold":true}],["<                                                                                                               ",{}],["|",{"inverse":true}],[" 25 ",{"fg":3,"bold":true}],["  .gtkrc-2.0-kde4 ",{}]],"25":[["~                   ",{"fg":4,"bold":true}],["|",{"inverse":true}],[" 62 ",{"fg":3,"bold":true}],["                                                                                                                ",{}],["|",{"inverse":true}],[" 26 ",{"fg":3,"bold":true}],["  .lesshst        ",{}]],"26":[["~                   ",{"fg":4,"bold":true}],["|",{"inverse":true}],[" 63 ",{"fg":3,"bold":true}],["                                                *g:calendar_keys*                                               ",{}],["|",{"inverse":true}],[" 27 ",{"fg":3,"bold":true}],["  .tcshrc         ",{}]],"27":[["~                   ",{"fg":4,"bold":true}],["|",{"inverse":true}],[" 64 ",{"fg":3,"bold":true}],["To change the key bindings in the calendar window, add entries to this                                          ",{}],["|",{"inverse":true}],[" 28 ",{"fg":3,"bold":true}],["  .viminfo        ",{}]],"28":[["~                   ",{"fg":4,"bold":true}],["|",{"inverse":true}],[" 65 ",{"fg":3,"bold":true}],["dictionary.   Possible keys, the action bound to the keycode given in the                                       ",{}],["|",{"inverse":true}],[" 29 ",{"fg":3,"bold":true}],["  .vimrc          ",{}]],"29":[["~                   ",{"fg":4,"bold":true}],["|",{"inverse":true}],[" 66 ",{"fg":3,"bold":true}],["respective value for this key and the default binding are listed below.                                         ",{}],["|",{"inverse":true}],[" 30 ",{"fg":3,"bold":true}],["  .xsession-errors",{}]],"30":[["~                   ",{"fg":4,"bold":true}],["|",{"inverse":true}],[" 67 ",{"fg":3,"bold":true}],["'close'                     Closes calendar window.             'q'                                             ",{}],["|",{"inverse":true}],[" 31 ",{"fg":3,"bold":true}],["  anaconda-ks.cfg ",{}]],"31":[["~                   ",{"fg":4,"bold":true}],["|",{"inverse":true}],[" 68 ",{"fg":3,"bold":true}],["'do_action'                 Executes |calendar_action|.           '<CR>'                                        ",{}],["|",{"inverse":true}],[" 32 ",{"fg":3,"bold":true}],["  initial-setup-ks",{}]],"32":[["~                   ",{"fg":4,"bold":true}],["|",{"inverse":true}],[" 69 ",{"fg":3,"bold":true}],["'goto_today'                Executes |calendar_today|.            't'                                           ",{}],["|",{"inverse":true}],[" 33 ",{"fg":3,"bold":true}],["  test.c          ",{}]],"33":[["~                   ",{"fg":4,"bold":true}],["|",{"inverse":true}],[" 70 ",{"fg":3,"bold":true}],["'show_help'                 Displays a short help message.      '?'                                             ",{}],["|",{"inverse":true}],[" 34 ",{"fg":3,"bold":true}],["  test.cpp        ",{}]],"34":[["~                   ",{"fg":4,"bold":true}],["|",{"inverse":true}],[" 71 ",{"fg":3,"bold":true}],["'redisplay'                 Redraws calendar window.            'r'                                             ",{}],["|",{"inverse":true}],[" 35 ",{"fg":3,"bold":true}],["  .test.cpp.swp   ",{}]],"35":[["~                   ",{"fg":4,"bold":true}],["|",{"inverse":true}],[" 72 ",{"fg":3,"bold":true}],["'goto_next_month'           Jumps to the next month.            '<Right>'                                       ",{}],["|",{"inverse":true}],["~                     ",{"fg":4,"bold":true}]],"36":[["~                   ",{"fg":4,"bold":true}],["|",{"inverse":true}],[" 73 ",{"fg":3,"bold":true}],["'goto_prev_month'           Jumps to the previous month.        '<Left>'                                        ",{}],["|",{"inverse":true}],["~                     ",{"fg":4,"bold":true}]],"37":[["~                   ",{"fg":4,"bold":true}],["|",{"inverse":true}],[" 74 ",{"fg":3,"bold":true}],["'goto_next_year'            Jumps to the next year.             '<Up>'                                          ",{}],["|",{"inverse":true}],["~                     ",{"fg":4,"bold":true}]],"38":[["~                   ",{"fg":4,"bold":true}],["|",{"inverse":true}],[" 75 ",{"fg":3,"bold":true}],["'goto_prev_year'            Jumps to the previous year.         '<Down>'                                        ",{}],["|",{"inverse":true}],["~                     ",{"fg":4,"bold":true}]],"39":[["~                   ",{"fg":4,"bold":true}],["|",{"inverse":true}],[" 76 ",{"fg":3,"bold":true}],["An example in your .vimrc might look like this: >                                                               ",{}],["|",{"inverse":true}],["~                     ",{"fg":4,"bold":true}]],"40":[["~                   ",{"fg":4,"bold":true}],["|",{"inverse":true}],[" 77 ",{"fg":3,"bold":true}],["  let g:calendar_keys = { 'goto_next_month': '<C-Right>', 'goto_prev_month': '<C-Left>'}                        ",{}],["|",{"inverse":true}],["~                     ",{"fg":4,"bold":true}]],"41":[["~                   ",{"fg":4,"bold":true}],["|",{"inverse":true}],[" 78 ",{"fg":3,"bold":true}],["<                                                                                                               ",{}],["|",{"inverse":true}],["~                     ",{"fg":4,"bold":true}]],"42":[["~                   ",{"fg":4,"bold":true}],["|",{"inverse":true}],[" 79 ",{"fg":3,"bold":true}],["                                                                                                                ",{}],["|",{"inverse":true}],["~                     ",{"fg":4,"bold":true}]],"43":[["~                   ",{"fg":4,"bold":true}],["|",{"inverse":true}],[" 80 ",{"fg":3,"bold":true}],["                                                *g:calendar_mark*                                               ",{}],["|",{"inverse":true}],["~                     ",{"fg":4,"bold":true}]],"44":[["~                   ",{"fg":4,"bold":true}],["|",{"inverse":true}],[" 81 ",{"fg":3,"bold":true}],["Place a '*' or '+' mark after the day.  Acceptab",{"underline":true}],["*g:calendar_mark*                                               ",{}],["|",{"inverse":true}],["~                     ",{"fg":4,"bold":true}]]},"cursor":{"x":73,"y":44,"visible":false}}],[0.021214,{"lines":{"44":[["~                   ",{"fg":4,"bold":true}],["|",{"inverse":true}],[" 81 ",{"fg":3,"bold":true}],["Place a '*' or '+' mark after the day.  Acceptable values are 'left',                                           ",{}],["|",{"inverse":true}],["~                     ",{"fg":4,"bold":true}]],"45":[["~                   ",{"fg":4,"bold":true}],["|",{"inverse":true}],[" 82 ",{"fg":3,"bold":true}],["'left-fit', and 'right': >                                                                                      ",{"underline":true}],["|",{"inverse":true}],["~                     ",{"fg":4,"bold":true}]],"46":[["[Name] test.cpp      ",{"inverse":true}],[" NORMAL ",{"bold":true}],[" ",{}],["calendar.txt ",{"bold":true}],["                                                        unix │ utf-8 │ text │  37% ",{}],[" LN  82",{"bold":true}],[":1  ",{}],[" ",{"bold":true,"inverse":true}],[" ~/…/calendar-vim/doc>",{"bold":true}]]},"cursor":{"x":25,"y":45,"visible":true}}],[0.004152,{"lines":{"0":[["\" Press <F1> for hel",{"fg":6,"bold":true}],["|",{"inverse":true}],[" 38 ",{"fg":3,"bold":true}],["                          omitted, the calendar will show the given month in                                    ",{}],["|",{"inverse":true}],["  1 ",{"fg":3,"bold":true}],["\" Press ? for help",{"fg":5,"bold":true}]],"1":[["                    ",{}],["|",{"inverse":true}],[" 39 ",{"fg":3,"bold":true}],["                          the current year.  When both [year] and [month] are                                   ",{}],["|",{"inverse":true}],["  2 ",{"fg":3,"bold":true}],["                  ",{}]],"2":[["▼",{"fg":3,"bold":true}],[" First",{"fg":5,"bold":true}],[" : ",{}],["struct",{"fg":2,"bold":true}],["    ",{}],["|",{"inverse":true}],[" 40 ",{"fg":3,"bold":true}],["                          omitted, the calendar will show the current month.                                    ",{}],["|",{"inverse":true}],["  3 ",{"fg":3,"bold":true}],[".. (up a dir)",{"fg":6,"bold":true}],["     ",{}]],"3":[["    [prototypes]",{"fg":6,"bold":true}],["    ",{}],["|",{"inverse":true}],[" 41 ",{"fg":3,"bold":true}],["                                                                                                                ",{}],["|",{"inverse":true}],["  4 /root/",{"fg":3,"bold":true}],["            ",{}]],"4":[["   ",{}],["+",{"fg":2,"bold":true}],["FirstRun(void)  ",{}],["|",{"inverse":true}],[" 42 ",{"fg":3,"bold":true}],["MAPPINGS                                        *calendar-mappings*                                             ",{}],["|",{"inverse":true}],["  5 ",{"fg":3,"bold":true}],["▸ .asciinema/",{"fg":6,"bold":true}],["     ",{}]],"5":[["   ",{}],["+",{"fg":2,"bold":true}],["FirstRun2(void) ",{}],["|",{"inverse":true}],[" 43 ",{"fg":3,"bold":true}],["                                                                                                                ",{}],["|",{"inverse":true}],["  6 ",{"fg":3,"bold":true}],["▸ .cache/",{"fg":6,"bold":true}],["         ",{}]],"6":[["                    ",{}],["|",{"inverse":true}],[" 44 ",{"fg":3,"bold":true}],["calendar.vim makes the following normal mode mappings available:                                                ",{}],["|",{"inverse":true}],["  7 ",{"fg":3,"bold":true}],["▸ .config/",{"fg":6,"bold":true}],["        ",{}]],"7":[["▼",{"fg":3,"bold":true}],[" Last",{"fg":5,"bold":true}],[" : ",{}],["struct",{"fg":2,"bold":true}],["     ",{}],["|",{"inverse":true}],[" 45 ",{"fg":3,"bold":true}],["                                                                                                                ",{}],["|",{"inverse":true}],["  8 ",{"fg":3,"bold":true}],["▸ .dbus/",{"fg":6,"bold":true}],["          ",{}]],"8":[["    [functions]",{"fg":6,"bold":true}],["     ",{}],["|",{"inverse":true}],[" 46 ",{"fg":3,"bold":true}],["                                                *calendar-cal*                                                  ",{}],["|",{"inverse":true}],["  9 ",{"fg":3,"bold":true}],["▸ .gnupg/",{"fg":6,"bold":true}],["         ",{}]],"9":[["   ",{}],["+",{"fg":2,"bold":true}],["FirstRun(void)  ",{}],["|",{"inverse":true}],[" 47 ",{"fg":3,"bold":true}],["<LocalLeader>cal          Brings up the calendar in a vertical split.                                           ",{}],["|",{"inverse":true}],[" 10 ",{"fg":3,"bold":true}],["▸ .kde/",{"fg":6,"bold":true}],["           ",{}]],"10":[["   ",{}],["+",{"fg":2,"bold":true}],["FirstRun2(void) ",{}],["|",{"inverse":true}],[" 48 ",{"fg":3,"bold":true}],["                          Equivalent to calling |:Calendar|.                                                    ",{}],["|",{"inverse":true}],[" 11 ",{"fg":3,"bold":true}],["▸ .local/",{"fg":6,"bold":true}],["         ",{}]],"11":[["   ",{}],["+",{"fg":2,"bold":true}],["~Last()         ",{}],["|",{"inverse":true}],[" 49 ",{"fg":3,"bold":true}],["                                                                                                                ",{}],["|",{"inverse":true}],[" 12 ",{"fg":3,"bold":true}],["▸ .pki/",{"fg":6,"bold":true}],["           ",{}]],"12":[["   ",{}],["+",{"fg":2,"bold":true}],["SecondRun(void) ",{}],["|",{"inverse":true}],[" 50 ",{"fg":3,"bold":true}],["                                                *calendar-caL*                                                  ",{}],["|",{"inverse":true}],[" 13 ",{"fg":3,"bold":true}],["▸ .ssh/",{"fg":6,"bold":true}],["           ",{}]],"13":[["   ",{}],["+",{"fg":2,"bold":true}],["SecondRun2(void)",{}],["|",{"inverse":true}],[" 51 ",{"fg":3,"bold":true}],["<LocalLeader>",{}],["caL ",{"bg":1}],["        ",{}],[" Bri",{"bg":1}],["ngs up the calendar in a horizontal split.                                         ",{}],["|",{"inverse":true}],[" 14 ",{"fg":3,"bold":true}],["▸ .vim/",{"fg":6,"bold":true}],["           ",{}]],"14":[["                    ",{}],["|",{"inverse":true}],[" 52 ",{"fg":3,"bold":true}],["                          Equivalent to calling |:CalendarH|.                                                   ",{}],["|",{"inverse":true}],[" 15 ",{"fg":3,"bold":true}],["▸ diary/",{"fg":6,"bold":true}],["          ",{}]],"15":[["▼",{"fg":3,"bold":true}],[" Second",{"fg":5,"bold":true}],[" : ",{}],["struct",{"fg":2,"bold":true}],["   ",{}],["|",{"inverse":true}],[" 53 ",{"fg":3,"bold":true}],["                                                                                                                ",{}],["|",{"inverse":true}],[" 16 ",{"fg":3,"bold":true}],["▸ temp/",{"fg":6,"bold":true}],["           ",{}]],"16":[["    [prototypes]",{"fg":6,"bold":true}],["    ",{}],["|",{"inverse":true}],[" 54 ",{"fg":3,"bold":true}],["SETTINGS                                        *calendar-settings*                                             ",{}],["|",{"inverse":true}],[" 17 ",{"fg":3,"bold":true}],["  .bash_history   ",{}]],"17":[["   ",{}],["+",{"fg":2,"bold":true}],["SecondRun(void) ",{}],["|",{"inverse":true}],[" 55 ",{"fg":3,"bold":true}],["                                                                                                                ",{}],["|",{"inverse":true}],[" 18 ",{"fg":3,"bold":true}],["  .bash_logout    ",{}]],"18":[["   ",{}],["+",{"fg":2,"bold":true}],["SecondRun2(void)",{}],["|",{"inverse":true}],[" 56 ",{"fg":3,"bold":true}],["calendar.vim can be con",{}],["figured using the following sett",{"bg":1}],["ings:                                                    ",{}],["|",{"inverse":true}],[" 19 ",{"fg":3,"bold":true}],["  .bash_profile   ",{"underline":true}]],"19":[["                    ",{}],["|",{"inverse":true}],[" 57 ",{"fg":3,"bold":true}],["                                                                                                                ",{}],["|",{"inverse":true}],[" 20 ",{"fg":3,"bold":true}],["  .bashrc         ",{}]],"20":[["▼",{"fg":3,"bold":true}],[" ",{}],["functions",{"fg":6,"bold":true}],["         ",{}],["|",{"inverse":true}],[" 58 ",{"fg":3,"bold":true}],["                                                *g:calendar_focus_today*                                        ",{}],["|",{"inverse":true}],[" 21 ",{"fg":3,"bold":true}],["  .cshrc          ",{}]],"21":[["    main(int argc, c",{"underline":true}],["|",{"inverse":true}],[" 59 ",{"fg":3,"bold":true}],["Keeps focus when moving to next or previous calendar: >                                                         ",{}],["|",{"inverse":true}],[" 22 ",{"fg":3,"bold":true}],["  .dmrc           ",{}]],"22":[["~                   ",{"fg":4,"bold":true}],["|",{"inverse":true}],[" 60 ",{"fg":3,"bold":true}],["  let g:calendar_focus_today = 1                                                                                ",{}],["|",{"inverse":true}],[" 23 ",{"fg":3,"bold":true}],["  .esd_auth       ",{}]],"23":[["~                   ",{"fg":4,"bold":true}],["|",{"inverse":true}],[" 61 ",{"fg":3,"bold":true}],["<                                                                                                               ",{}],["|",{"inverse":true}],[" 24 ",{"fg":3,"bold":true}],["  .gtkrc-2.0      ",{}]],"24":[["~                   ",{"fg":4,"bold":true}],["|",{"inverse":true}],[" 62 ",{"fg":3,"bold":true}],["                                                                                                                ",{}],["|",{"inverse":true}],[" 25 ",{"fg":3,"bold":true}],["  .gtkrc-2.0-kde4 ",{}]],"25":[["~                   ",{"fg":4,"bold":true}],["|",{"inverse":true}],[" 63 ",{"fg":3,"bold":true}],["                                                *g:calendar_keys*                                               ",{}],["|",{"inverse":true}],[" 26 ",{"fg":3,"bold":true}],["  .lesshst        ",{}]],"26":[["~                   ",{"fg":4,"bold":true}],["|",{"inverse":true}],[" 64 ",{"fg":3,"bold":true}],["To change the key bindings in the calendar window, add entries to this                                          ",{}],["|",{"inverse":true}],[" 27 ",{"fg":3,"bold":true}],["  .tcshrc         ",{}]],"27":[["~                   ",{"fg":4,"bold":true}],["|",{"inverse":true}],[" 65 ",{"fg":3,"bold":true}],["dictionary.   Possible keys, the action bound to the keycode given in the                                       ",{}],["|",{"inverse":true}],[" 28 ",{"fg":3,"bold":true}],["  .viminfo        ",{}]],"28":[["~                   ",{"fg":4,"bold":true}],["|",{"inverse":true}],[" 66 ",{"fg":3,"bold":true}],["respective value for this key and the default binding are listed below.                                         ",{}],["|",{"inverse":true}],[" 29 ",{"fg":3,"bold":true}],["  .vimrc          ",{}]],"29":[["~                   ",{"fg":4,"bold":true}],["|",{"inverse":true}],[" 67 ",{"fg":3,"bold":true}],["'close'                     Closes calendar window.             'q'                                             ",{}],["|",{"inverse":true}],[" 30 ",{"fg":3,"bold":true}],["  .xsession-errors",{}]],"30":[["~                   ",{"fg":4,"bold":true}],["|",{"inverse":true}],[" 68 ",{"fg":3,"bold":true}],["'do_action'                 Executes |calendar_action|.           '<CR>'                                        ",{}],["|",{"inverse":true}],[" 31 ",{"fg":3,"bold":true}],["  anaconda-ks.cfg ",{}]],"31":[["~                   ",{"fg":4,"bold":true}],["|",{"inverse":true}],[" 69 ",{"fg":3,"bold":true}],["'goto_today'                Executes |calendar_today|.            't'                                           ",{}],["|",{"inverse":true}],[" 32 ",{"fg":3,"bold":true}],["  initial-setup-ks",{}]],"32":[["~                   ",{"fg":4,"bold":true}],["|",{"inverse":true}],[" 70 ",{"fg":3,"bold":true}],["'show_help'                 Displays a short help message.      '?'                                             ",{}],["|",{"inverse":true}],[" 33 ",{"fg":3,"bold":true}],["  test.c          ",{}]],"33":[["~                   ",{"fg":4,"bold":true}],["|",{"inverse":true}],[" 71 ",{"fg":3,"bold":true}],["'redisplay'                 Redraws calendar window.            'r'                                             ",{}],["|",{"inverse":true}],[" 34 ",{"fg":3,"bold":true}],["  test.cpp        ",{}]],"34":[["~                   ",{"fg":4,"bold":true}],["|",{"inverse":true}],[" 72 ",{"fg":3,"bold":true}],["'goto_next_month'           Jumps to the next month.            '<Right>'                                       ",{}],["|",{"inverse":true}],[" 35 ",{"fg":3,"bold":true}],["  .test.cpp.swp   ",{}]],"35":[["~                   ",{"fg":4,"bold":true}],["|",{"inverse":true}],[" 73 ",{"fg":3,"bold":true}],["'goto_prev_month'           Jumps to the previous month.        '<Left>'                                        ",{}],["|",{"inverse":true}],["~                     ",{"fg":4,"bold":true}]],"36":[["~                   ",{"fg":4,"bold":true}],["|",{"inverse":true}],[" 74 ",{"fg":3,"bold":true}],["'goto_next_year'            Jumps to the next year.             '<Up>'                                          ",{}],["|",{"inverse":true}],["~                     ",{"fg":4,"bold":true}]],"37":[["~                   ",{"fg":4,"bold":true}],["|",{"inverse":true}],[" 75 ",{"fg":3,"bold":true}],["'goto_prev_year'            Jumps to the previous year.         '<Down>'                                        ",{}],["|",{"inverse":true}],["~                     ",{"fg":4,"bold":true}]],"38":[["~                   ",{"fg":4,"bold":true}],["|",{"inverse":true}],[" 76 ",{"fg":3,"bold":true}],["An example in your .vimrc might look like this: >                                                               ",{}],["|",{"inverse":true}],["~                     ",{"fg":4,"bold":true}]],"39":[["~                   ",{"fg":4,"bold":true}],["|",{"inverse":true}],[" 77 ",{"fg":3,"bold":true}],["  let g:calendar_keys = { 'goto_next_month': '<C-Right>', 'goto_prev_month': '<C-Left>'}                        ",{}],["|",{"inverse":true}],["~                     ",{"fg":4,"bold":true}]],"40":[["~                   ",{"fg":4,"bold":true}],["|",{"inverse":true}],[" 78 ",{"fg":3,"bold":true}],["<                                                                                                               ",{}],["|",{"inverse":true}],["~                     ",{"fg":4,"bold":true}]],"41":[["~                   ",{"fg":4,"bold":true}],["|",{"inverse":true}],[" 79 ",{"fg":3,"bold":true}],["                                                                                                                ",{}],["|",{"inverse":true}],["~                     ",{"fg":4,"bold":true}]],"42":[["~                   ",{"fg":4,"bold":true}],["|",{"inverse":true}],[" 80 ",{"fg":3,"bold":true}],["                                                *g:calendar_mark*                                               ",{}],["|",{"inverse":true}],["~                     ",{"fg":4,"bold":true}]],"43":[["~                   ",{"fg":4,"bold":true}],["|",{"inverse":true}],[" 81 ",{"fg":3,"bold":true}],["Place a '*' or '+' mark after the day.  Acceptable values are 'left',                                           ",{}],["|",{"inverse":true}],["~                     ",{"fg":4,"bold":true}]],"44":[["~                   ",{"fg":4,"bold":true}],["|",{"inverse":true}],[" 82 ",{"fg":3,"bold":true}],["'left-fit', and 'right': >                      ",{"underline":true}],["le values are 'left',                                           ",{}],["|",{"inverse":true}],["~                     ",{"fg":4,"bold":true}]]},"cursor":{"x":73,"y":44,"visible":false}}],[0.040934,{"lines":{"44":[["~                   ",{"fg":4,"bold":true}],["|",{"inverse":true}],[" 82 ",{"fg":3,"bold":true}],["'left-fit', and 'right': >                                                                                      ",{}],["|",{"inverse":true}],["~                     ",{"fg":4,"bold":true}]],"45":[["~                   ",{"fg":4,"bold":true}],["|",{"inverse":true}],[" 83 ",{"fg":3,"bold":true}],["  let g:calendar_mark = 'right'                                                                                 ",{"underline":true}],["|",{"inverse":true}],["~                     ",{"fg":4,"bold":true}]],"46":[["[Name] test.cpp      ",{"inverse":true}],[" NORMAL ",{"bold":true}],[" ",{}],["calendar.txt ",{"bold":true}],["                                                        unix │ utf-8 │ text │  37% ",{}],[" LN  83",{"bold":true}],[":1  ",{}],[" ",{"bold":true,"inverse":true}],[" ~/…/calendar-vim/doc>",{"bold":true}]]},"cursor":{"x":25,"y":45,"visible":true}}],[0.005820000000000001,{"lines":{"0":[["\" Press <F1> for hel",{"fg":6,"bold":true}],["|",{"inverse":true}],[" 39 ",{"fg":3,"bold":true}],["                          the current year.  When both [year] and [month] are                                   ",{}],["|",{"inverse":true}],["  1 ",{"fg":3,"bold":true}],["\" Press ? for help",{"fg":5,"bold":true}]],"1":[["                    ",{}],["|",{"inverse":true}],[" 40 ",{"fg":3,"bold":true}],["                          omitted, the calendar will show the current month.                                    ",{}],["|",{"inverse":true}],["  2 ",{"fg":3,"bold":true}],["                  ",{}]],"2":[["▼",{"fg":3,"bold":true}],[" First",{"fg":5,"bold":true}],[" : ",{}],["struct",{"fg":2,"bold":true}],["    ",{}],["|",{"inverse":true}],[" 41 ",{"fg":3,"bold":true}],["                                                                                                                ",{}],["|",{"inverse":true}],["  3 ",{"fg":3,"bold":true}],[".. (up a dir)",{"fg":6,"bold":true}],["     ",{}]],"3":[["    [prototypes]",{"fg":6,"bold":true}],["    ",{}],["|",{"inverse":true}],[" 42 ",{"fg":3,"bold":true}],["MAPPINGS                                        *calendar-mappings*                                             ",{}],["|",{"inverse":true}],["  4 /root/",{"fg":3,"bold":true}],["            ",{}]],"4":[["   ",{}],["+",{"fg":2,"bold":true}],["FirstRun(void)  ",{}],["|",{"inverse":true}],[" 43 ",{"fg":3,"bold":true}],["                                                                                                                ",{}],["|",{"inverse":true}],["  5 ",{"fg":3,"bold":true}],["▸ .asciinema/",{"fg":6,"bold":true}],["     ",{}]],"5":[["   ",{}],["+",{"fg":2,"bold":true}],["FirstRun2(void) ",{}],["|",{"inverse":true}],[" 44 ",{"fg":3,"bold":true}],["calendar.vim makes the following normal mode mappings available:                                                ",{}],["|",{"inverse":true}],["  6 ",{"fg":3,"bold":true}],["▸ .cache/",{"fg":6,"bold":true}],["         ",{}]],"6":[["                    ",{}],["|",{"inverse":true}],[" 45 ",{"fg":3,"bold":true}],["                                                                                                                ",{}],["|",{"inverse":true}],["  7 ",{"fg":3,"bold":true}],["▸ .config/",{"fg":6,"bold":true}],["        ",{}]],"7":[["▼",{"fg":3,"bold":true}],[" Last",{"fg":5,"bold":true}],[" : ",{}],["struct",{"fg":2,"bold":true}],["     ",{}],["|",{"inverse":true}],[" 46 ",{"fg":3,"bold":true}],["                                                *calendar-cal*                                                  ",{}],["|",{"inverse":true}],["  8 ",{"fg":3,"bold":true}],["▸ .dbus/",{"fg":6,"bold":true}],["          ",{}]],"8":[["    [functions]",{"fg":6,"bold":true}],["     ",{}],["|",{"inverse":true}],[" 47 ",{"fg":3,"bold":true}],["<LocalLeader>cal          Brings up the calendar in a vertical split.                                           ",{}],["|",{"inverse":true}],["  9 ",{"fg":3,"bold":true}],["▸ .gnupg/",{"fg":6,"bold":true}],["         ",{}]],"9":[["   ",{}],["+",{"fg":2,"bold":true}],["FirstRun(void)  ",{}],["|",{"inverse":true}],[" 48 ",{"fg":3,"bold":true}],["                          Equivalent to calling |:Calendar|.                                                    ",{}],["|",{"inverse":true}],[" 10 ",{"fg":3,"bold":true}],["▸ .kde/",{"fg":6,"bold":true}],["           ",{}]],"10":[["   ",{}],["+",{"fg":2,"bold":true}],["FirstRun2(void) ",{}],["|",{"inverse":true}],[" 49 ",{"fg":3,"bold":true}],["                                                                                                                ",{}],["|",{"inverse":true}],[" 11 ",{"fg":3,"bold":true}],["▸ .local/",{"fg":6,"bold":true}],["         ",{}]],"11":[["   ",{}],["+",{"fg":2,"bold":true}],["~Last()         ",{}],["|",{"inverse":true}],[" 50 ",{"fg":3,"bold":true}],["                                                *calendar-caL*                                                  ",{}],["|",{"inverse":true}],[" 12 ",{"fg":3,"bold":true}],["▸ .pki/",{"fg":6,"bold":true}],["           ",{}]],"12":[["   ",{}],["+",{"fg":2,"bold":true}],["SecondRun(void) ",{}],["|",{"inverse":true}],[" 51 ",{"fg":3,"bold":true}],["<LocalLeader>",{}],["caL ",{"bg":1}],["        ",{}],[" Bri",{"bg":1}],["ngs up the calendar in a horizontal split.                                         ",{}],["|",{"inverse":true}],[" 13 ",{"fg":3,"bold":true}],["▸ .ssh/",{"fg":6,"bold":true}],["           ",{}]],"13":[["   ",{}],["+",{"fg":2,"bold":true}],["SecondRun2(void)",{}],["|",{"inverse":true}],[" 52 ",{"fg":3,"bold":true}],["                          Equivalent to calling |:CalendarH|.                                                   ",{}],["|",{"inverse":true}],[" 14 ",{"fg":3,"bold":true}],["▸ .vim/",{"fg":6,"bold":true}],["           ",{}]],"14":[["                    ",{}],["|",{"inverse":true}],[" 53 ",{"fg":3,"bold":true}],["                                                                                                                ",{}],["|",{"inverse":true}],[" 15 ",{"fg":3,"bold":true}],["▸ diary/",{"fg":6,"bold":true}],["          ",{}]],"15":[["▼",{"fg":3,"bold":true}],[" Second",{"fg":5,"bold":true}],[" : ",{}],["struct",{"fg":2,"bold":true}],["   ",{}],["|",{"inverse":true}],[" 54 ",{"fg":3,"bold":true}],["SETTINGS                                        *calendar-settings*                                             ",{}],["|",{"inverse":true}],[" 16 ",{"fg":3,"bold":true}],["▸ temp/",{"fg":6,"bold":true}],["           ",{}]],"16":[["    [prototypes]",{"fg":6,"bold":true}],["    ",{}],["|",{"inverse":true}],[" 55 ",{"fg":3,"bold":true}],["                                                                                                                ",{}],["|",{"inverse":true}],[" 17 ",{"fg":3,"bold":true}],["  .bash_history   ",{}]],"17":[["   ",{}],["+",{"fg":2,"bold":true}],["SecondRun(void) ",{}],["|",{"inverse":true}],[" 56 ",{"fg":3,"bold":true}],["calendar.vim can be con",{}],["figured using the following sett",{"bg":1}],["ings:                                                    ",{}],["|",{"inverse":true}],[" 18 ",{"fg":3,"bold":true}],["  .bash_logout    ",{}]],"18":[["   ",{}],["+",{"fg":2,"bold":true}],["SecondRun2(void)",{}],["|",{"inverse":true}],[" 57 ",{"fg":3,"bold":true}],["                                                                                                                ",{}],["|",{"inverse":true}],[" 19 ",{"fg":3,"bold":true}],["  .bash_profile   ",{"underline":true}]],"19":[["                    ",{}],["|",{"inverse":true}],[" 58 ",{"fg":3,"bold":true}],["                                                *g:calendar_focus_today*                                        ",{}],["|",{"inverse":true}],[" 20 ",{"fg":3,"bold":true}],["  .bashrc         ",{}]],"20":[["▼",{"fg":3,"bold":true}],[" ",{}],["functions",{"fg":6,"bold":true}],["         ",{}],["|",{"inverse":true}],[" 59 ",{"fg":3,"bold":true}],["Keeps focus when moving to next or previous calendar: >                                                         ",{}],["|",{"inverse":true}],[" 21 ",{"fg":3,"bold":true}],["  .cshrc          ",{}]],"21":[["    main(int argc, c",{"underline":true}],["|",{"inverse":true}],[" 60 ",{"fg":3,"bold":true}],["  let g:calendar_focus_today = 1                                                                                ",{}],["|",{"inverse":true}],[" 22 ",{"fg":3,"bold":true}],["  .dmrc           ",{}]],"22":[["~                   ",{"fg":4,"bold":true}],["|",{"inverse":true}],[" 61 ",{"fg":3,"bold":true}],["<                                                                                                               ",{}],["|",{"inverse":true}],[" 23 ",{"fg":3,"bold":true}],["  .esd_auth       ",{}]],"23":[["~                   ",{"fg":4,"bold":true}],["|",{"inverse":true}],[" 62 ",{"fg":3,"bold":true}],["                                                                                                                ",{}],["|",{"inverse":true}],[" 24 ",{"fg":3,"bold":true}],["  .gtkrc-2.0      ",{}]],"24":[["~                   ",{"fg":4,"bold":true}],["|",{"inverse":true}],[" 63 ",{"fg":3,"bold":true}],["                                                *g:calendar_keys*                                               ",{}],["|",{"inverse":true}],[" 25 ",{"fg":3,"bold":true}],["  .gtkrc-2.0-kde4 ",{}]],"25":[["~                   ",{"fg":4,"bold":true}],["|",{"inverse":true}],[" 64 ",{"fg":3,"bold":true}],["To change the key bindings in the calendar window, add entries to this                                          ",{}],["|",{"inverse":true}],[" 26 ",{"fg":3,"bold":true}],["  .lesshst        ",{}]],"26":[["~                   ",{"fg":4,"bold":true}],["|",{"inverse":true}],[" 65 ",{"fg":3,"bold":true}],["dictionary.   Possible keys, the action bound to the keycode given in the                                       ",{}],["|",{"inverse":true}],[" 27 ",{"fg":3,"bold":true}],["  .tcshrc         ",{}]],"27":[["~                   ",{"fg":4,"bold":true}],["|",{"inverse":true}],[" 66 ",{"fg":3,"bold":true}],["respective value for this key and the default binding are listed below.                                         ",{}],["|",{"inverse":true}],[" 28 ",{"fg":3,"bold":true}],["  .viminfo        ",{}]],"28":[["~                   ",{"fg":4,"bold":true}],["|",{"inverse":true}],[" 67 ",{"fg":3,"bold":true}],["'close'                     Closes calendar window.             'q'                                             ",{}],["|",{"inverse":true}],[" 29 ",{"fg":3,"bold":true}],["  .vimrc          ",{}]],"29":[["~                   ",{"fg":4,"bold":true}],["|",{"inverse":true}],[" 68 ",{"fg":3,"bold":true}],["'do_action'                 Executes |calendar_action|.           '<CR>'                                        ",{}],["|",{"inverse":true}],[" 30 ",{"fg":3,"bold":true}],["  .xsession-errors",{}]],"30":[["~                   ",{"fg":4,"bold":true}],["|",{"inverse":true}],[" 69 ",{"fg":3,"bold":true}],["'goto_today'                Executes |calendar_today|.            't'                                           ",{}],["|",{"inverse":true}],[" 31 ",{"fg":3,"bold":true}],["  anaconda-ks.cfg ",{}]],"31":[["~                   ",{"fg":4,"bold":true}],["|",{"inverse":true}],[" 70 ",{"fg":3,"bold":true}],["'show_help'                 Displays a short help message.      '?'                                             ",{}],["|",{"inverse":true}],[" 32 ",{"fg":3,"bold":true}],["  initial-setup-ks",{}]],"32":[["~                   ",{"fg":4,"bold":true}],["|",{"inverse":true}],[" 71 ",{"fg":3,"bold":true}],["'redisplay'                 Redraws calendar window.            'r'                                             ",{}],["|",{"inverse":true}],[" 33 ",{"fg":3,"bold":true}],["  test.c          ",{}]],"33":[["~                   ",{"fg":4,"bold":true}],["|",{"inverse":true}],[" 72 ",{"fg":3,"bold":true}],["'goto_next_month'           Jumps to the next month.            '<Right>'                                       ",{}],["|",{"inverse":true}],[" 34 ",{"fg":3,"bold":true}],["  test.cpp        ",{}]],"34":[["~                   ",{"fg":4,"bold":true}],["|",{"inverse":true}],[" 73 ",{"fg":3,"bold":true}],["'goto_prev_month'           Jumps to the previous month.        '<Left>'                                        ",{}],["|",{"inverse":true}],[" 35 ",{"fg":3,"bold":true}],["  .test.cpp.swp   ",{}]],"35":[["~                   ",{"fg":4,"bold":true}],["|",{"inverse":true}],[" 74 ",{"fg":3,"bold":true}],["'goto_next_year'            Jumps to the next year.             '<Up>'                                          ",{}],["|",{"inverse":true}],["~                     ",{"fg":4,"bold":true}]],"36":[["~                   ",{"fg":4,"bold":true}],["|",{"inverse":true}],[" 75 ",{"fg":3,"bold":true}],["'goto_prev_year'            Jumps to the previous year.         '<Down>'                                        ",{}],["|",{"inverse":true}],["~                     ",{"fg":4,"bold":true}]],"37":[["~                   ",{"fg":4,"bold":true}],["|",{"inverse":true}],[" 76 ",{"fg":3,"bold":true}],["An example in your .vimrc might look like this: >                                                               ",{}],["|",{"inverse":true}],["~                     ",{"fg":4,"bold":true}]],"38":[["~                   ",{"fg":4,"bold":true}],["|",{"inverse":true}],[" 77 ",{"fg":3,"bold":true}],["  let g:calendar_keys = { 'goto_next_month': '<C-Right>', 'goto_prev_month': '<C-Left>'}                        ",{}],["|",{"inverse":true}],["~                     ",{"fg":4,"bold":true}]],"39":[["~                   ",{"fg":4,"bold":true}],["|",{"inverse":true}],[" 78 ",{"fg":3,"bold":true}],["<                                                                                                               ",{}],["|",{"inverse":true}],["~                     ",{"fg":4,"bold":true}]],"40":[["~                   ",{"fg":4,"bold":true}],["|",{"inverse":true}],[" 79 ",{"fg":3,"bold":true}],["                                                                                                                ",{}],["|",{"inverse":true}],["~                     ",{"fg":4,"bold":true}]],"41":[["~                   ",{"fg":4,"bold":true}],["|",{"inverse":true}],[" 80 ",{"fg":3,"bold":true}],["                                                *g:calendar_mark*                                               ",{}],["|",{"inverse":true}],["~                     ",{"fg":4,"bold":true}]],"42":[["~                   ",{"fg":4,"bold":true}],["|",{"inverse":true}],[" 81 ",{"fg":3,"bold":true}],["Place a '*' or '+' mark after the day.  Acceptable values are 'left',                                           ",{}],["|",{"inverse":true}],["~                     ",{"fg":4,"bold":true}]],"43":[["~                   ",{"fg":4,"bold":true}],["|",{"inverse":true}],[" 82 ",{"fg":3,"bold":true}],["'left-fit', and 'right': >                                                                                      ",{}],["|",{"inverse":true}],["~                     ",{"fg":4,"bold":true}]],"44":[["~                   ",{"fg":4,"bold":true}],["|",{"inverse":true}],[" 83 ",{"fg":3,"bold":true}],["  let g:calendar_mark = 'right'                 ",{"underline":true}],["                                                                ",{}],["|",{"inverse":true}],["~                     ",{"fg":4,"bold":true}]]},"cursor":{"x":73,"y":44,"visible":false}}],[0.019764,{"lines":{"44":[["~                   ",{"fg":4,"bold":true}],["|",{"inverse":true}],[" 83 ",{"fg":3,"bold":true}],["  let g:calendar_mark = 'right'                                                                                 ",{}],["|",{"inverse":true}],["~                     ",{"fg":4,"bold":true}]],"45":[["~                   ",{"fg":4,"bold":true}],["|",{"inverse":true}],[" 84 ",{"fg":3,"bold":true}],["<                                                                                                               ",{"underline":true}],["|",{"inverse":true}],["~                     ",{"fg":4,"bold":true}]],"46":[["[Name] test.cpp      ",{"inverse":true}],[" NORMAL ",{"bold":true}],[" ",{}],["calendar.txt ",{"bold":true}],["                                                        unix │ utf-8 │ text │  38% ",{}],[" LN  84",{"bold":true}],[":1  ",{}],[" ",{"bold":true,"inverse":true}],[" ~/…/calendar-vim/doc>",{"bold":true}]]},"cursor":{"x":25,"y":45,"visible":true}}],[0.004425,{"lines":{"0":[["\" Press <F1> for hel",{"fg":6,"bold":true}],["|",{"inverse":true}],[" 40 ",{"fg":3,"bold":true}],["                          omitted, the calendar will show the current month.                                    ",{}],["|",{"inverse":true}],["  1 ",{"fg":3,"bold":true}],["\" Press ? for help",{"fg":5,"bold":true}]],"1":[["                    ",{}],["|",{"inverse":true}],[" 41 ",{"fg":3,"bold":true}],["                                                                                                                ",{}],["|",{"inverse":true}],["  2 ",{"fg":3,"bold":true}],["                  ",{}]],"2":[["▼",{"fg":3,"bold":true}],[" First",{"fg":5,"bold":true}],[" : ",{}],["struct",{"fg":2,"bold":true}],["    ",{}],["|",{"inverse":true}],[" 42 ",{"fg":3,"bold":true}],["MAPPINGS                                        *calendar-mappings*                                             ",{}],["|",{"inverse":true}],["  3 ",{"fg":3,"bold":true}],[".. (up a dir)",{"fg":6,"bold":true}],["     ",{}]],"3":[["    [prototypes]",{"fg":6,"bold":true}],["    ",{}],["|",{"inverse":true}],[" 43 ",{"fg":3,"bold":true}],["                                                                                                                ",{}],["|",{"inverse":true}],["  4 /root/",{"fg":3,"bold":true}],["            ",{}]],"4":[["   ",{}],["+",{"fg":2,"bold":true}],["FirstRun(void)  ",{}],["|",{"inverse":true}],[" 44 ",{"fg":3,"bold":true}],["calendar.vim makes the following normal mode mappings available:                                                ",{}],["|",{"inverse":true}],["  5 ",{"fg":3,"bold":true}],["▸ .asciinema/",{"fg":6,"bold":true}],["     ",{}]],"5":[["   ",{}],["+",{"fg":2,"bold":true}],["FirstRun2(void) ",{}],["|",{"inverse":true}],[" 45 ",{"fg":3,"bold":true}],["                                                                                                                ",{}],["|",{"inverse":true}],["  6 ",{"fg":3,"bold":true}],["▸ .cache/",{"fg":6,"bold":true}],["         ",{}]],"6":[["                    ",{}],["|",{"inverse":true}],[" 46 ",{"fg":3,"bold":true}],["                                                *calendar-cal*                                                  ",{}],["|",{"inverse":true}],["  7 ",{"fg":3,"bold":true}],["▸ .config/",{"fg":6,"bold":true}],["        ",{}]],"7":[["▼",{"fg":3,"bold":true}],[" Last",{"fg":5,"bold":true}],[" : ",{}],["struct",{"fg":2,"bold":true}],["     ",{}],["|",{"inverse":true}],[" 47 ",{"fg":3,"bold":true}],["<LocalLeader>cal          Brings up the calendar in a vertical split.                                           ",{}],["|",{"inverse":true}],["  8 ",{"fg":3,"bold":true}],["▸ .dbus/",{"fg":6,"bold":true}],["          ",{}]],"8":[["    [functions]",{"fg":6,"bold":true}],["     ",{}],["|",{"inverse":true}],[" 48 ",{"fg":3,"bold":true}],["                          Equivalent to calling |:Calendar|.                                                    ",{}],["|",{"inverse":true}],["  9 ",{"fg":3,"bold":true}],["▸ .gnupg/",{"fg":6,"bold":true}],["         ",{}]],"9":[["   ",{}],["+",{"fg":2,"bold":true}],["FirstRun(void)  ",{}],["|",{"inverse":true}],[" 49 ",{"fg":3,"bold":true}],["                                                                                                                ",{}],["|",{"inverse":true}],[" 10 ",{"fg":3,"bold":true}],["▸ .kde/",{"fg":6,"bold":true}],["           ",{}]],"10":[["   ",{}],["+",{"fg":2,"bold":true}],["FirstRun2(void) ",{}],["|",{"inverse":true}],[" 50 ",{"fg":3,"bold":true}],["                                                *calendar-caL*                                                  ",{}],["|",{"inverse":true}],[" 11 ",{"fg":3,"bold":true}],["▸ .local/",{"fg":6,"bold":true}],["         ",{}]],"11":[["   ",{}],["+",{"fg":2,"bold":true}],["~Last()         ",{}],["|",{"inverse":true}],[" 51 ",{"fg":3,"bold":true}],["<LocalLeader>",{}],["caL ",{"bg":1}],["        ",{}],[" Bri",{"bg":1}],["ngs up the calendar in a horizontal split.                                         ",{}],["|",{"inverse":true}],[" 12 ",{"fg":3,"bold":true}],["▸ .pki/",{"fg":6,"bold":true}],["           ",{}]],"12":[["   ",{}],["+",{"fg":2,"bold":true}],["SecondRun(void) ",{}],["|",{"inverse":true}],[" 52 ",{"fg":3,"bold":true}],["                          Equivalent to calling |:CalendarH|.                                                   ",{}],["|",{"inverse":true}],[" 13 ",{"fg":3,"bold":true}],["▸ .ssh/",{"fg":6,"bold":true}],["           ",{}]],"13":[["   ",{}],["+",{"fg":2,"bold":true}],["SecondRun2(void)",{}],["|",{"inverse":true}],[" 53 ",{"fg":3,"bold":true}],["                                                                                                                ",{}],["|",{"inverse":true}],[" 14 ",{"fg":3,"bold":true}],["▸ .vim/",{"fg":6,"bold":true}],["           ",{}]],"14":[["                    ",{}],["|",{"inverse":true}],[" 54 ",{"fg":3,"bold":true}],["SETTINGS                                        *calendar-settings*                                             ",{}],["|",{"inverse":true}],[" 15 ",{"fg":3,"bold":true}],["▸ diary/",{"fg":6,"bold":true}],["          ",{}]],"15":[["▼",{"fg":3,"bold":true}],[" Second",{"fg":5,"bold":true}],[" : ",{}],["struct",{"fg":2,"bold":true}],["   ",{}],["|",{"inverse":true}],[" 55 ",{"fg":3,"bold":true}],["                                                                                                                ",{}],["|",{"inverse":true}],[" 16 ",{"fg":3,"bold":true}],["▸ temp/",{"fg":6,"bold":true}],["           ",{}]],"16":[["    [prototypes]",{"fg":6,"bold":true}],["    ",{}],["|",{"inverse":true}],[" 56 ",{"fg":3,"bold":true}],["calendar.vim can be con",{}],["figured using the following sett",{"bg":1}],["ings:                                                    ",{}],["|",{"inverse":true}],[" 17 ",{"fg":3,"bold":true}],["  .bash_history   ",{}]],"17":[["   ",{}],["+",{"fg":2,"bold":true}],["SecondRun(void) ",{}],["|",{"inverse":true}],[" 57 ",{"fg":3,"bold":true}],["                                                                                                                ",{}],["|",{"inverse":true}],[" 18 ",{"fg":3,"bold":true}],["  .bash_logout    ",{}]],"18":[["   ",{}],["+",{"fg":2,"bold":true}],["SecondRun2(void)",{}],["|",{"inverse":true}],[" 58 ",{"fg":3,"bold":true}],["                                                *g:calendar_focus_today*                                        ",{}],["|",{"inverse":true}],[" 19 ",{"fg":3,"bold":true}],["  .bash_profile   ",{"underline":true}]],"19":[["                    ",{}],["|",{"inverse":true}],[" 59 ",{"fg":3,"bold":true}],["Keeps focus when moving to next or previous calendar: >                                                         ",{}],["|",{"inverse":true}],[" 20 ",{"fg":3,"bold":true}],["  .bashrc         ",{}]],"20":[["▼",{"fg":3,"bold":true}],[" ",{}],["functions",{"fg":6,"bold":true}],["         ",{}],["|",{"inverse":true}],[" 60 ",{"fg":3,"bold":true}],["  let g:calendar_focus_today = 1                                                                                ",{}],["|",{"inverse":true}],[" 21 ",{"fg":3,"bold":true}],["  .cshrc          ",{}]],"21":[["    main(int argc, c",{"underline":true}],["|",{"inverse":true}],[" 61 ",{"fg":3,"bold":true}],["<                                                                                                               ",{}],["|",{"inverse":true}],[" 22 ",{"fg":3,"bold":true}],["  .dmrc           ",{}]],"22":[["~                   ",{"fg":4,"bold":true}],["|",{"inverse":true}],[" 62 ",{"fg":3,"bold":true}],["                                                                                                                ",{}],["|",{"inverse":true}],[" 23 ",{"fg":3,"bold":true}],["  .esd_auth       ",{}]],"23":[["~                   ",{"fg":4,"bold":true}],["|",{"inverse":true}],[" 63 ",{"fg":3,"bold":true}],["                                                *g:calendar_keys*                                               ",{}],["|",{"inverse":true}],[" 24 ",{"fg":3,"bold":true}],["  .gtkrc-2.0      ",{}]],"24":[["~                   ",{"fg":4,"bold":true}],["|",{"inverse":true}],[" 64 ",{"fg":3,"bold":true}],["To change the key bindings in the calendar window, add entries to this                                          ",{}],["|",{"inverse":true}],[" 25 ",{"fg":3,"bold":true}],["  .gtkrc-2.0-kde4 ",{}]],"25":[["~                   ",{"fg":4,"bold":true}],["|",{"inverse":true}],[" 65 ",{"fg":3,"bold":true}],["dictionary.   Possible keys, the action bound to the keycode given in the                                       ",{}],["|",{"inverse":true}],[" 26 ",{"fg":3,"bold":true}],["  .lesshst        ",{}]],"26":[["~                   ",{"fg":4,"bold":true}],["|",{"inverse":true}],[" 66 ",{"fg":3,"bold":true}],["respective value for this key and the default binding are listed below.                                         ",{}],["|",{"inverse":true}],[" 27 ",{"fg":3,"bold":true}],["  .tcshrc         ",{}]],"27":[["~                   ",{"fg":4,"bold":true}],["|",{"inverse":true}],[" 67 ",{"fg":3,"bold":true}],["'close'                     Closes calendar window.             'q'                                             ",{}],["|",{"inverse":true}],[" 28 ",{"fg":3,"bold":true}],["  .viminfo        ",{}]],"28":[["~                   ",{"fg":4,"bold":true}],["|",{"inverse":true}],[" 68 ",{"fg":3,"bold":true}],["'do_action'                 Executes |calendar_action|.           '<CR>'                                        ",{}],["|",{"inverse":true}],[" 29 ",{"fg":3,"bold":true}],["  .vimrc          ",{}]],"29":[["~                   ",{"fg":4,"bold":true}],["|",{"inverse":true}],[" 69 ",{"fg":3,"bold":true}],["'goto_today'                Executes |calendar_today|.            't'                                           ",{}],["|",{"inverse":true}],[" 30 ",{"fg":3,"bold":true}],["  .xsession-errors",{}]],"30":[["~                   ",{"fg":4,"bold":true}],["|",{"inverse":true}],[" 70 ",{"fg":3,"bold":true}],["'show_help'                 Displays a short help message.      '?'                                             ",{}],["|",{"inverse":true}],[" 31 ",{"fg":3,"bold":true}],["  anaconda-ks.cfg ",{}]],"31":[["~                   ",{"fg":4,"bold":true}],["|",{"inverse":true}],[" 71 ",{"fg":3,"bold":true}],["'redisplay'                 Redraws calendar window.            'r'                                             ",{}],["|",{"inverse":true}],[" 32 ",{"fg":3,"bold":true}],["  initial-setup-ks",{}]],"32":[["~                   ",{"fg":4,"bold":true}],["|",{"inverse":true}],[" 72 ",{"fg":3,"bold":true}],["'goto_next_month'           Jumps to the next month.            '<Right>'                                       ",{}],["|",{"inverse":true}],[" 33 ",{"fg":3,"bold":true}],["  test.c          ",{}]],"33":[["~                   ",{"fg":4,"bold":true}],["|",{"inverse":true}],[" 73 ",{"fg":3,"bold":true}],["'goto_prev_month'           Jumps to the previous month.        '<Left>'                                        ",{}],["|",{"inverse":true}],[" 34 ",{"fg":3,"bold":true}],["  test.cpp        ",{}]],"34":[["~                   ",{"fg":4,"bold":true}],["|",{"inverse":true}],[" 74 ",{"fg":3,"bold":true}],["'goto_next_year'            Jumps to the next year.             '<Up>'                                          ",{}],["|",{"inverse":true}],[" 35 ",{"fg":3,"bold":true}],["  .test.cpp.swp   ",{}]],"35":[["~                   ",{"fg":4,"bold":true}],["|",{"inverse":true}],[" 75 ",{"fg":3,"bold":true}],["'goto_prev_year'            Jumps to the previous year.         '<Down>'                                        ",{}],["|",{"inverse":true}],["~                     ",{"fg":4,"bold":true}]],"36":[["~                   ",{"fg":4,"bold":true}],["|",{"inverse":true}],[" 76 ",{"fg":3,"bold":true}],["An example in your .vimrc might look like this: >                                                               ",{}],["|",{"inverse":true}],["~                     ",{"fg":4,"bold":true}]],"37":[["~                   ",{"fg":4,"bold":true}],["|",{"inverse":true}],[" 77 ",{"fg":3,"bold":true}],["  let g:calendar_keys = { 'goto_next_month': '<C-Right>', 'goto_prev_month': '<C-Left>'}                        ",{}],["|",{"inverse":true}],["~                     ",{"fg":4,"bold":true}]],"38":[["~                   ",{"fg":4,"bold":true}],["|",{"inverse":true}],[" 78 ",{"fg":3,"bold":true}],["<                                                                                                               ",{}],["|",{"inverse":true}],["~                     ",{"fg":4,"bold":true}]],"39":[["~                   ",{"fg":4,"bold":true}],["|",{"inverse":true}],[" 79 ",{"fg":3,"bold":true}],["                                                                                                                ",{}],["|",{"inverse":true}],["~                     ",{"fg":4,"bold":true}]],"40":[["~                   ",{"fg":4,"bold":true}],["|",{"inverse":true}],[" 80 ",{"fg":3,"bold":true}],["                                                *g:calendar_mark*                                               ",{}],["|",{"inverse":true}],["~                     ",{"fg":4,"bold":true}]],"41":[["~                   ",{"fg":4,"bold":true}],["|",{"inverse":true}],[" 81 ",{"fg":3,"bold":true}],["Place a '*' or '+' mark after the day.  Acceptable values are 'left',                                           ",{}],["|",{"inverse":true}],["~                     ",{"fg":4,"bold":true}]],"42":[["~                   ",{"fg":4,"bold":true}],["|",{"inverse":true}],[" 82 ",{"fg":3,"bold":true}],["'left-fit', and 'right': >                                                                                      ",{}],["|",{"inverse":true}],["~                     ",{"fg":4,"bold":true}]],"43":[["~                   ",{"fg":4,"bold":true}],["|",{"inverse":true}],[" 83 ",{"fg":3,"bold":true}],["  let g:calendar_mark = 'right'                                                                                 ",{}],["|",{"inverse":true}],["~                     ",{"fg":4,"bold":true}]],"44":[["~                   ",{"fg":4,"bold":true}],["|",{"inverse":true}],[" 84 ",{"fg":3,"bold":true}],["<                                               ",{"underline":true}],["                                                                ",{}],["|",{"inverse":true}],["~                     ",{"fg":4,"bold":true}]]},"cursor":{"x":73,"y":44,"visible":false}}],[0.040231,{"lines":{"44":[["~                   ",{"fg":4,"bold":true}],["|",{"inverse":true}],[" 84 ",{"fg":3,"bold":true}],["<                                                                                                               ",{}],["|",{"inverse":true}],["~                     ",{"fg":4,"bold":true}]],"45":[["~                   ",{"fg":4,"bold":true}],["|",{"inverse":true}],[" 85 ",{"fg":3,"bold":true}],["                                                                                                                ",{"underline":true}],["|",{"inverse":true}],["~                     ",{"fg":4,"bold":true}]],"46":[["[Name] test.cpp      ",{"inverse":true}],[" NORMAL ",{"bold":true}],[" ",{}],["calendar.txt ",{"bold":true}],["                                                        unix │ utf-8 │ text │  38% ",{}],[" LN  85",{"bold":true}],[":1  ",{}],[" ",{"bold":true,"inverse":true}],[" ~/…/calendar-vim/doc>",{"bold":true}]]},"cursor":{"x":25,"y":45,"visible":true}}],[0.004224,{"lines":{"0":[["\" Press <F1> for hel",{"fg":6,"bold":true}],["|",{"inverse":true}],[" 41 ",{"fg":3,"bold":true}],["                                                                                                                ",{}],["|",{"inverse":true}],["  1 ",{"fg":3,"bold":true}],["\" Press ? for help",{"fg":5,"bold":true}]],"1":[["                    ",{}],["|",{"inverse":true}],[" 42 ",{"fg":3,"bold":true}],["MAPPINGS                                        *calendar-mappings*                                             ",{}],["|",{"inverse":true}],["  2 ",{"fg":3,"bold":true}],["                  ",{}]],"2":[["▼",{"fg":3,"bold":true}],[" First",{"fg":5,"bold":true}],[" : ",{}],["struct",{"fg":2,"bold":true}],["    ",{}],["|",{"inverse":true}],[" 43 ",{"fg":3,"bold":true}],["                                                                                                                ",{}],["|",{"inverse":true}],["  3 ",{"fg":3,"bold":true}],[".. (up a dir)",{"fg":6,"bold":true}],["     ",{}]],"3":[["    [prototypes]",{"fg":6,"bold":true}],["    ",{}],["|",{"inverse":true}],[" 44 ",{"fg":3,"bold":true}],["calendar.vim makes the following normal mode mappings available:                                                ",{}],["|",{"inverse":true}],["  4 /root/",{"fg":3,"bold":true}],["            ",{}]],"4":[["   ",{}],["+",{"fg":2,"bold":true}],["FirstRun(void)  ",{}],["|",{"inverse":true}],[" 45 ",{"fg":3,"bold":true}],["                                                                                                                ",{}],["|",{"inverse":true}],["  5 ",{"fg":3,"bold":true}],["▸ .asciinema/",{"fg":6,"bold":true}],["     ",{}]],"5":[["   ",{}],["+",{"fg":2,"bold":true}],["FirstRun2(void) ",{}],["|",{"inverse":true}],[" 46 ",{"fg":3,"bold":true}],["                                                *calendar-cal*                                                  ",{}],["|",{"inverse":true}],["  6 ",{"fg":3,"bold":true}],["▸ .cache/",{"fg":6,"bold":true}],["         ",{}]],"6":[["                    ",{}],["|",{"inverse":true}],[" 47 ",{"fg":3,"bold":true}],["<LocalLeader>cal          Brings up the calendar in a vertical split.                                           ",{}],["|",{"inverse":true}],["  7 ",{"fg":3,"bold":true}],["▸ .config/",{"fg":6,"bold":true}],["        ",{}]],"7":[["▼",{"fg":3,"bold":true}],[" Last",{"fg":5,"bold":true}],[" : ",{}],["struct",{"fg":2,"bold":true}],["     ",{}],["|",{"inverse":true}],[" 48 ",{"fg":3,"bold":true}],["                          Equivalent to calling |:Calendar|.                                                    ",{}],["|",{"inverse":true}],["  8 ",{"fg":3,"bold":true}],["▸ .dbus/",{"fg":6,"bold":true}],["          ",{}]],"8":[["    [functions]",{"fg":6,"bold":true}],["     ",{}],["|",{"inverse":true}],[" 49 ",{"fg":3,"bold":true}],["                                                                                                                ",{}],["|",{"inverse":true}],["  9 ",{"fg":3,"bold":true}],["▸ .gnupg/",{"fg":6,"bold":true}],["         ",{}]],"9":[["   ",{}],["+",{"fg":2,"bold":true}],["FirstRun(void)  ",{}],["|",{"inverse":true}],[" 50 ",{"fg":3,"bold":true}],["                                                *calendar-caL*                                                  ",{}],["|",{"inverse":true}],[" 10 ",{"fg":3,"bold":true}],["▸ .kde/",{"fg":6,"bold":true}],["           ",{}]],"10":[["   ",{}],["+",{"fg":2,"bold":true}],["FirstRun2(void) ",{}],["|",{"inverse":true}],[" 51 ",{"fg":3,"bold":true}],["<LocalLeader>",{}],["caL ",{"bg":1}],["        ",{}],[" Bri",{"bg":1}],["ngs up the calendar in a horizontal split.                                         ",{}],["|",{"inverse":true}],[" 11 ",{"fg":3,"bold":true}],["▸ .local/",{"fg":6,"bold":true}],["         ",{}]],"11":[["   ",{}],["+",{"fg":2,"bold":true}],["~Last()         ",{}],["|",{"inverse":true}],[" 52 ",{"fg":3,"bold":true}],["                          Equivalent to calling |:CalendarH|.                                                   ",{}],["|",{"inverse":true}],[" 12 ",{"fg":3,"bold":true}],["▸ .pki/",{"fg":6,"bold":true}],["           ",{}]],"12":[["   ",{}],["+",{"fg":2,"bold":true}],["SecondRun(void) ",{}],["|",{"inverse":true}],[" 53 ",{"fg":3,"bold":true}],["                                                                                                                ",{}],["|",{"inverse":true}],[" 13 ",{"fg":3,"bold":true}],["▸ .ssh/",{"fg":6,"bold":true}],["           ",{}]],"13":[["   ",{}],["+",{"fg":2,"bold":true}],["SecondRun2(void)",{}],["|",{"inverse":true}],[" 54 ",{"fg":3,"bold":true}],["SETTINGS                                        *calendar-settings*                                             ",{}],["|",{"inverse":true}],[" 14 ",{"fg":3,"bold":true}],["▸ .vim/",{"fg":6,"bold":true}],["           ",{}]],"14":[["                    ",{}],["|",{"inverse":true}],[" 55 ",{"fg":3,"bold":true}],["                                                                                                                ",{}],["|",{"inverse":true}],[" 15 ",{"fg":3,"bold":true}],["▸ diary/",{"fg":6,"bold":true}],["          ",{}]],"15":[["▼",{"fg":3,"bold":true}],[" Second",{"fg":5,"bold":true}],[" : ",{}],["struct",{"fg":2,"bold":true}],["   ",{}],["|",{"inverse":true}],[" 56 ",{"fg":3,"bold":true}],["calendar.vim can be con",{}],["figured using the following sett",{"bg":1}],["ings:                                                    ",{}],["|",{"inverse":true}],[" 16 ",{"fg":3,"bold":true}],["▸ temp/",{"fg":6,"bold":true}],["           ",{}]],"16":[["    [prototypes]",{"fg":6,"bold":true}],["    ",{}],["|",{"inverse":true}],[" 57 ",{"fg":3,"bold":true}],["                                                                                                                ",{}],["|",{"inverse":true}],[" 17 ",{"fg":3,"bold":true}],["  .bash_history   ",{}]],"17":[["   ",{}],["+",{"fg":2,"bold":true}],["SecondRun(void) ",{}],["|",{"inverse":true}],[" 58 ",{"fg":3,"bold":true}],["                                                *g:calendar_focus_today*                                        ",{}],["|",{"inverse":true}],[" 18 ",{"fg":3,"bold":true}],["  .bash_logout    ",{}]],"18":[["   ",{}],["+",{"fg":2,"bold":true}],["SecondRun2(void)",{}],["|",{"inverse":true}],[" 59 ",{"fg":3,"bold":true}],["Keeps focus when moving to next or previous calendar: >                                                         ",{}],["|",{"inverse":true}],[" 19 ",{"fg":3,"bold":true}],["  .bash_profile   ",{"underline":true}]],"19":[["                    ",{}],["|",{"inverse":true}],[" 60 ",{"fg":3,"bold":true}],["  let g:calendar_focus_today = 1                                                                                ",{}],["|",{"inverse":true}],[" 20 ",{"fg":3,"bold":true}],["  .bashrc         ",{}]],"20":[["▼",{"fg":3,"bold":true}],[" ",{}],["functions",{"fg":6,"bold":true}],["         ",{}],["|",{"inverse":true}],[" 61 ",{"fg":3,"bold":true}],["<                                                                                                               ",{}],["|",{"inverse":true}],[" 21 ",{"fg":3,"bold":true}],["  .cshrc          ",{}]],"21":[["    main(int argc, c",{"underline":true}],["|",{"inverse":true}],[" 62 ",{"fg":3,"bold":true}],["                                                                                                                ",{}],["|",{"inverse":true}],[" 22 ",{"fg":3,"bold":true}],["  .dmrc           ",{}]],"22":[["~                   ",{"fg":4,"bold":true}],["|",{"inverse":true}],[" 63 ",{"fg":3,"bold":true}],["                                                *g:calendar_keys*                                               ",{}],["|",{"inverse":true}],[" 23 ",{"fg":3,"bold":true}],["  .esd_auth       ",{}]],"23":[["~                   ",{"fg":4,"bold":true}],["|",{"inverse":true}],[" 64 ",{"fg":3,"bold":true}],["To change the key bindings in the calendar window, add entries to this                                          ",{}],["|",{"inverse":true}],[" 24 ",{"fg":3,"bold":true}],["  .gtkrc-2.0      ",{}]],"24":[["~                   ",{"fg":4,"bold":true}],["|",{"inverse":true}],[" 65 ",{"fg":3,"bold":true}],["dictionary.   Possible keys, the action bound to the keycode given in the                                       ",{}],["|",{"inverse":true}],[" 25 ",{"fg":3,"bold":true}],["  .gtkrc-2.0-kde4 ",{}]],"25":[["~                   ",{"fg":4,"bold":true}],["|",{"inverse":true}],[" 66 ",{"fg":3,"bold":true}],["respective value for this key and the default binding are listed below.                                         ",{}],["|",{"inverse":true}],[" 26 ",{"fg":3,"bold":true}],["  .lesshst        ",{}]],"26":[["~                   ",{"fg":4,"bold":true}],["|",{"inverse":true}],[" 67 ",{"fg":3,"bold":true}],["'close'                     Closes calendar window.             'q'                                             ",{}],["|",{"inverse":true}],[" 27 ",{"fg":3,"bold":true}],["  .tcshrc         ",{}]],"27":[["~                   ",{"fg":4,"bold":true}],["|",{"inverse":true}],[" 68 ",{"fg":3,"bold":true}],["'do_action'                 Executes |calendar_action|.           '<CR>'                                        ",{}],["|",{"inverse":true}],[" 28 ",{"fg":3,"bold":true}],["  .viminfo        ",{}]],"28":[["~                   ",{"fg":4,"bold":true}],["|",{"inverse":true}],[" 69 ",{"fg":3,"bold":true}],["'goto_today'                Executes |calendar_today|.            't'                                           ",{}],["|",{"inverse":true}],[" 29 ",{"fg":3,"bold":true}],["  .vimrc          ",{}]],"29":[["~                   ",{"fg":4,"bold":true}],["|",{"inverse":true}],[" 70 ",{"fg":3,"bold":true}],["'show_help'                 Displays a short help message.      '?'                                             ",{}],["|",{"inverse":true}],[" 30 ",{"fg":3,"bold":true}],["  .xsession-errors",{}]],"30":[["~                   ",{"fg":4,"bold":true}],["|",{"inverse":true}],[" 71 ",{"fg":3,"bold":true}],["'redisplay'                 Redraws calendar window.            'r'                                             ",{}],["|",{"inverse":true}],[" 31 ",{"fg":3,"bold":true}],["  anaconda-ks.cfg ",{}]],"31":[["~                   ",{"fg":4,"bold":true}],["|",{"inverse":true}],[" 72 ",{"fg":3,"bold":true}],["'goto_next_month'           Jumps to the next month.            '<Right>'                                       ",{}],["|",{"inverse":true}],[" 32 ",{"fg":3,"bold":true}],["  initial-setup-ks",{}]],"32":[["~                   ",{"fg":4,"bold":true}],["|",{"inverse":true}],[" 73 ",{"fg":3,"bold":true}],["'goto_prev_month'           Jumps to the previous month.        '<Left>'                                        ",{}],["|",{"inverse":true}],[" 33 ",{"fg":3,"bold":true}],["  test.c          ",{}]],"33":[["~                   ",{"fg":4,"bold":true}],["|",{"inverse":true}],[" 74 ",{"fg":3,"bold":true}],["'goto_next_year'            Jumps to the next year.             '<Up>'                                          ",{}],["|",{"inverse":true}],[" 34 ",{"fg":3,"bold":true}],["  test.cpp        ",{}]],"34":[["~                   ",{"fg":4,"bold":true}],["|",{"inverse":true}],[" 75 ",{"fg":3,"bold":true}],["'goto_prev_year'            Jumps to the previous year.         '<Down>'                                        ",{}],["|",{"inverse":true}],[" 35 ",{"fg":3,"bold":true}],["  .test.cpp.swp   ",{}]],"35":[["~                   ",{"fg":4,"bold":true}],["|",{"inverse":true}],[" 76 ",{"fg":3,"bold":true}],["An example in your .vimrc might look like this: >                                                               ",{}],["|",{"inverse":true}],["~                     ",{"fg":4,"bold":true}]],"36":[["~                   ",{"fg":4,"bold":true}],["|",{"inverse":true}],[" 77 ",{"fg":3,"bold":true}],["  let g:calendar_keys = { 'goto_next_month': '<C-Right>', 'goto_prev_month': '<C-Left>'}                        ",{}],["|",{"inverse":true}],["~                     ",{"fg":4,"bold":true}]],"37":[["~                   ",{"fg":4,"bold":true}],["|",{"inverse":true}],[" 78 ",{"fg":3,"bold":true}],["<                                                                                                               ",{}],["|",{"inverse":true}],["~                     ",{"fg":4,"bold":true}]],"38":[["~                   ",{"fg":4,"bold":true}],["|",{"inverse":true}],[" 79 ",{"fg":3,"bold":true}],["                                                                                                                ",{}],["|",{"inverse":true}],["~                     ",{"fg":4,"bold":true}]],"39":[["~                   ",{"fg":4,"bold":true}],["|",{"inverse":true}],[" 80 ",{"fg":3,"bold":true}],["                                                *g:calendar_mark*                                               ",{}],["|",{"inverse":true}],["~                     ",{"fg":4,"bold":true}]],"40":[["~                   ",{"fg":4,"bold":true}],["|",{"inverse":true}],[" 81 ",{"fg":3,"bold":true}],["Place a '*' or '+' mark after the day.  Acceptable values are 'left',                                           ",{}],["|",{"inverse":true}],["~                     ",{"fg":4,"bold":true}]],"41":[["~                   ",{"fg":4,"bold":true}],["|",{"inverse":true}],[" 82 ",{"fg":3,"bold":true}],["'left-fit', and 'right': >                                                                                      ",{}],["|",{"inverse":true}],["~                     ",{"fg":4,"bold":true}]],"42":[["~                   ",{"fg":4,"bold":true}],["|",{"inverse":true}],[" 83 ",{"fg":3,"bold":true}],["  let g:calendar_mark = 'right'                                                                                 ",{}],["|",{"inverse":true}],["~                     ",{"fg":4,"bold":true}]],"43":[["~                   ",{"fg":4,"bold":true}],["|",{"inverse":true}],[" 84 ",{"fg":3,"bold":true}],["<                                                                                                               ",{}],["|",{"inverse":true}],["~                     ",{"fg":4,"bold":true}]],"44":[["~                   ",{"fg":4,"bold":true}],["|",{"inverse":true}],[" 85 ",{"fg":3,"bold":true}],["                                                ",{"underline":true}],["                                                                ",{}],["|",{"inverse":true}],["~                     ",{"fg":4,"bold":true}]]},"cursor":{"x":73,"y":44,"visible":false}}],[0.020534,{"lines":{"44":[["~                   ",{"fg":4,"bold":true}],["|",{"inverse":true}],[" 85 ",{"fg":3,"bold":true}],["                                                                                                                ",{}],["|",{"inverse":true}],["~                     ",{"fg":4,"bold":true}]],"45":[["~                   ",{"fg":4,"bold":true}],["|",{"inverse":true}],[" 86 ",{"fg":3,"bold":true}],["                                                *g:calendar_diary*                                              ",{"underline":true}],["|",{"inverse":true}],["~                     ",{"fg":4,"bold":true}]],"46":[["[Name] test.cpp      ",{"inverse":true}],[" NORMAL ",{"bold":true}],[" ",{}],["calendar.txt ",{"bold":true}],["                                                        unix │ utf-8 │ text │  39% ",{}],[" LN  86",{"bold":true}],[":1  ",{}],[" ",{"bold":true,"inverse":true}],[" ~/…/calendar-vim/doc>",{"bold":true}]]},"cursor":{"x":25,"y":45,"visible":true}}],[0.004423000000000001,{"lines":{"0":[["\" Press <F1> for hel",{"fg":6,"bold":true}],["|",{"inverse":true}],[" 42 ",{"fg":3,"bold":true}],["MAPPINGS                                        *calendar-mappings*                                             ",{}],["|",{"inverse":true}],["  1 ",{"fg":3,"bold":true}],["\" Press ? for help",{"fg":5,"bold":true}]],"1":[["                    ",{}],["|",{"inverse":true}],[" 43 ",{"fg":3,"bold":true}],["                                                                                                                ",{}],["|",{"inverse":true}],["  2 ",{"fg":3,"bold":true}],["                  ",{}]],"2":[["▼",{"fg":3,"bold":true}],[" First",{"fg":5,"bold":true}],[" : ",{}],["struct",{"fg":2,"bold":true}],["    ",{}],["|",{"inverse":true}],[" 44 ",{"fg":3,"bold":true}],["calendar.vim makes the following normal mode mappings available:                                                ",{}],["|",{"inverse":true}],["  3 ",{"fg":3,"bold":true}],[".. (up a dir)",{"fg":6,"bold":true}],["     ",{}]],"3":[["    [prototypes]",{"fg":6,"bold":true}],["    ",{}],["|",{"inverse":true}],[" 45 ",{"fg":3,"bold":true}],["                                                                                                                ",{}],["|",{"inverse":true}],["  4 /root/",{"fg":3,"bold":true}],["            ",{}]],"4":[["   ",{}],["+",{"fg":2,"bold":true}],["FirstRun(void)  ",{}],["|",{"inverse":true}],[" 46 ",{"fg":3,"bold":true}],["                                                *calendar-cal*                                                  ",{}],["|",{"inverse":true}],["  5 ",{"fg":3,"bold":true}],["▸ .asciinema/",{"fg":6,"bold":true}],["     ",{}]],"5":[["   ",{}],["+",{"fg":2,"bold":true}],["FirstRun2(void) ",{}],["|",{"inverse":true}],[" 47 ",{"fg":3,"bold":true}],["<LocalLeader>cal          Brings up the calendar in a vertical split.                                           ",{}],["|",{"inverse":true}],["  6 ",{"fg":3,"bold":true}],["▸ .cache/",{"fg":6,"bold":true}],["         ",{}]],"6":[["                    ",{}],["|",{"inverse":true}],[" 48 ",{"fg":3,"bold":true}],["                          Equivalent to calling |:Calendar|.                                                    ",{}],["|",{"inverse":true}],["  7 ",{"fg":3,"bold":true}],["▸ .config/",{"fg":6,"bold":true}],["        ",{}]],"7":[["▼",{"fg":3,"bold":true}],[" Last",{"fg":5,"bold":true}],[" : ",{}],["struct",{"fg":2,"bold":true}],["     ",{}],["|",{"inverse":true}],[" 49 ",{"fg":3,"bold":true}],["                                                                                                                ",{}],["|",{"inverse":true}],["  8 ",{"fg":3,"bold":true}],["▸ .dbus/",{"fg":6,"bold":true}],["          ",{}]],"8":[["    [functions]",{"fg":6,"bold":true}],["     ",{}],["|",{"inverse":true}],[" 50 ",{"fg":3,"bold":true}],["                                                *calendar-caL*                                                  ",{}],["|",{"inverse":true}],["  9 ",{"fg":3,"bold":true}],["▸ .gnupg/",{"fg":6,"bold":true}],["         ",{}]],"9":[["   ",{}],["+",{"fg":2,"bold":true}],["FirstRun(void)  ",{}],["|",{"inverse":true}],[" 51 ",{"fg":3,"bold":true}],["<LocalLeader>",{}],["caL ",{"bg":1}],["        ",{}],[" Bri",{"bg":1}],["ngs up the calendar in a horizontal split.                                         ",{}],["|",{"inverse":true}],[" 10 ",{"fg":3,"bold":true}],["▸ .kde/",{"fg":6,"bold":true}],["           ",{}]],"10":[["   ",{}],["+",{"fg":2,"bold":true}],["FirstRun2(void) ",{}],["|",{"inverse":true}],[" 52 ",{"fg":3,"bold":true}],["                          Equivalent to calling |:CalendarH|.                                                   ",{}],["|",{"inverse":true}],[" 11 ",{"fg":3,"bold":true}],["▸ .local/",{"fg":6,"bold":true}],["         ",{}]],"11":[["   ",{}],["+",{"fg":2,"bold":true}],["~Last()         ",{}],["|",{"inverse":true}],[" 53 ",{"fg":3,"bold":true}],["                                                                                                                ",{}],["|",{"inverse":true}],[" 12 ",{"fg":3,"bold":true}],["▸ .pki/",{"fg":6,"bold":true}],["           ",{}]],"12":[["   ",{}],["+",{"fg":2,"bold":true}],["SecondRun(void) ",{}],["|",{"inverse":true}],[" 54 ",{"fg":3,"bold":true}],["SETTINGS                                        *calendar-settings*                                             ",{}],["|",{"inverse":true}],[" 13 ",{"fg":3,"bold":true}],["▸ .ssh/",{"fg":6,"bold":true}],["           ",{}]],"13":[["   ",{}],["+",{"fg":2,"bold":true}],["SecondRun2(void)",{}],["|",{"inverse":true}],[" 55 ",{"fg":3,"bold":true}],["                                                                                                                ",{}],["|",{"inverse":true}],[" 14 ",{"fg":3,"bold":true}],["▸ .vim/",{"fg":6,"bold":true}],["           ",{}]],"14":[["                    ",{}],["|",{"inverse":true}],[" 56 ",{"fg":3,"bold":true}],["calendar.vim can be con",{}],["figured using the following sett",{"bg":1}],["ings:                                                    ",{}],["|",{"inverse":true}],[" 15 ",{"fg":3,"bold":true}],["▸ diary/",{"fg":6,"bold":true}],["          ",{}]],"15":[["▼",{"fg":3,"bold":true}],[" Second",{"fg":5,"bold":true}],[" : ",{}],["struct",{"fg":2,"bold":true}],["   ",{}],["|",{"inverse":true}],[" 57 ",{"fg":3,"bold":true}],["                                                                                                                ",{}],["|",{"inverse":true}],[" 16 ",{"fg":3,"bold":true}],["▸ temp/",{"fg":6,"bold":true}],["           ",{}]],"16":[["    [prototypes]",{"fg":6,"bold":true}],["    ",{}],["|",{"inverse":true}],[" 58 ",{"fg":3,"bold":true}],["                                                *g:calendar_focus_today*                                        ",{}],["|",{"inverse":true}],[" 17 ",{"fg":3,"bold":true}],["  .bash_history   ",{}]],"17":[["   ",{}],["+",{"fg":2,"bold":true}],["SecondRun(void) ",{}],["|",{"inverse":true}],[" 59 ",{"fg":3,"bold":true}],["Keeps focus when moving to next or previous calendar: >                                                         ",{}],["|",{"inverse":true}],[" 18 ",{"fg":3,"bold":true}],["  .bash_logout    ",{}]],"18":[["   ",{}],["+",{"fg":2,"bold":true}],["SecondRun2(void)",{}],["|",{"inverse":true}],[" 60 ",{"fg":3,"bold":true}],["  let g:calendar_focus_today = 1                                                                                ",{}],["|",{"inverse":true}],[" 19 ",{"fg":3,"bold":true}],["  .bash_profile   ",{"underline":true}]],"19":[["                    ",{}],["|",{"inverse":true}],[" 61 ",{"fg":3,"bold":true}],["<                                                                                                               ",{}],["|",{"inverse":true}],[" 20 ",{"fg":3,"bold":true}],["  .bashrc         ",{}]],"20":[["▼",{"fg":3,"bold":true}],[" ",{}],["functions",{"fg":6,"bold":true}],["         ",{}],["|",{"inverse":true}],[" 62 ",{"fg":3,"bold":true}],["                                                                                                                ",{}],["|",{"inverse":true}],[" 21 ",{"fg":3,"bold":true}],["  .cshrc          ",{}]],"21":[["    main(int argc, c",{"underline":true}],["|",{"inverse":true}],[" 63 ",{"fg":3,"bold":true}],["                                                *g:calendar_keys*                                               ",{}],["|",{"inverse":true}],[" 22 ",{"fg":3,"bold":true}],["  .dmrc           ",{}]],"22":[["~                   ",{"fg":4,"bold":true}],["|",{"inverse":true}],[" 64 ",{"fg":3,"bold":true}],["To change the key bindings in the calendar window, add entries to this                                          ",{}],["|",{"inverse":true}],[" 23 ",{"fg":3,"bold":true}],["  .esd_auth       ",{}]],"23":[["~                   ",{"fg":4,"bold":true}],["|",{"inverse":true}],[" 65 ",{"fg":3,"bold":true}],["dictionary.   Possible keys, the action bound to the keycode given in the                                       ",{}],["|",{"inverse":true}],[" 24 ",{"fg":3,"bold":true}],["  .gtkrc-2.0      ",{}]],"24":[["~                   ",{"fg":4,"bold":true}],["|",{"inverse":true}],[" 66 ",{"fg":3,"bold":true}],["respective value for this key and the default binding are listed below.                                         ",{}],["|",{"inverse":true}],[" 25 ",{"fg":3,"bold":true}],["  .gtkrc-2.0-kde4 ",{}]],"25":[["~                   ",{"fg":4,"bold":true}],["|",{"inverse":true}],[" 67 ",{"fg":3,"bold":true}],["'close'                     Closes calendar window.             'q'                                             ",{}],["|",{"inverse":true}],[" 26 ",{"fg":3,"bold":true}],["  .lesshst        ",{}]],"26":[["~                   ",{"fg":4,"bold":true}],["|",{"inverse":true}],[" 68 ",{"fg":3,"bold":true}],["'do_action'                 Executes |calendar_action|.           '<CR>'                                        ",{}],["|",{"inverse":true}],[" 27 ",{"fg":3,"bold":true}],["  .tcshrc         ",{}]],"27":[["~                   ",{"fg":4,"bold":true}],["|",{"inverse":true}],[" 69 ",{"fg":3,"bold":true}],["'goto_today'                Executes |calendar_today|.            't'                                           ",{}],["|",{"inverse":true}],[" 28 ",{"fg":3,"bold":true}],["  .viminfo        ",{}]],"28":[["~                   ",{"fg":4,"bold":true}],["|",{"inverse":true}],[" 70 ",{"fg":3,"bold":true}],["'show_help'                 Displays a short help message.      '?'                                             ",{}],["|",{"inverse":true}],[" 29 ",{"fg":3,"bold":true}],["  .vimrc          ",{}]],"29":[["~                   ",{"fg":4,"bold":true}],["|",{"inverse":true}],[" 71 ",{"fg":3,"bold":true}],["'redisplay'                 Redraws calendar window.            'r'                                             ",{}],["|",{"inverse":true}],[" 30 ",{"fg":3,"bold":true}],["  .xsession-errors",{}]],"30":[["~                   ",{"fg":4,"bold":true}],["|",{"inverse":true}],[" 72 ",{"fg":3,"bold":true}],["'goto_next_month'           Jumps to the next month.            '<Right>'                                       ",{}],["|",{"inverse":true}],[" 31 ",{"fg":3,"bold":true}],["  anaconda-ks.cfg ",{}]],"31":[["~                   ",{"fg":4,"bold":true}],["|",{"inverse":true}],[" 73 ",{"fg":3,"bold":true}],["'goto_prev_month'           Jumps to the previous month.        '<Left>'                                        ",{}],["|",{"inverse":true}],[" 32 ",{"fg":3,"bold":true}],["  initial-setup-ks",{}]],"32":[["~                   ",{"fg":4,"bold":true}],["|",{"inverse":true}],[" 74 ",{"fg":3,"bold":true}],["'goto_next_year'            Jumps to the next year.             '<Up>'                                          ",{}],["|",{"inverse":true}],[" 33 ",{"fg":3,"bold":true}],["  test.c          ",{}]],"33":[["~                   ",{"fg":4,"bold":true}],["|",{"inverse":true}],[" 75 ",{"fg":3,"bold":true}],["'goto_prev_year'            Jumps to the previous year.         '<Down>'                                        ",{}],["|",{"inverse":true}],[" 34 ",{"fg":3,"bold":true}],["  test.cpp        ",{}]],"34":[["~                   ",{"fg":4,"bold":true}],["|",{"inverse":true}],[" 76 ",{"fg":3,"bold":true}],["An example in your .vimrc might look like this: >                                                               ",{}],["|",{"inverse":true}],[" 35 ",{"fg":3,"bold":true}],["  .test.cpp.swp   ",{}]],"35":[["~                   ",{"fg":4,"bold":true}],["|",{"inverse":true}],[" 77 ",{"fg":3,"bold":true}],["  let g:calendar_keys = { 'goto_next_month': '<C-Right>', 'goto_prev_month': '<C-Left>'}                        ",{}],["|",{"inverse":true}],["~                     ",{"fg":4,"bold":true}]],"36":[["~                   ",{"fg":4,"bold":true}],["|",{"inverse":true}],[" 78 ",{"fg":3,"bold":true}],["<                                                                                                               ",{}],["|",{"inverse":true}],["~                     ",{"fg":4,"bold":true}]],"37":[["~                   ",{"fg":4,"bold":true}],["|",{"inverse":true}],[" 79 ",{"fg":3,"bold":true}],["                                                                                                                ",{}],["|",{"inverse":true}],["~                     ",{"fg":4,"bold":true}]],"38":[["~                   ",{"fg":4,"bold":true}],["|",{"inverse":true}],[" 80 ",{"fg":3,"bold":true}],["                                                *g:calendar_mark*                                               ",{}],["|",{"inverse":true}],["~                     ",{"fg":4,"bold":true}]],"39":[["~                   ",{"fg":4,"bold":true}],["|",{"inverse":true}],[" 81 ",{"fg":3,"bold":true}],["Place a '*' or '+' mark after the day.  Acceptable values are 'left',                                           ",{}],["|",{"inverse":true}],["~                     ",{"fg":4,"bold":true}]],"40":[["~                   ",{"fg":4,"bold":true}],["|",{"inverse":true}],[" 82 ",{"fg":3,"bold":true}],["'left-fit', and 'right': >                                                                                      ",{}],["|",{"inverse":true}],["~                     ",{"fg":4,"bold":true}]],"41":[["~                   ",{"fg":4,"bold":true}],["|",{"inverse":true}],[" 83 ",{"fg":3,"bold":true}],["  let g:calendar_mark = 'right'                                                                                 ",{}],["|",{"inverse":true}],["~                     ",{"fg":4,"bold":true}]],"42":[["~                   ",{"fg":4,"bold":true}],["|",{"inverse":true}],[" 84 ",{"fg":3,"bold":true}],["<                                                                                                               ",{}],["|",{"inverse":true}],["~                     ",{"fg":4,"bold":true}]],"43":[["~                   ",{"fg":4,"bold":true}],["|",{"inverse":true}],[" 85 ",{"fg":3,"bold":true}],["                                                                                                                ",{}],["|",{"inverse":true}],["~                     ",{"fg":4,"bold":true}]],"44":[["~                   ",{"fg":4,"bold":true}],["|",{"inverse":true}],[" 86 ",{"fg":3,"bold":true}],["                               ",{"underline":true}],["                                                                                 ",{}],["|",{"inverse":true}],["~                     ",{"fg":4,"bold":true}]]},"cursor":{"x":56,"y":44,"visible":false}}],[0.038621,{"lines":{"44":[["~                   ",{"fg":4,"bold":true}],["|",{"inverse":true}],[" 86 ",{"fg":3,"bold":true}],["                                                *g:calendar_diary*                                              ",{}],["|",{"inverse":true}],["~                     ",{"fg":4,"bold":true}]],"45":[["~                   ",{"fg":4,"bold":true}],["|",{"inverse":true}],[" 87 ",{"fg":3,"bold":true}],["Specify the directory for the diary files.  The default value is $HOME/diary.                                   ",{"underline":true}],["|",{"inverse":true}],["~                     ",{"fg":4,"bold":true}]],"46":[["[Name] test.cpp      ",{"inverse":true}],[" NORMAL ",{"bold":true}],[" ",{}],["calendar.txt ",{"bold":true}],["                                                        unix │ utf-8 │ text │  39% ",{}],[" LN  87",{"bold":true}],[":1  ",{}],[" ",{"bold":true,"inverse":true}],[" ~/…/calendar-vim/doc>",{"bold":true}]]},"cursor":{"x":25,"y":45,"visible":true}}],[0.005824,{"lines":{"0":[["\" Press <F1> for hel",{"fg":6,"bold":true}],["|",{"inverse":true}],[" 43 ",{"fg":3,"bold":true}],["                                                                                                                ",{}],["|",{"inverse":true}],["  1 ",{"fg":3,"bold":true}],["\" Press ? for help",{"fg":5,"bold":true}]],"1":[["                    ",{}],["|",{"inverse":true}],[" 44 ",{"fg":3,"bold":true}],["calendar.vim makes the following normal mode mappings available:                                                ",{}],["|",{"inverse":true}],["  2 ",{"fg":3,"bold":true}],["                  ",{}]],"2":[["▼",{"fg":3,"bold":true}],[" First",{"fg":5,"bold":true}],[" : ",{}],["struct",{"fg":2,"bold":true}],["    ",{}],["|",{"inverse":true}],[" 45 ",{"fg":3,"bold":true}],["                                                                                                                ",{}],["|",{"inverse":true}],["  3 ",{"fg":3,"bold":true}],[".. (up a dir)",{"fg":6,"bold":true}],["     ",{}]],"3":[["    [prototypes]",{"fg":6,"bold":true}],["    ",{}],["|",{"inverse":true}],[" 46 ",{"fg":3,"bold":true}],["                                                *calendar-cal*                                                  ",{}],["|",{"inverse":true}],["  4 /root/",{"fg":3,"bold":true}],["            ",{}]],"4":[["   ",{}],["+",{"fg":2,"bold":true}],["FirstRun(void)  ",{}],["|",{"inverse":true}],[" 47 ",{"fg":3,"bold":true}],["<LocalLeader>cal          Brings up the calendar in a vertical split.                                           ",{}],["|",{"inverse":true}],["  5 ",{"fg":3,"bold":true}],["▸ .asciinema/",{"fg":6,"bold":true}],["     ",{}]],"5":[["   ",{}],["+",{"fg":2,"bold":true}],["FirstRun2(void) ",{}],["|",{"inverse":true}],[" 48 ",{"fg":3,"bold":true}],["                          Equivalent to calling |:Calendar|.                                                    ",{}],["|",{"inverse":true}],["  6 ",{"fg":3,"bold":true}],["▸ .cache/",{"fg":6,"bold":true}],["         ",{}]],"6":[["                    ",{}],["|",{"inverse":true}],[" 49 ",{"fg":3,"bold":true}],["                                                                                                                ",{}],["|",{"inverse":true}],["  7 ",{"fg":3,"bold":true}],["▸ .config/",{"fg":6,"bold":true}],["        ",{}]],"7":[["▼",{"fg":3,"bold":true}],[" Last",{"fg":5,"bold":true}],[" : ",{}],["struct",{"fg":2,"bold":true}],["     ",{}],["|",{"inverse":true}],[" 50 ",{"fg":3,"bold":true}],["                                                *calendar-caL*                                                  ",{}],["|",{"inverse":true}],["  8 ",{"fg":3,"bold":true}],["▸ .dbus/",{"fg":6,"bold":true}],["          ",{}]],"8":[["    [functions]",{"fg":6,"bold":true}],["     ",{}],["|",{"inverse":true}],[" 51 ",{"fg":3,"bold":true}],["<LocalLeader>",{}],["caL ",{"bg":1}],["        ",{}],[" Bri",{"bg":1}],["ngs up the calendar in a horizontal split.                                         ",{}],["|",{"inverse":true}],["  9 ",{"fg":3,"bold":true}],["▸ .gnupg/",{"fg":6,"bold":true}],["         ",{}]],"9":[["   ",{}],["+",{"fg":2,"bold":true}],["FirstRun(void)  ",{}],["|",{"inverse":true}],[" 52 ",{"fg":3,"bold":true}],["                          Equivalent to calling |:CalendarH|.                                                   ",{}],["|",{"inverse":true}],[" 10 ",{"fg":3,"bold":true}],["▸ .kde/",{"fg":6,"bold":true}],["           ",{}]],"10":[["   ",{}],["+",{"fg":2,"bold":true}],["FirstRun2(void) ",{}],["|",{"inverse":true}],[" 53 ",{"fg":3,"bold":true}],["                                                                                                                ",{}],["|",{"inverse":true}],[" 11 ",{"fg":3,"bold":true}],["▸ .local/",{"fg":6,"bold":true}],["         ",{}]],"11":[["   ",{}],["+",{"fg":2,"bold":true}],["~Last()         ",{}],["|",{"inverse":true}],[" 54 ",{"fg":3,"bold":true}],["SETTINGS                                        *calendar-settings*                                             ",{}],["|",{"inverse":true}],[" 12 ",{"fg":3,"bold":true}],["▸ .pki/",{"fg":6,"bold":true}],["           ",{}]],"12":[["   ",{}],["+",{"fg":2,"bold":true}],["SecondRun(void) ",{}],["|",{"inverse":true}],[" 55 ",{"fg":3,"bold":true}],["                                                                                                                ",{}],["|",{"inverse":true}],[" 13 ",{"fg":3,"bold":true}],["▸ .ssh/",{"fg":6,"bold":true}],["           ",{}]],"13":[["   ",{}],["+",{"fg":2,"bold":true}],["SecondRun2(void)",{}],["|",{"inverse":true}],[" 56 ",{"fg":3,"bold":true}],["calendar.vim can be con",{}],["figured using the following sett",{"bg":1}],["ings:                                                    ",{}],["|",{"inverse":true}],[" 14 ",{"fg":3,"bold":true}],["▸ .vim/",{"fg":6,"bold":true}],["           ",{}]],"14":[["                    ",{}],["|",{"inverse":true}],[" 57 ",{"fg":3,"bold":true}],["                                                                                                                ",{}],["|",{"inverse":true}],[" 15 ",{"fg":3,"bold":true}],["▸ diary/",{"fg":6,"bold":true}],["          ",{}]],"15":[["▼",{"fg":3,"bold":true}],[" Second",{"fg":5,"bold":true}],[" : ",{}],["struct",{"fg":2,"bold":true}],["   ",{}],["|",{"inverse":true}],[" 58 ",{"fg":3,"bold":true}],["                                                *g:calendar_focus_today*                                        ",{}],["|",{"inverse":true}],[" 16 ",{"fg":3,"bold":true}],["▸ temp/",{"fg":6,"bold":true}],["           ",{}]],"16":[["    [prototypes]",{"fg":6,"bold":true}],["    ",{}],["|",{"inverse":true}],[" 59 ",{"fg":3,"bold":true}],["Keeps focus when moving to next or previous calendar: >                                                         ",{}],["|",{"inverse":true}],[" 17 ",{"fg":3,"bold":true}],["  .bash_history   ",{}]],"17":[["   ",{}],["+",{"fg":2,"bold":true}],["SecondRun(void) ",{}],["|",{"inverse":true}],[" 60 ",{"fg":3,"bold":true}],["  let g:calendar_focus_today = 1                                                                                ",{}],["|",{"inverse":true}],[" 18 ",{"fg":3,"bold":true}],["  .bash_logout    ",{}]],"18":[["   ",{}],["+",{"fg":2,"bold":true}],["SecondRun2(void)",{}],["|",{"inverse":true}],[" 61 ",{"fg":3,"bold":true}],["<                                                                                                               ",{}],["|",{"inverse":true}],[" 19 ",{"fg":3,"bold":true}],["  .bash_profile   ",{"underline":true}]],"19":[["                    ",{}],["|",{"inverse":true}],[" 62 ",{"fg":3,"bold":true}],["                                                                                                                ",{}],["|",{"inverse":true}],[" 20 ",{"fg":3,"bold":true}],["  .bashrc         ",{}]],"20":[["▼",{"fg":3,"bold":true}],[" ",{}],["functions",{"fg":6,"bold":true}],["         ",{}],["|",{"inverse":true}],[" 63 ",{"fg":3,"bold":true}],["                                                *g:calendar_keys*                                               ",{}],["|",{"inverse":true}],[" 21 ",{"fg":3,"bold":true}],["  .cshrc          ",{}]],"21":[["    main(int argc, c",{"underline":true}],["|",{"inverse":true}],[" 64 ",{"fg":3,"bold":true}],["To change the key bindings in the calendar window, add entries to this                                          ",{}],["|",{"inverse":true}],[" 22 ",{"fg":3,"bold":true}],["  .dmrc           ",{}]],"22":[["~                   ",{"fg":4,"bold":true}],["|",{"inverse":true}],[" 65 ",{"fg":3,"bold":true}],["dictionary.   Possible keys, the action bound to the keycode given in the                                       ",{}],["|",{"inverse":true}],[" 23 ",{"fg":3,"bold":true}],["  .esd_auth       ",{}]],"23":[["~                   ",{"fg":4,"bold":true}],["|",{"inverse":true}],[" 66 ",{"fg":3,"bold":true}],["respective value for this key and the default binding are listed below.                                         ",{}],["|",{"inverse":true}],[" 24 ",{"fg":3,"bold":true}],["  .gtkrc-2.0      ",{}]],"24":[["~                   ",{"fg":4,"bold":true}],["|",{"inverse":true}],[" 67 ",{"fg":3,"bold":true}],["'close'                     Closes calendar window.             'q'                                             ",{}],["|",{"inverse":true}],[" 25 ",{"fg":3,"bold":true}],["  .gtkrc-2.0-kde4 ",{}]],"25":[["~                   ",{"fg":4,"bold":true}],["|",{"inverse":true}],[" 68 ",{"fg":3,"bold":true}],["'do_action'                 Executes |calendar_action|.           '<CR>'                                        ",{}],["|",{"inverse":true}],[" 26 ",{"fg":3,"bold":true}],["  .lesshst        ",{}]],"26":[["~                   ",{"fg":4,"bold":true}],["|",{"inverse":true}],[" 69 ",{"fg":3,"bold":true}],["'goto_today'                Executes |calendar_today|.            't'                                           ",{}],["|",{"inverse":true}],[" 27 ",{"fg":3,"bold":true}],["  .tcshrc         ",{}]],"27":[["~                   ",{"fg":4,"bold":true}],["|",{"inverse":true}],[" 70 ",{"fg":3,"bold":true}],["'show_help'                 Displays a short help message.      '?'                                             ",{}],["|",{"inverse":true}],[" 28 ",{"fg":3,"bold":true}],["  .viminfo        ",{}]],"28":[["~                   ",{"fg":4,"bold":true}],["|",{"inverse":true}],[" 71 ",{"fg":3,"bold":true}],["'redisplay'                 Redraws calendar window.            'r'                                             ",{}],["|",{"inverse":true}],[" 29 ",{"fg":3,"bold":true}],["  .vimrc          ",{}]],"29":[["~                   ",{"fg":4,"bold":true}],["|",{"inverse":true}],[" 72 ",{"fg":3,"bold":true}],["'goto_next_month'           Jumps to the next month.            '<Right>'                                       ",{}],["|",{"inverse":true}],[" 30 ",{"fg":3,"bold":true}],["  .xsession-errors",{}]],"30":[["~                   ",{"fg":4,"bold":true}],["|",{"inverse":true}],[" 73 ",{"fg":3,"bold":true}],["'goto_prev_month'           Jumps to the previous month.        '<Left>'                                        ",{}],["|",{"inverse":true}],[" 31 ",{"fg":3,"bold":true}],["  anaconda-ks.cfg ",{}]],"31":[["~                   ",{"fg":4,"bold":true}],["|",{"inverse":true}],[" 74 ",{"fg":3,"bold":true}],["'goto_next_year'            Jumps to the next year.             '<Up>'                                          ",{}],["|",{"inverse":true}],[" 32 ",{"fg":3,"bold":true}],["  initial-setup-ks",{}]],"32":[["~                   ",{"fg":4,"bold":true}],["|",{"inverse":true}],[" 75 ",{"fg":3,"bold":true}],["'goto_prev_year'            Jumps to the previous year.         '<Down>'                                        ",{}],["|",{"inverse":true}],[" 33 ",{"fg":3,"bold":true}],["  test.c          ",{}]],"33":[["~                   ",{"fg":4,"bold":true}],["|",{"inverse":true}],[" 76 ",{"fg":3,"bold":true}],["An example in your .vimrc might look like this: >                                                               ",{}],["|",{"inverse":true}],[" 34 ",{"fg":3,"bold":true}],["  test.cpp        ",{}]],"34":[["~                   ",{"fg":4,"bold":true}],["|",{"inverse":true}],[" 77 ",{"fg":3,"bold":true}],["  let g:calendar_keys = { 'goto_next_month': '<C-Right>', 'goto_prev_month': '<C-Left>'}                        ",{}],["|",{"inverse":true}],[" 35 ",{"fg":3,"bold":true}],["  .test.cpp.swp   ",{}]],"35":[["~                   ",{"fg":4,"bold":true}],["|",{"inverse":true}],[" 78 ",{"fg":3,"bold":true}],["<                                                                                                               ",{}],["|",{"inverse":true}],["~                     ",{"fg":4,"bold":true}]],"36":[["~                   ",{"fg":4,"bold":true}],["|",{"inverse":true}],[" 79 ",{"fg":3,"bold":true}],["                                                                                                                ",{}],["|",{"inverse":true}],["~                     ",{"fg":4,"bold":true}]],"37":[["~                   ",{"fg":4,"bold":true}],["|",{"inverse":true}],[" 80 ",{"fg":3,"bold":true}],["                                                *g:calendar_mark*                                               ",{}],["|",{"inverse":true}],["~                     ",{"fg":4,"bold":true}]],"38":[["~                   ",{"fg":4,"bold":true}],["|",{"inverse":true}],[" 81 ",{"fg":3,"bold":true}],["Place a '*' or '+' mark after the day.  Acceptable values are 'left',                                           ",{}],["|",{"inverse":true}],["~                     ",{"fg":4,"bold":true}]],"39":[["~                   ",{"fg":4,"bold":true}],["|",{"inverse":true}],[" 82 ",{"fg":3,"bold":true}],["'left-fit', and 'right': >                                                                                      ",{}],["|",{"inverse":true}],["~                     ",{"fg":4,"bold":true}]],"40":[["~                   ",{"fg":4,"bold":true}],["|",{"inverse":true}],[" 83 ",{"fg":3,"bold":true}],["  let g:calendar_mark = 'right'                                                                                 ",{}],["|",{"inverse":true}],["~                     ",{"fg":4,"bold":true}]],"41":[["~                   ",{"fg":4,"bold":true}],["|",{"inverse":true}],[" 84 ",{"fg":3,"bold":true}],["<                                                                                                               ",{}],["|",{"inverse":true}],["~                     ",{"fg":4,"bold":true}]],"42":[["~                   ",{"fg":4,"bold":true}],["|",{"inverse":true}],[" 85 ",{"fg":3,"bold":true}],["                                                                                                                ",{}],["|",{"inverse":true}],["~                     ",{"fg":4,"bold":true}]],"43":[["~                   ",{"fg":4,"bold":true}],["|",{"inverse":true}],[" 86 ",{"fg":3,"bold":true}],["                                                *g:calendar_diary*                                              ",{}],["|",{"inverse":true}],["~                     ",{"fg":4,"bold":true}]],"44":[["~                   ",{"fg":4,"bold":true}],["|",{"inverse":true}],[" 87 ",{"fg":3,"bold":true}],["Specify the directory for the diary files.  The ",{"underline":true}],["*g:calendar_diary*                                              ",{}],["|",{"inverse":true}],["~                     ",{"fg":4,"bold":true}]]},"cursor":{"x":73,"y":44,"visible":false}}],[0.021603,{"lines":{"44":[["~                   ",{"fg":4,"bold":true}],["|",{"inverse":true}],[" 87 ",{"fg":3,"bold":true}],["Specify the directory for the diary files.  The default value is $HOME/diary.                                   ",{}],["|",{"inverse":true}],["~                     ",{"fg":4,"bold":true}]],"45":[["~                   ",{"fg":4,"bold":true}],["|",{"inverse":true}],[" 88 ",{"fg":3,"bold":true}],["  let g:calendar_diary=$HOME.'/.vim/diary'                                                                      ",{"underline":true}],["|",{"inverse":true}],["~                     ",{"fg":4,"bold":true}]],"46":[["[Name] test.cpp      ",{"inverse":true}],[" NORMAL ",{"bold":true}],[" ",{}],["calendar.txt ",{"bold":true}],["                                                        unix │ utf-8 │ text │  40% ",{}],[" LN  88",{"bold":true}],[":1  ",{}],[" ",{"bold":true,"inverse":true}],[" ~/…/calendar-vim/doc>",{"bold":true}]]},"cursor":{"x":25,"y":45,"visible":true}}],[0.004507,{"lines":{"0":[["\" Press <F1> for hel",{"fg":6,"bold":true}],["|",{"inverse":true}],[" 44 ",{"fg":3,"bold":true}],["calendar.vim makes the following normal mode mappings available:                                                ",{}],["|",{"inverse":true}],["  1 ",{"fg":3,"bold":true}],["\" Press ? for help",{"fg":5,"bold":true}]],"1":[["                    ",{}],["|",{"inverse":true}],[" 45 ",{"fg":3,"bold":true}],["                                                                                                                ",{}],["|",{"inverse":true}],["  2 ",{"fg":3,"bold":true}],["                  ",{}]],"2":[["▼",{"fg":3,"bold":true}],[" First",{"fg":5,"bold":true}],[" : ",{}],["struct",{"fg":2,"bold":true}],["    ",{}],["|",{"inverse":true}],[" 46 ",{"fg":3,"bold":true}],["                                                *calendar-cal*                                                  ",{}],["|",{"inverse":true}],["  3 ",{"fg":3,"bold":true}],[".. (up a dir)",{"fg":6,"bold":true}],["     ",{}]],"3":[["    [prototypes]",{"fg":6,"bold":true}],["    ",{}],["|",{"inverse":true}],[" 47 ",{"fg":3,"bold":true}],["<LocalLeader>cal          Brings up the calendar in a vertical split.                                           ",{}],["|",{"inverse":true}],["  4 /root/",{"fg":3,"bold":true}],["            ",{}]],"4":[["   ",{}],["+",{"fg":2,"bold":true}],["FirstRun(void)  ",{}],["|",{"inverse":true}],[" 48 ",{"fg":3,"bold":true}],["                          Equivalent to calling |:Calendar|.                                                    ",{}],["|",{"inverse":true}],["  5 ",{"fg":3,"bold":true}],["▸ .asciinema/",{"fg":6,"bold":true}],["     ",{}]],"5":[["   ",{}],["+",{"fg":2,"bold":true}],["FirstRun2(void) ",{}],["|",{"inverse":true}],[" 49 ",{"fg":3,"bold":true}],["                                                                                                                ",{}],["|",{"inverse":true}],["  6 ",{"fg":3,"bold":true}],["▸ .cache/",{"fg":6,"bold":true}],["         ",{}]],"6":[["                    ",{}],["|",{"inverse":true}],[" 50 ",{"fg":3,"bold":true}],["                                                *calendar-caL*                                                  ",{}],["|",{"inverse":true}],["  7 ",{"fg":3,"bold":true}],["▸ .config/",{"fg":6,"bold":true}],["        ",{}]],"7":[["▼",{"fg":3,"bold":true}],[" Last",{"fg":5,"bold":true}],[" : ",{}],["struct",{"fg":2,"bold":true}],["     ",{}],["|",{"inverse":true}],[" 51 ",{"fg":3,"bold":true}],["<LocalLeader>",{}],["caL ",{"bg":1}],["        ",{}],[" Bri",{"bg":1}],["ngs up the calendar in a horizontal split.                                         ",{}],["|",{"inverse":true}],["  8 ",{"fg":3,"bold":true}],["▸ .dbus/",{"fg":6,"bold":true}],["          ",{}]],"8":[["    [functions]",{"fg":6,"bold":true}],["     ",{}],["|",{"inverse":true}],[" 52 ",{"fg":3,"bold":true}],["                          Equivalent to calling |:CalendarH|.                                                   ",{}],["|",{"inverse":true}],["  9 ",{"fg":3,"bold":true}],["▸ .gnupg/",{"fg":6,"bold":true}],["         ",{}]],"9":[["   ",{}],["+",{"fg":2,"bold":true}],["FirstRun(void)  ",{}],["|",{"inverse":true}],[" 53 ",{"fg":3,"bold":true}],["                                                                                                                ",{}],["|",{"inverse":true}],[" 10 ",{"fg":3,"bold":true}],["▸ .kde/",{"fg":6,"bold":true}],["           ",{}]],"10":[["   ",{}],["+",{"fg":2,"bold":true}],["FirstRun2(void) ",{}],["|",{"inverse":true}],[" 54 ",{"fg":3,"bold":true}],["SETTINGS                                        *calendar-settings*                                             ",{}],["|",{"inverse":true}],[" 11 ",{"fg":3,"bold":true}],["▸ .local/",{"fg":6,"bold":true}],["         ",{}]],"11":[["   ",{}],["+",{"fg":2,"bold":true}],["~Last()         ",{}],["|",{"inverse":true}],[" 55 ",{"fg":3,"bold":true}],["                                                                                                                ",{}],["|",{"inverse":true}],[" 12 ",{"fg":3,"bold":true}],["▸ .pki/",{"fg":6,"bold":true}],["           ",{}]],"12":[["   ",{}],["+",{"fg":2,"bold":true}],["SecondRun(void) ",{}],["|",{"inverse":true}],[" 56 ",{"fg":3,"bold":true}],["calendar.vim can be con",{}],["figured using the following sett",{"bg":1}],["ings:                                                    ",{}],["|",{"inverse":true}],[" 13 ",{"fg":3,"bold":true}],["▸ .ssh/",{"fg":6,"bold":true}],["           ",{}]],"13":[["   ",{}],["+",{"fg":2,"bold":true}],["SecondRun2(void)",{}],["|",{"inverse":true}],[" 57 ",{"fg":3,"bold":true}],["                                                                                                                ",{}],["|",{"inverse":true}],[" 14 ",{"fg":3,"bold":true}],["▸ .vim/",{"fg":6,"bold":true}],["           ",{}]],"14":[["                    ",{}],["|",{"inverse":true}],[" 58 ",{"fg":3,"bold":true}],["                                                *g:calendar_focus_today*                                        ",{}],["|",{"inverse":true}],[" 15 ",{"fg":3,"bold":true}],["▸ diary/",{"fg":6,"bold":true}],["          ",{}]],"15":[["▼",{"fg":3,"bold":true}],[" Second",{"fg":5,"bold":true}],[" : ",{}],["struct",{"fg":2,"bold":true}],["   ",{}],["|",{"inverse":true}],[" 59 ",{"fg":3,"bold":true}],["Keeps focus when moving to next or previous calendar: >                                                         ",{}],["|",{"inverse":true}],[" 16 ",{"fg":3,"bold":true}],["▸ temp/",{"fg":6,"bold":true}],["           ",{}]],"16":[["    [prototypes]",{"fg":6,"bold":true}],["    ",{}],["|",{"inverse":true}],[" 60 ",{"fg":3,"bold":true}],["  let g:calendar_focus_today = 1                                                                                ",{}],["|",{"inverse":true}],[" 17 ",{"fg":3,"bold":true}],["  .bash_history   ",{}]],"17":[["   ",{}],["+",{"fg":2,"bold":true}],["SecondRun(void) ",{}],["|",{"inverse":true}],[" 61 ",{"fg":3,"bold":true}],["<                                                                                                               ",{}],["|",{"inverse":true}],[" 18 ",{"fg":3,"bold":true}],["  .bash_logout    ",{}]],"18":[["   ",{}],["+",{"fg":2,"bold":true}],["SecondRun2(void)",{}],["|",{"inverse":true}],[" 62 ",{"fg":3,"bold":true}],["                                                                                                                ",{}],["|",{"inverse":true}],[" 19 ",{"fg":3,"bold":true}],["  .bash_profile   ",{"underline":true}]],"19":[["                    ",{}],["|",{"inverse":true}],[" 63 ",{"fg":3,"bold":true}],["                                                *g:calendar_keys*                                               ",{}],["|",{"inverse":true}],[" 20 ",{"fg":3,"bold":true}],["  .bashrc         ",{}]],"20":[["▼",{"fg":3,"bold":true}],[" ",{}],["functions",{"fg":6,"bold":true}],["         ",{}],["|",{"inverse":true}],[" 64 ",{"fg":3,"bold":true}],["To change the key bindings in the calendar window, add entries to this                                          ",{}],["|",{"inverse":true}],[" 21 ",{"fg":3,"bold":true}],["  .cshrc          ",{}]],"21":[["    main(int argc, c",{"underline":true}],["|",{"inverse":true}],[" 65 ",{"fg":3,"bold":true}],["dictionary.   Possible keys, the action bound to the keycode given in the                                       ",{}],["|",{"inverse":true}],[" 22 ",{"fg":3,"bold":true}],["  .dmrc           ",{}]],"22":[["~                   ",{"fg":4,"bold":true}],["|",{"inverse":true}],[" 66 ",{"fg":3,"bold":true}],["respective value for this key and the default binding are listed below.                                         ",{}],["|",{"inverse":true}],[" 23 ",{"fg":3,"bold":true}],["  .esd_auth       ",{}]],"23":[["~                   ",{"fg":4,"bold":true}],["|",{"inverse":true}],[" 67 ",{"fg":3,"bold":true}],["'close'                     Closes calendar window.             'q'                                             ",{}],["|",{"inverse":true}],[" 24 ",{"fg":3,"bold":true}],["  .gtkrc-2.0      ",{}]],"24":[["~                   ",{"fg":4,"bold":true}],["|",{"inverse":true}],[" 68 ",{"fg":3,"bold":true}],["'do_action'                 Executes |calendar_action|.           '<CR>'                                        ",{}],["|",{"inverse":true}],[" 25 ",{"fg":3,"bold":true}],["  .gtkrc-2.0-kde4 ",{}]],"25":[["~                   ",{"fg":4,"bold":true}],["|",{"inverse":true}],[" 69 ",{"fg":3,"bold":true}],["'goto_today'                Executes |calendar_today|.            't'                                           ",{}],["|",{"inverse":true}],[" 26 ",{"fg":3,"bold":true}],["  .lesshst        ",{}]],"26":[["~                   ",{"fg":4,"bold":true}],["|",{"inverse":true}],[" 70 ",{"fg":3,"bold":true}],["'show_help'                 Displays a short help message.      '?'                                             ",{}],["|",{"inverse":true}],[" 27 ",{"fg":3,"bold":true}],["  .tcshrc         ",{}]],"27":[["~                   ",{"fg":4,"bold":true}],["|",{"inverse":true}],[" 71 ",{"fg":3,"bold":true}],["'redisplay'                 Redraws calendar window.            'r'                                             ",{}],["|",{"inverse":true}],[" 28 ",{"fg":3,"bold":true}],["  .viminfo        ",{}]],"28":[["~                   ",{"fg":4,"bold":true}],["|",{"inverse":true}],[" 72 ",{"fg":3,"bold":true}],["'goto_next_month'           Jumps to the next month.            '<Right>'                                       ",{}],["|",{"inverse":true}],[" 29 ",{"fg":3,"bold":true}],["  .vimrc          ",{}]],"29":[["~                   ",{"fg":4,"bold":true}],["|",{"inverse":true}],[" 73 ",{"fg":3,"bold":true}],["'goto_prev_month'           Jumps to the previous month.        '<Left>'                                        ",{}],["|",{"inverse":true}],[" 30 ",{"fg":3,"bold":true}],["  .xsession-errors",{}]],"30":[["~                   ",{"fg":4,"bold":true}],["|",{"inverse":true}],[" 74 ",{"fg":3,"bold":true}],["'goto_next_year'            Jumps to the next year.             '<Up>'                                          ",{}],["|",{"inverse":true}],[" 31 ",{"fg":3,"bold":true}],["  anaconda-ks.cfg ",{}]],"31":[["~                   ",{"fg":4,"bold":true}],["|",{"inverse":true}],[" 75 ",{"fg":3,"bold":true}],["'goto_prev_year'            Jumps to the previous year.         '<Down>'                                        ",{}],["|",{"inverse":true}],[" 32 ",{"fg":3,"bold":true}],["  initial-setup-ks",{}]],"32":[["~                   ",{"fg":4,"bold":true}],["|",{"inverse":true}],[" 76 ",{"fg":3,"bold":true}],["An example in your .vimrc might look like this: >                                                               ",{}],["|",{"inverse":true}],[" 33 ",{"fg":3,"bold":true}],["  test.c          ",{}]],"33":[["~                   ",{"fg":4,"bold":true}],["|",{"inverse":true}],[" 77 ",{"fg":3,"bold":true}],["  let g:calendar_keys = { 'goto_next_month': '<C-Right>', 'goto_prev_month': '<C-Left>'}                        ",{}],["|",{"inverse":true}],[" 34 ",{"fg":3,"bold":true}],["  test.cpp        ",{}]],"34":[["~                   ",{"fg":4,"bold":true}],["|",{"inverse":true}],[" 78 ",{"fg":3,"bold":true}],["<                                                                                                               ",{}],["|",{"inverse":true}],[" 35 ",{"fg":3,"bold":true}],["  .test.cpp.swp   ",{}]],"35":[["~                   ",{"fg":4,"bold":true}],["|",{"inverse":true}],[" 79 ",{"fg":3,"bold":true}],["                                                                                                                ",{}],["|",{"inverse":true}],["~                     ",{"fg":4,"bold":true}]],"36":[["~                   ",{"fg":4,"bold":true}],["|",{"inverse":true}],[" 80 ",{"fg":3,"bold":true}],["                                                *g:calendar_mark*                                               ",{}],["|",{"inverse":true}],["~                     ",{"fg":4,"bold":true}]],"37":[["~                   ",{"fg":4,"bold":true}],["|",{"inverse":true}],[" 81 ",{"fg":3,"bold":true}],["Place a '*' or '+' mark after the day.  Acceptable values are 'left',                                           ",{}],["|",{"inverse":true}],["~                     ",{"fg":4,"bold":true}]],"38":[["~                   ",{"fg":4,"bold":true}],["|",{"inverse":true}],[" 82 ",{"fg":3,"bold":true}],["'left-fit', and 'right': >                                                                                      ",{}],["|",{"inverse":true}],["~                     ",{"fg":4,"bold":true}]],"39":[["~                   ",{"fg":4,"bold":true}],["|",{"inverse":true}],[" 83 ",{"fg":3,"bold":true}],["  let g:calendar_mark = 'right'                                                                                 ",{}],["|",{"inverse":true}],["~                     ",{"fg":4,"bold":true}]],"40":[["~                   ",{"fg":4,"bold":true}],["|",{"inverse":true}],[" 84 ",{"fg":3,"bold":true}],["<                                                                                                               ",{}],["|",{"inverse":true}],["~                     ",{"fg":4,"bold":true}]],"41":[["~                   ",{"fg":4,"bold":true}],["|",{"inverse":true}],[" 85 ",{"fg":3,"bold":true}],["                                                                                                                ",{}],["|",{"inverse":true}],["~                     ",{"fg":4,"bold":true}]],"42":[["~                   ",{"fg":4,"bold":true}],["|",{"inverse":true}],[" 86 ",{"fg":3,"bold":true}],["                                                *g:calendar_diary*                                              ",{}],["|",{"inverse":true}],["~                     ",{"fg":4,"bold":true}]],"43":[["~                   ",{"fg":4,"bold":true}],["|",{"inverse":true}],[" 87 ",{"fg":3,"bold":true}],["Specify the directory for the diary files.  The default value is $HOME/diary.                                   ",{}],["|",{"inverse":true}],["~                     ",{"fg":4,"bold":true}]],"44":[["~                   ",{"fg":4,"bold":true}],["|",{"inverse":true}],[" 88 ",{"fg":3,"bold":true}],["  let g:calendar_diary=$HOME.'/.vim/diary'      ",{"underline":true}],["default value is $HOME/diary.                                   ",{}],["|",{"inverse":true}],["~                     ",{"fg":4,"bold":true}]]},"cursor":{"x":73,"y":44,"visible":false}}],[0.03822,{"lines":{"44":[["~                   ",{"fg":4,"bold":true}],["|",{"inverse":true}],[" 88 ",{"fg":3,"bold":true}],["  let g:calendar_diary=$HOME.'/.vim/diary'                                                                      ",{}],["|",{"inverse":true}],["~                     ",{"fg":4,"bold":true}]],"45":[["~                   ",{"fg":4,"bold":true}],["|",{"inverse":true}],[" 89 ",{"fg":3,"bold":true}],["                                                                                                                ",{"underline":true}],["|",{"inverse":true}],["~                     ",{"fg":4,"bold":true}]],"46":[["[Name] test.cpp      ",{"inverse":true}],[" NORMAL ",{"bold":true}],[" ",{}],["calendar.txt ",{"bold":true}],["                                                        unix │ utf-8 │ text │  40% ",{}],[" LN  89",{"bold":true}],[":1  ",{}],[" ",{"bold":true,"inverse":true}],[" ~/…/calendar-vim/doc>",{"bold":true}]]},"cursor":{"x":25,"y":45,"visible":true}}],[0.00454,{"lines":{"0":[["\" Press <F1> for hel",{"fg":6,"bold":true}],["|",{"inverse":true}],[" 45 ",{"fg":3,"bold":true}],["                                                                                                                ",{}],["|",{"inverse":true}],["  1 ",{"fg":3,"bold":true}],["\" Press ? for help",{"fg":5,"bold":true}]],"1":[["                    ",{}],["|",{"inverse":true}],[" 46 ",{"fg":3,"bold":true}],["                                                *calendar-cal*                                                  ",{}],["|",{"inverse":true}],["  2 ",{"fg":3,"bold":true}],["                  ",{}]],"2":[["▼",{"fg":3,"bold":true}],[" First",{"fg":5,"bold":true}],[" : ",{}],["struct",{"fg":2,"bold":true}],["    ",{}],["|",{"inverse":true}],[" 47 ",{"fg":3,"bold":true}],["<LocalLeader>cal          Brings up the calendar in a vertical split.                                           ",{}],["|",{"inverse":true}],["  3 ",{"fg":3,"bold":true}],[".. (up a dir)",{"fg":6,"bold":true}],["     ",{}]],"3":[["    [prototypes]",{"fg":6,"bold":true}],["    ",{}],["|",{"inverse":true}],[" 48 ",{"fg":3,"bold":true}],["                          Equivalent to calling |:Calendar|.                                                    ",{}],["|",{"inverse":true}],["  4 /root/",{"fg":3,"bold":true}],["            ",{}]],"4":[["   ",{}],["+",{"fg":2,"bold":true}],["FirstRun(void)  ",{}],["|",{"inverse":true}],[" 49 ",{"fg":3,"bold":true}],["                                                                                                                ",{}],["|",{"inverse":true}],["  5 ",{"fg":3,"bold":true}],["▸ .asciinema/",{"fg":6,"bold":true}],["     ",{}]],"5":[["   ",{}],["+",{"fg":2,"bold":true}],["FirstRun2(void) ",{}],["|",{"inverse":true}],[" 50 ",{"fg":3,"bold":true}],["                                                *calendar-caL*                                                  ",{}],["|",{"inverse":true}],["  6 ",{"fg":3,"bold":true}],["▸ .cache/",{"fg":6,"bold":true}],["         ",{}]],"6":[["                    ",{}],["|",{"inverse":true}],[" 51 ",{"fg":3,"bold":true}],["<LocalLeader>",{}],["caL ",{"bg":1}],["        ",{}],[" Bri",{"bg":1}],["ngs up the calendar in a horizontal split.                                         ",{}],["|",{"inverse":true}],["  7 ",{"fg":3,"bold":true}],["▸ .config/",{"fg":6,"bold":true}],["        ",{}]],"7":[["▼",{"fg":3,"bold":true}],[" Last",{"fg":5,"bold":true}],[" : ",{}],["struct",{"fg":2,"bold":true}],["     ",{}],["|",{"inverse":true}],[" 52 ",{"fg":3,"bold":true}],["                          Equivalent to calling |:CalendarH|.                                                   ",{}],["|",{"inverse":true}],["  8 ",{"fg":3,"bold":true}],["▸ .dbus/",{"fg":6,"bold":true}],["          ",{}]],"8":[["    [functions]",{"fg":6,"bold":true}],["     ",{}],["|",{"inverse":true}],[" 53 ",{"fg":3,"bold":true}],["                                                                                                                ",{}],["|",{"inverse":true}],["  9 ",{"fg":3,"bold":true}],["▸ .gnupg/",{"fg":6,"bold":true}],["         ",{}]],"9":[["   ",{}],["+",{"fg":2,"bold":true}],["FirstRun(void)  ",{}],["|",{"inverse":true}],[" 54 ",{"fg":3,"bold":true}],["SETTINGS                                        *calendar-settings*                                             ",{}],["|",{"inverse":true}],[" 10 ",{"fg":3,"bold":true}],["▸ .kde/",{"fg":6,"bold":true}],["           ",{}]],"10":[["   ",{}],["+",{"fg":2,"bold":true}],["FirstRun2(void) ",{}],["|",{"inverse":true}],[" 55 ",{"fg":3,"bold":true}],["                                                                                                                ",{}],["|",{"inverse":true}],[" 11 ",{"fg":3,"bold":true}],["▸ .local/",{"fg":6,"bold":true}],["         ",{}]],"11":[["   ",{}],["+",{"fg":2,"bold":true}],["~Last()         ",{}],["|",{"inverse":true}],[" 56 ",{"fg":3,"bold":true}],["calendar.vim can be con",{}],["figured using the following sett",{"bg":1}],["ings:                                                    ",{}],["|",{"inverse":true}],[" 12 ",{"fg":3,"bold":true}],["▸ .pki/",{"fg":6,"bold":true}],["           ",{}]],"12":[["   ",{}],["+",{"fg":2,"bold":true}],["SecondRun(void) ",{}],["|",{"inverse":true}],[" 57 ",{"fg":3,"bold":true}],["                                                                                                                ",{}],["|",{"inverse":true}],[" 13 ",{"fg":3,"bold":true}],["▸ .ssh/",{"fg":6,"bold":true}],["           ",{}]],"13":[["   ",{}],["+",{"fg":2,"bold":true}],["SecondRun2(void)",{}],["|",{"inverse":true}],[" 58 ",{"fg":3,"bold":true}],["                                                *g:calendar_focus_today*                                        ",{}],["|",{"inverse":true}],[" 14 ",{"fg":3,"bold":true}],["▸ .vim/",{"fg":6,"bold":true}],["           ",{}]],"14":[["                    ",{}],["|",{"inverse":true}],[" 59 ",{"fg":3,"bold":true}],["Keeps focus when moving to next or previous calendar: >                                                         ",{}],["|",{"inverse":true}],[" 15 ",{"fg":3,"bold":true}],["▸ diary/",{"fg":6,"bold":true}],["          ",{}]],"15":[["▼",{"fg":3,"bold":true}],[" Second",{"fg":5,"bold":true}],[" : ",{}],["struct",{"fg":2,"bold":true}],["   ",{}],["|",{"inverse":true}],[" 60 ",{"fg":3,"bold":true}],["  let g:calendar_focus_today = 1                                                                                ",{}],["|",{"inverse":true}],[" 16 ",{"fg":3,"bold":true}],["▸ temp/",{"fg":6,"bold":true}],["           ",{}]],"16":[["    [prototypes]",{"fg":6,"bold":true}],["    ",{}],["|",{"inverse":true}],[" 61 ",{"fg":3,"bold":true}],["<                                                                                                               ",{}],["|",{"inverse":true}],[" 17 ",{"fg":3,"bold":true}],["  .bash_history   ",{}]],"17":[["   ",{}],["+",{"fg":2,"bold":true}],["SecondRun(void) ",{}],["|",{"inverse":true}],[" 62 ",{"fg":3,"bold":true}],["                                                                                                                ",{}],["|",{"inverse":true}],[" 18 ",{"fg":3,"bold":true}],["  .bash_logout    ",{}]],"18":[["   ",{}],["+",{"fg":2,"bold":true}],["SecondRun2(void)",{}],["|",{"inverse":true}],[" 63 ",{"fg":3,"bold":true}],["                                                *g:calendar_keys*                                               ",{}],["|",{"inverse":true}],[" 19 ",{"fg":3,"bold":true}],["  .bash_profile   ",{"underline":true}]],"19":[["                    ",{}],["|",{"inverse":true}],[" 64 ",{"fg":3,"bold":true}],["To change the key bindings in the calendar window, add entries to this                                          ",{}],["|",{"inverse":true}],[" 20 ",{"fg":3,"bold":true}],["  .bashrc         ",{}]],"20":[["▼",{"fg":3,"bold":true}],[" ",{}],["functions",{"fg":6,"bold":true}],["         ",{}],["|",{"inverse":true}],[" 65 ",{"fg":3,"bold":true}],["dictionary.   Possible keys, the action bound to the keycode given in the                                       ",{}],["|",{"inverse":true}],[" 21 ",{"fg":3,"bold":true}],["  .cshrc          ",{}]],"21":[["    main(int argc, c",{"underline":true}],["|",{"inverse":true}],[" 66 ",{"fg":3,"bold":true}],["respective value for this key and the default binding are listed below.                                         ",{}],["|",{"inverse":true}],[" 22 ",{"fg":3,"bold":true}],["  .dmrc           ",{}]],"22":[["~                   ",{"fg":4,"bold":true}],["|",{"inverse":true}],[" 67 ",{"fg":3,"bold":true}],["'close'                     Closes calendar window.             'q'                                             ",{}],["|",{"inverse":true}],[" 23 ",{"fg":3,"bold":true}],["  .esd_auth       ",{}]],"23":[["~                   ",{"fg":4,"bold":true}],["|",{"inverse":true}],[" 68 ",{"fg":3,"bold":true}],["'do_action'                 Executes |calendar_action|.           '<CR>'                                        ",{}],["|",{"inverse":true}],[" 24 ",{"fg":3,"bold":true}],["  .gtkrc-2.0      ",{}]],"24":[["~                   ",{"fg":4,"bold":true}],["|",{"inverse":true}],[" 69 ",{"fg":3,"bold":true}],["'goto_today'                Executes |calendar_today|.            't'                                           ",{}],["|",{"inverse":true}],[" 25 ",{"fg":3,"bold":true}],["  .gtkrc-2.0-kde4 ",{}]],"25":[["~                   ",{"fg":4,"bold":true}],["|",{"inverse":true}],[" 70 ",{"fg":3,"bold":true}],["'show_help'                 Displays a short help message.      '?'                                             ",{}],["|",{"inverse":true}],[" 26 ",{"fg":3,"bold":true}],["  .lesshst        ",{}]],"26":[["~                   ",{"fg":4,"bold":true}],["|",{"inverse":true}],[" 71 ",{"fg":3,"bold":true}],["'redisplay'                 Redraws calendar window.            'r'                                             ",{}],["|",{"inverse":true}],[" 27 ",{"fg":3,"bold":true}],["  .tcshrc         ",{}]],"27":[["~                   ",{"fg":4,"bold":true}],["|",{"inverse":true}],[" 72 ",{"fg":3,"bold":true}],["'goto_next_month'           Jumps to the next month.            '<Right>'                                       ",{}],["|",{"inverse":true}],[" 28 ",{"fg":3,"bold":true}],["  .viminfo        ",{}]],"28":[["~                   ",{"fg":4,"bold":true}],["|",{"inverse":true}],[" 73 ",{"fg":3,"bold":true}],["'goto_prev_month'           Jumps to the previous month.        '<Left>'                                        ",{}],["|",{"inverse":true}],[" 29 ",{"fg":3,"bold":true}],["  .vimrc          ",{}]],"29":[["~                   ",{"fg":4,"bold":true}],["|",{"inverse":true}],[" 74 ",{"fg":3,"bold":true}],["'goto_next_year'            Jumps to the next year.             '<Up>'                                          ",{}],["|",{"inverse":true}],[" 30 ",{"fg":3,"bold":true}],["  .xsession-errors",{}]],"30":[["~                   ",{"fg":4,"bold":true}],["|",{"inverse":true}],[" 75 ",{"fg":3,"bold":true}],["'goto_prev_year'            Jumps to the previous year.         '<Down>'                                        ",{}],["|",{"inverse":true}],[" 31 ",{"fg":3,"bold":true}],["  anaconda-ks.cfg ",{}]],"31":[["~                   ",{"fg":4,"bold":true}],["|",{"inverse":true}],[" 76 ",{"fg":3,"bold":true}],["An example in your .vimrc might look like this: >                                                               ",{}],["|",{"inverse":true}],[" 32 ",{"fg":3,"bold":true}],["  initial-setup-ks",{}]],"32":[["~                   ",{"fg":4,"bold":true}],["|",{"inverse":true}],[" 77 ",{"fg":3,"bold":true}],["  let g:calendar_keys = { 'goto_next_month': '<C-Right>', 'goto_prev_month': '<C-Left>'}                        ",{}],["|",{"inverse":true}],[" 33 ",{"fg":3,"bold":true}],["  test.c          ",{}]],"33":[["~                   ",{"fg":4,"bold":true}],["|",{"inverse":true}],[" 78 ",{"fg":3,"bold":true}],["<                                                                                                               ",{}],["|",{"inverse":true}],[" 34 ",{"fg":3,"bold":true}],["  test.cpp        ",{}]],"34":[["~                   ",{"fg":4,"bold":true}],["|",{"inverse":true}],[" 79 ",{"fg":3,"bold":true}],["                                                                                                                ",{}],["|",{"inverse":true}],[" 35 ",{"fg":3,"bold":true}],["  .test.cpp.swp   ",{}]],"35":[["~                   ",{"fg":4,"bold":true}],["|",{"inverse":true}],[" 80 ",{"fg":3,"bold":true}],["                                                *g:calendar_mark*                                               ",{}],["|",{"inverse":true}],["~                     ",{"fg":4,"bold":true}]],"36":[["~                   ",{"fg":4,"bold":true}],["|",{"inverse":true}],[" 81 ",{"fg":3,"bold":true}],["Place a '*' or '+' mark after the day.  Acceptable values are 'left',                                           ",{}],["|",{"inverse":true}],["~                     ",{"fg":4,"bold":true}]],"37":[["~                   ",{"fg":4,"bold":true}],["|",{"inverse":true}],[" 82 ",{"fg":3,"bold":true}],["'left-fit', and 'right': >                                                                                      ",{}],["|",{"inverse":true}],["~                     ",{"fg":4,"bold":true}]],"38":[["~                   ",{"fg":4,"bold":true}],["|",{"inverse":true}],[" 83 ",{"fg":3,"bold":true}],["  let g:calendar_mark = 'right'                                                                                 ",{}],["|",{"inverse":true}],["~                     ",{"fg":4,"bold":true}]],"39":[["~                   ",{"fg":4,"bold":true}],["|",{"inverse":true}],[" 84 ",{"fg":3,"bold":true}],["<                                                                                                               ",{}],["|",{"inverse":true}],["~                     ",{"fg":4,"bold":true}]],"40":[["~                   ",{"fg":4,"bold":true}],["|",{"inverse":true}],[" 85 ",{"fg":3,"bold":true}],["                                                                                                                ",{}],["|",{"inverse":true}],["~                     ",{"fg":4,"bold":true}]],"41":[["~                   ",{"fg":4,"bold":true}],["|",{"inverse":true}],[" 86 ",{"fg":3,"bold":true}],["                                                *g:calendar_diary*                                              ",{}],["|",{"inverse":true}],["~                     ",{"fg":4,"bold":true}]],"42":[["~                   ",{"fg":4,"bold":true}],["|",{"inverse":true}],[" 87 ",{"fg":3,"bold":true}],["Specify the directory for the diary files.  The default value is $HOME/diary.                                   ",{}],["|",{"inverse":true}],["~                     ",{"fg":4,"bold":true}]],"43":[["~                   ",{"fg":4,"bold":true}],["|",{"inverse":true}],[" 88 ",{"fg":3,"bold":true}],["  let g:calendar_diary=$HOME.'/.vim/diary'                                                                      ",{}],["|",{"inverse":true}],["~                     ",{"fg":4,"bold":true}]],"44":[["~                   ",{"fg":4,"bold":true}],["|",{"inverse":true}],[" 89 ",{"fg":3,"bold":true}],["                                                ",{"underline":true}],["                                                                ",{}],["|",{"inverse":true}],["~                     ",{"fg":4,"bold":true}]]},"cursor":{"x":73,"y":44,"visible":false}}],[0.019036,{"lines":{"44":[["~                   ",{"fg":4,"bold":true}],["|",{"inverse":true}],[" 89 ",{"fg":3,"bold":true}],["                                                                                                                ",{}],["|",{"inverse":true}],["~                     ",{"fg":4,"bold":true}]],"45":[["~                   ",{"fg":4,"bold":true}],["|",{"inverse":true}],[" 90 ",{"fg":3,"bold":true}],["                                                                                                                ",{"underline":true}],["|",{"inverse":true}],["~                     ",{"fg":4,"bold":true}]],"46":[["[Name] test.cpp      ",{"inverse":true}],[" NORMAL ",{"bold":true}],[" ",{}],["calendar.txt ",{"bold":true}],["                                                        unix │ utf-8 │ text │  40% ",{}],[" LN  90",{"bold":true}],[":1  ",{}],[" ",{"bold":true,"inverse":true}],[" ~/…/calendar-vim/doc>",{"bold":true}]]},"cursor":{"x":25,"y":45,"visible":true}}],[0.004109,{"lines":{"0":[["\" Press <F1> for hel",{"fg":6,"bold":true}],["|",{"inverse":true}],[" 46 ",{"fg":3,"bold":true}],["                                                *calendar-cal*                                                  ",{}],["|",{"inverse":true}],["  1 ",{"fg":3,"bold":true}],["\" Press ? for help",{"fg":5,"bold":true}]],"1":[["                    ",{}],["|",{"inverse":true}],[" 47 ",{"fg":3,"bold":true}],["<LocalLeader>cal          Brings up the calendar in a vertical split.                                           ",{}],["|",{"inverse":true}],["  2 ",{"fg":3,"bold":true}],["                  ",{}]],"2":[["▼",{"fg":3,"bold":true}],[" First",{"fg":5,"bold":true}],[" : ",{}],["struct",{"fg":2,"bold":true}],["    ",{}],["|",{"inverse":true}],[" 48 ",{"fg":3,"bold":true}],["                          Equivalent to calling |:Calendar|.                                                    ",{}],["|",{"inverse":true}],["  3 ",{"fg":3,"bold":true}],[".. (up a dir)",{"fg":6,"bold":true}],["     ",{}]],"3":[["    [prototypes]",{"fg":6,"bold":true}],["    ",{}],["|",{"inverse":true}],[" 49 ",{"fg":3,"bold":true}],["                                                                                                                ",{}],["|",{"inverse":true}],["  4 /root/",{"fg":3,"bold":true}],["            ",{}]],"4":[["   ",{}],["+",{"fg":2,"bold":true}],["FirstRun(void)  ",{}],["|",{"inverse":true}],[" 50 ",{"fg":3,"bold":true}],["                                                *calendar-caL*                                                  ",{}],["|",{"inverse":true}],["  5 ",{"fg":3,"bold":true}],["▸ .asciinema/",{"fg":6,"bold":true}],["     ",{}]],"5":[["   ",{}],["+",{"fg":2,"bold":true}],["FirstRun2(void) ",{}],["|",{"inverse":true}],[" 51 ",{"fg":3,"bold":true}],["<LocalLeader>",{}],["caL ",{"bg":1}],["        ",{}],[" Bri",{"bg":1}],["ngs up the calendar in a horizontal split.                                         ",{}],["|",{"inverse":true}],["  6 ",{"fg":3,"bold":true}],["▸ .cache/",{"fg":6,"bold":true}],["         ",{}]],"6":[["                    ",{}],["|",{"inverse":true}],[" 52 ",{"fg":3,"bold":true}],["                          Equivalent to calling |:CalendarH|.                                                   ",{}],["|",{"inverse":true}],["  7 ",{"fg":3,"bold":true}],["▸ .config/",{"fg":6,"bold":true}],["        ",{}]],"7":[["▼",{"fg":3,"bold":true}],[" Last",{"fg":5,"bold":true}],[" : ",{}],["struct",{"fg":2,"bold":true}],["     ",{}],["|",{"inverse":true}],[" 53 ",{"fg":3,"bold":true}],["                                                                                                                ",{}],["|",{"inverse":true}],["  8 ",{"fg":3,"bold":true}],["▸ .dbus/",{"fg":6,"bold":true}],["          ",{}]],"8":[["    [functions]",{"fg":6,"bold":true}],["     ",{}],["|",{"inverse":true}],[" 54 ",{"fg":3,"bold":true}],["SETTINGS                                        *calendar-settings*                                             ",{}],["|",{"inverse":true}],["  9 ",{"fg":3,"bold":true}],["▸ .gnupg/",{"fg":6,"bold":true}],["         ",{}]],"9":[["   ",{}],["+",{"fg":2,"bold":true}],["FirstRun(void)  ",{}],["|",{"inverse":true}],[" 55 ",{"fg":3,"bold":true}],["                                                                                                                ",{}],["|",{"inverse":true}],[" 10 ",{"fg":3,"bold":true}],["▸ .kde/",{"fg":6,"bold":true}],["           ",{}]],"10":[["   ",{}],["+",{"fg":2,"bold":true}],["FirstRun2(void) ",{}],["|",{"inverse":true}],[" 56 ",{"fg":3,"bold":true}],["calendar.vim can be con",{}],["figured using the following sett",{"bg":1}],["ings:                                                    ",{}],["|",{"inverse":true}],[" 11 ",{"fg":3,"bold":true}],["▸ .local/",{"fg":6,"bold":true}],["         ",{}]],"11":[["   ",{}],["+",{"fg":2,"bold":true}],["~Last()         ",{}],["|",{"inverse":true}],[" 57 ",{"fg":3,"bold":true}],["                                                                                                                ",{}],["|",{"inverse":true}],[" 12 ",{"fg":3,"bold":true}],["▸ .pki/",{"fg":6,"bold":true}],["           ",{}]],"12":[["   ",{}],["+",{"fg":2,"bold":true}],["SecondRun(void) ",{}],["|",{"inverse":true}],[" 58 ",{"fg":3,"bold":true}],["                                                *g:calendar_focus_today*                                        ",{}],["|",{"inverse":true}],[" 13 ",{"fg":3,"bold":true}],["▸ .ssh/",{"fg":6,"bold":true}],["           ",{}]],"13":[["   ",{}],["+",{"fg":2,"bold":true}],["SecondRun2(void)",{}],["|",{"inverse":true}],[" 59 ",{"fg":3,"bold":true}],["Keeps focus when moving to next or previous calendar: >                                                         ",{}],["|",{"inverse":true}],[" 14 ",{"fg":3,"bold":true}],["▸ .vim/",{"fg":6,"bold":true}],["           ",{}]],"14":[["                    ",{}],["|",{"inverse":true}],[" 60 ",{"fg":3,"bold":true}],["  let g:calendar_focus_today = 1                                                                                ",{}],["|",{"inverse":true}],[" 15 ",{"fg":3,"bold":true}],["▸ diary/",{"fg":6,"bold":true}],["          ",{}]],"15":[["▼",{"fg":3,"bold":true}],[" Second",{"fg":5,"bold":true}],[" : ",{}],["struct",{"fg":2,"bold":true}],["   ",{}],["|",{"inverse":true}],[" 61 ",{"fg":3,"bold":true}],["<                                                                                                               ",{}],["|",{"inverse":true}],[" 16 ",{"fg":3,"bold":true}],["▸ temp/",{"fg":6,"bold":true}],["           ",{}]],"16":[["    [prototypes]",{"fg":6,"bold":true}],["    ",{}],["|",{"inverse":true}],[" 62 ",{"fg":3,"bold":true}],["                                                                                                                ",{}],["|",{"inverse":true}],[" 17 ",{"fg":3,"bold":true}],["  .bash_history   ",{}]],"17":[["   ",{}],["+",{"fg":2,"bold":true}],["SecondRun(void) ",{}],["|",{"inverse":true}],[" 63 ",{"fg":3,"bold":true}],["                                                *g:calendar_keys*                                               ",{}],["|",{"inverse":true}],[" 18 ",{"fg":3,"bold":true}],["  .bash_logout    ",{}]],"18":[["   ",{}],["+",{"fg":2,"bold":true}],["SecondRun2(void)",{}],["|",{"inverse":true}],[" 64 ",{"fg":3,"bold":true}],["To change the key bindings in the calendar window, add entries to this                                          ",{}],["|",{"inverse":true}],[" 19 ",{"fg":3,"bold":true}],["  .bash_profile   ",{"underline":true}]],"19":[["                    ",{}],["|",{"inverse":true}],[" 65 ",{"fg":3,"bold":true}],["dictionary.   Possible keys, the action bound to the keycode given in the                                       ",{}],["|",{"inverse":true}],[" 20 ",{"fg":3,"bold":true}],["  .bashrc         ",{}]],"20":[["▼",{"fg":3,"bold":true}],[" ",{}],["functions",{"fg":6,"bold":true}],["         ",{}],["|",{"inverse":true}],[" 66 ",{"fg":3,"bold":true}],["respective value for this key and the default binding are listed below.                                         ",{}],["|",{"inverse":true}],[" 21 ",{"fg":3,"bold":true}],["  .cshrc          ",{}]],"21":[["    main(int argc, c",{"underline":true}],["|",{"inverse":true}],[" 67 ",{"fg":3,"bold":true}],["'close'                     Closes calendar window.             'q'                                             ",{}],["|",{"inverse":true}],[" 22 ",{"fg":3,"bold":true}],["  .dmrc           ",{}]],"22":[["~                   ",{"fg":4,"bold":true}],["|",{"inverse":true}],[" 68 ",{"fg":3,"bold":true}],["'do_action'                 Executes |calendar_action|.           '<CR>'                                        ",{}],["|",{"inverse":true}],[" 23 ",{"fg":3,"bold":true}],["  .esd_auth       ",{}]],"23":[["~                   ",{"fg":4,"bold":true}],["|",{"inverse":true}],[" 69 ",{"fg":3,"bold":true}],["'goto_today'                Executes |calendar_today|.            't'                                           ",{}],["|",{"inverse":true}],[" 24 ",{"fg":3,"bold":true}],["  .gtkrc-2.0      ",{}]],"24":[["~                   ",{"fg":4,"bold":true}],["|",{"inverse":true}],[" 70 ",{"fg":3,"bold":true}],["'show_help'                 Displays a short help message.      '?'                                             ",{}],["|",{"inverse":true}],[" 25 ",{"fg":3,"bold":true}],["  .gtkrc-2.0-kde4 ",{}]],"25":[["~                   ",{"fg":4,"bold":true}],["|",{"inverse":true}],[" 71 ",{"fg":3,"bold":true}],["'redisplay'                 Redraws calendar window.            'r'                                             ",{}],["|",{"inverse":true}],[" 26 ",{"fg":3,"bold":true}],["  .lesshst        ",{}]],"26":[["~                   ",{"fg":4,"bold":true}],["|",{"inverse":true}],[" 72 ",{"fg":3,"bold":true}],["'goto_next_month'           Jumps to the next month.            '<Right>'                                       ",{}],["|",{"inverse":true}],[" 27 ",{"fg":3,"bold":true}],["  .tcshrc         ",{}]],"27":[["~                   ",{"fg":4,"bold":true}],["|",{"inverse":true}],[" 73 ",{"fg":3,"bold":true}],["'goto_prev_month'           Jumps to the previous month.        '<Left>'                                        ",{}],["|",{"inverse":true}],[" 28 ",{"fg":3,"bold":true}],["  .viminfo        ",{}]],"28":[["~                   ",{"fg":4,"bold":true}],["|",{"inverse":true}],[" 74 ",{"fg":3,"bold":true}],["'goto_next_year'            Jumps to the next year.             '<Up>'                                          ",{}],["|",{"inverse":true}],[" 29 ",{"fg":3,"bold":true}],["  .vimrc          ",{}]],"29":[["~                   ",{"fg":4,"bold":true}],["|",{"inverse":true}],[" 75 ",{"fg":3,"bold":true}],["'goto_prev_year'            Jumps to the previous year.         '<Down>'                                        ",{}],["|",{"inverse":true}],[" 30 ",{"fg":3,"bold":true}],["  .xsession-errors",{}]],"30":[["~                   ",{"fg":4,"bold":true}],["|",{"inverse":true}],[" 76 ",{"fg":3,"bold":true}],["An example in your .vimrc might look like this: >                                                               ",{}],["|",{"inverse":true}],[" 31 ",{"fg":3,"bold":true}],["  anaconda-ks.cfg ",{}]],"31":[["~                   ",{"fg":4,"bold":true}],["|",{"inverse":true}],[" 77 ",{"fg":3,"bold":true}],["  let g:calendar_keys = { 'goto_next_month': '<C-Right>', 'goto_prev_month': '<C-Left>'}                        ",{}],["|",{"inverse":true}],[" 32 ",{"fg":3,"bold":true}],["  initial-setup-ks",{}]],"32":[["~                   ",{"fg":4,"bold":true}],["|",{"inverse":true}],[" 78 ",{"fg":3,"bold":true}],["<                                                                                                               ",{}],["|",{"inverse":true}],[" 33 ",{"fg":3,"bold":true}],["  test.c          ",{}]],"33":[["~                   ",{"fg":4,"bold":true}],["|",{"inverse":true}],[" 79 ",{"fg":3,"bold":true}],["                                                                                                                ",{}],["|",{"inverse":true}],[" 34 ",{"fg":3,"bold":true}],["  test.cpp        ",{}]],"34":[["~                   ",{"fg":4,"bold":true}],["|",{"inverse":true}],[" 80 ",{"fg":3,"bold":true}],["                                                *g:calendar_mark*                                               ",{}],["|",{"inverse":true}],[" 35 ",{"fg":3,"bold":true}],["  .test.cpp.swp   ",{}]],"35":[["~                   ",{"fg":4,"bold":true}],["|",{"inverse":true}],[" 81 ",{"fg":3,"bold":true}],["Place a '*' or '+' mark after the day.  Acceptable values are 'left',                                           ",{}],["|",{"inverse":true}],["~                     ",{"fg":4,"bold":true}]],"36":[["~                   ",{"fg":4,"bold":true}],["|",{"inverse":true}],[" 82 ",{"fg":3,"bold":true}],["'left-fit', and 'right': >                                                                                      ",{}],["|",{"inverse":true}],["~                     ",{"fg":4,"bold":true}]],"37":[["~                   ",{"fg":4,"bold":true}],["|",{"inverse":true}],[" 83 ",{"fg":3,"bold":true}],["  let g:calendar_mark = 'right'                                                                                 ",{}],["|",{"inverse":true}],["~                     ",{"fg":4,"bold":true}]],"38":[["~                   ",{"fg":4,"bold":true}],["|",{"inverse":true}],[" 84 ",{"fg":3,"bold":true}],["<                                                                                                               ",{}],["|",{"inverse":true}],["~                     ",{"fg":4,"bold":true}]],"39":[["~                   ",{"fg":4,"bold":true}],["|",{"inverse":true}],[" 85 ",{"fg":3,"bold":true}],["                                                                                                                ",{}],["|",{"inverse":true}],["~                     ",{"fg":4,"bold":true}]],"40":[["~                   ",{"fg":4,"bold":true}],["|",{"inverse":true}],[" 86 ",{"fg":3,"bold":true}],["                                                *g:calendar_diary*                                              ",{}],["|",{"inverse":true}],["~                     ",{"fg":4,"bold":true}]],"41":[["~                   ",{"fg":4,"bold":true}],["|",{"inverse":true}],[" 87 ",{"fg":3,"bold":true}],["Specify the directory for the diary files.  The default value is $HOME/diary.                                   ",{}],["|",{"inverse":true}],["~                     ",{"fg":4,"bold":true}]],"42":[["~                   ",{"fg":4,"bold":true}],["|",{"inverse":true}],[" 88 ",{"fg":3,"bold":true}],["  let g:calendar_diary=$HOME.'/.vim/diary'                                                                      ",{}],["|",{"inverse":true}],["~                     ",{"fg":4,"bold":true}]],"43":[["~                   ",{"fg":4,"bold":true}],["|",{"inverse":true}],[" 89 ",{"fg":3,"bold":true}],["                                                                                                                ",{}],["|",{"inverse":true}],["~                     ",{"fg":4,"bold":true}]],"44":[["~                   ",{"fg":4,"bold":true}],["|",{"inverse":true}],[" 90 ",{"fg":3,"bold":true}],["                                                ",{"underline":true}],["                                                                ",{}],["|",{"inverse":true}],["~                     ",{"fg":4,"bold":true}]]},"cursor":{"x":73,"y":44,"visible":false}}],[0.038138,{"lines":{"44":[["~                   ",{"fg":4,"bold":true}],["|",{"inverse":true}],[" 90 ",{"fg":3,"bold":true}],["                                                                                                                ",{}],["|",{"inverse":true}],["~                     ",{"fg":4,"bold":true}]],"45":[["~                   ",{"fg":4,"bold":true}],["|",{"inverse":true}],[" 91 ",{"fg":3,"bold":true}],["                                                *g:calendar_navi*                                               ",{"underline":true}],["|",{"inverse":true}],["~                     ",{"fg":4,"bold":true}]],"46":[["[Name] test.cpp      ",{"inverse":true}],[" NORMAL ",{"bold":true}],[" ",{}],["calendar.txt ",{"bold":true}],["                                                        unix │ utf-8 │ text │  41% ",{}],[" LN  91",{"bold":true}],[":1  ",{}],[" ",{"bold":true,"inverse":true}],[" ~/…/calendar-vim/doc>",{"bold":true}]]},"cursor":{"x":25,"y":45,"visible":true}}],[0.004857,{"lines":{"0":[["\" Press <F1> for hel",{"fg":6,"bold":true}],["|",{"inverse":true}],[" 47 ",{"fg":3,"bold":true}],["<LocalLeader>cal          Brings up the calendar in a vertical split.                                           ",{}],["|",{"inverse":true}],["  1 ",{"fg":3,"bold":true}],["\" Press ? for help",{"fg":5,"bold":true}]],"1":[["                    ",{}],["|",{"inverse":true}],[" 48 ",{"fg":3,"bold":true}],["                          Equivalent to calling |:Calendar|.                                                    ",{}],["|",{"inverse":true}],["  2 ",{"fg":3,"bold":true}],["                  ",{}]],"2":[["▼",{"fg":3,"bold":true}],[" First",{"fg":5,"bold":true}],[" : ",{}],["struct",{"fg":2,"bold":true}],["    ",{}],["|",{"inverse":true}],[" 49 ",{"fg":3,"bold":true}],["                                                                                                                ",{}],["|",{"inverse":true}],["  3 ",{"fg":3,"bold":true}],[".. (up a dir)",{"fg":6,"bold":true}],["     ",{}]],"3":[["    [prototypes]",{"fg":6,"bold":true}],["    ",{}],["|",{"inverse":true}],[" 50 ",{"fg":3,"bold":true}],["                                                *calendar-caL*                                                  ",{}],["|",{"inverse":true}],["  4 /root/",{"fg":3,"bold":true}],["            ",{}]],"4":[["   ",{}],["+",{"fg":2,"bold":true}],["FirstRun(void)  ",{}],["|",{"inverse":true}],[" 51 ",{"fg":3,"bold":true}],["<LocalLeader>",{}],["caL ",{"bg":1}],["        ",{}],[" Bri",{"bg":1}],["ngs up the calendar in a horizontal split.                                         ",{}],["|",{"inverse":true}],["  5 ",{"fg":3,"bold":true}],["▸ .asciinema/",{"fg":6,"bold":true}],["     ",{}]],"5":[["   ",{}],["+",{"fg":2,"bold":true}],["FirstRun2(void) ",{}],["|",{"inverse":true}],[" 52 ",{"fg":3,"bold":true}],["                          Equivalent to calling |:CalendarH|.                                                   ",{}],["|",{"inverse":true}],["  6 ",{"fg":3,"bold":true}],["▸ .cache/",{"fg":6,"bold":true}],["         ",{}]],"6":[["                    ",{}],["|",{"inverse":true}],[" 53 ",{"fg":3,"bold":true}],["                                                                                                                ",{}],["|",{"inverse":true}],["  7 ",{"fg":3,"bold":true}],["▸ .config/",{"fg":6,"bold":true}],["        ",{}]],"7":[["▼",{"fg":3,"bold":true}],[" Last",{"fg":5,"bold":true}],[" : ",{}],["struct",{"fg":2,"bold":true}],["     ",{}],["|",{"inverse":true}],[" 54 ",{"fg":3,"bold":true}],["SETTINGS                                        *calendar-settings*                                             ",{}],["|",{"inverse":true}],["  8 ",{"fg":3,"bold":true}],["▸ .dbus/",{"fg":6,"bold":true}],["          ",{}]],"8":[["    [functions]",{"fg":6,"bold":true}],["     ",{}],["|",{"inverse":true}],[" 55 ",{"fg":3,"bold":true}],["                                                                                                                ",{}],["|",{"inverse":true}],["  9 ",{"fg":3,"bold":true}],["▸ .gnupg/",{"fg":6,"bold":true}],["         ",{}]],"9":[["   ",{}],["+",{"fg":2,"bold":true}],["FirstRun(void)  ",{}],["|",{"inverse":true}],[" 56 ",{"fg":3,"bold":true}],["calendar.vim can be con",{}],["figured using the following sett",{"bg":1}],["ings:                                                    ",{}],["|",{"inverse":true}],[" 10 ",{"fg":3,"bold":true}],["▸ .kde/",{"fg":6,"bold":true}],["           ",{}]],"10":[["   ",{}],["+",{"fg":2,"bold":true}],["FirstRun2(void) ",{}],["|",{"inverse":true}],[" 57 ",{"fg":3,"bold":true}],["                                                                                                                ",{}],["|",{"inverse":true}],[" 11 ",{"fg":3,"bold":true}],["▸ .local/",{"fg":6,"bold":true}],["         ",{}]],"11":[["   ",{}],["+",{"fg":2,"bold":true}],["~Last()         ",{}],["|",{"inverse":true}],[" 58 ",{"fg":3,"bold":true}],["                                                *g:calendar_focus_today*                                        ",{}],["|",{"inverse":true}],[" 12 ",{"fg":3,"bold":true}],["▸ .pki/",{"fg":6,"bold":true}],["           ",{}]],"12":[["   ",{}],["+",{"fg":2,"bold":true}],["SecondRun(void) ",{}],["|",{"inverse":true}],[" 59 ",{"fg":3,"bold":true}],["Keeps focus when moving to next or previous calendar: >                                                         ",{}],["|",{"inverse":true}],[" 13 ",{"fg":3,"bold":true}],["▸ .ssh/",{"fg":6,"bold":true}],["           ",{}]],"13":[["   ",{}],["+",{"fg":2,"bold":true}],["SecondRun2(void)",{}],["|",{"inverse":true}],[" 60 ",{"fg":3,"bold":true}],["  let g:calendar_focus_today = 1                                                                                ",{}],["|",{"inverse":true}],[" 14 ",{"fg":3,"bold":true}],["▸ .vim/",{"fg":6,"bold":true}],["           ",{}]],"14":[["                    ",{}],["|",{"inverse":true}],[" 61 ",{"fg":3,"bold":true}],["<                                                                                                               ",{}],["|",{"inverse":true}],[" 15 ",{"fg":3,"bold":true}],["▸ diary/",{"fg":6,"bold":true}],["          ",{}]],"15":[["▼",{"fg":3,"bold":true}],[" Second",{"fg":5,"bold":true}],[" : ",{}],["struct",{"fg":2,"bold":true}],["   ",{}],["|",{"inverse":true}],[" 62 ",{"fg":3,"bold":true}],["                                                                                                                ",{}],["|",{"inverse":true}],[" 16 ",{"fg":3,"bold":true}],["▸ temp/",{"fg":6,"bold":true}],["           ",{}]],"16":[["    [prototypes]",{"fg":6,"bold":true}],["    ",{}],["|",{"inverse":true}],[" 63 ",{"fg":3,"bold":true}],["                                                *g:calendar_keys*                                               ",{}],["|",{"inverse":true}],[" 17 ",{"fg":3,"bold":true}],["  .bash_history   ",{}]],"17":[["   ",{}],["+",{"fg":2,"bold":true}],["SecondRun(void) ",{}],["|",{"inverse":true}],[" 64 ",{"fg":3,"bold":true}],["To change the key bindings in the calendar window, add entries to this                                          ",{}],["|",{"inverse":true}],[" 18 ",{"fg":3,"bold":true}],["  .bash_logout    ",{}]],"18":[["   ",{}],["+",{"fg":2,"bold":true}],["SecondRun2(void)",{}],["|",{"inverse":true}],[" 65 ",{"fg":3,"bold":true}],["dictionary.   Possible keys, the action bound to the keycode given in the                                       ",{}],["|",{"inverse":true}],[" 19 ",{"fg":3,"bold":true}],["  .bash_profile   ",{"underline":true}]],"19":[["                    ",{}],["|",{"inverse":true}],[" 66 ",{"fg":3,"bold":true}],["respective value for this key and the default binding are listed below.                                         ",{}],["|",{"inverse":true}],[" 20 ",{"fg":3,"bold":true}],["  .bashrc         ",{}]],"20":[["▼",{"fg":3,"bold":true}],[" ",{}],["functions",{"fg":6,"bold":true}],["         ",{}],["|",{"inverse":true}],[" 67 ",{"fg":3,"bold":true}],["'close'                     Closes calendar window.             'q'                                             ",{}],["|",{"inverse":true}],[" 21 ",{"fg":3,"bold":true}],["  .cshrc          ",{}]],"21":[["    main(int argc, c",{"underline":true}],["|",{"inverse":true}],[" 68 ",{"fg":3,"bold":true}],["'do_action'                 Executes |calendar_action|.           '<CR>'                                        ",{}],["|",{"inverse":true}],[" 22 ",{"fg":3,"bold":true}],["  .dmrc           ",{}]],"22":[["~                   ",{"fg":4,"bold":true}],["|",{"inverse":true}],[" 69 ",{"fg":3,"bold":true}],["'goto_today'                Executes |calendar_today|.            't'                                           ",{}],["|",{"inverse":true}],[" 23 ",{"fg":3,"bold":true}],["  .esd_auth       ",{}]],"23":[["~                   ",{"fg":4,"bold":true}],["|",{"inverse":true}],[" 70 ",{"fg":3,"bold":true}],["'show_help'                 Displays a short help message.      '?'                                             ",{}],["|",{"inverse":true}],[" 24 ",{"fg":3,"bold":true}],["  .gtkrc-2.0      ",{}]],"24":[["~                   ",{"fg":4,"bold":true}],["|",{"inverse":true}],[" 71 ",{"fg":3,"bold":true}],["'redisplay'                 Redraws calendar window.            'r'                                             ",{}],["|",{"inverse":true}],[" 25 ",{"fg":3,"bold":true}],["  .gtkrc-2.0-kde4 ",{}]],"25":[["~                   ",{"fg":4,"bold":true}],["|",{"inverse":true}],[" 72 ",{"fg":3,"bold":true}],["'goto_next_month'           Jumps to the next month.            '<Right>'                                       ",{}],["|",{"inverse":true}],[" 26 ",{"fg":3,"bold":true}],["  .lesshst        ",{}]],"26":[["~                   ",{"fg":4,"bold":true}],["|",{"inverse":true}],[" 73 ",{"fg":3,"bold":true}],["'goto_prev_month'           Jumps to the previous month.        '<Left>'                                        ",{}],["|",{"inverse":true}],[" 27 ",{"fg":3,"bold":true}],["  .tcshrc         ",{}]],"27":[["~                   ",{"fg":4,"bold":true}],["|",{"inverse":true}],[" 74 ",{"fg":3,"bold":true}],["'goto_next_year'            Jumps to the next year.             '<Up>'                                          ",{}],["|",{"inverse":true}],[" 28 ",{"fg":3,"bold":true}],["  .viminfo        ",{}]],"28":[["~                   ",{"fg":4,"bold":true}],["|",{"inverse":true}],[" 75 ",{"fg":3,"bold":true}],["'goto_prev_year'            Jumps to the previous year.         '<Down>'                                        ",{}],["|",{"inverse":true}],[" 29 ",{"fg":3,"bold":true}],["  .vimrc          ",{}]],"29":[["~                   ",{"fg":4,"bold":true}],["|",{"inverse":true}],[" 76 ",{"fg":3,"bold":true}],["An example in your .vimrc might look like this: >                                                               ",{}],["|",{"inverse":true}],[" 30 ",{"fg":3,"bold":true}],["  .xsession-errors",{}]],"30":[["~                   ",{"fg":4,"bold":true}],["|",{"inverse":true}],[" 77 ",{"fg":3,"bold":true}],["  let g:calendar_keys = { 'goto_next_month': '<C-Right>', 'goto_prev_month': '<C-Left>'}                        ",{}],["|",{"inverse":true}],[" 31 ",{"fg":3,"bold":true}],["  anaconda-ks.cfg ",{}]],"31":[["~                   ",{"fg":4,"bold":true}],["|",{"inverse":true}],[" 78 ",{"fg":3,"bold":true}],["<                                                                                                               ",{}],["|",{"inverse":true}],[" 32 ",{"fg":3,"bold":true}],["  initial-setup-ks",{}]],"32":[["~                   ",{"fg":4,"bold":true}],["|",{"inverse":true}],[" 79 ",{"fg":3,"bold":true}],["                                                                                                                ",{}],["|",{"inverse":true}],[" 33 ",{"fg":3,"bold":true}],["  test.c          ",{}]],"33":[["~                   ",{"fg":4,"bold":true}],["|",{"inverse":true}],[" 80 ",{"fg":3,"bold":true}],["                                                *g:calendar_mark*                                               ",{}],["|",{"inverse":true}],[" 34 ",{"fg":3,"bold":true}],["  test.cpp        ",{}]],"34":[["~                   ",{"fg":4,"bold":true}],["|",{"inverse":true}],[" 81 ",{"fg":3,"bold":true}],["Place a '*' or '+' mark after the day.  Acceptable values are 'left',                                           ",{}],["|",{"inverse":true}],[" 35 ",{"fg":3,"bold":true}],["  .test.cpp.swp   ",{}]],"35":[["~                   ",{"fg":4,"bold":true}],["|",{"inverse":true}],[" 82 ",{"fg":3,"bold":true}],["'left-fit', and 'right': >                                                                                      ",{}],["|",{"inverse":true}],["~                     ",{"fg":4,"bold":true}]],"36":[["~                   ",{"fg":4,"bold":true}],["|",{"inverse":true}],[" 83 ",{"fg":3,"bold":true}],["  let g:calendar_mark = 'right'                                                                                 ",{}],["|",{"inverse":true}],["~                     ",{"fg":4,"bold":true}]],"37":[["~                   ",{"fg":4,"bold":true}],["|",{"inverse":true}],[" 84 ",{"fg":3,"bold":true}],["<                                                                                                               ",{}],["|",{"inverse":true}],["~                     ",{"fg":4,"bold":true}]],"38":[["~                   ",{"fg":4,"bold":true}],["|",{"inverse":true}],[" 85 ",{"fg":3,"bold":true}],["                                                                                                                ",{}],["|",{"inverse":true}],["~                     ",{"fg":4,"bold":true}]],"39":[["~                   ",{"fg":4,"bold":true}],["|",{"inverse":true}],[" 86 ",{"fg":3,"bold":true}],["                                                *g:calendar_diary*                                              ",{}],["|",{"inverse":true}],["~                     ",{"fg":4,"bold":true}]],"40":[["~                   ",{"fg":4,"bold":true}],["|",{"inverse":true}],[" 87 ",{"fg":3,"bold":true}],["Specify the directory for the diary files.  The default value is $HOME/diary.                                   ",{}],["|",{"inverse":true}],["~                     ",{"fg":4,"bold":true}]],"41":[["~                   ",{"fg":4,"bold":true}],["|",{"inverse":true}],[" 88 ",{"fg":3,"bold":true}],["  let g:calendar_diary=$HOME.'/.vim/diary'                                                                      ",{}],["|",{"inverse":true}],["~                     ",{"fg":4,"bold":true}]],"42":[["~                   ",{"fg":4,"bold":true}],["|",{"inverse":true}],[" 89 ",{"fg":3,"bold":true}],["                                                                                                                ",{}],["|",{"inverse":true}],["~                     ",{"fg":4,"bold":true}]],"43":[["~                   ",{"fg":4,"bold":true}],["|",{"inverse":true}],[" 90 ",{"fg":3,"bold":true}],["                                                                                                                ",{}],["|",{"inverse":true}],["~                     ",{"fg":4,"bold":true}]],"44":[["~                   ",{"fg":4,"bold":true}],["|",{"inverse":true}],[" 91 ",{"fg":3,"bold":true}],["                                                ",{"underline":true}],["                                                                ",{}],["|",{"inverse":true}],["~                     ",{"fg":4,"bold":true}]]},"cursor":{"x":73,"y":44,"visible":false}}],[0.020674,{"lines":{"44":[["~                   ",{"fg":4,"bold":true}],["|",{"inverse":true}],[" 91 ",{"fg":3,"bold":true}],["                                                *g:calendar_navi*                                               ",{}],["|",{"inverse":true}],["~                     ",{"fg":4,"bold":true}]],"45":[["~                   ",{"fg":4,"bold":true}],["|",{"inverse":true}],[" 92 ",{"fg":3,"bold":true}],["To control the calendar navigator, set this variable.  Acceptable values are                                    ",{"underline":true}],["|",{"inverse":true}],["~                     ",{"fg":4,"bold":true}]],"46":[["[Name] test.cpp      ",{"inverse":true}],[" NORMAL ",{"bold":true}],[" ",{}],["calendar.txt ",{"bold":true}],["                                                        unix │ utf-8 │ text │  41% ",{}],[" LN  92",{"bold":true}],[":1  ",{}],[" ",{"bold":true,"inverse":true}],[" ~/…/calendar-vim/doc>",{"bold":true}]]},"cursor":{"x":25,"y":45,"visible":true}}],[0.004367999999999999,{"lines":{"0":[["\" Press <F1> for hel",{"fg":6,"bold":true}],["|",{"inverse":true}],[" 48 ",{"fg":3,"bold":true}],["                          Equivalent to calling |:Calendar|.                                                    ",{}],["|",{"inverse":true}],["  1 ",{"fg":3,"bold":true}],["\" Press ? for help",{"fg":5,"bold":true}]],"1":[["                    ",{}],["|",{"inverse":true}],[" 49 ",{"fg":3,"bold":true}],["                                                                                                                ",{}],["|",{"inverse":true}],["  2 ",{"fg":3,"bold":true}],["                  ",{}]],"2":[["▼",{"fg":3,"bold":true}],[" First",{"fg":5,"bold":true}],[" : ",{}],["struct",{"fg":2,"bold":true}],["    ",{}],["|",{"inverse":true}],[" 50 ",{"fg":3,"bold":true}],["                                                *calendar-caL*                                                  ",{}],["|",{"inverse":true}],["  3 ",{"fg":3,"bold":true}],[".. (up a dir)",{"fg":6,"bold":true}],["     ",{}]],"3":[["    [prototypes]",{"fg":6,"bold":true}],["    ",{}],["|",{"inverse":true}],[" 51 ",{"fg":3,"bold":true}],["<LocalLeader>",{}],["caL ",{"bg":1}],["        ",{}],[" Bri",{"bg":1}],["ngs up the calendar in a horizontal split.                                         ",{}],["|",{"inverse":true}],["  4 /root/",{"fg":3,"bold":true}],["            ",{}]],"4":[["   ",{}],["+",{"fg":2,"bold":true}],["FirstRun(void)  ",{}],["|",{"inverse":true}],[" 52 ",{"fg":3,"bold":true}],["                          Equivalent to calling |:CalendarH|.                                                   ",{}],["|",{"inverse":true}],["  5 ",{"fg":3,"bold":true}],["▸ .asciinema/",{"fg":6,"bold":true}],["     ",{}]],"5":[["   ",{}],["+",{"fg":2,"bold":true}],["FirstRun2(void) ",{}],["|",{"inverse":true}],[" 53 ",{"fg":3,"bold":true}],["                                                                                                                ",{}],["|",{"inverse":true}],["  6 ",{"fg":3,"bold":true}],["▸ .cache/",{"fg":6,"bold":true}],["         ",{}]],"6":[["                    ",{}],["|",{"inverse":true}],[" 54 ",{"fg":3,"bold":true}],["SETTINGS                                        *calendar-settings*                                             ",{}],["|",{"inverse":true}],["  7 ",{"fg":3,"bold":true}],["▸ .config/",{"fg":6,"bold":true}],["        ",{}]],"7":[["▼",{"fg":3,"bold":true}],[" Last",{"fg":5,"bold":true}],[" : ",{}],["struct",{"fg":2,"bold":true}],["     ",{}],["|",{"inverse":true}],[" 55 ",{"fg":3,"bold":true}],["                                                                                                                ",{}],["|",{"inverse":true}],["  8 ",{"fg":3,"bold":true}],["▸ .dbus/",{"fg":6,"bold":true}],["          ",{}]],"8":[["    [functions]",{"fg":6,"bold":true}],["     ",{}],["|",{"inverse":true}],[" 56 ",{"fg":3,"bold":true}],["calendar.vim can be con",{}],["figured using the following sett",{"bg":1}],["ings:                                                    ",{}],["|",{"inverse":true}],["  9 ",{"fg":3,"bold":true}],["▸ .gnupg/",{"fg":6,"bold":true}],["         ",{}]],"9":[["   ",{}],["+",{"fg":2,"bold":true}],["FirstRun(void)  ",{}],["|",{"inverse":true}],[" 57 ",{"fg":3,"bold":true}],["                                                                                                                ",{}],["|",{"inverse":true}],[" 10 ",{"fg":3,"bold":true}],["▸ .kde/",{"fg":6,"bold":true}],["           ",{}]],"10":[["   ",{}],["+",{"fg":2,"bold":true}],["FirstRun2(void) ",{}],["|",{"inverse":true}],[" 58 ",{"fg":3,"bold":true}],["                                                *g:calendar_focus_today*                                        ",{}],["|",{"inverse":true}],[" 11 ",{"fg":3,"bold":true}],["▸ .local/",{"fg":6,"bold":true}],["         ",{}]],"11":[["   ",{}],["+",{"fg":2,"bold":true}],["~Last()         ",{}],["|",{"inverse":true}],[" 59 ",{"fg":3,"bold":true}],["Keeps focus when moving to next or previous calendar: >                                                         ",{}],["|",{"inverse":true}],[" 12 ",{"fg":3,"bold":true}],["▸ .pki/",{"fg":6,"bold":true}],["           ",{}]],"12":[["   ",{}],["+",{"fg":2,"bold":true}],["SecondRun(void) ",{}],["|",{"inverse":true}],[" 60 ",{"fg":3,"bold":true}],["  let g:calendar_focus_today = 1                                                                                ",{}],["|",{"inverse":true}],[" 13 ",{"fg":3,"bold":true}],["▸ .ssh/",{"fg":6,"bold":true}],["           ",{}]],"13":[["   ",{}],["+",{"fg":2,"bold":true}],["SecondRun2(void)",{}],["|",{"inverse":true}],[" 61 ",{"fg":3,"bold":true}],["<                                                                                                               ",{}],["|",{"inverse":true}],[" 14 ",{"fg":3,"bold":true}],["▸ .vim/",{"fg":6,"bold":true}],["           ",{}]],"14":[["                    ",{}],["|",{"inverse":true}],[" 62 ",{"fg":3,"bold":true}],["                                                                                                                ",{}],["|",{"inverse":true}],[" 15 ",{"fg":3,"bold":true}],["▸ diary/",{"fg":6,"bold":true}],["          ",{}]],"15":[["▼",{"fg":3,"bold":true}],[" Second",{"fg":5,"bold":true}],[" : ",{}],["struct",{"fg":2,"bold":true}],["   ",{}],["|",{"inverse":true}],[" 63 ",{"fg":3,"bold":true}],["                                                *g:calendar_keys*                                               ",{}],["|",{"inverse":true}],[" 16 ",{"fg":3,"bold":true}],["▸ temp/",{"fg":6,"bold":true}],["           ",{}]],"16":[["    [prototypes]",{"fg":6,"bold":true}],["    ",{}],["|",{"inverse":true}],[" 64 ",{"fg":3,"bold":true}],["To change the key bindings in the calendar window, add entries to this                                          ",{}],["|",{"inverse":true}],[" 17 ",{"fg":3,"bold":true}],["  .bash_history   ",{}]],"17":[["   ",{}],["+",{"fg":2,"bold":true}],["SecondRun(void) ",{}],["|",{"inverse":true}],[" 65 ",{"fg":3,"bold":true}],["dictionary.   Possible keys, the action bound to the keycode given in the                                       ",{}],["|",{"inverse":true}],[" 18 ",{"fg":3,"bold":true}],["  .bash_logout    ",{}]],"18":[["   ",{}],["+",{"fg":2,"bold":true}],["SecondRun2(void)",{}],["|",{"inverse":true}],[" 66 ",{"fg":3,"bold":true}],["respective value for this key and the default binding are listed below.                                         ",{}],["|",{"inverse":true}],[" 19 ",{"fg":3,"bold":true}],["  .bash_profile   ",{"underline":true}]],"19":[["                    ",{}],["|",{"inverse":true}],[" 67 ",{"fg":3,"bold":true}],["'close'                     Closes calendar window.             'q'                                             ",{}],["|",{"inverse":true}],[" 20 ",{"fg":3,"bold":true}],["  .bashrc         ",{}]],"20":[["▼",{"fg":3,"bold":true}],[" ",{}],["functions",{"fg":6,"bold":true}],["         ",{}],["|",{"inverse":true}],[" 68 ",{"fg":3,"bold":true}],["'do_action'                 Executes |calendar_action|.           '<CR>'                                        ",{}],["|",{"inverse":true}],[" 21 ",{"fg":3,"bold":true}],["  .cshrc          ",{}]],"21":[["    main(int argc, c",{"underline":true}],["|",{"inverse":true}],[" 69 ",{"fg":3,"bold":true}],["'goto_today'                Executes |calendar_today|.            't'                                           ",{}],["|",{"inverse":true}],[" 22 ",{"fg":3,"bold":true}],["  .dmrc           ",{}]],"22":[["~                   ",{"fg":4,"bold":true}],["|",{"inverse":true}],[" 70 ",{"fg":3,"bold":true}],["'show_help'                 Displays a short help message.      '?'                                             ",{}],["|",{"inverse":true}],[" 23 ",{"fg":3,"bold":true}],["  .esd_auth       ",{}]],"23":[["~                   ",{"fg":4,"bold":true}],["|",{"inverse":true}],[" 71 ",{"fg":3,"bold":true}],["'redisplay'                 Redraws calendar window.            'r'                                             ",{}],["|",{"inverse":true}],[" 24 ",{"fg":3,"bold":true}],["  .gtkrc-2.0      ",{}]],"24":[["~                   ",{"fg":4,"bold":true}],["|",{"inverse":true}],[" 72 ",{"fg":3,"bold":true}],["'goto_next_month'           Jumps to the next month.            '<Right>'                                       ",{}],["|",{"inverse":true}],[" 25 ",{"fg":3,"bold":true}],["  .gtkrc-2.0-kde4 ",{}]],"25":[["~                   ",{"fg":4,"bold":true}],["|",{"inverse":true}],[" 73 ",{"fg":3,"bold":true}],["'goto_prev_month'           Jumps to the previous month.        '<Left>'                                        ",{}],["|",{"inverse":true}],[" 26 ",{"fg":3,"bold":true}],["  .lesshst        ",{}]],"26":[["~                   ",{"fg":4,"bold":true}],["|",{"inverse":true}],[" 74 ",{"fg":3,"bold":true}],["'goto_next_year'            Jumps to the next year.             '<Up>'                                          ",{}],["|",{"inverse":true}],[" 27 ",{"fg":3,"bold":true}],["  .tcshrc         ",{}]],"27":[["~                   ",{"fg":4,"bold":true}],["|",{"inverse":true}],[" 75 ",{"fg":3,"bold":true}],["'goto_prev_year'            Jumps to the previous year.         '<Down>'                                        ",{}],["|",{"inverse":true}],[" 28 ",{"fg":3,"bold":true}],["  .viminfo        ",{}]],"28":[["~                   ",{"fg":4,"bold":true}],["|",{"inverse":true}],[" 76 ",{"fg":3,"bold":true}],["An example in your .vimrc might look like this: >                                                               ",{}],["|",{"inverse":true}],[" 29 ",{"fg":3,"bold":true}],["  .vimrc          ",{}]],"29":[["~                   ",{"fg":4,"bold":true}],["|",{"inverse":true}],[" 77 ",{"fg":3,"bold":true}],["  let g:calendar_keys = { 'goto_next_month': '<C-Right>', 'goto_prev_month': '<C-Left>'}                        ",{}],["|",{"inverse":true}],[" 30 ",{"fg":3,"bold":true}],["  .xsession-errors",{}]],"30":[["~                   ",{"fg":4,"bold":true}],["|",{"inverse":true}],[" 78 ",{"fg":3,"bold":true}],["<                                                                                                               ",{}],["|",{"inverse":true}],[" 31 ",{"fg":3,"bold":true}],["  anaconda-ks.cfg ",{}]],"31":[["~                   ",{"fg":4,"bold":true}],["|",{"inverse":true}],[" 79 ",{"fg":3,"bold":true}],["                                                                                                                ",{}],["|",{"inverse":true}],[" 32 ",{"fg":3,"bold":true}],["  initial-setup-ks",{}]],"32":[["~                   ",{"fg":4,"bold":true}],["|",{"inverse":true}],[" 80 ",{"fg":3,"bold":true}],["                                                *g:calendar_mark*                                               ",{}],["|",{"inverse":true}],[" 33 ",{"fg":3,"bold":true}],["  test.c          ",{}]],"33":[["~                   ",{"fg":4,"bold":true}],["|",{"inverse":true}],[" 81 ",{"fg":3,"bold":true}],["Place a '*' or '+' mark after the day.  Acceptable values are 'left',                                           ",{}],["|",{"inverse":true}],[" 34 ",{"fg":3,"bold":true}],["  test.cpp        ",{}]],"34":[["~                   ",{"fg":4,"bold":true}],["|",{"inverse":true}],[" 82 ",{"fg":3,"bold":true}],["'left-fit', and 'right': >                                                                                      ",{}],["|",{"inverse":true}],[" 35 ",{"fg":3,"bold":true}],["  .test.cpp.swp   ",{}]],"35":[["~                   ",{"fg":4,"bold":true}],["|",{"inverse":true}],[" 83 ",{"fg":3,"bold":true}],["  let g:calendar_mark = 'right'                                                                                 ",{}],["|",{"inverse":true}],["~                     ",{"fg":4,"bold":true}]],"36":[["~                   ",{"fg":4,"bold":true}],["|",{"inverse":true}],[" 84 ",{"fg":3,"bold":true}],["<                                                                                                               ",{}],["|",{"inverse":true}],["~                     ",{"fg":4,"bold":true}]],"37":[["~                   ",{"fg":4,"bold":true}],["|",{"inverse":true}],[" 85 ",{"fg":3,"bold":true}],["                                                                                                                ",{}],["|",{"inverse":true}],["~                     ",{"fg":4,"bold":true}]],"38":[["~                   ",{"fg":4,"bold":true}],["|",{"inverse":true}],[" 86 ",{"fg":3,"bold":true}],["                                                *g:calendar_diary*                                              ",{}],["|",{"inverse":true}],["~                     ",{"fg":4,"bold":true}]],"39":[["~                   ",{"fg":4,"bold":true}],["|",{"inverse":true}],[" 87 ",{"fg":3,"bold":true}],["Specify the directory for the diary files.  The default value is $HOME/diary.                                   ",{}],["|",{"inverse":true}],["~                     ",{"fg":4,"bold":true}]],"40":[["~                   ",{"fg":4,"bold":true}],["|",{"inverse":true}],[" 88 ",{"fg":3,"bold":true}],["  let g:calendar_diary=$HOME.'/.vim/diary'                                                                      ",{}],["|",{"inverse":true}],["~                     ",{"fg":4,"bold":true}]],"41":[["~                   ",{"fg":4,"bold":true}],["|",{"inverse":true}],[" 89 ",{"fg":3,"bold":true}],["                                                                                                                ",{}],["|",{"inverse":true}],["~                     ",{"fg":4,"bold":true}]],"42":[["~                   ",{"fg":4,"bold":true}],["|",{"inverse":true}],[" 90 ",{"fg":3,"bold":true}],["                                                                                                                ",{}],["|",{"inverse":true}],["~                     ",{"fg":4,"bold":true}]],"43":[["~                   ",{"fg":4,"bold":true}],["|",{"inverse":true}],[" 91 ",{"fg":3,"bold":true}],["                                                *g:calendar_navi*                                               ",{}],["|",{"inverse":true}],["~                     ",{"fg":4,"bold":true}]],"44":[["~                   ",{"fg":4,"bold":true}],["|",{"inverse":true}],[" 92 ",{"fg":3,"bold":true}],["To control the calendar navigator, set this vari",{"underline":true}],["*g:calendar_navi*                                               ",{}],["|",{"inverse":true}],["~                     ",{"fg":4,"bold":true}]]},"cursor":{"x":73,"y":44,"visible":false}}],[0.039023,{"lines":{"44":[["~                   ",{"fg":4,"bold":true}],["|",{"inverse":true}],[" 92 ",{"fg":3,"bold":true}],["To control the calendar navigator, set this variable.  Acceptable values are                                    ",{}],["|",{"inverse":true}],["~                     ",{"fg":4,"bold":true}]],"45":[["~                   ",{"fg":4,"bold":true}],["|",{"inverse":true}],[" 93 ",{"fg":3,"bold":true}],["'top', 'bottom', or 'both'. >                                                                                   ",{"underline":true}],["|",{"inverse":true}],["~                     ",{"fg":4,"bold":true}]],"46":[["[Name] test.cpp      ",{"inverse":true}],[" NORMAL ",{"bold":true}],[" ",{}],["calendar.txt ",{"bold":true}],["                                                        unix │ utf-8 │ text │  42% ",{}],[" LN  93",{"bold":true}],[":1  ",{}],[" ",{"bold":true,"inverse":true}],[" ~/…/calendar-vim/doc>",{"bold":true}]]},"cursor":{"x":25,"y":45,"visible":true}}],[0.005583,{"lines":{"0":[["\" Press <F1> for hel",{"fg":6,"bold":true}],["|",{"inverse":true}],[" 49 ",{"fg":3,"bold":true}],["                                                                                                                ",{}],["|",{"inverse":true}],["  1 ",{"fg":3,"bold":true}],["\" Press ? for help",{"fg":5,"bold":true}]],"1":[["                    ",{}],["|",{"inverse":true}],[" 50 ",{"fg":3,"bold":true}],["                                                *calendar-caL*                                                  ",{}],["|",{"inverse":true}],["  2 ",{"fg":3,"bold":true}],["                  ",{}]],"2":[["▼",{"fg":3,"bold":true}],[" First",{"fg":5,"bold":true}],[" : ",{}],["struct",{"fg":2,"bold":true}],["    ",{}],["|",{"inverse":true}],[" 51 ",{"fg":3,"bold":true}],["<LocalLeader>",{}],["caL ",{"bg":1}],["        ",{}],[" Bri",{"bg":1}],["ngs up the calendar in a horizontal split.                                         ",{}],["|",{"inverse":true}],["  3 ",{"fg":3,"bold":true}],[".. (up a dir)",{"fg":6,"bold":true}],["     ",{}]],"3":[["    [prototypes]",{"fg":6,"bold":true}],["    ",{}],["|",{"inverse":true}],[" 52 ",{"fg":3,"bold":true}],["                          Equivalent to calling |:CalendarH|.                                                   ",{}],["|",{"inverse":true}],["  4 /root/",{"fg":3,"bold":true}],["            ",{}]],"4":[["   ",{}],["+",{"fg":2,"bold":true}],["FirstRun(void)  ",{}],["|",{"inverse":true}],[" 53 ",{"fg":3,"bold":true}],["                                                                                                                ",{}],["|",{"inverse":true}],["  5 ",{"fg":3,"bold":true}],["▸ .asciinema/",{"fg":6,"bold":true}],["     ",{}]],"5":[["   ",{}],["+",{"fg":2,"bold":true}],["FirstRun2(void) ",{}],["|",{"inverse":true}],[" 54 ",{"fg":3,"bold":true}],["SETTINGS                                        *calendar-settings*                                             ",{}],["|",{"inverse":true}],["  6 ",{"fg":3,"bold":true}],["▸ .cache/",{"fg":6,"bold":true}],["         ",{}]],"6":[["                    ",{}],["|",{"inverse":true}],[" 55 ",{"fg":3,"bold":true}],["                                                                                                                ",{}],["|",{"inverse":true}],["  7 ",{"fg":3,"bold":true}],["▸ .config/",{"fg":6,"bold":true}],["        ",{}]],"7":[["▼",{"fg":3,"bold":true}],[" Last",{"fg":5,"bold":true}],[" : ",{}],["struct",{"fg":2,"bold":true}],["     ",{}],["|",{"inverse":true}],[" 56 ",{"fg":3,"bold":true}],["calendar.vim can be con",{}],["figured using the following sett",{"bg":1}],["ings:                                                    ",{}],["|",{"inverse":true}],["  8 ",{"fg":3,"bold":true}],["▸ .dbus/",{"fg":6,"bold":true}],["          ",{}]],"8":[["    [functions]",{"fg":6,"bold":true}],["     ",{}],["|",{"inverse":true}],[" 57 ",{"fg":3,"bold":true}],["                                                                                                                ",{}],["|",{"inverse":true}],["  9 ",{"fg":3,"bold":true}],["▸ .gnupg/",{"fg":6,"bold":true}],["         ",{}]],"9":[["   ",{}],["+",{"fg":2,"bold":true}],["FirstRun(void)  ",{}],["|",{"inverse":true}],[" 58 ",{"fg":3,"bold":true}],["                                                *g:calendar_focus_today*                                        ",{}],["|",{"inverse":true}],[" 10 ",{"fg":3,"bold":true}],["▸ .kde/",{"fg":6,"bold":true}],["           ",{}]],"10":[["   ",{}],["+",{"fg":2,"bold":true}],["FirstRun2(void) ",{}],["|",{"inverse":true}],[" 59 ",{"fg":3,"bold":true}],["Keeps focus when moving to next or previous calendar: >                                                         ",{}],["|",{"inverse":true}],[" 11 ",{"fg":3,"bold":true}],["▸ .local/",{"fg":6,"bold":true}],["         ",{}]],"11":[["   ",{}],["+",{"fg":2,"bold":true}],["~Last()         ",{}],["|",{"inverse":true}],[" 60 ",{"fg":3,"bold":true}],["  let g:calendar_focus_today = 1                                                                                ",{}],["|",{"inverse":true}],[" 12 ",{"fg":3,"bold":true}],["▸ .pki/",{"fg":6,"bold":true}],["           ",{}]],"12":[["   ",{}],["+",{"fg":2,"bold":true}],["SecondRun(void) ",{}],["|",{"inverse":true}],[" 61 ",{"fg":3,"bold":true}],["<                                                                                                               ",{}],["|",{"inverse":true}],[" 13 ",{"fg":3,"bold":true}],["▸ .ssh/",{"fg":6,"bold":true}],["           ",{}]],"13":[["   ",{}],["+",{"fg":2,"bold":true}],["SecondRun2(void)",{}],["|",{"inverse":true}],[" 62 ",{"fg":3,"bold":true}],["                                                                                                                ",{}],["|",{"inverse":true}],[" 14 ",{"fg":3,"bold":true}],["▸ .vim/",{"fg":6,"bold":true}],["           ",{}]],"14":[["                    ",{}],["|",{"inverse":true}],[" 63 ",{"fg":3,"bold":true}],["                                                *g:calendar_keys*                                               ",{}],["|",{"inverse":true}],[" 15 ",{"fg":3,"bold":true}],["▸ diary/",{"fg":6,"bold":true}],["          ",{}]],"15":[["▼",{"fg":3,"bold":true}],[" Second",{"fg":5,"bold":true}],[" : ",{}],["struct",{"fg":2,"bold":true}],["   ",{}],["|",{"inverse":true}],[" 64 ",{"fg":3,"bold":true}],["To change the key bindings in the calendar window, add entries to this                                          ",{}],["|",{"inverse":true}],[" 16 ",{"fg":3,"bold":true}],["▸ temp/",{"fg":6,"bold":true}],["           ",{}]],"16":[["    [prototypes]",{"fg":6,"bold":true}],["    ",{}],["|",{"inverse":true}],[" 65 ",{"fg":3,"bold":true}],["dictionary.   Possible keys, the action bound to the keycode given in the                                       ",{}],["|",{"inverse":true}],[" 17 ",{"fg":3,"bold":true}],["  .bash_history   ",{}]],"17":[["   ",{}],["+",{"fg":2,"bold":true}],["SecondRun(void) ",{}],["|",{"inverse":true}],[" 66 ",{"fg":3,"bold":true}],["respective value for this key and the default binding are listed below.                                         ",{}],["|",{"inverse":true}],[" 18 ",{"fg":3,"bold":true}],["  .bash_logout    ",{}]],"18":[["   ",{}],["+",{"fg":2,"bold":true}],["SecondRun2(void)",{}],["|",{"inverse":true}],[" 67 ",{"fg":3,"bold":true}],["'close'                     Closes calendar window.             'q'                                             ",{}],["|",{"inverse":true}],[" 19 ",{"fg":3,"bold":true}],["  .bash_profile   ",{"underline":true}]],"19":[["                    ",{}],["|",{"inverse":true}],[" 68 ",{"fg":3,"bold":true}],["'do_action'                 Executes |calendar_action|.           '<CR>'                                        ",{}],["|",{"inverse":true}],[" 20 ",{"fg":3,"bold":true}],["  .bashrc         ",{}]],"20":[["▼",{"fg":3,"bold":true}],[" ",{}],["functions",{"fg":6,"bold":true}],["         ",{}],["|",{"inverse":true}],[" 69 ",{"fg":3,"bold":true}],["'goto_today'                Executes |calendar_today|.            't'                                           ",{}],["|",{"inverse":true}],[" 21 ",{"fg":3,"bold":true}],["  .cshrc          ",{}]],"21":[["    main(int argc, c",{"underline":true}],["|",{"inverse":true}],[" 70 ",{"fg":3,"bold":true}],["'show_help'                 Displays a short help message.      '?'                                             ",{}],["|",{"inverse":true}],[" 22 ",{"fg":3,"bold":true}],["  .dmrc           ",{}]],"22":[["~                   ",{"fg":4,"bold":true}],["|",{"inverse":true}],[" 71 ",{"fg":3,"bold":true}],["'redisplay'                 Redraws calendar window.            'r'                                             ",{}],["|",{"inverse":true}],[" 23 ",{"fg":3,"bold":true}],["  .esd_auth       ",{}]],"23":[["~                   ",{"fg":4,"bold":true}],["|",{"inverse":true}],[" 72 ",{"fg":3,"bold":true}],["'goto_next_month'           Jumps to the next month.            '<Right>'                                       ",{}],["|",{"inverse":true}],[" 24 ",{"fg":3,"bold":true}],["  .gtkrc-2.0      ",{}]],"24":[["~                   ",{"fg":4,"bold":true}],["|",{"inverse":true}],[" 73 ",{"fg":3,"bold":true}],["'goto_prev_month'           Jumps to the previous month.        '<Left>'                                        ",{}],["|",{"inverse":true}],[" 25 ",{"fg":3,"bold":true}],["  .gtkrc-2.0-kde4 ",{}]],"25":[["~                   ",{"fg":4,"bold":true}],["|",{"inverse":true}],[" 74 ",{"fg":3,"bold":true}],["'goto_next_year'            Jumps to the next year.             '<Up>'                                          ",{}],["|",{"inverse":true}],[" 26 ",{"fg":3,"bold":true}],["  .lesshst        ",{}]],"26":[["~                   ",{"fg":4,"bold":true}],["|",{"inverse":true}],[" 75 ",{"fg":3,"bold":true}],["'goto_prev_year'            Jumps to the previous year.         '<Down>'                                        ",{}],["|",{"inverse":true}],[" 27 ",{"fg":3,"bold":true}],["  .tcshrc         ",{}]],"27":[["~                   ",{"fg":4,"bold":true}],["|",{"inverse":true}],[" 76 ",{"fg":3,"bold":true}],["An example in your .vimrc might look like this: >                                                               ",{}],["|",{"inverse":true}],[" 28 ",{"fg":3,"bold":true}],["  .viminfo        ",{}]],"28":[["~                   ",{"fg":4,"bold":true}],["|",{"inverse":true}],[" 77 ",{"fg":3,"bold":true}],["  let g:calendar_keys = { 'goto_next_month': '<C-Right>', 'goto_prev_month': '<C-Left>'}                        ",{}],["|",{"inverse":true}],[" 29 ",{"fg":3,"bold":true}],["  .vimrc          ",{}]],"29":[["~                   ",{"fg":4,"bold":true}],["|",{"inverse":true}],[" 78 ",{"fg":3,"bold":true}],["<                                                                                                               ",{}],["|",{"inverse":true}],[" 30 ",{"fg":3,"bold":true}],["  .xsession-errors",{}]],"30":[["~                   ",{"fg":4,"bold":true}],["|",{"inverse":true}],[" 79 ",{"fg":3,"bold":true}],["                                                                                                                ",{}],["|",{"inverse":true}],[" 31 ",{"fg":3,"bold":true}],["  anaconda-ks.cfg ",{}]],"31":[["~                   ",{"fg":4,"bold":true}],["|",{"inverse":true}],[" 80 ",{"fg":3,"bold":true}],["                                                *g:calendar_mark*                                               ",{}],["|",{"inverse":true}],[" 32 ",{"fg":3,"bold":true}],["  initial-setup-ks",{}]],"32":[["~                   ",{"fg":4,"bold":true}],["|",{"inverse":true}],[" 81 ",{"fg":3,"bold":true}],["Place a '*' or '+' mark after the day.  Acceptable values are 'left',                                           ",{}],["|",{"inverse":true}],[" 33 ",{"fg":3,"bold":true}],["  test.c          ",{}]],"33":[["~                   ",{"fg":4,"bold":true}],["|",{"inverse":true}],[" 82 ",{"fg":3,"bold":true}],["'left-fit', and 'right': >                                                                                      ",{}],["|",{"inverse":true}],[" 34 ",{"fg":3,"bold":true}],["  test.cpp        ",{}]],"34":[["~                   ",{"fg":4,"bold":true}],["|",{"inverse":true}],[" 83 ",{"fg":3,"bold":true}],["  let g:calendar_mark = 'right'                                                                                 ",{}],["|",{"inverse":true}],[" 35 ",{"fg":3,"bold":true}],["  .test.cpp.swp   ",{}]],"35":[["~                   ",{"fg":4,"bold":true}],["|",{"inverse":true}],[" 84 ",{"fg":3,"bold":true}],["<                                                                                                               ",{}],["|",{"inverse":true}],["~                     ",{"fg":4,"bold":true}]],"36":[["~                   ",{"fg":4,"bold":true}],["|",{"inverse":true}],[" 85 ",{"fg":3,"bold":true}],["                                                                                                                ",{}],["|",{"inverse":true}],["~                     ",{"fg":4,"bold":true}]],"37":[["~                   ",{"fg":4,"bold":true}],["|",{"inverse":true}],[" 86 ",{"fg":3,"bold":true}],["                                                *g:calendar_diary*                                              ",{}],["|",{"inverse":true}],["~                     ",{"fg":4,"bold":true}]],"38":[["~                   ",{"fg":4,"bold":true}],["|",{"inverse":true}],[" 87 ",{"fg":3,"bold":true}],["Specify the directory for the diary files.  The default value is $HOME/diary.                                   ",{}],["|",{"inverse":true}],["~                     ",{"fg":4,"bold":true}]],"39":[["~                   ",{"fg":4,"bold":true}],["|",{"inverse":true}],[" 88 ",{"fg":3,"bold":true}],["  let g:calendar_diary=$HOME.'/.vim/diary'                                                                      ",{}],["|",{"inverse":true}],["~                     ",{"fg":4,"bold":true}]],"40":[["~                   ",{"fg":4,"bold":true}],["|",{"inverse":true}],[" 89 ",{"fg":3,"bold":true}],["                                                                                                                ",{}],["|",{"inverse":true}],["~                     ",{"fg":4,"bold":true}]],"41":[["~                   ",{"fg":4,"bold":true}],["|",{"inverse":true}],[" 90 ",{"fg":3,"bold":true}],["                                                                                                                ",{}],["|",{"inverse":true}],["~                     ",{"fg":4,"bold":true}]],"42":[["~                   ",{"fg":4,"bold":true}],["|",{"inverse":true}],[" 91 ",{"fg":3,"bold":true}],["                                                *g:calendar_navi*                                               ",{}],["|",{"inverse":true}],["~                     ",{"fg":4,"bold":true}]],"43":[["~                   ",{"fg":4,"bold":true}],["|",{"inverse":true}],[" 92 ",{"fg":3,"bold":true}],["To control the calendar navigator, set this variable.  Acceptable values are                                    ",{}],["|",{"inverse":true}],["~                     ",{"fg":4,"bold":true}]],"44":[["~                   ",{"fg":4,"bold":true}],["|",{"inverse":true}],[" 93 ",{"fg":3,"bold":true}],["'top', 'bottom', or 'both'. >                   ",{"underline":true}],["able.  Acceptable values are                                    ",{}],["|",{"inverse":true}],["~                     ",{"fg":4,"bold":true}]]},"cursor":{"x":73,"y":44,"visible":false}}],[0.019874,{"lines":{"44":[["~                   ",{"fg":4,"bold":true}],["|",{"inverse":true}],[" 93 ",{"fg":3,"bold":true}],["'top', 'bottom', or 'both'. >                                                                                   ",{}],["|",{"inverse":true}],["~                     ",{"fg":4,"bold":true}]],"45":[["~                   ",{"fg":4,"bold":true}],["|",{"inverse":true}],[" 94 ",{"fg":3,"bold":true}],["  let g:calendar_navi = ''                                                                                      ",{"underline":true}],["|",{"inverse":true}],["~                     ",{"fg":4,"bold":true}]],"46":[["[Name] test.cpp      ",{"inverse":true}],[" NORMAL ",{"bold":true}],[" ",{}],["calendar.txt ",{"bold":true}],["                                                        unix │ utf-8 │ text │  42% ",{}],[" LN  94",{"bold":true}],[":1  ",{}],[" ",{"bold":true,"inverse":true}],[" ~/…/calendar-vim/doc>",{"bold":true}]]},"cursor":{"x":25,"y":45,"visible":true}}],[0.004374,{"lines":{"0":[["\" Press <F1> for hel",{"fg":6,"bold":true}],["|",{"inverse":true}],[" 50 ",{"fg":3,"bold":true}],["                                                *calendar-caL*                                                  ",{}],["|",{"inverse":true}],["  1 ",{"fg":3,"bold":true}],["\" Press ? for help",{"fg":5,"bold":true}]],"1":[["                    ",{}],["|",{"inverse":true}],[" 51 ",{"fg":3,"bold":true}],["<LocalLeader>",{}],["caL ",{"bg":1}],["        ",{}],[" Bri",{"bg":1}],["ngs up the calendar in a horizontal split.                                         ",{}],["|",{"inverse":true}],["  2 ",{"fg":3,"bold":true}],["                  ",{}]],"2":[["▼",{"fg":3,"bold":true}],[" First",{"fg":5,"bold":true}],[" : ",{}],["struct",{"fg":2,"bold":true}],["    ",{}],["|",{"inverse":true}],[" 52 ",{"fg":3,"bold":true}],["                          Equivalent to calling |:CalendarH|.                                                   ",{}],["|",{"inverse":true}],["  3 ",{"fg":3,"bold":true}],[".. (up a dir)",{"fg":6,"bold":true}],["     ",{}]],"3":[["    [prototypes]",{"fg":6,"bold":true}],["    ",{}],["|",{"inverse":true}],[" 53 ",{"fg":3,"bold":true}],["                                                                                                                ",{}],["|",{"inverse":true}],["  4 /root/",{"fg":3,"bold":true}],["            ",{}]],"4":[["   ",{}],["+",{"fg":2,"bold":true}],["FirstRun(void)  ",{}],["|",{"inverse":true}],[" 54 ",{"fg":3,"bold":true}],["SETTINGS                                        *calendar-settings*                                             ",{}],["|",{"inverse":true}],["  5 ",{"fg":3,"bold":true}],["▸ .asciinema/",{"fg":6,"bold":true}],["     ",{}]],"5":[["   ",{}],["+",{"fg":2,"bold":true}],["FirstRun2(void) ",{}],["|",{"inverse":true}],[" 55 ",{"fg":3,"bold":true}],["                                                                                                                ",{}],["|",{"inverse":true}],["  6 ",{"fg":3,"bold":true}],["▸ .cache/",{"fg":6,"bold":true}],["         ",{}]],"6":[["                    ",{}],["|",{"inverse":true}],[" 56 ",{"fg":3,"bold":true}],["calendar.vim can be con",{}],["figured using the following sett",{"bg":1}],["ings:                                                    ",{}],["|",{"inverse":true}],["  7 ",{"fg":3,"bold":true}],["▸ .config/",{"fg":6,"bold":true}],["        ",{}]],"7":[["▼",{"fg":3,"bold":true}],[" Last",{"fg":5,"bold":true}],[" : ",{}],["struct",{"fg":2,"bold":true}],["     ",{}],["|",{"inverse":true}],[" 57 ",{"fg":3,"bold":true}],["                                                                                                                ",{}],["|",{"inverse":true}],["  8 ",{"fg":3,"bold":true}],["▸ .dbus/",{"fg":6,"bold":true}],["          ",{}]],"8":[["    [functions]",{"fg":6,"bold":true}],["     ",{}],["|",{"inverse":true}],[" 58 ",{"fg":3,"bold":true}],["                                                *g:calendar_focus_today*                                        ",{}],["|",{"inverse":true}],["  9 ",{"fg":3,"bold":true}],["▸ .gnupg/",{"fg":6,"bold":true}],["         ",{}]],"9":[["   ",{}],["+",{"fg":2,"bold":true}],["FirstRun(void)  ",{}],["|",{"inverse":true}],[" 59 ",{"fg":3,"bold":true}],["Keeps focus when moving to next or previous calendar: >                                                         ",{}],["|",{"inverse":true}],[" 10 ",{"fg":3,"bold":true}],["▸ .kde/",{"fg":6,"bold":true}],["           ",{}]],"10":[["   ",{}],["+",{"fg":2,"bold":true}],["FirstRun2(void) ",{}],["|",{"inverse":true}],[" 60 ",{"fg":3,"bold":true}],["  let g:calendar_focus_today = 1                                                                                ",{}],["|",{"inverse":true}],[" 11 ",{"fg":3,"bold":true}],["▸ .local/",{"fg":6,"bold":true}],["         ",{}]],"11":[["   ",{}],["+",{"fg":2,"bold":true}],["~Last()         ",{}],["|",{"inverse":true}],[" 61 ",{"fg":3,"bold":true}],["<                                                                                                               ",{}],["|",{"inverse":true}],[" 12 ",{"fg":3,"bold":true}],["▸ .pki/",{"fg":6,"bold":true}],["           ",{}]],"12":[["   ",{}],["+",{"fg":2,"bold":true}],["SecondRun(void) ",{}],["|",{"inverse":true}],[" 62 ",{"fg":3,"bold":true}],["                                                                                                                ",{}],["|",{"inverse":true}],[" 13 ",{"fg":3,"bold":true}],["▸ .ssh/",{"fg":6,"bold":true}],["           ",{}]],"13":[["   ",{}],["+",{"fg":2,"bold":true}],["SecondRun2(void)",{}],["|",{"inverse":true}],[" 63 ",{"fg":3,"bold":true}],["                                                *g:calendar_keys*                                               ",{}],["|",{"inverse":true}],[" 14 ",{"fg":3,"bold":true}],["▸ .vim/",{"fg":6,"bold":true}],["           ",{}]],"14":[["                    ",{}],["|",{"inverse":true}],[" 64 ",{"fg":3,"bold":true}],["To change the key bindings in the calendar window, add entries to this                                          ",{}],["|",{"inverse":true}],[" 15 ",{"fg":3,"bold":true}],["▸ diary/",{"fg":6,"bold":true}],["          ",{}]],"15":[["▼",{"fg":3,"bold":true}],[" Second",{"fg":5,"bold":true}],[" : ",{}],["struct",{"fg":2,"bold":true}],["   ",{}],["|",{"inverse":true}],[" 65 ",{"fg":3,"bold":true}],["dictionary.   Possible keys, the action bound to the keycode given in the                                       ",{}],["|",{"inverse":true}],[" 16 ",{"fg":3,"bold":true}],["▸ temp/",{"fg":6,"bold":true}],["           ",{}]],"16":[["    [prototypes]",{"fg":6,"bold":true}],["    ",{}],["|",{"inverse":true}],[" 66 ",{"fg":3,"bold":true}],["respective value for this key and the default binding are listed below.                                         ",{}],["|",{"inverse":true}],[" 17 ",{"fg":3,"bold":true}],["  .bash_history   ",{}]],"17":[["   ",{}],["+",{"fg":2,"bold":true}],["SecondRun(void) ",{}],["|",{"inverse":true}],[" 67 ",{"fg":3,"bold":true}],["'close'                     Closes calendar window.             'q'                                             ",{}],["|",{"inverse":true}],[" 18 ",{"fg":3,"bold":true}],["  .bash_logout    ",{}]],"18":[["   ",{}],["+",{"fg":2,"bold":true}],["SecondRun2(void)",{}],["|",{"inverse":true}],[" 68 ",{"fg":3,"bold":true}],["'do_action'                 Executes |calendar_action|.           '<CR>'                                        ",{}],["|",{"inverse":true}],[" 19 ",{"fg":3,"bold":true}],["  .bash_profile   ",{"underline":true}]],"19":[["                    ",{}],["|",{"inverse":true}],[" 69 ",{"fg":3,"bold":true}],["'goto_today'                Executes |calendar_today|.            't'                                           ",{}],["|",{"inverse":true}],[" 20 ",{"fg":3,"bold":true}],["  .bashrc         ",{}]],"20":[["▼",{"fg":3,"bold":true}],[" ",{}],["functions",{"fg":6,"bold":true}],["         ",{}],["|",{"inverse":true}],[" 70 ",{"fg":3,"bold":true}],["'show_help'                 Displays a short help message.      '?'                                             ",{}],["|",{"inverse":true}],[" 21 ",{"fg":3,"bold":true}],["  .cshrc          ",{}]],"21":[["    main(int argc, c",{"underline":true}],["|",{"inverse":true}],[" 71 ",{"fg":3,"bold":true}],["'redisplay'                 Redraws calendar window.            'r'                                             ",{}],["|",{"inverse":true}],[" 22 ",{"fg":3,"bold":true}],["  .dmrc           ",{}]],"22":[["~                   ",{"fg":4,"bold":true}],["|",{"inverse":true}],[" 72 ",{"fg":3,"bold":true}],["'goto_next_month'           Jumps to the next month.            '<Right>'                                       ",{}],["|",{"inverse":true}],[" 23 ",{"fg":3,"bold":true}],["  .esd_auth       ",{}]],"23":[["~                   ",{"fg":4,"bold":true}],["|",{"inverse":true}],[" 73 ",{"fg":3,"bold":true}],["'goto_prev_month'           Jumps to the previous month.        '<Left>'                                        ",{}],["|",{"inverse":true}],[" 24 ",{"fg":3,"bold":true}],["  .gtkrc-2.0      ",{}]],"24":[["~                   ",{"fg":4,"bold":true}],["|",{"inverse":true}],[" 74 ",{"fg":3,"bold":true}],["'goto_next_year'            Jumps to the next year.             '<Up>'                                          ",{}],["|",{"inverse":true}],[" 25 ",{"fg":3,"bold":true}],["  .gtkrc-2.0-kde4 ",{}]],"25":[["~                   ",{"fg":4,"bold":true}],["|",{"inverse":true}],[" 75 ",{"fg":3,"bold":true}],["'goto_prev_year'            Jumps to the previous year.         '<Down>'                                        ",{}],["|",{"inverse":true}],[" 26 ",{"fg":3,"bold":true}],["  .lesshst        ",{}]],"26":[["~                   ",{"fg":4,"bold":true}],["|",{"inverse":true}],[" 76 ",{"fg":3,"bold":true}],["An example in your .vimrc might look like this: >                                                               ",{}],["|",{"inverse":true}],[" 27 ",{"fg":3,"bold":true}],["  .tcshrc         ",{}]],"27":[["~                   ",{"fg":4,"bold":true}],["|",{"inverse":true}],[" 77 ",{"fg":3,"bold":true}],["  let g:calendar_keys = { 'goto_next_month': '<C-Right>', 'goto_prev_month': '<C-Left>'}                        ",{}],["|",{"inverse":true}],[" 28 ",{"fg":3,"bold":true}],["  .viminfo        ",{}]],"28":[["~                   ",{"fg":4,"bold":true}],["|",{"inverse":true}],[" 78 ",{"fg":3,"bold":true}],["<                                                                                                               ",{}],["|",{"inverse":true}],[" 29 ",{"fg":3,"bold":true}],["  .vimrc          ",{}]],"29":[["~                   ",{"fg":4,"bold":true}],["|",{"inverse":true}],[" 79 ",{"fg":3,"bold":true}],["                                                                                                                ",{}],["|",{"inverse":true}],[" 30 ",{"fg":3,"bold":true}],["  .xsession-errors",{}]],"30":[["~                   ",{"fg":4,"bold":true}],["|",{"inverse":true}],[" 80 ",{"fg":3,"bold":true}],["                                                *g:calendar_mark*                                               ",{}],["|",{"inverse":true}],[" 31 ",{"fg":3,"bold":true}],["  anaconda-ks.cfg ",{}]],"31":[["~                   ",{"fg":4,"bold":true}],["|",{"inverse":true}],[" 81 ",{"fg":3,"bold":true}],["Place a '*' or '+' mark after the day.  Acceptable values are 'left',                                           ",{}],["|",{"inverse":true}],[" 32 ",{"fg":3,"bold":true}],["  initial-setup-ks",{}]],"32":[["~                   ",{"fg":4,"bold":true}],["|",{"inverse":true}],[" 82 ",{"fg":3,"bold":true}],["'left-fit', and 'right': >                                                                                      ",{}],["|",{"inverse":true}],[" 33 ",{"fg":3,"bold":true}],["  test.c          ",{}]],"33":[["~                   ",{"fg":4,"bold":true}],["|",{"inverse":true}],[" 83 ",{"fg":3,"bold":true}],["  let g:calendar_mark = 'right'                                                                                 ",{}],["|",{"inverse":true}],[" 34 ",{"fg":3,"bold":true}],["  test.cpp        ",{}]],"34":[["~                   ",{"fg":4,"bold":true}],["|",{"inverse":true}],[" 84 ",{"fg":3,"bold":true}],["<                                                                                                               ",{}],["|",{"inverse":true}],[" 35 ",{"fg":3,"bold":true}],["  .test.cpp.swp   ",{}]],"35":[["~                   ",{"fg":4,"bold":true}],["|",{"inverse":true}],[" 85 ",{"fg":3,"bold":true}],["                                                                                                                ",{}],["|",{"inverse":true}],["~                     ",{"fg":4,"bold":true}]],"36":[["~                   ",{"fg":4,"bold":true}],["|",{"inverse":true}],[" 86 ",{"fg":3,"bold":true}],["                                                *g:calendar_diary*                                              ",{}],["|",{"inverse":true}],["~                     ",{"fg":4,"bold":true}]],"37":[["~                   ",{"fg":4,"bold":true}],["|",{"inverse":true}],[" 87 ",{"fg":3,"bold":true}],["Specify the directory for the diary files.  The default value is $HOME/diary.                                   ",{}],["|",{"inverse":true}],["~                     ",{"fg":4,"bold":true}]],"38":[["~                   ",{"fg":4,"bold":true}],["|",{"inverse":true}],[" 88 ",{"fg":3,"bold":true}],["  let g:calendar_diary=$HOME.'/.vim/diary'                                                                      ",{}],["|",{"inverse":true}],["~                     ",{"fg":4,"bold":true}]],"39":[["~                   ",{"fg":4,"bold":true}],["|",{"inverse":true}],[" 89 ",{"fg":3,"bold":true}],["                                                                                                                ",{}],["|",{"inverse":true}],["~                     ",{"fg":4,"bold":true}]],"40":[["~                   ",{"fg":4,"bold":true}],["|",{"inverse":true}],[" 90 ",{"fg":3,"bold":true}],["                                                                                                                ",{}],["|",{"inverse":true}],["~                     ",{"fg":4,"bold":true}]],"41":[["~                   ",{"fg":4,"bold":true}],["|",{"inverse":true}],[" 91 ",{"fg":3,"bold":true}],["                                                *g:calendar_navi*                                               ",{}],["|",{"inverse":true}],["~                     ",{"fg":4,"bold":true}]],"42":[["~                   ",{"fg":4,"bold":true}],["|",{"inverse":true}],[" 92 ",{"fg":3,"bold":true}],["To control the calendar navigator, set this variable.  Acceptable values are                                    ",{}],["|",{"inverse":true}],["~                     ",{"fg":4,"bold":true}]],"43":[["~                   ",{"fg":4,"bold":true}],["|",{"inverse":true}],[" 93 ",{"fg":3,"bold":true}],["'top', 'bottom', or 'both'. >                                                                                   ",{}],["|",{"inverse":true}],["~                     ",{"fg":4,"bold":true}]],"44":[["~                   ",{"fg":4,"bold":true}],["|",{"inverse":true}],[" 94 ",{"fg":3,"bold":true}],["  let g:calendar_navi = ''                      ",{"underline":true}],["                                                                ",{}],["|",{"inverse":true}],["~                     ",{"fg":4,"bold":true}]]},"cursor":{"x":73,"y":44,"visible":false}}],[0.039175,{"lines":{"44":[["~                   ",{"fg":4,"bold":true}],["|",{"inverse":true}],[" 94 ",{"fg":3,"bold":true}],["  let g:calendar_navi = ''                                                                                      ",{}],["|",{"inverse":true}],["~                     ",{"fg":4,"bold":true}]],"45":[["~                   ",{"fg":4,"bold":true}],["|",{"inverse":true}],[" 95 ",{"fg":3,"bold":true}],["<                                                                                                               ",{"underline":true}],["|",{"inverse":true}],["~                     ",{"fg":4,"bold":true}]],"46":[["[Name] test.cpp      ",{"inverse":true}],[" NORMAL ",{"bold":true}],[" ",{}],["calendar.txt ",{"bold":true}],["                                                        unix │ utf-8 │ text │  43% ",{}],[" LN  95",{"bold":true}],[":1  ",{}],[" ",{"bold":true,"inverse":true}],[" ~/…/calendar-vim/doc>",{"bold":true}]]},"cursor":{"x":25,"y":45,"visible":true}}],[0.007816999999999999,{"lines":{"0":[["\" Press <F1> for hel",{"fg":6,"bold":true}],["|",{"inverse":true}],[" 51 ",{"fg":3,"bold":true}],["<LocalLeader>",{}],["caL ",{"bg":1}],["        ",{}],[" Bri",{"bg":1}],["ngs up the calendar in a horizontal split.                                         ",{}],["|",{"inverse":true}],["  1 ",{"fg":3,"bold":true}],["\" Press ? for help",{"fg":5,"bold":true}]],"1":[["                    ",{}],["|",{"inverse":true}],[" 52 ",{"fg":3,"bold":true}],["                          Equivalent to calling |:CalendarH|.                                                   ",{}],["|",{"inverse":true}],["  2 ",{"fg":3,"bold":true}],["                  ",{}]],"2":[["▼",{"fg":3,"bold":true}],[" First",{"fg":5,"bold":true}],[" : ",{}],["struct",{"fg":2,"bold":true}],["    ",{}],["|",{"inverse":true}],[" 53 ",{"fg":3,"bold":true}],["                                                                                                                ",{}],["|",{"inverse":true}],["  3 ",{"fg":3,"bold":true}],[".. (up a dir)",{"fg":6,"bold":true}],["     ",{}]],"3":[["    [prototypes]",{"fg":6,"bold":true}],["    ",{}],["|",{"inverse":true}],[" 54 ",{"fg":3,"bold":true}],["SETTINGS                                        *calendar-settings*                                             ",{}],["|",{"inverse":true}],["  4 /root/",{"fg":3,"bold":true}],["            ",{}]],"4":[["   ",{}],["+",{"fg":2,"bold":true}],["FirstRun(void)  ",{}],["|",{"inverse":true}],[" 55 ",{"fg":3,"bold":true}],["                                                                                                                ",{}],["|",{"inverse":true}],["  5 ",{"fg":3,"bold":true}],["▸ .asciinema/",{"fg":6,"bold":true}],["     ",{}]],"5":[["   ",{}],["+",{"fg":2,"bold":true}],["FirstRun2(void) ",{}],["|",{"inverse":true}],[" 56 ",{"fg":3,"bold":true}],["calendar.vim can be con",{}],["figured using the following sett",{"bg":1}],["ings:                                                    ",{}],["|",{"inverse":true}],["  6 ",{"fg":3,"bold":true}],["▸ .cache/",{"fg":6,"bold":true}],["         ",{}]],"6":[["                    ",{}],["|",{"inverse":true}],[" 57 ",{"fg":3,"bold":true}],["                                                                                                                ",{}],["|",{"inverse":true}],["  7 ",{"fg":3,"bold":true}],["▸ .config/",{"fg":6,"bold":true}],["        ",{}]],"7":[["▼",{"fg":3,"bold":true}],[" Last",{"fg":5,"bold":true}],[" : ",{}],["struct",{"fg":2,"bold":true}],["     ",{}],["|",{"inverse":true}],[" 58 ",{"fg":3,"bold":true}],["                                                *g:calendar_focus_today*                                        ",{}],["|",{"inverse":true}],["  8 ",{"fg":3,"bold":true}],["▸ .dbus/",{"fg":6,"bold":true}],["          ",{}]],"8":[["    [functions]",{"fg":6,"bold":true}],["     ",{}],["|",{"inverse":true}],[" 59 ",{"fg":3,"bold":true}],["Keeps focus when moving to next or previous calendar: >                                                         ",{}],["|",{"inverse":true}],["  9 ",{"fg":3,"bold":true}],["▸ .gnupg/",{"fg":6,"bold":true}],["         ",{}]],"9":[["   ",{}],["+",{"fg":2,"bold":true}],["FirstRun(void)  ",{}],["|",{"inverse":true}],[" 60 ",{"fg":3,"bold":true}],["  let g:calendar_focus_today = 1                                                                                ",{}],["|",{"inverse":true}],[" 10 ",{"fg":3,"bold":true}],["▸ .kde/",{"fg":6,"bold":true}],["           ",{}]],"10":[["   ",{}],["+",{"fg":2,"bold":true}],["FirstRun2(void) ",{}],["|",{"inverse":true}],[" 61 ",{"fg":3,"bold":true}],["<                                                                                                               ",{}],["|",{"inverse":true}],[" 11 ",{"fg":3,"bold":true}],["▸ .local/",{"fg":6,"bold":true}],["         ",{}]],"11":[["   ",{}],["+",{"fg":2,"bold":true}],["~Last()         ",{}],["|",{"inverse":true}],[" 62 ",{"fg":3,"bold":true}],["                                                                                                                ",{}],["|",{"inverse":true}],[" 12 ",{"fg":3,"bold":true}],["▸ .pki/",{"fg":6,"bold":true}],["           ",{}]],"12":[["   ",{}],["+",{"fg":2,"bold":true}],["SecondRun(void) ",{}],["|",{"inverse":true}],[" 63 ",{"fg":3,"bold":true}],["                                                *g:calendar_keys*                                               ",{}],["|",{"inverse":true}],[" 13 ",{"fg":3,"bold":true}],["▸ .ssh/",{"fg":6,"bold":true}],["           ",{}]],"13":[["   ",{}],["+",{"fg":2,"bold":true}],["SecondRun2(void)",{}],["|",{"inverse":true}],[" 64 ",{"fg":3,"bold":true}],["To change the key bindings in the calendar window, add entries to this                                          ",{}],["|",{"inverse":true}],[" 14 ",{"fg":3,"bold":true}],["▸ .vim/",{"fg":6,"bold":true}],["           ",{}]],"14":[["                    ",{}],["|",{"inverse":true}],[" 65 ",{"fg":3,"bold":true}],["dictionary.   Possible keys, the action bound to the keycode given in the                                       ",{}],["|",{"inverse":true}],[" 15 ",{"fg":3,"bold":true}],["▸ diary/",{"fg":6,"bold":true}],["          ",{}]],"15":[["▼",{"fg":3,"bold":true}],[" Second",{"fg":5,"bold":true}],[" : ",{}],["struct",{"fg":2,"bold":true}],["   ",{}],["|",{"inverse":true}],[" 66 ",{"fg":3,"bold":true}],["respective value for this key and the default binding are listed below.                                         ",{}],["|",{"inverse":true}],[" 16 ",{"fg":3,"bold":true}],["▸ temp/",{"fg":6,"bold":true}],["           ",{}]],"16":[["    [prototypes]",{"fg":6,"bold":true}],["    ",{}],["|",{"inverse":true}],[" 67 ",{"fg":3,"bold":true}],["'close'                     Closes calendar window.             'q'                                             ",{}],["|",{"inverse":true}],[" 17 ",{"fg":3,"bold":true}],["  .bash_history   ",{}]],"17":[["   ",{}],["+",{"fg":2,"bold":true}],["SecondRun(void) ",{}],["|",{"inverse":true}],[" 68 ",{"fg":3,"bold":true}],["'do_action'                 Executes |calendar_action|.           '<CR>'                                        ",{}],["|",{"inverse":true}],[" 18 ",{"fg":3,"bold":true}],["  .bash_logout    ",{}]],"18":[["   ",{}],["+",{"fg":2,"bold":true}],["SecondRun2(void)",{}],["|",{"inverse":true}],[" 69 ",{"fg":3,"bold":true}],["'goto_today'                Executes |calendar_today|.            't'                                           ",{}],["|",{"inverse":true}],[" 19 ",{"fg":3,"bold":true}],["  .bash_profile   ",{"underline":true}]],"19":[["                    ",{}],["|",{"inverse":true}],[" 70 ",{"fg":3,"bold":true}],["'show_help'                 Displays a short help message.      '?'                                             ",{}],["|",{"inverse":true}],[" 20 ",{"fg":3,"bold":true}],["  .bashrc         ",{}]],"20":[["▼",{"fg":3,"bold":true}],[" ",{}],["functions",{"fg":6,"bold":true}],["         ",{}],["|",{"inverse":true}],[" 71 ",{"fg":3,"bold":true}],["'redisplay'                 Redraws calendar window.            'r'                                             ",{}],["|",{"inverse":true}],[" 21 ",{"fg":3,"bold":true}],["  .cshrc          ",{}]],"21":[["    main(int argc, c",{"underline":true}],["|",{"inverse":true}],[" 72 ",{"fg":3,"bold":true}],["'goto_next_month'           Jumps to the next month.            '<Right>'                                       ",{}],["|",{"inverse":true}],[" 22 ",{"fg":3,"bold":true}],["  .dmrc           ",{}]],"22":[["~                   ",{"fg":4,"bold":true}],["|",{"inverse":true}],[" 73 ",{"fg":3,"bold":true}],["'goto_prev_month'           Jumps to the previous month.        '<Left>'                                        ",{}],["|",{"inverse":true}],[" 23 ",{"fg":3,"bold":true}],["  .esd_auth       ",{}]],"23":[["~                   ",{"fg":4,"bold":true}],["|",{"inverse":true}],[" 74 ",{"fg":3,"bold":true}],["'goto_next_year'            Jumps to the next year.             '<Up>'                                          ",{}],["|",{"inverse":true}],[" 24 ",{"fg":3,"bold":true}],["  .gtkrc-2.0      ",{}]],"24":[["~                   ",{"fg":4,"bold":true}],["|",{"inverse":true}],[" 75 ",{"fg":3,"bold":true}],["'goto_prev_year'            Jumps to the previous year.         '<Down>'                                        ",{}],["|",{"inverse":true}],[" 25 ",{"fg":3,"bold":true}],["  .gtkrc-2.0-kde4 ",{}]],"25":[["~                   ",{"fg":4,"bold":true}],["|",{"inverse":true}],[" 76 ",{"fg":3,"bold":true}],["An example in your .vimrc might look like this: >                                                               ",{}],["|",{"inverse":true}],[" 26 ",{"fg":3,"bold":true}],["  .lesshst        ",{}]],"26":[["~                   ",{"fg":4,"bold":true}],["|",{"inverse":true}],[" 77 ",{"fg":3,"bold":true}],["  let g:calendar_keys = { 'goto_next_month': '<C-Right>', 'goto_prev_month': '<C-Left>'}                        ",{}],["|",{"inverse":true}],[" 27 ",{"fg":3,"bold":true}],["  .tcshrc         ",{}]],"27":[["~                   ",{"fg":4,"bold":true}],["|",{"inverse":true}],[" 78 ",{"fg":3,"bold":true}],["<                                                                                                               ",{}],["|",{"inverse":true}],[" 28 ",{"fg":3,"bold":true}],["  .viminfo        ",{}]],"28":[["~                   ",{"fg":4,"bold":true}],["|",{"inverse":true}],[" 79 ",{"fg":3,"bold":true}],["                                                                                                                ",{}],["|",{"inverse":true}],[" 29 ",{"fg":3,"bold":true}],["  .vimrc          ",{}]],"29":[["~                   ",{"fg":4,"bold":true}],["|",{"inverse":true}],[" 80 ",{"fg":3,"bold":true}],["                                                *g:calendar_mark*                                               ",{}],["|",{"inverse":true}],[" 30 ",{"fg":3,"bold":true}],["  .xsession-errors",{}]],"30":[["~                   ",{"fg":4,"bold":true}],["|",{"inverse":true}],[" 81 ",{"fg":3,"bold":true}],["Place a '*' or '+' mark after the day.  Acceptable values are 'left',                                           ",{}],["|",{"inverse":true}],[" 31 ",{"fg":3,"bold":true}],["  anaconda-ks.cfg ",{}]],"31":[["~                   ",{"fg":4,"bold":true}],["|",{"inverse":true}],[" 82 ",{"fg":3,"bold":true}],["'left-fit', and 'right': >                                                                                      ",{}],["|",{"inverse":true}],[" 32 ",{"fg":3,"bold":true}],["  initial-setup-ks",{}]],"32":[["~                   ",{"fg":4,"bold":true}],["|",{"inverse":true}],[" 83 ",{"fg":3,"bold":true}],["  let g:calendar_mark = 'right'                                                                                 ",{}],["|",{"inverse":true}],[" 33 ",{"fg":3,"bold":true}],["  test.c          ",{}]],"33":[["~                   ",{"fg":4,"bold":true}],["|",{"inverse":true}],[" 84 ",{"fg":3,"bold":true}],["<                                                                                                               ",{}],["|",{"inverse":true}],[" 34 ",{"fg":3,"bold":true}],["  test.cpp        ",{}]],"34":[["~                   ",{"fg":4,"bold":true}],["|",{"inverse":true}],[" 85 ",{"fg":3,"bold":true}],["                                                                                                                ",{}],["|",{"inverse":true}],[" 35 ",{"fg":3,"bold":true}],["  .test.cpp.swp   ",{}]],"35":[["~                   ",{"fg":4,"bold":true}],["|",{"inverse":true}],[" 86 ",{"fg":3,"bold":true}],["                                                *g:calendar_diary*                                              ",{}],["|",{"inverse":true}],["~                     ",{"fg":4,"bold":true}]],"36":[["~                   ",{"fg":4,"bold":true}],["|",{"inverse":true}],[" 87 ",{"fg":3,"bold":true}],["Specify the directory for the diary files.  The default value is $HOME/diary.                                   ",{}],["|",{"inverse":true}],["~                     ",{"fg":4,"bold":true}]],"37":[["~                   ",{"fg":4,"bold":true}],["|",{"inverse":true}],[" 88 ",{"fg":3,"bold":true}],["  let g:calendar_diary=$HOME.'/.vim/diary'                                                                      ",{}],["|",{"inverse":true}],["~                     ",{"fg":4,"bold":true}]],"38":[["~                   ",{"fg":4,"bold":true}],["|",{"inverse":true}],[" 89 ",{"fg":3,"bold":true}],["                                                                                                                ",{}],["|",{"inverse":true}],["~                     ",{"fg":4,"bold":true}]],"39":[["~                   ",{"fg":4,"bold":true}],["|",{"inverse":true}],[" 90 ",{"fg":3,"bold":true}],["                                                                                                                ",{}],["|",{"inverse":true}],["~                     ",{"fg":4,"bold":true}]],"40":[["~                   ",{"fg":4,"bold":true}],["|",{"inverse":true}],[" 91 ",{"fg":3,"bold":true}],["                                                *g:calendar_navi*                                               ",{}],["|",{"inverse":true}],["~                     ",{"fg":4,"bold":true}]],"41":[["~                   ",{"fg":4,"bold":true}],["|",{"inverse":true}],[" 92 ",{"fg":3,"bold":true}],["To control the calendar navigator, set this variable.  Acceptable values are                                    ",{}],["|",{"inverse":true}],["~                     ",{"fg":4,"bold":true}]],"42":[["~                   ",{"fg":4,"bold":true}],["|",{"inverse":true}],[" 93 ",{"fg":3,"bold":true}],["'top', 'bottom', or 'both'. >                                                                                   ",{}],["|",{"inverse":true}],["~                     ",{"fg":4,"bold":true}]],"43":[["~                   ",{"fg":4,"bold":true}],["|",{"inverse":true}],[" 94 ",{"fg":3,"bold":true}],["  let g:calendar_navi = ''                                                                                      ",{}],["|",{"inverse":true}],["~                     ",{"fg":4,"bold":true}]],"44":[["~                   ",{"fg":4,"bold":true}],["|",{"inverse":true}],[" 95 ",{"fg":3,"bold":true}],["<                                               ",{"underline":true}],["                                                                ",{}],["|",{"inverse":true}],["~                     ",{"fg":4,"bold":true}]]},"cursor":{"x":73,"y":44,"visible":false}}],[0.01772,{"lines":{"44":[["~                   ",{"fg":4,"bold":true}],["|",{"inverse":true}],[" 95 ",{"fg":3,"bold":true}],["<                                                                                                               ",{}],["|",{"inverse":true}],["~                     ",{"fg":4,"bold":true}]],"45":[["~                   ",{"fg":4,"bold":true}],["|",{"inverse":true}],[" 96 ",{"fg":3,"bold":true}],["                                                                                                                ",{"underline":true}],["|",{"inverse":true}],["~                     ",{"fg":4,"bold":true}]],"46":[["[Name] test.cpp      ",{"inverse":true}],[" NORMAL ",{"bold":true}],[" ",{}],["calendar.txt ",{"bold":true}],["                                                        unix │ utf-8 │ text │  43% ",{}],[" LN  96",{"bold":true}],[":1  ",{}],[" ",{"bold":true,"inverse":true}],[" ~/…/calendar-vim/doc>",{"bold":true}]]},"cursor":{"x":25,"y":45,"visible":true}}],[0.00428,{"lines":{"0":[["\" Press <F1> for hel",{"fg":6,"bold":true}],["|",{"inverse":true}],[" 52 ",{"fg":3,"bold":true}],["                          Equivalent to calling |:CalendarH|.                                                   ",{}],["|",{"inverse":true}],["  1 ",{"fg":3,"bold":true}],["\" Press ? for help",{"fg":5,"bold":true}]],"1":[["                    ",{}],["|",{"inverse":true}],[" 53 ",{"fg":3,"bold":true}],["                                                                                                                ",{}],["|",{"inverse":true}],["  2 ",{"fg":3,"bold":true}],["                  ",{}]],"2":[["▼",{"fg":3,"bold":true}],[" First",{"fg":5,"bold":true}],[" : ",{}],["struct",{"fg":2,"bold":true}],["    ",{}],["|",{"inverse":true}],[" 54 ",{"fg":3,"bold":true}],["SETTINGS                                        *calendar-settings*                                             ",{}],["|",{"inverse":true}],["  3 ",{"fg":3,"bold":true}],[".. (up a dir)",{"fg":6,"bold":true}],["     ",{}]],"3":[["    [prototypes]",{"fg":6,"bold":true}],["    ",{}],["|",{"inverse":true}],[" 55 ",{"fg":3,"bold":true}],["                                                                                                                ",{}],["|",{"inverse":true}],["  4 /root/",{"fg":3,"bold":true}],["            ",{}]],"4":[["   ",{}],["+",{"fg":2,"bold":true}],["FirstRun(void)  ",{}],["|",{"inverse":true}],[" 56 ",{"fg":3,"bold":true}],["calendar.vim can be con",{}],["figured using the following sett",{"bg":1}],["ings:                                                    ",{}],["|",{"inverse":true}],["  5 ",{"fg":3,"bold":true}],["▸ .asciinema/",{"fg":6,"bold":true}],["     ",{}]],"5":[["   ",{}],["+",{"fg":2,"bold":true}],["FirstRun2(void) ",{}],["|",{"inverse":true}],[" 57 ",{"fg":3,"bold":true}],["                                                                                                                ",{}],["|",{"inverse":true}],["  6 ",{"fg":3,"bold":true}],["▸ .cache/",{"fg":6,"bold":true}],["         ",{}]],"6":[["                    ",{}],["|",{"inverse":true}],[" 58 ",{"fg":3,"bold":true}],["                                                *g:calendar_focus_today*                                        ",{}],["|",{"inverse":true}],["  7 ",{"fg":3,"bold":true}],["▸ .config/",{"fg":6,"bold":true}],["        ",{}]],"7":[["▼",{"fg":3,"bold":true}],[" Last",{"fg":5,"bold":true}],[" : ",{}],["struct",{"fg":2,"bold":true}],["     ",{}],["|",{"inverse":true}],[" 59 ",{"fg":3,"bold":true}],["Keeps focus when moving to next or previous calendar: >                                                         ",{}],["|",{"inverse":true}],["  8 ",{"fg":3,"bold":true}],["▸ .dbus/",{"fg":6,"bold":true}],["          ",{}]],"8":[["    [functions]",{"fg":6,"bold":true}],["     ",{}],["|",{"inverse":true}],[" 60 ",{"fg":3,"bold":true}],["  let g:calendar_focus_today = 1                                                                                ",{}],["|",{"inverse":true}],["  9 ",{"fg":3,"bold":true}],["▸ .gnupg/",{"fg":6,"bold":true}],["         ",{}]],"9":[["   ",{}],["+",{"fg":2,"bold":true}],["FirstRun(void)  ",{}],["|",{"inverse":true}],[" 61 ",{"fg":3,"bold":true}],["<                                                                                                               ",{}],["|",{"inverse":true}],[" 10 ",{"fg":3,"bold":true}],["▸ .kde/",{"fg":6,"bold":true}],["           ",{}]],"10":[["   ",{}],["+",{"fg":2,"bold":true}],["FirstRun2(void) ",{}],["|",{"inverse":true}],[" 62 ",{"fg":3,"bold":true}],["                                                                                                                ",{}],["|",{"inverse":true}],[" 11 ",{"fg":3,"bold":true}],["▸ .local/",{"fg":6,"bold":true}],["         ",{}]],"11":[["   ",{}],["+",{"fg":2,"bold":true}],["~Last()         ",{}],["|",{"inverse":true}],[" 63 ",{"fg":3,"bold":true}],["                                                *g:calendar_keys*                                               ",{}],["|",{"inverse":true}],[" 12 ",{"fg":3,"bold":true}],["▸ .pki/",{"fg":6,"bold":true}],["           ",{}]],"12":[["   ",{}],["+",{"fg":2,"bold":true}],["SecondRun(void) ",{}],["|",{"inverse":true}],[" 64 ",{"fg":3,"bold":true}],["To change the key bindings in the calendar window, add entries to this                                          ",{}],["|",{"inverse":true}],[" 13 ",{"fg":3,"bold":true}],["▸ .ssh/",{"fg":6,"bold":true}],["           ",{}]],"13":[["   ",{}],["+",{"fg":2,"bold":true}],["SecondRun2(void)",{}],["|",{"inverse":true}],[" 65 ",{"fg":3,"bold":true}],["dictionary.   Possible keys, the action bound to the keycode given in the                                       ",{}],["|",{"inverse":true}],[" 14 ",{"fg":3,"bold":true}],["▸ .vim/",{"fg":6,"bold":true}],["           ",{}]],"14":[["                    ",{}],["|",{"inverse":true}],[" 66 ",{"fg":3,"bold":true}],["respective value for this key and the default binding are listed below.                                         ",{}],["|",{"inverse":true}],[" 15 ",{"fg":3,"bold":true}],["▸ diary/",{"fg":6,"bold":true}],["          ",{}]],"15":[["▼",{"fg":3,"bold":true}],[" Second",{"fg":5,"bold":true}],[" : ",{}],["struct",{"fg":2,"bold":true}],["   ",{}],["|",{"inverse":true}],[" 67 ",{"fg":3,"bold":true}],["'close'                     Closes calendar window.             'q'                                             ",{}],["|",{"inverse":true}],[" 16 ",{"fg":3,"bold":true}],["▸ temp/",{"fg":6,"bold":true}],["           ",{}]],"16":[["    [prototypes]",{"fg":6,"bold":true}],["    ",{}],["|",{"inverse":true}],[" 68 ",{"fg":3,"bold":true}],["'do_action'                 Executes |calendar_action|.           '<CR>'                                        ",{}],["|",{"inverse":true}],[" 17 ",{"fg":3,"bold":true}],["  .bash_history   ",{}]],"17":[["   ",{}],["+",{"fg":2,"bold":true}],["SecondRun(void) ",{}],["|",{"inverse":true}],[" 69 ",{"fg":3,"bold":true}],["'goto_today'                Executes |calendar_today|.            't'                                           ",{}],["|",{"inverse":true}],[" 18 ",{"fg":3,"bold":true}],["  .bash_logout    ",{}]],"18":[["   ",{}],["+",{"fg":2,"bold":true}],["SecondRun2(void)",{}],["|",{"inverse":true}],[" 70 ",{"fg":3,"bold":true}],["'show_help'                 Displays a short help message.      '?'                                             ",{}],["|",{"inverse":true}],[" 19 ",{"fg":3,"bold":true}],["  .bash_profile   ",{"underline":true}]],"19":[["                    ",{}],["|",{"inverse":true}],[" 71 ",{"fg":3,"bold":true}],["'redisplay'                 Redraws calendar window.            'r'                                             ",{}],["|",{"inverse":true}],[" 20 ",{"fg":3,"bold":true}],["  .bashrc         ",{}]],"20":[["▼",{"fg":3,"bold":true}],[" ",{}],["functions",{"fg":6,"bold":true}],["         ",{}],["|",{"inverse":true}],[" 72 ",{"fg":3,"bold":true}],["'goto_next_month'           Jumps to the next month.            '<Right>'                                       ",{}],["|",{"inverse":true}],[" 21 ",{"fg":3,"bold":true}],["  .cshrc          ",{}]],"21":[["    main(int argc, c",{"underline":true}],["|",{"inverse":true}],[" 73 ",{"fg":3,"bold":true}],["'goto_prev_month'           Jumps to the previous month.        '<Left>'                                        ",{}],["|",{"inverse":true}],[" 22 ",{"fg":3,"bold":true}],["  .dmrc           ",{}]],"22":[["~                   ",{"fg":4,"bold":true}],["|",{"inverse":true}],[" 74 ",{"fg":3,"bold":true}],["'goto_next_year'            Jumps to the next year.             '<Up>'                                          ",{}],["|",{"inverse":true}],[" 23 ",{"fg":3,"bold":true}],["  .esd_auth       ",{}]],"23":[["~                   ",{"fg":4,"bold":true}],["|",{"inverse":true}],[" 75 ",{"fg":3,"bold":true}],["'goto_prev_year'            Jumps to the previous year.         '<Down>'                                        ",{}],["|",{"inverse":true}],[" 24 ",{"fg":3,"bold":true}],["  .gtkrc-2.0      ",{}]],"24":[["~                   ",{"fg":4,"bold":true}],["|",{"inverse":true}],[" 76 ",{"fg":3,"bold":true}],["An example in your .vimrc might look like this: >                                                               ",{}],["|",{"inverse":true}],[" 25 ",{"fg":3,"bold":true}],["  .gtkrc-2.0-kde4 ",{}]],"25":[["~                   ",{"fg":4,"bold":true}],["|",{"inverse":true}],[" 77 ",{"fg":3,"bold":true}],["  let g:calendar_keys = { 'goto_next_month': '<C-Right>', 'goto_prev_month': '<C-Left>'}                        ",{}],["|",{"inverse":true}],[" 26 ",{"fg":3,"bold":true}],["  .lesshst        ",{}]],"26":[["~                   ",{"fg":4,"bold":true}],["|",{"inverse":true}],[" 78 ",{"fg":3,"bold":true}],["<                                                                                                               ",{}],["|",{"inverse":true}],[" 27 ",{"fg":3,"bold":true}],["  .tcshrc         ",{}]],"27":[["~                   ",{"fg":4,"bold":true}],["|",{"inverse":true}],[" 79 ",{"fg":3,"bold":true}],["                                                                                                                ",{}],["|",{"inverse":true}],[" 28 ",{"fg":3,"bold":true}],["  .viminfo        ",{}]],"28":[["~                   ",{"fg":4,"bold":true}],["|",{"inverse":true}],[" 80 ",{"fg":3,"bold":true}],["                                                *g:calendar_mark*                                               ",{}],["|",{"inverse":true}],[" 29 ",{"fg":3,"bold":true}],["  .vimrc          ",{}]],"29":[["~                   ",{"fg":4,"bold":true}],["|",{"inverse":true}],[" 81 ",{"fg":3,"bold":true}],["Place a '*' or '+' mark after the day.  Acceptable values are 'left',                                           ",{}],["|",{"inverse":true}],[" 30 ",{"fg":3,"bold":true}],["  .xsession-errors",{}]],"30":[["~                   ",{"fg":4,"bold":true}],["|",{"inverse":true}],[" 82 ",{"fg":3,"bold":true}],["'left-fit', and 'right': >                                                                                      ",{}],["|",{"inverse":true}],[" 31 ",{"fg":3,"bold":true}],["  anaconda-ks.cfg ",{}]],"31":[["~                   ",{"fg":4,"bold":true}],["|",{"inverse":true}],[" 83 ",{"fg":3,"bold":true}],["  let g:calendar_mark = 'right'                                                                                 ",{}],["|",{"inverse":true}],[" 32 ",{"fg":3,"bold":true}],["  initial-setup-ks",{}]],"32":[["~                   ",{"fg":4,"bold":true}],["|",{"inverse":true}],[" 84 ",{"fg":3,"bold":true}],["<                                                                                                               ",{}],["|",{"inverse":true}],[" 33 ",{"fg":3,"bold":true}],["  test.c          ",{}]],"33":[["~                   ",{"fg":4,"bold":true}],["|",{"inverse":true}],[" 85 ",{"fg":3,"bold":true}],["                                                                                                                ",{}],["|",{"inverse":true}],[" 34 ",{"fg":3,"bold":true}],["  test.cpp        ",{}]],"34":[["~                   ",{"fg":4,"bold":true}],["|",{"inverse":true}],[" 86 ",{"fg":3,"bold":true}],["                                                *g:calendar_diary*                                              ",{}],["|",{"inverse":true}],[" 35 ",{"fg":3,"bold":true}],["  .test.cpp.swp   ",{}]],"35":[["~                   ",{"fg":4,"bold":true}],["|",{"inverse":true}],[" 87 ",{"fg":3,"bold":true}],["Specify the directory for the diary files.  The default value is $HOME/diary.                                   ",{}],["|",{"inverse":true}],["~                     ",{"fg":4,"bold":true}]],"36":[["~                   ",{"fg":4,"bold":true}],["|",{"inverse":true}],[" 88 ",{"fg":3,"bold":true}],["  let g:calendar_diary=$HOME.'/.vim/diary'                                                                      ",{}],["|",{"inverse":true}],["~                     ",{"fg":4,"bold":true}]],"37":[["~                   ",{"fg":4,"bold":true}],["|",{"inverse":true}],[" 89 ",{"fg":3,"bold":true}],["                                                                                                                ",{}],["|",{"inverse":true}],["~                     ",{"fg":4,"bold":true}]],"38":[["~                   ",{"fg":4,"bold":true}],["|",{"inverse":true}],[" 90 ",{"fg":3,"bold":true}],["                                                                                                                ",{}],["|",{"inverse":true}],["~                     ",{"fg":4,"bold":true}]],"39":[["~                   ",{"fg":4,"bold":true}],["|",{"inverse":true}],[" 91 ",{"fg":3,"bold":true}],["                                                *g:calendar_navi*                                               ",{}],["|",{"inverse":true}],["~                     ",{"fg":4,"bold":true}]],"40":[["~                   ",{"fg":4,"bold":true}],["|",{"inverse":true}],[" 92 ",{"fg":3,"bold":true}],["To control the calendar navigator, set this variable.  Acceptable values are                                    ",{}],["|",{"inverse":true}],["~                     ",{"fg":4,"bold":true}]],"41":[["~                   ",{"fg":4,"bold":true}],["|",{"inverse":true}],[" 93 ",{"fg":3,"bold":true}],["'top', 'bottom', or 'both'. >                                                                                   ",{}],["|",{"inverse":true}],["~                     ",{"fg":4,"bold":true}]],"42":[["~                   ",{"fg":4,"bold":true}],["|",{"inverse":true}],[" 94 ",{"fg":3,"bold":true}],["  let g:calendar_navi = ''                                                                                      ",{}],["|",{"inverse":true}],["~                     ",{"fg":4,"bold":true}]],"43":[["~                   ",{"fg":4,"bold":true}],["|",{"inverse":true}],[" 95 ",{"fg":3,"bold":true}],["<                                                                                                               ",{}],["|",{"inverse":true}],["~                     ",{"fg":4,"bold":true}]],"44":[["~                   ",{"fg":4,"bold":true}],["|",{"inverse":true}],[" 96 ",{"fg":3,"bold":true}],["                                                                  ",{"underline":true}],["                                              ",{}],["|",{"inverse":true}],["~                     ",{"fg":4,"bold":true}]]},"cursor":{"x":91,"y":44,"visible":false}}],[0.032588,{"lines":{"44":[["~                   ",{"fg":4,"bold":true}],["|",{"inverse":true}],[" 96 ",{"fg":3,"bold":true}],["                                                                                                                ",{}],["|",{"inverse":true}],["~                     ",{"fg":4,"bold":true}]],"45":[["~                   ",{"fg":4,"bold":true}],["|",{"inverse":true}],[" 97 ",{"fg":3,"bold":true}],["                                                *g:calendar_navi_label*                                         ",{"underline":true}],["|",{"inverse":true}],["~                     ",{"fg":4,"bold":true}]],"46":[["[Name] test.cpp      ",{"inverse":true}],[" NORMAL ",{"bold":true}],[" ",{}],["calendar.txt ",{"bold":true}],["                                                        unix │ utf-8 │ text │  44% ",{}],[" LN  97",{"bold":true}],[":1  ",{}],[" ",{"bold":true,"inverse":true}],[" ~/…/calendar-vim/doc>",{"bold":true}]]},"cursor":{"x":25,"y":45,"visible":true}}],[0.007231,{"lines":{"0":[["\" Press <F1> for hel",{"fg":6,"bold":true}],["|",{"inverse":true}],[" 53 ",{"fg":3,"bold":true}],["                                                                                                                ",{}],["|",{"inverse":true}],["  1 ",{"fg":3,"bold":true}],["\" Press ? for help",{"fg":5,"bold":true}]],"1":[["                    ",{}],["|",{"inverse":true}],[" 54 ",{"fg":3,"bold":true}],["SETTINGS                                        *calendar-settings*                                             ",{}],["|",{"inverse":true}],["  2 ",{"fg":3,"bold":true}],["                  ",{}]],"2":[["▼",{"fg":3,"bold":true}],[" First",{"fg":5,"bold":true}],[" : ",{}],["struct",{"fg":2,"bold":true}],["    ",{}],["|",{"inverse":true}],[" 55 ",{"fg":3,"bold":true}],["                                                                                                                ",{}],["|",{"inverse":true}],["  3 ",{"fg":3,"bold":true}],[".. (up a dir)",{"fg":6,"bold":true}],["     ",{}]],"3":[["    [prototypes]",{"fg":6,"bold":true}],["    ",{}],["|",{"inverse":true}],[" 56 ",{"fg":3,"bold":true}],["calendar.vim can be con",{}],["figured using the following sett",{"bg":1}],["ings:                                                    ",{}],["|",{"inverse":true}],["  4 /root/",{"fg":3,"bold":true}],["            ",{}]],"4":[["   ",{}],["+",{"fg":2,"bold":true}],["FirstRun(void)  ",{}],["|",{"inverse":true}],[" 57 ",{"fg":3,"bold":true}],["                                                                                                                ",{}],["|",{"inverse":true}],["  5 ",{"fg":3,"bold":true}],["▸ .asciinema/",{"fg":6,"bold":true}],["     ",{}]],"5":[["   ",{}],["+",{"fg":2,"bold":true}],["FirstRun2(void) ",{}],["|",{"inverse":true}],[" 58 ",{"fg":3,"bold":true}],["                                                *g:calendar_focus_today*                                        ",{}],["|",{"inverse":true}],["  6 ",{"fg":3,"bold":true}],["▸ .cache/",{"fg":6,"bold":true}],["         ",{}]],"6":[["                    ",{}],["|",{"inverse":true}],[" 59 ",{"fg":3,"bold":true}],["Keeps focus when moving to next or previous calendar: >                                                         ",{}],["|",{"inverse":true}],["  7 ",{"fg":3,"bold":true}],["▸ .config/",{"fg":6,"bold":true}],["        ",{}]],"7":[["▼",{"fg":3,"bold":true}],[" Last",{"fg":5,"bold":true}],[" : ",{}],["struct",{"fg":2,"bold":true}],["     ",{}],["|",{"inverse":true}],[" 60 ",{"fg":3,"bold":true}],["  let g:calendar_focus_today = 1                                                                                ",{}],["|",{"inverse":true}],["  8 ",{"fg":3,"bold":true}],["▸ .dbus/",{"fg":6,"bold":true}],["          ",{}]],"8":[["    [functions]",{"fg":6,"bold":true}],["     ",{}],["|",{"inverse":true}],[" 61 ",{"fg":3,"bold":true}],["<                                                                                                               ",{}],["|",{"inverse":true}],["  9 ",{"fg":3,"bold":true}],["▸ .gnupg/",{"fg":6,"bold":true}],["         ",{}]],"9":[["   ",{}],["+",{"fg":2,"bold":true}],["FirstRun(void)  ",{}],["|",{"inverse":true}],[" 62 ",{"fg":3,"bold":true}],["                                                                                                                ",{}],["|",{"inverse":true}],[" 10 ",{"fg":3,"bold":true}],["▸ .kde/",{"fg":6,"bold":true}],["           ",{}]],"10":[["   ",{}],["+",{"fg":2,"bold":true}],["FirstRun2(void) ",{}],["|",{"inverse":true}],[" 63 ",{"fg":3,"bold":true}],["                                                *g:calendar_keys*                                               ",{}],["|",{"inverse":true}],[" 11 ",{"fg":3,"bold":true}],["▸ .local/",{"fg":6,"bold":true}],["         ",{}]],"11":[["   ",{}],["+",{"fg":2,"bold":true}],["~Last()         ",{}],["|",{"inverse":true}],[" 64 ",{"fg":3,"bold":true}],["To change the key bindings in the calendar window, add entries to this                                          ",{}],["|",{"inverse":true}],[" 12 ",{"fg":3,"bold":true}],["▸ .pki/",{"fg":6,"bold":true}],["           ",{}]],"12":[["   ",{}],["+",{"fg":2,"bold":true}],["SecondRun(void) ",{}],["|",{"inverse":true}],[" 65 ",{"fg":3,"bold":true}],["dictionary.   Possible keys, the action bound to the keycode given in the                                       ",{}],["|",{"inverse":true}],[" 13 ",{"fg":3,"bold":true}],["▸ .ssh/",{"fg":6,"bold":true}],["           ",{}]],"13":[["   ",{}],["+",{"fg":2,"bold":true}],["SecondRun2(void)",{}],["|",{"inverse":true}],[" 66 ",{"fg":3,"bold":true}],["respective value for this key and the default binding are listed below.                                         ",{}],["|",{"inverse":true}],[" 14 ",{"fg":3,"bold":true}],["▸ .vim/",{"fg":6,"bold":true}],["           ",{}]],"14":[["                    ",{}],["|",{"inverse":true}],[" 67 ",{"fg":3,"bold":true}],["'close'                     Closes calendar window.             'q'                                             ",{}],["|",{"inverse":true}],[" 15 ",{"fg":3,"bold":true}],["▸ diary/",{"fg":6,"bold":true}],["          ",{}]],"15":[["▼",{"fg":3,"bold":true}],[" Second",{"fg":5,"bold":true}],[" : ",{}],["struct",{"fg":2,"bold":true}],["   ",{}],["|",{"inverse":true}],[" 68 ",{"fg":3,"bold":true}],["'do_action'                 Executes |calendar_action|.           '<CR>'                                        ",{}],["|",{"inverse":true}],[" 16 ",{"fg":3,"bold":true}],["▸ temp/",{"fg":6,"bold":true}],["           ",{}]],"16":[["    [prototypes]",{"fg":6,"bold":true}],["    ",{}],["|",{"inverse":true}],[" 69 ",{"fg":3,"bold":true}],["'goto_today'                Executes |calendar_today|.            't'                                           ",{}],["|",{"inverse":true}],[" 17 ",{"fg":3,"bold":true}],["  .bash_history   ",{}]],"17":[["   ",{}],["+",{"fg":2,"bold":true}],["SecondRun(void) ",{}],["|",{"inverse":true}],[" 70 ",{"fg":3,"bold":true}],["'show_help'                 Displays a short help message.      '?'                                             ",{}],["|",{"inverse":true}],[" 18 ",{"fg":3,"bold":true}],["  .bash_logout    ",{}]],"18":[["   ",{}],["+",{"fg":2,"bold":true}],["SecondRun2(void)",{}],["|",{"inverse":true}],[" 71 ",{"fg":3,"bold":true}],["'redisplay'                 Redraws calendar window.            'r'                                             ",{}],["|",{"inverse":true}],[" 19 ",{"fg":3,"bold":true}],["  .bash_profile   ",{"underline":true}]],"19":[["                    ",{}],["|",{"inverse":true}],[" 72 ",{"fg":3,"bold":true}],["'goto_next_month'           Jumps to the next month.            '<Right>'                                       ",{}],["|",{"inverse":true}],[" 20 ",{"fg":3,"bold":true}],["  .bashrc         ",{}]],"20":[["▼",{"fg":3,"bold":true}],[" ",{}],["functions",{"fg":6,"bold":true}],["         ",{}],["|",{"inverse":true}],[" 73 ",{"fg":3,"bold":true}],["'goto_prev_month'           Jumps to the previous month.        '<Left>'                                        ",{}],["|",{"inverse":true}],[" 21 ",{"fg":3,"bold":true}],["  .cshrc          ",{}]],"21":[["    main(int argc, c",{"underline":true}],["|",{"inverse":true}],[" 74 ",{"fg":3,"bold":true}],["'goto_next_year'            Jumps to the next year.             '<Up>'                                          ",{}],["|",{"inverse":true}],[" 22 ",{"fg":3,"bold":true}],["  .dmrc           ",{}]],"22":[["~                   ",{"fg":4,"bold":true}],["|",{"inverse":true}],[" 75 ",{"fg":3,"bold":true}],["'goto_prev_year'            Jumps to the previous year.         '<Down>'                                        ",{}],["|",{"inverse":true}],[" 23 ",{"fg":3,"bold":true}],["  .esd_auth       ",{}]],"23":[["~                   ",{"fg":4,"bold":true}],["|",{"inverse":true}],[" 76 ",{"fg":3,"bold":true}],["An example in your .vimrc might look like this: >                                                               ",{}],["|",{"inverse":true}],[" 24 ",{"fg":3,"bold":true}],["  .gtkrc-2.0      ",{}]],"24":[["~                   ",{"fg":4,"bold":true}],["|",{"inverse":true}],[" 77 ",{"fg":3,"bold":true}],["  let g:calendar_keys = { 'goto_next_month': '<C-Right>', 'goto_prev_month': '<C-Left>'}                        ",{}],["|",{"inverse":true}],[" 25 ",{"fg":3,"bold":true}],["  .gtkrc-2.0-kde4 ",{}]],"25":[["~                   ",{"fg":4,"bold":true}],["|",{"inverse":true}],[" 78 ",{"fg":3,"bold":true}],["<                                                                                                               ",{}],["|",{"inverse":true}],[" 26 ",{"fg":3,"bold":true}],["  .lesshst        ",{}]],"26":[["~                   ",{"fg":4,"bold":true}],["|",{"inverse":true}],[" 79 ",{"fg":3,"bold":true}],["                                                                                                                ",{}],["|",{"inverse":true}],[" 27 ",{"fg":3,"bold":true}],["  .tcshrc         ",{}]],"27":[["~                   ",{"fg":4,"bold":true}],["|",{"inverse":true}],[" 80 ",{"fg":3,"bold":true}],["                                                *g:calendar_mark*                                               ",{}],["|",{"inverse":true}],[" 28 ",{"fg":3,"bold":true}],["  .viminfo        ",{}]],"28":[["~                   ",{"fg":4,"bold":true}],["|",{"inverse":true}],[" 81 ",{"fg":3,"bold":true}],["Place a '*' or '+' mark after the day.  Acceptable values are 'left',                                           ",{}],["|",{"inverse":true}],[" 29 ",{"fg":3,"bold":true}],["  .vimrc          ",{}]],"29":[["~                   ",{"fg":4,"bold":true}],["|",{"inverse":true}],[" 82 ",{"fg":3,"bold":true}],["'left-fit', and 'right': >                                                                                      ",{}],["|",{"inverse":true}],[" 30 ",{"fg":3,"bold":true}],["  .xsession-errors",{}]],"30":[["~                   ",{"fg":4,"bold":true}],["|",{"inverse":true}],[" 83 ",{"fg":3,"bold":true}],["  let g:calendar_mark = 'right'                                                                                 ",{}],["|",{"inverse":true}],[" 31 ",{"fg":3,"bold":true}],["  anaconda-ks.cfg ",{}]],"31":[["~                   ",{"fg":4,"bold":true}],["|",{"inverse":true}],[" 84 ",{"fg":3,"bold":true}],["<                                                                                                               ",{}],["|",{"inverse":true}],[" 32 ",{"fg":3,"bold":true}],["  initial-setup-ks",{}]],"32":[["~                   ",{"fg":4,"bold":true}],["|",{"inverse":true}],[" 85 ",{"fg":3,"bold":true}],["                                                                                                                ",{}],["|",{"inverse":true}],[" 33 ",{"fg":3,"bold":true}],["  test.c          ",{}]],"33":[["~                   ",{"fg":4,"bold":true}],["|",{"inverse":true}],[" 86 ",{"fg":3,"bold":true}],["                                                *g:calendar_diary*                                              ",{}],["|",{"inverse":true}],[" 34 ",{"fg":3,"bold":true}],["  test.cpp        ",{}]],"34":[["~                   ",{"fg":4,"bold":true}],["|",{"inverse":true}],[" 87 ",{"fg":3,"bold":true}],["Specify the directory for the diary files.  The default value is $HOME/diary.                                   ",{}],["|",{"inverse":true}],[" 35 ",{"fg":3,"bold":true}],["  .test.cpp.swp   ",{}]],"35":[["~                   ",{"fg":4,"bold":true}],["|",{"inverse":true}],[" 88 ",{"fg":3,"bold":true}],["  let g:calendar_diary=$HOME.'/.vim/diary'                                                                      ",{}],["|",{"inverse":true}],["~                     ",{"fg":4,"bold":true}]],"36":[["~                   ",{"fg":4,"bold":true}],["|",{"inverse":true}],[" 89 ",{"fg":3,"bold":true}],["                                                                                                                ",{}],["|",{"inverse":true}],["~                     ",{"fg":4,"bold":true}]],"37":[["~                   ",{"fg":4,"bold":true}],["|",{"inverse":true}],[" 90 ",{"fg":3,"bold":true}],["                                                                                                                ",{}],["|",{"inverse":true}],["~                     ",{"fg":4,"bold":true}]],"38":[["~                   ",{"fg":4,"bold":true}],["|",{"inverse":true}],[" 91 ",{"fg":3,"bold":true}],["                                                *g:calendar_navi*                                               ",{}],["|",{"inverse":true}],["~                     ",{"fg":4,"bold":true}]],"39":[["~                   ",{"fg":4,"bold":true}],["|",{"inverse":true}],[" 92 ",{"fg":3,"bold":true}],["To control the calendar navigator, set this variable.  Acceptable values are                                    ",{}],["|",{"inverse":true}],["~                     ",{"fg":4,"bold":true}]],"40":[["~                   ",{"fg":4,"bold":true}],["|",{"inverse":true}],[" 93 ",{"fg":3,"bold":true}],["'top', 'bottom', or 'both'. >                                                                                   ",{}],["|",{"inverse":true}],["~                     ",{"fg":4,"bold":true}]],"41":[["~                   ",{"fg":4,"bold":true}],["|",{"inverse":true}],[" 94 ",{"fg":3,"bold":true}],["  let g:calendar_navi = ''                                                                                      ",{}],["|",{"inverse":true}],["~                     ",{"fg":4,"bold":true}]],"42":[["~                   ",{"fg":4,"bold":true}],["|",{"inverse":true}],[" 95 ",{"fg":3,"bold":true}],["<                                                                                                               ",{}],["|",{"inverse":true}],["~                     ",{"fg":4,"bold":true}]],"43":[["~                   ",{"fg":4,"bold":true}],["|",{"inverse":true}],[" 96 ",{"fg":3,"bold":true}],["                                                                                                                ",{}],["|",{"inverse":true}],["~                     ",{"fg":4,"bold":true}]],"44":[["~                   ",{"fg":4,"bold":true}],["|",{"inverse":true}],[" 97 ",{"fg":3,"bold":true}],["                                                *g:calendar_navi_l",{"underline":true}],["                                              ",{}],["|",{"inverse":true}],["~                     ",{"fg":4,"bold":true}]]},"cursor":{"x":91,"y":44,"visible":false}}],[0.016402,{"lines":{"0":[["\" Press <F1> for hel",{"fg":6,"bold":true}],["|",{"inverse":true}],[" 54 ",{"fg":3,"bold":true}],["SETTINGS                                        *calendar-settings*                                             ",{}],["|",{"inverse":true}],["  1 ",{"fg":3,"bold":true}],["\" Press ? for help",{"fg":5,"bold":true}]],"1":[["                    ",{}],["|",{"inverse":true}],[" 55 ",{"fg":3,"bold":true}],["                                                                                                                ",{}],["|",{"inverse":true}],["  2 ",{"fg":3,"bold":true}],["                  ",{}]],"2":[["▼",{"fg":3,"bold":true}],[" First",{"fg":5,"bold":true}],[" : ",{}],["struct",{"fg":2,"bold":true}],["    ",{}],["|",{"inverse":true}],[" 56 ",{"fg":3,"bold":true}],["calendar.vim can be con",{}],["figured using the following sett",{"bg":1}],["ings:                                                    ",{}],["|",{"inverse":true}],["  3 ",{"fg":3,"bold":true}],[".. (up a dir)",{"fg":6,"bold":true}],["     ",{}]],"3":[["    [prototypes]",{"fg":6,"bold":true}],["    ",{}],["|",{"inverse":true}],[" 57 ",{"fg":3,"bold":true}],["                                                                                                                ",{}],["|",{"inverse":true}],["  4 /root/",{"fg":3,"bold":true}],["            ",{}]],"4":[["   ",{}],["+",{"fg":2,"bold":true}],["FirstRun(void)  ",{}],["|",{"inverse":true}],[" 58 ",{"fg":3,"bold":true}],["                                                *g:calendar_focus_today*                                        ",{}],["|",{"inverse":true}],["  5 ",{"fg":3,"bold":true}],["▸ .asciinema/",{"fg":6,"bold":true}],["     ",{}]],"5":[["   ",{}],["+",{"fg":2,"bold":true}],["FirstRun2(void) ",{}],["|",{"inverse":true}],[" 59 ",{"fg":3,"bold":true}],["Keeps focus when moving to next or previous calendar: >                                                         ",{}],["|",{"inverse":true}],["  6 ",{"fg":3,"bold":true}],["▸ .cache/",{"fg":6,"bold":true}],["         ",{}]],"6":[["                    ",{}],["|",{"inverse":true}],[" 60 ",{"fg":3,"bold":true}],["  let g:calendar_focus_today = 1                                                                                ",{}],["|",{"inverse":true}],["  7 ",{"fg":3,"bold":true}],["▸ .config/",{"fg":6,"bold":true}],["        ",{}]],"7":[["▼",{"fg":3,"bold":true}],[" Last",{"fg":5,"bold":true}],[" : ",{}],["struct",{"fg":2,"bold":true}],["     ",{}],["|",{"inverse":true}],[" 61 ",{"fg":3,"bold":true}],["<                                                                                                               ",{}],["|",{"inverse":true}],["  8 ",{"fg":3,"bold":true}],["▸ .dbus/",{"fg":6,"bold":true}],["          ",{}]],"8":[["    [functions]",{"fg":6,"bold":true}],["     ",{}],["|",{"inverse":true}],[" 62 ",{"fg":3,"bold":true}],["                                                                                                                ",{}],["|",{"inverse":true}],["  9 ",{"fg":3,"bold":true}],["▸ .gnupg/",{"fg":6,"bold":true}],["         ",{}]],"9":[["   ",{}],["+",{"fg":2,"bold":true}],["FirstRun(void)  ",{}],["|",{"inverse":true}],[" 63 ",{"fg":3,"bold":true}],["                                                *g:calendar_keys*                                               ",{}],["|",{"inverse":true}],[" 10 ",{"fg":3,"bold":true}],["▸ .kde/",{"fg":6,"bold":true}],["           ",{}]],"10":[["   ",{}],["+",{"fg":2,"bold":true}],["FirstRun2(void) ",{}],["|",{"inverse":true}],[" 64 ",{"fg":3,"bold":true}],["To change the key bindings in the calendar window, add entries to this                                          ",{}],["|",{"inverse":true}],[" 11 ",{"fg":3,"bold":true}],["▸ .local/",{"fg":6,"bold":true}],["         ",{}]],"11":[["   ",{}],["+",{"fg":2,"bold":true}],["~Last()         ",{}],["|",{"inverse":true}],[" 65 ",{"fg":3,"bold":true}],["dictionary.   Possible keys, the action bound to the keycode given in the                                       ",{}],["|",{"inverse":true}],[" 12 ",{"fg":3,"bold":true}],["▸ .pki/",{"fg":6,"bold":true}],["           ",{}]],"12":[["   ",{}],["+",{"fg":2,"bold":true}],["SecondRun(void) ",{}],["|",{"inverse":true}],[" 66 ",{"fg":3,"bold":true}],["respective value for this key and the default binding are listed below.                                         ",{}],["|",{"inverse":true}],[" 13 ",{"fg":3,"bold":true}],["▸ .ssh/",{"fg":6,"bold":true}],["           ",{}]],"13":[["   ",{}],["+",{"fg":2,"bold":true}],["SecondRun2(void)",{}],["|",{"inverse":true}],[" 67 ",{"fg":3,"bold":true}],["'close'                     Closes calendar window.             'q'                                             ",{}],["|",{"inverse":true}],[" 14 ",{"fg":3,"bold":true}],["▸ .vim/",{"fg":6,"bold":true}],["           ",{}]],"14":[["                    ",{}],["|",{"inverse":true}],[" 68 ",{"fg":3,"bold":true}],["'do_action'                 Executes |calendar_action|.           '<CR>'                                        ",{}],["|",{"inverse":true}],[" 15 ",{"fg":3,"bold":true}],["▸ diary/",{"fg":6,"bold":true}],["          ",{}]],"15":[["▼",{"fg":3,"bold":true}],[" Second",{"fg":5,"bold":true}],[" : ",{}],["struct",{"fg":2,"bold":true}],["   ",{}],["|",{"inverse":true}],[" 69 ",{"fg":3,"bold":true}],["'goto_today'                Executes |calendar_today|.            't'                                           ",{}],["|",{"inverse":true}],[" 16 ",{"fg":3,"bold":true}],["▸ temp/",{"fg":6,"bold":true}],["           ",{}]],"16":[["    [prototypes]",{"fg":6,"bold":true}],["    ",{}],["|",{"inverse":true}],[" 70 ",{"fg":3,"bold":true}],["'show_help'                 Displays a short help message.      '?'                                             ",{}],["|",{"inverse":true}],[" 17 ",{"fg":3,"bold":true}],["  .bash_history   ",{}]],"17":[["   ",{}],["+",{"fg":2,"bold":true}],["SecondRun(void) ",{}],["|",{"inverse":true}],[" 71 ",{"fg":3,"bold":true}],["'redisplay'                 Redraws calendar window.            'r'                                             ",{}],["|",{"inverse":true}],[" 18 ",{"fg":3,"bold":true}],["  .bash_logout    ",{}]],"18":[["   ",{}],["+",{"fg":2,"bold":true}],["SecondRun2(void)",{}],["|",{"inverse":true}],[" 72 ",{"fg":3,"bold":true}],["'goto_next_month'           Jumps to the next month.            '<Right>'                                       ",{}],["|",{"inverse":true}],[" 19 ",{"fg":3,"bold":true}],["  .bash_profile   ",{"underline":true}]],"19":[["                    ",{}],["|",{"inverse":true}],[" 73 ",{"fg":3,"bold":true}],["'goto_prev_month'           Jumps to the previous month.        '<Left>'                                        ",{}],["|",{"inverse":true}],[" 20 ",{"fg":3,"bold":true}],["  .bashrc         ",{}]],"20":[["▼",{"fg":3,"bold":true}],[" ",{}],["functions",{"fg":6,"bold":true}],["         ",{}],["|",{"inverse":true}],[" 74 ",{"fg":3,"bold":true}],["'goto_next_year'            Jumps to the next year.             '<Up>'                                          ",{}],["|",{"inverse":true}],[" 21 ",{"fg":3,"bold":true}],["  .cshrc          ",{}]],"21":[["    main(int argc, c",{"underline":true}],["|",{"inverse":true}],[" 75 ",{"fg":3,"bold":true}],["'goto_prev_year'            Jumps to the previous year.         '<Down>'                                        ",{}],["|",{"inverse":true}],[" 22 ",{"fg":3,"bold":true}],["  .dmrc           ",{}]],"22":[["~                   ",{"fg":4,"bold":true}],["|",{"inverse":true}],[" 76 ",{"fg":3,"bold":true}],["An example in your .vimrc might look like this: >                                                               ",{}],["|",{"inverse":true}],[" 23 ",{"fg":3,"bold":true}],["  .esd_auth       ",{}]],"23":[["~                   ",{"fg":4,"bold":true}],["|",{"inverse":true}],[" 77 ",{"fg":3,"bold":true}],["  let g:calendar_keys = { 'goto_next_month': '<C-Right>', 'goto_prev_month': '<C-Left>'}                        ",{}],["|",{"inverse":true}],[" 24 ",{"fg":3,"bold":true}],["  .gtkrc-2.0      ",{}]],"24":[["~                   ",{"fg":4,"bold":true}],["|",{"inverse":true}],[" 78 ",{"fg":3,"bold":true}],["<                                                                                                               ",{}],["|",{"inverse":true}],[" 25 ",{"fg":3,"bold":true}],["  .gtkrc-2.0-kde4 ",{}]],"25":[["~                   ",{"fg":4,"bold":true}],["|",{"inverse":true}],[" 79 ",{"fg":3,"bold":true}],["                                                                                                                ",{}],["|",{"inverse":true}],[" 26 ",{"fg":3,"bold":true}],["  .lesshst        ",{}]],"26":[["~                   ",{"fg":4,"bold":true}],["|",{"inverse":true}],[" 80 ",{"fg":3,"bold":true}],["                                                *g:calendar_mark*                                               ",{}],["|",{"inverse":true}],[" 27 ",{"fg":3,"bold":true}],["  .tcshrc         ",{}]],"27":[["~                   ",{"fg":4,"bold":true}],["|",{"inverse":true}],[" 81 ",{"fg":3,"bold":true}],["Place a '*' or '+' mark after the day.  Acceptable values are 'left',                                           ",{}],["|",{"inverse":true}],[" 28 ",{"fg":3,"bold":true}],["  .viminfo        ",{}]],"28":[["~                   ",{"fg":4,"bold":true}],["|",{"inverse":true}],[" 82 ",{"fg":3,"bold":true}],["'left-fit', and 'right': >                                                                                      ",{}],["|",{"inverse":true}],[" 29 ",{"fg":3,"bold":true}],["  .vimrc          ",{}]],"29":[["~                   ",{"fg":4,"bold":true}],["|",{"inverse":true}],[" 83 ",{"fg":3,"bold":true}],["  let g:calendar_mark = 'right'                                                                                 ",{}],["|",{"inverse":true}],[" 30 ",{"fg":3,"bold":true}],["  .xsession-errors",{}]],"30":[["~                   ",{"fg":4,"bold":true}],["|",{"inverse":true}],[" 84 ",{"fg":3,"bold":true}],["<                                                                                                               ",{}],["|",{"inverse":true}],[" 31 ",{"fg":3,"bold":true}],["  anaconda-ks.cfg ",{}]],"31":[["~                   ",{"fg":4,"bold":true}],["|",{"inverse":true}],[" 85 ",{"fg":3,"bold":true}],["                                                                                                                ",{}],["|",{"inverse":true}],[" 32 ",{"fg":3,"bold":true}],["  initial-setup-ks",{}]],"32":[["~                   ",{"fg":4,"bold":true}],["|",{"inverse":true}],[" 86 ",{"fg":3,"bold":true}],["                                                *g:calendar_diary*                                              ",{}],["|",{"inverse":true}],[" 33 ",{"fg":3,"bold":true}],["  test.c          ",{}]],"33":[["~                   ",{"fg":4,"bold":true}],["|",{"inverse":true}],[" 87 ",{"fg":3,"bold":true}],["Specify the directory for the diary files.  The default value is $HOME/diary.                                   ",{}],["|",{"inverse":true}],[" 34 ",{"fg":3,"bold":true}],["  test.cpp        ",{}]],"34":[["~                   ",{"fg":4,"bold":true}],["|",{"inverse":true}],[" 88 ",{"fg":3,"bold":true}],["  let g:calendar_diary=$HOME.'/.vim/diary'                                                                      ",{}],["|",{"inverse":true}],[" 35 ",{"fg":3,"bold":true}],["  .test.cpp.swp   ",{}]],"35":[["~                   ",{"fg":4,"bold":true}],["|",{"inverse":true}],[" 89 ",{"fg":3,"bold":true}],["                                                                                                                ",{}],["|",{"inverse":true}],["~                     ",{"fg":4,"bold":true}]],"36":[["~                   ",{"fg":4,"bold":true}],["|",{"inverse":true}],[" 90 ",{"fg":3,"bold":true}],["                                                                                                                ",{}],["|",{"inverse":true}],["~                     ",{"fg":4,"bold":true}]],"37":[["~                   ",{"fg":4,"bold":true}],["|",{"inverse":true}],[" 91 ",{"fg":3,"bold":true}],["                                                *g:calendar_navi*                                               ",{}],["|",{"inverse":true}],["~                     ",{"fg":4,"bold":true}]],"38":[["~                   ",{"fg":4,"bold":true}],["|",{"inverse":true}],[" 92 ",{"fg":3,"bold":true}],["To control the calendar navigator, set this variable.  Acceptable values are                                    ",{}],["|",{"inverse":true}],["~                     ",{"fg":4,"bold":true}]],"39":[["~                   ",{"fg":4,"bold":true}],["|",{"inverse":true}],[" 93 ",{"fg":3,"bold":true}],["'top', 'bottom', or 'both'. >                                                                                   ",{}],["|",{"inverse":true}],["~                     ",{"fg":4,"bold":true}]],"40":[["~                   ",{"fg":4,"bold":true}],["|",{"inverse":true}],[" 94 ",{"fg":3,"bold":true}],["  let g:calendar_navi = ''                                                                                      ",{}],["|",{"inverse":true}],["~                     ",{"fg":4,"bold":true}]],"41":[["~                   ",{"fg":4,"bold":true}],["|",{"inverse":true}],[" 95 ",{"fg":3,"bold":true}],["<                                                                                                               ",{}],["|",{"inverse":true}],["~                     ",{"fg":4,"bold":true}]],"42":[["~                   ",{"fg":4,"bold":true}],["|",{"inverse":true}],[" 96 ",{"fg":3,"bold":true}],["                                                                                                                ",{}],["|",{"inverse":true}],["~                     ",{"fg":4,"bold":true}]],"43":[["~                   ",{"fg":4,"bold":true}],["|",{"inverse":true}],[" 97 ",{"fg":3,"bold":true}],["                                                *g:calendar_navi_label*                                         ",{}],["|",{"inverse":true}],["~                     ",{"fg":4,"bold":true}]],"44":[["~                   ",{"fg":4,"bold":true}],["|",{"inverse":true}],[" 98 ",{"fg":3,"bold":true}],["To set the labels for the calendar navigator, for example to chang",{"underline":true}],["abel*                                         ",{}],["|",{"inverse":true}],["~                     ",{"fg":4,"bold":true}]],"45":[["~                   ",{"fg":4,"bold":true}],["|",{"inverse":true}],[" 98 ",{"fg":3,"bold":true}],["To set the labels for the calendar navigator, for example to change the                                         ",{"underline":true}],["|",{"inverse":true}],["~                     ",{"fg":4,"bold":true}]],"46":[["[Name] test.cpp      ",{"inverse":true}],[" NORMAL ",{"bold":true}],[" ",{}],["calendar.txt ",{"bold":true}],["                                                        unix │ utf-8 │ text │  44% ",{}],[" LN  98",{"bold":true}],[":1  ",{}],[" ",{"bold":true,"inverse":true}],[" ~/…/calendar-vim/doc>",{"bold":true}]]}}],[0.031701,{"lines":{"44":[["~                   ",{"fg":4,"bold":true}],["|",{"inverse":true}],[" 98 ",{"fg":3,"bold":true}],["To set the labels for the calendar navigator, for example to change the                                         ",{}],["|",{"inverse":true}],["~                     ",{"fg":4,"bold":true}]],"45":[["~                   ",{"fg":4,"bold":true}],["|",{"inverse":true}],[" 99 ",{"fg":3,"bold":true}],["language, use this variable.  Entries should be comma separated. >                                              ",{"underline":true}],["|",{"inverse":true}],["~                     ",{"fg":4,"bold":true}]],"46":[["[Name] test.cpp      ",{"inverse":true}],[" NORMAL ",{"bold":true}],[" ",{}],["calendar.txt ",{"bold":true}],["                                                        unix │ utf-8 │ text │  45% ",{}],[" LN  99",{"bold":true}],[":1  ",{}],[" ",{"bold":true,"inverse":true}],[" ~/…/calendar-vim/doc>",{"bold":true}]]},"cursor":{"x":25,"y":45,"visible":true}}],[0.008123999999999999,{"lines":{"0":[["\" Press <F1> for hel",{"fg":6,"bold":true}],["|",{"inverse":true}],[" 55 ",{"fg":3,"bold":true}],["                                                                                                                ",{}],["|",{"inverse":true}],["  1 ",{"fg":3,"bold":true}],["\" Press ? for help",{"fg":5,"bold":true}]],"1":[["                    ",{}],["|",{"inverse":true}],[" 56 ",{"fg":3,"bold":true}],["calendar.vim can be con",{}],["figured using the following sett",{"bg":1}],["ings:                                                    ",{}],["|",{"inverse":true}],["  2 ",{"fg":3,"bold":true}],["                  ",{}]],"2":[["▼",{"fg":3,"bold":true}],[" First",{"fg":5,"bold":true}],[" : ",{}],["struct",{"fg":2,"bold":true}],["    ",{}],["|",{"inverse":true}],[" 57 ",{"fg":3,"bold":true}],["                                                                                                                ",{}],["|",{"inverse":true}],["  3 ",{"fg":3,"bold":true}],[".. (up a dir)",{"fg":6,"bold":true}],["     ",{}]],"3":[["    [prototypes]",{"fg":6,"bold":true}],["    ",{}],["|",{"inverse":true}],[" 58 ",{"fg":3,"bold":true}],["                                                *g:calendar_focus_today*                                        ",{}],["|",{"inverse":true}],["  4 /root/",{"fg":3,"bold":true}],["            ",{}]],"4":[["   ",{}],["+",{"fg":2,"bold":true}],["FirstRun(void)  ",{}],["|",{"inverse":true}],[" 59 ",{"fg":3,"bold":true}],["Keeps focus when moving to next or previous calendar: >                                                         ",{}],["|",{"inverse":true}],["  5 ",{"fg":3,"bold":true}],["▸ .asciinema/",{"fg":6,"bold":true}],["     ",{}]],"5":[["   ",{}],["+",{"fg":2,"bold":true}],["FirstRun2(void) ",{}],["|",{"inverse":true}],[" 60 ",{"fg":3,"bold":true}],["  let g:calendar_focus_today = 1                                                                                ",{}],["|",{"inverse":true}],["  6 ",{"fg":3,"bold":true}],["▸ .cache/",{"fg":6,"bold":true}],["         ",{}]],"6":[["                    ",{}],["|",{"inverse":true}],[" 61 ",{"fg":3,"bold":true}],["<                                                                                                               ",{}],["|",{"inverse":true}],["  7 ",{"fg":3,"bold":true}],["▸ .config/",{"fg":6,"bold":true}],["        ",{}]],"7":[["▼",{"fg":3,"bold":true}],[" Last",{"fg":5,"bold":true}],[" : ",{}],["struct",{"fg":2,"bold":true}],["     ",{}],["|",{"inverse":true}],[" 62 ",{"fg":3,"bold":true}],["                                                                                                                ",{}],["|",{"inverse":true}],["  8 ",{"fg":3,"bold":true}],["▸ .dbus/",{"fg":6,"bold":true}],["          ",{}]],"8":[["    [functions]",{"fg":6,"bold":true}],["     ",{}],["|",{"inverse":true}],[" 63 ",{"fg":3,"bold":true}],["                                                *g:calendar_keys*                                               ",{}],["|",{"inverse":true}],["  9 ",{"fg":3,"bold":true}],["▸ .gnupg/",{"fg":6,"bold":true}],["         ",{}]],"9":[["   ",{}],["+",{"fg":2,"bold":true}],["FirstRun(void)  ",{}],["|",{"inverse":true}],[" 64 ",{"fg":3,"bold":true}],["To change the key bindings in the calendar window, add entries to this                                          ",{}],["|",{"inverse":true}],[" 10 ",{"fg":3,"bold":true}],["▸ .kde/",{"fg":6,"bold":true}],["           ",{}]],"10":[["   ",{}],["+",{"fg":2,"bold":true}],["FirstRun2(void) ",{}],["|",{"inverse":true}],[" 65 ",{"fg":3,"bold":true}],["dictionary.   Possible keys, the action bound to the keycode given in the                                       ",{}],["|",{"inverse":true}],[" 11 ",{"fg":3,"bold":true}],["▸ .local/",{"fg":6,"bold":true}],["         ",{}]],"11":[["   ",{}],["+",{"fg":2,"bold":true}],["~Last()         ",{}],["|",{"inverse":true}],[" 66 ",{"fg":3,"bold":true}],["respective value for this key and the default binding are listed below.                                         ",{}],["|",{"inverse":true}],[" 12 ",{"fg":3,"bold":true}],["▸ .pki/",{"fg":6,"bold":true}],["           ",{}]],"12":[["   ",{}],["+",{"fg":2,"bold":true}],["SecondRun(void) ",{}],["|",{"inverse":true}],[" 67 ",{"fg":3,"bold":true}],["'close'                     Closes calendar window.             'q'                                             ",{}],["|",{"inverse":true}],[" 13 ",{"fg":3,"bold":true}],["▸ .ssh/",{"fg":6,"bold":true}],["           ",{}]],"13":[["   ",{}],["+",{"fg":2,"bold":true}],["SecondRun2(void)",{}],["|",{"inverse":true}],[" 68 ",{"fg":3,"bold":true}],["'do_action'                 Executes |calendar_action|.           '<CR>'                                        ",{}],["|",{"inverse":true}],[" 14 ",{"fg":3,"bold":true}],["▸ .vim/",{"fg":6,"bold":true}],["           ",{}]],"14":[["                    ",{}],["|",{"inverse":true}],[" 69 ",{"fg":3,"bold":true}],["'goto_today'                Executes |calendar_today|.            't'                                           ",{}],["|",{"inverse":true}],[" 15 ",{"fg":3,"bold":true}],["▸ diary/",{"fg":6,"bold":true}],["          ",{}]],"15":[["▼",{"fg":3,"bold":true}],[" Second",{"fg":5,"bold":true}],[" : ",{}],["struct",{"fg":2,"bold":true}],["   ",{}],["|",{"inverse":true}],[" 70 ",{"fg":3,"bold":true}],["'show_help'                 Displays a short help message.      '?'                                             ",{}],["|",{"inverse":true}],[" 16 ",{"fg":3,"bold":true}],["▸ temp/",{"fg":6,"bold":true}],["           ",{}]],"16":[["    [prototypes]",{"fg":6,"bold":true}],["    ",{}],["|",{"inverse":true}],[" 71 ",{"fg":3,"bold":true}],["'redisplay'                 Redraws calendar window.            'r'                                             ",{}],["|",{"inverse":true}],[" 17 ",{"fg":3,"bold":true}],["  .bash_history   ",{}]],"17":[["   ",{}],["+",{"fg":2,"bold":true}],["SecondRun(void) ",{}],["|",{"inverse":true}],[" 72 ",{"fg":3,"bold":true}],["'goto_next_month'           Jumps to the next month.            '<Right>'                                       ",{}],["|",{"inverse":true}],[" 18 ",{"fg":3,"bold":true}],["  .bash_logout    ",{}]],"18":[["   ",{}],["+",{"fg":2,"bold":true}],["SecondRun2(void)",{}],["|",{"inverse":true}],[" 73 ",{"fg":3,"bold":true}],["'goto_prev_month'           Jumps to the previous month.        '<Left>'                                        ",{}],["|",{"inverse":true}],[" 19 ",{"fg":3,"bold":true}],["  .bash_profile   ",{"underline":true}]],"19":[["                    ",{}],["|",{"inverse":true}],[" 74 ",{"fg":3,"bold":true}],["'goto_next_year'            Jumps to the next year.             '<Up>'                                          ",{}],["|",{"inverse":true}],[" 20 ",{"fg":3,"bold":true}],["  .bashrc         ",{}]],"20":[["▼",{"fg":3,"bold":true}],[" ",{}],["functions",{"fg":6,"bold":true}],["         ",{}],["|",{"inverse":true}],[" 75 ",{"fg":3,"bold":true}],["'goto_prev_year'            Jumps to the previous year.         '<Down>'                                        ",{}],["|",{"inverse":true}],[" 21 ",{"fg":3,"bold":true}],["  .cshrc          ",{}]],"21":[["    main(int argc, c",{"underline":true}],["|",{"inverse":true}],[" 76 ",{"fg":3,"bold":true}],["An example in your .vimrc might look like this: >                                                               ",{}],["|",{"inverse":true}],[" 22 ",{"fg":3,"bold":true}],["  .dmrc           ",{}]],"22":[["~                   ",{"fg":4,"bold":true}],["|",{"inverse":true}],[" 77 ",{"fg":3,"bold":true}],["  let g:calendar_keys = { 'goto_next_month': '<C-Right>', 'goto_prev_month': '<C-Left>'}                        ",{}],["|",{"inverse":true}],[" 23 ",{"fg":3,"bold":true}],["  .esd_auth       ",{}]],"23":[["~                   ",{"fg":4,"bold":true}],["|",{"inverse":true}],[" 78 ",{"fg":3,"bold":true}],["<                                                                                                               ",{}],["|",{"inverse":true}],[" 24 ",{"fg":3,"bold":true}],["  .gtkrc-2.0      ",{}]],"24":[["~                   ",{"fg":4,"bold":true}],["|",{"inverse":true}],[" 79 ",{"fg":3,"bold":true}],["                                                                                                                ",{}],["|",{"inverse":true}],[" 25 ",{"fg":3,"bold":true}],["  .gtkrc-2.0-kde4 ",{}]],"25":[["~                   ",{"fg":4,"bold":true}],["|",{"inverse":true}],[" 80 ",{"fg":3,"bold":true}],["                                                *g:calendar_mark*                                               ",{}],["|",{"inverse":true}],[" 26 ",{"fg":3,"bold":true}],["  .lesshst        ",{}]],"26":[["~                   ",{"fg":4,"bold":true}],["|",{"inverse":true}],[" 81 ",{"fg":3,"bold":true}],["Place a '*' or '+' mark after the day.  Acceptable values are 'left',                                           ",{}],["|",{"inverse":true}],[" 27 ",{"fg":3,"bold":true}],["  .tcshrc         ",{}]],"27":[["~                   ",{"fg":4,"bold":true}],["|",{"inverse":true}],[" 82 ",{"fg":3,"bold":true}],["'left-fit', and 'right': >                                                                                      ",{}],["|",{"inverse":true}],[" 28 ",{"fg":3,"bold":true}],["  .viminfo        ",{}]],"28":[["~                   ",{"fg":4,"bold":true}],["|",{"inverse":true}],[" 83 ",{"fg":3,"bold":true}],["  let g:calendar_mark = 'right'                                                                                 ",{}],["|",{"inverse":true}],[" 29 ",{"fg":3,"bold":true}],["  .vimrc          ",{}]],"29":[["~                   ",{"fg":4,"bold":true}],["|",{"inverse":true}],[" 84 ",{"fg":3,"bold":true}],["<                                                                                                               ",{}],["|",{"inverse":true}],[" 30 ",{"fg":3,"bold":true}],["  .xsession-errors",{}]],"30":[["~                   ",{"fg":4,"bold":true}],["|",{"inverse":true}],[" 85 ",{"fg":3,"bold":true}],["                                                                                                                ",{}],["|",{"inverse":true}],[" 31 ",{"fg":3,"bold":true}],["  anaconda-ks.cfg ",{}]],"31":[["~                   ",{"fg":4,"bold":true}],["|",{"inverse":true}],[" 86 ",{"fg":3,"bold":true}],["                                                *g:calendar_diary*                                              ",{}],["|",{"inverse":true}],[" 32 ",{"fg":3,"bold":true}],["  initial-setup-ks",{}]],"32":[["~                   ",{"fg":4,"bold":true}],["|",{"inverse":true}],[" 87 ",{"fg":3,"bold":true}],["Specify the directory for the diary files.  The default value is $HOME/diary.                                   ",{}],["|",{"inverse":true}],[" 33 ",{"fg":3,"bold":true}],["  test.c          ",{}]],"33":[["~                   ",{"fg":4,"bold":true}],["|",{"inverse":true}],[" 88 ",{"fg":3,"bold":true}],["  let g:calendar_diary=$HOME.'/.vim/diary'                                                                      ",{}],["|",{"inverse":true}],[" 34 ",{"fg":3,"bold":true}],["  test.cpp        ",{}]],"34":[["~                   ",{"fg":4,"bold":true}],["|",{"inverse":true}],[" 89 ",{"fg":3,"bold":true}],["                                                                                                                ",{}],["|",{"inverse":true}],[" 35 ",{"fg":3,"bold":true}],["  .test.cpp.swp   ",{}]],"35":[["~                   ",{"fg":4,"bold":true}],["|",{"inverse":true}],[" 90 ",{"fg":3,"bold":true}],["                                                                                                                ",{}],["|",{"inverse":true}],["~                     ",{"fg":4,"bold":true}]],"36":[["~                   ",{"fg":4,"bold":true}],["|",{"inverse":true}],[" 91 ",{"fg":3,"bold":true}],["                                                *g:calendar_navi*                                               ",{}],["|",{"inverse":true}],["~                     ",{"fg":4,"bold":true}]],"37":[["~                   ",{"fg":4,"bold":true}],["|",{"inverse":true}],[" 92 ",{"fg":3,"bold":true}],["To control the calendar navigator, set this variable.  Acceptable values are                                    ",{}],["|",{"inverse":true}],["~                     ",{"fg":4,"bold":true}]],"38":[["~                   ",{"fg":4,"bold":true}],["|",{"inverse":true}],[" 93 ",{"fg":3,"bold":true}],["'top', 'bottom', or 'both'. >                                                                                   ",{}],["|",{"inverse":true}],["~                     ",{"fg":4,"bold":true}]],"39":[["~                   ",{"fg":4,"bold":true}],["|",{"inverse":true}],[" 94 ",{"fg":3,"bold":true}],["  let g:calendar_navi = ''                                                                                      ",{}],["|",{"inverse":true}],["~                     ",{"fg":4,"bold":true}]],"40":[["~                   ",{"fg":4,"bold":true}],["|",{"inverse":true}],[" 95 ",{"fg":3,"bold":true}],["<                                                                                                               ",{}],["|",{"inverse":true}],["~                     ",{"fg":4,"bold":true}]],"41":[["~                   ",{"fg":4,"bold":true}],["|",{"inverse":true}],[" 96 ",{"fg":3,"bold":true}],["                                                                                                                ",{}],["|",{"inverse":true}],["~                     ",{"fg":4,"bold":true}]],"42":[["~                   ",{"fg":4,"bold":true}],["|",{"inverse":true}],[" 97 ",{"fg":3,"bold":true}],["                                                *g:calendar_navi_label*                                         ",{}],["|",{"inverse":true}],["~                     ",{"fg":4,"bold":true}]],"43":[["~                   ",{"fg":4,"bold":true}],["|",{"inverse":true}],[" 98 ",{"fg":3,"bold":true}],["To set the labels for the calendar navigator, for example to change the                                         ",{}],["|",{"inverse":true}],["~                     ",{"fg":4,"bold":true}]],"44":[["~                   ",{"fg":4,"bold":true}],["|",{"inverse":true}],[" 99 ",{"fg":3,"bold":true}],["language, use this variable.  Entries should be comma separated. >",{"underline":true}],["e the                                         ",{}],["|",{"inverse":true}],["~                     ",{"fg":4,"bold":true}]]},"cursor":{"x":91,"y":44,"visible":false}}],[0.016373,{"lines":{"44":[["~                   ",{"fg":4,"bold":true}],["|",{"inverse":true}],[" 99 ",{"fg":3,"bold":true}],["language, use this variable.  Entries should be comma separated. >                                              ",{}],["|",{"inverse":true}],["~                     ",{"fg":4,"bold":true}]],"45":[["~                   ",{"fg":4,"bold":true}],["|",{"inverse":true}],["100 ",{"fg":3,"bold":true}],["  let g:calendar_navi_label = 'Prev,Today,Next'                                                                 ",{"underline":true}],["|",{"inverse":true}],["~                     ",{"fg":4,"bold":true}]],"46":[["[Name] test.cpp      ",{"inverse":true}],[" NORMAL ",{"bold":true}],[" ",{}],["calendar.txt ",{"bold":true}],["                                                        unix │ utf-8 │ text │  45% ",{}],[" LN 100",{"bold":true}],[":1  ",{}],[" ",{"bold":true,"inverse":true}],[" ~/…/calendar-vim/doc>",{"bold":true}]],"47":[["                                                                                                                                                     j          ",{}]]},"cursor":{"x":25,"y":45}}],[0.00431,{"lines":{"0":[["\" Press <F1> for hel",{"fg":6,"bold":true}],["|",{"inverse":true}],[" 56 ",{"fg":3,"bold":true}],["calendar.vim can be con",{}],["figured using the following sett",{"bg":1}],["ings:                                                    ",{}],["|",{"inverse":true}],["  1 ",{"fg":3,"bold":true}],["\" Press ? for help",{"fg":5,"bold":true}]],"1":[["                    ",{}],["|",{"inverse":true}],[" 57 ",{"fg":3,"bold":true}],["                                                                                                                ",{}],["|",{"inverse":true}],["  2 ",{"fg":3,"bold":true}],["                  ",{}]],"2":[["▼",{"fg":3,"bold":true}],[" First",{"fg":5,"bold":true}],[" : ",{}],["struct",{"fg":2,"bold":true}],["    ",{}],["|",{"inverse":true}],[" 58 ",{"fg":3,"bold":true}],["                                                *g:calendar_focus_today*                                        ",{}],["|",{"inverse":true}],["  3 ",{"fg":3,"bold":true}],[".. (up a dir)",{"fg":6,"bold":true}],["     ",{}]],"3":[["    [prototypes]",{"fg":6,"bold":true}],["    ",{}],["|",{"inverse":true}],[" 59 ",{"fg":3,"bold":true}],["Keeps focus when moving to next or previous calendar: >                                                         ",{}],["|",{"inverse":true}],["  4 /root/",{"fg":3,"bold":true}],["            ",{}]],"4":[["   ",{}],["+",{"fg":2,"bold":true}],["FirstRun(void)  ",{}],["|",{"inverse":true}],[" 60 ",{"fg":3,"bold":true}],["  let g:calendar_focus_today = 1                                                                                ",{}],["|",{"inverse":true}],["  5 ",{"fg":3,"bold":true}],["▸ .asciinema/",{"fg":6,"bold":true}],["     ",{}]],"5":[["   ",{}],["+",{"fg":2,"bold":true}],["FirstRun2(void) ",{}],["|",{"inverse":true}],[" 61 ",{"fg":3,"bold":true}],["<                                                                                                               ",{}],["|",{"inverse":true}],["  6 ",{"fg":3,"bold":true}],["▸ .cache/",{"fg":6,"bold":true}],["         ",{}]],"6":[["                    ",{}],["|",{"inverse":true}],[" 62 ",{"fg":3,"bold":true}],["                                                                                                                ",{}],["|",{"inverse":true}],["  7 ",{"fg":3,"bold":true}],["▸ .config/",{"fg":6,"bold":true}],["        ",{}]],"7":[["▼",{"fg":3,"bold":true}],[" Last",{"fg":5,"bold":true}],[" : ",{}],["struct",{"fg":2,"bold":true}],["     ",{}],["|",{"inverse":true}],[" 63 ",{"fg":3,"bold":true}],["                                                *g:calendar_keys*                                               ",{}],["|",{"inverse":true}],["  8 ",{"fg":3,"bold":true}],["▸ .dbus/",{"fg":6,"bold":true}],["          ",{}]],"8":[["    [functions]",{"fg":6,"bold":true}],["     ",{}],["|",{"inverse":true}],[" 64 ",{"fg":3,"bold":true}],["To change the key bindings in the calendar window, add entries to this                                          ",{}],["|",{"inverse":true}],["  9 ",{"fg":3,"bold":true}],["▸ .gnupg/",{"fg":6,"bold":true}],["         ",{}]],"9":[["   ",{}],["+",{"fg":2,"bold":true}],["FirstRun(void)  ",{}],["|",{"inverse":true}],[" 65 ",{"fg":3,"bold":true}],["dictionary.   Possible keys, the action bound to the keycode given in the                                       ",{}],["|",{"inverse":true}],[" 10 ",{"fg":3,"bold":true}],["▸ .kde/",{"fg":6,"bold":true}],["           ",{}]],"10":[["   ",{}],["+",{"fg":2,"bold":true}],["FirstRun2(void) ",{}],["|",{"inverse":true}],[" 66 ",{"fg":3,"bold":true}],["respective value for this key and the default binding are listed below.                                         ",{}],["|",{"inverse":true}],[" 11 ",{"fg":3,"bold":true}],["▸ .local/",{"fg":6,"bold":true}],["         ",{}]],"11":[["   ",{}],["+",{"fg":2,"bold":true}],["~Last()         ",{}],["|",{"inverse":true}],[" 67 ",{"fg":3,"bold":true}],["'close'                     Closes calendar window.             'q'                                             ",{}],["|",{"inverse":true}],[" 12 ",{"fg":3,"bold":true}],["▸ .pki/",{"fg":6,"bold":true}],["           ",{}]],"12":[["   ",{}],["+",{"fg":2,"bold":true}],["SecondRun(void) ",{}],["|",{"inverse":true}],[" 68 ",{"fg":3,"bold":true}],["'do_action'                 Executes |calendar_action|.           '<CR>'                                        ",{}],["|",{"inverse":true}],[" 13 ",{"fg":3,"bold":true}],["▸ .ssh/",{"fg":6,"bold":true}],["           ",{}]],"13":[["   ",{}],["+",{"fg":2,"bold":true}],["SecondRun2(void)",{}],["|",{"inverse":true}],[" 69 ",{"fg":3,"bold":true}],["'goto_today'                Executes |calendar_today|.            't'                                           ",{}],["|",{"inverse":true}],[" 14 ",{"fg":3,"bold":true}],["▸ .vim/",{"fg":6,"bold":true}],["           ",{}]],"14":[["                    ",{}],["|",{"inverse":true}],[" 70 ",{"fg":3,"bold":true}],["'show_help'                 Displays a short help message.      '?'                                             ",{}],["|",{"inverse":true}],[" 15 ",{"fg":3,"bold":true}],["▸ diary/",{"fg":6,"bold":true}],["          ",{}]],"15":[["▼",{"fg":3,"bold":true}],[" Second",{"fg":5,"bold":true}],[" : ",{}],["struct",{"fg":2,"bold":true}],["   ",{}],["|",{"inverse":true}],[" 71 ",{"fg":3,"bold":true}],["'redisplay'                 Redraws calendar window.            'r'                                             ",{}],["|",{"inverse":true}],[" 16 ",{"fg":3,"bold":true}],["▸ temp/",{"fg":6,"bold":true}],["           ",{}]],"16":[["    [prototypes]",{"fg":6,"bold":true}],["    ",{}],["|",{"inverse":true}],[" 72 ",{"fg":3,"bold":true}],["'goto_next_month'           Jumps to the next month.            '<Right>'                                       ",{}],["|",{"inverse":true}],[" 17 ",{"fg":3,"bold":true}],["  .bash_history   ",{}]],"17":[["   ",{}],["+",{"fg":2,"bold":true}],["SecondRun(void) ",{}],["|",{"inverse":true}],[" 73 ",{"fg":3,"bold":true}],["'goto_prev_month'           Jumps to the previous month.        '<Left>'                                        ",{}],["|",{"inverse":true}],[" 18 ",{"fg":3,"bold":true}],["  .bash_logout    ",{}]],"18":[["   ",{}],["+",{"fg":2,"bold":true}],["SecondRun2(void)",{}],["|",{"inverse":true}],[" 74 ",{"fg":3,"bold":true}],["'goto_next_year'            Jumps to the next year.             '<Up>'                                          ",{}],["|",{"inverse":true}],[" 19 ",{"fg":3,"bold":true}],["  .bash_profile   ",{"underline":true}]],"19":[["                    ",{}],["|",{"inverse":true}],[" 75 ",{"fg":3,"bold":true}],["'goto_prev_year'            Jumps to the previous year.         '<Down>'                                        ",{}],["|",{"inverse":true}],[" 20 ",{"fg":3,"bold":true}],["  .bashrc         ",{}]],"20":[["▼",{"fg":3,"bold":true}],[" ",{}],["functions",{"fg":6,"bold":true}],["         ",{}],["|",{"inverse":true}],[" 76 ",{"fg":3,"bold":true}],["An example in your .vimrc might look like this: >                                                               ",{}],["|",{"inverse":true}],[" 21 ",{"fg":3,"bold":true}],["  .cshrc          ",{}]],"21":[["    main(int argc, c",{"underline":true}],["|",{"inverse":true}],[" 77 ",{"fg":3,"bold":true}],["  let g:calendar_keys = { 'goto_next_month': '<C-Right>', 'goto_prev_month': '<C-Left>'}                        ",{}],["|",{"inverse":true}],[" 22 ",{"fg":3,"bold":true}],["  .dmrc           ",{}]],"22":[["~                   ",{"fg":4,"bold":true}],["|",{"inverse":true}],[" 78 ",{"fg":3,"bold":true}],["<                                                                                                               ",{}],["|",{"inverse":true}],[" 23 ",{"fg":3,"bold":true}],["  .esd_auth       ",{}]],"23":[["~                   ",{"fg":4,"bold":true}],["|",{"inverse":true}],[" 79 ",{"fg":3,"bold":true}],["                                                                                                                ",{}],["|",{"inverse":true}],[" 24 ",{"fg":3,"bold":true}],["  .gtkrc-2.0      ",{}]],"24":[["~                   ",{"fg":4,"bold":true}],["|",{"inverse":true}],[" 80 ",{"fg":3,"bold":true}],["                                                *g:calendar_mark*                                               ",{}],["|",{"inverse":true}],[" 25 ",{"fg":3,"bold":true}],["  .gtkrc-2.0-kde4 ",{}]],"25":[["~                   ",{"fg":4,"bold":true}],["|",{"inverse":true}],[" 81 ",{"fg":3,"bold":true}],["Place a '*' or '+' mark after the day.  Acceptable values are 'left',                                           ",{}],["|",{"inverse":true}],[" 26 ",{"fg":3,"bold":true}],["  .lesshst        ",{}]],"26":[["~                   ",{"fg":4,"bold":true}],["|",{"inverse":true}],[" 82 ",{"fg":3,"bold":true}],["'left-fit', and 'right': >                                                                                      ",{}],["|",{"inverse":true}],[" 27 ",{"fg":3,"bold":true}],["  .tcshrc         ",{}]],"27":[["~                   ",{"fg":4,"bold":true}],["|",{"inverse":true}],[" 83 ",{"fg":3,"bold":true}],["  let g:calendar_mark = 'right'                                                                                 ",{}],["|",{"inverse":true}],[" 28 ",{"fg":3,"bold":true}],["  .viminfo        ",{}]],"28":[["~                   ",{"fg":4,"bold":true}],["|",{"inverse":true}],[" 84 ",{"fg":3,"bold":true}],["<                                                                                                               ",{}],["|",{"inverse":true}],[" 29 ",{"fg":3,"bold":true}],["  .vimrc          ",{}]],"29":[["~                   ",{"fg":4,"bold":true}],["|",{"inverse":true}],[" 85 ",{"fg":3,"bold":true}],["                                                                                                                ",{}],["|",{"inverse":true}],[" 30 ",{"fg":3,"bold":true}],["  .xsession-errors",{}]],"30":[["~                   ",{"fg":4,"bold":true}],["|",{"inverse":true}],[" 86 ",{"fg":3,"bold":true}],["                                                *g:calendar_diary*                                              ",{}],["|",{"inverse":true}],[" 31 ",{"fg":3,"bold":true}],["  anaconda-ks.cfg ",{}]],"31":[["~                   ",{"fg":4,"bold":true}],["|",{"inverse":true}],[" 87 ",{"fg":3,"bold":true}],["Specify the directory for the diary files.  The default value is $HOME/diary.                                   ",{}],["|",{"inverse":true}],[" 32 ",{"fg":3,"bold":true}],["  initial-setup-ks",{}]],"32":[["~                   ",{"fg":4,"bold":true}],["|",{"inverse":true}],[" 88 ",{"fg":3,"bold":true}],["  let g:calendar_diary=$HOME.'/.vim/diary'                                                                      ",{}],["|",{"inverse":true}],[" 33 ",{"fg":3,"bold":true}],["  test.c          ",{}]],"33":[["~                   ",{"fg":4,"bold":true}],["|",{"inverse":true}],[" 89 ",{"fg":3,"bold":true}],["                                                                                                                ",{}],["|",{"inverse":true}],[" 34 ",{"fg":3,"bold":true}],["  test.cpp        ",{}]],"34":[["~                   ",{"fg":4,"bold":true}],["|",{"inverse":true}],[" 90 ",{"fg":3,"bold":true}],["                                                                                                                ",{}],["|",{"inverse":true}],[" 35 ",{"fg":3,"bold":true}],["  .test.cpp.swp   ",{}]],"35":[["~                   ",{"fg":4,"bold":true}],["|",{"inverse":true}],[" 91 ",{"fg":3,"bold":true}],["                                                *g:calendar_navi*                                               ",{}],["|",{"inverse":true}],["~                     ",{"fg":4,"bold":true}]],"36":[["~                   ",{"fg":4,"bold":true}],["|",{"inverse":true}],[" 92 ",{"fg":3,"bold":true}],["To control the calendar navigator, set this variable.  Acceptable values are                                    ",{}],["|",{"inverse":true}],["~                     ",{"fg":4,"bold":true}]],"37":[["~                   ",{"fg":4,"bold":true}],["|",{"inverse":true}],[" 93 ",{"fg":3,"bold":true}],["'top', 'bottom', or 'both'. >                                                                                   ",{}],["|",{"inverse":true}],["~                     ",{"fg":4,"bold":true}]],"38":[["~                   ",{"fg":4,"bold":true}],["|",{"inverse":true}],[" 94 ",{"fg":3,"bold":true}],["  let g:calendar_navi = ''                                                                                      ",{}],["|",{"inverse":true}],["~                     ",{"fg":4,"bold":true}]],"39":[["~                   ",{"fg":4,"bold":true}],["|",{"inverse":true}],[" 95 ",{"fg":3,"bold":true}],["<                                                                                                               ",{}],["|",{"inverse":true}],["~                     ",{"fg":4,"bold":true}]],"40":[["~                   ",{"fg":4,"bold":true}],["|",{"inverse":true}],[" 96 ",{"fg":3,"bold":true}],["                                                                                                                ",{}],["|",{"inverse":true}],["~                     ",{"fg":4,"bold":true}]],"41":[["~                   ",{"fg":4,"bold":true}],["|",{"inverse":true}],[" 97 ",{"fg":3,"bold":true}],["                                                *g:calendar_navi_label*                                         ",{}],["|",{"inverse":true}],["~                     ",{"fg":4,"bold":true}]],"42":[["~                   ",{"fg":4,"bold":true}],["|",{"inverse":true}],[" 98 ",{"fg":3,"bold":true}],["To set the labels for the calendar navigator, for example to change the                                         ",{}],["|",{"inverse":true}],["~                     ",{"fg":4,"bold":true}]],"43":[["~                   ",{"fg":4,"bold":true}],["|",{"inverse":true}],[" 99 ",{"fg":3,"bold":true}],["language, use this variable.  Entries should be comma separated. >                                              ",{}],["|",{"inverse":true}],["~                     ",{"fg":4,"bold":true}]],"44":[["~                   ",{"fg":4,"bold":true}],["|",{"inverse":true}],["100 ",{"fg":3,"bold":true}],["  let g:calendar_navi_label = 'Prev,Today,Next'                   ",{"underline":true}],["                                              ",{}],["|",{"inverse":true}],["~                     ",{"fg":4,"bold":true}]],"47":[["                                                                                                                                                                ",{}]]},"cursor":{"x":91,"y":44}}],[0.032628,{"lines":{"44":[["~                   ",{"fg":4,"bold":true}],["|",{"inverse":true}],["100 ",{"fg":3,"bold":true}],["  let g:calendar_navi_label = 'Prev,Today,Next'                                                                 ",{}],["|",{"inverse":true}],["~                     ",{"fg":4,"bold":true}]],"45":[["~                   ",{"fg":4,"bold":true}],["|",{"inverse":true}],["101 ",{"fg":3,"bold":true}],["<                                                                                                               ",{"underline":true}],["|",{"inverse":true}],["~                     ",{"fg":4,"bold":true}]],"46":[["[Name] test.cpp      ",{"inverse":true}],[" NORMAL ",{"bold":true}],[" ",{}],["calendar.txt ",{"bold":true}],["                                                        unix │ utf-8 │ text │  45% ",{}],[" LN 101",{"bold":true}],[":1  ",{}],[" ",{"bold":true,"inverse":true}],[" ~/…/calendar-vim/doc>",{"bold":true}]]},"cursor":{"x":25,"y":45,"visible":true}}],[0.010202,{"lines":{"0":[["\" Press <F1> for hel",{"fg":6,"bold":true}],["|",{"inverse":true}],[" 57 ",{"fg":3,"bold":true}],["                                                                                                                ",{}],["|",{"inverse":true}],["  1 ",{"fg":3,"bold":true}],["\" Press ? for help",{"fg":5,"bold":true}]],"1":[["                    ",{}],["|",{"inverse":true}],[" 58 ",{"fg":3,"bold":true}],["                                                *g:calendar_focus_today*                                        ",{}],["|",{"inverse":true}],["  2 ",{"fg":3,"bold":true}],["                  ",{}]],"2":[["▼",{"fg":3,"bold":true}],[" First",{"fg":5,"bold":true}],[" : ",{}],["struct",{"fg":2,"bold":true}],["    ",{}],["|",{"inverse":true}],[" 59 ",{"fg":3,"bold":true}],["Keeps focus when moving to next or previous calendar: >                                                         ",{}],["|",{"inverse":true}],["  3 ",{"fg":3,"bold":true}],[".. (up a dir)",{"fg":6,"bold":true}],["     ",{}]],"3":[["    [prototypes]",{"fg":6,"bold":true}],["    ",{}],["|",{"inverse":true}],[" 60 ",{"fg":3,"bold":true}],["  let g:calendar_focus_today = 1                                                                                ",{}],["|",{"inverse":true}],["  4 /root/",{"fg":3,"bold":true}],["            ",{}]],"4":[["   ",{}],["+",{"fg":2,"bold":true}],["FirstRun(void)  ",{}],["|",{"inverse":true}],[" 61 ",{"fg":3,"bold":true}],["<                                                                                                               ",{}],["|",{"inverse":true}],["  5 ",{"fg":3,"bold":true}],["▸ .asciinema/",{"fg":6,"bold":true}],["     ",{}]],"5":[["   ",{}],["+",{"fg":2,"bold":true}],["FirstRun2(void) ",{}],["|",{"inverse":true}],[" 62 ",{"fg":3,"bold":true}],["                                                                                                                ",{}],["|",{"inverse":true}],["  6 ",{"fg":3,"bold":true}],["▸ .cache/",{"fg":6,"bold":true}],["         ",{}]],"6":[["                    ",{}],["|",{"inverse":true}],[" 63 ",{"fg":3,"bold":true}],["                                                *g:calendar_keys*                                               ",{}],["|",{"inverse":true}],["  7 ",{"fg":3,"bold":true}],["▸ .config/",{"fg":6,"bold":true}],["        ",{}]],"7":[["▼",{"fg":3,"bold":true}],[" Last",{"fg":5,"bold":true}],[" : ",{}],["struct",{"fg":2,"bold":true}],["     ",{}],["|",{"inverse":true}],[" 64 ",{"fg":3,"bold":true}],["To change the key bindings in the calendar window, add entries to this                                          ",{}],["|",{"inverse":true}],["  8 ",{"fg":3,"bold":true}],["▸ .dbus/",{"fg":6,"bold":true}],["          ",{}]],"8":[["    [functions]",{"fg":6,"bold":true}],["     ",{}],["|",{"inverse":true}],[" 65 ",{"fg":3,"bold":true}],["dictionary.   Possible keys, the action bound to the keycode given in the                                       ",{}],["|",{"inverse":true}],["  9 ",{"fg":3,"bold":true}],["▸ .gnupg/",{"fg":6,"bold":true}],["         ",{}]],"9":[["   ",{}],["+",{"fg":2,"bold":true}],["FirstRun(void)  ",{}],["|",{"inverse":true}],[" 66 ",{"fg":3,"bold":true}],["respective value for this key and the default binding are listed below.                                         ",{}],["|",{"inverse":true}],[" 10 ",{"fg":3,"bold":true}],["▸ .kde/",{"fg":6,"bold":true}],["           ",{}]],"10":[["   ",{}],["+",{"fg":2,"bold":true}],["FirstRun2(void) ",{}],["|",{"inverse":true}],[" 67 ",{"fg":3,"bold":true}],["'close'                     Closes calendar window.             'q'                                             ",{}],["|",{"inverse":true}],[" 11 ",{"fg":3,"bold":true}],["▸ .local/",{"fg":6,"bold":true}],["         ",{}]],"11":[["   ",{}],["+",{"fg":2,"bold":true}],["~Last()         ",{}],["|",{"inverse":true}],[" 68 ",{"fg":3,"bold":true}],["'do_action'                 Executes |calendar_action|.           '<CR>'                                        ",{}],["|",{"inverse":true}],[" 12 ",{"fg":3,"bold":true}],["▸ .pki/",{"fg":6,"bold":true}],["           ",{}]],"12":[["   ",{}],["+",{"fg":2,"bold":true}],["SecondRun(void) ",{}],["|",{"inverse":true}],[" 69 ",{"fg":3,"bold":true}],["'goto_today'                Executes |calendar_today|.            't'                                           ",{}],["|",{"inverse":true}],[" 13 ",{"fg":3,"bold":true}],["▸ .ssh/",{"fg":6,"bold":true}],["           ",{}]],"13":[["   ",{}],["+",{"fg":2,"bold":true}],["SecondRun2(void)",{}],["|",{"inverse":true}],[" 70 ",{"fg":3,"bold":true}],["'show_help'                 Displays a short help message.      '?'                                             ",{}],["|",{"inverse":true}],[" 14 ",{"fg":3,"bold":true}],["▸ .vim/",{"fg":6,"bold":true}],["           ",{}]],"14":[["                    ",{}],["|",{"inverse":true}],[" 71 ",{"fg":3,"bold":true}],["'redisplay'                 Redraws calendar window.            'r'                                             ",{}],["|",{"inverse":true}],[" 15 ",{"fg":3,"bold":true}],["▸ diary/",{"fg":6,"bold":true}],["          ",{}]],"15":[["▼",{"fg":3,"bold":true}],[" Second",{"fg":5,"bold":true}],[" : ",{}],["struct",{"fg":2,"bold":true}],["   ",{}],["|",{"inverse":true}],[" 72 ",{"fg":3,"bold":true}],["'goto_next_month'           Jumps to the next month.            '<Right>'                                       ",{}],["|",{"inverse":true}],[" 16 ",{"fg":3,"bold":true}],["▸ temp/",{"fg":6,"bold":true}],["           ",{}]],"16":[["    [prototypes]",{"fg":6,"bold":true}],["    ",{}],["|",{"inverse":true}],[" 73 ",{"fg":3,"bold":true}],["'goto_prev_month'           Jumps to the previous month.        '<Left>'                                        ",{}],["|",{"inverse":true}],[" 17 ",{"fg":3,"bold":true}],["  .bash_history   ",{}]],"17":[["   ",{}],["+",{"fg":2,"bold":true}],["SecondRun(void) ",{}],["|",{"inverse":true}],[" 74 ",{"fg":3,"bold":true}],["'goto_next_year'            Jumps to the next year.             '<Up>'                                          ",{}],["|",{"inverse":true}],[" 18 ",{"fg":3,"bold":true}],["  .bash_logout    ",{}]],"18":[["   ",{}],["+",{"fg":2,"bold":true}],["SecondRun2(void)",{}],["|",{"inverse":true}],[" 75 ",{"fg":3,"bold":true}],["'goto_prev_year'            Jumps to the previous year.         '<Down>'                                        ",{}],["|",{"inverse":true}],[" 19 ",{"fg":3,"bold":true}],["  .bash_profile   ",{"underline":true}]],"19":[["                    ",{}],["|",{"inverse":true}],[" 76 ",{"fg":3,"bold":true}],["An example in your .vimrc might look like this: >                                                               ",{}],["|",{"inverse":true}],[" 20 ",{"fg":3,"bold":true}],["  .bashrc         ",{}]],"20":[["▼",{"fg":3,"bold":true}],[" ",{}],["functions",{"fg":6,"bold":true}],["         ",{}],["|",{"inverse":true}],[" 77 ",{"fg":3,"bold":true}],["  let g:calendar_keys = { 'goto_next_month': '<C-Right>', 'goto_prev_month': '<C-Left>'}                        ",{}],["|",{"inverse":true}],[" 21 ",{"fg":3,"bold":true}],["  .cshrc          ",{}]],"21":[["    main(int argc, c",{"underline":true}],["|",{"inverse":true}],[" 78 ",{"fg":3,"bold":true}],["<                                                                                                               ",{}],["|",{"inverse":true}],[" 22 ",{"fg":3,"bold":true}],["  .dmrc           ",{}]],"22":[["~                   ",{"fg":4,"bold":true}],["|",{"inverse":true}],[" 79 ",{"fg":3,"bold":true}],["                                                                                                                ",{}],["|",{"inverse":true}],[" 23 ",{"fg":3,"bold":true}],["  .esd_auth       ",{}]],"23":[["~                   ",{"fg":4,"bold":true}],["|",{"inverse":true}],[" 80 ",{"fg":3,"bold":true}],["                                                *g:calendar_mark*                                               ",{}],["|",{"inverse":true}],[" 24 ",{"fg":3,"bold":true}],["  .gtkrc-2.0      ",{}]],"24":[["~                   ",{"fg":4,"bold":true}],["|",{"inverse":true}],[" 81 ",{"fg":3,"bold":true}],["Place a '*' or '+' mark after the day.  Acceptable values are 'left',                                           ",{}],["|",{"inverse":true}],[" 25 ",{"fg":3,"bold":true}],["  .gtkrc-2.0-kde4 ",{}]],"25":[["~                   ",{"fg":4,"bold":true}],["|",{"inverse":true}],[" 82 ",{"fg":3,"bold":true}],["'left-fit', and 'right': >                                                                                      ",{}],["|",{"inverse":true}],[" 26 ",{"fg":3,"bold":true}],["  .lesshst        ",{}]],"26":[["~                   ",{"fg":4,"bold":true}],["|",{"inverse":true}],[" 83 ",{"fg":3,"bold":true}],["  let g:calendar_mark = 'right'                                                                                 ",{}],["|",{"inverse":true}],[" 27 ",{"fg":3,"bold":true}],["  .tcshrc         ",{}]],"27":[["~                   ",{"fg":4,"bold":true}],["|",{"inverse":true}],[" 84 ",{"fg":3,"bold":true}],["<                                                                                                               ",{}],["|",{"inverse":true}],[" 28 ",{"fg":3,"bold":true}],["  .viminfo        ",{}]],"28":[["~                   ",{"fg":4,"bold":true}],["|",{"inverse":true}],[" 85 ",{"fg":3,"bold":true}],["                                                                                                                ",{}],["|",{"inverse":true}],[" 29 ",{"fg":3,"bold":true}],["  .vimrc          ",{}]],"29":[["~                   ",{"fg":4,"bold":true}],["|",{"inverse":true}],[" 86 ",{"fg":3,"bold":true}],["                                                *g:calendar_diary*                                              ",{}],["|",{"inverse":true}],[" 30 ",{"fg":3,"bold":true}],["  .xsession-errors",{}]],"30":[["~                   ",{"fg":4,"bold":true}],["|",{"inverse":true}],[" 87 ",{"fg":3,"bold":true}],["Specify the directory for the diary files.  The default value is $HOME/diary.                                   ",{}],["|",{"inverse":true}],[" 31 ",{"fg":3,"bold":true}],["  anaconda-ks.cfg ",{}]],"31":[["~                   ",{"fg":4,"bold":true}],["|",{"inverse":true}],[" 88 ",{"fg":3,"bold":true}],["  let g:calendar_diary=$HOME.'/.vim/diary'                                                                      ",{}],["|",{"inverse":true}],[" 32 ",{"fg":3,"bold":true}],["  initial-setup-ks",{}]],"32":[["~                   ",{"fg":4,"bold":true}],["|",{"inverse":true}],[" 89 ",{"fg":3,"bold":true}],["                                                                                                                ",{}],["|",{"inverse":true}],[" 33 ",{"fg":3,"bold":true}],["  test.c          ",{}]],"33":[["~                   ",{"fg":4,"bold":true}],["|",{"inverse":true}],[" 90 ",{"fg":3,"bold":true}],["                                                                                                                ",{}],["|",{"inverse":true}],[" 34 ",{"fg":3,"bold":true}],["  test.cpp        ",{}]],"34":[["~                   ",{"fg":4,"bold":true}],["|",{"inverse":true}],[" 91 ",{"fg":3,"bold":true}],["                                                *g:calendar_navi*                                               ",{}],["|",{"inverse":true}],[" 35 ",{"fg":3,"bold":true}],["  .test.cpp.swp   ",{}]],"35":[["~                   ",{"fg":4,"bold":true}],["|",{"inverse":true}],[" 92 ",{"fg":3,"bold":true}],["To control the calendar navigator, set this variable.  Acceptable values are                                    ",{}],["|",{"inverse":true}],["~                     ",{"fg":4,"bold":true}]],"36":[["~                   ",{"fg":4,"bold":true}],["|",{"inverse":true}],[" 93 ",{"fg":3,"bold":true}],["'top', 'bottom', or 'both'. >                                                                                   ",{}],["|",{"inverse":true}],["~                     ",{"fg":4,"bold":true}]],"37":[["~                   ",{"fg":4,"bold":true}],["|",{"inverse":true}],[" 94 ",{"fg":3,"bold":true}],["  let g:calendar_navi = ''                                                                                      ",{}],["|",{"inverse":true}],["~                     ",{"fg":4,"bold":true}]],"38":[["~                   ",{"fg":4,"bold":true}],["|",{"inverse":true}],[" 95 ",{"fg":3,"bold":true}],["<                                                                                                               ",{}],["|",{"inverse":true}],["~                     ",{"fg":4,"bold":true}]],"39":[["~                   ",{"fg":4,"bold":true}],["|",{"inverse":true}],[" 96 ",{"fg":3,"bold":true}],["                                                                                                                ",{}],["|",{"inverse":true}],["~                     ",{"fg":4,"bold":true}]],"40":[["~                   ",{"fg":4,"bold":true}],["|",{"inverse":true}],[" 97 ",{"fg":3,"bold":true}],["                                                *g:calendar_navi_label*                                         ",{}],["|",{"inverse":true}],["~                     ",{"fg":4,"bold":true}]],"41":[["~                   ",{"fg":4,"bold":true}],["|",{"inverse":true}],[" 98 ",{"fg":3,"bold":true}],["To set the labels for the calendar navigator, for example to change the                                         ",{}],["|",{"inverse":true}],["~                     ",{"fg":4,"bold":true}]],"42":[["~                   ",{"fg":4,"bold":true}],["|",{"inverse":true}],[" 99 ",{"fg":3,"bold":true}],["language, use this variable.  Entries should be comma separated. >                                              ",{}],["|",{"inverse":true}],["~                     ",{"fg":4,"bold":true}]],"43":[["~                   ",{"fg":4,"bold":true}],["|",{"inverse":true}],["100 ",{"fg":3,"bold":true}],["  let g:calendar_navi_label = 'Prev,Today,Next'                                                                 ",{}],["|",{"inverse":true}],["~                     ",{"fg":4,"bold":true}]],"44":[["~                   ",{"fg":4,"bold":true}],["|",{"inverse":true}],["101 ",{"fg":3,"bold":true}],["<                                                                                                               ",{}],["|",{"inverse":true}],["~                     ",{"fg":4,"bold":true}]],"45":[["~                   ",{"fg":4,"bold":true}],["|",{"inverse":true}],["102 ",{"fg":3,"bold":true}],["                                                                                                                ",{"underline":true}],["|",{"inverse":true}],["~                     ",{"fg":4,"bold":true}]],"46":[["[Name] test.cpp      ",{"inverse":true}],[" NORMAL ",{"bold":true}],[" ",{}],["calendar.txt ",{"bold":true}],["                                                        unix │ utf-8 │ text │  46% ",{}],[" LN 102",{"bold":true}],[":1  ",{}],[" ",{"bold":true,"inverse":true}],[" ~/…/calendar-vim/doc>",{"bold":true}]]}}],[0.020877,{"lines":{"47":[["                                                                                                                                                     j          ",{}]]},"cursor":{"visible":false}}],[0.000971,{"lines":{"0":[["\" Press <F1> for hel",{"fg":6,"bold":true}],["|",{"inverse":true}],[" 58 ",{"fg":3,"bold":true}],["                                                *g:calendar_focus_today*                                        ",{}],["|",{"inverse":true}],["  1 ",{"fg":3,"bold":true}],["\" Press ? for help",{"fg":5,"bold":true}]],"1":[["                    ",{}],["|",{"inverse":true}],[" 59 ",{"fg":3,"bold":true}],["Keeps focus when moving to next or previous calendar: >                                                         ",{}],["|",{"inverse":true}],["  2 ",{"fg":3,"bold":true}],["                  ",{}]],"2":[["▼",{"fg":3,"bold":true}],[" First",{"fg":5,"bold":true}],[" : ",{}],["struct",{"fg":2,"bold":true}],["    ",{}],["|",{"inverse":true}],[" 60 ",{"fg":3,"bold":true}],["  let g:calendar_focus_today = 1                                                                                ",{}],["|",{"inverse":true}],["  3 ",{"fg":3,"bold":true}],[".. (up a dir)",{"fg":6,"bold":true}],["     ",{}]],"3":[["    [prototypes]",{"fg":6,"bold":true}],["    ",{}],["|",{"inverse":true}],[" 61 ",{"fg":3,"bold":true}],["<                                                                                                               ",{}],["|",{"inverse":true}],["  4 /root/",{"fg":3,"bold":true}],["            ",{}]],"4":[["   ",{}],["+",{"fg":2,"bold":true}],["FirstRun(void)  ",{}],["|",{"inverse":true}],[" 62 ",{"fg":3,"bold":true}],["                                                                                                                ",{}],["|",{"inverse":true}],["  5 ",{"fg":3,"bold":true}],["▸ .asciinema/",{"fg":6,"bold":true}],["     ",{}]],"5":[["   ",{}],["+",{"fg":2,"bold":true}],["FirstRun2(void) ",{}],["|",{"inverse":true}],[" 63 ",{"fg":3,"bold":true}],["                                                *g:calendar_keys*                                               ",{}],["|",{"inverse":true}],["  6 ",{"fg":3,"bold":true}],["▸ .cache/",{"fg":6,"bold":true}],["         ",{}]],"6":[["                    ",{}],["|",{"inverse":true}],[" 64 ",{"fg":3,"bold":true}],["To change the key bindings in the calendar window, add entries to this                                          ",{}],["|",{"inverse":true}],["  7 ",{"fg":3,"bold":true}],["▸ .config/",{"fg":6,"bold":true}],["        ",{}]],"7":[["▼",{"fg":3,"bold":true}],[" Last",{"fg":5,"bold":true}],[" : ",{}],["struct",{"fg":2,"bold":true}],["     ",{}],["|",{"inverse":true}],[" 65 ",{"fg":3,"bold":true}],["dictionary.   Possible keys, tthe calendar window, add entries to this                                          ",{}],["|",{"inverse":true}],["  8 ",{"fg":3,"bold":true}],["▸ .dbus/",{"fg":6,"bold":true}],["          ",{}]],"47":[["                                                                                                                                                                ",{}]]},"cursor":{"x":55,"y":7}}],[0.021546,{"lines":{"7":[["▼",{"fg":3,"bold":true}],[" Last",{"fg":5,"bold":true}],[" : ",{}],["struct",{"fg":2,"bold":true}],["     ",{}],["|",{"inverse":true}],[" 65 ",{"fg":3,"bold":true}],["dictionary.   Possible keys, the action bound to the keycode given in the                                       ",{}],["|",{"inverse":true}],["  8 ",{"fg":3,"bold":true}],["▸ .dbus/",{"fg":6,"bold":true}],["          ",{}]],"8":[["    [functions]",{"fg":6,"bold":true}],["     ",{}],["|",{"inverse":true}],[" 66 ",{"fg":3,"bold":true}],["respective value for this key and the default binding are listed below.                                         ",{}],["|",{"inverse":true}],["  9 ",{"fg":3,"bold":true}],["▸ .gnupg/",{"fg":6,"bold":true}],["         ",{}]],"9":[["   ",{}],["+",{"fg":2,"bold":true}],["FirstRun(void)  ",{}],["|",{"inverse":true}],[" 67 ",{"fg":3,"bold":true}],["'close'                     Closes calendar window.             'q'                                             ",{}],["|",{"inverse":true}],[" 10 ",{"fg":3,"bold":true}],["▸ .kde/",{"fg":6,"bold":true}],["           ",{}]],"10":[["   ",{}],["+",{"fg":2,"bold":true}],["FirstRun2(void) ",{}],["|",{"inverse":true}],[" 68 ",{"fg":3,"bold":true}],["'do_action'                 Executes |calendar_action|.           '<CR>'                                        ",{}],["|",{"inverse":true}],[" 11 ",{"fg":3,"bold":true}],["▸ .local/",{"fg":6,"bold":true}],["         ",{}]],"11":[["   ",{}],["+",{"fg":2,"bold":true}],["~Last()         ",{}],["|",{"inverse":true}],[" 69 ",{"fg":3,"bold":true}],["'goto_today'                Executes |calendar_today|.            't'                                           ",{}],["|",{"inverse":true}],[" 12 ",{"fg":3,"bold":true}],["▸ .pki/",{"fg":6,"bold":true}],["           ",{}]],"12":[["   ",{}],["+",{"fg":2,"bold":true}],["SecondRun(void) ",{}],["|",{"inverse":true}],[" 70 ",{"fg":3,"bold":true}],["'show_help'                 Displays a short help message.      '?'                                             ",{}],["|",{"inverse":true}],[" 13 ",{"fg":3,"bold":true}],["▸ .ssh/",{"fg":6,"bold":true}],["           ",{}]],"13":[["   ",{}],["+",{"fg":2,"bold":true}],["SecondRun2(void)",{}],["|",{"inverse":true}],[" 71 ",{"fg":3,"bold":true}],["'redisplay'                 Redraws calendar window.            'r'                                             ",{}],["|",{"inverse":true}],[" 14 ",{"fg":3,"bold":true}],["▸ .vim/",{"fg":6,"bold":true}],["           ",{}]],"14":[["                    ",{}],["|",{"inverse":true}],[" 72 ",{"fg":3,"bold":true}],["'goto_next_month'           Jumps to the next month.            '<Right>'                                       ",{}],["|",{"inverse":true}],[" 15 ",{"fg":3,"bold":true}],["▸ diary/",{"fg":6,"bold":true}],["          ",{}]]},"cursor":{"x":120,"y":14}}],[0.015606,{"lines":{"0":[["\" Press <F1> for hel",{"fg":6,"bold":true}],["|",{"inverse":true}],[" 59 ",{"fg":3,"bold":true}],["Keeps focus when moving to next or previous calendar: >                                                         ",{}],["|",{"inverse":true}],["  1 ",{"fg":3,"bold":true}],["\" Press ? for help",{"fg":5,"bold":true}]],"1":[["                    ",{}],["|",{"inverse":true}],[" 60 ",{"fg":3,"bold":true}],["  let g:calendar_focus_today = 1                                                                                ",{}],["|",{"inverse":true}],["  2 ",{"fg":3,"bold":true}],["                  ",{}]],"2":[["▼",{"fg":3,"bold":true}],[" First",{"fg":5,"bold":true}],[" : ",{}],["struct",{"fg":2,"bold":true}],["    ",{}],["|",{"inverse":true}],[" 61 ",{"fg":3,"bold":true}],["<                                                                                                               ",{}],["|",{"inverse":true}],["  3 ",{"fg":3,"bold":true}],[".. (up a dir)",{"fg":6,"bold":true}],["     ",{}]],"3":[["    [prototypes]",{"fg":6,"bold":true}],["    ",{}],["|",{"inverse":true}],[" 62 ",{"fg":3,"bold":true}],["                                                                                                                ",{}],["|",{"inverse":true}],["  4 /root/",{"fg":3,"bold":true}],["            ",{}]],"4":[["   ",{}],["+",{"fg":2,"bold":true}],["FirstRun(void)  ",{}],["|",{"inverse":true}],[" 63 ",{"fg":3,"bold":true}],["                                                *g:calendar_keys*                                               ",{}],["|",{"inverse":true}],["  5 ",{"fg":3,"bold":true}],["▸ .asciinema/",{"fg":6,"bold":true}],["     ",{}]],"5":[["   ",{}],["+",{"fg":2,"bold":true}],["FirstRun2(void) ",{}],["|",{"inverse":true}],[" 64 ",{"fg":3,"bold":true}],["To change the key bindings in the calendar window, add entries to this                                          ",{}],["|",{"inverse":true}],["  6 ",{"fg":3,"bold":true}],["▸ .cache/",{"fg":6,"bold":true}],["         ",{}]],"6":[["                    ",{}],["|",{"inverse":true}],[" 65 ",{"fg":3,"bold":true}],["dictionary.   Possible keys, the action bound to the keycode given in the                                       ",{}],["|",{"inverse":true}],["  7 ",{"fg":3,"bold":true}],["▸ .config/",{"fg":6,"bold":true}],["        ",{}]],"7":[["▼",{"fg":3,"bold":true}],[" Last",{"fg":5,"bold":true}],[" : ",{}],["struct",{"fg":2,"bold":true}],["     ",{}],["|",{"inverse":true}],[" 66 ",{"fg":3,"bold":true}],["dictionary.   Possible keys, the action bound to the keycode given in the                                       ",{}],["|",{"inverse":true}],["  8 ",{"fg":3,"bold":true}],["▸ .dbus/",{"fg":6,"bold":true}],["          ",{}]],"15":[["▼",{"fg":3,"bold":true}],[" Second",{"fg":5,"bold":true}],[" : ",{}],["struct",{"fg":2,"bold":true}],["   ",{}],["|",{"inverse":true}],[" 73 ",{"fg":3,"bold":true}],["'goto_prev_month'           Jumps to the previous month.        '<Left>'                                        ",{}],["|",{"inverse":true}],[" 16 ",{"fg":3,"bold":true}],["▸ temp/",{"fg":6,"bold":true}],["           ",{}]],"16":[["    [prototypes]",{"fg":6,"bold":true}],["    ",{}],["|",{"inverse":true}],[" 74 ",{"fg":3,"bold":true}],["'goto_next_year'            Jumps to the next year.             '<Up>'                                          ",{}],["|",{"inverse":true}],[" 17 ",{"fg":3,"bold":true}],["  .bash_history   ",{}]],"17":[["   ",{}],["+",{"fg":2,"bold":true}],["SecondRun(void) ",{}],["|",{"inverse":true}],[" 75 ",{"fg":3,"bold":true}],["'goto_prev_year'            Jumps to the previous year.         '<Down>'                                        ",{}],["|",{"inverse":true}],[" 18 ",{"fg":3,"bold":true}],["  .bash_logout    ",{}]],"18":[["   ",{}],["+",{"fg":2,"bold":true}],["SecondRun2(void)",{}],["|",{"inverse":true}],[" 76 ",{"fg":3,"bold":true}],["An example in your .vimrc might look like this: >                                                               ",{}],["|",{"inverse":true}],[" 19 ",{"fg":3,"bold":true}],["  .bash_profile   ",{"underline":true}]],"19":[["                    ",{}],["|",{"inverse":true}],[" 77 ",{"fg":3,"bold":true}],["  let g:calendar_keys = { 'goto_next_month': '<C-Right>', 'goto_prev_month': '<C-Left>'}                        ",{}],["|",{"inverse":true}],[" 20 ",{"fg":3,"bold":true}],["  .bashrc         ",{}]],"20":[["▼",{"fg":3,"bold":true}],[" ",{}],["functions",{"fg":6,"bold":true}],["         ",{}],["|",{"inverse":true}],[" 78 ",{"fg":3,"bold":true}],["<                                                                                                               ",{}],["|",{"inverse":true}],[" 21 ",{"fg":3,"bold":true}],["  .cshrc          ",{}]],"21":[["    main(int argc, c",{"underline":true}],["|",{"inverse":true}],[" 79 ",{"fg":3,"bold":true}],["                                                                                                                ",{}],["|",{"inverse":true}],[" 22 ",{"fg":3,"bold":true}],["  .dmrc           ",{}]],"22":[["~                   ",{"fg":4,"bold":true}],["|",{"inverse":true}],[" 80 ",{"fg":3,"bold":true}],["                                                *g:calendar_mark*                                               ",{}],["|",{"inverse":true}],[" 23 ",{"fg":3,"bold":true}],["  .esd_auth       ",{}]],"23":[["~                   ",{"fg":4,"bold":true}],["|",{"inverse":true}],[" 81 ",{"fg":3,"bold":true}],["Place a '*' or '+' mark after the day.  Acceptable values are 'left',                                           ",{}],["|",{"inverse":true}],[" 24 ",{"fg":3,"bold":true}],["  .gtkrc-2.0      ",{}]],"24":[["~                   ",{"fg":4,"bold":true}],["|",{"inverse":true}],[" 82 ",{"fg":3,"bold":true}],["'left-fit', and 'right': >                                                                                      ",{}],["|",{"inverse":true}],[" 25 ",{"fg":3,"bold":true}],["  .gtkrc-2.0-kde4 ",{}]],"25":[["~                   ",{"fg":4,"bold":true}],["|",{"inverse":true}],[" 83 ",{"fg":3,"bold":true}],["  let g:calendar_mark = 'right'                                                                                 ",{}],["|",{"inverse":true}],[" 26 ",{"fg":3,"bold":true}],["  .lesshst        ",{}]],"26":[["~                   ",{"fg":4,"bold":true}],["|",{"inverse":true}],[" 84 ",{"fg":3,"bold":true}],["<                                                                                                               ",{}],["|",{"inverse":true}],[" 27 ",{"fg":3,"bold":true}],["  .tcshrc         ",{}]],"27":[["~                   ",{"fg":4,"bold":true}],["|",{"inverse":true}],[" 85 ",{"fg":3,"bold":true}],["                                                                                                                ",{}],["|",{"inverse":true}],[" 28 ",{"fg":3,"bold":true}],["  .viminfo        ",{}]],"28":[["~                   ",{"fg":4,"bold":true}],["|",{"inverse":true}],[" 86 ",{"fg":3,"bold":true}],["                                                *g:calendar_diary*                                              ",{}],["|",{"inverse":true}],[" 29 ",{"fg":3,"bold":true}],["  .vimrc          ",{}]],"29":[["~                   ",{"fg":4,"bold":true}],["|",{"inverse":true}],[" 87 ",{"fg":3,"bold":true}],["Specify the directory for the diary files.  The default value is $HOME/diary.                                   ",{}],["|",{"inverse":true}],[" 30 ",{"fg":3,"bold":true}],["  .xsession-errors",{}]],"30":[["~                   ",{"fg":4,"bold":true}],["|",{"inverse":true}],[" 88 ",{"fg":3,"bold":true}],["  let g:calendar_diary=$HOME.'/.vim/diary'                                                                      ",{}],["|",{"inverse":true}],[" 31 ",{"fg":3,"bold":true}],["  anaconda-ks.cfg ",{}]],"31":[["~                   ",{"fg":4,"bold":true}],["|",{"inverse":true}],[" 89 ",{"fg":3,"bold":true}],["                                                                                                                ",{}],["|",{"inverse":true}],[" 32 ",{"fg":3,"bold":true}],["  initial-setup-ks",{}]],"32":[["~                   ",{"fg":4,"bold":true}],["|",{"inverse":true}],[" 90 ",{"fg":3,"bold":true}],["                                                                                                                ",{}],["|",{"inverse":true}],[" 33 ",{"fg":3,"bold":true}],["  test.c          ",{}]],"33":[["~                   ",{"fg":4,"bold":true}],["|",{"inverse":true}],[" 91 ",{"fg":3,"bold":true}],["                                                *g:calendar_navi*                                               ",{}],["|",{"inverse":true}],[" 34 ",{"fg":3,"bold":true}],["  test.cpp        ",{}]],"34":[["~                   ",{"fg":4,"bold":true}],["|",{"inverse":true}],[" 92 ",{"fg":3,"bold":true}],["To control the calendar navigator, set this variable.  Acceptable values are                                    ",{}],["|",{"inverse":true}],[" 35 ",{"fg":3,"bold":true}],["  .test.cpp.swp   ",{}]],"35":[["~                   ",{"fg":4,"bold":true}],["|",{"inverse":true}],[" 93 ",{"fg":3,"bold":true}],["'top', 'bottom', or 'both'. >                                                                                   ",{}],["|",{"inverse":true}],["~                     ",{"fg":4,"bold":true}]],"36":[["~                   ",{"fg":4,"bold":true}],["|",{"inverse":true}],[" 94 ",{"fg":3,"bold":true}],["  let g:calendar_navi = ''                                                                                      ",{}],["|",{"inverse":true}],["~                     ",{"fg":4,"bold":true}]],"37":[["~                   ",{"fg":4,"bold":true}],["|",{"inverse":true}],[" 95 ",{"fg":3,"bold":true}],["<                                                                                                               ",{}],["|",{"inverse":true}],["~                     ",{"fg":4,"bold":true}]],"38":[["~                   ",{"fg":4,"bold":true}],["|",{"inverse":true}],[" 96 ",{"fg":3,"bold":true}],["                                                                                                                ",{}],["|",{"inverse":true}],["~                     ",{"fg":4,"bold":true}]],"39":[["~                   ",{"fg":4,"bold":true}],["|",{"inverse":true}],[" 97 ",{"fg":3,"bold":true}],["                                                *g:calendar_navi_label*                                         ",{}],["|",{"inverse":true}],["~                     ",{"fg":4,"bold":true}]],"40":[["~                   ",{"fg":4,"bold":true}],["|",{"inverse":true}],[" 98 ",{"fg":3,"bold":true}],["To set the labels for the calendar navigator, for example to change the                                         ",{}],["|",{"inverse":true}],["~                     ",{"fg":4,"bold":true}]],"41":[["~                   ",{"fg":4,"bold":true}],["|",{"inverse":true}],[" 99 ",{"fg":3,"bold":true}],["language, use this variable.  Entries should be comma separated. >                                              ",{}],["|",{"inverse":true}],["~                     ",{"fg":4,"bold":true}]],"42":[["~                   ",{"fg":4,"bold":true}],["|",{"inverse":true}],["100 ",{"fg":3,"bold":true}],["  let g:calendar_navi_label = 'Prev,Today,Next'                                                                 ",{}],["|",{"inverse":true}],["~                     ",{"fg":4,"bold":true}]],"43":[["~                   ",{"fg":4,"bold":true}],["|",{"inverse":true}],["101 ",{"fg":3,"bold":true}],["<                                                                                                               ",{}],["|",{"inverse":true}],["~                     ",{"fg":4,"bold":true}]],"44":[["~                   ",{"fg":4,"bold":true}],["|",{"inverse":true}],["102 ",{"fg":3,"bold":true}],["                                                                                                                ",{}],["|",{"inverse":true}],["~                     ",{"fg":4,"bold":true}]],"45":[["~                   ",{"fg":4,"bold":true}],["|",{"inverse":true}],["103 ",{"fg":3,"bold":true}],["                                                *g:calendar_erafmt*                                             ",{"underline":true}],["|",{"inverse":true}],["~                     ",{"fg":4,"bold":true}]],"46":[["[Name] test.cpp      ",{"inverse":true}],[" NORMAL ",{"bold":true}],[" ",{}],["calendar.txt ",{"bold":true}],["                                                        unix │ utf-8 │ text │  46% ",{}],[" LN 103",{"bold":true}],[":1  ",{}],[" ",{"bold":true,"inverse":true}],[" ~/…/calendar-vim/doc>",{"bold":true}]]},"cursor":{"x":25,"y":7}}],[0.006249999999999999,{"lines":{"7":[["▼",{"fg":3,"bold":true}],[" Last",{"fg":5,"bold":true}],[" : ",{}],["struct",{"fg":2,"bold":true}],["     ",{}],["|",{"inverse":true}],[" 66 ",{"fg":3,"bold":true}],["respective value for this key and the default binding are listed below.                                         ",{}],["|",{"inverse":true}],["  8 ",{"fg":3,"bold":true}],["▸ .dbus/",{"fg":6,"bold":true}],["          ",{}]],"8":[["    [functions]",{"fg":6,"bold":true}],["     ",{}],["|",{"inverse":true}],[" 67 ",{"fg":3,"bold":true}],["'close'                     Closes calendar window.             'q'                                             ",{}],["|",{"inverse":true}],["  9 ",{"fg":3,"bold":true}],["▸ .gnupg/",{"fg":6,"bold":true}],["         ",{}]],"9":[["   ",{}],["+",{"fg":2,"bold":true}],["FirstRun(void)  ",{}],["|",{"inverse":true}],[" 68 ",{"fg":3,"bold":true}],["'do_action'                 Executes |calendar_action|.           '<CR>'                                        ",{}],["|",{"inverse":true}],[" 10 ",{"fg":3,"bold":true}],["▸ .kde/",{"fg":6,"bold":true}],["           ",{}]],"10":[["   ",{}],["+",{"fg":2,"bold":true}],["FirstRun2(void) ",{}],["|",{"inverse":true}],[" 69 ",{"fg":3,"bold":true}],["'goto_today'                Executes |calendar_today|.            't'                                           ",{}],["|",{"inverse":true}],[" 11 ",{"fg":3,"bold":true}],["▸ .local/",{"fg":6,"bold":true}],["         ",{}]],"11":[["   ",{}],["+",{"fg":2,"bold":true}],["~Last()         ",{}],["|",{"inverse":true}],[" 70 ",{"fg":3,"bold":true}],["'show_help'                 Displays a short help message.      '?'                                             ",{}],["|",{"inverse":true}],[" 12 ",{"fg":3,"bold":true}],["▸ .pki/",{"fg":6,"bold":true}],["           ",{}]],"12":[["   ",{}],["+",{"fg":2,"bold":true}],["SecondRun(void) ",{}],["|",{"inverse":true}],[" 71 ",{"fg":3,"bold":true}],["'redisplay'                 Redraws calendar window.            'r'                                             ",{}],["|",{"inverse":true}],[" 13 ",{"fg":3,"bold":true}],["▸ .ssh/",{"fg":6,"bold":true}],["           ",{}]],"13":[["   ",{}],["+",{"fg":2,"bold":true}],["SecondRun2(void)",{}],["|",{"inverse":true}],[" 72 ",{"fg":3,"bold":true}],["'goto_next_month'           Jumps to the next month.            '<Right>'                                       ",{}],["|",{"inverse":true}],[" 14 ",{"fg":3,"bold":true}],["▸ .vim/",{"fg":6,"bold":true}],["           ",{}]],"14":[["                    ",{}],["|",{"inverse":true}],[" 73 ",{"fg":3,"bold":true}],["'goto_prev_month'           Jumps to the previous month.        '<Left>'                                        ",{}],["|",{"inverse":true}],[" 15 ",{"fg":3,"bold":true}],["▸ diary/",{"fg":6,"bold":true}],["          ",{}]],"15":[["▼",{"fg":3,"bold":true}],[" Second",{"fg":5,"bold":true}],[" : ",{}],["struct",{"fg":2,"bold":true}],["   ",{}],["|",{"inverse":true}],[" 74 ",{"fg":3,"bold":true}],["'goto_next_year'            Jumps to the next year.             '<Up>'                                          ",{}],["|",{"inverse":true}],[" 16 ",{"fg":3,"bold":true}],["▸ temp/",{"fg":6,"bold":true}],["           ",{}]],"16":[["    [prototypes]",{"fg":6,"bold":true}],["    ",{}],["|",{"inverse":true}],[" 75 ",{"fg":3,"bold":true}],["'goto_prev_year'            Jumps to the previous year.         '<Down>'                                        ",{}],["|",{"inverse":true}],[" 17 ",{"fg":3,"bold":true}],["  .bash_history   ",{}]],"17":[["   ",{}],["+",{"fg":2,"bold":true}],["SecondRun(void) ",{}],["|",{"inverse":true}],[" 76 ",{"fg":3,"bold":true}],["An example in your .vimrc might look like this: >                                                               ",{}],["|",{"inverse":true}],[" 18 ",{"fg":3,"bold":true}],["  .bash_logout    ",{}]],"18":[["   ",{}],["+",{"fg":2,"bold":true}],["SecondRun2(void)",{}],["|",{"inverse":true}],[" 77 ",{"fg":3,"bold":true}],["  let g:calendar_keys = { 'goto_next_month': '<C-Right>', 'goto_prev_month': '<C-Left>'}                        ",{}],["|",{"inverse":true}],[" 19 ",{"fg":3,"bold":true}],["  .bash_profile   ",{"underline":true}]],"19":[["                    ",{}],["|",{"inverse":true}],[" 78 ",{"fg":3,"bold":true}],["<                                                                                                               ",{}],["|",{"inverse":true}],[" 20 ",{"fg":3,"bold":true}],["  .bashrc         ",{}]],"20":[["▼",{"fg":3,"bold":true}],[" ",{}],["functions",{"fg":6,"bold":true}],["         ",{}],["|",{"inverse":true}],[" 79 ",{"fg":3,"bold":true}],["                                                                                                                ",{}],["|",{"inverse":true}],[" 21 ",{"fg":3,"bold":true}],["  .cshrc          ",{}]],"21":[["    main(int argc, c",{"underline":true}],["|",{"inverse":true}],[" 80 ",{"fg":3,"bold":true}],["                                                *g:calendar_mark*                                               ",{}],["|",{"inverse":true}],[" 22 ",{"fg":3,"bold":true}],["  .dmrc           ",{}]],"22":[["~                   ",{"fg":4,"bold":true}],["|",{"inverse":true}],[" 81 ",{"fg":3,"bold":true}],["Place a '*' or '+' mark after the day.  Acceptable values are 'left',                                           ",{}],["|",{"inverse":true}],[" 23 ",{"fg":3,"bold":true}],["  .esd_auth       ",{}]],"23":[["~                   ",{"fg":4,"bold":true}],["|",{"inverse":true}],[" 82 ",{"fg":3,"bold":true}],["'left-fit', and 'right': >                                                                                      ",{}],["|",{"inverse":true}],[" 24 ",{"fg":3,"bold":true}],["  .gtkrc-2.0      ",{}]],"24":[["~                   ",{"fg":4,"bold":true}],["|",{"inverse":true}],[" 83 ",{"fg":3,"bold":true}],["  let g:calendar_mark = 'right'                                                                                 ",{}],["|",{"inverse":true}],[" 25 ",{"fg":3,"bold":true}],["  .gtkrc-2.0-kde4 ",{}]],"25":[["~                   ",{"fg":4,"bold":true}],["|",{"inverse":true}],[" 84 ",{"fg":3,"bold":true}],["<                                                                                                               ",{}],["|",{"inverse":true}],[" 26 ",{"fg":3,"bold":true}],["  .lesshst        ",{}]],"26":[["~                   ",{"fg":4,"bold":true}],["|",{"inverse":true}],[" 85 ",{"fg":3,"bold":true}],["                                                                                                                ",{}],["|",{"inverse":true}],[" 27 ",{"fg":3,"bold":true}],["  .tcshrc         ",{}]],"27":[["~                   ",{"fg":4,"bold":true}],["|",{"inverse":true}],[" 86 ",{"fg":3,"bold":true}],["                                                *g:calendar_diary*                                              ",{}],["|",{"inverse":true}],[" 28 ",{"fg":3,"bold":true}],["  .viminfo        ",{}]],"28":[["~                   ",{"fg":4,"bold":true}],["|",{"inverse":true}],[" 87 ",{"fg":3,"bold":true}],["Specify the directory for the diary files.  The default value is $HOME/diary.                                   ",{}],["|",{"inverse":true}],[" 29 ",{"fg":3,"bold":true}],["  .vimrc          ",{}]],"29":[["~                   ",{"fg":4,"bold":true}],["|",{"inverse":true}],[" 88 ",{"fg":3,"bold":true}],["  let g:calendar_diary=$HOME.'/.vim/diary'                                                                      ",{}],["|",{"inverse":true}],[" 30 ",{"fg":3,"bold":true}],["  .xsession-errors",{}]],"30":[["~                   ",{"fg":4,"bold":true}],["|",{"inverse":true}],[" 89 ",{"fg":3,"bold":true}],["                                                                                                                ",{}],["|",{"inverse":true}],[" 31 ",{"fg":3,"bold":true}],["  anaconda-ks.cfg ",{}]],"31":[["~                   ",{"fg":4,"bold":true}],["|",{"inverse":true}],[" 90 ",{"fg":3,"bold":true}],["                                                                                                                ",{}],["|",{"inverse":true}],[" 32 ",{"fg":3,"bold":true}],["  initial-setup-ks",{}]],"32":[["~                   ",{"fg":4,"bold":true}],["|",{"inverse":true}],[" 91 ",{"fg":3,"bold":true}],["                                                *g:calendar_navi*                                               ",{}],["|",{"inverse":true}],[" 33 ",{"fg":3,"bold":true}],["  test.c          ",{}]],"33":[["~                   ",{"fg":4,"bold":true}],["|",{"inverse":true}],[" 92 ",{"fg":3,"bold":true}],["To control the calendar navigator, set this variable.  Acceptable values are                                    ",{}],["|",{"inverse":true}],[" 34 ",{"fg":3,"bold":true}],["  test.cpp        ",{}]],"34":[["~                   ",{"fg":4,"bold":true}],["|",{"inverse":true}],[" 93 ",{"fg":3,"bold":true}],["'top', 'bottom', or 'both'. >                                                                                   ",{}],["|",{"inverse":true}],[" 35 ",{"fg":3,"bold":true}],["  .test.cpp.swp   ",{}]],"35":[["~                   ",{"fg":4,"bold":true}],["|",{"inverse":true}],[" 94 ",{"fg":3,"bold":true}],["  let g:calendar_navi = ''                                                                                      ",{}],["|",{"inverse":true}],["~                     ",{"fg":4,"bold":true}]],"36":[["~                   ",{"fg":4,"bold":true}],["|",{"inverse":true}],[" 95 ",{"fg":3,"bold":true}],["<                                                                                                               ",{}],["|",{"inverse":true}],["~                     ",{"fg":4,"bold":true}]],"37":[["~                   ",{"fg":4,"bold":true}],["|",{"inverse":true}],[" 96 ",{"fg":3,"bold":true}],["                                                                                                                ",{}],["|",{"inverse":true}],["~                     ",{"fg":4,"bold":true}]],"38":[["~                   ",{"fg":4,"bold":true}],["|",{"inverse":true}],[" 97 ",{"fg":3,"bold":true}],["                                                *g:calendar_navi_label*                                         ",{}],["|",{"inverse":true}],["~                     ",{"fg":4,"bold":true}]],"39":[["~                   ",{"fg":4,"bold":true}],["|",{"inverse":true}],[" 98 ",{"fg":3,"bold":true}],["To set the labels for the calendar navigator, for example to change the                                         ",{}],["|",{"inverse":true}],["~                     ",{"fg":4,"bold":true}]],"40":[["~                   ",{"fg":4,"bold":true}],["|",{"inverse":true}],[" 99 ",{"fg":3,"bold":true}],["language, use this variable.  Entries should be comma separated. >                                              ",{}],["|",{"inverse":true}],["~                     ",{"fg":4,"bold":true}]],"41":[["~                   ",{"fg":4,"bold":true}],["|",{"inverse":true}],["100 ",{"fg":3,"bold":true}],["  let g:calendar_navi_label = 'Prev,Today,Next'                                                                 ",{}],["|",{"inverse":true}],["~                     ",{"fg":4,"bold":true}]],"42":[["~                   ",{"fg":4,"bold":true}],["|",{"inverse":true}],["101 ",{"fg":3,"bold":true}],["<                                                                                                               ",{}],["|",{"inverse":true}],["~                     ",{"fg":4,"bold":true}]],"43":[["~                   ",{"fg":4,"bold":true}],["|",{"inverse":true}],["102 ",{"fg":3,"bold":true}],["                                                                                                                ",{}],["|",{"inverse":true}],["~                     ",{"fg":4,"bold":true}]],"44":[["~                   ",{"fg":4,"bold":true}],["|",{"inverse":true}],["103 ",{"fg":3,"bold":true}],["                                                *g:calendar_erafmt*                                             ",{}],["|",{"inverse":true}],["~                     ",{"fg":4,"bold":true}]],"45":[["~                   ",{"fg":4,"bold":true}],["|",{"inverse":true}],["104 ",{"fg":3,"bold":true}],["To change the dating system, set the following variable.  Include the name of                                   ",{"underline":true}],["|",{"inverse":true}],["~                     ",{"fg":4,"bold":true}]],"46":[["[Name] test.cpp      ",{"inverse":true}],[" NORMAL ",{"bold":true}],[" ",{}],["calendar.txt ",{"bold":true}],["                                                        unix │ utf-8 │ text │  47% ",{}],[" LN 104",{"bold":true}],[":1  ",{}],[" ",{"bold":true,"inverse":true}],[" ~/…/calendar-vim/doc>",{"bold":true}]]},"cursor":{"y":45,"visible":true}}],[0.04184,{"lines":{"0":[["\" Press <F1> for hel",{"fg":6,"bold":true}],["|",{"inverse":true}],[" 60 ",{"fg":3,"bold":true}],["  let g:calendar_focus_today = 1                                                                                ",{}],["|",{"inverse":true}],["  1 ",{"fg":3,"bold":true}],["\" Press ? for help",{"fg":5,"bold":true}]],"1":[["                    ",{}],["|",{"inverse":true}],[" 61 ",{"fg":3,"bold":true}],["<                                                                                                               ",{}],["|",{"inverse":true}],["  2 ",{"fg":3,"bold":true}],["                  ",{}]],"2":[["▼",{"fg":3,"bold":true}],[" First",{"fg":5,"bold":true}],[" : ",{}],["struct",{"fg":2,"bold":true}],["    ",{}],["|",{"inverse":true}],[" 62 ",{"fg":3,"bold":true}],["                                                                                                                ",{}],["|",{"inverse":true}],["  3 ",{"fg":3,"bold":true}],[".. (up a dir)",{"fg":6,"bold":true}],["     ",{}]],"3":[["    [prototypes]",{"fg":6,"bold":true}],["    ",{}],["|",{"inverse":true}],[" 63 ",{"fg":3,"bold":true}],["                                                *g:calendar_keys*                                               ",{}],["|",{"inverse":true}],["  4 /root/",{"fg":3,"bold":true}],["            ",{}]],"4":[["   ",{}],["+",{"fg":2,"bold":true}],["FirstRun(void)  ",{}],["|",{"inverse":true}],[" 64 ",{"fg":3,"bold":true}],["To change the key bindings in the calendar window, add entries to this                                          ",{}],["|",{"inverse":true}],["  5 ",{"fg":3,"bold":true}],["▸ .asciinema/",{"fg":6,"bold":true}],["     ",{}]],"5":[["   ",{}],["+",{"fg":2,"bold":true}],["FirstRun2(void) ",{}],["|",{"inverse":true}],[" 65 ",{"fg":3,"bold":true}],["dictionary.   Possible keys, the action bound to the keycode given in the                                       ",{}],["|",{"inverse":true}],["  6 ",{"fg":3,"bold":true}],["▸ .cache/",{"fg":6,"bold":true}],["         ",{}]],"6":[["                    ",{}],["|",{"inverse":true}],[" 66 ",{"fg":3,"bold":true}],["respective value for this key and the default binding are listed below.                                         ",{}],["|",{"inverse":true}],["  7 ",{"fg":3,"bold":true}],["▸ .config/",{"fg":6,"bold":true}],["        ",{}]],"7":[["▼",{"fg":3,"bold":true}],[" Last",{"fg":5,"bold":true}],[" : ",{}],["struct",{"fg":2,"bold":true}],["     ",{}],["|",{"inverse":true}],[" 67 ",{"fg":3,"bold":true}],["respective value for this key and the default binding are listed below.                                         ",{}],["|",{"inverse":true}],["  8 ",{"fg":3,"bold":true}],["▸ .dbus/",{"fg":6,"bold":true}],["          ",{}]]},"cursor":{"y":7,"visible":false}}],[0.016663,{"lines":{"0":[["\" Press <F1> for hel",{"fg":6,"bold":true}],["|",{"inverse":true}],[" 61 ",{"fg":3,"bold":true}],["<                                                                                                               ",{}],["|",{"inverse":true}],["  1 ",{"fg":3,"bold":true}],["\" Press ? for help",{"fg":5,"bold":true}]],"1":[["                    ",{}],["|",{"inverse":true}],[" 62 ",{"fg":3,"bold":true}],["                                                                                                                ",{}],["|",{"inverse":true}],["  2 ",{"fg":3,"bold":true}],["                  ",{}]],"2":[["▼",{"fg":3,"bold":true}],[" First",{"fg":5,"bold":true}],[" : ",{}],["struct",{"fg":2,"bold":true}],["    ",{}],["|",{"inverse":true}],[" 63 ",{"fg":3,"bold":true}],["                                                *g:calendar_keys*                                               ",{}],["|",{"inverse":true}],["  3 ",{"fg":3,"bold":true}],[".. (up a dir)",{"fg":6,"bold":true}],["     ",{}]],"3":[["    [prototypes]",{"fg":6,"bold":true}],["    ",{}],["|",{"inverse":true}],[" 64 ",{"fg":3,"bold":true}],["To change the key bindings in the calendar window, add entries to this                                          ",{}],["|",{"inverse":true}],["  4 /root/",{"fg":3,"bold":true}],["            ",{}]],"4":[["   ",{}],["+",{"fg":2,"bold":true}],["FirstRun(void)  ",{}],["|",{"inverse":true}],[" 65 ",{"fg":3,"bold":true}],["dictionary.   Possible keys, the action bound to the keycode given in the                                       ",{}],["|",{"inverse":true}],["  5 ",{"fg":3,"bold":true}],["▸ .asciinema/",{"fg":6,"bold":true}],["     ",{}]],"5":[["   ",{}],["+",{"fg":2,"bold":true}],["FirstRun2(void) ",{}],["|",{"inverse":true}],[" 66 ",{"fg":3,"bold":true}],["respective value for this key and the default binding are listed below.                                         ",{}],["|",{"inverse":true}],["  6 ",{"fg":3,"bold":true}],["▸ .cache/",{"fg":6,"bold":true}],["         ",{}]],"6":[["                    ",{}],["|",{"inverse":true}],[" 67 ",{"fg":3,"bold":true}],["'close'                     Closes calendar window.             'q'                                             ",{}],["|",{"inverse":true}],["  7 ",{"fg":3,"bold":true}],["▸ .config/",{"fg":6,"bold":true}],["        ",{}]],"7":[["▼",{"fg":3,"bold":true}],[" Last",{"fg":5,"bold":true}],[" : ",{}],["struct",{"fg":2,"bold":true}],["     ",{}],["|",{"inverse":true}],[" 68 ",{"fg":3,"bold":true}],["'do_action'                 Exoses calendar window.             'q'                                             ",{}],["|",{"inverse":true}],["  8 ",{"fg":3,"bold":true}],["▸ .dbus/",{"fg":6,"bold":true}],["          ",{}]],"8":[["    [functions]",{"fg":6,"bold":true}],["     ",{}],["|",{"inverse":true}],[" 68 ",{"fg":3,"bold":true}],["'do_action'                 Executes |calendar_action|.           '<CR>'                                        ",{}],["|",{"inverse":true}],["  9 ",{"fg":3,"bold":true}],["▸ .gnupg/",{"fg":6,"bold":true}],["         ",{}]],"9":[["   ",{}],["+",{"fg":2,"bold":true}],["FirstRun(void)  ",{}],["|",{"inverse":true}],[" 69 ",{"fg":3,"bold":true}],["'goto_today'                Executes |calendar_today|.            't'                                           ",{}],["|",{"inverse":true}],[" 10 ",{"fg":3,"bold":true}],["▸ .kde/",{"fg":6,"bold":true}],["           ",{}]],"10":[["   ",{}],["+",{"fg":2,"bold":true}],["FirstRun2(void) ",{}],["|",{"inverse":true}],[" 70 ",{"fg":3,"bold":true}],["'show_help'                 Displays a short help message.      '?'                                             ",{}],["|",{"inverse":true}],[" 11 ",{"fg":3,"bold":true}],["▸ .local/",{"fg":6,"bold":true}],["         ",{}]],"11":[["   ",{}],["+",{"fg":2,"bold":true}],["~Last()         ",{}],["|",{"inverse":true}],[" 71 ",{"fg":3,"bold":true}],["'redisplay'                 Redraws calendar window.            'r'                                             ",{}],["|",{"inverse":true}],[" 12 ",{"fg":3,"bold":true}],["▸ .pki/",{"fg":6,"bold":true}],["           ",{}]],"12":[["   ",{}],["+",{"fg":2,"bold":true}],["SecondRun(void) ",{}],["|",{"inverse":true}],[" 72 ",{"fg":3,"bold":true}],["'goto_next_month'           Jumps to the next month.            '<Right>'                                       ",{}],["|",{"inverse":true}],[" 13 ",{"fg":3,"bold":true}],["▸ .ssh/",{"fg":6,"bold":true}],["           ",{}]],"13":[["   ",{}],["+",{"fg":2,"bold":true}],["SecondRun2(void)",{}],["|",{"inverse":true}],[" 73 ",{"fg":3,"bold":true}],["'goto_prev_month'           Jumps to the previous month.        '<Left>'                                        ",{}],["|",{"inverse":true}],[" 14 ",{"fg":3,"bold":true}],["▸ .vim/",{"fg":6,"bold":true}],["           ",{}]],"14":[["                    ",{}],["|",{"inverse":true}],[" 74 ",{"fg":3,"bold":true}],["'goto_next_year'            Jumps to the next year.             '<Up>'                                          ",{}],["|",{"inverse":true}],[" 15 ",{"fg":3,"bold":true}],["▸ diary/",{"fg":6,"bold":true}],["          ",{}]],"15":[["▼",{"fg":3,"bold":true}],[" Second",{"fg":5,"bold":true}],[" : ",{}],["struct",{"fg":2,"bold":true}],["   ",{}],["|",{"inverse":true}],[" 75 ",{"fg":3,"bold":true}],["'goto_prev_year'            Jumps to the previous year.         '<Down>'                                        ",{}],["|",{"inverse":true}],[" 16 ",{"fg":3,"bold":true}],["▸ temp/",{"fg":6,"bold":true}],["           ",{}]],"16":[["    [prototypes]",{"fg":6,"bold":true}],["    ",{}],["|",{"inverse":true}],[" 76 ",{"fg":3,"bold":true}],["An example in your .vimrc might look like this: >                                                               ",{}],["|",{"inverse":true}],[" 17 ",{"fg":3,"bold":true}],["  .bash_history   ",{}]],"17":[["   ",{}],["+",{"fg":2,"bold":true}],["SecondRun(void) ",{}],["|",{"inverse":true}],[" 77 ",{"fg":3,"bold":true}],["  let g:calendar_keys = { 'goto_next_month': '<C-Right>', 'goto_prev_month': '<C-Left>'}                        ",{}],["|",{"inverse":true}],[" 18 ",{"fg":3,"bold":true}],["  .bash_logout    ",{}]],"18":[["   ",{}],["+",{"fg":2,"bold":true}],["SecondRun2(void)",{}],["|",{"inverse":true}],[" 78 ",{"fg":3,"bold":true}],["<                                                                                                               ",{}],["|",{"inverse":true}],[" 19 ",{"fg":3,"bold":true}],["  .bash_profile   ",{"underline":true}]],"19":[["                    ",{}],["|",{"inverse":true}],[" 79 ",{"fg":3,"bold":true}],["                                                                                                                ",{}],["|",{"inverse":true}],[" 20 ",{"fg":3,"bold":true}],["  .bashrc         ",{}]],"20":[["▼",{"fg":3,"bold":true}],[" ",{}],["functions",{"fg":6,"bold":true}],["         ",{}],["|",{"inverse":true}],[" 80 ",{"fg":3,"bold":true}],["                                                *g:calendar_mark*                                               ",{}],["|",{"inverse":true}],[" 21 ",{"fg":3,"bold":true}],["  .cshrc          ",{}]],"21":[["    main(int argc, c",{"underline":true}],["|",{"inverse":true}],[" 81 ",{"fg":3,"bold":true}],["Place a '*' or '+' mark after the day.  Acceptable values are 'left',                                           ",{}],["|",{"inverse":true}],[" 22 ",{"fg":3,"bold":true}],["  .dmrc           ",{}]],"22":[["~                   ",{"fg":4,"bold":true}],["|",{"inverse":true}],[" 82 ",{"fg":3,"bold":true}],["'left-fit', and 'right': >                                                                                      ",{}],["|",{"inverse":true}],[" 23 ",{"fg":3,"bold":true}],["  .esd_auth       ",{}]],"23":[["~                   ",{"fg":4,"bold":true}],["|",{"inverse":true}],[" 83 ",{"fg":3,"bold":true}],["  let g:calendar_mark = 'right'                                                                                 ",{}],["|",{"inverse":true}],[" 24 ",{"fg":3,"bold":true}],["  .gtkrc-2.0      ",{}]],"24":[["~                   ",{"fg":4,"bold":true}],["|",{"inverse":true}],[" 84 ",{"fg":3,"bold":true}],["<                                                                                                               ",{}],["|",{"inverse":true}],[" 25 ",{"fg":3,"bold":true}],["  .gtkrc-2.0-kde4 ",{}]],"25":[["~                   ",{"fg":4,"bold":true}],["|",{"inverse":true}],[" 85 ",{"fg":3,"bold":true}],["                                                                                                                ",{}],["|",{"inverse":true}],[" 26 ",{"fg":3,"bold":true}],["  .lesshst        ",{}]],"26":[["~                   ",{"fg":4,"bold":true}],["|",{"inverse":true}],[" 86 ",{"fg":3,"bold":true}],["                                                *g:calendar_diary*                                              ",{}],["|",{"inverse":true}],[" 27 ",{"fg":3,"bold":true}],["  .tcshrc         ",{}]],"27":[["~                   ",{"fg":4,"bold":true}],["|",{"inverse":true}],[" 87 ",{"fg":3,"bold":true}],["Specify the directory for the diary files.  The default value is $HOME/diary.                                   ",{}],["|",{"inverse":true}],[" 28 ",{"fg":3,"bold":true}],["  .viminfo        ",{}]],"28":[["~                   ",{"fg":4,"bold":true}],["|",{"inverse":true}],[" 88 ",{"fg":3,"bold":true}],["  let g:calendar_diary=$HOME.'/.vim/diary'                                                                      ",{}],["|",{"inverse":true}],[" 29 ",{"fg":3,"bold":true}],["  .vimrc          ",{}]],"29":[["~                   ",{"fg":4,"bold":true}],["|",{"inverse":true}],[" 89 ",{"fg":3,"bold":true}],["                                                                                                                ",{}],["|",{"inverse":true}],[" 30 ",{"fg":3,"bold":true}],["  .xsession-errors",{}]],"30":[["~                   ",{"fg":4,"bold":true}],["|",{"inverse":true}],[" 90 ",{"fg":3,"bold":true}],["                                                                                                                ",{}],["|",{"inverse":true}],[" 31 ",{"fg":3,"bold":true}],["  anaconda-ks.cfg ",{}]],"31":[["~                   ",{"fg":4,"bold":true}],["|",{"inverse":true}],[" 91 ",{"fg":3,"bold":true}],["                                                *g:calendar_navi*                                               ",{}],["|",{"inverse":true}],[" 32 ",{"fg":3,"bold":true}],["  initial-setup-ks",{}]],"32":[["~                   ",{"fg":4,"bold":true}],["|",{"inverse":true}],[" 92 ",{"fg":3,"bold":true}],["To control the calendar navigator, set this variable.  Acceptable values are                                    ",{}],["|",{"inverse":true}],[" 33 ",{"fg":3,"bold":true}],["  test.c          ",{}]],"33":[["~                   ",{"fg":4,"bold":true}],["|",{"inverse":true}],[" 93 ",{"fg":3,"bold":true}],["'top', 'bottom', or 'both'. >                                                                                   ",{}],["|",{"inverse":true}],[" 34 ",{"fg":3,"bold":true}],["  test.cpp        ",{}]],"34":[["~                   ",{"fg":4,"bold":true}],["|",{"inverse":true}],[" 94 ",{"fg":3,"bold":true}],["  let g:calendar_navi = ''                                                                                      ",{}],["|",{"inverse":true}],[" 35 ",{"fg":3,"bold":true}],["  .test.cpp.swp   ",{}]],"35":[["~                   ",{"fg":4,"bold":true}],["|",{"inverse":true}],[" 95 ",{"fg":3,"bold":true}],["<                                                                                                               ",{}],["|",{"inverse":true}],["~                     ",{"fg":4,"bold":true}]],"36":[["~                   ",{"fg":4,"bold":true}],["|",{"inverse":true}],[" 96 ",{"fg":3,"bold":true}],["                                                                                                                ",{}],["|",{"inverse":true}],["~                     ",{"fg":4,"bold":true}]],"37":[["~                   ",{"fg":4,"bold":true}],["|",{"inverse":true}],[" 97 ",{"fg":3,"bold":true}],["                                                *g:calendar_navi_label*                                         ",{}],["|",{"inverse":true}],["~                     ",{"fg":4,"bold":true}]],"38":[["~                   ",{"fg":4,"bold":true}],["|",{"inverse":true}],[" 98 ",{"fg":3,"bold":true}],["To set the labels for the calendar navigator, for example to change the                                         ",{}],["|",{"inverse":true}],["~                     ",{"fg":4,"bold":true}]],"39":[["~                   ",{"fg":4,"bold":true}],["|",{"inverse":true}],[" 99 ",{"fg":3,"bold":true}],["language, use this variable.  Entries should be comma separated. >                                              ",{}],["|",{"inverse":true}],["~                     ",{"fg":4,"bold":true}]],"40":[["~                   ",{"fg":4,"bold":true}],["|",{"inverse":true}],["100 ",{"fg":3,"bold":true}],["  let g:calendar_navi_label = 'Prev,Today,Next'                                                                 ",{}],["|",{"inverse":true}],["~                     ",{"fg":4,"bold":true}]],"41":[["~                   ",{"fg":4,"bold":true}],["|",{"inverse":true}],["101 ",{"fg":3,"bold":true}],["<                                                                                                               ",{}],["|",{"inverse":true}],["~                     ",{"fg":4,"bold":true}]],"42":[["~                   ",{"fg":4,"bold":true}],["|",{"inverse":true}],["102 ",{"fg":3,"bold":true}],["                                                                                                                ",{}],["|",{"inverse":true}],["~                     ",{"fg":4,"bold":true}]],"43":[["~                   ",{"fg":4,"bold":true}],["|",{"inverse":true}],["103 ",{"fg":3,"bold":true}],["                                                *g:calendar_erafmt*                                             ",{}],["|",{"inverse":true}],["~                     ",{"fg":4,"bold":true}]],"44":[["~                   ",{"fg":4,"bold":true}],["|",{"inverse":true}],["104 ",{"fg":3,"bold":true}],["To change the dating system, set the following variable.  Include the name of                                   ",{}],["|",{"inverse":true}],["~                     ",{"fg":4,"bold":true}]],"45":[["~                   ",{"fg":4,"bold":true}],["|",{"inverse":true}],["105 ",{"fg":3,"bold":true}],["the dating system and its offset from the Georgian calendar (A.D.).  For                                        ",{"underline":true}],["|",{"inverse":true}],["~                     ",{"fg":4,"bold":true}]],"46":[["[Name] test.cpp      ",{"inverse":true}],[" NORMAL ",{"bold":true}],[" ",{}],["calendar.txt ",{"bold":true}],["                                                        unix │ utf-8 │ text │  47% ",{}],[" LN 105",{"bold":true}],[":1  ",{}],[" ",{"bold":true,"inverse":true}],[" ~/…/calendar-vim/doc>",{"bold":true}]]},"cursor":{"x":55}}],[0.009091,{"lines":{"7":[["▼",{"fg":3,"bold":true}],[" Last",{"fg":5,"bold":true}],[" : ",{}],["struct",{"fg":2,"bold":true}],["     ",{}],["|",{"inverse":true}],[" 68 ",{"fg":3,"bold":true}],["'do_action'                 Executes |calendar_action|.           '<CR>'                                        ",{}],["|",{"inverse":true}],["  8 ",{"fg":3,"bold":true}],["▸ .dbus/",{"fg":6,"bold":true}],["          ",{}]],"8":[["    [functions]",{"fg":6,"bold":true}],["     ",{}],["|",{"inverse":true}],[" 69 ",{"fg":3,"bold":true}],["'goto_today'                Executes |calendar_today|.            't'                                           ",{}],["|",{"inverse":true}],["  9 ",{"fg":3,"bold":true}],["▸ .gnupg/",{"fg":6,"bold":true}],["         ",{}]],"9":[["   ",{}],["+",{"fg":2,"bold":true}],["FirstRun(void)  ",{}],["|",{"inverse":true}],[" 70 ",{"fg":3,"bold":true}],["'show_help'                 Displays a short help message.      '?'                                             ",{}],["|",{"inverse":true}],[" 10 ",{"fg":3,"bold":true}],["▸ .kde/",{"fg":6,"bold":true}],["           ",{}]],"10":[["   ",{}],["+",{"fg":2,"bold":true}],["FirstRun2(void) ",{}],["|",{"inverse":true}],[" 71 ",{"fg":3,"bold":true}],["'redisplay'                 Redraws calendar window.            'r'                                             ",{}],["|",{"inverse":true}],[" 11 ",{"fg":3,"bold":true}],["▸ .local/",{"fg":6,"bold":true}],["         ",{}]],"11":[["   ",{}],["+",{"fg":2,"bold":true}],["~Last()         ",{}],["|",{"inverse":true}],[" 72 ",{"fg":3,"bold":true}],["'goto_next_month'           Jumps to the next month.            '<Right>'                                       ",{}],["|",{"inverse":true}],[" 12 ",{"fg":3,"bold":true}],["▸ .pki/",{"fg":6,"bold":true}],["           ",{}]],"12":[["   ",{}],["+",{"fg":2,"bold":true}],["SecondRun(void) ",{}],["|",{"inverse":true}],[" 73 ",{"fg":3,"bold":true}],["'goto_prev_month'           Jumps to the previous month.        '<Left>'                                        ",{}],["|",{"inverse":true}],[" 13 ",{"fg":3,"bold":true}],["▸ .ssh/",{"fg":6,"bold":true}],["           ",{}]],"13":[["   ",{}],["+",{"fg":2,"bold":true}],["SecondRun2(void)",{}],["|",{"inverse":true}],[" 74 ",{"fg":3,"bold":true}],["'goto_next_year'            Jumps to the next year.             '<Up>'                                          ",{}],["|",{"inverse":true}],[" 14 ",{"fg":3,"bold":true}],["▸ .vim/",{"fg":6,"bold":true}],["           ",{}]],"14":[["                    ",{}],["|",{"inverse":true}],[" 75 ",{"fg":3,"bold":true}],["'goto_prev_year'            Jumps to the previous year.         '<Down>'                                        ",{}],["|",{"inverse":true}],[" 15 ",{"fg":3,"bold":true}],["▸ diary/",{"fg":6,"bold":true}],["          ",{}]],"15":[["▼",{"fg":3,"bold":true}],[" Second",{"fg":5,"bold":true}],[" : ",{}],["struct",{"fg":2,"bold":true}],["   ",{}],["|",{"inverse":true}],[" 76 ",{"fg":3,"bold":true}],["An example in your .vimrc might look like this: >                                                               ",{}],["|",{"inverse":true}],[" 16 ",{"fg":3,"bold":true}],["▸ temp/",{"fg":6,"bold":true}],["           ",{}]],"16":[["    [prototypes]",{"fg":6,"bold":true}],["    ",{}],["|",{"inverse":true}],[" 77 ",{"fg":3,"bold":true}],["  let g:calendar_keys = { 'goto_next_month': '<C-Right>', 'goto_prev_month': '<C-Left>'}                        ",{}],["|",{"inverse":true}],[" 17 ",{"fg":3,"bold":true}],["  .bash_history   ",{}]],"17":[["   ",{}],["+",{"fg":2,"bold":true}],["SecondRun(void) ",{}],["|",{"inverse":true}],[" 78 ",{"fg":3,"bold":true}],["<                                                                                                               ",{}],["|",{"inverse":true}],[" 18 ",{"fg":3,"bold":true}],["  .bash_logout    ",{}]],"18":[["   ",{}],["+",{"fg":2,"bold":true}],["SecondRun2(void)",{}],["|",{"inverse":true}],[" 79 ",{"fg":3,"bold":true}],["                                                                                                                ",{}],["|",{"inverse":true}],[" 19 ",{"fg":3,"bold":true}],["  .bash_profile   ",{"underline":true}]],"19":[["                    ",{}],["|",{"inverse":true}],[" 80 ",{"fg":3,"bold":true}],["                                                *g:calendar_mark*                                               ",{}],["|",{"inverse":true}],[" 20 ",{"fg":3,"bold":true}],["  .bashrc         ",{}]],"20":[["▼",{"fg":3,"bold":true}],[" ",{}],["functions",{"fg":6,"bold":true}],["         ",{}],["|",{"inverse":true}],[" 81 ",{"fg":3,"bold":true}],["Place a '*' or '+' mark after the day.  Acceptable values are 'left',                                           ",{}],["|",{"inverse":true}],[" 21 ",{"fg":3,"bold":true}],["  .cshrc          ",{}]],"21":[["    main(int argc, c",{"underline":true}],["|",{"inverse":true}],[" 82 ",{"fg":3,"bold":true}],["'left-fit', and 'right': >                                                                                      ",{}],["|",{"inverse":true}],[" 22 ",{"fg":3,"bold":true}],["  .dmrc           ",{}]],"22":[["~                   ",{"fg":4,"bold":true}],["|",{"inverse":true}],[" 83 ",{"fg":3,"bold":true}],["  let g:calendar_mark = 'right'                                                                                 ",{}],["|",{"inverse":true}],[" 23 ",{"fg":3,"bold":true}],["  .esd_auth       ",{}]],"23":[["~                   ",{"fg":4,"bold":true}],["|",{"inverse":true}],[" 84 ",{"fg":3,"bold":true}],["<                                                                                                               ",{}],["|",{"inverse":true}],[" 24 ",{"fg":3,"bold":true}],["  .gtkrc-2.0      ",{}]],"24":[["~                   ",{"fg":4,"bold":true}],["|",{"inverse":true}],[" 85 ",{"fg":3,"bold":true}],["                                                                                                                ",{}],["|",{"inverse":true}],[" 25 ",{"fg":3,"bold":true}],["  .gtkrc-2.0-kde4 ",{}]],"25":[["~                   ",{"fg":4,"bold":true}],["|",{"inverse":true}],[" 86 ",{"fg":3,"bold":true}],["                                                *g:calendar_diary*                                              ",{}],["|",{"inverse":true}],[" 26 ",{"fg":3,"bold":true}],["  .lesshst        ",{}]],"26":[["~                   ",{"fg":4,"bold":true}],["|",{"inverse":true}],[" 87 ",{"fg":3,"bold":true}],["Specify the directory for the diary files.  The default value is $HOME/diary.                                   ",{}],["|",{"inverse":true}],[" 27 ",{"fg":3,"bold":true}],["  .tcshrc         ",{}]],"27":[["~                   ",{"fg":4,"bold":true}],["|",{"inverse":true}],[" 88 ",{"fg":3,"bold":true}],["  let g:calendar_diary=$HOME.'/.vim/diary'                                                                      ",{}],["|",{"inverse":true}],[" 28 ",{"fg":3,"bold":true}],["  .viminfo        ",{}]],"28":[["~                   ",{"fg":4,"bold":true}],["|",{"inverse":true}],[" 89 ",{"fg":3,"bold":true}],["                                                                                                                ",{}],["|",{"inverse":true}],[" 29 ",{"fg":3,"bold":true}],["  .vimrc          ",{}]],"29":[["~                   ",{"fg":4,"bold":true}],["|",{"inverse":true}],[" 90 ",{"fg":3,"bold":true}],["                                                                                                                ",{}],["|",{"inverse":true}],[" 30 ",{"fg":3,"bold":true}],["  .xsession-errors",{}]],"30":[["~                   ",{"fg":4,"bold":true}],["|",{"inverse":true}],[" 91 ",{"fg":3,"bold":true}],["                                                *g:calendar_navi*                                               ",{}],["|",{"inverse":true}],[" 31 ",{"fg":3,"bold":true}],["  anaconda-ks.cfg ",{}]],"31":[["~                   ",{"fg":4,"bold":true}],["|",{"inverse":true}],[" 92 ",{"fg":3,"bold":true}],["To control the calendar navigator, set this variable.  Acceptable values are                                    ",{}],["|",{"inverse":true}],[" 32 ",{"fg":3,"bold":true}],["  initial-setup-ks",{}]],"32":[["~                   ",{"fg":4,"bold":true}],["|",{"inverse":true}],[" 93 ",{"fg":3,"bold":true}],["'top', 'bottom', or 'both'. >                                                                                   ",{}],["|",{"inverse":true}],[" 33 ",{"fg":3,"bold":true}],["  test.c          ",{}]],"33":[["~                   ",{"fg":4,"bold":true}],["|",{"inverse":true}],[" 94 ",{"fg":3,"bold":true}],["  let g:calendar_navi = ''                                                                                      ",{}],["|",{"inverse":true}],[" 34 ",{"fg":3,"bold":true}],["  test.cpp        ",{}]],"34":[["~                   ",{"fg":4,"bold":true}],["|",{"inverse":true}],[" 95 ",{"fg":3,"bold":true}],["<                                                                                                               ",{}],["|",{"inverse":true}],[" 35 ",{"fg":3,"bold":true}],["  .test.cpp.swp   ",{}]],"35":[["~                   ",{"fg":4,"bold":true}],["|",{"inverse":true}],[" 96 ",{"fg":3,"bold":true}],["                                                                                                                ",{}],["|",{"inverse":true}],["~                     ",{"fg":4,"bold":true}]],"36":[["~                   ",{"fg":4,"bold":true}],["|",{"inverse":true}],[" 97 ",{"fg":3,"bold":true}],["                                                *g:calendar_navi_label*                                         ",{}],["|",{"inverse":true}],["~                     ",{"fg":4,"bold":true}]],"37":[["~                   ",{"fg":4,"bold":true}],["|",{"inverse":true}],[" 98 ",{"fg":3,"bold":true}],["To set the labels for the calendar navigator, for example to change the                                         ",{}],["|",{"inverse":true}],["~                     ",{"fg":4,"bold":true}]],"38":[["~                   ",{"fg":4,"bold":true}],["|",{"inverse":true}],[" 99 ",{"fg":3,"bold":true}],["language, use this variable.  Entries should be comma separated. >                                              ",{}],["|",{"inverse":true}],["~                     ",{"fg":4,"bold":true}]],"39":[["~                   ",{"fg":4,"bold":true}],["|",{"inverse":true}],["100 ",{"fg":3,"bold":true}],["  let g:calendar_navi_label = 'Prev,Today,Next'                                                                 ",{}],["|",{"inverse":true}],["~                     ",{"fg":4,"bold":true}]],"40":[["~                   ",{"fg":4,"bold":true}],["|",{"inverse":true}],["101 ",{"fg":3,"bold":true}],["<                                                                                                               ",{}],["|",{"inverse":true}],["~                     ",{"fg":4,"bold":true}]],"41":[["~                   ",{"fg":4,"bold":true}],["|",{"inverse":true}],["102 ",{"fg":3,"bold":true}],["                                                                                                                ",{}],["|",{"inverse":true}],["~                     ",{"fg":4,"bold":true}]],"42":[["~                   ",{"fg":4,"bold":true}],["|",{"inverse":true}],["103 ",{"fg":3,"bold":true}],["                                                *g:calendar_erafmt*                                             ",{}],["|",{"inverse":true}],["~                     ",{"fg":4,"bold":true}]],"43":[["~                   ",{"fg":4,"bold":true}],["|",{"inverse":true}],["104 ",{"fg":3,"bold":true}],["To change the dating system, set the following variable.  Include the name of                                   ",{}],["|",{"inverse":true}],["~                     ",{"fg":4,"bold":true}]],"44":[["~                   ",{"fg":4,"bold":true}],["|",{"inverse":true}],["105 ",{"fg":3,"bold":true}],["the dating system and its offset from the Georgian calendar (A.D.).  For                                        ",{}],["|",{"inverse":true}],["~                     ",{"fg":4,"bold":true}]],"45":[["~                   ",{"fg":4,"bold":true}],["|",{"inverse":true}],["106 ",{"fg":3,"bold":true}],["example, to use the current Japanese era (Heisei), you would set: >                                             ",{"underline":true}],["|",{"inverse":true}],["~                     ",{"fg":4,"bold":true}]],"46":[["[Name] test.cpp      ",{"inverse":true}],[" NORMAL ",{"bold":true}],[" ",{}],["calendar.txt ",{"bold":true}],["                                                        unix │ utf-8 │ text │  48% ",{}],[" LN 106",{"bold":true}],[":1  ",{}],[" ",{"bold":true,"inverse":true}],[" ~/…/calendar-vim/doc>",{"bold":true}]]},"cursor":{"x":25,"y":45,"visible":true}}],[0.030252,{"lines":{"0":[["\" Press <F1> for hel",{"fg":6,"bold":true}],["|",{"inverse":true}],[" 62 ",{"fg":3,"bold":true}],["                                                                                                                ",{}],["|",{"inverse":true}],["  1 ",{"fg":3,"bold":true}],["\" Press ? for help",{"fg":5,"bold":true}]],"1":[["                    ",{}],["|",{"inverse":true}],[" 63 ",{"fg":3,"bold":true}],["                                                *g:calendar_keys*                                               ",{}],["|",{"inverse":true}],["  2 ",{"fg":3,"bold":true}],["                  ",{}]],"2":[["▼",{"fg":3,"bold":true}],[" First",{"fg":5,"bold":true}],[" : ",{}],["struct",{"fg":2,"bold":true}],["    ",{}],["|",{"inverse":true}],[" 64 ",{"fg":3,"bold":true}],["To change the key bindings in the calendar window, add entries to this                                          ",{}],["|",{"inverse":true}],["  3 ",{"fg":3,"bold":true}],[".. (up a dir)",{"fg":6,"bold":true}],["     ",{}]],"3":[["    [prototypes]",{"fg":6,"bold":true}],["    ",{}],["|",{"inverse":true}],[" 65 ",{"fg":3,"bold":true}],["dictionary.   Possible keys, the action bound to the keycode given in the                                       ",{}],["|",{"inverse":true}],["  4 /root/",{"fg":3,"bold":true}],["            ",{}]],"4":[["   ",{}],["+",{"fg":2,"bold":true}],["FirstRun(void)  ",{}],["|",{"inverse":true}],[" 66 ",{"fg":3,"bold":true}],["respective value for this key and the default binding are listed below.                                         ",{}],["|",{"inverse":true}],["  5 ",{"fg":3,"bold":true}],["▸ .asciinema/",{"fg":6,"bold":true}],["     ",{}]],"5":[["   ",{}],["+",{"fg":2,"bold":true}],["FirstRun2(void) ",{}],["|",{"inverse":true}],[" 67 ",{"fg":3,"bold":true}],["'close'                     Closes calendar window.             'q'                                             ",{}],["|",{"inverse":true}],["  6 ",{"fg":3,"bold":true}],["▸ .cache/",{"fg":6,"bold":true}],["         ",{}]],"6":[["                    ",{}],["|",{"inverse":true}],[" 68 ",{"fg":3,"bold":true}],["'do_action'                 Executes |calendar_action|.           '<CR>'                                        ",{}],["|",{"inverse":true}],["  7 ",{"fg":3,"bold":true}],["▸ .config/",{"fg":6,"bold":true}],["        ",{}]],"7":[["▼",{"fg":3,"bold":true}],[" Last",{"fg":5,"bold":true}],[" : ",{}],["struct",{"fg":2,"bold":true}],["     ",{}],["|",{"inverse":true}],[" 69 ",{"fg":3,"bold":true}],["'do_action'                 Executes |calendar_action|.           '<CR>'                                        ",{}],["|",{"inverse":true}],["  8 ",{"fg":3,"bold":true}],["▸ .dbus/",{"fg":6,"bold":true}],["          ",{}]]},"cursor":{"y":7,"visible":false}}],[0.007625999999999999,{"lines":{"7":[["▼",{"fg":3,"bold":true}],[" Last",{"fg":5,"bold":true}],[" : ",{}],["struct",{"fg":2,"bold":true}],["     ",{}],["|",{"inverse":true}],[" 69 ",{"fg":3,"bold":true}],["'goto_today'                Executes |calendar_today|.            't'                                           ",{}],["|",{"inverse":true}],["  8 ",{"fg":3,"bold":true}],["▸ .dbus/",{"fg":6,"bold":true}],["          ",{}]],"8":[["    [functions]",{"fg":6,"bold":true}],["     ",{}],["|",{"inverse":true}],[" 70 ",{"fg":3,"bold":true}],["'show_help'                 Displays a short help message.      '?'                                             ",{}],["|",{"inverse":true}],["  9 ",{"fg":3,"bold":true}],["▸ .gnupg/",{"fg":6,"bold":true}],["         ",{}]],"9":[["   ",{}],["+",{"fg":2,"bold":true}],["FirstRun(void)  ",{}],["|",{"inverse":true}],[" 71 ",{"fg":3,"bold":true}],["'redisplay'                 Redraws calendar window.            'r'                                             ",{}],["|",{"inverse":true}],[" 10 ",{"fg":3,"bold":true}],["▸ .kde/",{"fg":6,"bold":true}],["           ",{}]],"10":[["   ",{}],["+",{"fg":2,"bold":true}],["FirstRun2(void) ",{}],["|",{"inverse":true}],[" 72 ",{"fg":3,"bold":true}],["'goto_next_month'           Jumps to the next month.            '<Right>'                                       ",{}],["|",{"inverse":true}],[" 11 ",{"fg":3,"bold":true}],["▸ .local/",{"fg":6,"bold":true}],["         ",{}]],"11":[["   ",{}],["+",{"fg":2,"bold":true}],["~Last()         ",{}],["|",{"inverse":true}],[" 73 ",{"fg":3,"bold":true}],["'goto_prev_month'           Jumps to the previous month.        '<Left>'                                        ",{}],["|",{"inverse":true}],[" 12 ",{"fg":3,"bold":true}],["▸ .pki/",{"fg":6,"bold":true}],["           ",{}]],"12":[["   ",{}],["+",{"fg":2,"bold":true}],["SecondRun(void) ",{}],["|",{"inverse":true}],[" 74 ",{"fg":3,"bold":true}],["'goto_next_year'            Jumps to the next year.             '<Up>'                                          ",{}],["|",{"inverse":true}],[" 13 ",{"fg":3,"bold":true}],["▸ .ssh/",{"fg":6,"bold":true}],["           ",{}]],"13":[["   ",{}],["+",{"fg":2,"bold":true}],["SecondRun2(void)",{}],["|",{"inverse":true}],[" 75 ",{"fg":3,"bold":true}],["'goto_prev_year'            Jumps to the previous year.         '<Down>'                                        ",{}],["|",{"inverse":true}],[" 14 ",{"fg":3,"bold":true}],["▸ .vim/",{"fg":6,"bold":true}],["           ",{}]],"14":[["                    ",{}],["|",{"inverse":true}],[" 76 ",{"fg":3,"bold":true}],["An example in your .vimrc might look like this: >                                                               ",{}],["|",{"inverse":true}],[" 15 ",{"fg":3,"bold":true}],["▸ diary/",{"fg":6,"bold":true}],["          ",{}]],"15":[["▼",{"fg":3,"bold":true}],[" Second",{"fg":5,"bold":true}],[" : ",{}],["struct",{"fg":2,"bold":true}],["   ",{}],["|",{"inverse":true}],[" 77 ",{"fg":3,"bold":true}],["  let g:calendar_keys = { 'goto_next_month': '<C-Right>', 'goto_prev_month': '<C-Left>'}                        ",{}],["|",{"inverse":true}],[" 16 ",{"fg":3,"bold":true}],["▸ temp/",{"fg":6,"bold":true}],["           ",{}]],"16":[["    [prototypes]",{"fg":6,"bold":true}],["    ",{}],["|",{"inverse":true}],[" 78 ",{"fg":3,"bold":true}],["<                                                                                                               ",{}],["|",{"inverse":true}],[" 17 ",{"fg":3,"bold":true}],["  .bash_history   ",{}]],"17":[["   ",{}],["+",{"fg":2,"bold":true}],["SecondRun(void) ",{}],["|",{"inverse":true}],[" 79 ",{"fg":3,"bold":true}],["                                                                                                                ",{}],["|",{"inverse":true}],[" 18 ",{"fg":3,"bold":true}],["  .bash_logout    ",{}]],"18":[["   ",{}],["+",{"fg":2,"bold":true}],["SecondRun2(void)",{}],["|",{"inverse":true}],[" 80 ",{"fg":3,"bold":true}],["                                                *g:calendar_mark*                                               ",{}],["|",{"inverse":true}],[" 19 ",{"fg":3,"bold":true}],["  .bash_profile   ",{"underline":true}]],"19":[["                    ",{}],["|",{"inverse":true}],[" 81 ",{"fg":3,"bold":true}],["Place a '*' or '+' mark after the day.  Acceptable values are 'left',                                           ",{}],["|",{"inverse":true}],[" 20 ",{"fg":3,"bold":true}],["  .bashrc         ",{}]],"20":[["▼",{"fg":3,"bold":true}],[" ",{}],["functions",{"fg":6,"bold":true}],["         ",{}],["|",{"inverse":true}],[" 82 ",{"fg":3,"bold":true}],["'left-fit', and 'right': >                                                                                      ",{}],["|",{"inverse":true}],[" 21 ",{"fg":3,"bold":true}],["  .cshrc          ",{}]],"21":[["    main(int argc, c",{"underline":true}],["|",{"inverse":true}],[" 83 ",{"fg":3,"bold":true}],["  let g:calendar_mark = 'right'                                                                                 ",{}],["|",{"inverse":true}],[" 22 ",{"fg":3,"bold":true}],["  .dmrc           ",{}]],"22":[["~                   ",{"fg":4,"bold":true}],["|",{"inverse":true}],[" 84 ",{"fg":3,"bold":true}],["<                                                                                                               ",{}],["|",{"inverse":true}],[" 23 ",{"fg":3,"bold":true}],["  .esd_auth       ",{}]],"23":[["~                   ",{"fg":4,"bold":true}],["|",{"inverse":true}],[" 85 ",{"fg":3,"bold":true}],["                                                                                                                ",{}],["|",{"inverse":true}],[" 24 ",{"fg":3,"bold":true}],["  .gtkrc-2.0      ",{}]],"24":[["~                   ",{"fg":4,"bold":true}],["|",{"inverse":true}],[" 86 ",{"fg":3,"bold":true}],["                                                *g:calendar_diary*                                              ",{}],["|",{"inverse":true}],[" 25 ",{"fg":3,"bold":true}],["  .gtkrc-2.0-kde4 ",{}]],"25":[["~                   ",{"fg":4,"bold":true}],["|",{"inverse":true}],[" 87 ",{"fg":3,"bold":true}],["Specify the directory for the diary files.  The default value is $HOME/diary.                                   ",{}],["|",{"inverse":true}],[" 26 ",{"fg":3,"bold":true}],["  .lesshst        ",{}]],"26":[["~                   ",{"fg":4,"bold":true}],["|",{"inverse":true}],[" 88 ",{"fg":3,"bold":true}],["  let g:calendar_diary=$HOME.'/.vim/diary'                                                                      ",{}],["|",{"inverse":true}],[" 27 ",{"fg":3,"bold":true}],["  .tcshrc         ",{}]],"27":[["~                   ",{"fg":4,"bold":true}],["|",{"inverse":true}],[" 89 ",{"fg":3,"bold":true}],["                                                                                                                ",{}],["|",{"inverse":true}],[" 28 ",{"fg":3,"bold":true}],["  .viminfo        ",{}]],"28":[["~                   ",{"fg":4,"bold":true}],["|",{"inverse":true}],[" 90 ",{"fg":3,"bold":true}],["                                                                                                                ",{}],["|",{"inverse":true}],[" 29 ",{"fg":3,"bold":true}],["  .vimrc          ",{}]],"29":[["~                   ",{"fg":4,"bold":true}],["|",{"inverse":true}],[" 91 ",{"fg":3,"bold":true}],["                                                *g:calendar_navi*                                               ",{}],["|",{"inverse":true}],[" 30 ",{"fg":3,"bold":true}],["  .xsession-errors",{}]],"30":[["~                   ",{"fg":4,"bold":true}],["|",{"inverse":true}],[" 92 ",{"fg":3,"bold":true}],["To control the calendar navigator, set this variable.  Acceptable values are                                    ",{}],["|",{"inverse":true}],[" 31 ",{"fg":3,"bold":true}],["  anaconda-ks.cfg ",{}]],"31":[["~                   ",{"fg":4,"bold":true}],["|",{"inverse":true}],[" 93 ",{"fg":3,"bold":true}],["'top', 'bottom', or 'both'. >                                                                                   ",{}],["|",{"inverse":true}],[" 32 ",{"fg":3,"bold":true}],["  initial-setup-ks",{}]],"32":[["~                   ",{"fg":4,"bold":true}],["|",{"inverse":true}],[" 94 ",{"fg":3,"bold":true}],["  let g:calendar_navi = ''                                                                                      ",{}],["|",{"inverse":true}],[" 33 ",{"fg":3,"bold":true}],["  test.c          ",{}]],"33":[["~                   ",{"fg":4,"bold":true}],["|",{"inverse":true}],[" 95 ",{"fg":3,"bold":true}],["<                                                                                                               ",{}],["|",{"inverse":true}],[" 34 ",{"fg":3,"bold":true}],["  test.cpp        ",{}]],"34":[["~                   ",{"fg":4,"bold":true}],["|",{"inverse":true}],[" 96 ",{"fg":3,"bold":true}],["                                                                                                                ",{}],["|",{"inverse":true}],[" 35 ",{"fg":3,"bold":true}],["  .test.cpp.swp   ",{}]],"35":[["~                   ",{"fg":4,"bold":true}],["|",{"inverse":true}],[" 97 ",{"fg":3,"bold":true}],["                                                *g:calendar_navi_label*                                         ",{}],["|",{"inverse":true}],["~                     ",{"fg":4,"bold":true}]],"36":[["~                   ",{"fg":4,"bold":true}],["|",{"inverse":true}],[" 98 ",{"fg":3,"bold":true}],["To set the labels for the calendar navigator, for example to change the                                         ",{}],["|",{"inverse":true}],["~                     ",{"fg":4,"bold":true}]],"37":[["~                   ",{"fg":4,"bold":true}],["|",{"inverse":true}],[" 99 ",{"fg":3,"bold":true}],["language, use this variable.  Entries should be comma separated. >                                              ",{}],["|",{"inverse":true}],["~                     ",{"fg":4,"bold":true}]],"38":[["~                   ",{"fg":4,"bold":true}],["|",{"inverse":true}],["100 ",{"fg":3,"bold":true}],["  let g:calendar_navi_label = 'Prev,Today,Next'                                                                 ",{}],["|",{"inverse":true}],["~                     ",{"fg":4,"bold":true}]],"39":[["~                   ",{"fg":4,"bold":true}],["|",{"inverse":true}],["101 ",{"fg":3,"bold":true}],["<                                                                                                               ",{}],["|",{"inverse":true}],["~                     ",{"fg":4,"bold":true}]],"40":[["~                   ",{"fg":4,"bold":true}],["|",{"inverse":true}],["102 ",{"fg":3,"bold":true}],["                                                                                                                ",{}],["|",{"inverse":true}],["~                     ",{"fg":4,"bold":true}]],"41":[["~                   ",{"fg":4,"bold":true}],["|",{"inverse":true}],["103 ",{"fg":3,"bold":true}],["                                                *g:calendar_erafmt*                                             ",{}],["|",{"inverse":true}],["~                     ",{"fg":4,"bold":true}]],"42":[["~                   ",{"fg":4,"bold":true}],["|",{"inverse":true}],["104 ",{"fg":3,"bold":true}],["To change the dating system, set the following variable.  Include the name of                                   ",{}],["|",{"inverse":true}],["~                     ",{"fg":4,"bold":true}]],"43":[["~                   ",{"fg":4,"bold":true}],["|",{"inverse":true}],["105 ",{"fg":3,"bold":true}],["the dating system and its offset from the Georgian calendar (A.D.).  For                                        ",{}],["|",{"inverse":true}],["~                     ",{"fg":4,"bold":true}]],"44":[["~                   ",{"fg":4,"bold":true}],["|",{"inverse":true}],["106 ",{"fg":3,"bold":true}],["example, to use the current Japanese era (Heisei), you would set: >                                             ",{}],["|",{"inverse":true}],["~                     ",{"fg":4,"bold":true}]],"45":[["~                   ",{"fg":4,"bold":true}],["|",{"inverse":true}],["107 ",{"fg":3,"bold":true}],["  let g:calendar_erafmt = 'Heisei,-1988'                                                                        ",{"underline":true}],["|",{"inverse":true}],["~                     ",{"fg":4,"bold":true}]],"46":[["[Name] test.cpp      ",{"inverse":true}],[" NORMAL ",{"bold":true}],[" ",{}],["calendar.txt ",{"bold":true}],["                                                        unix │ utf-8 │ text │  48% ",{}],[" LN 107",{"bold":true}],[":1  ",{}],[" ",{"bold":true,"inverse":true}],[" ~/…/calendar-vim/doc>",{"bold":true}]]},"cursor":{"y":45,"visible":true}}],[0.020252,{"lines":{"47":[["                                                                                                                                                     j          ",{}]]},"cursor":{"visible":false}}],[0.004336,{"lines":{"0":[["\" Press <F1> for hel",{"fg":6,"bold":true}],["|",{"inverse":true}],[" 63 ",{"fg":3,"bold":true}],["                                                *g:calendar_keys*                                               ",{}],["|",{"inverse":true}],["  1 ",{"fg":3,"bold":true}],["\" Press ? for help",{"fg":5,"bold":true}]],"1":[["                    ",{}],["|",{"inverse":true}],[" 64 ",{"fg":3,"bold":true}],["To change the key bindings in the calendar window, add entries to this                                          ",{}],["|",{"inverse":true}],["  2 ",{"fg":3,"bold":true}],["                  ",{}]],"2":[["▼",{"fg":3,"bold":true}],[" First",{"fg":5,"bold":true}],[" : ",{}],["struct",{"fg":2,"bold":true}],["    ",{}],["|",{"inverse":true}],[" 65 ",{"fg":3,"bold":true}],["dictionary.   Possible keys, the action bound to the keycode given in the                                       ",{}],["|",{"inverse":true}],["  3 ",{"fg":3,"bold":true}],[".. (up a dir)",{"fg":6,"bold":true}],["     ",{}]],"3":[["    [prototypes]",{"fg":6,"bold":true}],["    ",{}],["|",{"inverse":true}],[" 66 ",{"fg":3,"bold":true}],["respective value for this key and the default binding are listed below.                                         ",{}],["|",{"inverse":true}],["  4 /root/",{"fg":3,"bold":true}],["            ",{}]],"4":[["   ",{}],["+",{"fg":2,"bold":true}],["FirstRun(void)  ",{}],["|",{"inverse":true}],[" 67 ",{"fg":3,"bold":true}],["'close'                     Closes calendar window.             'q'                                             ",{}],["|",{"inverse":true}],["  5 ",{"fg":3,"bold":true}],["▸ .asciinema/",{"fg":6,"bold":true}],["     ",{}]],"5":[["   ",{}],["+",{"fg":2,"bold":true}],["FirstRun2(void) ",{}],["|",{"inverse":true}],[" 68 ",{"fg":3,"bold":true}],["'do_action'                 Executes |calendar_action|.           '<CR>'                                        ",{}],["|",{"inverse":true}],["  6 ",{"fg":3,"bold":true}],["▸ .cache/",{"fg":6,"bold":true}],["         ",{}]],"6":[["                    ",{}],["|",{"inverse":true}],[" 69 ",{"fg":3,"bold":true}],["'goto_today'                Executes |calendar_today|.            't'                                           ",{}],["|",{"inverse":true}],["  7 ",{"fg":3,"bold":true}],["▸ .config/",{"fg":6,"bold":true}],["        ",{}]],"7":[["▼",{"fg":3,"bold":true}],[" Last",{"fg":5,"bold":true}],[" : ",{}],["struct",{"fg":2,"bold":true}],["     ",{}],["|",{"inverse":true}],[" 70 ",{"fg":3,"bold":true}],["'show_help'                 Displays a short help message.      '?'                                             ",{}],["|",{"inverse":true}],["  8 ",{"fg":3,"bold":true}],["▸ .dbus/",{"fg":6,"bold":true}],["          ",{}]],"8":[["    [functions]",{"fg":6,"bold":true}],["     ",{}],["|",{"inverse":true}],[" 71 ",{"fg":3,"bold":true}],["'redisplay'                 Redraws calendar window.            'r'                                             ",{}],["|",{"inverse":true}],["  9 ",{"fg":3,"bold":true}],["▸ .gnupg/",{"fg":6,"bold":true}],["         ",{}]],"9":[["   ",{}],["+",{"fg":2,"bold":true}],["FirstRun(void)  ",{}],["|",{"inverse":true}],[" 72 ",{"fg":3,"bold":true}],["'goto_next_month'           Jumps to the next month.            '<Right>'                                       ",{}],["|",{"inverse":true}],[" 10 ",{"fg":3,"bold":true}],["▸ .kde/",{"fg":6,"bold":true}],["           ",{}]],"10":[["   ",{}],["+",{"fg":2,"bold":true}],["FirstRun2(void) ",{}],["|",{"inverse":true}],[" 73 ",{"fg":3,"bold":true}],["'goto_prev_month'           Jumps to the previous month.        '<Left>'                                        ",{}],["|",{"inverse":true}],[" 11 ",{"fg":3,"bold":true}],["▸ .local/",{"fg":6,"bold":true}],["         ",{}]],"11":[["   ",{}],["+",{"fg":2,"bold":true}],["~Last()         ",{}],["|",{"inverse":true}],[" 74 ",{"fg":3,"bold":true}],["'goto_next_year'            Jumps to the next year.             '<Up>'                                          ",{}],["|",{"inverse":true}],[" 12 ",{"fg":3,"bold":true}],["▸ .pki/",{"fg":6,"bold":true}],["           ",{}]],"12":[["   ",{}],["+",{"fg":2,"bold":true}],["SecondRun(void) ",{}],["|",{"inverse":true}],[" 75 ",{"fg":3,"bold":true}],["'goto_prev_year'            Jumps to the previous year.         '<Down>'                                        ",{}],["|",{"inverse":true}],[" 13 ",{"fg":3,"bold":true}],["▸ .ssh/",{"fg":6,"bold":true}],["           ",{}]],"13":[["   ",{}],["+",{"fg":2,"bold":true}],["SecondRun2(void)",{}],["|",{"inverse":true}],[" 76 ",{"fg":3,"bold":true}],["An example in your .vimrc might look like this: >                                                               ",{}],["|",{"inverse":true}],[" 14 ",{"fg":3,"bold":true}],["▸ .vim/",{"fg":6,"bold":true}],["           ",{}]],"14":[["                    ",{}],["|",{"inverse":true}],[" 77 ",{"fg":3,"bold":true}],["  let g:calendar_keys = { 'goto_next_month': '<C-Right>', 'goto_prev_month': '<C-Left>'}                        ",{}],["|",{"inverse":true}],[" 15 ",{"fg":3,"bold":true}],["▸ diary/",{"fg":6,"bold":true}],["          ",{}]],"15":[["▼",{"fg":3,"bold":true}],[" Second",{"fg":5,"bold":true}],[" : ",{}],["struct",{"fg":2,"bold":true}],["   ",{}],["|",{"inverse":true}],[" 78 ",{"fg":3,"bold":true}],["<                                                                                                               ",{}],["|",{"inverse":true}],[" 16 ",{"fg":3,"bold":true}],["▸ temp/",{"fg":6,"bold":true}],["           ",{}]],"16":[["    [prototypes]",{"fg":6,"bold":true}],["    ",{}],["|",{"inverse":true}],[" 79 ",{"fg":3,"bold":true}],["                                                                                                                ",{}],["|",{"inverse":true}],[" 17 ",{"fg":3,"bold":true}],["  .bash_history   ",{}]],"17":[["   ",{}],["+",{"fg":2,"bold":true}],["SecondRun(void) ",{}],["|",{"inverse":true}],[" 80 ",{"fg":3,"bold":true}],["                                                *g:calendar_mark*                                               ",{}],["|",{"inverse":true}],[" 18 ",{"fg":3,"bold":true}],["  .bash_logout    ",{}]],"18":[["   ",{}],["+",{"fg":2,"bold":true}],["SecondRun2(void)",{}],["|",{"inverse":true}],[" 81 ",{"fg":3,"bold":true}],["Place a '*' or '+' mark after the day.  Acceptable values are 'left',                                           ",{}],["|",{"inverse":true}],[" 19 ",{"fg":3,"bold":true}],["  .bash_profile   ",{"underline":true}]],"19":[["                    ",{}],["|",{"inverse":true}],[" 82 ",{"fg":3,"bold":true}],["'left-fit', and 'right': >                                                                                      ",{}],["|",{"inverse":true}],[" 20 ",{"fg":3,"bold":true}],["  .bashrc         ",{}]],"20":[["▼",{"fg":3,"bold":true}],[" ",{}],["functions",{"fg":6,"bold":true}],["         ",{}],["|",{"inverse":true}],[" 83 ",{"fg":3,"bold":true}],["  let g:calendar_mark = 'right'                                                                                 ",{}],["|",{"inverse":true}],[" 21 ",{"fg":3,"bold":true}],["  .cshrc          ",{}]],"21":[["    main(int argc, c",{"underline":true}],["|",{"inverse":true}],[" 84 ",{"fg":3,"bold":true}],["<                                                                                                               ",{}],["|",{"inverse":true}],[" 22 ",{"fg":3,"bold":true}],["  .dmrc           ",{}]],"22":[["~                   ",{"fg":4,"bold":true}],["|",{"inverse":true}],[" 85 ",{"fg":3,"bold":true}],["                                                                                                                ",{}],["|",{"inverse":true}],[" 23 ",{"fg":3,"bold":true}],["  .esd_auth       ",{}]],"23":[["~                   ",{"fg":4,"bold":true}],["|",{"inverse":true}],[" 86 ",{"fg":3,"bold":true}],["                                                *g:calendar_diary*                                              ",{}],["|",{"inverse":true}],[" 24 ",{"fg":3,"bold":true}],["  .gtkrc-2.0      ",{}]],"24":[["~                   ",{"fg":4,"bold":true}],["|",{"inverse":true}],[" 87 ",{"fg":3,"bold":true}],["Specify the directory for the diary files.  The default value is $HOME/diary.                                   ",{}],["|",{"inverse":true}],[" 25 ",{"fg":3,"bold":true}],["  .gtkrc-2.0-kde4 ",{}]],"25":[["~                   ",{"fg":4,"bold":true}],["|",{"inverse":true}],[" 88 ",{"fg":3,"bold":true}],["  let g:calendar_diary=$HOME.'/.vim/diary'                                                                      ",{}],["|",{"inverse":true}],[" 26 ",{"fg":3,"bold":true}],["  .lesshst        ",{}]],"26":[["~                   ",{"fg":4,"bold":true}],["|",{"inverse":true}],[" 89 ",{"fg":3,"bold":true}],["                                                                                                                ",{}],["|",{"inverse":true}],[" 27 ",{"fg":3,"bold":true}],["  .tcshrc         ",{}]],"27":[["~                   ",{"fg":4,"bold":true}],["|",{"inverse":true}],[" 90 ",{"fg":3,"bold":true}],["                                                                                                                ",{}],["|",{"inverse":true}],[" 28 ",{"fg":3,"bold":true}],["  .viminfo        ",{}]],"28":[["~                   ",{"fg":4,"bold":true}],["|",{"inverse":true}],[" 91 ",{"fg":3,"bold":true}],["                                                *g:calendar_navi*                                               ",{}],["|",{"inverse":true}],[" 29 ",{"fg":3,"bold":true}],["  .vimrc          ",{}]],"29":[["~                   ",{"fg":4,"bold":true}],["|",{"inverse":true}],[" 92 ",{"fg":3,"bold":true}],["To control the calendar navigator, set this variable.  Acceptable values are                                    ",{}],["|",{"inverse":true}],[" 30 ",{"fg":3,"bold":true}],["  .xsession-errors",{}]],"30":[["~                   ",{"fg":4,"bold":true}],["|",{"inverse":true}],[" 93 ",{"fg":3,"bold":true}],["'top', 'bottom', or 'both'. >                                                                                   ",{}],["|",{"inverse":true}],[" 31 ",{"fg":3,"bold":true}],["  anaconda-ks.cfg ",{}]],"31":[["~                   ",{"fg":4,"bold":true}],["|",{"inverse":true}],[" 94 ",{"fg":3,"bold":true}],["  let g:calendar_navi = ''                                                                                      ",{}],["|",{"inverse":true}],[" 32 ",{"fg":3,"bold":true}],["  initial-setup-ks",{}]],"32":[["~                   ",{"fg":4,"bold":true}],["|",{"inverse":true}],[" 95 ",{"fg":3,"bold":true}],["<                                                                                                               ",{}],["|",{"inverse":true}],[" 33 ",{"fg":3,"bold":true}],["  test.c          ",{}]],"33":[["~                   ",{"fg":4,"bold":true}],["|",{"inverse":true}],[" 96 ",{"fg":3,"bold":true}],["                                                                                                                ",{}],["|",{"inverse":true}],[" 34 ",{"fg":3,"bold":true}],["  test.cpp        ",{}]],"34":[["~                   ",{"fg":4,"bold":true}],["|",{"inverse":true}],[" 97 ",{"fg":3,"bold":true}],["                                                *g:calendar_navi_label*                                         ",{}],["|",{"inverse":true}],[" 35 ",{"fg":3,"bold":true}],["  .test.cpp.swp   ",{}]],"35":[["~                   ",{"fg":4,"bold":true}],["|",{"inverse":true}],[" 98 ",{"fg":3,"bold":true}],["To set the labels for the calendar navigator, for example to change the                                         ",{}],["|",{"inverse":true}],["~                     ",{"fg":4,"bold":true}]],"36":[["~                   ",{"fg":4,"bold":true}],["|",{"inverse":true}],[" 99 ",{"fg":3,"bold":true}],["language, use this variable.  Entries should be comma separated. >                                              ",{}],["|",{"inverse":true}],["~                     ",{"fg":4,"bold":true}]],"37":[["~                   ",{"fg":4,"bold":true}],["|",{"inverse":true}],["100 ",{"fg":3,"bold":true}],["  let g:calendar_navi_label = 'Prev,Today,Next'                                                                 ",{}],["|",{"inverse":true}],["~                     ",{"fg":4,"bold":true}]],"38":[["~                   ",{"fg":4,"bold":true}],["|",{"inverse":true}],["101 ",{"fg":3,"bold":true}],["<                                                                                                               ",{}],["|",{"inverse":true}],["~                     ",{"fg":4,"bold":true}]],"39":[["~                   ",{"fg":4,"bold":true}],["|",{"inverse":true}],["102 ",{"fg":3,"bold":true}],["                                                                                                                ",{}],["|",{"inverse":true}],["~                     ",{"fg":4,"bold":true}]],"40":[["~                   ",{"fg":4,"bold":true}],["|",{"inverse":true}],["103 ",{"fg":3,"bold":true}],["                                                *g:calendar_erafmt*                                             ",{}],["|",{"inverse":true}],["~                     ",{"fg":4,"bold":true}]],"41":[["~                   ",{"fg":4,"bold":true}],["|",{"inverse":true}],["104 ",{"fg":3,"bold":true}],["To change the dating system, set the following variable.  Include the name of                                   ",{}],["|",{"inverse":true}],["~                     ",{"fg":4,"bold":true}]],"42":[["~                   ",{"fg":4,"bold":true}],["|",{"inverse":true}],["105 ",{"fg":3,"bold":true}],["the dating system and its offset from the Georgian calendar (A.D.).  For                                        ",{}],["|",{"inverse":true}],["~                     ",{"fg":4,"bold":true}]],"43":[["~                   ",{"fg":4,"bold":true}],["|",{"inverse":true}],["106 ",{"fg":3,"bold":true}],["example, to use the current Japanese era (Heisei), you would set: >                                             ",{}],["|",{"inverse":true}],["~                     ",{"fg":4,"bold":true}]],"44":[["~                   ",{"fg":4,"bold":true}],["|",{"inverse":true}],["107 ",{"fg":3,"bold":true}],["  let g:calendar_erafmt = 'Heisei,-1988'                                   ",{"underline":true}],["                                     ",{}],["|",{"inverse":true}],["~                     ",{"fg":4,"bold":true}]],"47":[["                                                                                                                                                                ",{}]]},"cursor":{"x":100,"y":44}}],[0.025373,{"lines":{"44":[["~                   ",{"fg":4,"bold":true}],["|",{"inverse":true}],["107 ",{"fg":3,"bold":true}],["  let g:calendar_erafmt = 'Heisei,-1988'                                                                        ",{}],["|",{"inverse":true}],["~                     ",{"fg":4,"bold":true}]],"45":[["~                   ",{"fg":4,"bold":true}],["|",{"inverse":true}],["108 ",{"fg":3,"bold":true}],["<                                                                                                               ",{"underline":true}],["|",{"inverse":true}],["~                     ",{"fg":4,"bold":true}]],"46":[["[Name] test.cpp      ",{"inverse":true}],[" NORMAL ",{"bold":true}],[" ",{}],["calendar.txt ",{"bold":true}],["                                                        unix │ utf-8 │ text │  49% ",{}],[" LN 108",{"bold":true}],[":1  ",{}],[" ",{"bold":true,"inverse":true}],[" ~/…/calendar-vim/doc>",{"bold":true}]]},"cursor":{"x":25,"y":45,"visible":true}}],[0.015075,{"lines":{"0":[["\" Press <F1> for hel",{"fg":6,"bold":true}],["|",{"inverse":true}],[" 64 ",{"fg":3,"bold":true}],["To change the key bindings in the calendar window, add entries to this                                          ",{}],["|",{"inverse":true}],["  1 ",{"fg":3,"bold":true}],["\" Press ? for help",{"fg":5,"bold":true}]],"1":[["                    ",{}],["|",{"inverse":true}],[" 65 ",{"fg":3,"bold":true}],["dictionary.   Possible keys, the action bound to the keycode given in the                                       ",{}],["|",{"inverse":true}],["  2 ",{"fg":3,"bold":true}],["                  ",{}]],"2":[["▼",{"fg":3,"bold":true}],[" First",{"fg":5,"bold":true}],[" : ",{}],["struct",{"fg":2,"bold":true}],["    ",{}],["|",{"inverse":true}],[" 66 ",{"fg":3,"bold":true}],["respective value for this key and the default binding are listed below.                                         ",{}],["|",{"inverse":true}],["  3 ",{"fg":3,"bold":true}],[".. (up a dir)",{"fg":6,"bold":true}],["     ",{}]],"3":[["    [prototypes]",{"fg":6,"bold":true}],["    ",{}],["|",{"inverse":true}],[" 67 ",{"fg":3,"bold":true}],["'close'                     Closes calendar window.             'q'                                             ",{}],["|",{"inverse":true}],["  4 /root/",{"fg":3,"bold":true}],["            ",{}]],"4":[["   ",{}],["+",{"fg":2,"bold":true}],["FirstRun(void)  ",{}],["|",{"inverse":true}],[" 68 ",{"fg":3,"bold":true}],["'do_action'                 Executes |calendar_action|.           '<CR>'                                        ",{}],["|",{"inverse":true}],["  5 ",{"fg":3,"bold":true}],["▸ .asciinema/",{"fg":6,"bold":true}],["     ",{}]],"5":[["   ",{}],["+",{"fg":2,"bold":true}],["FirstRun2(void) ",{}],["|",{"inverse":true}],[" 69 ",{"fg":3,"bold":true}],["'goto_today'                Executes |calendar_today|.            't'                                           ",{}],["|",{"inverse":true}],["  6 ",{"fg":3,"bold":true}],["▸ .cache/",{"fg":6,"bold":true}],["         ",{}]],"6":[["                    ",{}],["|",{"inverse":true}],[" 70 ",{"fg":3,"bold":true}],["'show_help'                 Displays a short help message.      '?'                                             ",{}],["|",{"inverse":true}],["  7 ",{"fg":3,"bold":true}],["▸ .config/",{"fg":6,"bold":true}],["        ",{}]],"7":[["▼",{"fg":3,"bold":true}],[" Last",{"fg":5,"bold":true}],[" : ",{}],["struct",{"fg":2,"bold":true}],["     ",{}],["|",{"inverse":true}],[" 71 ",{"fg":3,"bold":true}],["'redisplay'                 Redraws calendar window.            'r'                                             ",{}],["|",{"inverse":true}],["  8 ",{"fg":3,"bold":true}],["▸ .dbus/",{"fg":6,"bold":true}],["          ",{}]],"8":[["    [functions]",{"fg":6,"bold":true}],["     ",{}],["|",{"inverse":true}],[" 72 ",{"fg":3,"bold":true}],["'goto_next_month'           Jumps to the next month.            '<Right>'                                       ",{}],["|",{"inverse":true}],["  9 ",{"fg":3,"bold":true}],["▸ .gnupg/",{"fg":6,"bold":true}],["         ",{}]],"9":[["   ",{}],["+",{"fg":2,"bold":true}],["FirstRun(void)  ",{}],["|",{"inverse":true}],[" 73 ",{"fg":3,"bold":true}],["'goto_prev_month'           Jumps to the previous month.        '<Left>'                                        ",{}],["|",{"inverse":true}],[" 10 ",{"fg":3,"bold":true}],["▸ .kde/",{"fg":6,"bold":true}],["           ",{}]],"10":[["   ",{}],["+",{"fg":2,"bold":true}],["FirstRun2(void) ",{}],["|",{"inverse":true}],[" 74 ",{"fg":3,"bold":true}],["'goto_next_year'            Jumps to the next year.             '<Up>'                                          ",{}],["|",{"inverse":true}],[" 11 ",{"fg":3,"bold":true}],["▸ .local/",{"fg":6,"bold":true}],["         ",{}]],"11":[["   ",{}],["+",{"fg":2,"bold":true}],["~Last()         ",{}],["|",{"inverse":true}],[" 75 ",{"fg":3,"bold":true}],["'goto_prev_year'            Jumps to the previous year.         '<Down>'                                        ",{}],["|",{"inverse":true}],[" 12 ",{"fg":3,"bold":true}],["▸ .pki/",{"fg":6,"bold":true}],["           ",{}]],"12":[["   ",{}],["+",{"fg":2,"bold":true}],["SecondRun(void) ",{}],["|",{"inverse":true}],[" 76 ",{"fg":3,"bold":true}],["An example in your .vimrc might look like this: >                                                               ",{}],["|",{"inverse":true}],[" 13 ",{"fg":3,"bold":true}],["▸ .ssh/",{"fg":6,"bold":true}],["           ",{}]],"13":[["   ",{}],["+",{"fg":2,"bold":true}],["SecondRun2(void)",{}],["|",{"inverse":true}],[" 77 ",{"fg":3,"bold":true}],["  let g:calendar_keys = { 'goto_next_month': '<C-Right>', 'goto_prev_month': '<C-Left>'}                        ",{}],["|",{"inverse":true}],[" 14 ",{"fg":3,"bold":true}],["▸ .vim/",{"fg":6,"bold":true}],["           ",{}]],"14":[["                    ",{}],["|",{"inverse":true}],[" 78 ",{"fg":3,"bold":true}],["<                                                                                                               ",{}],["|",{"inverse":true}],[" 15 ",{"fg":3,"bold":true}],["▸ diary/",{"fg":6,"bold":true}],["          ",{}]],"15":[["▼",{"fg":3,"bold":true}],[" Second",{"fg":5,"bold":true}],[" : ",{}],["struct",{"fg":2,"bold":true}],["   ",{}],["|",{"inverse":true}],[" 79 ",{"fg":3,"bold":true}],["                                                                                                                ",{}],["|",{"inverse":true}],[" 16 ",{"fg":3,"bold":true}],["▸ temp/",{"fg":6,"bold":true}],["           ",{}]],"16":[["    [prototypes]",{"fg":6,"bold":true}],["    ",{}],["|",{"inverse":true}],[" 80 ",{"fg":3,"bold":true}],["                                                *g:calendar_mark*                                               ",{}],["|",{"inverse":true}],[" 17 ",{"fg":3,"bold":true}],["  .bash_history   ",{}]],"17":[["   ",{}],["+",{"fg":2,"bold":true}],["SecondRun(void) ",{}],["|",{"inverse":true}],[" 81 ",{"fg":3,"bold":true}],["Place a '*' or '+' mark after the day.  Acceptable values are 'left',                                           ",{}],["|",{"inverse":true}],[" 18 ",{"fg":3,"bold":true}],["  .bash_logout    ",{}]],"18":[["   ",{}],["+",{"fg":2,"bold":true}],["SecondRun2(void)",{}],["|",{"inverse":true}],[" 82 ",{"fg":3,"bold":true}],["'left-fit', and 'right': >                                                                                      ",{}],["|",{"inverse":true}],[" 19 ",{"fg":3,"bold":true}],["  .bash_profile   ",{"underline":true}]],"19":[["                    ",{}],["|",{"inverse":true}],[" 83 ",{"fg":3,"bold":true}],["  let g:calendar_mark = 'right'                                                                                 ",{}],["|",{"inverse":true}],[" 20 ",{"fg":3,"bold":true}],["  .bashrc         ",{}]],"20":[["▼",{"fg":3,"bold":true}],[" ",{}],["functions",{"fg":6,"bold":true}],["         ",{}],["|",{"inverse":true}],[" 84 ",{"fg":3,"bold":true}],["<                                                                                                               ",{}],["|",{"inverse":true}],[" 21 ",{"fg":3,"bold":true}],["  .cshrc          ",{}]],"21":[["    main(int argc, c",{"underline":true}],["|",{"inverse":true}],[" 85 ",{"fg":3,"bold":true}],["                                                                                                                ",{}],["|",{"inverse":true}],[" 22 ",{"fg":3,"bold":true}],["  .dmrc           ",{}]],"22":[["~                   ",{"fg":4,"bold":true}],["|",{"inverse":true}],[" 86 ",{"fg":3,"bold":true}],["                                                *g:calendar_diary*                                              ",{}],["|",{"inverse":true}],[" 23 ",{"fg":3,"bold":true}],["  .esd_auth       ",{}]],"23":[["~                   ",{"fg":4,"bold":true}],["|",{"inverse":true}],[" 87 ",{"fg":3,"bold":true}],["Specify the directory for the diary files.  The default value is $HOME/diary.                                   ",{}],["|",{"inverse":true}],[" 24 ",{"fg":3,"bold":true}],["  .gtkrc-2.0      ",{}]],"24":[["~                   ",{"fg":4,"bold":true}],["|",{"inverse":true}],[" 88 ",{"fg":3,"bold":true}],["  let g:calendar_diary=$HOME.'/.vim/diary'                                                                      ",{}],["|",{"inverse":true}],[" 25 ",{"fg":3,"bold":true}],["  .gtkrc-2.0-kde4 ",{}]],"25":[["~                   ",{"fg":4,"bold":true}],["|",{"inverse":true}],[" 89 ",{"fg":3,"bold":true}],["                                                                                                                ",{}],["|",{"inverse":true}],[" 26 ",{"fg":3,"bold":true}],["  .lesshst        ",{}]],"26":[["~                   ",{"fg":4,"bold":true}],["|",{"inverse":true}],[" 90 ",{"fg":3,"bold":true}],["                                                                                                                ",{}],["|",{"inverse":true}],[" 27 ",{"fg":3,"bold":true}],["  .tcshrc         ",{}]],"27":[["~                   ",{"fg":4,"bold":true}],["|",{"inverse":true}],[" 91 ",{"fg":3,"bold":true}],["                                                *g:calendar_navi*                                               ",{}],["|",{"inverse":true}],[" 28 ",{"fg":3,"bold":true}],["  .viminfo        ",{}]],"28":[["~                   ",{"fg":4,"bold":true}],["|",{"inverse":true}],[" 92 ",{"fg":3,"bold":true}],["To control the calendar navigator, set this variable.  Acceptable values are                                    ",{}],["|",{"inverse":true}],[" 29 ",{"fg":3,"bold":true}],["  .vimrc          ",{}]],"29":[["~                   ",{"fg":4,"bold":true}],["|",{"inverse":true}],[" 93 ",{"fg":3,"bold":true}],["'top', 'bottom', or 'both'. >                                                                                   ",{}],["|",{"inverse":true}],[" 30 ",{"fg":3,"bold":true}],["  .xsession-errors",{}]],"30":[["~                   ",{"fg":4,"bold":true}],["|",{"inverse":true}],[" 94 ",{"fg":3,"bold":true}],["  let g:calendar_navi = ''                                                                                      ",{}],["|",{"inverse":true}],[" 31 ",{"fg":3,"bold":true}],["  anaconda-ks.cfg ",{}]],"31":[["~                   ",{"fg":4,"bold":true}],["|",{"inverse":true}],[" 95 ",{"fg":3,"bold":true}],["<                                                                                                               ",{}],["|",{"inverse":true}],[" 32 ",{"fg":3,"bold":true}],["  initial-setup-ks",{}]],"32":[["~                   ",{"fg":4,"bold":true}],["|",{"inverse":true}],[" 96 ",{"fg":3,"bold":true}],["                                                                                                                ",{}],["|",{"inverse":true}],[" 33 ",{"fg":3,"bold":true}],["  test.c          ",{}]],"33":[["~                   ",{"fg":4,"bold":true}],["|",{"inverse":true}],[" 97 ",{"fg":3,"bold":true}],["                                                *g:calendar_navi_label*                                         ",{}],["|",{"inverse":true}],[" 34 ",{"fg":3,"bold":true}],["  test.cpp        ",{}]],"34":[["~                   ",{"fg":4,"bold":true}],["|",{"inverse":true}],[" 98 ",{"fg":3,"bold":true}],["To set the labels for the calendar navigator, for example to change the                                         ",{}],["|",{"inverse":true}],[" 35 ",{"fg":3,"bold":true}],["  .test.cpp.swp   ",{}]],"35":[["~                   ",{"fg":4,"bold":true}],["|",{"inverse":true}],[" 99 ",{"fg":3,"bold":true}],["language, use this variable.  Entries should be comma separated. >                                              ",{}],["|",{"inverse":true}],["~                     ",{"fg":4,"bold":true}]],"36":[["~                   ",{"fg":4,"bold":true}],["|",{"inverse":true}],["100 ",{"fg":3,"bold":true}],["  let g:calendar_navi_label = 'Prev,Today,Next'                                                                 ",{}],["|",{"inverse":true}],["~                     ",{"fg":4,"bold":true}]],"37":[["~                   ",{"fg":4,"bold":true}],["|",{"inverse":true}],["101 ",{"fg":3,"bold":true}],["<                                                                                                               ",{}],["|",{"inverse":true}],["~                     ",{"fg":4,"bold":true}]],"38":[["~                   ",{"fg":4,"bold":true}],["|",{"inverse":true}],["102 ",{"fg":3,"bold":true}],["                                                                                                                ",{}],["|",{"inverse":true}],["~                     ",{"fg":4,"bold":true}]],"39":[["~                   ",{"fg":4,"bold":true}],["|",{"inverse":true}],["103 ",{"fg":3,"bold":true}],["                                                *g:calendar_erafmt*                                             ",{}],["|",{"inverse":true}],["~                     ",{"fg":4,"bold":true}]],"40":[["~                   ",{"fg":4,"bold":true}],["|",{"inverse":true}],["104 ",{"fg":3,"bold":true}],["To change the dating system, set the following variable.  Include the name of                                   ",{}],["|",{"inverse":true}],["~                     ",{"fg":4,"bold":true}]],"41":[["~                   ",{"fg":4,"bold":true}],["|",{"inverse":true}],["105 ",{"fg":3,"bold":true}],["the dating system and its offset from the Georgian calendar (A.D.).  For                                        ",{}],["|",{"inverse":true}],["~                     ",{"fg":4,"bold":true}]],"42":[["~                   ",{"fg":4,"bold":true}],["|",{"inverse":true}],["106 ",{"fg":3,"bold":true}],["example, to use the current Japanese era (Heisei), you would set: >                                             ",{}],["|",{"inverse":true}],["~                     ",{"fg":4,"bold":true}]],"43":[["~                   ",{"fg":4,"bold":true}],["|",{"inverse":true}],["107 ",{"fg":3,"bold":true}],["  let g:calendar_erafmt = 'Heisei,-1988'                                                                        ",{}],["|",{"inverse":true}],["~                     ",{"fg":4,"bold":true}]],"44":[["~                   ",{"fg":4,"bold":true}],["|",{"inverse":true}],["108 ",{"fg":3,"bold":true}],["<                                                                                                               ",{}],["|",{"inverse":true}],["~                     ",{"fg":4,"bold":true}]],"45":[["~                   ",{"fg":4,"bold":true}],["|",{"inverse":true}],["109 ",{"fg":3,"bold":true}],["                                                                                                                ",{"underline":true}],["|",{"inverse":true}],["~                     ",{"fg":4,"bold":true}]],"46":[["[Name] test.cpp      ",{"inverse":true}],[" NORMAL ",{"bold":true}],[" ",{}],["calendar.txt ",{"bold":true}],["                                                        unix │ utf-8 │ text │  49% ",{}],[" LN 109",{"bold":true}],[":1  ",{}],[" ",{"bold":true,"inverse":true}],[" ~/…/calendar-vim/doc>",{"bold":true}]]}}],[0.042769,{"lines":{"0":[["\" Press <F1> for hel",{"fg":6,"bold":true}],["|",{"inverse":true}],[" 65 ",{"fg":3,"bold":true}],["dictionary.   Possible keys, the action bound to the keycode given in the                                       ",{}],["|",{"inverse":true}],["  1 ",{"fg":3,"bold":true}],["\" Press ? for help",{"fg":5,"bold":true}]],"1":[["                    ",{}],["|",{"inverse":true}],[" 66 ",{"fg":3,"bold":true}],["respective value for this key and the default binding are listed below.                                         ",{}],["|",{"inverse":true}],["  2 ",{"fg":3,"bold":true}],["                  ",{}]],"2":[["▼",{"fg":3,"bold":true}],[" First",{"fg":5,"bold":true}],[" : ",{}],["struct",{"fg":2,"bold":true}],["    ",{}],["|",{"inverse":true}],[" 67 ",{"fg":3,"bold":true}],["'close'                     Closes calendar window.             'q'                                             ",{}],["|",{"inverse":true}],["  3 ",{"fg":3,"bold":true}],[".. (up a dir)",{"fg":6,"bold":true}],["     ",{}]],"3":[["    [prototypes]",{"fg":6,"bold":true}],["    ",{}],["|",{"inverse":true}],[" 68 ",{"fg":3,"bold":true}],["'do_action'                 Executes |calendar_action|.           '<CR>'                                        ",{}],["|",{"inverse":true}],["  4 /root/",{"fg":3,"bold":true}],["            ",{}]],"4":[["   ",{}],["+",{"fg":2,"bold":true}],["FirstRun(void)  ",{}],["|",{"inverse":true}],[" 69 ",{"fg":3,"bold":true}],["'goto_today'                Executes |calendar_today|.            't'                                           ",{}],["|",{"inverse":true}],["  5 ",{"fg":3,"bold":true}],["▸ .asciinema/",{"fg":6,"bold":true}],["     ",{}]],"5":[["   ",{}],["+",{"fg":2,"bold":true}],["FirstRun2(void) ",{}],["|",{"inverse":true}],[" 70 ",{"fg":3,"bold":true}],["'show_help'                 Displays a short help message.      '?'                                             ",{}],["|",{"inverse":true}],["  6 ",{"fg":3,"bold":true}],["▸ .cache/",{"fg":6,"bold":true}],["         ",{}]],"6":[["                    ",{}],["|",{"inverse":true}],[" 71 ",{"fg":3,"bold":true}],["'redisplay'                 Redraws calendar window.            'r'                                             ",{}],["|",{"inverse":true}],["  7 ",{"fg":3,"bold":true}],["▸ .config/",{"fg":6,"bold":true}],["        ",{}]],"7":[["▼",{"fg":3,"bold":true}],[" Last",{"fg":5,"bold":true}],[" : ",{}],["struct",{"fg":2,"bold":true}],["     ",{}],["|",{"inverse":true}],[" 72 ",{"fg":3,"bold":true}],["'redisplay'                 Redraws calendar window.            'r'                                             ",{}],["|",{"inverse":true}],["  8 ",{"fg":3,"bold":true}],["▸ .dbus/",{"fg":6,"bold":true}],["          ",{}]]},"cursor":{"y":7,"visible":false}}],[0.016072,{"lines":{"0":[["\" Press <F1> for hel",{"fg":6,"bold":true}],["|",{"inverse":true}],[" 66 ",{"fg":3,"bold":true}],["respective value for this key and the default binding are listed below.                                         ",{}],["|",{"inverse":true}],["  1 ",{"fg":3,"bold":true}],["\" Press ? for help",{"fg":5,"bold":true}]],"1":[["                    ",{}],["|",{"inverse":true}],[" 67 ",{"fg":3,"bold":true}],["'close'                     Closes calendar window.             'q'                                             ",{}],["|",{"inverse":true}],["  2 ",{"fg":3,"bold":true}],["                  ",{}]],"2":[["▼",{"fg":3,"bold":true}],[" First",{"fg":5,"bold":true}],[" : ",{}],["struct",{"fg":2,"bold":true}],["    ",{}],["|",{"inverse":true}],[" 68 ",{"fg":3,"bold":true}],["'do_action'                 Executes |calendar_action|.           '<CR>'                                        ",{}],["|",{"inverse":true}],["  3 ",{"fg":3,"bold":true}],[".. (up a dir)",{"fg":6,"bold":true}],["     ",{}]],"3":[["    [prototypes]",{"fg":6,"bold":true}],["    ",{}],["|",{"inverse":true}],[" 69 ",{"fg":3,"bold":true}],["'goto_today'                Executes |calendar_today|.            't'                                           ",{}],["|",{"inverse":true}],["  4 /root/",{"fg":3,"bold":true}],["            ",{}]],"4":[["   ",{}],["+",{"fg":2,"bold":true}],["FirstRun(void)  ",{}],["|",{"inverse":true}],[" 70 ",{"fg":3,"bold":true}],["'show_help'                 Displays a short help message.      '?'                                             ",{}],["|",{"inverse":true}],["  5 ",{"fg":3,"bold":true}],["▸ .asciinema/",{"fg":6,"bold":true}],["     ",{}]],"5":[["   ",{}],["+",{"fg":2,"bold":true}],["FirstRun2(void) ",{}],["|",{"inverse":true}],[" 71 ",{"fg":3,"bold":true}],["'redisplay'                 Redraws calendar window.            'r'                                             ",{}],["|",{"inverse":true}],["  6 ",{"fg":3,"bold":true}],["▸ .cache/",{"fg":6,"bold":true}],["         ",{}]],"6":[["                    ",{}],["|",{"inverse":true}],[" 72 ",{"fg":3,"bold":true}],["'goto_next_month'           Jumps to the next month.            '<Right>'                                       ",{}],["|",{"inverse":true}],["  7 ",{"fg":3,"bold":true}],["▸ .config/",{"fg":6,"bold":true}],["        ",{}]],"7":[["▼",{"fg":3,"bold":true}],[" Last",{"fg":5,"bold":true}],[" : ",{}],["struct",{"fg":2,"bold":true}],["     ",{}],["|",{"inverse":true}],[" 73 ",{"fg":3,"bold":true}],["'goto_prev_month'           Jumps to the previous month.        '<Left>'                                        ",{}],["|",{"inverse":true}],["  8 ",{"fg":3,"bold":true}],["▸ .dbus/",{"fg":6,"bold":true}],["          ",{}]],"8":[["    [functions]",{"fg":6,"bold":true}],["     ",{}],["|",{"inverse":true}],[" 74 ",{"fg":3,"bold":true}],["'goto_next_year'            Jumps to the next year.             '<Up>'                                          ",{}],["|",{"inverse":true}],["  9 ",{"fg":3,"bold":true}],["▸ .gnupg/",{"fg":6,"bold":true}],["         ",{}]],"9":[["   ",{}],["+",{"fg":2,"bold":true}],["FirstRun(void)  ",{}],["|",{"inverse":true}],[" 75 ",{"fg":3,"bold":true}],["'goto_prev_year'            Jumps to the previous year.         '<Down>'                                        ",{}],["|",{"inverse":true}],[" 10 ",{"fg":3,"bold":true}],["▸ .kde/",{"fg":6,"bold":true}],["           ",{}]],"10":[["   ",{}],["+",{"fg":2,"bold":true}],["FirstRun2(void) ",{}],["|",{"inverse":true}],[" 76 ",{"fg":3,"bold":true}],["An example in your .vimrc might look like this: >                                                               ",{}],["|",{"inverse":true}],[" 11 ",{"fg":3,"bold":true}],["▸ .local/",{"fg":6,"bold":true}],["         ",{}]],"11":[["   ",{}],["+",{"fg":2,"bold":true}],["~Last()         ",{}],["|",{"inverse":true}],[" 77 ",{"fg":3,"bold":true}],["  let g:calendar_keys = { 'goto_next_month': '<C-Right>', 'goto_prev_month': '<C-Left>'}                        ",{}],["|",{"inverse":true}],[" 12 ",{"fg":3,"bold":true}],["▸ .pki/",{"fg":6,"bold":true}],["           ",{}]],"12":[["   ",{}],["+",{"fg":2,"bold":true}],["SecondRun(void) ",{}],["|",{"inverse":true}],[" 78 ",{"fg":3,"bold":true}],["<                                                                                                               ",{}],["|",{"inverse":true}],[" 13 ",{"fg":3,"bold":true}],["▸ .ssh/",{"fg":6,"bold":true}],["           ",{}]],"13":[["   ",{}],["+",{"fg":2,"bold":true}],["SecondRun2(void)",{}],["|",{"inverse":true}],[" 79 ",{"fg":3,"bold":true}],["                                                                                                                ",{}],["|",{"inverse":true}],[" 14 ",{"fg":3,"bold":true}],["▸ .vim/",{"fg":6,"bold":true}],["           ",{}]],"14":[["                    ",{}],["|",{"inverse":true}],[" 80 ",{"fg":3,"bold":true}],["                                                *g:calendar_mark*                                               ",{}],["|",{"inverse":true}],[" 15 ",{"fg":3,"bold":true}],["▸ diary/",{"fg":6,"bold":true}],["          ",{}]],"15":[["▼",{"fg":3,"bold":true}],[" Second",{"fg":5,"bold":true}],[" : ",{}],["struct",{"fg":2,"bold":true}],["   ",{}],["|",{"inverse":true}],[" 80 ",{"fg":3,"bold":true}],["                                                *g:calendar_mark*                                               ",{}],["|",{"inverse":true}],[" 16 ",{"fg":3,"bold":true}],["▸ temp/",{"fg":6,"bold":true}],["           ",{}]],"16":[["    [prototypes]",{"fg":6,"bold":true}],["    ",{}],["|",{"inverse":true}],[" 81 ",{"fg":3,"bold":true}],["Place a '*' or '+' mark after the day.  Acceptable values are 'left',                                           ",{}],["|",{"inverse":true}],[" 17 ",{"fg":3,"bold":true}],["  .bash_history   ",{}]],"17":[["   ",{}],["+",{"fg":2,"bold":true}],["SecondRun(void) ",{}],["|",{"inverse":true}],[" 82 ",{"fg":3,"bold":true}],["'left-fit', and 'right': >                                                                                      ",{}],["|",{"inverse":true}],[" 18 ",{"fg":3,"bold":true}],["  .bash_logout    ",{}]],"18":[["   ",{}],["+",{"fg":2,"bold":true}],["SecondRun2(void)",{}],["|",{"inverse":true}],[" 83 ",{"fg":3,"bold":true}],["  let g:calendar_mark = 'right'                                                                                 ",{}],["|",{"inverse":true}],[" 19 ",{"fg":3,"bold":true}],["  .bash_profile   ",{"underline":true}]],"19":[["                    ",{}],["|",{"inverse":true}],[" 84 ",{"fg":3,"bold":true}],["<                                                                                                               ",{}],["|",{"inverse":true}],[" 20 ",{"fg":3,"bold":true}],["  .bashrc         ",{}]],"20":[["▼",{"fg":3,"bold":true}],[" ",{}],["functions",{"fg":6,"bold":true}],["         ",{}],["|",{"inverse":true}],[" 85 ",{"fg":3,"bold":true}],["                                                                                                                ",{}],["|",{"inverse":true}],[" 21 ",{"fg":3,"bold":true}],["  .cshrc          ",{}]],"21":[["    main(int argc, c",{"underline":true}],["|",{"inverse":true}],[" 86 ",{"fg":3,"bold":true}],["                                                *g:calendar_diary*                                              ",{}],["|",{"inverse":true}],[" 22 ",{"fg":3,"bold":true}],["  .dmrc           ",{}]],"22":[["~                   ",{"fg":4,"bold":true}],["|",{"inverse":true}],[" 87 ",{"fg":3,"bold":true}],["Specify the directory for the diary files.  The default value is $HOME/diary.                                   ",{}],["|",{"inverse":true}],[" 23 ",{"fg":3,"bold":true}],["  .esd_auth       ",{}]],"23":[["~                   ",{"fg":4,"bold":true}],["|",{"inverse":true}],[" 88 ",{"fg":3,"bold":true}],["  let g:calendar_diary=$HOME.'/.vim/diary'                                                                      ",{}],["|",{"inverse":true}],[" 24 ",{"fg":3,"bold":true}],["  .gtkrc-2.0      ",{}]],"24":[["~                   ",{"fg":4,"bold":true}],["|",{"inverse":true}],[" 89 ",{"fg":3,"bold":true}],["                                                                                                                ",{}],["|",{"inverse":true}],[" 25 ",{"fg":3,"bold":true}],["  .gtkrc-2.0-kde4 ",{}]],"25":[["~                   ",{"fg":4,"bold":true}],["|",{"inverse":true}],[" 90 ",{"fg":3,"bold":true}],["                                                                                                                ",{}],["|",{"inverse":true}],[" 26 ",{"fg":3,"bold":true}],["  .lesshst        ",{}]],"26":[["~                   ",{"fg":4,"bold":true}],["|",{"inverse":true}],[" 91 ",{"fg":3,"bold":true}],["                                                *g:calendar_navi*                                               ",{}],["|",{"inverse":true}],[" 27 ",{"fg":3,"bold":true}],["  .tcshrc         ",{}]],"27":[["~                   ",{"fg":4,"bold":true}],["|",{"inverse":true}],[" 92 ",{"fg":3,"bold":true}],["To control the calendar navigator, set this variable.  Acceptable values are                                    ",{}],["|",{"inverse":true}],[" 28 ",{"fg":3,"bold":true}],["  .viminfo        ",{}]],"28":[["~                   ",{"fg":4,"bold":true}],["|",{"inverse":true}],[" 93 ",{"fg":3,"bold":true}],["'top', 'bottom', or 'both'. >                                                                                   ",{}],["|",{"inverse":true}],[" 29 ",{"fg":3,"bold":true}],["  .vimrc          ",{}]],"29":[["~                   ",{"fg":4,"bold":true}],["|",{"inverse":true}],[" 94 ",{"fg":3,"bold":true}],["  let g:calendar_navi = ''                                                                                      ",{}],["|",{"inverse":true}],[" 30 ",{"fg":3,"bold":true}],["  .xsession-errors",{}]],"30":[["~                   ",{"fg":4,"bold":true}],["|",{"inverse":true}],[" 95 ",{"fg":3,"bold":true}],["<                                                                                                               ",{}],["|",{"inverse":true}],[" 31 ",{"fg":3,"bold":true}],["  anaconda-ks.cfg ",{}]],"31":[["~                   ",{"fg":4,"bold":true}],["|",{"inverse":true}],[" 96 ",{"fg":3,"bold":true}],["                                                                                                                ",{}],["|",{"inverse":true}],[" 32 ",{"fg":3,"bold":true}],["  initial-setup-ks",{}]],"32":[["~                   ",{"fg":4,"bold":true}],["|",{"inverse":true}],[" 97 ",{"fg":3,"bold":true}],["                                                *g:calendar_navi_label*                                         ",{}],["|",{"inverse":true}],[" 33 ",{"fg":3,"bold":true}],["  test.c          ",{}]],"33":[["~                   ",{"fg":4,"bold":true}],["|",{"inverse":true}],[" 98 ",{"fg":3,"bold":true}],["To set the labels for the calendar navigator, for example to change the                                         ",{}],["|",{"inverse":true}],[" 34 ",{"fg":3,"bold":true}],["  test.cpp        ",{}]],"34":[["~                   ",{"fg":4,"bold":true}],["|",{"inverse":true}],[" 99 ",{"fg":3,"bold":true}],["language, use this variable.  Entries should be comma separated. >                                              ",{}],["|",{"inverse":true}],[" 35 ",{"fg":3,"bold":true}],["  .test.cpp.swp   ",{}]],"35":[["~                   ",{"fg":4,"bold":true}],["|",{"inverse":true}],["100 ",{"fg":3,"bold":true}],["  let g:calendar_navi_label = 'Prev,Today,Next'                                                                 ",{}],["|",{"inverse":true}],["~                     ",{"fg":4,"bold":true}]],"36":[["~                   ",{"fg":4,"bold":true}],["|",{"inverse":true}],["101 ",{"fg":3,"bold":true}],["<                                                                                                               ",{}],["|",{"inverse":true}],["~                     ",{"fg":4,"bold":true}]],"37":[["~                   ",{"fg":4,"bold":true}],["|",{"inverse":true}],["102 ",{"fg":3,"bold":true}],["                                                                                                                ",{}],["|",{"inverse":true}],["~                     ",{"fg":4,"bold":true}]],"38":[["~                   ",{"fg":4,"bold":true}],["|",{"inverse":true}],["103 ",{"fg":3,"bold":true}],["                                                *g:calendar_erafmt*                                             ",{}],["|",{"inverse":true}],["~                     ",{"fg":4,"bold":true}]],"39":[["~                   ",{"fg":4,"bold":true}],["|",{"inverse":true}],["104 ",{"fg":3,"bold":true}],["To change the dating system, set the following variable.  Include the name of                                   ",{}],["|",{"inverse":true}],["~                     ",{"fg":4,"bold":true}]],"40":[["~                   ",{"fg":4,"bold":true}],["|",{"inverse":true}],["105 ",{"fg":3,"bold":true}],["the dating system and its offset from the Georgian calendar (A.D.).  For                                        ",{}],["|",{"inverse":true}],["~                     ",{"fg":4,"bold":true}]],"41":[["~                   ",{"fg":4,"bold":true}],["|",{"inverse":true}],["106 ",{"fg":3,"bold":true}],["example, to use the current Japanese era (Heisei), you would set: >                                             ",{}],["|",{"inverse":true}],["~                     ",{"fg":4,"bold":true}]],"42":[["~                   ",{"fg":4,"bold":true}],["|",{"inverse":true}],["107 ",{"fg":3,"bold":true}],["  let g:calendar_erafmt = 'Heisei,-1988'                                                                        ",{}],["|",{"inverse":true}],["~                     ",{"fg":4,"bold":true}]],"43":[["~                   ",{"fg":4,"bold":true}],["|",{"inverse":true}],["108 ",{"fg":3,"bold":true}],["<                                                                                                               ",{}],["|",{"inverse":true}],["~                     ",{"fg":4,"bold":true}]],"44":[["~                   ",{"fg":4,"bold":true}],["|",{"inverse":true}],["109 ",{"fg":3,"bold":true}],["                                                                                                                ",{}],["|",{"inverse":true}],["~                     ",{"fg":4,"bold":true}]],"45":[["~                   ",{"fg":4,"bold":true}],["|",{"inverse":true}],["110 ",{"fg":3,"bold":true}],["                                                *g:calendar_mruler*                                             ",{"underline":true}],["|",{"inverse":true}],["~                     ",{"fg":4,"bold":true}]],"46":[["[Name] test.cpp      ",{"inverse":true}],[" NORMAL ",{"bold":true}],[" ",{}],["calendar.txt ",{"bold":true}],["                                                        unix │ utf-8 │ text │  50% ",{}],[" LN 110",{"bold":true}],[":1  ",{}],[" ",{"bold":true,"inverse":true}],[" ~/…/calendar-vim/doc>",{"bold":true}]]},"cursor":{"x":120,"y":14}}],[0.009003000000000001,{"lines":{"15":[["▼",{"fg":3,"bold":true}],[" Second",{"fg":5,"bold":true}],[" : ",{}],["struct",{"fg":2,"bold":true}],["   ",{}],["|",{"inverse":true}],[" 81 ",{"fg":3,"bold":true}],["Place a '*' or '+' mark after the day.  Acceptable values are 'left',                                           ",{}],["|",{"inverse":true}],[" 16 ",{"fg":3,"bold":true}],["▸ temp/",{"fg":6,"bold":true}],["           ",{}]],"16":[["    [prototypes]",{"fg":6,"bold":true}],["    ",{}],["|",{"inverse":true}],[" 82 ",{"fg":3,"bold":true}],["'left-fit', and 'right': >                                                                                      ",{}],["|",{"inverse":true}],[" 17 ",{"fg":3,"bold":true}],["  .bash_history   ",{}]],"17":[["   ",{}],["+",{"fg":2,"bold":true}],["SecondRun(void) ",{}],["|",{"inverse":true}],[" 83 ",{"fg":3,"bold":true}],["  let g:calendar_mark = 'right'                                                                                 ",{}],["|",{"inverse":true}],[" 18 ",{"fg":3,"bold":true}],["  .bash_logout    ",{}]],"18":[["   ",{}],["+",{"fg":2,"bold":true}],["SecondRun2(void)",{}],["|",{"inverse":true}],[" 84 ",{"fg":3,"bold":true}],["<                                                                                                               ",{}],["|",{"inverse":true}],[" 19 ",{"fg":3,"bold":true}],["  .bash_profile   ",{"underline":true}]],"19":[["                    ",{}],["|",{"inverse":true}],[" 85 ",{"fg":3,"bold":true}],["                                                                                                                ",{}],["|",{"inverse":true}],[" 20 ",{"fg":3,"bold":true}],["  .bashrc         ",{}]],"20":[["▼",{"fg":3,"bold":true}],[" ",{}],["functions",{"fg":6,"bold":true}],["         ",{}],["|",{"inverse":true}],[" 86 ",{"fg":3,"bold":true}],["                                                *g:calendar_diary*                                              ",{}],["|",{"inverse":true}],[" 21 ",{"fg":3,"bold":true}],["  .cshrc          ",{}]],"21":[["    main(int argc, c",{"underline":true}],["|",{"inverse":true}],[" 87 ",{"fg":3,"bold":true}],["Specify the directory for the diary files.  The default value is $HOME/diary.                                   ",{}],["|",{"inverse":true}],[" 22 ",{"fg":3,"bold":true}],["  .dmrc           ",{}]],"22":[["~                   ",{"fg":4,"bold":true}],["|",{"inverse":true}],[" 88 ",{"fg":3,"bold":true}],["  let g:calendar_diary=$HOME.'/.vim/diary'                                                                      ",{}],["|",{"inverse":true}],[" 23 ",{"fg":3,"bold":true}],["  .esd_auth       ",{}]],"23":[["~                   ",{"fg":4,"bold":true}],["|",{"inverse":true}],[" 89 ",{"fg":3,"bold":true}],["                                                                                                                ",{}],["|",{"inverse":true}],[" 24 ",{"fg":3,"bold":true}],["  .gtkrc-2.0      ",{}]],"24":[["~                   ",{"fg":4,"bold":true}],["|",{"inverse":true}],[" 90 ",{"fg":3,"bold":true}],["                                                                                                                ",{}],["|",{"inverse":true}],[" 25 ",{"fg":3,"bold":true}],["  .gtkrc-2.0-kde4 ",{}]],"25":[["~                   ",{"fg":4,"bold":true}],["|",{"inverse":true}],[" 91 ",{"fg":3,"bold":true}],["                                                *g:calendar_navi*                                               ",{}],["|",{"inverse":true}],[" 26 ",{"fg":3,"bold":true}],["  .lesshst        ",{}]],"26":[["~                   ",{"fg":4,"bold":true}],["|",{"inverse":true}],[" 92 ",{"fg":3,"bold":true}],["To control the calendar navigator, set this variable.  Acceptable values are                                    ",{}],["|",{"inverse":true}],[" 27 ",{"fg":3,"bold":true}],["  .tcshrc         ",{}]],"27":[["~                   ",{"fg":4,"bold":true}],["|",{"inverse":true}],[" 93 ",{"fg":3,"bold":true}],["'top', 'bottom', or 'both'. >                                                                                   ",{}],["|",{"inverse":true}],[" 28 ",{"fg":3,"bold":true}],["  .viminfo        ",{}]],"28":[["~                   ",{"fg":4,"bold":true}],["|",{"inverse":true}],[" 94 ",{"fg":3,"bold":true}],["  let g:calendar_navi = ''                                                                                      ",{}],["|",{"inverse":true}],[" 29 ",{"fg":3,"bold":true}],["  .vimrc          ",{}]],"29":[["~                   ",{"fg":4,"bold":true}],["|",{"inverse":true}],[" 95 ",{"fg":3,"bold":true}],["<                                                                                                               ",{}],["|",{"inverse":true}],[" 30 ",{"fg":3,"bold":true}],["  .xsession-errors",{}]],"30":[["~                   ",{"fg":4,"bold":true}],["|",{"inverse":true}],[" 96 ",{"fg":3,"bold":true}],["                                                                                                                ",{}],["|",{"inverse":true}],[" 31 ",{"fg":3,"bold":true}],["  anaconda-ks.cfg ",{}]],"31":[["~                   ",{"fg":4,"bold":true}],["|",{"inverse":true}],[" 97 ",{"fg":3,"bold":true}],["                                                *g:calendar_navi_label*                                         ",{}],["|",{"inverse":true}],[" 32 ",{"fg":3,"bold":true}],["  initial-setup-ks",{}]],"32":[["~                   ",{"fg":4,"bold":true}],["|",{"inverse":true}],[" 98 ",{"fg":3,"bold":true}],["To set the labels for the calendar navigator, for example to change the                                         ",{}],["|",{"inverse":true}],[" 33 ",{"fg":3,"bold":true}],["  test.c          ",{}]],"33":[["~                   ",{"fg":4,"bold":true}],["|",{"inverse":true}],[" 99 ",{"fg":3,"bold":true}],["language, use this variable.  Entries should be comma separated. >                                              ",{}],["|",{"inverse":true}],[" 34 ",{"fg":3,"bold":true}],["  test.cpp        ",{}]],"34":[["~                   ",{"fg":4,"bold":true}],["|",{"inverse":true}],["100 ",{"fg":3,"bold":true}],["  let g:calendar_navi_label = 'Prev,Today,Next'                                                                 ",{}],["|",{"inverse":true}],[" 35 ",{"fg":3,"bold":true}],["  .test.cpp.swp   ",{}]],"35":[["~                   ",{"fg":4,"bold":true}],["|",{"inverse":true}],["101 ",{"fg":3,"bold":true}],["<                                                                                                               ",{}],["|",{"inverse":true}],["~                     ",{"fg":4,"bold":true}]],"36":[["~                   ",{"fg":4,"bold":true}],["|",{"inverse":true}],["102 ",{"fg":3,"bold":true}],["                                                                                                                ",{}],["|",{"inverse":true}],["~                     ",{"fg":4,"bold":true}]],"37":[["~                   ",{"fg":4,"bold":true}],["|",{"inverse":true}],["103 ",{"fg":3,"bold":true}],["                                                *g:calendar_erafmt*                                             ",{}],["|",{"inverse":true}],["~                     ",{"fg":4,"bold":true}]],"38":[["~                   ",{"fg":4,"bold":true}],["|",{"inverse":true}],["104 ",{"fg":3,"bold":true}],["To change the dating system, set the following variable.  Include the name of                                   ",{}],["|",{"inverse":true}],["~                     ",{"fg":4,"bold":true}]],"39":[["~                   ",{"fg":4,"bold":true}],["|",{"inverse":true}],["105 ",{"fg":3,"bold":true}],["the dating system and its offset from the Georgian calendar (A.D.).  For                                        ",{}],["|",{"inverse":true}],["~                     ",{"fg":4,"bold":true}]],"40":[["~                   ",{"fg":4,"bold":true}],["|",{"inverse":true}],["106 ",{"fg":3,"bold":true}],["example, to use the current Japanese era (Heisei), you would set: >                                             ",{}],["|",{"inverse":true}],["~                     ",{"fg":4,"bold":true}]],"41":[["~                   ",{"fg":4,"bold":true}],["|",{"inverse":true}],["107 ",{"fg":3,"bold":true}],["  let g:calendar_erafmt = 'Heisei,-1988'                                                                        ",{}],["|",{"inverse":true}],["~                     ",{"fg":4,"bold":true}]],"42":[["~                   ",{"fg":4,"bold":true}],["|",{"inverse":true}],["108 ",{"fg":3,"bold":true}],["<                                                                                                               ",{}],["|",{"inverse":true}],["~                     ",{"fg":4,"bold":true}]],"43":[["~                   ",{"fg":4,"bold":true}],["|",{"inverse":true}],["109 ",{"fg":3,"bold":true}],["                                                                                                                ",{}],["|",{"inverse":true}],["~                     ",{"fg":4,"bold":true}]],"44":[["~                   ",{"fg":4,"bold":true}],["|",{"inverse":true}],["110 ",{"fg":3,"bold":true}],["                                                *g:calendar_mruler*                                             ",{}],["|",{"inverse":true}],["~                     ",{"fg":4,"bold":true}]],"45":[["~                   ",{"fg":4,"bold":true}],["|",{"inverse":true}],["111 ",{"fg":3,"bold":true}],["To change the month names for the calendar headings, set this variable.  The                                    ",{"underline":true}],["|",{"inverse":true}],["~                     ",{"fg":4,"bold":true}]],"46":[["[Name] test.cpp      ",{"inverse":true}],[" NORMAL ",{"bold":true}],[" ",{}],["calendar.txt ",{"bold":true}],["                                                        unix │ utf-8 │ text │  50% ",{}],[" LN 111",{"bold":true}],[":1  ",{}],[" ",{"bold":true,"inverse":true}],[" ~/…/calendar-vim/doc>",{"bold":true}]]},"cursor":{"x":25,"y":45,"visible":true}}],[0.029511,{"lines":{"0":[["\" Press <F1> for hel",{"fg":6,"bold":true}],["|",{"inverse":true}],[" 67 ",{"fg":3,"bold":true}],["'close'                     Closes calendar window.             'q'                                             ",{}],["|",{"inverse":true}],["  1 ",{"fg":3,"bold":true}],["\" Press ? for help",{"fg":5,"bold":true}]],"1":[["                    ",{}],["|",{"inverse":true}],[" 68 ",{"fg":3,"bold":true}],["'do_action'                 Executes |calendar_action|.           '<CR>'                                        ",{}],["|",{"inverse":true}],["  2 ",{"fg":3,"bold":true}],["                  ",{}]],"2":[["▼",{"fg":3,"bold":true}],[" First",{"fg":5,"bold":true}],[" : ",{}],["struct",{"fg":2,"bold":true}],["    ",{}],["|",{"inverse":true}],[" 69 ",{"fg":3,"bold":true}],["'goto_today'                Executes |calendar_today|.            't'                                           ",{}],["|",{"inverse":true}],["  3 ",{"fg":3,"bold":true}],[".. (up a dir)",{"fg":6,"bold":true}],["     ",{}]],"3":[["    [prototypes]",{"fg":6,"bold":true}],["    ",{}],["|",{"inverse":true}],[" 70 ",{"fg":3,"bold":true}],["'show_help'                 Displays a short help message.      '?'                                             ",{}],["|",{"inverse":true}],["  4 /root/",{"fg":3,"bold":true}],["            ",{}]],"4":[["   ",{}],["+",{"fg":2,"bold":true}],["FirstRun(void)  ",{}],["|",{"inverse":true}],[" 71 ",{"fg":3,"bold":true}],["'redisplay'                 Redraws calendar window.            'r'                                             ",{}],["|",{"inverse":true}],["  5 ",{"fg":3,"bold":true}],["▸ .asciinema/",{"fg":6,"bold":true}],["     ",{}]],"5":[["   ",{}],["+",{"fg":2,"bold":true}],["FirstRun2(void) ",{}],["|",{"inverse":true}],[" 72 ",{"fg":3,"bold":true}],["'goto_next_month'           Jumps to the next month.            '<Right>'                                       ",{}],["|",{"inverse":true}],["  6 ",{"fg":3,"bold":true}],["▸ .cache/",{"fg":6,"bold":true}],["         ",{}]],"6":[["                    ",{}],["|",{"inverse":true}],[" 73 ",{"fg":3,"bold":true}],["'goto_prev_month'           Jumps to the previous month.        '<Left>'                                        ",{}],["|",{"inverse":true}],["  7 ",{"fg":3,"bold":true}],["▸ .config/",{"fg":6,"bold":true}],["        ",{}]],"7":[["▼",{"fg":3,"bold":true}],[" Last",{"fg":5,"bold":true}],[" : ",{}],["struct",{"fg":2,"bold":true}],["     ",{}],["|",{"inverse":true}],[" 74 ",{"fg":3,"bold":true}],["'goto_prev_month'           Jumps to the previous month.        '<Left>'                                        ",{}],["|",{"inverse":true}],["  8 ",{"fg":3,"bold":true}],["▸ .dbus/",{"fg":6,"bold":true}],["          ",{}]]},"cursor":{"y":7,"visible":false}}],[0.007601,{"lines":{"7":[["▼",{"fg":3,"bold":true}],[" Last",{"fg":5,"bold":true}],[" : ",{}],["struct",{"fg":2,"bold":true}],["     ",{}],["|",{"inverse":true}],[" 74 ",{"fg":3,"bold":true}],["'goto_next_year'            Jumps to the next year.             '<Up>'                                          ",{}],["|",{"inverse":true}],["  8 ",{"fg":3,"bold":true}],["▸ .dbus/",{"fg":6,"bold":true}],["          ",{}]],"8":[["    [functions]",{"fg":6,"bold":true}],["     ",{}],["|",{"inverse":true}],[" 75 ",{"fg":3,"bold":true}],["'goto_prev_year'            Jumps to the previous year.         '<Down>'                                        ",{}],["|",{"inverse":true}],["  9 ",{"fg":3,"bold":true}],["▸ .gnupg/",{"fg":6,"bold":true}],["         ",{}]],"9":[["   ",{}],["+",{"fg":2,"bold":true}],["FirstRun(void)  ",{}],["|",{"inverse":true}],[" 76 ",{"fg":3,"bold":true}],["An example in your .vimrc might look like this: >                                                               ",{}],["|",{"inverse":true}],[" 10 ",{"fg":3,"bold":true}],["▸ .kde/",{"fg":6,"bold":true}],["           ",{}]],"10":[["   ",{}],["+",{"fg":2,"bold":true}],["FirstRun2(void) ",{}],["|",{"inverse":true}],[" 77 ",{"fg":3,"bold":true}],["  let g:calendar_keys = { 'goto_next_month': '<C-Right>', 'goto_prev_month': '<C-Left>'}                        ",{}],["|",{"inverse":true}],[" 11 ",{"fg":3,"bold":true}],["▸ .local/",{"fg":6,"bold":true}],["         ",{}]],"11":[["   ",{}],["+",{"fg":2,"bold":true}],["~Last()         ",{}],["|",{"inverse":true}],[" 78 ",{"fg":3,"bold":true}],["<                                                                                                               ",{}],["|",{"inverse":true}],[" 12 ",{"fg":3,"bold":true}],["▸ .pki/",{"fg":6,"bold":true}],["           ",{}]],"12":[["   ",{}],["+",{"fg":2,"bold":true}],["SecondRun(void) ",{}],["|",{"inverse":true}],[" 79 ",{"fg":3,"bold":true}],["                                                                                                                ",{}],["|",{"inverse":true}],[" 13 ",{"fg":3,"bold":true}],["▸ .ssh/",{"fg":6,"bold":true}],["           ",{}]],"13":[["   ",{}],["+",{"fg":2,"bold":true}],["SecondRun2(void)",{}],["|",{"inverse":true}],[" 80 ",{"fg":3,"bold":true}],["                                                *g:calendar_mark*                                               ",{}],["|",{"inverse":true}],[" 14 ",{"fg":3,"bold":true}],["▸ .vim/",{"fg":6,"bold":true}],["           ",{}]],"14":[["                    ",{}],["|",{"inverse":true}],[" 81 ",{"fg":3,"bold":true}],["Place a '*' or '+' mark after the day.  Acceptable values are 'left',                                           ",{}],["|",{"inverse":true}],[" 15 ",{"fg":3,"bold":true}],["▸ diary/",{"fg":6,"bold":true}],["          ",{}]],"15":[["▼",{"fg":3,"bold":true}],[" Second",{"fg":5,"bold":true}],[" : ",{}],["struct",{"fg":2,"bold":true}],["   ",{}],["|",{"inverse":true}],[" 82 ",{"fg":3,"bold":true}],["'left-fit', and 'right': >                                                                                      ",{}],["|",{"inverse":true}],[" 16 ",{"fg":3,"bold":true}],["▸ temp/",{"fg":6,"bold":true}],["           ",{}]],"16":[["    [prototypes]",{"fg":6,"bold":true}],["    ",{}],["|",{"inverse":true}],[" 83 ",{"fg":3,"bold":true}],["  let g:calendar_mark = 'right'                                                                                 ",{}],["|",{"inverse":true}],[" 17 ",{"fg":3,"bold":true}],["  .bash_history   ",{}]],"17":[["   ",{}],["+",{"fg":2,"bold":true}],["SecondRun(void) ",{}],["|",{"inverse":true}],[" 84 ",{"fg":3,"bold":true}],["<                                                                                                               ",{}],["|",{"inverse":true}],[" 18 ",{"fg":3,"bold":true}],["  .bash_logout    ",{}]],"18":[["   ",{}],["+",{"fg":2,"bold":true}],["SecondRun2(void)",{}],["|",{"inverse":true}],[" 85 ",{"fg":3,"bold":true}],["                                                                                                                ",{}],["|",{"inverse":true}],[" 19 ",{"fg":3,"bold":true}],["  .bash_profile   ",{"underline":true}]],"19":[["                    ",{}],["|",{"inverse":true}],[" 86 ",{"fg":3,"bold":true}],["                                                *g:calendar_diary*                                              ",{}],["|",{"inverse":true}],[" 20 ",{"fg":3,"bold":true}],["  .bashrc         ",{}]],"20":[["▼",{"fg":3,"bold":true}],[" ",{}],["functions",{"fg":6,"bold":true}],["         ",{}],["|",{"inverse":true}],[" 87 ",{"fg":3,"bold":true}],["Specify the directory for the diary files.  The default value is $HOME/diary.                                   ",{}],["|",{"inverse":true}],[" 21 ",{"fg":3,"bold":true}],["  .cshrc          ",{}]],"21":[["    main(int argc, c",{"underline":true}],["|",{"inverse":true}],[" 88 ",{"fg":3,"bold":true}],["  let g:calendar_diary=$HOME.'/.vim/diary'                                                                      ",{}],["|",{"inverse":true}],[" 22 ",{"fg":3,"bold":true}],["  .dmrc           ",{}]],"22":[["~                   ",{"fg":4,"bold":true}],["|",{"inverse":true}],[" 89 ",{"fg":3,"bold":true}],["                                                                                                                ",{}],["|",{"inverse":true}],[" 23 ",{"fg":3,"bold":true}],["  .esd_auth       ",{}]],"23":[["~                   ",{"fg":4,"bold":true}],["|",{"inverse":true}],[" 90 ",{"fg":3,"bold":true}],["                                                                                                                ",{}],["|",{"inverse":true}],[" 24 ",{"fg":3,"bold":true}],["  .gtkrc-2.0      ",{}]],"24":[["~                   ",{"fg":4,"bold":true}],["|",{"inverse":true}],[" 91 ",{"fg":3,"bold":true}],["                                                *g:calendar_navi*                                               ",{}],["|",{"inverse":true}],[" 25 ",{"fg":3,"bold":true}],["  .gtkrc-2.0-kde4 ",{}]],"25":[["~                   ",{"fg":4,"bold":true}],["|",{"inverse":true}],[" 92 ",{"fg":3,"bold":true}],["To control the calendar navigator, set this variable.  Acceptable values are                                    ",{}],["|",{"inverse":true}],[" 26 ",{"fg":3,"bold":true}],["  .lesshst        ",{}]],"26":[["~                   ",{"fg":4,"bold":true}],["|",{"inverse":true}],[" 93 ",{"fg":3,"bold":true}],["'top', 'bottom', or 'both'. >                                                                                   ",{}],["|",{"inverse":true}],[" 27 ",{"fg":3,"bold":true}],["  .tcshrc         ",{}]],"27":[["~                   ",{"fg":4,"bold":true}],["|",{"inverse":true}],[" 94 ",{"fg":3,"bold":true}],["  let g:calendar_navi = ''                                                                                      ",{}],["|",{"inverse":true}],[" 28 ",{"fg":3,"bold":true}],["  .viminfo        ",{}]],"28":[["~                   ",{"fg":4,"bold":true}],["|",{"inverse":true}],[" 95 ",{"fg":3,"bold":true}],["<                                                                                                               ",{}],["|",{"inverse":true}],[" 29 ",{"fg":3,"bold":true}],["  .vimrc          ",{}]],"29":[["~                   ",{"fg":4,"bold":true}],["|",{"inverse":true}],[" 96 ",{"fg":3,"bold":true}],["                                                                                                                ",{}],["|",{"inverse":true}],[" 30 ",{"fg":3,"bold":true}],["  .xsession-errors",{}]],"30":[["~                   ",{"fg":4,"bold":true}],["|",{"inverse":true}],[" 97 ",{"fg":3,"bold":true}],["                                                *g:calendar_navi_label*                                         ",{}],["|",{"inverse":true}],[" 31 ",{"fg":3,"bold":true}],["  anaconda-ks.cfg ",{}]],"31":[["~                   ",{"fg":4,"bold":true}],["|",{"inverse":true}],[" 98 ",{"fg":3,"bold":true}],["To set the labels for the calendar navigator, for example to change the                                         ",{}],["|",{"inverse":true}],[" 32 ",{"fg":3,"bold":true}],["  initial-setup-ks",{}]],"32":[["~                   ",{"fg":4,"bold":true}],["|",{"inverse":true}],[" 99 ",{"fg":3,"bold":true}],["language, use this variable.  Entries should be comma separated. >                                              ",{}],["|",{"inverse":true}],[" 33 ",{"fg":3,"bold":true}],["  test.c          ",{}]],"33":[["~                   ",{"fg":4,"bold":true}],["|",{"inverse":true}],["100 ",{"fg":3,"bold":true}],["  let g:calendar_navi_label = 'Prev,Today,Next'                                                                 ",{}],["|",{"inverse":true}],[" 34 ",{"fg":3,"bold":true}],["  test.cpp        ",{}]],"34":[["~                   ",{"fg":4,"bold":true}],["|",{"inverse":true}],["101 ",{"fg":3,"bold":true}],["<                                                                                                               ",{}],["|",{"inverse":true}],[" 35 ",{"fg":3,"bold":true}],["  .test.cpp.swp   ",{}]],"35":[["~                   ",{"fg":4,"bold":true}],["|",{"inverse":true}],["102 ",{"fg":3,"bold":true}],["                                                                                                                ",{}],["|",{"inverse":true}],["~                     ",{"fg":4,"bold":true}]],"36":[["~                   ",{"fg":4,"bold":true}],["|",{"inverse":true}],["103 ",{"fg":3,"bold":true}],["                                                *g:calendar_erafmt*                                             ",{}],["|",{"inverse":true}],["~                     ",{"fg":4,"bold":true}]],"37":[["~                   ",{"fg":4,"bold":true}],["|",{"inverse":true}],["104 ",{"fg":3,"bold":true}],["To change the dating system, set the following variable.  Include the name of                                   ",{}],["|",{"inverse":true}],["~                     ",{"fg":4,"bold":true}]],"38":[["~                   ",{"fg":4,"bold":true}],["|",{"inverse":true}],["105 ",{"fg":3,"bold":true}],["the dating system and its offset from the Georgian calendar (A.D.).  For                                        ",{}],["|",{"inverse":true}],["~                     ",{"fg":4,"bold":true}]],"39":[["~                   ",{"fg":4,"bold":true}],["|",{"inverse":true}],["106 ",{"fg":3,"bold":true}],["example, to use the current Japanese era (Heisei), you would set: >                                             ",{}],["|",{"inverse":true}],["~                     ",{"fg":4,"bold":true}]],"40":[["~                   ",{"fg":4,"bold":true}],["|",{"inverse":true}],["107 ",{"fg":3,"bold":true}],["  let g:calendar_erafmt = 'Heisei,-1988'                                                                        ",{}],["|",{"inverse":true}],["~                     ",{"fg":4,"bold":true}]],"41":[["~                   ",{"fg":4,"bold":true}],["|",{"inverse":true}],["108 ",{"fg":3,"bold":true}],["<                                                                                                               ",{}],["|",{"inverse":true}],["~                     ",{"fg":4,"bold":true}]],"42":[["~                   ",{"fg":4,"bold":true}],["|",{"inverse":true}],["109 ",{"fg":3,"bold":true}],["                                                                                                                ",{}],["|",{"inverse":true}],["~                     ",{"fg":4,"bold":true}]],"43":[["~                   ",{"fg":4,"bold":true}],["|",{"inverse":true}],["110 ",{"fg":3,"bold":true}],["                                                *g:calendar_mruler*                                             ",{}],["|",{"inverse":true}],["~                     ",{"fg":4,"bold":true}]],"44":[["~                   ",{"fg":4,"bold":true}],["|",{"inverse":true}],["111 ",{"fg":3,"bold":true}],["To change the month names for the calendar headings, set this variable.  The                                    ",{}],["|",{"inverse":true}],["~                     ",{"fg":4,"bold":true}]],"45":[["~                   ",{"fg":4,"bold":true}],["|",{"inverse":true}],["112 ",{"fg":3,"bold":true}],["value is expected to be a comma-separated list of twelve values, starting with                                  ",{"underline":true}],["|",{"inverse":true}],["~                     ",{"fg":4,"bold":true}]],"46":[["[Name] test.cpp      ",{"inverse":true}],[" NORMAL ",{"bold":true}],[" ",{}],["calendar.txt ",{"bold":true}],["                                                        unix │ utf-8 │ text │  50% ",{}],[" LN 112",{"bold":true}],[":1  ",{}],[" ",{"bold":true,"inverse":true}],[" ~/…/calendar-vim/doc>",{"bold":true}]]},"cursor":{"y":45,"visible":true}}],[0.020379,{"lines":{"47":[["                                                                                                                                                     j          ",{}]]},"cursor":{"visible":false}}],[0.003192,{"lines":{"0":[["\" Press <F1> for hel",{"fg":6,"bold":true}],["|",{"inverse":true}],[" 68 ",{"fg":3,"bold":true}],["'do_action'                 Executes |calendar_action|.           '<CR>'                                        ",{}],["|",{"inverse":true}],["  1 ",{"fg":3,"bold":true}],["\" Press ? for help",{"fg":5,"bold":true}]],"1":[["                    ",{}],["|",{"inverse":true}],[" 69 ",{"fg":3,"bold":true}],["'goto_today'                Executes |calendar_today|.            't'                                           ",{}],["|",{"inverse":true}],["  2 ",{"fg":3,"bold":true}],["                  ",{}]],"2":[["▼",{"fg":3,"bold":true}],[" First",{"fg":5,"bold":true}],[" : ",{}],["struct",{"fg":2,"bold":true}],["    ",{}],["|",{"inverse":true}],[" 70 ",{"fg":3,"bold":true}],["'show_help'                 Displays a short help message.      '?'                                             ",{}],["|",{"inverse":true}],["  3 ",{"fg":3,"bold":true}],[".. (up a dir)",{"fg":6,"bold":true}],["     ",{}]],"3":[["    [prototypes]",{"fg":6,"bold":true}],["    ",{}],["|",{"inverse":true}],[" 71 ",{"fg":3,"bold":true}],["'redisplay'                 Redraws calendar window.            'r'                                             ",{}],["|",{"inverse":true}],["  4 /root/",{"fg":3,"bold":true}],["            ",{}]],"4":[["   ",{}],["+",{"fg":2,"bold":true}],["FirstRun(void)  ",{}],["|",{"inverse":true}],[" 72 ",{"fg":3,"bold":true}],["'goto_next_month'           Jumps to the next month.            '<Right>'                                       ",{}],["|",{"inverse":true}],["  5 ",{"fg":3,"bold":true}],["▸ .asciinema/",{"fg":6,"bold":true}],["     ",{}]],"5":[["   ",{}],["+",{"fg":2,"bold":true}],["FirstRun2(void) ",{}],["|",{"inverse":true}],[" 73 ",{"fg":3,"bold":true}],["'goto_prev_month'           Jumps to the previous month.        '<Left>'                                        ",{}],["|",{"inverse":true}],["  6 ",{"fg":3,"bold":true}],["▸ .cache/",{"fg":6,"bold":true}],["         ",{}]],"6":[["                    ",{}],["|",{"inverse":true}],[" 74 ",{"fg":3,"bold":true}],["'goto_next_year'            Jumps to the next year.             '<Up>'                                          ",{}],["|",{"inverse":true}],["  7 ",{"fg":3,"bold":true}],["▸ .config/",{"fg":6,"bold":true}],["        ",{}]],"7":[["▼",{"fg":3,"bold":true}],[" Last",{"fg":5,"bold":true}],[" : ",{}],["struct",{"fg":2,"bold":true}],["     ",{}],["|",{"inverse":true}],[" 75 ",{"fg":3,"bold":true}],["'goto_prev_year'            Jumps to the previous year.         '<Down>'                                        ",{}],["|",{"inverse":true}],["  8 ",{"fg":3,"bold":true}],["▸ .dbus/",{"fg":6,"bold":true}],["          ",{}]],"8":[["    [functions]",{"fg":6,"bold":true}],["     ",{}],["|",{"inverse":true}],[" 76 ",{"fg":3,"bold":true}],["An example in your .vimrc might look like this: >                                                               ",{}],["|",{"inverse":true}],["  9 ",{"fg":3,"bold":true}],["▸ .gnupg/",{"fg":6,"bold":true}],["         ",{}]],"9":[["   ",{}],["+",{"fg":2,"bold":true}],["FirstRun(void)  ",{}],["|",{"inverse":true}],[" 77 ",{"fg":3,"bold":true}],["  let g:calendar_keys = { 'goto_next_month': '<C-Right>', 'goto_prev_month': '<C-Left>'}                        ",{}],["|",{"inverse":true}],[" 10 ",{"fg":3,"bold":true}],["▸ .kde/",{"fg":6,"bold":true}],["           ",{}]],"10":[["   ",{}],["+",{"fg":2,"bold":true}],["FirstRun2(void) ",{}],["|",{"inverse":true}],[" 78 ",{"fg":3,"bold":true}],["<                                                                                                               ",{}],["|",{"inverse":true}],[" 11 ",{"fg":3,"bold":true}],["▸ .local/",{"fg":6,"bold":true}],["         ",{}]],"11":[["   ",{}],["+",{"fg":2,"bold":true}],["~Last()         ",{}],["|",{"inverse":true}],[" 79 ",{"fg":3,"bold":true}],["                                                                                                                ",{}],["|",{"inverse":true}],[" 12 ",{"fg":3,"bold":true}],["▸ .pki/",{"fg":6,"bold":true}],["           ",{}]],"12":[["   ",{}],["+",{"fg":2,"bold":true}],["SecondRun(void) ",{}],["|",{"inverse":true}],[" 80 ",{"fg":3,"bold":true}],["                                                *g:calendar_mark*                                               ",{}],["|",{"inverse":true}],[" 13 ",{"fg":3,"bold":true}],["▸ .ssh/",{"fg":6,"bold":true}],["           ",{}]],"13":[["   ",{}],["+",{"fg":2,"bold":true}],["SecondRun2(void)",{}],["|",{"inverse":true}],[" 81 ",{"fg":3,"bold":true}],["Place a '*' or '+' mark after the day.  Acceptable values are 'left',                                           ",{}],["|",{"inverse":true}],[" 14 ",{"fg":3,"bold":true}],["▸ .vim/",{"fg":6,"bold":true}],["           ",{}]],"14":[["                    ",{}],["|",{"inverse":true}],[" 82 ",{"fg":3,"bold":true}],["'left-fit', and 'right': >                                                                                      ",{}],["|",{"inverse":true}],[" 15 ",{"fg":3,"bold":true}],["▸ diary/",{"fg":6,"bold":true}],["          ",{}]],"15":[["▼",{"fg":3,"bold":true}],[" Second",{"fg":5,"bold":true}],[" : ",{}],["struct",{"fg":2,"bold":true}],["   ",{}],["|",{"inverse":true}],[" 83 ",{"fg":3,"bold":true}],["  let g:calendar_mark = 'right'                                                                                 ",{}],["|",{"inverse":true}],[" 16 ",{"fg":3,"bold":true}],["▸ temp/",{"fg":6,"bold":true}],["           ",{}]],"16":[["    [prototypes]",{"fg":6,"bold":true}],["    ",{}],["|",{"inverse":true}],[" 84 ",{"fg":3,"bold":true}],["<                                                                                                               ",{}],["|",{"inverse":true}],[" 17 ",{"fg":3,"bold":true}],["  .bash_history   ",{}]],"17":[["   ",{}],["+",{"fg":2,"bold":true}],["SecondRun(void) ",{}],["|",{"inverse":true}],[" 85 ",{"fg":3,"bold":true}],["                                                                                                                ",{}],["|",{"inverse":true}],[" 18 ",{"fg":3,"bold":true}],["  .bash_logout    ",{}]],"18":[["   ",{}],["+",{"fg":2,"bold":true}],["SecondRun2(void)",{}],["|",{"inverse":true}],[" 86 ",{"fg":3,"bold":true}],["                                                *g:calendar_diary*                                              ",{}],["|",{"inverse":true}],[" 19 ",{"fg":3,"bold":true}],["  .bash_profile   ",{"underline":true}]],"19":[["                    ",{}],["|",{"inverse":true}],[" 87 ",{"fg":3,"bold":true}],["Specify the directory for the diary files.  The default value is $HOME/diary.                                   ",{}],["|",{"inverse":true}],[" 20 ",{"fg":3,"bold":true}],["  .bashrc         ",{}]],"20":[["▼",{"fg":3,"bold":true}],[" ",{}],["functions",{"fg":6,"bold":true}],["         ",{}],["|",{"inverse":true}],[" 88 ",{"fg":3,"bold":true}],["  let g:calendar_diary=$HOME.'/.vim/diary'                                                                      ",{}],["|",{"inverse":true}],[" 21 ",{"fg":3,"bold":true}],["  .cshrc          ",{}]],"21":[["    main(int argc, c",{"underline":true}],["|",{"inverse":true}],[" 89 ",{"fg":3,"bold":true}],["                                                                                                                ",{}],["|",{"inverse":true}],[" 22 ",{"fg":3,"bold":true}],["  .dmrc           ",{}]],"22":[["~                   ",{"fg":4,"bold":true}],["|",{"inverse":true}],[" 90 ",{"fg":3,"bold":true}],["                                                                                                                ",{}],["|",{"inverse":true}],[" 23 ",{"fg":3,"bold":true}],["  .esd_auth       ",{}]],"23":[["~                   ",{"fg":4,"bold":true}],["|",{"inverse":true}],[" 91 ",{"fg":3,"bold":true}],["                                                *g:calendar_navi*                                               ",{}],["|",{"inverse":true}],[" 24 ",{"fg":3,"bold":true}],["  .gtkrc-2.0      ",{}]],"24":[["~                   ",{"fg":4,"bold":true}],["|",{"inverse":true}],[" 92 ",{"fg":3,"bold":true}],["To control the calendar navigator, set this variable.  Acceptable values are                                    ",{}],["|",{"inverse":true}],[" 25 ",{"fg":3,"bold":true}],["  .gtkrc-2.0-kde4 ",{}]],"25":[["~                   ",{"fg":4,"bold":true}],["|",{"inverse":true}],[" 93 ",{"fg":3,"bold":true}],["'top', 'bottom', or 'both'. >                                                                                   ",{}],["|",{"inverse":true}],[" 26 ",{"fg":3,"bold":true}],["  .lesshst        ",{}]],"26":[["~                   ",{"fg":4,"bold":true}],["|",{"inverse":true}],[" 94 ",{"fg":3,"bold":true}],["  let g:calendar_navi = ''                                                                                      ",{}],["|",{"inverse":true}],[" 27 ",{"fg":3,"bold":true}],["  .tcshrc         ",{}]],"27":[["~                   ",{"fg":4,"bold":true}],["|",{"inverse":true}],[" 95 ",{"fg":3,"bold":true}],["<                                                                                                               ",{}],["|",{"inverse":true}],[" 28 ",{"fg":3,"bold":true}],["  .viminfo        ",{}]],"28":[["~                   ",{"fg":4,"bold":true}],["|",{"inverse":true}],[" 96 ",{"fg":3,"bold":true}],["                                                                                                                ",{}],["|",{"inverse":true}],[" 29 ",{"fg":3,"bold":true}],["  .vimrc          ",{}]],"29":[["~                   ",{"fg":4,"bold":true}],["|",{"inverse":true}],[" 97 ",{"fg":3,"bold":true}],["                                                *g:calendar_navi_label*                                         ",{}],["|",{"inverse":true}],[" 30 ",{"fg":3,"bold":true}],["  .xsession-errors",{}]],"47":[["                                                                                                                                                                ",{}]]},"cursor":{"x":112,"y":29}}],[0.020182,{"lines":{"30":[["~                   ",{"fg":4,"bold":true}],["|",{"inverse":true}],[" 98 ",{"fg":3,"bold":true}],["To set the labels for the calendar navigator, for example to change the                                         ",{}],["|",{"inverse":true}],[" 31 ",{"fg":3,"bold":true}],["  anaconda-ks.cfg ",{}]],"31":[["~                   ",{"fg":4,"bold":true}],["|",{"inverse":true}],[" 99 ",{"fg":3,"bold":true}],["language, use this variable.  Entries should be comma separated. >                                              ",{}],["|",{"inverse":true}],[" 32 ",{"fg":3,"bold":true}],["  initial-setup-ks",{}]],"32":[["~                   ",{"fg":4,"bold":true}],["|",{"inverse":true}],["100 ",{"fg":3,"bold":true}],["  let g:calendar_navi_label = 'Prev,Today,Next'                                                                 ",{}],["|",{"inverse":true}],[" 33 ",{"fg":3,"bold":true}],["  test.c          ",{}]],"33":[["~                   ",{"fg":4,"bold":true}],["|",{"inverse":true}],["101 ",{"fg":3,"bold":true}],["<                                                                                                               ",{}],["|",{"inverse":true}],[" 34 ",{"fg":3,"bold":true}],["  test.cpp        ",{}]],"34":[["~                   ",{"fg":4,"bold":true}],["|",{"inverse":true}],["102 ",{"fg":3,"bold":true}],["                                                                                                                ",{}],["|",{"inverse":true}],[" 35 ",{"fg":3,"bold":true}],["  .test.cpp.swp   ",{}]],"35":[["~                   ",{"fg":4,"bold":true}],["|",{"inverse":true}],["103 ",{"fg":3,"bold":true}],["                                                *g:calendar_erafmt*                                             ",{}],["|",{"inverse":true}],["~                     ",{"fg":4,"bold":true}]],"36":[["~                   ",{"fg":4,"bold":true}],["|",{"inverse":true}],["104 ",{"fg":3,"bold":true}],["To change the dating system, set the following variable.  Include the name of                                   ",{}],["|",{"inverse":true}],["~                     ",{"fg":4,"bold":true}]],"37":[["~                   ",{"fg":4,"bold":true}],["|",{"inverse":true}],["105 ",{"fg":3,"bold":true}],["the dating systating system, set the following variable.  Include the name of                                   ",{}],["|",{"inverse":true}],["~                     ",{"fg":4,"bold":true}]]},"cursor":{"x":40,"y":37}}],[0.016322,{"lines":{"0":[["\" Press <F1> for hel",{"fg":6,"bold":true}],["|",{"inverse":true}],[" 69 ",{"fg":3,"bold":true}],["'goto_today'                Executes |calendar_today|.            't'                                           ",{}],["|",{"inverse":true}],["  1 ",{"fg":3,"bold":true}],["\" Press ? for help",{"fg":5,"bold":true}]],"1":[["                    ",{}],["|",{"inverse":true}],[" 70 ",{"fg":3,"bold":true}],["'show_help'                 Displays a short help message.      '?'                                             ",{}],["|",{"inverse":true}],["  2 ",{"fg":3,"bold":true}],["                  ",{}]],"2":[["▼",{"fg":3,"bold":true}],[" First",{"fg":5,"bold":true}],[" : ",{}],["struct",{"fg":2,"bold":true}],["    ",{}],["|",{"inverse":true}],[" 71 ",{"fg":3,"bold":true}],["'redisplay'                 Redraws calendar window.            'r'                                             ",{}],["|",{"inverse":true}],["  3 ",{"fg":3,"bold":true}],[".. (up a dir)",{"fg":6,"bold":true}],["     ",{}]],"3":[["    [prototypes]",{"fg":6,"bold":true}],["    ",{}],["|",{"inverse":true}],[" 72 ",{"fg":3,"bold":true}],["'goto_next_month'           Jumps to the next month.            '<Right>'                                       ",{}],["|",{"inverse":true}],["  4 /root/",{"fg":3,"bold":true}],["            ",{}]],"4":[["   ",{}],["+",{"fg":2,"bold":true}],["FirstRun(void)  ",{}],["|",{"inverse":true}],[" 73 ",{"fg":3,"bold":true}],["'goto_prev_month'           Jumps to the previous month.        '<Left>'                                        ",{}],["|",{"inverse":true}],["  5 ",{"fg":3,"bold":true}],["▸ .asciinema/",{"fg":6,"bold":true}],["     ",{}]],"5":[["   ",{}],["+",{"fg":2,"bold":true}],["FirstRun2(void) ",{}],["|",{"inverse":true}],[" 74 ",{"fg":3,"bold":true}],["'goto_next_year'            Jumps to the next year.             '<Up>'                                          ",{}],["|",{"inverse":true}],["  6 ",{"fg":3,"bold":true}],["▸ .cache/",{"fg":6,"bold":true}],["         ",{}]],"6":[["                    ",{}],["|",{"inverse":true}],[" 75 ",{"fg":3,"bold":true}],["'goto_prev_year'            Jumps to the previous year.         '<Down>'                                        ",{}],["|",{"inverse":true}],["  7 ",{"fg":3,"bold":true}],["▸ .config/",{"fg":6,"bold":true}],["        ",{}]],"7":[["▼",{"fg":3,"bold":true}],[" Last",{"fg":5,"bold":true}],[" : ",{}],["struct",{"fg":2,"bold":true}],["     ",{}],["|",{"inverse":true}],[" 76 ",{"fg":3,"bold":true}],["An example in your .vimrc might look like this: >                                                               ",{}],["|",{"inverse":true}],["  8 ",{"fg":3,"bold":true}],["▸ .dbus/",{"fg":6,"bold":true}],["          ",{}]],"8":[["    [functions]",{"fg":6,"bold":true}],["     ",{}],["|",{"inverse":true}],[" 77 ",{"fg":3,"bold":true}],["  let g:calendar_keys = { 'goto_next_month': '<C-Right>', 'goto_prev_month': '<C-Left>'}                        ",{}],["|",{"inverse":true}],["  9 ",{"fg":3,"bold":true}],["▸ .gnupg/",{"fg":6,"bold":true}],["         ",{}]],"9":[["   ",{}],["+",{"fg":2,"bold":true}],["FirstRun(void)  ",{}],["|",{"inverse":true}],[" 78 ",{"fg":3,"bold":true}],["<                                                                                                               ",{}],["|",{"inverse":true}],[" 10 ",{"fg":3,"bold":true}],["▸ .kde/",{"fg":6,"bold":true}],["           ",{}]],"10":[["   ",{}],["+",{"fg":2,"bold":true}],["FirstRun2(void) ",{}],["|",{"inverse":true}],[" 79 ",{"fg":3,"bold":true}],["                                                                                                                ",{}],["|",{"inverse":true}],[" 11 ",{"fg":3,"bold":true}],["▸ .local/",{"fg":6,"bold":true}],["         ",{}]],"11":[["   ",{}],["+",{"fg":2,"bold":true}],["~Last()         ",{}],["|",{"inverse":true}],[" 80 ",{"fg":3,"bold":true}],["                                                *g:calendar_mark*                                               ",{}],["|",{"inverse":true}],[" 12 ",{"fg":3,"bold":true}],["▸ .pki/",{"fg":6,"bold":true}],["           ",{}]],"12":[["   ",{}],["+",{"fg":2,"bold":true}],["SecondRun(void) ",{}],["|",{"inverse":true}],[" 81 ",{"fg":3,"bold":true}],["Place a '*' or '+' mark after the day.  Acceptable values are 'left',                                           ",{}],["|",{"inverse":true}],[" 13 ",{"fg":3,"bold":true}],["▸ .ssh/",{"fg":6,"bold":true}],["           ",{}]],"13":[["   ",{}],["+",{"fg":2,"bold":true}],["SecondRun2(void)",{}],["|",{"inverse":true}],[" 82 ",{"fg":3,"bold":true}],["'left-fit', and 'right': >                                                                                      ",{}],["|",{"inverse":true}],[" 14 ",{"fg":3,"bold":true}],["▸ .vim/",{"fg":6,"bold":true}],["           ",{}]],"14":[["                    ",{}],["|",{"inverse":true}],[" 83 ",{"fg":3,"bold":true}],["  let g:calendar_mark = 'right'                                                                                 ",{}],["|",{"inverse":true}],[" 15 ",{"fg":3,"bold":true}],["▸ diary/",{"fg":6,"bold":true}],["          ",{}]],"15":[["▼",{"fg":3,"bold":true}],[" Second",{"fg":5,"bold":true}],[" : ",{}],["struct",{"fg":2,"bold":true}],["   ",{}],["|",{"inverse":true}],[" 84 ",{"fg":3,"bold":true}],["<                                                                                                               ",{}],["|",{"inverse":true}],[" 16 ",{"fg":3,"bold":true}],["▸ temp/",{"fg":6,"bold":true}],["           ",{}]],"16":[["    [prototypes]",{"fg":6,"bold":true}],["    ",{}],["|",{"inverse":true}],[" 85 ",{"fg":3,"bold":true}],["                                                                                                                ",{}],["|",{"inverse":true}],[" 17 ",{"fg":3,"bold":true}],["  .bash_history   ",{}]],"17":[["   ",{}],["+",{"fg":2,"bold":true}],["SecondRun(void) ",{}],["|",{"inverse":true}],[" 86 ",{"fg":3,"bold":true}],["                                                *g:calendar_diary*                                              ",{}],["|",{"inverse":true}],[" 18 ",{"fg":3,"bold":true}],["  .bash_logout    ",{}]],"18":[["   ",{}],["+",{"fg":2,"bold":true}],["SecondRun2(void)",{}],["|",{"inverse":true}],[" 87 ",{"fg":3,"bold":true}],["Specify the directory for the diary files.  The default value is $HOME/diary.                                   ",{}],["|",{"inverse":true}],[" 19 ",{"fg":3,"bold":true}],["  .bash_profile   ",{"underline":true}]],"19":[["                    ",{}],["|",{"inverse":true}],[" 88 ",{"fg":3,"bold":true}],["  let g:calendar_diary=$HOME.'/.vim/diary'                                                                      ",{}],["|",{"inverse":true}],[" 20 ",{"fg":3,"bold":true}],["  .bashrc         ",{}]],"20":[["▼",{"fg":3,"bold":true}],[" ",{}],["functions",{"fg":6,"bold":true}],["         ",{}],["|",{"inverse":true}],[" 89 ",{"fg":3,"bold":true}],["                                                                                                                ",{}],["|",{"inverse":true}],[" 21 ",{"fg":3,"bold":true}],["  .cshrc          ",{}]],"21":[["    main(int argc, c",{"underline":true}],["|",{"inverse":true}],[" 90 ",{"fg":3,"bold":true}],["                                                                                                                ",{}],["|",{"inverse":true}],[" 22 ",{"fg":3,"bold":true}],["  .dmrc           ",{}]],"22":[["~                   ",{"fg":4,"bold":true}],["|",{"inverse":true}],[" 91 ",{"fg":3,"bold":true}],["                                                *g:calendar_navi*                                               ",{}],["|",{"inverse":true}],[" 23 ",{"fg":3,"bold":true}],["  .esd_auth       ",{}]],"23":[["~                   ",{"fg":4,"bold":true}],["|",{"inverse":true}],[" 92 ",{"fg":3,"bold":true}],["To control the calendar navigator, set this variable.  Acceptable values are                                    ",{}],["|",{"inverse":true}],[" 24 ",{"fg":3,"bold":true}],["  .gtkrc-2.0      ",{}]],"24":[["~                   ",{"fg":4,"bold":true}],["|",{"inverse":true}],[" 93 ",{"fg":3,"bold":true}],["'top', 'bottom', or 'both'. >                                                                                   ",{}],["|",{"inverse":true}],[" 25 ",{"fg":3,"bold":true}],["  .gtkrc-2.0-kde4 ",{}]],"25":[["~                   ",{"fg":4,"bold":true}],["|",{"inverse":true}],[" 94 ",{"fg":3,"bold":true}],["  let g:calendar_navi = ''                                                                                      ",{}],["|",{"inverse":true}],[" 26 ",{"fg":3,"bold":true}],["  .lesshst        ",{}]],"26":[["~                   ",{"fg":4,"bold":true}],["|",{"inverse":true}],[" 95 ",{"fg":3,"bold":true}],["<                                                                                                               ",{}],["|",{"inverse":true}],[" 27 ",{"fg":3,"bold":true}],["  .tcshrc         ",{}]],"27":[["~                   ",{"fg":4,"bold":true}],["|",{"inverse":true}],[" 96 ",{"fg":3,"bold":true}],["                                                                                                                ",{}],["|",{"inverse":true}],[" 28 ",{"fg":3,"bold":true}],["  .viminfo        ",{}]],"28":[["~                   ",{"fg":4,"bold":true}],["|",{"inverse":true}],[" 97 ",{"fg":3,"bold":true}],["                                                *g:calendar_navi_label*                                         ",{}],["|",{"inverse":true}],[" 29 ",{"fg":3,"bold":true}],["  .vimrc          ",{}]],"29":[["~                   ",{"fg":4,"bold":true}],["|",{"inverse":true}],[" 98 ",{"fg":3,"bold":true}],["To set the labels for the calendar navigator, for exampldar_navi_label*                                         ",{}],["|",{"inverse":true}],[" 30 ",{"fg":3,"bold":true}],["  .xsession-errors",{}]],"37":[["~                   ",{"fg":4,"bold":true}],["|",{"inverse":true}],["105 ",{"fg":3,"bold":true}],["the dating system and its offset from the Georgian calendar (A.D.).  For                                        ",{}],["|",{"inverse":true}],["~                     ",{"fg":4,"bold":true}]],"38":[["~                   ",{"fg":4,"bold":true}],["|",{"inverse":true}],["106 ",{"fg":3,"bold":true}],["example, to use the current Japanese era (Heisei), you would set: >                                             ",{}],["|",{"inverse":true}],["~                     ",{"fg":4,"bold":true}]],"39":[["~                   ",{"fg":4,"bold":true}],["|",{"inverse":true}],["107 ",{"fg":3,"bold":true}],["  let g:calendar_erafmt = 'Heisei,-1988'                                                                        ",{}],["|",{"inverse":true}],["~                     ",{"fg":4,"bold":true}]],"40":[["~                   ",{"fg":4,"bold":true}],["|",{"inverse":true}],["108 ",{"fg":3,"bold":true}],["<                                                                                                               ",{}],["|",{"inverse":true}],["~                     ",{"fg":4,"bold":true}]],"41":[["~                   ",{"fg":4,"bold":true}],["|",{"inverse":true}],["109 ",{"fg":3,"bold":true}],["                                                                                                                ",{}],["|",{"inverse":true}],["~                     ",{"fg":4,"bold":true}]],"42":[["~                   ",{"fg":4,"bold":true}],["|",{"inverse":true}],["110 ",{"fg":3,"bold":true}],["                                                *g:calendar_mruler*                                             ",{}],["|",{"inverse":true}],["~                     ",{"fg":4,"bold":true}]],"43":[["~                   ",{"fg":4,"bold":true}],["|",{"inverse":true}],["111 ",{"fg":3,"bold":true}],["To change the month names for the calendar headings, set this variable.  The                                    ",{}],["|",{"inverse":true}],["~                     ",{"fg":4,"bold":true}]],"44":[["~                   ",{"fg":4,"bold":true}],["|",{"inverse":true}],["112 ",{"fg":3,"bold":true}],["value is expected to be a comma-separated list of twelve values, starting with                                  ",{}],["|",{"inverse":true}],["~                     ",{"fg":4,"bold":true}]],"45":[["~                   ",{"fg":4,"bold":true}],["|",{"inverse":true}],["113 ",{"fg":3,"bold":true}],["Janurary: >                                                                                                     ",{"underline":true}],["|",{"inverse":true}],["~                     ",{"fg":4,"bold":true}]],"46":[["[Name] test.cpp      ",{"inverse":true}],[" NORMAL ",{"bold":true}],[" ",{}],["calendar.txt ",{"bold":true}],["                                                        unix │ utf-8 │ text │  51% ",{}],[" LN 113",{"bold":true}],[":1  ",{}],[" ",{"bold":true,"inverse":true}],[" ~/…/calendar-vim/doc>",{"bold":true}]]},"cursor":{"x":81,"y":29}}],[0.004274,{"lines":{"29":[["~                   ",{"fg":4,"bold":true}],["|",{"inverse":true}],[" 98 ",{"fg":3,"bold":true}],["To set the labels for the calendar navigator, for example to change the                                         ",{}],["|",{"inverse":true}],[" 30 ",{"fg":3,"bold":true}],["  .xsession-errors",{}]],"30":[["~                   ",{"fg":4,"bold":true}],["|",{"inverse":true}],[" 99 ",{"fg":3,"bold":true}],["language, use this variable.  Entries should be comma separated. >                                              ",{}],["|",{"inverse":true}],[" 31 ",{"fg":3,"bold":true}],["  anaconda-ks.cfg ",{}]],"31":[["~                   ",{"fg":4,"bold":true}],["|",{"inverse":true}],["100 ",{"fg":3,"bold":true}],["  let g:calendar_navi_label = 'Prev,Today,Next'                                                                 ",{}],["|",{"inverse":true}],[" 32 ",{"fg":3,"bold":true}],["  initial-setup-ks",{}]],"32":[["~                   ",{"fg":4,"bold":true}],["|",{"inverse":true}],["101 ",{"fg":3,"bold":true}],["<                                                                                                               ",{}],["|",{"inverse":true}],[" 33 ",{"fg":3,"bold":true}],["  test.c          ",{}]],"33":[["~                   ",{"fg":4,"bold":true}],["|",{"inverse":true}],["102 ",{"fg":3,"bold":true}],["                                                                                                                ",{}],["|",{"inverse":true}],[" 34 ",{"fg":3,"bold":true}],["  test.cpp        ",{}]],"34":[["~                   ",{"fg":4,"bold":true}],["|",{"inverse":true}],["103 ",{"fg":3,"bold":true}],["                                                *g:calendar_erafmt*                                             ",{}],["|",{"inverse":true}],[" 35 ",{"fg":3,"bold":true}],["  .test.cpp.swp   ",{}]],"35":[["~                   ",{"fg":4,"bold":true}],["|",{"inverse":true}],["104 ",{"fg":3,"bold":true}],["To change the dating system, set the following variable.  Include the name of                                   ",{}],["|",{"inverse":true}],["~                     ",{"fg":4,"bold":true}]],"36":[["~                   ",{"fg":4,"bold":true}],["|",{"inverse":true}],["105 ",{"fg":3,"bold":true}],["the dating system and its offset from the Georgian calendar (A.D.).  For                                        ",{}],["|",{"inverse":true}],["~                     ",{"fg":4,"bold":true}]],"37":[["~                   ",{"fg":4,"bold":true}],["|",{"inverse":true}],["106 ",{"fg":3,"bold":true}],["example, to use the current Japanese era (Heisei), you would set: >                                             ",{}],["|",{"inverse":true}],["~                     ",{"fg":4,"bold":true}]],"38":[["~                   ",{"fg":4,"bold":true}],["|",{"inverse":true}],["107 ",{"fg":3,"bold":true}],["  let g:calendar_erafmt = 'Heisei,-1988'                                                                        ",{}],["|",{"inverse":true}],["~                     ",{"fg":4,"bold":true}]],"39":[["~                   ",{"fg":4,"bold":true}],["|",{"inverse":true}],["108 ",{"fg":3,"bold":true}],["<                                                                                                               ",{}],["|",{"inverse":true}],["~                     ",{"fg":4,"bold":true}]],"40":[["~                   ",{"fg":4,"bold":true}],["|",{"inverse":true}],["109 ",{"fg":3,"bold":true}],["                                                                                                                ",{}],["|",{"inverse":true}],["~                     ",{"fg":4,"bold":true}]],"41":[["~                   ",{"fg":4,"bold":true}],["|",{"inverse":true}],["110 ",{"fg":3,"bold":true}],["                                                *g:calendar_mruler*                                             ",{}],["|",{"inverse":true}],["~                     ",{"fg":4,"bold":true}]],"42":[["~                   ",{"fg":4,"bold":true}],["|",{"inverse":true}],["111 ",{"fg":3,"bold":true}],["To change the month names for the calendar headings, set this variable.  The                                    ",{}],["|",{"inverse":true}],["~                     ",{"fg":4,"bold":true}]],"43":[["~                   ",{"fg":4,"bold":true}],["|",{"inverse":true}],["112 ",{"fg":3,"bold":true}],["value is expected to be a comma-separated list of twelve values, starting with                                  ",{}],["|",{"inverse":true}],["~                     ",{"fg":4,"bold":true}]],"44":[["~                   ",{"fg":4,"bold":true}],["|",{"inverse":true}],["113 ",{"fg":3,"bold":true}],["Janurary: >                                                                                                     ",{}],["|",{"inverse":true}],["~                     ",{"fg":4,"bold":true}]],"45":[["~                   ",{"fg":4,"bold":true}],["|",{"inverse":true}],["114 ",{"fg":3,"bold":true}],["  let g:calendar_mruler = 'Jan,Feb,Mar,Apr,May,Jun,Jul,Aug,Sep,Oct,Nov,Dec'                                     ",{"underline":true}],["|",{"inverse":true}],["~                     ",{"fg":4,"bold":true}]],"46":[["[Name] test.cpp      ",{"inverse":true}],[" NORMAL ",{"bold":true}],[" ",{}],["calendar.txt ",{"bold":true}],["                                                        unix │ utf-8 │ text │  51% ",{}],[" LN 114",{"bold":true}],[":1  ",{}],[" ",{"bold":true,"inverse":true}],[" ~/…/calendar-vim/doc>",{"bold":true}]]},"cursor":{"x":25,"y":45,"visible":true}}],[0.035143,{"lines":{"0":[["\" Press <F1> for hel",{"fg":6,"bold":true}],["|",{"inverse":true}],[" 70 ",{"fg":3,"bold":true}],["'show_help'                 Displays a short help message.      '?'                                             ",{}],["|",{"inverse":true}],["  1 ",{"fg":3,"bold":true}],["\" Press ? for help",{"fg":5,"bold":true}]],"1":[["                    ",{}],["|",{"inverse":true}],[" 71 ",{"fg":3,"bold":true}],["'redisplay'                 Redraws calendar window.            'r'                                             ",{}],["|",{"inverse":true}],["  2 ",{"fg":3,"bold":true}],["                  ",{}]],"2":[["▼",{"fg":3,"bold":true}],[" First",{"fg":5,"bold":true}],[" : ",{}],["struct",{"fg":2,"bold":true}],["    ",{}],["|",{"inverse":true}],[" 72 ",{"fg":3,"bold":true}],["'goto_next_month'           Jumps to the next month.            '<Right>'                                       ",{}],["|",{"inverse":true}],["  3 ",{"fg":3,"bold":true}],[".. (up a dir)",{"fg":6,"bold":true}],["     ",{}]],"3":[["    [prototypes]",{"fg":6,"bold":true}],["    ",{}],["|",{"inverse":true}],[" 73 ",{"fg":3,"bold":true}],["'goto_prev_month'           Jumps to the previous month.        '<Left>'                                        ",{}],["|",{"inverse":true}],["  4 /root/",{"fg":3,"bold":true}],["            ",{}]],"4":[["   ",{}],["+",{"fg":2,"bold":true}],["FirstRun(void)  ",{}],["|",{"inverse":true}],[" 74 ",{"fg":3,"bold":true}],["'goto_next_year'            Jumps to the next year.             '<Up>'                                          ",{}],["|",{"inverse":true}],["  5 ",{"fg":3,"bold":true}],["▸ .asciinema/",{"fg":6,"bold":true}],["     ",{}]],"5":[["   ",{}],["+",{"fg":2,"bold":true}],["FirstRun2(void) ",{}],["|",{"inverse":true}],[" 75 ",{"fg":3,"bold":true}],["'goto_prev_year'            Jumps to the previous year.         '<Down>'                                        ",{}],["|",{"inverse":true}],["  6 ",{"fg":3,"bold":true}],["▸ .cache/",{"fg":6,"bold":true}],["         ",{}]],"6":[["                    ",{}],["|",{"inverse":true}],[" 76 ",{"fg":3,"bold":true}],["An example in your .vimrc might look like this: >                                                               ",{}],["|",{"inverse":true}],["  7 ",{"fg":3,"bold":true}],["▸ .config/",{"fg":6,"bold":true}],["        ",{}]],"7":[["▼",{"fg":3,"bold":true}],[" Last",{"fg":5,"bold":true}],[" : ",{}],["struct",{"fg":2,"bold":true}],["     ",{}],["|",{"inverse":true}],[" 77 ",{"fg":3,"bold":true}],["An example in your .vimrc might look like this: >                                                               ",{}],["|",{"inverse":true}],["  8 ",{"fg":3,"bold":true}],["▸ .dbus/",{"fg":6,"bold":true}],["          ",{}]]},"cursor":{"y":7,"visible":false}}],[0.006978999999999999,{"lines":{"7":[["▼",{"fg":3,"bold":true}],[" Last",{"fg":5,"bold":true}],[" : ",{}],["struct",{"fg":2,"bold":true}],["     ",{}],["|",{"inverse":true}],[" 77 ",{"fg":3,"bold":true}],["  let g:calendar_keys = { 'goto_next_month': '<C-Right>', 'goto_prev_month': '<C-Left>'}                        ",{}],["|",{"inverse":true}],["  8 ",{"fg":3,"bold":true}],["▸ .dbus/",{"fg":6,"bold":true}],["          ",{}]],"8":[["    [functions]",{"fg":6,"bold":true}],["     ",{}],["|",{"inverse":true}],[" 78 ",{"fg":3,"bold":true}],["<                                                                                                               ",{}],["|",{"inverse":true}],["  9 ",{"fg":3,"bold":true}],["▸ .gnupg/",{"fg":6,"bold":true}],["         ",{}]],"9":[["   ",{}],["+",{"fg":2,"bold":true}],["FirstRun(void)  ",{}],["|",{"inverse":true}],[" 79 ",{"fg":3,"bold":true}],["                                                                                                                ",{}],["|",{"inverse":true}],[" 10 ",{"fg":3,"bold":true}],["▸ .kde/",{"fg":6,"bold":true}],["           ",{}]],"10":[["   ",{}],["+",{"fg":2,"bold":true}],["FirstRun2(void) ",{}],["|",{"inverse":true}],[" 80 ",{"fg":3,"bold":true}],["                                                *g:calendar_mark*                                               ",{}],["|",{"inverse":true}],[" 11 ",{"fg":3,"bold":true}],["▸ .local/",{"fg":6,"bold":true}],["         ",{}]],"11":[["   ",{}],["+",{"fg":2,"bold":true}],["~Last()         ",{}],["|",{"inverse":true}],[" 81 ",{"fg":3,"bold":true}],["Place a '*' or '+' mark after the day.  Acceptable values are 'left',                                           ",{}],["|",{"inverse":true}],[" 12 ",{"fg":3,"bold":true}],["▸ .pki/",{"fg":6,"bold":true}],["           ",{}]],"12":[["   ",{}],["+",{"fg":2,"bold":true}],["SecondRun(void) ",{}],["|",{"inverse":true}],[" 82 ",{"fg":3,"bold":true}],["'left-fit', and 'right': >                                                                                      ",{}],["|",{"inverse":true}],[" 13 ",{"fg":3,"bold":true}],["▸ .ssh/",{"fg":6,"bold":true}],["           ",{}]],"13":[["   ",{}],["+",{"fg":2,"bold":true}],["SecondRun2(void)",{}],["|",{"inverse":true}],[" 83 ",{"fg":3,"bold":true}],["  let g:calendar_mark = 'right'                                                                                 ",{}],["|",{"inverse":true}],[" 14 ",{"fg":3,"bold":true}],["▸ .vim/",{"fg":6,"bold":true}],["           ",{}]],"14":[["                    ",{}],["|",{"inverse":true}],[" 84 ",{"fg":3,"bold":true}],["<                                                                                                               ",{}],["|",{"inverse":true}],[" 15 ",{"fg":3,"bold":true}],["▸ diary/",{"fg":6,"bold":true}],["          ",{}]],"15":[["▼",{"fg":3,"bold":true}],[" Second",{"fg":5,"bold":true}],[" : ",{}],["struct",{"fg":2,"bold":true}],["   ",{}],["|",{"inverse":true}],[" 85 ",{"fg":3,"bold":true}],["                                                                                                                ",{}],["|",{"inverse":true}],[" 16 ",{"fg":3,"bold":true}],["▸ temp/",{"fg":6,"bold":true}],["           ",{}]],"16":[["    [prototypes]",{"fg":6,"bold":true}],["    ",{}],["|",{"inverse":true}],[" 86 ",{"fg":3,"bold":true}],["                                                *g:calendar_diary*                                              ",{}],["|",{"inverse":true}],[" 17 ",{"fg":3,"bold":true}],["  .bash_history   ",{}]],"17":[["   ",{}],["+",{"fg":2,"bold":true}],["SecondRun(void) ",{}],["|",{"inverse":true}],[" 87 ",{"fg":3,"bold":true}],["Specify the directory for the diary files.  The default value is $HOME/diary.                                   ",{}],["|",{"inverse":true}],[" 18 ",{"fg":3,"bold":true}],["  .bash_logout    ",{}]],"18":[["   ",{}],["+",{"fg":2,"bold":true}],["SecondRun2(void)",{}],["|",{"inverse":true}],[" 88 ",{"fg":3,"bold":true}],["  let g:calendar_diary=$HOME.'/.vim/diary'                                                                      ",{}],["|",{"inverse":true}],[" 19 ",{"fg":3,"bold":true}],["  .bash_profile   ",{"underline":true}]],"19":[["                    ",{}],["|",{"inverse":true}],[" 89 ",{"fg":3,"bold":true}],["                                                                                                                ",{}],["|",{"inverse":true}],[" 20 ",{"fg":3,"bold":true}],["  .bashrc         ",{}]],"20":[["▼",{"fg":3,"bold":true}],[" ",{}],["functions",{"fg":6,"bold":true}],["         ",{}],["|",{"inverse":true}],[" 90 ",{"fg":3,"bold":true}],["                                                                                                                ",{}],["|",{"inverse":true}],[" 21 ",{"fg":3,"bold":true}],["  .cshrc          ",{}]],"21":[["    main(int argc, c",{"underline":true}],["|",{"inverse":true}],[" 91 ",{"fg":3,"bold":true}],["                                                *g:calendar_navi*                                               ",{}],["|",{"inverse":true}],[" 22 ",{"fg":3,"bold":true}],["  .dmrc           ",{}]],"22":[["~                   ",{"fg":4,"bold":true}],["|",{"inverse":true}],[" 92 ",{"fg":3,"bold":true}],["To control the calendar navigator, set this variable.  Acceptable values are                                    ",{}],["|",{"inverse":true}],[" 23 ",{"fg":3,"bold":true}],["  .esd_auth       ",{}]],"23":[["~                   ",{"fg":4,"bold":true}],["|",{"inverse":true}],[" 93 ",{"fg":3,"bold":true}],["'top', 'bottom', or 'both'. >                                                                                   ",{}],["|",{"inverse":true}],[" 24 ",{"fg":3,"bold":true}],["  .gtkrc-2.0      ",{}]],"24":[["~                   ",{"fg":4,"bold":true}],["|",{"inverse":true}],[" 94 ",{"fg":3,"bold":true}],["  let g:calendar_navi = ''                                                                                      ",{}],["|",{"inverse":true}],[" 25 ",{"fg":3,"bold":true}],["  .gtkrc-2.0-kde4 ",{}]],"25":[["~                   ",{"fg":4,"bold":true}],["|",{"inverse":true}],[" 95 ",{"fg":3,"bold":true}],["<                                                                                                               ",{}],["|",{"inverse":true}],[" 26 ",{"fg":3,"bold":true}],["  .lesshst        ",{}]],"26":[["~                   ",{"fg":4,"bold":true}],["|",{"inverse":true}],[" 96 ",{"fg":3,"bold":true}],["                                                                                                                ",{}],["|",{"inverse":true}],[" 27 ",{"fg":3,"bold":true}],["  .tcshrc         ",{}]],"27":[["~                   ",{"fg":4,"bold":true}],["|",{"inverse":true}],[" 97 ",{"fg":3,"bold":true}],["                                                *g:calendar_navi_label*                                         ",{}],["|",{"inverse":true}],[" 28 ",{"fg":3,"bold":true}],["  .viminfo        ",{}]],"28":[["~                   ",{"fg":4,"bold":true}],["|",{"inverse":true}],[" 98 ",{"fg":3,"bold":true}],["To set the labels for the calendar navigator, for example to change the                                         ",{}],["|",{"inverse":true}],[" 29 ",{"fg":3,"bold":true}],["  .vimrc          ",{}]],"29":[["~                   ",{"fg":4,"bold":true}],["|",{"inverse":true}],[" 99 ",{"fg":3,"bold":true}],["language, use this variable.  Entries should be comma separated. >                                              ",{}],["|",{"inverse":true}],[" 30 ",{"fg":3,"bold":true}],["  .xsession-errors",{}]],"30":[["~                   ",{"fg":4,"bold":true}],["|",{"inverse":true}],["100 ",{"fg":3,"bold":true}],["  let g:calendar_navi_label = 'Prev,Today,Next'                                                                 ",{}],["|",{"inverse":true}],[" 31 ",{"fg":3,"bold":true}],["  anaconda-ks.cfg ",{}]],"31":[["~                   ",{"fg":4,"bold":true}],["|",{"inverse":true}],["101 ",{"fg":3,"bold":true}],["<                                                                                                               ",{}],["|",{"inverse":true}],[" 32 ",{"fg":3,"bold":true}],["  initial-setup-ks",{}]],"32":[["~                   ",{"fg":4,"bold":true}],["|",{"inverse":true}],["102 ",{"fg":3,"bold":true}],["                                                                                                                ",{}],["|",{"inverse":true}],[" 33 ",{"fg":3,"bold":true}],["  test.c          ",{}]],"33":[["~                   ",{"fg":4,"bold":true}],["|",{"inverse":true}],["103 ",{"fg":3,"bold":true}],["                                                *g:calendar_erafmt*                                             ",{}],["|",{"inverse":true}],[" 34 ",{"fg":3,"bold":true}],["  test.cpp        ",{}]],"34":[["~                   ",{"fg":4,"bold":true}],["|",{"inverse":true}],["104 ",{"fg":3,"bold":true}],["To change the dating system, set the following variable.  Include the name of                                   ",{}],["|",{"inverse":true}],[" 35 ",{"fg":3,"bold":true}],["  .test.cpp.swp   ",{}]],"35":[["~                   ",{"fg":4,"bold":true}],["|",{"inverse":true}],["105 ",{"fg":3,"bold":true}],["the dating system and its offset from the Georgian calendar (A.D.).  For                                        ",{}],["|",{"inverse":true}],["~                     ",{"fg":4,"bold":true}]],"36":[["~                   ",{"fg":4,"bold":true}],["|",{"inverse":true}],["106 ",{"fg":3,"bold":true}],["example, to use the current Japanese era (Heisei), you would set: >                                             ",{}],["|",{"inverse":true}],["~                     ",{"fg":4,"bold":true}]],"37":[["~                   ",{"fg":4,"bold":true}],["|",{"inverse":true}],["107 ",{"fg":3,"bold":true}],["  let g:calendar_erafmt = 'Heisei,-1988'                                                                        ",{}],["|",{"inverse":true}],["~                     ",{"fg":4,"bold":true}]],"38":[["~                   ",{"fg":4,"bold":true}],["|",{"inverse":true}],["108 ",{"fg":3,"bold":true}],["<                                                                                                               ",{}],["|",{"inverse":true}],["~                     ",{"fg":4,"bold":true}]],"39":[["~                   ",{"fg":4,"bold":true}],["|",{"inverse":true}],["109 ",{"fg":3,"bold":true}],["                                                                                                                ",{}],["|",{"inverse":true}],["~                     ",{"fg":4,"bold":true}]],"40":[["~                   ",{"fg":4,"bold":true}],["|",{"inverse":true}],["110 ",{"fg":3,"bold":true}],["                                                *g:calendar_mruler*                                             ",{}],["|",{"inverse":true}],["~                     ",{"fg":4,"bold":true}]],"41":[["~                   ",{"fg":4,"bold":true}],["|",{"inverse":true}],["111 ",{"fg":3,"bold":true}],["To change the month names for the calendar headings, set this variable.  The                                    ",{}],["|",{"inverse":true}],["~                     ",{"fg":4,"bold":true}]],"42":[["~                   ",{"fg":4,"bold":true}],["|",{"inverse":true}],["112 ",{"fg":3,"bold":true}],["value is expected to be a comma-separated list of twelve values, starting with                                  ",{}],["|",{"inverse":true}],["~                     ",{"fg":4,"bold":true}]],"43":[["~                   ",{"fg":4,"bold":true}],["|",{"inverse":true}],["113 ",{"fg":3,"bold":true}],["Janurary: >                                                                                                     ",{}],["|",{"inverse":true}],["~                     ",{"fg":4,"bold":true}]],"44":[["~                   ",{"fg":4,"bold":true}],["|",{"inverse":true}],["114 ",{"fg":3,"bold":true}],["  let g:calendar_mruler = 'Jan,Feb,Mar,Apr,May,Jun,Jul,Aug,Sep,Oct,Nov,Dec'                                     ",{}],["|",{"inverse":true}],["~                     ",{"fg":4,"bold":true}]],"45":[["~                   ",{"fg":4,"bold":true}],["|",{"inverse":true}],["115 ",{"fg":3,"bold":true}],["<                                                                                                               ",{"underline":true}],["|",{"inverse":true}],["~                     ",{"fg":4,"bold":true}]],"46":[["[Name] test.cpp      ",{"inverse":true}],[" NORMAL ",{"bold":true}],[" ",{}],["calendar.txt ",{"bold":true}],["                                                        unix │ utf-8 │ text │  52% ",{}],[" LN 115",{"bold":true}],[":1  ",{}],[" ",{"bold":true,"inverse":true}],[" ~/…/calendar-vim/doc>",{"bold":true}]]},"cursor":{"y":45,"visible":true}}],[0.015649,{"lines":{"47":[["                                                                                                                                                     j          ",{}]]},"cursor":{"visible":false}}],[0.004180000000000001,{"lines":{"0":[["\" Press <F1> for hel",{"fg":6,"bold":true}],["|",{"inverse":true}],[" 71 ",{"fg":3,"bold":true}],["'redisplay'                 Redraws calendar window.            'r'                                             ",{}],["|",{"inverse":true}],["  1 ",{"fg":3,"bold":true}],["\" Press ? for help",{"fg":5,"bold":true}]],"1":[["                    ",{}],["|",{"inverse":true}],[" 72 ",{"fg":3,"bold":true}],["'goto_next_month'           Jumps to the next month.            '<Right>'                                       ",{}],["|",{"inverse":true}],["  2 ",{"fg":3,"bold":true}],["                  ",{}]],"2":[["▼",{"fg":3,"bold":true}],[" First",{"fg":5,"bold":true}],[" : ",{}],["struct",{"fg":2,"bold":true}],["    ",{}],["|",{"inverse":true}],[" 73 ",{"fg":3,"bold":true}],["'goto_prev_month'           Jumps to the previous month.        '<Left>'                                        ",{}],["|",{"inverse":true}],["  3 ",{"fg":3,"bold":true}],[".. (up a dir)",{"fg":6,"bold":true}],["     ",{}]],"3":[["    [prototypes]",{"fg":6,"bold":true}],["    ",{}],["|",{"inverse":true}],[" 74 ",{"fg":3,"bold":true}],["'goto_next_year'            Jumps to the next year.             '<Up>'                                          ",{}],["|",{"inverse":true}],["  4 /root/",{"fg":3,"bold":true}],["            ",{}]],"4":[["   ",{}],["+",{"fg":2,"bold":true}],["FirstRun(void)  ",{}],["|",{"inverse":true}],[" 75 ",{"fg":3,"bold":true}],["'goto_prev_year'            Jumps to the previous year.         '<Down>'                                        ",{}],["|",{"inverse":true}],["  5 ",{"fg":3,"bold":true}],["▸ .asciinema/",{"fg":6,"bold":true}],["     ",{}]],"5":[["   ",{}],["+",{"fg":2,"bold":true}],["FirstRun2(void) ",{}],["|",{"inverse":true}],[" 76 ",{"fg":3,"bold":true}],["An example in your .vimrc might look like this: >                                                               ",{}],["|",{"inverse":true}],["  6 ",{"fg":3,"bold":true}],["▸ .cache/",{"fg":6,"bold":true}],["         ",{}]],"6":[["                    ",{}],["|",{"inverse":true}],[" 77 ",{"fg":3,"bold":true}],["  let g:calendar_keys = { 'goto_next_month': '<C-Right>', 'goto_prev_month': '<C-Left>'}                        ",{}],["|",{"inverse":true}],["  7 ",{"fg":3,"bold":true}],["▸ .config/",{"fg":6,"bold":true}],["        ",{}]],"7":[["▼",{"fg":3,"bold":true}],[" Last",{"fg":5,"bold":true}],[" : ",{}],["struct",{"fg":2,"bold":true}],["     ",{}],["|",{"inverse":true}],[" 78 ",{"fg":3,"bold":true}],["<                                                                                                               ",{}],["|",{"inverse":true}],["  8 ",{"fg":3,"bold":true}],["▸ .dbus/",{"fg":6,"bold":true}],["          ",{}]],"8":[["    [functions]",{"fg":6,"bold":true}],["     ",{}],["|",{"inverse":true}],[" 79 ",{"fg":3,"bold":true}],["                                                                                                                ",{}],["|",{"inverse":true}],["  9 ",{"fg":3,"bold":true}],["▸ .gnupg/",{"fg":6,"bold":true}],["         ",{}]],"9":[["   ",{}],["+",{"fg":2,"bold":true}],["FirstRun(void)  ",{}],["|",{"inverse":true}],[" 80 ",{"fg":3,"bold":true}],["                                                *g:calendar_mark*                                               ",{}],["|",{"inverse":true}],[" 10 ",{"fg":3,"bold":true}],["▸ .kde/",{"fg":6,"bold":true}],["           ",{}]],"10":[["   ",{}],["+",{"fg":2,"bold":true}],["FirstRun2(void) ",{}],["|",{"inverse":true}],[" 81 ",{"fg":3,"bold":true}],["Place a '*' or '+' mark after the day.  Acceptable values are 'left',                                           ",{}],["|",{"inverse":true}],[" 11 ",{"fg":3,"bold":true}],["▸ .local/",{"fg":6,"bold":true}],["         ",{}]],"11":[["   ",{}],["+",{"fg":2,"bold":true}],["~Last()         ",{}],["|",{"inverse":true}],[" 82 ",{"fg":3,"bold":true}],["'left-fit', and 'right': >                                                                                      ",{}],["|",{"inverse":true}],[" 12 ",{"fg":3,"bold":true}],["▸ .pki/",{"fg":6,"bold":true}],["           ",{}]],"12":[["   ",{}],["+",{"fg":2,"bold":true}],["SecondRun(void) ",{}],["|",{"inverse":true}],[" 83 ",{"fg":3,"bold":true}],["  let g:calendar_mark = 'right'                                                                                 ",{}],["|",{"inverse":true}],[" 13 ",{"fg":3,"bold":true}],["▸ .ssh/",{"fg":6,"bold":true}],["           ",{}]],"13":[["   ",{}],["+",{"fg":2,"bold":true}],["SecondRun2(void)",{}],["|",{"inverse":true}],[" 84 ",{"fg":3,"bold":true}],["<                                                                                                               ",{}],["|",{"inverse":true}],[" 14 ",{"fg":3,"bold":true}],["▸ .vim/",{"fg":6,"bold":true}],["           ",{}]],"14":[["                    ",{}],["|",{"inverse":true}],[" 85 ",{"fg":3,"bold":true}],["                                                                                                                ",{}],["|",{"inverse":true}],[" 15 ",{"fg":3,"bold":true}],["▸ diary/",{"fg":6,"bold":true}],["          ",{}]],"15":[["▼",{"fg":3,"bold":true}],[" Second",{"fg":5,"bold":true}],[" : ",{}],["struct",{"fg":2,"bold":true}],["   ",{}],["|",{"inverse":true}],[" 86 ",{"fg":3,"bold":true}],["                                                *g:calendar_diary*                                              ",{}],["|",{"inverse":true}],[" 16 ",{"fg":3,"bold":true}],["▸ temp/",{"fg":6,"bold":true}],["           ",{}]],"16":[["    [prototypes]",{"fg":6,"bold":true}],["    ",{}],["|",{"inverse":true}],[" 87 ",{"fg":3,"bold":true}],["Specify the directory for the diary files.  The default value is $HOME/diary.                                   ",{}],["|",{"inverse":true}],[" 17 ",{"fg":3,"bold":true}],["  .bash_history   ",{}]],"17":[["   ",{}],["+",{"fg":2,"bold":true}],["SecondRun(void) ",{}],["|",{"inverse":true}],[" 88 ",{"fg":3,"bold":true}],["  let g:calendar_diary=$HOME.'/.vim/diary'                                                                      ",{}],["|",{"inverse":true}],[" 18 ",{"fg":3,"bold":true}],["  .bash_logout    ",{}]],"18":[["   ",{}],["+",{"fg":2,"bold":true}],["SecondRun2(void)",{}],["|",{"inverse":true}],[" 89 ",{"fg":3,"bold":true}],["                                                                                                                ",{}],["|",{"inverse":true}],[" 19 ",{"fg":3,"bold":true}],["  .bash_profile   ",{"underline":true}]],"19":[["                    ",{}],["|",{"inverse":true}],[" 90 ",{"fg":3,"bold":true}],["                                                                                                                ",{}],["|",{"inverse":true}],[" 20 ",{"fg":3,"bold":true}],["  .bashrc         ",{}]],"20":[["▼",{"fg":3,"bold":true}],[" ",{}],["functions",{"fg":6,"bold":true}],["         ",{}],["|",{"inverse":true}],[" 91 ",{"fg":3,"bold":true}],["                                                *g:calendar_navi*                                               ",{}],["|",{"inverse":true}],[" 21 ",{"fg":3,"bold":true}],["  .cshrc          ",{}]],"21":[["    main(int argc, c",{"underline":true}],["|",{"inverse":true}],[" 92 ",{"fg":3,"bold":true}],["To control the calendar navigator, set this variable.  Acceptable values are                                    ",{}],["|",{"inverse":true}],[" 22 ",{"fg":3,"bold":true}],["  .dmrc           ",{}]],"22":[["~                   ",{"fg":4,"bold":true}],["|",{"inverse":true}],[" 93 ",{"fg":3,"bold":true}],["'top', 'bottom', or 'both'. >                                                                                   ",{}],["|",{"inverse":true}],[" 23 ",{"fg":3,"bold":true}],["  .esd_auth       ",{}]],"23":[["~                   ",{"fg":4,"bold":true}],["|",{"inverse":true}],[" 94 ",{"fg":3,"bold":true}],["  let g:calendar_navi = ''                                                                                      ",{}],["|",{"inverse":true}],[" 24 ",{"fg":3,"bold":true}],["  .gtkrc-2.0      ",{}]],"24":[["~                   ",{"fg":4,"bold":true}],["|",{"inverse":true}],[" 95 ",{"fg":3,"bold":true}],["<                                                                                                               ",{}],["|",{"inverse":true}],[" 25 ",{"fg":3,"bold":true}],["  .gtkrc-2.0-kde4 ",{}]],"25":[["~                   ",{"fg":4,"bold":true}],["|",{"inverse":true}],[" 96 ",{"fg":3,"bold":true}],["                                                                                                                ",{}],["|",{"inverse":true}],[" 26 ",{"fg":3,"bold":true}],["  .lesshst        ",{}]],"26":[["~                   ",{"fg":4,"bold":true}],["|",{"inverse":true}],[" 97 ",{"fg":3,"bold":true}],["                                                *g:calendar_navi_label*                                         ",{}],["|",{"inverse":true}],[" 27 ",{"fg":3,"bold":true}],["  .tcshrc         ",{}]],"27":[["~                   ",{"fg":4,"bold":true}],["|",{"inverse":true}],[" 98 ",{"fg":3,"bold":true}],["To set the labels for the calendar navigator, for example to change the                                         ",{}],["|",{"inverse":true}],[" 28 ",{"fg":3,"bold":true}],["  .viminfo        ",{}]],"28":[["~                   ",{"fg":4,"bold":true}],["|",{"inverse":true}],[" 99 ",{"fg":3,"bold":true}],["language, use this variable.  Entries should be comma separated. >                                              ",{}],["|",{"inverse":true}],[" 29 ",{"fg":3,"bold":true}],["  .vimrc          ",{}]],"29":[["~                   ",{"fg":4,"bold":true}],["|",{"inverse":true}],["100 ",{"fg":3,"bold":true}],["  let g:calendar_navi_label = 'Prev,Today,Next'                                                                 ",{}],["|",{"inverse":true}],[" 30 ",{"fg":3,"bold":true}],["  .xsession-errors",{}]],"30":[["~                   ",{"fg":4,"bold":true}],["|",{"inverse":true}],["101 ",{"fg":3,"bold":true}],["<                                                                                                               ",{}],["|",{"inverse":true}],[" 31 ",{"fg":3,"bold":true}],["  anaconda-ks.cfg ",{}]],"31":[["~                   ",{"fg":4,"bold":true}],["|",{"inverse":true}],["102 ",{"fg":3,"bold":true}],["                                                                                                                ",{}],["|",{"inverse":true}],[" 32 ",{"fg":3,"bold":true}],["  initial-setup-ks",{}]],"32":[["~                   ",{"fg":4,"bold":true}],["|",{"inverse":true}],["103 ",{"fg":3,"bold":true}],["                                                *g:calendar_erafmt*                                             ",{}],["|",{"inverse":true}],[" 33 ",{"fg":3,"bold":true}],["  test.c          ",{}]],"33":[["~                   ",{"fg":4,"bold":true}],["|",{"inverse":true}],["104 ",{"fg":3,"bold":true}],["To change the dating system, set the following variable.  Include the name of                                   ",{}],["|",{"inverse":true}],[" 34 ",{"fg":3,"bold":true}],["  test.cpp        ",{}]],"34":[["~                   ",{"fg":4,"bold":true}],["|",{"inverse":true}],["105 ",{"fg":3,"bold":true}],["the dating system and its offset from the Georgian calendar (A.D.).  For                                        ",{}],["|",{"inverse":true}],[" 35 ",{"fg":3,"bold":true}],["  .test.cpp.swp   ",{}]],"35":[["~                   ",{"fg":4,"bold":true}],["|",{"inverse":true}],["106 ",{"fg":3,"bold":true}],["example, to use the current Japanese era (Heisei), you would set: >                                             ",{}],["|",{"inverse":true}],["~                     ",{"fg":4,"bold":true}]],"36":[["~                   ",{"fg":4,"bold":true}],["|",{"inverse":true}],["107 ",{"fg":3,"bold":true}],["  let g:calendar_erafmt = 'Heisei,-1988'                                                                        ",{}],["|",{"inverse":true}],["~                     ",{"fg":4,"bold":true}]],"37":[["~                   ",{"fg":4,"bold":true}],["|",{"inverse":true}],["108 ",{"fg":3,"bold":true}],["<                                                                                                               ",{}],["|",{"inverse":true}],["~                     ",{"fg":4,"bold":true}]],"38":[["~                   ",{"fg":4,"bold":true}],["|",{"inverse":true}],["109 ",{"fg":3,"bold":true}],["                                                                                                                ",{}],["|",{"inverse":true}],["~                     ",{"fg":4,"bold":true}]],"39":[["~                   ",{"fg":4,"bold":true}],["|",{"inverse":true}],["110 ",{"fg":3,"bold":true}],["                                                *g:calendar_mruler*                                             ",{}],["|",{"inverse":true}],["~                     ",{"fg":4,"bold":true}]],"40":[["~                   ",{"fg":4,"bold":true}],["|",{"inverse":true}],["111 ",{"fg":3,"bold":true}],["To change the month names for the calendar headings, set this variable.  The                                    ",{}],["|",{"inverse":true}],["~                     ",{"fg":4,"bold":true}]],"41":[["~                   ",{"fg":4,"bold":true}],["|",{"inverse":true}],["112 ",{"fg":3,"bold":true}],["value is expected to be a comma-separated list of twelve values, starting with                                  ",{}],["|",{"inverse":true}],["~                     ",{"fg":4,"bold":true}]],"42":[["~                   ",{"fg":4,"bold":true}],["|",{"inverse":true}],["113 ",{"fg":3,"bold":true}],["Janurary: >                                                                                                     ",{}],["|",{"inverse":true}],["~                     ",{"fg":4,"bold":true}]],"43":[["~                   ",{"fg":4,"bold":true}],["|",{"inverse":true}],["114 ",{"fg":3,"bold":true}],["  let g:calendar_mruler = 'Jan,Feb,Mar,Apr,May,Jun,Jul,Aug,Sep,Oct,Nov,Dec'                                     ",{}],["|",{"inverse":true}],["~                     ",{"fg":4,"bold":true}]],"44":[["~                   ",{"fg":4,"bold":true}],["|",{"inverse":true}],["115 ",{"fg":3,"bold":true}],["<                                                                          ",{"underline":true}],["                                     ",{}],["|",{"inverse":true}],["~                     ",{"fg":4,"bold":true}]],"47":[["                                                                                                                                                                ",{}]]},"cursor":{"x":100,"y":44}}],[0.025875,{"lines":{"44":[["~                   ",{"fg":4,"bold":true}],["|",{"inverse":true}],["115 ",{"fg":3,"bold":true}],["<                                                                                                               ",{}],["|",{"inverse":true}],["~                     ",{"fg":4,"bold":true}]],"45":[["~                   ",{"fg":4,"bold":true}],["|",{"inverse":true}],["116 ",{"fg":3,"bold":true}],["                                                                                                                ",{"underline":true}],["|",{"inverse":true}],["~                     ",{"fg":4,"bold":true}]],"46":[["[Name] test.cpp      ",{"inverse":true}],[" NORMAL ",{"bold":true}],[" ",{}],["calendar.txt ",{"bold":true}],["                                                        unix │ utf-8 │ text │  52% ",{}],[" LN 116",{"bold":true}],[":1  ",{}],[" ",{"bold":true,"inverse":true}],[" ~/…/calendar-vim/doc>",{"bold":true}]]},"cursor":{"x":25,"y":45,"visible":true}}],[0.014413,{"lines":{"0":[["\" Press <F1> for hel",{"fg":6,"bold":true}],["|",{"inverse":true}],[" 72 ",{"fg":3,"bold":true}],["'goto_next_month'           Jumps to the next month.            '<Right>'                                       ",{}],["|",{"inverse":true}],["  1 ",{"fg":3,"bold":true}],["\" Press ? for help",{"fg":5,"bold":true}]],"1":[["                    ",{}],["|",{"inverse":true}],[" 73 ",{"fg":3,"bold":true}],["'goto_prev_month'           Jumps to the previous month.        '<Left>'                                        ",{}],["|",{"inverse":true}],["  2 ",{"fg":3,"bold":true}],["                  ",{}]],"2":[["▼",{"fg":3,"bold":true}],[" First",{"fg":5,"bold":true}],[" : ",{}],["struct",{"fg":2,"bold":true}],["    ",{}],["|",{"inverse":true}],[" 74 ",{"fg":3,"bold":true}],["'goto_next_year'            Jumps to the next year.             '<Up>'                                          ",{}],["|",{"inverse":true}],["  3 ",{"fg":3,"bold":true}],[".. (up a dir)",{"fg":6,"bold":true}],["     ",{}]],"3":[["    [prototypes]",{"fg":6,"bold":true}],["    ",{}],["|",{"inverse":true}],[" 75 ",{"fg":3,"bold":true}],["'goto_prev_year'            Jumps to the previous year.         '<Down>'                                        ",{}],["|",{"inverse":true}],["  4 /root/",{"fg":3,"bold":true}],["            ",{}]],"4":[["   ",{}],["+",{"fg":2,"bold":true}],["FirstRun(void)  ",{}],["|",{"inverse":true}],[" 76 ",{"fg":3,"bold":true}],["An example in your .vimrc might look like this: >                                                               ",{}],["|",{"inverse":true}],["  5 ",{"fg":3,"bold":true}],["▸ .asciinema/",{"fg":6,"bold":true}],["     ",{}]],"5":[["   ",{}],["+",{"fg":2,"bold":true}],["FirstRun2(void) ",{}],["|",{"inverse":true}],[" 77 ",{"fg":3,"bold":true}],["  let g:calendar_keys = { 'goto_next_month': '<C-Right>', 'goto_prev_month': '<C-Left>'}                        ",{}],["|",{"inverse":true}],["  6 ",{"fg":3,"bold":true}],["▸ .cache/",{"fg":6,"bold":true}],["         ",{}]],"6":[["                    ",{}],["|",{"inverse":true}],[" 78 ",{"fg":3,"bold":true}],["<                                                                                                               ",{}],["|",{"inverse":true}],["  7 ",{"fg":3,"bold":true}],["▸ .config/",{"fg":6,"bold":true}],["        ",{}]],"7":[["▼",{"fg":3,"bold":true}],[" Last",{"fg":5,"bold":true}],[" : ",{}],["struct",{"fg":2,"bold":true}],["     ",{}],["|",{"inverse":true}],[" 79 ",{"fg":3,"bold":true}],["                                                                                                                ",{}],["|",{"inverse":true}],["  8 ",{"fg":3,"bold":true}],["▸ .dbus/",{"fg":6,"bold":true}],["          ",{}]],"8":[["    [functions]",{"fg":6,"bold":true}],["     ",{}],["|",{"inverse":true}],[" 80 ",{"fg":3,"bold":true}],["                                                *g:calendar_mark*                                               ",{}],["|",{"inverse":true}],["  9 ",{"fg":3,"bold":true}],["▸ .gnupg/",{"fg":6,"bold":true}],["         ",{}]],"9":[["   ",{}],["+",{"fg":2,"bold":true}],["FirstRun(void)  ",{}],["|",{"inverse":true}],[" 81 ",{"fg":3,"bold":true}],["Place a '*' or '+' mark after the day.  Acceptable values are 'left',                                           ",{}],["|",{"inverse":true}],[" 10 ",{"fg":3,"bold":true}],["▸ .kde/",{"fg":6,"bold":true}],["           ",{}]],"10":[["   ",{}],["+",{"fg":2,"bold":true}],["FirstRun2(void) ",{}],["|",{"inverse":true}],[" 82 ",{"fg":3,"bold":true}],["'left-fit', and 'right': >                                                                                      ",{}],["|",{"inverse":true}],[" 11 ",{"fg":3,"bold":true}],["▸ .local/",{"fg":6,"bold":true}],["         ",{}]],"11":[["   ",{}],["+",{"fg":2,"bold":true}],["~Last()         ",{}],["|",{"inverse":true}],[" 83 ",{"fg":3,"bold":true}],["  let g:calendar_mark = 'right'                                                                                 ",{}],["|",{"inverse":true}],[" 12 ",{"fg":3,"bold":true}],["▸ .pki/",{"fg":6,"bold":true}],["           ",{}]],"12":[["   ",{}],["+",{"fg":2,"bold":true}],["SecondRun(void) ",{}],["|",{"inverse":true}],[" 84 ",{"fg":3,"bold":true}],["<                                                                                                               ",{}],["|",{"inverse":true}],[" 13 ",{"fg":3,"bold":true}],["▸ .ssh/",{"fg":6,"bold":true}],["           ",{}]],"13":[["   ",{}],["+",{"fg":2,"bold":true}],["SecondRun2(void)",{}],["|",{"inverse":true}],[" 85 ",{"fg":3,"bold":true}],["                                                                                                                ",{}],["|",{"inverse":true}],[" 14 ",{"fg":3,"bold":true}],["▸ .vim/",{"fg":6,"bold":true}],["           ",{}]],"14":[["                    ",{}],["|",{"inverse":true}],[" 86 ",{"fg":3,"bold":true}],["                                                *g:calendar_diary*                                              ",{}],["|",{"inverse":true}],[" 15 ",{"fg":3,"bold":true}],["▸ diary/",{"fg":6,"bold":true}],["          ",{}]],"15":[["▼",{"fg":3,"bold":true}],[" Second",{"fg":5,"bold":true}],[" : ",{}],["struct",{"fg":2,"bold":true}],["   ",{}],["|",{"inverse":true}],[" 87 ",{"fg":3,"bold":true}],["Specify the directory for the diary files.  The default value is $HOME/diary.                                   ",{}],["|",{"inverse":true}],[" 16 ",{"fg":3,"bold":true}],["▸ temp/",{"fg":6,"bold":true}],["           ",{}]],"16":[["    [prototypes]",{"fg":6,"bold":true}],["    ",{}],["|",{"inverse":true}],[" 88 ",{"fg":3,"bold":true}],["  let g:calendar_diary=$HOME.'/.vim/diary'                                                                      ",{}],["|",{"inverse":true}],[" 17 ",{"fg":3,"bold":true}],["  .bash_history   ",{}]],"17":[["   ",{}],["+",{"fg":2,"bold":true}],["SecondRun(void) ",{}],["|",{"inverse":true}],[" 89 ",{"fg":3,"bold":true}],["                                                                                                                ",{}],["|",{"inverse":true}],[" 18 ",{"fg":3,"bold":true}],["  .bash_logout    ",{}]],"18":[["   ",{}],["+",{"fg":2,"bold":true}],["SecondRun2(void)",{}],["|",{"inverse":true}],[" 90 ",{"fg":3,"bold":true}],["                                                                                                                ",{}],["|",{"inverse":true}],[" 19 ",{"fg":3,"bold":true}],["  .bash_profile   ",{"underline":true}]],"19":[["                    ",{}],["|",{"inverse":true}],[" 91 ",{"fg":3,"bold":true}],["                                                *g:calendar_navi*                                               ",{}],["|",{"inverse":true}],[" 20 ",{"fg":3,"bold":true}],["  .bashrc         ",{}]],"20":[["▼",{"fg":3,"bold":true}],[" ",{}],["functions",{"fg":6,"bold":true}],["         ",{}],["|",{"inverse":true}],[" 92 ",{"fg":3,"bold":true}],["To control the calendar navigator, set this variable.  Acceptable values are                                    ",{}],["|",{"inverse":true}],[" 21 ",{"fg":3,"bold":true}],["  .cshrc          ",{}]],"21":[["    main(int argc, c",{"underline":true}],["|",{"inverse":true}],[" 93 ",{"fg":3,"bold":true}],["'top', 'bottom', or 'both'. >                                                                                   ",{}],["|",{"inverse":true}],[" 22 ",{"fg":3,"bold":true}],["  .dmrc           ",{}]],"22":[["~                   ",{"fg":4,"bold":true}],["|",{"inverse":true}],[" 94 ",{"fg":3,"bold":true}],["  let g:calendar_navi = ''                                                                                      ",{}],["|",{"inverse":true}],[" 23 ",{"fg":3,"bold":true}],["  .esd_auth       ",{}]],"23":[["~                   ",{"fg":4,"bold":true}],["|",{"inverse":true}],[" 95 ",{"fg":3,"bold":true}],["<                                                                                                               ",{}],["|",{"inverse":true}],[" 24 ",{"fg":3,"bold":true}],["  .gtkrc-2.0      ",{}]],"24":[["~                   ",{"fg":4,"bold":true}],["|",{"inverse":true}],[" 96 ",{"fg":3,"bold":true}],["                                                                                                                ",{}],["|",{"inverse":true}],[" 25 ",{"fg":3,"bold":true}],["  .gtkrc-2.0-kde4 ",{}]],"25":[["~                   ",{"fg":4,"bold":true}],["|",{"inverse":true}],[" 97 ",{"fg":3,"bold":true}],["                                                *g:calendar_navi_label*                                         ",{}],["|",{"inverse":true}],[" 26 ",{"fg":3,"bold":true}],["  .lesshst        ",{}]],"26":[["~                   ",{"fg":4,"bold":true}],["|",{"inverse":true}],[" 98 ",{"fg":3,"bold":true}],["To set the labels for the calendar navigator, for example to change the                                         ",{}],["|",{"inverse":true}],[" 27 ",{"fg":3,"bold":true}],["  .tcshrc         ",{}]],"27":[["~                   ",{"fg":4,"bold":true}],["|",{"inverse":true}],[" 99 ",{"fg":3,"bold":true}],["language, use this variable.  Entries should be comma separated. >                                              ",{}],["|",{"inverse":true}],[" 28 ",{"fg":3,"bold":true}],["  .viminfo        ",{}]],"28":[["~                   ",{"fg":4,"bold":true}],["|",{"inverse":true}],["100 ",{"fg":3,"bold":true}],["  let g:calendar_navi_label = 'Prev,Today,Next'                                                                 ",{}],["|",{"inverse":true}],[" 29 ",{"fg":3,"bold":true}],["  .vimrc          ",{}]],"29":[["~                   ",{"fg":4,"bold":true}],["|",{"inverse":true}],["101 ",{"fg":3,"bold":true}],["<                                                                                                               ",{}],["|",{"inverse":true}],[" 30 ",{"fg":3,"bold":true}],["  .xsession-errors",{}]],"30":[["~                   ",{"fg":4,"bold":true}],["|",{"inverse":true}],["102 ",{"fg":3,"bold":true}],["                                                                                                                ",{}],["|",{"inverse":true}],[" 31 ",{"fg":3,"bold":true}],["  anaconda-ks.cfg ",{}]],"31":[["~                   ",{"fg":4,"bold":true}],["|",{"inverse":true}],["103 ",{"fg":3,"bold":true}],["                                                *g:calendar_erafmt*                                             ",{}],["|",{"inverse":true}],[" 32 ",{"fg":3,"bold":true}],["  initial-setup-ks",{}]],"32":[["~                   ",{"fg":4,"bold":true}],["|",{"inverse":true}],["104 ",{"fg":3,"bold":true}],["To change the dating system, set the following variable.  Include the name of                                   ",{}],["|",{"inverse":true}],[" 33 ",{"fg":3,"bold":true}],["  test.c          ",{}]],"33":[["~                   ",{"fg":4,"bold":true}],["|",{"inverse":true}],["105 ",{"fg":3,"bold":true}],["the dating system and its offset from the Georgian calendar (A.D.).  For                                        ",{}],["|",{"inverse":true}],[" 34 ",{"fg":3,"bold":true}],["  test.cpp        ",{}]],"34":[["~                   ",{"fg":4,"bold":true}],["|",{"inverse":true}],["106 ",{"fg":3,"bold":true}],["example, to use the current Japanese era (Heisei), you would set: >                                             ",{}],["|",{"inverse":true}],[" 35 ",{"fg":3,"bold":true}],["  .test.cpp.swp   ",{}]],"35":[["~                   ",{"fg":4,"bold":true}],["|",{"inverse":true}],["107 ",{"fg":3,"bold":true}],["  let g:calendar_erafmt = 'Heisei,-1988'                                                                        ",{}],["|",{"inverse":true}],["~                     ",{"fg":4,"bold":true}]],"36":[["~                   ",{"fg":4,"bold":true}],["|",{"inverse":true}],["108 ",{"fg":3,"bold":true}],["<                                                                                                               ",{}],["|",{"inverse":true}],["~                     ",{"fg":4,"bold":true}]],"37":[["~                   ",{"fg":4,"bold":true}],["|",{"inverse":true}],["109 ",{"fg":3,"bold":true}],["                                                                                                                ",{}],["|",{"inverse":true}],["~                     ",{"fg":4,"bold":true}]],"38":[["~                   ",{"fg":4,"bold":true}],["|",{"inverse":true}],["110 ",{"fg":3,"bold":true}],["                                                *g:calendar_mruler*                                             ",{}],["|",{"inverse":true}],["~                     ",{"fg":4,"bold":true}]],"39":[["~                   ",{"fg":4,"bold":true}],["|",{"inverse":true}],["111 ",{"fg":3,"bold":true}],["To change the month names for the calendar headings, set this variable.  The                                    ",{}],["|",{"inverse":true}],["~                     ",{"fg":4,"bold":true}]],"40":[["~                   ",{"fg":4,"bold":true}],["|",{"inverse":true}],["112 ",{"fg":3,"bold":true}],["value is expected to be a comma-separated list of twelve values, starting with                                  ",{}],["|",{"inverse":true}],["~                     ",{"fg":4,"bold":true}]],"41":[["~                   ",{"fg":4,"bold":true}],["|",{"inverse":true}],["113 ",{"fg":3,"bold":true}],["Janurary: >                                                                                                     ",{}],["|",{"inverse":true}],["~                     ",{"fg":4,"bold":true}]],"42":[["~                   ",{"fg":4,"bold":true}],["|",{"inverse":true}],["114 ",{"fg":3,"bold":true}],["  let g:calendar_mruler = 'Jan,Feb,Mar,Apr,May,Jun,Jul,Aug,Sep,Oct,Nov,Dec'                                     ",{}],["|",{"inverse":true}],["~                     ",{"fg":4,"bold":true}]],"43":[["~                   ",{"fg":4,"bold":true}],["|",{"inverse":true}],["115 ",{"fg":3,"bold":true}],["<                                                                                                               ",{}],["|",{"inverse":true}],["~                     ",{"fg":4,"bold":true}]],"44":[["~                   ",{"fg":4,"bold":true}],["|",{"inverse":true}],["116 ",{"fg":3,"bold":true}],["                                                                                                                ",{}],["|",{"inverse":true}],["~                     ",{"fg":4,"bold":true}]],"45":[["~                   ",{"fg":4,"bold":true}],["|",{"inverse":true}],["117 ",{"fg":3,"bold":true}],["                                                *g:calendar_wruler*                                             ",{"underline":true}],["|",{"inverse":true}],["~                     ",{"fg":4,"bold":true}]],"46":[["[Name] test.cpp      ",{"inverse":true}],[" NORMAL ",{"bold":true}],[" ",{}],["calendar.txt ",{"bold":true}],["                                                        unix │ utf-8 │ text │  53% ",{}],[" LN 117",{"bold":true}],[":1  ",{}],[" ",{"bold":true,"inverse":true}],[" ~/…/calendar-vim/doc>",{"bold":true}]]}}],[0.043235,{"lines":{"0":[["\" Press <F1> for hel",{"fg":6,"bold":true}],["|",{"inverse":true}],[" 73 ",{"fg":3,"bold":true}],["'goto_prev_month'           Jumps to the previous month.        '<Left>'                                        ",{}],["|",{"inverse":true}],["  1 ",{"fg":3,"bold":true}],["\" Press ? for help",{"fg":5,"bold":true}]],"1":[["                    ",{}],["|",{"inverse":true}],[" 74 ",{"fg":3,"bold":true}],["'goto_next_year'            Jumps to the next year.             '<Up>'                                          ",{}],["|",{"inverse":true}],["  2 ",{"fg":3,"bold":true}],["                  ",{}]],"2":[["▼",{"fg":3,"bold":true}],[" First",{"fg":5,"bold":true}],[" : ",{}],["struct",{"fg":2,"bold":true}],["    ",{}],["|",{"inverse":true}],[" 75 ",{"fg":3,"bold":true}],["'goto_prev_year'            Jumps to the previous year.         '<Down>'                                        ",{}],["|",{"inverse":true}],["  3 ",{"fg":3,"bold":true}],[".. (up a dir)",{"fg":6,"bold":true}],["     ",{}]],"3":[["    [prototypes]",{"fg":6,"bold":true}],["    ",{}],["|",{"inverse":true}],[" 76 ",{"fg":3,"bold":true}],["An example in your .vimrc might look like this: >                                                               ",{}],["|",{"inverse":true}],["  4 /root/",{"fg":3,"bold":true}],["            ",{}]],"4":[["   ",{}],["+",{"fg":2,"bold":true}],["FirstRun(void)  ",{}],["|",{"inverse":true}],[" 77 ",{"fg":3,"bold":true}],["  let g:calendar_keys = { 'goto_next_month': '<C-Right>', 'goto_prev_month': '<C-Left>'}                        ",{}],["|",{"inverse":true}],["  5 ",{"fg":3,"bold":true}],["▸ .asciinema/",{"fg":6,"bold":true}],["     ",{}]],"5":[["   ",{}],["+",{"fg":2,"bold":true}],["FirstRun2(void) ",{}],["|",{"inverse":true}],[" 78 ",{"fg":3,"bold":true}],["<                                                                                                               ",{}],["|",{"inverse":true}],["  6 ",{"fg":3,"bold":true}],["▸ .cache/",{"fg":6,"bold":true}],["         ",{}]],"6":[["                    ",{}],["|",{"inverse":true}],[" 79 ",{"fg":3,"bold":true}],["                                                                                                                ",{}],["|",{"inverse":true}],["  7 ",{"fg":3,"bold":true}],["▸ .config/",{"fg":6,"bold":true}],["        ",{}]],"7":[["▼",{"fg":3,"bold":true}],[" Last",{"fg":5,"bold":true}],[" : ",{}],["struct",{"fg":2,"bold":true}],["     ",{}],["|",{"inverse":true}],[" 80 ",{"fg":3,"bold":true}],["                                                                                                                ",{}],["|",{"inverse":true}],["  8 ",{"fg":3,"bold":true}],["▸ .dbus/",{"fg":6,"bold":true}],["          ",{}]]},"cursor":{"y":7,"visible":false}}],[0.01621,{"lines":{"0":[["\" Press <F1> for hel",{"fg":6,"bold":true}],["|",{"inverse":true}],[" 74 ",{"fg":3,"bold":true}],["'goto_next_year'            Jumps to the next year.             '<Up>'                                          ",{}],["|",{"inverse":true}],["  1 ",{"fg":3,"bold":true}],["\" Press ? for help",{"fg":5,"bold":true}]],"1":[["                    ",{}],["|",{"inverse":true}],[" 75 ",{"fg":3,"bold":true}],["'goto_prev_year'            Jumps to the previous year.         '<Down>'                                        ",{}],["|",{"inverse":true}],["  2 ",{"fg":3,"bold":true}],["                  ",{}]],"2":[["▼",{"fg":3,"bold":true}],[" First",{"fg":5,"bold":true}],[" : ",{}],["struct",{"fg":2,"bold":true}],["    ",{}],["|",{"inverse":true}],[" 76 ",{"fg":3,"bold":true}],["An example in your .vimrc might look like this: >                                                               ",{}],["|",{"inverse":true}],["  3 ",{"fg":3,"bold":true}],[".. (up a dir)",{"fg":6,"bold":true}],["     ",{}]],"3":[["    [prototypes]",{"fg":6,"bold":true}],["    ",{}],["|",{"inverse":true}],[" 77 ",{"fg":3,"bold":true}],["  let g:calendar_keys = { 'goto_next_month': '<C-Right>', 'goto_prev_month': '<C-Left>'}                        ",{}],["|",{"inverse":true}],["  4 /root/",{"fg":3,"bold":true}],["            ",{}]],"4":[["   ",{}],["+",{"fg":2,"bold":true}],["FirstRun(void)  ",{}],["|",{"inverse":true}],[" 78 ",{"fg":3,"bold":true}],["<                                                                                                               ",{}],["|",{"inverse":true}],["  5 ",{"fg":3,"bold":true}],["▸ .asciinema/",{"fg":6,"bold":true}],["     ",{}]],"5":[["   ",{}],["+",{"fg":2,"bold":true}],["FirstRun2(void) ",{}],["|",{"inverse":true}],[" 79 ",{"fg":3,"bold":true}],["                                                                                                                ",{}],["|",{"inverse":true}],["  6 ",{"fg":3,"bold":true}],["▸ .cache/",{"fg":6,"bold":true}],["         ",{}]],"6":[["                    ",{}],["|",{"inverse":true}],[" 80 ",{"fg":3,"bold":true}],["                                                *g:calendar_mark*                                               ",{}],["|",{"inverse":true}],["  7 ",{"fg":3,"bold":true}],["▸ .config/",{"fg":6,"bold":true}],["        ",{}]],"7":[["▼",{"fg":3,"bold":true}],[" Last",{"fg":5,"bold":true}],[" : ",{}],["struct",{"fg":2,"bold":true}],["     ",{}],["|",{"inverse":true}],[" 81 ",{"fg":3,"bold":true}],["Place a '*' or '+' mark after the day.  Acceptable values are 'left',                                           ",{}],["|",{"inverse":true}],["  8 ",{"fg":3,"bold":true}],["▸ .dbus/",{"fg":6,"bold":true}],["          ",{}]],"8":[["    [functions]",{"fg":6,"bold":true}],["     ",{}],["|",{"inverse":true}],[" 82 ",{"fg":3,"bold":true}],["'left-fit', and 'right': >                                                                                      ",{}],["|",{"inverse":true}],["  9 ",{"fg":3,"bold":true}],["▸ .gnupg/",{"fg":6,"bold":true}],["         ",{}]],"9":[["   ",{}],["+",{"fg":2,"bold":true}],["FirstRun(void)  ",{}],["|",{"inverse":true}],[" 83 ",{"fg":3,"bold":true}],["  let g:calendar_mark = 'right'                                                                                 ",{}],["|",{"inverse":true}],[" 10 ",{"fg":3,"bold":true}],["▸ .kde/",{"fg":6,"bold":true}],["           ",{}]],"10":[["   ",{}],["+",{"fg":2,"bold":true}],["FirstRun2(void) ",{}],["|",{"inverse":true}],[" 84 ",{"fg":3,"bold":true}],["<                                                                                                               ",{}],["|",{"inverse":true}],[" 11 ",{"fg":3,"bold":true}],["▸ .local/",{"fg":6,"bold":true}],["         ",{}]],"11":[["   ",{}],["+",{"fg":2,"bold":true}],["~Last()         ",{}],["|",{"inverse":true}],[" 85 ",{"fg":3,"bold":true}],["                                                                                                                ",{}],["|",{"inverse":true}],[" 12 ",{"fg":3,"bold":true}],["▸ .pki/",{"fg":6,"bold":true}],["           ",{}]],"12":[["   ",{}],["+",{"fg":2,"bold":true}],["SecondRun(void) ",{}],["|",{"inverse":true}],[" 86 ",{"fg":3,"bold":true}],["                                                *g:calendar_diary*                                              ",{}],["|",{"inverse":true}],[" 13 ",{"fg":3,"bold":true}],["▸ .ssh/",{"fg":6,"bold":true}],["           ",{}]],"13":[["   ",{}],["+",{"fg":2,"bold":true}],["SecondRun2(void)",{}],["|",{"inverse":true}],[" 87 ",{"fg":3,"bold":true}],["Specify the directory for the diary files.  The default value is $HOME/diary.                                   ",{}],["|",{"inverse":true}],[" 14 ",{"fg":3,"bold":true}],["▸ .vim/",{"fg":6,"bold":true}],["           ",{}]],"14":[["                    ",{}],["|",{"inverse":true}],[" 88 ",{"fg":3,"bold":true}],["  let g:calendar_diary=$HOME.'/.vim/diary'                                                                      ",{}],["|",{"inverse":true}],[" 15 ",{"fg":3,"bold":true}],["▸ diary/",{"fg":6,"bold":true}],["          ",{}]],"15":[["▼",{"fg":3,"bold":true}],[" Second",{"fg":5,"bold":true}],[" : ",{}],["struct",{"fg":2,"bold":true}],["   ",{}],["|",{"inverse":true}],[" 88 ",{"fg":3,"bold":true}],["  let g:calendar_diary=$HOME.'/.vim/diary'                                                                      ",{}],["|",{"inverse":true}],[" 16 ",{"fg":3,"bold":true}],["▸ temp/",{"fg":6,"bold":true}],["           ",{}]],"16":[["    [prototypes]",{"fg":6,"bold":true}],["    ",{}],["|",{"inverse":true}],[" 89 ",{"fg":3,"bold":true}],["                                                                                                                ",{}],["|",{"inverse":true}],[" 17 ",{"fg":3,"bold":true}],["  .bash_history   ",{}]],"17":[["   ",{}],["+",{"fg":2,"bold":true}],["SecondRun(void) ",{}],["|",{"inverse":true}],[" 90 ",{"fg":3,"bold":true}],["                                                                                                                ",{}],["|",{"inverse":true}],[" 18 ",{"fg":3,"bold":true}],["  .bash_logout    ",{}]],"18":[["   ",{}],["+",{"fg":2,"bold":true}],["SecondRun2(void)",{}],["|",{"inverse":true}],[" 91 ",{"fg":3,"bold":true}],["                                                *g:calendar_navi*                                               ",{}],["|",{"inverse":true}],[" 19 ",{"fg":3,"bold":true}],["  .bash_profile   ",{"underline":true}]],"19":[["                    ",{}],["|",{"inverse":true}],[" 92 ",{"fg":3,"bold":true}],["To control the calendar navigator, set this variable.  Acceptable values are                                    ",{}],["|",{"inverse":true}],[" 20 ",{"fg":3,"bold":true}],["  .bashrc         ",{}]],"20":[["▼",{"fg":3,"bold":true}],[" ",{}],["functions",{"fg":6,"bold":true}],["         ",{}],["|",{"inverse":true}],[" 93 ",{"fg":3,"bold":true}],["'top', 'bottom', or 'both'. >                                                                                   ",{}],["|",{"inverse":true}],[" 21 ",{"fg":3,"bold":true}],["  .cshrc          ",{}]],"21":[["    main(int argc, c",{"underline":true}],["|",{"inverse":true}],[" 94 ",{"fg":3,"bold":true}],["  let g:calendar_navi = ''                                                                                      ",{}],["|",{"inverse":true}],[" 22 ",{"fg":3,"bold":true}],["  .dmrc           ",{}]],"22":[["~                   ",{"fg":4,"bold":true}],["|",{"inverse":true}],[" 95 ",{"fg":3,"bold":true}],["<                                                                                                               ",{}],["|",{"inverse":true}],[" 23 ",{"fg":3,"bold":true}],["  .esd_auth       ",{}]],"23":[["~                   ",{"fg":4,"bold":true}],["|",{"inverse":true}],[" 96 ",{"fg":3,"bold":true}],["                                                                                                                ",{}],["|",{"inverse":true}],[" 24 ",{"fg":3,"bold":true}],["  .gtkrc-2.0      ",{}]],"24":[["~                   ",{"fg":4,"bold":true}],["|",{"inverse":true}],[" 97 ",{"fg":3,"bold":true}],["                                                *g:calendar_navi_label*                                         ",{}],["|",{"inverse":true}],[" 25 ",{"fg":3,"bold":true}],["  .gtkrc-2.0-kde4 ",{}]],"25":[["~                   ",{"fg":4,"bold":true}],["|",{"inverse":true}],[" 98 ",{"fg":3,"bold":true}],["To set the labels for the calendar navigator, for example to change the                                         ",{}],["|",{"inverse":true}],[" 26 ",{"fg":3,"bold":true}],["  .lesshst        ",{}]],"26":[["~                   ",{"fg":4,"bold":true}],["|",{"inverse":true}],[" 99 ",{"fg":3,"bold":true}],["language, use this variable.  Entries should be comma separated. >                                              ",{}],["|",{"inverse":true}],[" 27 ",{"fg":3,"bold":true}],["  .tcshrc         ",{}]],"27":[["~                   ",{"fg":4,"bold":true}],["|",{"inverse":true}],["100 ",{"fg":3,"bold":true}],["  let g:calendar_navi_label = 'Prev,Today,Next'                                                                 ",{}],["|",{"inverse":true}],[" 28 ",{"fg":3,"bold":true}],["  .viminfo        ",{}]],"28":[["~                   ",{"fg":4,"bold":true}],["|",{"inverse":true}],["101 ",{"fg":3,"bold":true}],["<                                                                                                               ",{}],["|",{"inverse":true}],[" 29 ",{"fg":3,"bold":true}],["  .vimrc          ",{}]],"29":[["~                   ",{"fg":4,"bold":true}],["|",{"inverse":true}],["102 ",{"fg":3,"bold":true}],["                                                                                                                ",{}],["|",{"inverse":true}],[" 30 ",{"fg":3,"bold":true}],["  .xsession-errors",{}]],"30":[["~                   ",{"fg":4,"bold":true}],["|",{"inverse":true}],["103 ",{"fg":3,"bold":true}],["                                                *g:calendar_erafmt*                                             ",{}],["|",{"inverse":true}],[" 31 ",{"fg":3,"bold":true}],["  anaconda-ks.cfg ",{}]],"31":[["~                   ",{"fg":4,"bold":true}],["|",{"inverse":true}],["104 ",{"fg":3,"bold":true}],["To change the dating system, set the following variable.  Include the name of                                   ",{}],["|",{"inverse":true}],[" 32 ",{"fg":3,"bold":true}],["  initial-setup-ks",{}]],"32":[["~                   ",{"fg":4,"bold":true}],["|",{"inverse":true}],["105 ",{"fg":3,"bold":true}],["the dating system and its offset from the Georgian calendar (A.D.).  For                                        ",{}],["|",{"inverse":true}],[" 33 ",{"fg":3,"bold":true}],["  test.c          ",{}]],"33":[["~                   ",{"fg":4,"bold":true}],["|",{"inverse":true}],["106 ",{"fg":3,"bold":true}],["example, to use the current Japanese era (Heisei), you would set: >                                             ",{}],["|",{"inverse":true}],[" 34 ",{"fg":3,"bold":true}],["  test.cpp        ",{}]],"34":[["~                   ",{"fg":4,"bold":true}],["|",{"inverse":true}],["107 ",{"fg":3,"bold":true}],["  let g:calendar_erafmt = 'Heisei,-1988'                                                                        ",{}],["|",{"inverse":true}],[" 35 ",{"fg":3,"bold":true}],["  .test.cpp.swp   ",{}]],"35":[["~                   ",{"fg":4,"bold":true}],["|",{"inverse":true}],["108 ",{"fg":3,"bold":true}],["<                                                                                                               ",{}],["|",{"inverse":true}],["~                     ",{"fg":4,"bold":true}]],"36":[["~                   ",{"fg":4,"bold":true}],["|",{"inverse":true}],["109 ",{"fg":3,"bold":true}],["                                                                                                                ",{}],["|",{"inverse":true}],["~                     ",{"fg":4,"bold":true}]],"37":[["~                   ",{"fg":4,"bold":true}],["|",{"inverse":true}],["110 ",{"fg":3,"bold":true}],["                                                *g:calendar_mruler*                                             ",{}],["|",{"inverse":true}],["~                     ",{"fg":4,"bold":true}]],"38":[["~                   ",{"fg":4,"bold":true}],["|",{"inverse":true}],["111 ",{"fg":3,"bold":true}],["To change the month names for the calendar headings, set this variable.  The                                    ",{}],["|",{"inverse":true}],["~                     ",{"fg":4,"bold":true}]],"39":[["~                   ",{"fg":4,"bold":true}],["|",{"inverse":true}],["112 ",{"fg":3,"bold":true}],["value is expected to be a comma-separated list of twelve values, starting with                                  ",{}],["|",{"inverse":true}],["~                     ",{"fg":4,"bold":true}]],"40":[["~                   ",{"fg":4,"bold":true}],["|",{"inverse":true}],["113 ",{"fg":3,"bold":true}],["Janurary: >                                                                                                     ",{}],["|",{"inverse":true}],["~                     ",{"fg":4,"bold":true}]],"41":[["~                   ",{"fg":4,"bold":true}],["|",{"inverse":true}],["114 ",{"fg":3,"bold":true}],["  let g:calendar_mruler = 'Jan,Feb,Mar,Apr,May,Jun,Jul,Aug,Sep,Oct,Nov,Dec'                                     ",{}],["|",{"inverse":true}],["~                     ",{"fg":4,"bold":true}]],"42":[["~                   ",{"fg":4,"bold":true}],["|",{"inverse":true}],["115 ",{"fg":3,"bold":true}],["<                                                                                                               ",{}],["|",{"inverse":true}],["~                     ",{"fg":4,"bold":true}]],"43":[["~                   ",{"fg":4,"bold":true}],["|",{"inverse":true}],["116 ",{"fg":3,"bold":true}],["                                                                                                                ",{}],["|",{"inverse":true}],["~                     ",{"fg":4,"bold":true}]],"44":[["~                   ",{"fg":4,"bold":true}],["|",{"inverse":true}],["117 ",{"fg":3,"bold":true}],["                                                *g:calendar_wruler*                                             ",{}],["|",{"inverse":true}],["~                     ",{"fg":4,"bold":true}]],"45":[["~                   ",{"fg":4,"bold":true}],["|",{"inverse":true}],["118 ",{"fg":3,"bold":true}],["To change the week names for the calendar headings, set this variable.  The                                     ",{"underline":true}],["|",{"inverse":true}],["~                     ",{"fg":4,"bold":true}]],"46":[["[Name] test.cpp      ",{"inverse":true}],[" NORMAL ",{"bold":true}],[" ",{}],["calendar.txt ",{"bold":true}],["                                                        unix │ utf-8 │ text │  53% ",{}],[" LN 118",{"bold":true}],[":1  ",{}],[" ",{"bold":true,"inverse":true}],[" ~/…/calendar-vim/doc>",{"bold":true}]]},"cursor":{"x":120,"y":14}}],[0.007828,{"lines":{"15":[["▼",{"fg":3,"bold":true}],[" Second",{"fg":5,"bold":true}],[" : ",{}],["struct",{"fg":2,"bold":true}],["   ",{}],["|",{"inverse":true}],[" 89 ",{"fg":3,"bold":true}],["                                                                                                                ",{}],["|",{"inverse":true}],[" 16 ",{"fg":3,"bold":true}],["▸ temp/",{"fg":6,"bold":true}],["           ",{}]],"16":[["    [prototypes]",{"fg":6,"bold":true}],["    ",{}],["|",{"inverse":true}],[" 90 ",{"fg":3,"bold":true}],["                                                                                                                ",{}],["|",{"inverse":true}],[" 17 ",{"fg":3,"bold":true}],["  .bash_history   ",{}]],"17":[["   ",{}],["+",{"fg":2,"bold":true}],["SecondRun(void) ",{}],["|",{"inverse":true}],[" 91 ",{"fg":3,"bold":true}],["                                                *g:calendar_navi*                                               ",{}],["|",{"inverse":true}],[" 18 ",{"fg":3,"bold":true}],["  .bash_logout    ",{}]],"18":[["   ",{}],["+",{"fg":2,"bold":true}],["SecondRun2(void)",{}],["|",{"inverse":true}],[" 92 ",{"fg":3,"bold":true}],["To control the calendar navigator, set this variable.  Acceptable values are                                    ",{}],["|",{"inverse":true}],[" 19 ",{"fg":3,"bold":true}],["  .bash_profile   ",{"underline":true}]],"19":[["                    ",{}],["|",{"inverse":true}],[" 93 ",{"fg":3,"bold":true}],["'top', 'bottom', or 'both'. >                                                                                   ",{}],["|",{"inverse":true}],[" 20 ",{"fg":3,"bold":true}],["  .bashrc         ",{}]],"20":[["▼",{"fg":3,"bold":true}],[" ",{}],["functions",{"fg":6,"bold":true}],["         ",{}],["|",{"inverse":true}],[" 94 ",{"fg":3,"bold":true}],["  let g:calendar_navi = ''                                                                                      ",{}],["|",{"inverse":true}],[" 21 ",{"fg":3,"bold":true}],["  .cshrc          ",{}]],"21":[["    main(int argc, c",{"underline":true}],["|",{"inverse":true}],[" 95 ",{"fg":3,"bold":true}],["<                                                                                                               ",{}],["|",{"inverse":true}],[" 22 ",{"fg":3,"bold":true}],["  .dmrc           ",{}]],"22":[["~                   ",{"fg":4,"bold":true}],["|",{"inverse":true}],[" 96 ",{"fg":3,"bold":true}],["                                                                                                                ",{}],["|",{"inverse":true}],[" 23 ",{"fg":3,"bold":true}],["  .esd_auth       ",{}]],"23":[["~                   ",{"fg":4,"bold":true}],["|",{"inverse":true}],[" 97 ",{"fg":3,"bold":true}],["                                                *g:calendar_navi_label*                                         ",{}],["|",{"inverse":true}],[" 24 ",{"fg":3,"bold":true}],["  .gtkrc-2.0      ",{}]],"24":[["~                   ",{"fg":4,"bold":true}],["|",{"inverse":true}],[" 98 ",{"fg":3,"bold":true}],["To set the labels for the calendar navigator, for example to change the                                         ",{}],["|",{"inverse":true}],[" 25 ",{"fg":3,"bold":true}],["  .gtkrc-2.0-kde4 ",{}]],"25":[["~                   ",{"fg":4,"bold":true}],["|",{"inverse":true}],[" 99 ",{"fg":3,"bold":true}],["language, use this variable.  Entries should be comma separated. >                                              ",{}],["|",{"inverse":true}],[" 26 ",{"fg":3,"bold":true}],["  .lesshst        ",{}]],"26":[["~                   ",{"fg":4,"bold":true}],["|",{"inverse":true}],["100 ",{"fg":3,"bold":true}],["  let g:calendar_navi_label = 'Prev,Today,Next'                                                                 ",{}],["|",{"inverse":true}],[" 27 ",{"fg":3,"bold":true}],["  .tcshrc         ",{}]],"27":[["~                   ",{"fg":4,"bold":true}],["|",{"inverse":true}],["101 ",{"fg":3,"bold":true}],["<                                                                                                               ",{}],["|",{"inverse":true}],[" 28 ",{"fg":3,"bold":true}],["  .viminfo        ",{}]],"28":[["~                   ",{"fg":4,"bold":true}],["|",{"inverse":true}],["102 ",{"fg":3,"bold":true}],["                                                                                                                ",{}],["|",{"inverse":true}],[" 29 ",{"fg":3,"bold":true}],["  .vimrc          ",{}]],"29":[["~                   ",{"fg":4,"bold":true}],["|",{"inverse":true}],["103 ",{"fg":3,"bold":true}],["                                                *g:calendar_erafmt*                                             ",{}],["|",{"inverse":true}],[" 30 ",{"fg":3,"bold":true}],["  .xsession-errors",{}]],"30":[["~                   ",{"fg":4,"bold":true}],["|",{"inverse":true}],["104 ",{"fg":3,"bold":true}],["To change the dating system, set the following variable.  Include the name of                                   ",{}],["|",{"inverse":true}],[" 31 ",{"fg":3,"bold":true}],["  anaconda-ks.cfg ",{}]],"31":[["~                   ",{"fg":4,"bold":true}],["|",{"inverse":true}],["105 ",{"fg":3,"bold":true}],["the dating system and its offset from the Georgian calendar (A.D.).  For                                        ",{}],["|",{"inverse":true}],[" 32 ",{"fg":3,"bold":true}],["  initial-setup-ks",{}]],"32":[["~                   ",{"fg":4,"bold":true}],["|",{"inverse":true}],["106 ",{"fg":3,"bold":true}],["example, to use the current Japanese era (Heisei), you would set: >                                             ",{}],["|",{"inverse":true}],[" 33 ",{"fg":3,"bold":true}],["  test.c          ",{}]],"33":[["~                   ",{"fg":4,"bold":true}],["|",{"inverse":true}],["107 ",{"fg":3,"bold":true}],["  let g:calendar_erafmt = 'Heisei,-1988'                                                                        ",{}],["|",{"inverse":true}],[" 34 ",{"fg":3,"bold":true}],["  test.cpp        ",{}]],"34":[["~                   ",{"fg":4,"bold":true}],["|",{"inverse":true}],["108 ",{"fg":3,"bold":true}],["<                                                                                                               ",{}],["|",{"inverse":true}],[" 35 ",{"fg":3,"bold":true}],["  .test.cpp.swp   ",{}]],"35":[["~                   ",{"fg":4,"bold":true}],["|",{"inverse":true}],["109 ",{"fg":3,"bold":true}],["                                                                                                                ",{}],["|",{"inverse":true}],["~                     ",{"fg":4,"bold":true}]],"36":[["~                   ",{"fg":4,"bold":true}],["|",{"inverse":true}],["110 ",{"fg":3,"bold":true}],["                                                *g:calendar_mruler*                                             ",{}],["|",{"inverse":true}],["~                     ",{"fg":4,"bold":true}]],"37":[["~                   ",{"fg":4,"bold":true}],["|",{"inverse":true}],["111 ",{"fg":3,"bold":true}],["To change the month names for the calendar headings, set this variable.  The                                    ",{}],["|",{"inverse":true}],["~                     ",{"fg":4,"bold":true}]],"38":[["~                   ",{"fg":4,"bold":true}],["|",{"inverse":true}],["112 ",{"fg":3,"bold":true}],["value is expected to be a comma-separated list of twelve values, starting with                                  ",{}],["|",{"inverse":true}],["~                     ",{"fg":4,"bold":true}]],"39":[["~                   ",{"fg":4,"bold":true}],["|",{"inverse":true}],["113 ",{"fg":3,"bold":true}],["Janurary: >                                                                                                     ",{}],["|",{"inverse":true}],["~                     ",{"fg":4,"bold":true}]],"40":[["~                   ",{"fg":4,"bold":true}],["|",{"inverse":true}],["114 ",{"fg":3,"bold":true}],["  let g:calendar_mruler = 'Jan,Feb,Mar,Apr,May,Jun,Jul,Aug,Sep,Oct,Nov,Dec'                                     ",{}],["|",{"inverse":true}],["~                     ",{"fg":4,"bold":true}]],"41":[["~                   ",{"fg":4,"bold":true}],["|",{"inverse":true}],["115 ",{"fg":3,"bold":true}],["<                                                                                                               ",{}],["|",{"inverse":true}],["~                     ",{"fg":4,"bold":true}]],"42":[["~                   ",{"fg":4,"bold":true}],["|",{"inverse":true}],["116 ",{"fg":3,"bold":true}],["                                                                                                                ",{}],["|",{"inverse":true}],["~                     ",{"fg":4,"bold":true}]],"43":[["~                   ",{"fg":4,"bold":true}],["|",{"inverse":true}],["117 ",{"fg":3,"bold":true}],["                                                *g:calendar_wruler*                                             ",{}],["|",{"inverse":true}],["~                     ",{"fg":4,"bold":true}]],"44":[["~                   ",{"fg":4,"bold":true}],["|",{"inverse":true}],["118 ",{"fg":3,"bold":true}],["To change the week names for the calendar headings, set this variable.  The                                     ",{}],["|",{"inverse":true}],["~                     ",{"fg":4,"bold":true}]],"45":[["~                   ",{"fg":4,"bold":true}],["|",{"inverse":true}],["119 ",{"fg":3,"bold":true}],["value is expected to be a space-separated list of seven values, starting with                                   ",{"underline":true}],["|",{"inverse":true}],["~                     ",{"fg":4,"bold":true}]],"46":[["[Name] test.cpp      ",{"inverse":true}],[" NORMAL ",{"bold":true}],[" ",{}],["calendar.txt ",{"bold":true}],["                                                        unix │ utf-8 │ text │  54% ",{}],[" LN 119",{"bold":true}],[":1  ",{}],[" ",{"bold":true,"inverse":true}],[" ~/…/calendar-vim/doc>",{"bold":true}]]},"cursor":{"x":25,"y":45,"visible":true}}],[0.031509,{"lines":{"0":[["\" Press <F1> for hel",{"fg":6,"bold":true}],["|",{"inverse":true}],[" 75 ",{"fg":3,"bold":true}],["'goto_prev_year'            Jumps to the previous year.         '<Down>'                                        ",{}],["|",{"inverse":true}],["  1 ",{"fg":3,"bold":true}],["\" Press ? for help",{"fg":5,"bold":true}]],"1":[["                    ",{}],["|",{"inverse":true}],[" 76 ",{"fg":3,"bold":true}],["An example in your .vimrc might look like this: >                                                               ",{}],["|",{"inverse":true}],["  2 ",{"fg":3,"bold":true}],["                  ",{}]],"2":[["▼",{"fg":3,"bold":true}],[" First",{"fg":5,"bold":true}],[" : ",{}],["struct",{"fg":2,"bold":true}],["    ",{}],["|",{"inverse":true}],[" 77 ",{"fg":3,"bold":true}],["  let g:calendar_keys = { 'goto_next_month': '<C-Right>', 'goto_prev_month': '<C-Left>'}                        ",{}],["|",{"inverse":true}],["  3 ",{"fg":3,"bold":true}],[".. (up a dir)",{"fg":6,"bold":true}],["     ",{}]],"3":[["    [prototypes]",{"fg":6,"bold":true}],["    ",{}],["|",{"inverse":true}],[" 78 ",{"fg":3,"bold":true}],["<                                                                                                               ",{}],["|",{"inverse":true}],["  4 /root/",{"fg":3,"bold":true}],["            ",{}]],"4":[["   ",{}],["+",{"fg":2,"bold":true}],["FirstRun(void)  ",{}],["|",{"inverse":true}],[" 79 ",{"fg":3,"bold":true}],["                                                                                                                ",{}],["|",{"inverse":true}],["  5 ",{"fg":3,"bold":true}],["▸ .asciinema/",{"fg":6,"bold":true}],["     ",{}]],"5":[["   ",{}],["+",{"fg":2,"bold":true}],["FirstRun2(void) ",{}],["|",{"inverse":true}],[" 80 ",{"fg":3,"bold":true}],["                                                *g:calendar_mark*                                               ",{}],["|",{"inverse":true}],["  6 ",{"fg":3,"bold":true}],["▸ .cache/",{"fg":6,"bold":true}],["         ",{}]],"6":[["                    ",{}],["|",{"inverse":true}],[" 81 ",{"fg":3,"bold":true}],["Place a '*' or '+' mark after the day.  Acceptable values are 'left',                                           ",{}],["|",{"inverse":true}],["  7 ",{"fg":3,"bold":true}],["▸ .config/",{"fg":6,"bold":true}],["        ",{}]],"7":[["▼",{"fg":3,"bold":true}],[" Last",{"fg":5,"bold":true}],[" : ",{}],["struct",{"fg":2,"bold":true}],["     ",{}],["|",{"inverse":true}],[" 82 ",{"fg":3,"bold":true}],["Place a '*' or '+' mark after the day.  Acceptable values are 'left',                                           ",{}],["|",{"inverse":true}],["  8 ",{"fg":3,"bold":true}],["▸ .dbus/",{"fg":6,"bold":true}],["          ",{}]]},"cursor":{"y":7,"visible":false}}],[0.00674,{"lines":{"7":[["▼",{"fg":3,"bold":true}],[" Last",{"fg":5,"bold":true}],[" : ",{}],["struct",{"fg":2,"bold":true}],["     ",{}],["|",{"inverse":true}],[" 82 ",{"fg":3,"bold":true}],["'left-fit', and 'right': >                                                                                      ",{}],["|",{"inverse":true}],["  8 ",{"fg":3,"bold":true}],["▸ .dbus/",{"fg":6,"bold":true}],["          ",{}]],"8":[["    [functions]",{"fg":6,"bold":true}],["     ",{}],["|",{"inverse":true}],[" 83 ",{"fg":3,"bold":true}],["  let g:calendar_mark = 'right'                                                                                 ",{}],["|",{"inverse":true}],["  9 ",{"fg":3,"bold":true}],["▸ .gnupg/",{"fg":6,"bold":true}],["         ",{}]],"9":[["   ",{}],["+",{"fg":2,"bold":true}],["FirstRun(void)  ",{}],["|",{"inverse":true}],[" 84 ",{"fg":3,"bold":true}],["<                                                                                                               ",{}],["|",{"inverse":true}],[" 10 ",{"fg":3,"bold":true}],["▸ .kde/",{"fg":6,"bold":true}],["           ",{}]],"10":[["   ",{}],["+",{"fg":2,"bold":true}],["FirstRun2(void) ",{}],["|",{"inverse":true}],[" 85 ",{"fg":3,"bold":true}],["                                                                                                                ",{}],["|",{"inverse":true}],[" 11 ",{"fg":3,"bold":true}],["▸ .local/",{"fg":6,"bold":true}],["         ",{}]],"11":[["   ",{}],["+",{"fg":2,"bold":true}],["~Last()         ",{}],["|",{"inverse":true}],[" 86 ",{"fg":3,"bold":true}],["                                                *g:calendar_diary*                                              ",{}],["|",{"inverse":true}],[" 12 ",{"fg":3,"bold":true}],["▸ .pki/",{"fg":6,"bold":true}],["           ",{}]],"12":[["   ",{}],["+",{"fg":2,"bold":true}],["SecondRun(void) ",{}],["|",{"inverse":true}],[" 87 ",{"fg":3,"bold":true}],["Specify the directory for the diary files.  The default value is $HOME/diary.                                   ",{}],["|",{"inverse":true}],[" 13 ",{"fg":3,"bold":true}],["▸ .ssh/",{"fg":6,"bold":true}],["           ",{}]],"13":[["   ",{}],["+",{"fg":2,"bold":true}],["SecondRun2(void)",{}],["|",{"inverse":true}],[" 88 ",{"fg":3,"bold":true}],["  let g:calendar_diary=$HOME.'/.vim/diary'                                                                      ",{}],["|",{"inverse":true}],[" 14 ",{"fg":3,"bold":true}],["▸ .vim/",{"fg":6,"bold":true}],["           ",{}]],"14":[["                    ",{}],["|",{"inverse":true}],[" 89 ",{"fg":3,"bold":true}],["                                                                                                                ",{}],["|",{"inverse":true}],[" 15 ",{"fg":3,"bold":true}],["▸ diary/",{"fg":6,"bold":true}],["          ",{}]],"15":[["▼",{"fg":3,"bold":true}],[" Second",{"fg":5,"bold":true}],[" : ",{}],["struct",{"fg":2,"bold":true}],["   ",{}],["|",{"inverse":true}],[" 90 ",{"fg":3,"bold":true}],["                                                                                                                ",{}],["|",{"inverse":true}],[" 16 ",{"fg":3,"bold":true}],["▸ temp/",{"fg":6,"bold":true}],["           ",{}]],"16":[["    [prototypes]",{"fg":6,"bold":true}],["    ",{}],["|",{"inverse":true}],[" 91 ",{"fg":3,"bold":true}],["                                                *g:calendar_navi*                                               ",{}],["|",{"inverse":true}],[" 17 ",{"fg":3,"bold":true}],["  .bash_history   ",{}]],"17":[["   ",{}],["+",{"fg":2,"bold":true}],["SecondRun(void) ",{}],["|",{"inverse":true}],[" 92 ",{"fg":3,"bold":true}],["To control the calendar navigator, set this variable.  Acceptable values are                                    ",{}],["|",{"inverse":true}],[" 18 ",{"fg":3,"bold":true}],["  .bash_logout    ",{}]],"18":[["   ",{}],["+",{"fg":2,"bold":true}],["SecondRun2(void)",{}],["|",{"inverse":true}],[" 93 ",{"fg":3,"bold":true}],["'top', 'bottom', or 'both'. >                                                                                   ",{}],["|",{"inverse":true}],[" 19 ",{"fg":3,"bold":true}],["  .bash_profile   ",{"underline":true}]],"19":[["                    ",{}],["|",{"inverse":true}],[" 94 ",{"fg":3,"bold":true}],["  let g:calendar_navi = ''                                                                                      ",{}],["|",{"inverse":true}],[" 20 ",{"fg":3,"bold":true}],["  .bashrc         ",{}]],"20":[["▼",{"fg":3,"bold":true}],[" ",{}],["functions",{"fg":6,"bold":true}],["         ",{}],["|",{"inverse":true}],[" 95 ",{"fg":3,"bold":true}],["<                                                                                                               ",{}],["|",{"inverse":true}],[" 21 ",{"fg":3,"bold":true}],["  .cshrc          ",{}]],"21":[["    main(int argc, c",{"underline":true}],["|",{"inverse":true}],[" 96 ",{"fg":3,"bold":true}],["                                                                                                                ",{}],["|",{"inverse":true}],[" 22 ",{"fg":3,"bold":true}],["  .dmrc           ",{}]],"22":[["~                   ",{"fg":4,"bold":true}],["|",{"inverse":true}],[" 97 ",{"fg":3,"bold":true}],["                                                *g:calendar_navi_label*                                         ",{}],["|",{"inverse":true}],[" 23 ",{"fg":3,"bold":true}],["  .esd_auth       ",{}]],"23":[["~                   ",{"fg":4,"bold":true}],["|",{"inverse":true}],[" 98 ",{"fg":3,"bold":true}],["To set the labels for the calendar navigator, for example to change the                                         ",{}],["|",{"inverse":true}],[" 24 ",{"fg":3,"bold":true}],["  .gtkrc-2.0      ",{}]],"24":[["~                   ",{"fg":4,"bold":true}],["|",{"inverse":true}],[" 99 ",{"fg":3,"bold":true}],["language, use this variable.  Entries should be comma separated. >                                              ",{}],["|",{"inverse":true}],[" 25 ",{"fg":3,"bold":true}],["  .gtkrc-2.0-kde4 ",{}]],"25":[["~                   ",{"fg":4,"bold":true}],["|",{"inverse":true}],["100 ",{"fg":3,"bold":true}],["  let g:calendar_navi_label = 'Prev,Today,Next'                                                                 ",{}],["|",{"inverse":true}],[" 26 ",{"fg":3,"bold":true}],["  .lesshst        ",{}]],"26":[["~                   ",{"fg":4,"bold":true}],["|",{"inverse":true}],["101 ",{"fg":3,"bold":true}],["<                                                                                                               ",{}],["|",{"inverse":true}],[" 27 ",{"fg":3,"bold":true}],["  .tcshrc         ",{}]],"27":[["~                   ",{"fg":4,"bold":true}],["|",{"inverse":true}],["102 ",{"fg":3,"bold":true}],["                                                                                                                ",{}],["|",{"inverse":true}],[" 28 ",{"fg":3,"bold":true}],["  .viminfo        ",{}]],"28":[["~                   ",{"fg":4,"bold":true}],["|",{"inverse":true}],["103 ",{"fg":3,"bold":true}],["                                                *g:calendar_erafmt*                                             ",{}],["|",{"inverse":true}],[" 29 ",{"fg":3,"bold":true}],["  .vimrc          ",{}]],"29":[["~                   ",{"fg":4,"bold":true}],["|",{"inverse":true}],["104 ",{"fg":3,"bold":true}],["To change the dating system, set the following variable.  Include the name of                                   ",{}],["|",{"inverse":true}],[" 30 ",{"fg":3,"bold":true}],["  .xsession-errors",{}]],"30":[["~                   ",{"fg":4,"bold":true}],["|",{"inverse":true}],["105 ",{"fg":3,"bold":true}],["the dating system and its offset from the Georgian calendar (A.D.).  For                                        ",{}],["|",{"inverse":true}],[" 31 ",{"fg":3,"bold":true}],["  anaconda-ks.cfg ",{}]],"31":[["~                   ",{"fg":4,"bold":true}],["|",{"inverse":true}],["106 ",{"fg":3,"bold":true}],["example, to use the current Japanese era (Heisei), you would set: >                                             ",{}],["|",{"inverse":true}],[" 32 ",{"fg":3,"bold":true}],["  initial-setup-ks",{}]],"32":[["~                   ",{"fg":4,"bold":true}],["|",{"inverse":true}],["107 ",{"fg":3,"bold":true}],["  let g:calendar_erafmt = 'Heisei,-1988'                                                                        ",{}],["|",{"inverse":true}],[" 33 ",{"fg":3,"bold":true}],["  test.c          ",{}]],"33":[["~                   ",{"fg":4,"bold":true}],["|",{"inverse":true}],["108 ",{"fg":3,"bold":true}],["<                                                                                                               ",{}],["|",{"inverse":true}],[" 34 ",{"fg":3,"bold":true}],["  test.cpp        ",{}]],"34":[["~                   ",{"fg":4,"bold":true}],["|",{"inverse":true}],["109 ",{"fg":3,"bold":true}],["                                                                                                                ",{}],["|",{"inverse":true}],[" 35 ",{"fg":3,"bold":true}],["  .test.cpp.swp   ",{}]],"35":[["~                   ",{"fg":4,"bold":true}],["|",{"inverse":true}],["110 ",{"fg":3,"bold":true}],["                                                *g:calendar_mruler*                                             ",{}],["|",{"inverse":true}],["~                     ",{"fg":4,"bold":true}]],"36":[["~                   ",{"fg":4,"bold":true}],["|",{"inverse":true}],["111 ",{"fg":3,"bold":true}],["To change the month names for the calendar headings, set this variable.  The                                    ",{}],["|",{"inverse":true}],["~                     ",{"fg":4,"bold":true}]],"37":[["~                   ",{"fg":4,"bold":true}],["|",{"inverse":true}],["112 ",{"fg":3,"bold":true}],["value is expected to be a comma-separated list of twelve values, starting with                                  ",{}],["|",{"inverse":true}],["~                     ",{"fg":4,"bold":true}]],"38":[["~                   ",{"fg":4,"bold":true}],["|",{"inverse":true}],["113 ",{"fg":3,"bold":true}],["Janurary: >                                                                                                     ",{}],["|",{"inverse":true}],["~                     ",{"fg":4,"bold":true}]],"39":[["~                   ",{"fg":4,"bold":true}],["|",{"inverse":true}],["114 ",{"fg":3,"bold":true}],["  let g:calendar_mruler = 'Jan,Feb,Mar,Apr,May,Jun,Jul,Aug,Sep,Oct,Nov,Dec'                                     ",{}],["|",{"inverse":true}],["~                     ",{"fg":4,"bold":true}]],"40":[["~                   ",{"fg":4,"bold":true}],["|",{"inverse":true}],["115 ",{"fg":3,"bold":true}],["<                                                                                                               ",{}],["|",{"inverse":true}],["~                     ",{"fg":4,"bold":true}]],"41":[["~                   ",{"fg":4,"bold":true}],["|",{"inverse":true}],["116 ",{"fg":3,"bold":true}],["                                                                                                                ",{}],["|",{"inverse":true}],["~                     ",{"fg":4,"bold":true}]],"42":[["~                   ",{"fg":4,"bold":true}],["|",{"inverse":true}],["117 ",{"fg":3,"bold":true}],["                                                *g:calendar_wruler*                                             ",{}],["|",{"inverse":true}],["~                     ",{"fg":4,"bold":true}]],"43":[["~                   ",{"fg":4,"bold":true}],["|",{"inverse":true}],["118 ",{"fg":3,"bold":true}],["To change the week names for the calendar headings, set this variable.  The                                     ",{}],["|",{"inverse":true}],["~                     ",{"fg":4,"bold":true}]],"44":[["~                   ",{"fg":4,"bold":true}],["|",{"inverse":true}],["119 ",{"fg":3,"bold":true}],["value is expected to be a space-separated list of seven values, starting with                                   ",{}],["|",{"inverse":true}],["~                     ",{"fg":4,"bold":true}]],"45":[["~                   ",{"fg":4,"bold":true}],["|",{"inverse":true}],["120 ",{"fg":3,"bold":true}],["Sunday: >                                                                                                       ",{"underline":true}],["|",{"inverse":true}],["~                     ",{"fg":4,"bold":true}]],"46":[["[Name] test.cpp      ",{"inverse":true}],[" NORMAL ",{"bold":true}],[" ",{}],["calendar.txt ",{"bold":true}],["                                                        unix │ utf-8 │ text │  54% ",{}],[" LN 120",{"bold":true}],[":1  ",{}],[" ",{"bold":true,"inverse":true}],[" ~/…/calendar-vim/doc>",{"bold":true}]]},"cursor":{"y":45,"visible":true}}],[0.020035,{"lines":{"47":[["                                                                                                                                                     j          ",{}]]},"cursor":{"visible":false}}],[0.004263,{"lines":{"0":[["\" Press <F1> for hel",{"fg":6,"bold":true}],["|",{"inverse":true}],[" 76 ",{"fg":3,"bold":true}],["An example in your .vimrc might look like this: >                                                               ",{}],["|",{"inverse":true}],["  1 ",{"fg":3,"bold":true}],["\" Press ? for help",{"fg":5,"bold":true}]],"1":[["                    ",{}],["|",{"inverse":true}],[" 77 ",{"fg":3,"bold":true}],["  let g:calendar_keys = { 'goto_next_month': '<C-Right>', 'goto_prev_month': '<C-Left>'}                        ",{}],["|",{"inverse":true}],["  2 ",{"fg":3,"bold":true}],["                  ",{}]],"2":[["▼",{"fg":3,"bold":true}],[" First",{"fg":5,"bold":true}],[" : ",{}],["struct",{"fg":2,"bold":true}],["    ",{}],["|",{"inverse":true}],[" 78 ",{"fg":3,"bold":true}],["<                                                                                                               ",{}],["|",{"inverse":true}],["  3 ",{"fg":3,"bold":true}],[".. (up a dir)",{"fg":6,"bold":true}],["     ",{}]],"3":[["    [prototypes]",{"fg":6,"bold":true}],["    ",{}],["|",{"inverse":true}],[" 79 ",{"fg":3,"bold":true}],["                                                                                                                ",{}],["|",{"inverse":true}],["  4 /root/",{"fg":3,"bold":true}],["            ",{}]],"4":[["   ",{}],["+",{"fg":2,"bold":true}],["FirstRun(void)  ",{}],["|",{"inverse":true}],[" 80 ",{"fg":3,"bold":true}],["                                                *g:calendar_mark*                                               ",{}],["|",{"inverse":true}],["  5 ",{"fg":3,"bold":true}],["▸ .asciinema/",{"fg":6,"bold":true}],["     ",{}]],"5":[["   ",{}],["+",{"fg":2,"bold":true}],["FirstRun2(void) ",{}],["|",{"inverse":true}],[" 81 ",{"fg":3,"bold":true}],["Place a '*' or '+' mark after the day.  Acceptable values are 'left',                                           ",{}],["|",{"inverse":true}],["  6 ",{"fg":3,"bold":true}],["▸ .cache/",{"fg":6,"bold":true}],["         ",{}]],"6":[["                    ",{}],["|",{"inverse":true}],[" 82 ",{"fg":3,"bold":true}],["'left-fit', and 'right': >                                                                                      ",{}],["|",{"inverse":true}],["  7 ",{"fg":3,"bold":true}],["▸ .config/",{"fg":6,"bold":true}],["        ",{}]],"7":[["▼",{"fg":3,"bold":true}],[" Last",{"fg":5,"bold":true}],[" : ",{}],["struct",{"fg":2,"bold":true}],["     ",{}],["|",{"inverse":true}],[" 83 ",{"fg":3,"bold":true}],["  let g:calendar_mark = 'right'                                                                                 ",{}],["|",{"inverse":true}],["  8 ",{"fg":3,"bold":true}],["▸ .dbus/",{"fg":6,"bold":true}],["          ",{}]],"8":[["    [functions]",{"fg":6,"bold":true}],["     ",{}],["|",{"inverse":true}],[" 84 ",{"fg":3,"bold":true}],["<                                                                                                               ",{}],["|",{"inverse":true}],["  9 ",{"fg":3,"bold":true}],["▸ .gnupg/",{"fg":6,"bold":true}],["         ",{}]],"9":[["   ",{}],["+",{"fg":2,"bold":true}],["FirstRun(void)  ",{}],["|",{"inverse":true}],[" 85 ",{"fg":3,"bold":true}],["                                                                                                                ",{}],["|",{"inverse":true}],[" 10 ",{"fg":3,"bold":true}],["▸ .kde/",{"fg":6,"bold":true}],["           ",{}]],"10":[["   ",{}],["+",{"fg":2,"bold":true}],["FirstRun2(void) ",{}],["|",{"inverse":true}],[" 86 ",{"fg":3,"bold":true}],["                                                *g:calendar_diary*                                              ",{}],["|",{"inverse":true}],[" 11 ",{"fg":3,"bold":true}],["▸ .local/",{"fg":6,"bold":true}],["         ",{}]],"11":[["   ",{}],["+",{"fg":2,"bold":true}],["~Last()         ",{}],["|",{"inverse":true}],[" 87 ",{"fg":3,"bold":true}],["Specify the directory for the diary files.  The default value is $HOME/diary.                                   ",{}],["|",{"inverse":true}],[" 12 ",{"fg":3,"bold":true}],["▸ .pki/",{"fg":6,"bold":true}],["           ",{}]],"12":[["   ",{}],["+",{"fg":2,"bold":true}],["SecondRun(void) ",{}],["|",{"inverse":true}],[" 88 ",{"fg":3,"bold":true}],["  let g:calendar_diary=$HOME.'/.vim/diary'                                                                      ",{}],["|",{"inverse":true}],[" 13 ",{"fg":3,"bold":true}],["▸ .ssh/",{"fg":6,"bold":true}],["           ",{}]],"13":[["   ",{}],["+",{"fg":2,"bold":true}],["SecondRun2(void)",{}],["|",{"inverse":true}],[" 89 ",{"fg":3,"bold":true}],["                                                                                                                ",{}],["|",{"inverse":true}],[" 14 ",{"fg":3,"bold":true}],["▸ .vim/",{"fg":6,"bold":true}],["           ",{}]],"14":[["                    ",{}],["|",{"inverse":true}],[" 90 ",{"fg":3,"bold":true}],["                                                                                                                ",{}],["|",{"inverse":true}],[" 15 ",{"fg":3,"bold":true}],["▸ diary/",{"fg":6,"bold":true}],["          ",{}]],"15":[["▼",{"fg":3,"bold":true}],[" Second",{"fg":5,"bold":true}],[" : ",{}],["struct",{"fg":2,"bold":true}],["   ",{}],["|",{"inverse":true}],[" 91 ",{"fg":3,"bold":true}],["                                                *g:calendar_navi*                                               ",{}],["|",{"inverse":true}],[" 16 ",{"fg":3,"bold":true}],["▸ temp/",{"fg":6,"bold":true}],["           ",{}]],"16":[["    [prototypes]",{"fg":6,"bold":true}],["    ",{}],["|",{"inverse":true}],[" 92 ",{"fg":3,"bold":true}],["To control the calendar navigator, set this variable.  Acceptable values are                                    ",{}],["|",{"inverse":true}],[" 17 ",{"fg":3,"bold":true}],["  .bash_history   ",{}]],"17":[["   ",{}],["+",{"fg":2,"bold":true}],["SecondRun(void) ",{}],["|",{"inverse":true}],[" 93 ",{"fg":3,"bold":true}],["'top', 'bottom', or 'both'. >                                                                                   ",{}],["|",{"inverse":true}],[" 18 ",{"fg":3,"bold":true}],["  .bash_logout    ",{}]],"18":[["   ",{}],["+",{"fg":2,"bold":true}],["SecondRun2(void)",{}],["|",{"inverse":true}],[" 94 ",{"fg":3,"bold":true}],["  let g:calendar_navi = ''                                                                                      ",{}],["|",{"inverse":true}],[" 19 ",{"fg":3,"bold":true}],["  .bash_profile   ",{"underline":true}]],"19":[["                    ",{}],["|",{"inverse":true}],[" 95 ",{"fg":3,"bold":true}],["<                                                                                                               ",{}],["|",{"inverse":true}],[" 20 ",{"fg":3,"bold":true}],["  .bashrc         ",{}]],"20":[["▼",{"fg":3,"bold":true}],[" ",{}],["functions",{"fg":6,"bold":true}],["         ",{}],["|",{"inverse":true}],[" 96 ",{"fg":3,"bold":true}],["                                                                                                                ",{}],["|",{"inverse":true}],[" 21 ",{"fg":3,"bold":true}],["  .cshrc          ",{}]],"21":[["    main(int argc, c",{"underline":true}],["|",{"inverse":true}],[" 97 ",{"fg":3,"bold":true}],["                                                *g:calendar_navi_label*                                         ",{}],["|",{"inverse":true}],[" 22 ",{"fg":3,"bold":true}],["  .dmrc           ",{}]],"22":[["~                   ",{"fg":4,"bold":true}],["|",{"inverse":true}],[" 98 ",{"fg":3,"bold":true}],["To set the labels for the calendar navigator, for example to change the                                         ",{}],["|",{"inverse":true}],[" 23 ",{"fg":3,"bold":true}],["  .esd_auth       ",{}]],"23":[["~                   ",{"fg":4,"bold":true}],["|",{"inverse":true}],[" 99 ",{"fg":3,"bold":true}],["language, use this variable.  Entries should be comma separated. >                                              ",{}],["|",{"inverse":true}],[" 24 ",{"fg":3,"bold":true}],["  .gtkrc-2.0      ",{}]],"24":[["~                   ",{"fg":4,"bold":true}],["|",{"inverse":true}],["100 ",{"fg":3,"bold":true}],["  let g:calendar_navi_label = 'Prev,Today,Next'                                                                 ",{}],["|",{"inverse":true}],[" 25 ",{"fg":3,"bold":true}],["  .gtkrc-2.0-kde4 ",{}]],"25":[["~                   ",{"fg":4,"bold":true}],["|",{"inverse":true}],["101 ",{"fg":3,"bold":true}],["<                                                                                                               ",{}],["|",{"inverse":true}],[" 26 ",{"fg":3,"bold":true}],["  .lesshst        ",{}]],"26":[["~                   ",{"fg":4,"bold":true}],["|",{"inverse":true}],["102 ",{"fg":3,"bold":true}],["                                                                                                                ",{}],["|",{"inverse":true}],[" 27 ",{"fg":3,"bold":true}],["  .tcshrc         ",{}]],"27":[["~                   ",{"fg":4,"bold":true}],["|",{"inverse":true}],["103 ",{"fg":3,"bold":true}],["                                                *g:calendar_erafmt*                                             ",{}],["|",{"inverse":true}],[" 28 ",{"fg":3,"bold":true}],["  .viminfo        ",{}]],"28":[["~                   ",{"fg":4,"bold":true}],["|",{"inverse":true}],["104 ",{"fg":3,"bold":true}],["To change the dating system, set the following variable.  Include the name of                                   ",{}],["|",{"inverse":true}],[" 29 ",{"fg":3,"bold":true}],["  .vimrc          ",{}]],"29":[["~                   ",{"fg":4,"bold":true}],["|",{"inverse":true}],["105 ",{"fg":3,"bold":true}],["the dating system and its offset from the Georgian calendar (A.D.).  For                                        ",{}],["|",{"inverse":true}],[" 30 ",{"fg":3,"bold":true}],["  .xsession-errors",{}]],"30":[["~                   ",{"fg":4,"bold":true}],["|",{"inverse":true}],["106 ",{"fg":3,"bold":true}],["example, to use the current Japanese era (Heisei), you would set: >                                             ",{}],["|",{"inverse":true}],[" 31 ",{"fg":3,"bold":true}],["  anaconda-ks.cfg ",{}]],"31":[["~                   ",{"fg":4,"bold":true}],["|",{"inverse":true}],["107 ",{"fg":3,"bold":true}],["  let g:calendar_erafmt = 'Heisei,-1988'                                                                        ",{}],["|",{"inverse":true}],[" 32 ",{"fg":3,"bold":true}],["  initial-setup-ks",{}]],"32":[["~                   ",{"fg":4,"bold":true}],["|",{"inverse":true}],["108 ",{"fg":3,"bold":true}],["<                                                                                                               ",{}],["|",{"inverse":true}],[" 33 ",{"fg":3,"bold":true}],["  test.c          ",{}]],"33":[["~                   ",{"fg":4,"bold":true}],["|",{"inverse":true}],["109 ",{"fg":3,"bold":true}],["                                                                                                                ",{}],["|",{"inverse":true}],[" 34 ",{"fg":3,"bold":true}],["  test.cpp        ",{}]],"34":[["~                   ",{"fg":4,"bold":true}],["|",{"inverse":true}],["110 ",{"fg":3,"bold":true}],["                                                *g:calendar_mruler*                                             ",{}],["|",{"inverse":true}],[" 35 ",{"fg":3,"bold":true}],["  .test.cpp.swp   ",{}]],"35":[["~                   ",{"fg":4,"bold":true}],["|",{"inverse":true}],["111 ",{"fg":3,"bold":true}],["To change the month names for the calendar headings, set this variable.  The                                    ",{}],["|",{"inverse":true}],["~                     ",{"fg":4,"bold":true}]],"36":[["~                   ",{"fg":4,"bold":true}],["|",{"inverse":true}],["112 ",{"fg":3,"bold":true}],["value is expected to be a comma-separated list of twelve values, starting with                                  ",{}],["|",{"inverse":true}],["~                     ",{"fg":4,"bold":true}]],"37":[["~                   ",{"fg":4,"bold":true}],["|",{"inverse":true}],["113 ",{"fg":3,"bold":true}],["Janurary: >                                                                                                     ",{}],["|",{"inverse":true}],["~                     ",{"fg":4,"bold":true}]],"38":[["~                   ",{"fg":4,"bold":true}],["|",{"inverse":true}],["114 ",{"fg":3,"bold":true}],["  let g:calendar_mruler = 'Jan,Feb,Mar,Apr,May,Jun,Jul,Aug,Sep,Oct,Nov,Dec'                                     ",{}],["|",{"inverse":true}],["~                     ",{"fg":4,"bold":true}]],"39":[["~                   ",{"fg":4,"bold":true}],["|",{"inverse":true}],["115 ",{"fg":3,"bold":true}],["<                                                                                                               ",{}],["|",{"inverse":true}],["~                     ",{"fg":4,"bold":true}]],"40":[["~                   ",{"fg":4,"bold":true}],["|",{"inverse":true}],["116 ",{"fg":3,"bold":true}],["                                                                                                                ",{}],["|",{"inverse":true}],["~                     ",{"fg":4,"bold":true}]],"41":[["~                   ",{"fg":4,"bold":true}],["|",{"inverse":true}],["117 ",{"fg":3,"bold":true}],["                                                *g:calendar_wruler*                                             ",{}],["|",{"inverse":true}],["~                     ",{"fg":4,"bold":true}]],"42":[["~                   ",{"fg":4,"bold":true}],["|",{"inverse":true}],["118 ",{"fg":3,"bold":true}],["To change the week names for the calendar headings, set this variable.  The                                     ",{}],["|",{"inverse":true}],["~                     ",{"fg":4,"bold":true}]],"43":[["~                   ",{"fg":4,"bold":true}],["|",{"inverse":true}],["119 ",{"fg":3,"bold":true}],["value is expected to be a space-separated list of seven values, starting with                                   ",{}],["|",{"inverse":true}],["~                     ",{"fg":4,"bold":true}]],"44":[["~                   ",{"fg":4,"bold":true}],["|",{"inverse":true}],["120 ",{"fg":3,"bold":true}],["Sunday: >                                                                  ",{"underline":true}],["th                                   ",{}],["|",{"inverse":true}],["~                     ",{"fg":4,"bold":true}]],"47":[["                                                                                                                                                                ",{}]]},"cursor":{"x":100,"y":44}}],[0.024113,{"lines":{"44":[["~                   ",{"fg":4,"bold":true}],["|",{"inverse":true}],["120 ",{"fg":3,"bold":true}],["Sunday: >                                                                                                       ",{}],["|",{"inverse":true}],["~                     ",{"fg":4,"bold":true}]],"45":[["~                   ",{"fg":4,"bold":true}],["|",{"inverse":true}],["121 ",{"fg":3,"bold":true}],["  let g:calendar_wruler = 'Su Mo Tu We Th Fr Sa'                                                                ",{"underline":true}],["|",{"inverse":true}],["~                     ",{"fg":4,"bold":true}]],"46":[["[Name] test.cpp      ",{"inverse":true}],[" NORMAL ",{"bold":true}],[" ",{}],["calendar.txt ",{"bold":true}],["                                                        unix │ utf-8 │ text │  55% ",{}],[" LN 121",{"bold":true}],[":1  ",{}],[" ",{"bold":true,"inverse":true}],[" ~/…/calendar-vim/doc>",{"bold":true}]]},"cursor":{"x":25,"y":45,"visible":true}}],[0.015336,{"lines":{"0":[["\" Press <F1> for hel",{"fg":6,"bold":true}],["|",{"inverse":true}],[" 77 ",{"fg":3,"bold":true}],["  let g:calendar_keys = { 'goto_next_month': '<C-Right>', 'goto_prev_month': '<C-Left>'}                        ",{}],["|",{"inverse":true}],["  1 ",{"fg":3,"bold":true}],["\" Press ? for help",{"fg":5,"bold":true}]],"1":[["                    ",{}],["|",{"inverse":true}],[" 78 ",{"fg":3,"bold":true}],["<                                                                                                               ",{}],["|",{"inverse":true}],["  2 ",{"fg":3,"bold":true}],["                  ",{}]],"2":[["▼",{"fg":3,"bold":true}],[" First",{"fg":5,"bold":true}],[" : ",{}],["struct",{"fg":2,"bold":true}],["    ",{}],["|",{"inverse":true}],[" 79 ",{"fg":3,"bold":true}],["                                                                                                                ",{}],["|",{"inverse":true}],["  3 ",{"fg":3,"bold":true}],[".. (up a dir)",{"fg":6,"bold":true}],["     ",{}]],"3":[["    [prototypes]",{"fg":6,"bold":true}],["    ",{}],["|",{"inverse":true}],[" 80 ",{"fg":3,"bold":true}],["                                                *g:calendar_mark*                                               ",{}],["|",{"inverse":true}],["  4 /root/",{"fg":3,"bold":true}],["            ",{}]],"4":[["   ",{}],["+",{"fg":2,"bold":true}],["FirstRun(void)  ",{}],["|",{"inverse":true}],[" 81 ",{"fg":3,"bold":true}],["Place a '*' or '+' mark after the day.  Acceptable values are 'left',                                           ",{}],["|",{"inverse":true}],["  5 ",{"fg":3,"bold":true}],["▸ .asciinema/",{"fg":6,"bold":true}],["     ",{}]],"5":[["   ",{}],["+",{"fg":2,"bold":true}],["FirstRun2(void) ",{}],["|",{"inverse":true}],[" 82 ",{"fg":3,"bold":true}],["'left-fit', and 'right': >                                                                                      ",{}],["|",{"inverse":true}],["  6 ",{"fg":3,"bold":true}],["▸ .cache/",{"fg":6,"bold":true}],["         ",{}]],"6":[["                    ",{}],["|",{"inverse":true}],[" 83 ",{"fg":3,"bold":true}],["  let g:calendar_mark = 'right'                                                                                 ",{}],["|",{"inverse":true}],["  7 ",{"fg":3,"bold":true}],["▸ .config/",{"fg":6,"bold":true}],["        ",{}]],"7":[["▼",{"fg":3,"bold":true}],[" Last",{"fg":5,"bold":true}],[" : ",{}],["struct",{"fg":2,"bold":true}],["     ",{}],["|",{"inverse":true}],[" 84 ",{"fg":3,"bold":true}],["<                                                                                                               ",{}],["|",{"inverse":true}],["  8 ",{"fg":3,"bold":true}],["▸ .dbus/",{"fg":6,"bold":true}],["          ",{}]],"8":[["    [functions]",{"fg":6,"bold":true}],["     ",{}],["|",{"inverse":true}],[" 85 ",{"fg":3,"bold":true}],["                                                                                                                ",{}],["|",{"inverse":true}],["  9 ",{"fg":3,"bold":true}],["▸ .gnupg/",{"fg":6,"bold":true}],["         ",{}]],"9":[["   ",{}],["+",{"fg":2,"bold":true}],["FirstRun(void)  ",{}],["|",{"inverse":true}],[" 86 ",{"fg":3,"bold":true}],["                                                *g:calendar_diary*                                              ",{}],["|",{"inverse":true}],[" 10 ",{"fg":3,"bold":true}],["▸ .kde/",{"fg":6,"bold":true}],["           ",{}]],"10":[["   ",{}],["+",{"fg":2,"bold":true}],["FirstRun2(void) ",{}],["|",{"inverse":true}],[" 87 ",{"fg":3,"bold":true}],["Specify the directory for the diary files.  The default value is $HOME/diary.                                   ",{}],["|",{"inverse":true}],[" 11 ",{"fg":3,"bold":true}],["▸ .local/",{"fg":6,"bold":true}],["         ",{}]],"11":[["   ",{}],["+",{"fg":2,"bold":true}],["~Last()         ",{}],["|",{"inverse":true}],[" 88 ",{"fg":3,"bold":true}],["  let g:calendar_diary=$HOME.'/.vim/diary'                                                                      ",{}],["|",{"inverse":true}],[" 12 ",{"fg":3,"bold":true}],["▸ .pki/",{"fg":6,"bold":true}],["           ",{}]],"12":[["   ",{}],["+",{"fg":2,"bold":true}],["SecondRun(void) ",{}],["|",{"inverse":true}],[" 89 ",{"fg":3,"bold":true}],["                                                                                                                ",{}],["|",{"inverse":true}],[" 13 ",{"fg":3,"bold":true}],["▸ .ssh/",{"fg":6,"bold":true}],["           ",{}]],"13":[["   ",{}],["+",{"fg":2,"bold":true}],["SecondRun2(void)",{}],["|",{"inverse":true}],[" 90 ",{"fg":3,"bold":true}],["                                                                                                                ",{}],["|",{"inverse":true}],[" 14 ",{"fg":3,"bold":true}],["▸ .vim/",{"fg":6,"bold":true}],["           ",{}]],"14":[["                    ",{}],["|",{"inverse":true}],[" 91 ",{"fg":3,"bold":true}],["                                                *g:calendar_navi*                                               ",{}],["|",{"inverse":true}],[" 15 ",{"fg":3,"bold":true}],["▸ diary/",{"fg":6,"bold":true}],["          ",{}]],"15":[["▼",{"fg":3,"bold":true}],[" Second",{"fg":5,"bold":true}],[" : ",{}],["struct",{"fg":2,"bold":true}],["   ",{}],["|",{"inverse":true}],[" 92 ",{"fg":3,"bold":true}],["To control the calendar navigator, set this variable.  Acceptable values are                                    ",{}],["|",{"inverse":true}],[" 16 ",{"fg":3,"bold":true}],["▸ temp/",{"fg":6,"bold":true}],["           ",{}]],"16":[["    [prototypes]",{"fg":6,"bold":true}],["    ",{}],["|",{"inverse":true}],[" 93 ",{"fg":3,"bold":true}],["'top', 'bottom', or 'both'. >                                                                                   ",{}],["|",{"inverse":true}],[" 17 ",{"fg":3,"bold":true}],["  .bash_history   ",{}]],"17":[["   ",{}],["+",{"fg":2,"bold":true}],["SecondRun(void) ",{}],["|",{"inverse":true}],[" 94 ",{"fg":3,"bold":true}],["  let g:calendar_navi = ''                                                                                      ",{}],["|",{"inverse":true}],[" 18 ",{"fg":3,"bold":true}],["  .bash_logout    ",{}]],"18":[["   ",{}],["+",{"fg":2,"bold":true}],["SecondRun2(void)",{}],["|",{"inverse":true}],[" 95 ",{"fg":3,"bold":true}],["<                                                                                                               ",{}],["|",{"inverse":true}],[" 19 ",{"fg":3,"bold":true}],["  .bash_profile   ",{"underline":true}]],"19":[["                    ",{}],["|",{"inverse":true}],[" 96 ",{"fg":3,"bold":true}],["                                                                                                                ",{}],["|",{"inverse":true}],[" 20 ",{"fg":3,"bold":true}],["  .bashrc         ",{}]],"20":[["▼",{"fg":3,"bold":true}],[" ",{}],["functions",{"fg":6,"bold":true}],["         ",{}],["|",{"inverse":true}],[" 97 ",{"fg":3,"bold":true}],["                                                *g:calendar_navi_label*                                         ",{}],["|",{"inverse":true}],[" 21 ",{"fg":3,"bold":true}],["  .cshrc          ",{}]],"21":[["    main(int argc, c",{"underline":true}],["|",{"inverse":true}],[" 98 ",{"fg":3,"bold":true}],["To set the labels for the calendar navigator, for example to change the                                         ",{}],["|",{"inverse":true}],[" 22 ",{"fg":3,"bold":true}],["  .dmrc           ",{}]],"22":[["~                   ",{"fg":4,"bold":true}],["|",{"inverse":true}],[" 99 ",{"fg":3,"bold":true}],["language, use this variable.  Entries should be comma separated. >                                              ",{}],["|",{"inverse":true}],[" 23 ",{"fg":3,"bold":true}],["  .esd_auth       ",{}]],"23":[["~                   ",{"fg":4,"bold":true}],["|",{"inverse":true}],["100 ",{"fg":3,"bold":true}],["  let g:calendar_navi_label = 'Prev,Today,Next'                                                                 ",{}],["|",{"inverse":true}],[" 24 ",{"fg":3,"bold":true}],["  .gtkrc-2.0      ",{}]],"24":[["~                   ",{"fg":4,"bold":true}],["|",{"inverse":true}],["101 ",{"fg":3,"bold":true}],["<                                                                                                               ",{}],["|",{"inverse":true}],[" 25 ",{"fg":3,"bold":true}],["  .gtkrc-2.0-kde4 ",{}]],"25":[["~                   ",{"fg":4,"bold":true}],["|",{"inverse":true}],["102 ",{"fg":3,"bold":true}],["                                                                                                                ",{}],["|",{"inverse":true}],[" 26 ",{"fg":3,"bold":true}],["  .lesshst        ",{}]],"26":[["~                   ",{"fg":4,"bold":true}],["|",{"inverse":true}],["103 ",{"fg":3,"bold":true}],["                                                *g:calendar_erafmt*                                             ",{}],["|",{"inverse":true}],[" 27 ",{"fg":3,"bold":true}],["  .tcshrc         ",{}]],"27":[["~                   ",{"fg":4,"bold":true}],["|",{"inverse":true}],["104 ",{"fg":3,"bold":true}],["To change the dating system, set the following variable.  Include the name of                                   ",{}],["|",{"inverse":true}],[" 28 ",{"fg":3,"bold":true}],["  .viminfo        ",{}]],"28":[["~                   ",{"fg":4,"bold":true}],["|",{"inverse":true}],["105 ",{"fg":3,"bold":true}],["the dating system and its offset from the Georgian calendar (A.D.).  For                                        ",{}],["|",{"inverse":true}],[" 29 ",{"fg":3,"bold":true}],["  .vimrc          ",{}]],"29":[["~                   ",{"fg":4,"bold":true}],["|",{"inverse":true}],["106 ",{"fg":3,"bold":true}],["example, to use the current Japanese era (Heisei), you would set: >                                             ",{}],["|",{"inverse":true}],[" 30 ",{"fg":3,"bold":true}],["  .xsession-errors",{}]],"30":[["~                   ",{"fg":4,"bold":true}],["|",{"inverse":true}],["107 ",{"fg":3,"bold":true}],["  let g:calendar_erafmt = 'Heisei,-1988'                                                                        ",{}],["|",{"inverse":true}],[" 31 ",{"fg":3,"bold":true}],["  anaconda-ks.cfg ",{}]],"31":[["~                   ",{"fg":4,"bold":true}],["|",{"inverse":true}],["108 ",{"fg":3,"bold":true}],["<                                                                                                               ",{}],["|",{"inverse":true}],[" 32 ",{"fg":3,"bold":true}],["  initial-setup-ks",{}]],"32":[["~                   ",{"fg":4,"bold":true}],["|",{"inverse":true}],["109 ",{"fg":3,"bold":true}],["                                                                                                                ",{}],["|",{"inverse":true}],[" 33 ",{"fg":3,"bold":true}],["  test.c          ",{}]],"33":[["~                   ",{"fg":4,"bold":true}],["|",{"inverse":true}],["110 ",{"fg":3,"bold":true}],["                                                *g:calendar_mruler*                                             ",{}],["|",{"inverse":true}],[" 34 ",{"fg":3,"bold":true}],["  test.cpp        ",{}]],"34":[["~                   ",{"fg":4,"bold":true}],["|",{"inverse":true}],["111 ",{"fg":3,"bold":true}],["To change the month names for the calendar headings, set this variable.  The                                    ",{}],["|",{"inverse":true}],[" 35 ",{"fg":3,"bold":true}],["  .test.cpp.swp   ",{}]],"35":[["~                   ",{"fg":4,"bold":true}],["|",{"inverse":true}],["112 ",{"fg":3,"bold":true}],["value is expected to be a comma-separated list of twelve values, starting with                                  ",{}],["|",{"inverse":true}],["~                     ",{"fg":4,"bold":true}]],"36":[["~                   ",{"fg":4,"bold":true}],["|",{"inverse":true}],["113 ",{"fg":3,"bold":true}],["Janurary: >                                                                                                     ",{}],["|",{"inverse":true}],["~                     ",{"fg":4,"bold":true}]],"37":[["~                   ",{"fg":4,"bold":true}],["|",{"inverse":true}],["114 ",{"fg":3,"bold":true}],["  let g:calendar_mruler = 'Jan,Feb,Mar,Apr,May,Jun,Jul,Aug,Sep,Oct,Nov,Dec'                                     ",{}],["|",{"inverse":true}],["~                     ",{"fg":4,"bold":true}]],"38":[["~                   ",{"fg":4,"bold":true}],["|",{"inverse":true}],["115 ",{"fg":3,"bold":true}],["<                                                                                                               ",{}],["|",{"inverse":true}],["~                     ",{"fg":4,"bold":true}]],"39":[["~                   ",{"fg":4,"bold":true}],["|",{"inverse":true}],["116 ",{"fg":3,"bold":true}],["                                                                                                                ",{}],["|",{"inverse":true}],["~                     ",{"fg":4,"bold":true}]],"40":[["~                   ",{"fg":4,"bold":true}],["|",{"inverse":true}],["117 ",{"fg":3,"bold":true}],["                                                *g:calendar_wruler*                                             ",{}],["|",{"inverse":true}],["~                     ",{"fg":4,"bold":true}]],"41":[["~                   ",{"fg":4,"bold":true}],["|",{"inverse":true}],["118 ",{"fg":3,"bold":true}],["To change the week names for the calendar headings, set this variable.  The                                     ",{}],["|",{"inverse":true}],["~                     ",{"fg":4,"bold":true}]],"42":[["~                   ",{"fg":4,"bold":true}],["|",{"inverse":true}],["119 ",{"fg":3,"bold":true}],["value is expected to be a space-separated list of seven values, starting with                                   ",{}],["|",{"inverse":true}],["~                     ",{"fg":4,"bold":true}]],"43":[["~                   ",{"fg":4,"bold":true}],["|",{"inverse":true}],["120 ",{"fg":3,"bold":true}],["Sunday: >                                                                                                       ",{}],["|",{"inverse":true}],["~                     ",{"fg":4,"bold":true}]],"44":[["~                   ",{"fg":4,"bold":true}],["|",{"inverse":true}],["121 ",{"fg":3,"bold":true}],["  let g:calendar_wruler = 'Su Mo Tu We Th Fr Sa'                                                                ",{}],["|",{"inverse":true}],["~                     ",{"fg":4,"bold":true}]],"45":[["~                   ",{"fg":4,"bold":true}],["|",{"inverse":true}],["122 ",{"fg":3,"bold":true}],["<                                                                                                               ",{"underline":true}],["|",{"inverse":true}],["~                     ",{"fg":4,"bold":true}]],"46":[["[Name] test.cpp      ",{"inverse":true}],[" NORMAL ",{"bold":true}],[" ",{}],["calendar.txt ",{"bold":true}],["                                                        unix │ utf-8 │ text │  55% ",{}],[" LN 122",{"bold":true}],[":1  ",{}],[" ",{"bold":true,"inverse":true}],[" ~/…/calendar-vim/doc>",{"bold":true}]]}}],[0.040527,{"lines":{"0":[["\" Press <F1> for hel",{"fg":6,"bold":true}],["|",{"inverse":true}],[" 78 ",{"fg":3,"bold":true}],["<                                                                                                               ",{}],["|",{"inverse":true}],["  1 ",{"fg":3,"bold":true}],["\" Press ? for help",{"fg":5,"bold":true}]],"1":[["                    ",{}],["|",{"inverse":true}],[" 79 ",{"fg":3,"bold":true}],["                                                                                                                ",{}],["|",{"inverse":true}],["  2 ",{"fg":3,"bold":true}],["                  ",{}]],"2":[["▼",{"fg":3,"bold":true}],[" First",{"fg":5,"bold":true}],[" : ",{}],["struct",{"fg":2,"bold":true}],["    ",{}],["|",{"inverse":true}],[" 80 ",{"fg":3,"bold":true}],["                                                *g:calendar_mark*                                               ",{}],["|",{"inverse":true}],["  3 ",{"fg":3,"bold":true}],[".. (up a dir)",{"fg":6,"bold":true}],["     ",{}]],"3":[["    [prototypes]",{"fg":6,"bold":true}],["    ",{}],["|",{"inverse":true}],[" 81 ",{"fg":3,"bold":true}],["Place a '*' or '+' mark after the day.  Acceptable values are 'left',                                           ",{}],["|",{"inverse":true}],["  4 /root/",{"fg":3,"bold":true}],["            ",{}]],"4":[["   ",{}],["+",{"fg":2,"bold":true}],["FirstRun(void)  ",{}],["|",{"inverse":true}],[" 82 ",{"fg":3,"bold":true}],["'left-fit', and 'right': >                                                                                      ",{}],["|",{"inverse":true}],["  5 ",{"fg":3,"bold":true}],["▸ .asciinema/",{"fg":6,"bold":true}],["     ",{}]],"5":[["   ",{}],["+",{"fg":2,"bold":true}],["FirstRun2(void) ",{}],["|",{"inverse":true}],[" 83 ",{"fg":3,"bold":true}],["  let g:calendar_mark = 'right'                                                                                 ",{}],["|",{"inverse":true}],["  6 ",{"fg":3,"bold":true}],["▸ .cache/",{"fg":6,"bold":true}],["         ",{}]],"6":[["                    ",{}],["|",{"inverse":true}],[" 84 ",{"fg":3,"bold":true}],["<                                                                                                               ",{}],["|",{"inverse":true}],["  7 ",{"fg":3,"bold":true}],["▸ .config/",{"fg":6,"bold":true}],["        ",{}]],"7":[["▼",{"fg":3,"bold":true}],[" Last",{"fg":5,"bold":true}],[" : ",{}],["struct",{"fg":2,"bold":true}],["     ",{}],["|",{"inverse":true}],[" 85 ",{"fg":3,"bold":true}],["<                                                                                                               ",{}],["|",{"inverse":true}],["  8 ",{"fg":3,"bold":true}],["▸ .dbus/",{"fg":6,"bold":true}],["          ",{}]]},"cursor":{"y":7,"visible":false}}],[0.006030000000000001,{"lines":{"7":[["▼",{"fg":3,"bold":true}],[" Last",{"fg":5,"bold":true}],[" : ",{}],["struct",{"fg":2,"bold":true}],["     ",{}],["|",{"inverse":true}],[" 85 ",{"fg":3,"bold":true}],["                                                                                                                ",{}],["|",{"inverse":true}],["  8 ",{"fg":3,"bold":true}],["▸ .dbus/",{"fg":6,"bold":true}],["          ",{}]],"8":[["    [functions]",{"fg":6,"bold":true}],["     ",{}],["|",{"inverse":true}],[" 86 ",{"fg":3,"bold":true}],["                                                *g:calendar_diary*                                              ",{}],["|",{"inverse":true}],["  9 ",{"fg":3,"bold":true}],["▸ .gnupg/",{"fg":6,"bold":true}],["         ",{}]],"9":[["   ",{}],["+",{"fg":2,"bold":true}],["FirstRun(void)  ",{}],["|",{"inverse":true}],[" 87 ",{"fg":3,"bold":true}],["Specify the directory for the diary files.  The default value is $HOME/diary.                                   ",{}],["|",{"inverse":true}],[" 10 ",{"fg":3,"bold":true}],["▸ .kde/",{"fg":6,"bold":true}],["           ",{}]],"10":[["   ",{}],["+",{"fg":2,"bold":true}],["FirstRun2(void) ",{}],["|",{"inverse":true}],[" 88 ",{"fg":3,"bold":true}],["  let g:calendar_diary=$HOME.'/.vim/diary'                                                                      ",{}],["|",{"inverse":true}],[" 11 ",{"fg":3,"bold":true}],["▸ .local/",{"fg":6,"bold":true}],["         ",{}]],"11":[["   ",{}],["+",{"fg":2,"bold":true}],["~Last()         ",{}],["|",{"inverse":true}],[" 89 ",{"fg":3,"bold":true}],["                                                                                                                ",{}],["|",{"inverse":true}],[" 12 ",{"fg":3,"bold":true}],["▸ .pki/",{"fg":6,"bold":true}],["           ",{}]],"12":[["   ",{}],["+",{"fg":2,"bold":true}],["SecondRun(void) ",{}],["|",{"inverse":true}],[" 90 ",{"fg":3,"bold":true}],["                                                                                                                ",{}],["|",{"inverse":true}],[" 13 ",{"fg":3,"bold":true}],["▸ .ssh/",{"fg":6,"bold":true}],["           ",{}]],"13":[["   ",{}],["+",{"fg":2,"bold":true}],["SecondRun2(void)",{}],["|",{"inverse":true}],[" 91 ",{"fg":3,"bold":true}],["                                                *g:calendar_navi*                                               ",{}],["|",{"inverse":true}],[" 14 ",{"fg":3,"bold":true}],["▸ .vim/",{"fg":6,"bold":true}],["           ",{}]],"14":[["                    ",{}],["|",{"inverse":true}],[" 92 ",{"fg":3,"bold":true}],["To control the calendar navigator, set this variable.  Acceptable values are                                    ",{}],["|",{"inverse":true}],[" 15 ",{"fg":3,"bold":true}],["▸ diary/",{"fg":6,"bold":true}],["          ",{}]],"15":[["▼",{"fg":3,"bold":true}],[" Second",{"fg":5,"bold":true}],[" : ",{}],["struct",{"fg":2,"bold":true}],["   ",{}],["|",{"inverse":true}],[" 93 ",{"fg":3,"bold":true}],["'top', 'bottom', or 'both'. >                                                                                   ",{}],["|",{"inverse":true}],[" 16 ",{"fg":3,"bold":true}],["▸ temp/",{"fg":6,"bold":true}],["           ",{}]],"16":[["    [prototypes]",{"fg":6,"bold":true}],["    ",{}],["|",{"inverse":true}],[" 94 ",{"fg":3,"bold":true}],["  let g:calendar_navi = ''                                                                                      ",{}],["|",{"inverse":true}],[" 17 ",{"fg":3,"bold":true}],["  .bash_history   ",{}]],"17":[["   ",{}],["+",{"fg":2,"bold":true}],["SecondRun(void) ",{}],["|",{"inverse":true}],[" 95 ",{"fg":3,"bold":true}],["<                                                                                                               ",{}],["|",{"inverse":true}],[" 18 ",{"fg":3,"bold":true}],["  .bash_logout    ",{}]],"18":[["   ",{}],["+",{"fg":2,"bold":true}],["SecondRun2(void)",{}],["|",{"inverse":true}],[" 96 ",{"fg":3,"bold":true}],["                                                                                                                ",{}],["|",{"inverse":true}],[" 19 ",{"fg":3,"bold":true}],["  .bash_profile   ",{"underline":true}]],"19":[["                    ",{}],["|",{"inverse":true}],[" 97 ",{"fg":3,"bold":true}],["                                                *g:calendar_navi_label*                                         ",{}],["|",{"inverse":true}],[" 20 ",{"fg":3,"bold":true}],["  .bashrc         ",{}]],"20":[["▼",{"fg":3,"bold":true}],[" ",{}],["functions",{"fg":6,"bold":true}],["         ",{}],["|",{"inverse":true}],[" 98 ",{"fg":3,"bold":true}],["To set the labels for the calendar navigator, for example to change the                                         ",{}],["|",{"inverse":true}],[" 21 ",{"fg":3,"bold":true}],["  .cshrc          ",{}]],"21":[["    main(int argc, c",{"underline":true}],["|",{"inverse":true}],[" 99 ",{"fg":3,"bold":true}],["language, use this variable.  Entries should be comma separated. >                                              ",{}],["|",{"inverse":true}],[" 22 ",{"fg":3,"bold":true}],["  .dmrc           ",{}]],"22":[["~                   ",{"fg":4,"bold":true}],["|",{"inverse":true}],["100 ",{"fg":3,"bold":true}],["  let g:calendar_navi_label = 'Prev,Today,Next'                                                                 ",{}],["|",{"inverse":true}],[" 23 ",{"fg":3,"bold":true}],["  .esd_auth       ",{}]],"23":[["~                   ",{"fg":4,"bold":true}],["|",{"inverse":true}],["101 ",{"fg":3,"bold":true}],["<                                                                                                               ",{}],["|",{"inverse":true}],[" 24 ",{"fg":3,"bold":true}],["  .gtkrc-2.0      ",{}]],"24":[["~                   ",{"fg":4,"bold":true}],["|",{"inverse":true}],["102 ",{"fg":3,"bold":true}],["                                                                                                                ",{}],["|",{"inverse":true}],[" 25 ",{"fg":3,"bold":true}],["  .gtkrc-2.0-kde4 ",{}]],"25":[["~                   ",{"fg":4,"bold":true}],["|",{"inverse":true}],["103 ",{"fg":3,"bold":true}],["                                                *g:calendar_erafmt*                                             ",{}],["|",{"inverse":true}],[" 26 ",{"fg":3,"bold":true}],["  .lesshst        ",{}]],"26":[["~                   ",{"fg":4,"bold":true}],["|",{"inverse":true}],["104 ",{"fg":3,"bold":true}],["To change the dating system, set the following variable.  Include the name of                                   ",{}],["|",{"inverse":true}],[" 27 ",{"fg":3,"bold":true}],["  .tcshrc         ",{}]],"27":[["~                   ",{"fg":4,"bold":true}],["|",{"inverse":true}],["105 ",{"fg":3,"bold":true}],["the dating system and its offset from the Georgian calendar (A.D.).  For                                        ",{}],["|",{"inverse":true}],[" 28 ",{"fg":3,"bold":true}],["  .viminfo        ",{}]],"28":[["~                   ",{"fg":4,"bold":true}],["|",{"inverse":true}],["106 ",{"fg":3,"bold":true}],["example, to use the current Japanese era (Heisei), you would set: >                                             ",{}],["|",{"inverse":true}],[" 29 ",{"fg":3,"bold":true}],["  .vimrc          ",{}]],"29":[["~                   ",{"fg":4,"bold":true}],["|",{"inverse":true}],["107 ",{"fg":3,"bold":true}],["  let g:calendar_erafmt = 'Heisei,-1988'                                                                        ",{}],["|",{"inverse":true}],[" 30 ",{"fg":3,"bold":true}],["  .xsession-errors",{}]],"30":[["~                   ",{"fg":4,"bold":true}],["|",{"inverse":true}],["108 ",{"fg":3,"bold":true}],["<                                                                                                               ",{}],["|",{"inverse":true}],[" 31 ",{"fg":3,"bold":true}],["  anaconda-ks.cfg ",{}]],"31":[["~                   ",{"fg":4,"bold":true}],["|",{"inverse":true}],["109 ",{"fg":3,"bold":true}],["                                                                                                                ",{}],["|",{"inverse":true}],[" 32 ",{"fg":3,"bold":true}],["  initial-setup-ks",{}]],"32":[["~                   ",{"fg":4,"bold":true}],["|",{"inverse":true}],["110 ",{"fg":3,"bold":true}],["                                                *g:calendar_mruler*                                             ",{}],["|",{"inverse":true}],[" 33 ",{"fg":3,"bold":true}],["  test.c          ",{}]],"33":[["~                   ",{"fg":4,"bold":true}],["|",{"inverse":true}],["111 ",{"fg":3,"bold":true}],["To change the month names for the calendar headings, set this variable.  The                                    ",{}],["|",{"inverse":true}],[" 34 ",{"fg":3,"bold":true}],["  test.cpp        ",{}]],"34":[["~                   ",{"fg":4,"bold":true}],["|",{"inverse":true}],["112 ",{"fg":3,"bold":true}],["value is expected to be a comma-separated list of twelve values, starting with                                  ",{}],["|",{"inverse":true}],[" 35 ",{"fg":3,"bold":true}],["  .test.cpp.swp   ",{}]],"35":[["~                   ",{"fg":4,"bold":true}],["|",{"inverse":true}],["113 ",{"fg":3,"bold":true}],["Janurary: >                                                                                                     ",{}],["|",{"inverse":true}],["~                     ",{"fg":4,"bold":true}]],"36":[["~                   ",{"fg":4,"bold":true}],["|",{"inverse":true}],["114 ",{"fg":3,"bold":true}],["  let g:calendar_mruler = 'Jan,Feb,Mar,Apr,May,Jun,Jul,Aug,Sep,Oct,Nov,Dec'                                     ",{}],["|",{"inverse":true}],["~                     ",{"fg":4,"bold":true}]],"37":[["~                   ",{"fg":4,"bold":true}],["|",{"inverse":true}],["115 ",{"fg":3,"bold":true}],["<                                                                                                               ",{}],["|",{"inverse":true}],["~                     ",{"fg":4,"bold":true}]],"38":[["~                   ",{"fg":4,"bold":true}],["|",{"inverse":true}],["116 ",{"fg":3,"bold":true}],["                                                                                                                ",{}],["|",{"inverse":true}],["~                     ",{"fg":4,"bold":true}]],"39":[["~                   ",{"fg":4,"bold":true}],["|",{"inverse":true}],["117 ",{"fg":3,"bold":true}],["                                                *g:calendar_wruler*                                             ",{}],["|",{"inverse":true}],["~                     ",{"fg":4,"bold":true}]],"40":[["~                   ",{"fg":4,"bold":true}],["|",{"inverse":true}],["118 ",{"fg":3,"bold":true}],["To change the week names for the calendar headings, set this variable.  The                                     ",{}],["|",{"inverse":true}],["~                     ",{"fg":4,"bold":true}]],"41":[["~                   ",{"fg":4,"bold":true}],["|",{"inverse":true}],["119 ",{"fg":3,"bold":true}],["value is expected to be a space-separated list of seven values, starting with                                   ",{}],["|",{"inverse":true}],["~                     ",{"fg":4,"bold":true}]],"42":[["~                   ",{"fg":4,"bold":true}],["|",{"inverse":true}],["120 ",{"fg":3,"bold":true}],["Sunday: >                                                                                                       ",{}],["|",{"inverse":true}],["~                     ",{"fg":4,"bold":true}]],"43":[["~                   ",{"fg":4,"bold":true}],["|",{"inverse":true}],["121 ",{"fg":3,"bold":true}],["  let g:calendar_wruler = 'Su Mo Tu We Th Fr Sa'                                                                ",{}],["|",{"inverse":true}],["~                     ",{"fg":4,"bold":true}]],"44":[["~                   ",{"fg":4,"bold":true}],["|",{"inverse":true}],["122 ",{"fg":3,"bold":true}],["<                                                                                                               ",{}],["|",{"inverse":true}],["~                     ",{"fg":4,"bold":true}]],"45":[["~                   ",{"fg":4,"bold":true}],["|",{"inverse":true}],["123 ",{"fg":3,"bold":true}],["                                                                                                                ",{"underline":true}],["|",{"inverse":true}],["~                     ",{"fg":4,"bold":true}]],"46":[["[Name] test.cpp      ",{"inverse":true}],[" NORMAL ",{"bold":true}],[" ",{}],["calendar.txt ",{"bold":true}],["                                                        unix │ utf-8 │ text │  55% ",{}],[" LN 123",{"bold":true}],[":1  ",{}],[" ",{"bold":true,"inverse":true}],[" ~/…/calendar-vim/doc>",{"bold":true}]]},"cursor":{"y":45,"visible":true}}],[0.015362,{"lines":{"0":[["\" Press <F1> for hel",{"fg":6,"bold":true}],["|",{"inverse":true}],[" 79 ",{"fg":3,"bold":true}],["                                                                                                                ",{}],["|",{"inverse":true}],["  1 ",{"fg":3,"bold":true}],["\" Press ? for help",{"fg":5,"bold":true}]],"1":[["                    ",{}],["|",{"inverse":true}],[" 80 ",{"fg":3,"bold":true}],["                                                *g:calendar_mark*                                               ",{}],["|",{"inverse":true}],["  2 ",{"fg":3,"bold":true}],["                  ",{}]],"2":[["▼",{"fg":3,"bold":true}],[" First",{"fg":5,"bold":true}],[" : ",{}],["struct",{"fg":2,"bold":true}],["    ",{}],["|",{"inverse":true}],[" 81 ",{"fg":3,"bold":true}],["Place a '*' or '+' mark after the day.  Acceptable values are 'left',                                           ",{}],["|",{"inverse":true}],["  3 ",{"fg":3,"bold":true}],[".. (up a dir)",{"fg":6,"bold":true}],["     ",{}]],"3":[["    [prototypes]",{"fg":6,"bold":true}],["    ",{}],["|",{"inverse":true}],[" 82 ",{"fg":3,"bold":true}],["'left-fit', and 'right': >                                                                                      ",{}],["|",{"inverse":true}],["  4 /root/",{"fg":3,"bold":true}],["            ",{}]],"4":[["   ",{}],["+",{"fg":2,"bold":true}],["FirstRun(void)  ",{}],["|",{"inverse":true}],[" 83 ",{"fg":3,"bold":true}],["  let g:calendar_mark = 'right'                                                                                 ",{}],["|",{"inverse":true}],["  5 ",{"fg":3,"bold":true}],["▸ .asciinema/",{"fg":6,"bold":true}],["     ",{}]],"5":[["   ",{}],["+",{"fg":2,"bold":true}],["FirstRun2(void) ",{}],["|",{"inverse":true}],[" 84 ",{"fg":3,"bold":true}],["<                                                                                                               ",{}],["|",{"inverse":true}],["  6 ",{"fg":3,"bold":true}],["▸ .cache/",{"fg":6,"bold":true}],["         ",{}]],"6":[["                    ",{}],["|",{"inverse":true}],[" 85 ",{"fg":3,"bold":true}],["                                                                                                                ",{}],["|",{"inverse":true}],["  7 ",{"fg":3,"bold":true}],["▸ .config/",{"fg":6,"bold":true}],["        ",{}]],"7":[["▼",{"fg":3,"bold":true}],[" Last",{"fg":5,"bold":true}],[" : ",{}],["struct",{"fg":2,"bold":true}],["     ",{}],["|",{"inverse":true}],[" 86 ",{"fg":3,"bold":true}],["                                                *g:calendar_diary*                                              ",{}],["|",{"inverse":true}],["  8 ",{"fg":3,"bold":true}],["▸ .dbus/",{"fg":6,"bold":true}],["          ",{}]],"8":[["    [functions]",{"fg":6,"bold":true}],["     ",{}],["|",{"inverse":true}],[" 87 ",{"fg":3,"bold":true}],["Specify the directory for the diary files.  The default value is $HOME/diary.                                   ",{}],["|",{"inverse":true}],["  9 ",{"fg":3,"bold":true}],["▸ .gnupg/",{"fg":6,"bold":true}],["         ",{}]],"9":[["   ",{}],["+",{"fg":2,"bold":true}],["FirstRun(void)  ",{}],["|",{"inverse":true}],[" 88 ",{"fg":3,"bold":true}],["  let g:calendar_diary=$HOME.'/.vim/diary'                                                                      ",{}],["|",{"inverse":true}],[" 10 ",{"fg":3,"bold":true}],["▸ .kde/",{"fg":6,"bold":true}],["           ",{}]],"10":[["   ",{}],["+",{"fg":2,"bold":true}],["FirstRun2(void) ",{}],["|",{"inverse":true}],[" 89 ",{"fg":3,"bold":true}],["                                                                                                                ",{}],["|",{"inverse":true}],[" 11 ",{"fg":3,"bold":true}],["▸ .local/",{"fg":6,"bold":true}],["         ",{}]],"11":[["   ",{}],["+",{"fg":2,"bold":true}],["~Last()         ",{}],["|",{"inverse":true}],[" 90 ",{"fg":3,"bold":true}],["                                                                                                                ",{}],["|",{"inverse":true}],[" 12 ",{"fg":3,"bold":true}],["▸ .pki/",{"fg":6,"bold":true}],["           ",{}]],"12":[["   ",{}],["+",{"fg":2,"bold":true}],["SecondRun(void) ",{}],["|",{"inverse":true}],[" 91 ",{"fg":3,"bold":true}],["                                                *g:calendar_navi*                                               ",{}],["|",{"inverse":true}],[" 13 ",{"fg":3,"bold":true}],["▸ .ssh/",{"fg":6,"bold":true}],["           ",{}]],"13":[["   ",{}],["+",{"fg":2,"bold":true}],["SecondRun2(void)",{}],["|",{"inverse":true}],[" 92 ",{"fg":3,"bold":true}],["To control the calendar navigator, set this variable.  Acceptable values are                                    ",{}],["|",{"inverse":true}],[" 14 ",{"fg":3,"bold":true}],["▸ .vim/",{"fg":6,"bold":true}],["           ",{}]],"14":[["                    ",{}],["|",{"inverse":true}],[" 93 ",{"fg":3,"bold":true}],["'top', 'bottom', or 'both'. >                                                                                   ",{}],["|",{"inverse":true}],[" 15 ",{"fg":3,"bold":true}],["▸ diary/",{"fg":6,"bold":true}],["          ",{}]],"15":[["▼",{"fg":3,"bold":true}],[" Second",{"fg":5,"bold":true}],[" : ",{}],["struct",{"fg":2,"bold":true}],["   ",{}],["|",{"inverse":true}],[" 94 ",{"fg":3,"bold":true}],["  let g:calendar_navi = ''                                                                                      ",{}],["|",{"inverse":true}],[" 16 ",{"fg":3,"bold":true}],["▸ temp/",{"fg":6,"bold":true}],["           ",{}]],"16":[["    [prototypes]",{"fg":6,"bold":true}],["    ",{}],["|",{"inverse":true}],[" 95 ",{"fg":3,"bold":true}],["<                                                                                                               ",{}],["|",{"inverse":true}],[" 17 ",{"fg":3,"bold":true}],["  .bash_history   ",{}]],"17":[["   ",{}],["+",{"fg":2,"bold":true}],["SecondRun(void) ",{}],["|",{"inverse":true}],[" 96 ",{"fg":3,"bold":true}],["                                                                                                                ",{}],["|",{"inverse":true}],[" 18 ",{"fg":3,"bold":true}],["  .bash_logout    ",{}]],"18":[["   ",{}],["+",{"fg":2,"bold":true}],["SecondRun2(void)",{}],["|",{"inverse":true}],[" 97 ",{"fg":3,"bold":true}],["                                                *g:calendar_navi_label*                                         ",{}],["|",{"inverse":true}],[" 19 ",{"fg":3,"bold":true}],["  .bash_profile   ",{"underline":true}]],"19":[["                    ",{}],["|",{"inverse":true}],[" 98 ",{"fg":3,"bold":true}],["To set the labels for the calendar navigator, for example to change the                                         ",{}],["|",{"inverse":true}],[" 20 ",{"fg":3,"bold":true}],["  .bashrc         ",{}]],"20":[["▼",{"fg":3,"bold":true}],[" ",{}],["functions",{"fg":6,"bold":true}],["         ",{}],["|",{"inverse":true}],[" 99 ",{"fg":3,"bold":true}],["language, use this variable.  Entries should be comma separated. >                                              ",{}],["|",{"inverse":true}],[" 21 ",{"fg":3,"bold":true}],["  .cshrc          ",{}]],"21":[["    main(int argc, c",{"underline":true}],["|",{"inverse":true}],["100 ",{"fg":3,"bold":true}],["  let g:calendar_navi_label = 'Prev,Today,Next'                                                                 ",{}],["|",{"inverse":true}],[" 22 ",{"fg":3,"bold":true}],["  .dmrc           ",{}]],"22":[["~                   ",{"fg":4,"bold":true}],["|",{"inverse":true}],["101 ",{"fg":3,"bold":true}],["<                                                                                                               ",{}],["|",{"inverse":true}],[" 23 ",{"fg":3,"bold":true}],["  .esd_auth       ",{}]],"23":[["~                   ",{"fg":4,"bold":true}],["|",{"inverse":true}],["102 ",{"fg":3,"bold":true}],["                                                                                                                ",{}],["|",{"inverse":true}],[" 24 ",{"fg":3,"bold":true}],["  .gtkrc-2.0      ",{}]],"24":[["~                   ",{"fg":4,"bold":true}],["|",{"inverse":true}],["103 ",{"fg":3,"bold":true}],["                                                *g:calendar_erafmt*                                             ",{}],["|",{"inverse":true}],[" 25 ",{"fg":3,"bold":true}],["  .gtkrc-2.0-kde4 ",{}]],"25":[["~                   ",{"fg":4,"bold":true}],["|",{"inverse":true}],["104 ",{"fg":3,"bold":true}],["To change the dating system, set the following variable.  Include the name of                                   ",{}],["|",{"inverse":true}],[" 26 ",{"fg":3,"bold":true}],["  .lesshst        ",{}]],"26":[["~                   ",{"fg":4,"bold":true}],["|",{"inverse":true}],["105 ",{"fg":3,"bold":true}],["the dating system and its offset from the Georgian calendar (A.D.).  For                                        ",{}],["|",{"inverse":true}],[" 27 ",{"fg":3,"bold":true}],["  .tcshrc         ",{}]],"27":[["~                   ",{"fg":4,"bold":true}],["|",{"inverse":true}],["106 ",{"fg":3,"bold":true}],["example, to use the current Japanese era (Heisei), you would set: >                                             ",{}],["|",{"inverse":true}],[" 28 ",{"fg":3,"bold":true}],["  .viminfo        ",{}]],"28":[["~                   ",{"fg":4,"bold":true}],["|",{"inverse":true}],["107 ",{"fg":3,"bold":true}],["  let g:calendar_erafmt = 'Heisei,-1988'                                                                        ",{}],["|",{"inverse":true}],[" 29 ",{"fg":3,"bold":true}],["  .vimrc          ",{}]],"29":[["~                   ",{"fg":4,"bold":true}],["|",{"inverse":true}],["108 ",{"fg":3,"bold":true}],["<                                                                                                               ",{}],["|",{"inverse":true}],[" 30 ",{"fg":3,"bold":true}],["  .xsession-errors",{}]]},"cursor":{"x":112,"y":29,"visible":false}}],[0.006133,{"lines":{"30":[["~                   ",{"fg":4,"bold":true}],["|",{"inverse":true}],["109 ",{"fg":3,"bold":true}],["                                                                                                                ",{}],["|",{"inverse":true}],[" 31 ",{"fg":3,"bold":true}],["  anaconda-ks.cfg ",{}]],"31":[["~                   ",{"fg":4,"bold":true}],["|",{"inverse":true}],["110 ",{"fg":3,"bold":true}],["                                                *g:calendar_mruler*                                             ",{}],["|",{"inverse":true}],[" 32 ",{"fg":3,"bold":true}],["  initial-setup-ks",{}]],"32":[["~                   ",{"fg":4,"bold":true}],["|",{"inverse":true}],["111 ",{"fg":3,"bold":true}],["To change the month names for the calendar headings, set this variable.  The                                    ",{}],["|",{"inverse":true}],[" 33 ",{"fg":3,"bold":true}],["  test.c          ",{}]],"33":[["~                   ",{"fg":4,"bold":true}],["|",{"inverse":true}],["112 ",{"fg":3,"bold":true}],["value is expected to be a comma-separated list of twelve values, starting with                                  ",{}],["|",{"inverse":true}],[" 34 ",{"fg":3,"bold":true}],["  test.cpp        ",{}]],"34":[["~                   ",{"fg":4,"bold":true}],["|",{"inverse":true}],["113 ",{"fg":3,"bold":true}],["Janurary: >                                                                                                     ",{}],["|",{"inverse":true}],[" 35 ",{"fg":3,"bold":true}],["  .test.cpp.swp   ",{}]],"35":[["~                   ",{"fg":4,"bold":true}],["|",{"inverse":true}],["114 ",{"fg":3,"bold":true}],["  let g:calendar_mruler = 'Jan,Feb,Mar,Apr,May,Jun,Jul,Aug,Sep,Oct,Nov,Dec'                                     ",{}],["|",{"inverse":true}],["~                     ",{"fg":4,"bold":true}]],"36":[["~                   ",{"fg":4,"bold":true}],["|",{"inverse":true}],["115 ",{"fg":3,"bold":true}],["<                                                                                                               ",{}],["|",{"inverse":true}],["~                     ",{"fg":4,"bold":true}]],"37":[["~                   ",{"fg":4,"bold":true}],["|",{"inverse":true}],["116 ",{"fg":3,"bold":true}],["                                                                                                                ",{}],["|",{"inverse":true}],["~                     ",{"fg":4,"bold":true}]],"38":[["~                   ",{"fg":4,"bold":true}],["|",{"inverse":true}],["117 ",{"fg":3,"bold":true}],["                                                *g:calendar_wruler*                                             ",{}],["|",{"inverse":true}],["~                     ",{"fg":4,"bold":true}]],"39":[["~                   ",{"fg":4,"bold":true}],["|",{"inverse":true}],["118 ",{"fg":3,"bold":true}],["To change the week names for the calendar headings, set this variable.  The                                     ",{}],["|",{"inverse":true}],["~                     ",{"fg":4,"bold":true}]],"40":[["~                   ",{"fg":4,"bold":true}],["|",{"inverse":true}],["119 ",{"fg":3,"bold":true}],["value is expected to be a space-separated list of seven values, starting with                                   ",{}],["|",{"inverse":true}],["~                     ",{"fg":4,"bold":true}]],"41":[["~                   ",{"fg":4,"bold":true}],["|",{"inverse":true}],["120 ",{"fg":3,"bold":true}],["Sunday: >                                                                                                       ",{}],["|",{"inverse":true}],["~                     ",{"fg":4,"bold":true}]],"42":[["~                   ",{"fg":4,"bold":true}],["|",{"inverse":true}],["121 ",{"fg":3,"bold":true}],["  let g:calendar_wruler = 'Su Mo Tu We Th Fr Sa'                                                                ",{}],["|",{"inverse":true}],["~                     ",{"fg":4,"bold":true}]],"43":[["~                   ",{"fg":4,"bold":true}],["|",{"inverse":true}],["122 ",{"fg":3,"bold":true}],["<                                                                                                               ",{}],["|",{"inverse":true}],["~                     ",{"fg":4,"bold":true}]],"44":[["~                   ",{"fg":4,"bold":true}],["|",{"inverse":true}],["123 ",{"fg":3,"bold":true}],["                                                                                                                ",{}],["|",{"inverse":true}],["~                     ",{"fg":4,"bold":true}]],"45":[["~                   ",{"fg":4,"bold":true}],["|",{"inverse":true}],["124 ",{"fg":3,"bold":true}],["                                                *g:calendar_monday*                                             ",{"underline":true}],["|",{"inverse":true}],["~                     ",{"fg":4,"bold":true}]],"46":[["[Name] test.cpp      ",{"inverse":true}],[" NORMAL ",{"bold":true}],[" ",{}],["calendar.txt ",{"bold":true}],["                                                        unix │ utf-8 │ text │  56% ",{}],[" LN 124",{"bold":true}],[":1  ",{}],[" ",{"bold":true,"inverse":true}],[" ~/…/calendar-vim/doc>",{"bold":true}]]},"cursor":{"x":25,"y":45,"visible":true}}],[0.028528,{"lines":{"0":[["\" Press <F1> for hel",{"fg":6,"bold":true}],["|",{"inverse":true}],[" 80 ",{"fg":3,"bold":true}],["                                                *g:calendar_mark*                                               ",{}],["|",{"inverse":true}],["  1 ",{"fg":3,"bold":true}],["\" Press ? for help",{"fg":5,"bold":true}]],"1":[["                    ",{}],["|",{"inverse":true}],[" 81 ",{"fg":3,"bold":true}],["Place a '*' or '+' mark after the day.  Acceptable values are 'left',                                           ",{}],["|",{"inverse":true}],["  2 ",{"fg":3,"bold":true}],["                  ",{}]],"2":[["▼",{"fg":3,"bold":true}],[" First",{"fg":5,"bold":true}],[" : ",{}],["struct",{"fg":2,"bold":true}],["    ",{}],["|",{"inverse":true}],[" 82 ",{"fg":3,"bold":true}],["'left-fit', and 'right': >                                                                                      ",{}],["|",{"inverse":true}],["  3 ",{"fg":3,"bold":true}],[".. (up a dir)",{"fg":6,"bold":true}],["     ",{}]],"3":[["    [prototypes]",{"fg":6,"bold":true}],["    ",{}],["|",{"inverse":true}],[" 83 ",{"fg":3,"bold":true}],["  let g:calendar_mark = 'right'                                                                                 ",{}],["|",{"inverse":true}],["  4 /root/",{"fg":3,"bold":true}],["            ",{}]],"4":[["   ",{}],["+",{"fg":2,"bold":true}],["FirstRun(void)  ",{}],["|",{"inverse":true}],[" 84 ",{"fg":3,"bold":true}],["<                                                                                                               ",{}],["|",{"inverse":true}],["  5 ",{"fg":3,"bold":true}],["▸ .asciinema/",{"fg":6,"bold":true}],["     ",{}]],"5":[["   ",{}],["+",{"fg":2,"bold":true}],["FirstRun2(void) ",{}],["|",{"inverse":true}],[" 85 ",{"fg":3,"bold":true}],["                                                                                                                ",{}],["|",{"inverse":true}],["  6 ",{"fg":3,"bold":true}],["▸ .cache/",{"fg":6,"bold":true}],["         ",{}]],"6":[["                    ",{}],["|",{"inverse":true}],[" 86 ",{"fg":3,"bold":true}],["                                                *g:calendar_diary*                                              ",{}],["|",{"inverse":true}],["  7 ",{"fg":3,"bold":true}],["▸ .config/",{"fg":6,"bold":true}],["        ",{}]],"7":[["▼",{"fg":3,"bold":true}],[" Last",{"fg":5,"bold":true}],[" : ",{}],["struct",{"fg":2,"bold":true}],["     ",{}],["|",{"inverse":true}],[" 87 ",{"fg":3,"bold":true}],["                                                *g:calendar_diary*                                              ",{}],["|",{"inverse":true}],["  8 ",{"fg":3,"bold":true}],["▸ .dbus/",{"fg":6,"bold":true}],["          ",{}]]},"cursor":{"y":7,"visible":false}}],[0.009089,{"lines":{"7":[["▼",{"fg":3,"bold":true}],[" Last",{"fg":5,"bold":true}],[" : ",{}],["struct",{"fg":2,"bold":true}],["     ",{}],["|",{"inverse":true}],[" 87 ",{"fg":3,"bold":true}],["Specify the directory for the diary files.  The default value is $HOME/diary.                                   ",{}],["|",{"inverse":true}],["  8 ",{"fg":3,"bold":true}],["▸ .dbus/",{"fg":6,"bold":true}],["          ",{}]],"8":[["    [functions]",{"fg":6,"bold":true}],["     ",{}],["|",{"inverse":true}],[" 88 ",{"fg":3,"bold":true}],["  let g:calendar_diary=$HOME.'/.vim/diary'                                                                      ",{}],["|",{"inverse":true}],["  9 ",{"fg":3,"bold":true}],["▸ .gnupg/",{"fg":6,"bold":true}],["         ",{}]],"9":[["   ",{}],["+",{"fg":2,"bold":true}],["FirstRun(void)  ",{}],["|",{"inverse":true}],[" 89 ",{"fg":3,"bold":true}],["                                                                                                                ",{}],["|",{"inverse":true}],[" 10 ",{"fg":3,"bold":true}],["▸ .kde/",{"fg":6,"bold":true}],["           ",{}]],"10":[["   ",{}],["+",{"fg":2,"bold":true}],["FirstRun2(void) ",{}],["|",{"inverse":true}],[" 90 ",{"fg":3,"bold":true}],["                                                                                                                ",{}],["|",{"inverse":true}],[" 11 ",{"fg":3,"bold":true}],["▸ .local/",{"fg":6,"bold":true}],["         ",{}]],"11":[["   ",{}],["+",{"fg":2,"bold":true}],["~Last()         ",{}],["|",{"inverse":true}],[" 91 ",{"fg":3,"bold":true}],["                                                *g:calendar_navi*                                               ",{}],["|",{"inverse":true}],[" 12 ",{"fg":3,"bold":true}],["▸ .pki/",{"fg":6,"bold":true}],["           ",{}]],"12":[["   ",{}],["+",{"fg":2,"bold":true}],["SecondRun(void) ",{}],["|",{"inverse":true}],[" 92 ",{"fg":3,"bold":true}],["To control the calendar navigator, set this variable.  Acceptable values are                                    ",{}],["|",{"inverse":true}],[" 13 ",{"fg":3,"bold":true}],["▸ .ssh/",{"fg":6,"bold":true}],["           ",{}]],"13":[["   ",{}],["+",{"fg":2,"bold":true}],["SecondRun2(void)",{}],["|",{"inverse":true}],[" 93 ",{"fg":3,"bold":true}],["'top', 'bottom', or 'both'. >                                                                                   ",{}],["|",{"inverse":true}],[" 14 ",{"fg":3,"bold":true}],["▸ .vim/",{"fg":6,"bold":true}],["           ",{}]],"14":[["                    ",{}],["|",{"inverse":true}],[" 94 ",{"fg":3,"bold":true}],["  let g:calendar_navi = ''                                                                                      ",{}],["|",{"inverse":true}],[" 15 ",{"fg":3,"bold":true}],["▸ diary/",{"fg":6,"bold":true}],["          ",{}]],"15":[["▼",{"fg":3,"bold":true}],[" Second",{"fg":5,"bold":true}],[" : ",{}],["struct",{"fg":2,"bold":true}],["   ",{}],["|",{"inverse":true}],[" 95 ",{"fg":3,"bold":true}],["<                                                                                                               ",{}],["|",{"inverse":true}],[" 16 ",{"fg":3,"bold":true}],["▸ temp/",{"fg":6,"bold":true}],["           ",{}]],"16":[["    [prototypes]",{"fg":6,"bold":true}],["    ",{}],["|",{"inverse":true}],[" 96 ",{"fg":3,"bold":true}],["                                                                                                                ",{}],["|",{"inverse":true}],[" 17 ",{"fg":3,"bold":true}],["  .bash_history   ",{}]],"17":[["   ",{}],["+",{"fg":2,"bold":true}],["SecondRun(void) ",{}],["|",{"inverse":true}],[" 97 ",{"fg":3,"bold":true}],["                                                *g:calendar_navi_label*                                         ",{}],["|",{"inverse":true}],[" 18 ",{"fg":3,"bold":true}],["  .bash_logout    ",{}]],"18":[["   ",{}],["+",{"fg":2,"bold":true}],["SecondRun2(void)",{}],["|",{"inverse":true}],[" 98 ",{"fg":3,"bold":true}],["To set the labels for the calendar navigator, for example to change the                                         ",{}],["|",{"inverse":true}],[" 19 ",{"fg":3,"bold":true}],["  .bash_profile   ",{"underline":true}]],"19":[["                    ",{}],["|",{"inverse":true}],[" 99 ",{"fg":3,"bold":true}],["language, use this variable.  Entries should be comma separated. >                                              ",{}],["|",{"inverse":true}],[" 20 ",{"fg":3,"bold":true}],["  .bashrc         ",{}]],"20":[["▼",{"fg":3,"bold":true}],[" ",{}],["functions",{"fg":6,"bold":true}],["         ",{}],["|",{"inverse":true}],["100 ",{"fg":3,"bold":true}],["  let g:calendar_navi_label = 'Prev,Today,Next'                                                                 ",{}],["|",{"inverse":true}],[" 21 ",{"fg":3,"bold":true}],["  .cshrc          ",{}]],"21":[["    main(int argc, c",{"underline":true}],["|",{"inverse":true}],["101 ",{"fg":3,"bold":true}],["<                                                                                                               ",{}],["|",{"inverse":true}],[" 22 ",{"fg":3,"bold":true}],["  .dmrc           ",{}]],"22":[["~                   ",{"fg":4,"bold":true}],["|",{"inverse":true}],["102 ",{"fg":3,"bold":true}],["                                                                                                                ",{}],["|",{"inverse":true}],[" 23 ",{"fg":3,"bold":true}],["  .esd_auth       ",{}]],"23":[["~                   ",{"fg":4,"bold":true}],["|",{"inverse":true}],["103 ",{"fg":3,"bold":true}],["                                                *g:calendar_erafmt*                                             ",{}],["|",{"inverse":true}],[" 24 ",{"fg":3,"bold":true}],["  .gtkrc-2.0      ",{}]],"24":[["~                   ",{"fg":4,"bold":true}],["|",{"inverse":true}],["104 ",{"fg":3,"bold":true}],["To change the dating system, set the following variable.  Include the name of                                   ",{}],["|",{"inverse":true}],[" 25 ",{"fg":3,"bold":true}],["  .gtkrc-2.0-kde4 ",{}]],"25":[["~                   ",{"fg":4,"bold":true}],["|",{"inverse":true}],["105 ",{"fg":3,"bold":true}],["the dating system and its offset from the Georgian calendar (A.D.).  For                                        ",{}],["|",{"inverse":true}],[" 26 ",{"fg":3,"bold":true}],["  .lesshst        ",{}]],"26":[["~                   ",{"fg":4,"bold":true}],["|",{"inverse":true}],["106 ",{"fg":3,"bold":true}],["example, to use the current Japanese era (Heisei), you would set: >                                             ",{}],["|",{"inverse":true}],[" 27 ",{"fg":3,"bold":true}],["  .tcshrc         ",{}]],"27":[["~                   ",{"fg":4,"bold":true}],["|",{"inverse":true}],["107 ",{"fg":3,"bold":true}],["  let g:calendar_erafmt = 'Heisei,-1988'                                                                        ",{}],["|",{"inverse":true}],[" 28 ",{"fg":3,"bold":true}],["  .viminfo        ",{}]],"28":[["~                   ",{"fg":4,"bold":true}],["|",{"inverse":true}],["108 ",{"fg":3,"bold":true}],["<                                                                                                               ",{}],["|",{"inverse":true}],[" 29 ",{"fg":3,"bold":true}],["  .vimrc          ",{}]],"29":[["~                   ",{"fg":4,"bold":true}],["|",{"inverse":true}],["109 ",{"fg":3,"bold":true}],["                                                                                                                ",{}],["|",{"inverse":true}],[" 30 ",{"fg":3,"bold":true}],["  .xsession-errors",{}]],"30":[["~                   ",{"fg":4,"bold":true}],["|",{"inverse":true}],["110 ",{"fg":3,"bold":true}],["                                                *g:calendar_mruler*                                             ",{}],["|",{"inverse":true}],[" 31 ",{"fg":3,"bold":true}],["  anaconda-ks.cfg ",{}]],"31":[["~                   ",{"fg":4,"bold":true}],["|",{"inverse":true}],["111 ",{"fg":3,"bold":true}],["To change the month names for the calendar headings, set this variable.  The                                    ",{}],["|",{"inverse":true}],[" 32 ",{"fg":3,"bold":true}],["  initial-setup-ks",{}]],"32":[["~                   ",{"fg":4,"bold":true}],["|",{"inverse":true}],["112 ",{"fg":3,"bold":true}],["value is expected to be a comma-separated list of twelve values, starting with                                  ",{}],["|",{"inverse":true}],[" 33 ",{"fg":3,"bold":true}],["  test.c          ",{}]],"33":[["~                   ",{"fg":4,"bold":true}],["|",{"inverse":true}],["113 ",{"fg":3,"bold":true}],["Janurary: >                                                                                                     ",{}],["|",{"inverse":true}],[" 34 ",{"fg":3,"bold":true}],["  test.cpp        ",{}]],"34":[["~                   ",{"fg":4,"bold":true}],["|",{"inverse":true}],["114 ",{"fg":3,"bold":true}],["  let g:calendar_mruler = 'Jan,Feb,Mar,Apr,May,Jun,Jul,Aug,Sep,Oct,Nov,Dec'                                     ",{}],["|",{"inverse":true}],[" 35 ",{"fg":3,"bold":true}],["  .test.cpp.swp   ",{}]],"35":[["~                   ",{"fg":4,"bold":true}],["|",{"inverse":true}],["115 ",{"fg":3,"bold":true}],["<                                                                                                               ",{}],["|",{"inverse":true}],["~                     ",{"fg":4,"bold":true}]],"36":[["~                   ",{"fg":4,"bold":true}],["|",{"inverse":true}],["116 ",{"fg":3,"bold":true}],["                                                                                                                ",{}],["|",{"inverse":true}],["~                     ",{"fg":4,"bold":true}]],"37":[["~                   ",{"fg":4,"bold":true}],["|",{"inverse":true}],["117 ",{"fg":3,"bold":true}],["                                                *g:calendar_wruler*                                             ",{}],["|",{"inverse":true}],["~                     ",{"fg":4,"bold":true}]],"38":[["~                   ",{"fg":4,"bold":true}],["|",{"inverse":true}],["118 ",{"fg":3,"bold":true}],["To change the week names for the calendar headings, set this variable.  The                                     ",{}],["|",{"inverse":true}],["~                     ",{"fg":4,"bold":true}]],"39":[["~                   ",{"fg":4,"bold":true}],["|",{"inverse":true}],["119 ",{"fg":3,"bold":true}],["value is expected to be a space-separated list of seven values, starting with                                   ",{}],["|",{"inverse":true}],["~                     ",{"fg":4,"bold":true}]],"40":[["~                   ",{"fg":4,"bold":true}],["|",{"inverse":true}],["120 ",{"fg":3,"bold":true}],["Sunday: >                                                                                                       ",{}],["|",{"inverse":true}],["~                     ",{"fg":4,"bold":true}]],"41":[["~                   ",{"fg":4,"bold":true}],["|",{"inverse":true}],["121 ",{"fg":3,"bold":true}],["  let g:calendar_wruler = 'Su Mo Tu We Th Fr Sa'                                                                ",{}],["|",{"inverse":true}],["~                     ",{"fg":4,"bold":true}]],"42":[["~                   ",{"fg":4,"bold":true}],["|",{"inverse":true}],["122 ",{"fg":3,"bold":true}],["<                                                                                                               ",{}],["|",{"inverse":true}],["~                     ",{"fg":4,"bold":true}]],"43":[["~                   ",{"fg":4,"bold":true}],["|",{"inverse":true}],["123 ",{"fg":3,"bold":true}],["                                                                                                                ",{}],["|",{"inverse":true}],["~                     ",{"fg":4,"bold":true}]],"44":[["~                   ",{"fg":4,"bold":true}],["|",{"inverse":true}],["124 ",{"fg":3,"bold":true}],["                                                *g:calendar_monday*                                             ",{}],["|",{"inverse":true}],["~                     ",{"fg":4,"bold":true}]],"45":[["~                   ",{"fg":4,"bold":true}],["|",{"inverse":true}],["125 ",{"fg":3,"bold":true}],["To make the week start on Monday rather than Sunday, set this variable.  Note                                   ",{"underline":true}],["|",{"inverse":true}],["~                     ",{"fg":4,"bold":true}]],"46":[["[Name] test.cpp      ",{"inverse":true}],[" NORMAL ",{"bold":true}],[" ",{}],["calendar.txt ",{"bold":true}],["                                                        unix │ utf-8 │ text │  56% ",{}],[" LN 125",{"bold":true}],[":1  ",{}],[" ",{"bold":true,"inverse":true}],[" ~/…/calendar-vim/doc>",{"bold":true}]]},"cursor":{"y":45,"visible":true}}],[0.020824,{"lines":{"47":[["                                                                                                                                                     j          ",{}]]},"cursor":{"visible":false}}],[0.001571,{"lines":{"0":[["\" Press <F1> for hel",{"fg":6,"bold":true}],["|",{"inverse":true}],[" 81 ",{"fg":3,"bold":true}],["Place a '*' or '+' mark after the day.  Acceptable values are 'left',                                           ",{}],["|",{"inverse":true}],["  1 ",{"fg":3,"bold":true}],["\" Press ? for help",{"fg":5,"bold":true}]],"1":[["                    ",{}],["|",{"inverse":true}],[" 82 ",{"fg":3,"bold":true}],["'left-fit', and 'right': >                                                                                      ",{}],["|",{"inverse":true}],["  2 ",{"fg":3,"bold":true}],["                  ",{}]],"2":[["▼",{"fg":3,"bold":true}],[" First",{"fg":5,"bold":true}],[" : ",{}],["struct",{"fg":2,"bold":true}],["    ",{}],["|",{"inverse":true}],[" 83 ",{"fg":3,"bold":true}],["  let g:calendar_mark = 'right'                                                                                 ",{}],["|",{"inverse":true}],["  3 ",{"fg":3,"bold":true}],[".. (up a dir)",{"fg":6,"bold":true}],["     ",{}]],"3":[["    [prototypes]",{"fg":6,"bold":true}],["    ",{}],["|",{"inverse":true}],[" 84 ",{"fg":3,"bold":true}],["<                                                                                                               ",{}],["|",{"inverse":true}],["  4 /root/",{"fg":3,"bold":true}],["            ",{}]],"4":[["   ",{}],["+",{"fg":2,"bold":true}],["FirstRun(void)  ",{}],["|",{"inverse":true}],[" 85 ",{"fg":3,"bold":true}],["                                                                                                                ",{}],["|",{"inverse":true}],["  5 ",{"fg":3,"bold":true}],["▸ .asciinema/",{"fg":6,"bold":true}],["     ",{}]],"5":[["   ",{}],["+",{"fg":2,"bold":true}],["FirstRun2(void) ",{}],["|",{"inverse":true}],[" 86 ",{"fg":3,"bold":true}],["                                                *g:calendar_diary*                                              ",{}],["|",{"inverse":true}],["  6 ",{"fg":3,"bold":true}],["▸ .cache/",{"fg":6,"bold":true}],["         ",{}]],"6":[["                    ",{}],["|",{"inverse":true}],[" 87 ",{"fg":3,"bold":true}],["Specify the directory for the diary files.  The default value is $HOME/diary.                                   ",{}],["|",{"inverse":true}],["  7 ",{"fg":3,"bold":true}],["▸ .config/",{"fg":6,"bold":true}],["        ",{}]],"7":[["▼",{"fg":3,"bold":true}],[" Last",{"fg":5,"bold":true}],[" : ",{}],["struct",{"fg":2,"bold":true}],["     ",{}],["|",{"inverse":true}],[" 88 ",{"fg":3,"bold":true}],["  let g:calendar_diary=$HOME.'/.vim/diary'                                                                      ",{}],["|",{"inverse":true}],["  8 ",{"fg":3,"bold":true}],["▸ .dbus/",{"fg":6,"bold":true}],["          ",{}]],"8":[["    [functions]",{"fg":6,"bold":true}],["     ",{}],["|",{"inverse":true}],[" 89 ",{"fg":3,"bold":true}],["                                                                                                                ",{}],["|",{"inverse":true}],["  9 ",{"fg":3,"bold":true}],["▸ .gnupg/",{"fg":6,"bold":true}],["         ",{}]],"9":[["   ",{}],["+",{"fg":2,"bold":true}],["FirstRun(void)  ",{}],["|",{"inverse":true}],[" 90 ",{"fg":3,"bold":true}],["                                                                                                                ",{}],["|",{"inverse":true}],[" 10 ",{"fg":3,"bold":true}],["▸ .kde/",{"fg":6,"bold":true}],["           ",{}]],"10":[["   ",{}],["+",{"fg":2,"bold":true}],["FirstRun2(void) ",{}],["|",{"inverse":true}],[" 91 ",{"fg":3,"bold":true}],["                                                *g:calendar_navi*                                               ",{}],["|",{"inverse":true}],[" 11 ",{"fg":3,"bold":true}],["▸ .local/",{"fg":6,"bold":true}],["         ",{}]],"11":[["   ",{}],["+",{"fg":2,"bold":true}],["~Last()         ",{}],["|",{"inverse":true}],[" 92 ",{"fg":3,"bold":true}],["To control the calendar navigator, set this variable.  Acceptable values are                                    ",{}],["|",{"inverse":true}],[" 12 ",{"fg":3,"bold":true}],["▸ .pki/",{"fg":6,"bold":true}],["           ",{}]],"12":[["   ",{}],["+",{"fg":2,"bold":true}],["SecondRun(void) ",{}],["|",{"inverse":true}],[" 93 ",{"fg":3,"bold":true}],["'top', 'bottom', or 'both'. >                                                                                   ",{}],["|",{"inverse":true}],[" 13 ",{"fg":3,"bold":true}],["▸ .ssh/",{"fg":6,"bold":true}],["           ",{}]],"13":[["   ",{}],["+",{"fg":2,"bold":true}],["SecondRun2(void)",{}],["|",{"inverse":true}],[" 94 ",{"fg":3,"bold":true}],["  let g:calendar_navi = ''                                                                                      ",{}],["|",{"inverse":true}],[" 14 ",{"fg":3,"bold":true}],["▸ .vim/",{"fg":6,"bold":true}],["           ",{}]],"14":[["                    ",{}],["|",{"inverse":true}],[" 95 ",{"fg":3,"bold":true}],["<                                                                                                               ",{}],["|",{"inverse":true}],[" 15 ",{"fg":3,"bold":true}],["▸ diary/",{"fg":6,"bold":true}],["          ",{}]],"47":[["                                                                                                                                                                ",{}]]},"cursor":{"x":120,"y":14}}],[0.020131,{"lines":{"15":[["▼",{"fg":3,"bold":true}],[" Second",{"fg":5,"bold":true}],[" : ",{}],["struct",{"fg":2,"bold":true}],["   ",{}],["|",{"inverse":true}],[" 96 ",{"fg":3,"bold":true}],["                                                                                                                ",{}],["|",{"inverse":true}],[" 16 ",{"fg":3,"bold":true}],["▸ temp/",{"fg":6,"bold":true}],["           ",{}]],"16":[["    [prototypes]",{"fg":6,"bold":true}],["    ",{}],["|",{"inverse":true}],[" 97 ",{"fg":3,"bold":true}],["                                                *g:calendar_navi_label*                                         ",{}],["|",{"inverse":true}],[" 17 ",{"fg":3,"bold":true}],["  .bash_history   ",{}]],"17":[["   ",{}],["+",{"fg":2,"bold":true}],["SecondRun(void) ",{}],["|",{"inverse":true}],[" 98 ",{"fg":3,"bold":true}],["To set the labels for the calendar navigator, for example to change the                                         ",{}],["|",{"inverse":true}],[" 18 ",{"fg":3,"bold":true}],["  .bash_logout    ",{}]],"18":[["   ",{}],["+",{"fg":2,"bold":true}],["SecondRun2(void)",{}],["|",{"inverse":true}],[" 99 ",{"fg":3,"bold":true}],["language, use this variable.  Entries should be comma separated. >                                              ",{}],["|",{"inverse":true}],[" 19 ",{"fg":3,"bold":true}],["  .bash_profile   ",{"underline":true}]],"19":[["                    ",{}],["|",{"inverse":true}],["100 ",{"fg":3,"bold":true}],["  let g:calendar_navi_label = 'Prev,Today,Next'                                                                 ",{}],["|",{"inverse":true}],[" 20 ",{"fg":3,"bold":true}],["  .bashrc         ",{}]],"20":[["▼",{"fg":3,"bold":true}],[" ",{}],["functions",{"fg":6,"bold":true}],["         ",{}],["|",{"inverse":true}],["101 ",{"fg":3,"bold":true}],["<                                                                                                               ",{}],["|",{"inverse":true}],[" 21 ",{"fg":3,"bold":true}],["  .cshrc          ",{}]],"21":[["    main(int argc, c",{"underline":true}],["|",{"inverse":true}],["102 ",{"fg":3,"bold":true}],["                                                                                                                ",{}],["|",{"inverse":true}],[" 22 ",{"fg":3,"bold":true}],["  .dmrc           ",{}]],"22":[["~                   ",{"fg":4,"bold":true}],["|",{"inverse":true}],["103 ",{"fg":3,"bold":true}],["                                                                                                                ",{}],["|",{"inverse":true}],[" 23 ",{"fg":3,"bold":true}],["  .esd_auth       ",{}]]},"cursor":{"x":48,"y":22}}],[0.016269,{"lines":{"0":[["\" Press <F1> for hel",{"fg":6,"bold":true}],["|",{"inverse":true}],[" 82 ",{"fg":3,"bold":true}],["'left-fit', and 'right': >                                                                                      ",{}],["|",{"inverse":true}],["  1 ",{"fg":3,"bold":true}],["\" Press ? for help",{"fg":5,"bold":true}]],"1":[["                    ",{}],["|",{"inverse":true}],[" 83 ",{"fg":3,"bold":true}],["  let g:calendar_mark = 'right'                                                                                 ",{}],["|",{"inverse":true}],["  2 ",{"fg":3,"bold":true}],["                  ",{}]],"2":[["▼",{"fg":3,"bold":true}],[" First",{"fg":5,"bold":true}],[" : ",{}],["struct",{"fg":2,"bold":true}],["    ",{}],["|",{"inverse":true}],[" 84 ",{"fg":3,"bold":true}],["<                                                                                                               ",{}],["|",{"inverse":true}],["  3 ",{"fg":3,"bold":true}],[".. (up a dir)",{"fg":6,"bold":true}],["     ",{}]],"3":[["    [prototypes]",{"fg":6,"bold":true}],["    ",{}],["|",{"inverse":true}],[" 85 ",{"fg":3,"bold":true}],["                                                                                                                ",{}],["|",{"inverse":true}],["  4 /root/",{"fg":3,"bold":true}],["            ",{}]],"4":[["   ",{}],["+",{"fg":2,"bold":true}],["FirstRun(void)  ",{}],["|",{"inverse":true}],[" 86 ",{"fg":3,"bold":true}],["                                                *g:calendar_diary*                                              ",{}],["|",{"inverse":true}],["  5 ",{"fg":3,"bold":true}],["▸ .asciinema/",{"fg":6,"bold":true}],["     ",{}]],"5":[["   ",{}],["+",{"fg":2,"bold":true}],["FirstRun2(void) ",{}],["|",{"inverse":true}],[" 87 ",{"fg":3,"bold":true}],["Specify the directory for the diary files.  The default value is $HOME/diary.                                   ",{}],["|",{"inverse":true}],["  6 ",{"fg":3,"bold":true}],["▸ .cache/",{"fg":6,"bold":true}],["         ",{}]],"6":[["                    ",{}],["|",{"inverse":true}],[" 88 ",{"fg":3,"bold":true}],["  let g:calendar_diary=$HOME.'/.vim/diary'                                                                      ",{}],["|",{"inverse":true}],["  7 ",{"fg":3,"bold":true}],["▸ .config/",{"fg":6,"bold":true}],["        ",{}]],"7":[["▼",{"fg":3,"bold":true}],[" Last",{"fg":5,"bold":true}],[" : ",{}],["struct",{"fg":2,"bold":true}],["     ",{}],["|",{"inverse":true}],[" 89 ",{"fg":3,"bold":true}],["  let g:calendar_diary=$HOME.'/.vim/diary'                                                                      ",{}],["|",{"inverse":true}],["  8 ",{"fg":3,"bold":true}],["▸ .dbus/",{"fg":6,"bold":true}],["          ",{}]],"22":[["~                   ",{"fg":4,"bold":true}],["|",{"inverse":true}],["103 ",{"fg":3,"bold":true}],["                                                *g:calendar_erafmt*                                             ",{}],["|",{"inverse":true}],[" 23 ",{"fg":3,"bold":true}],["  .esd_auth       ",{}]],"23":[["~                   ",{"fg":4,"bold":true}],["|",{"inverse":true}],["104 ",{"fg":3,"bold":true}],["To change the dating system, set the following variable.  Include the name of                                   ",{}],["|",{"inverse":true}],[" 24 ",{"fg":3,"bold":true}],["  .gtkrc-2.0      ",{}]],"24":[["~                   ",{"fg":4,"bold":true}],["|",{"inverse":true}],["105 ",{"fg":3,"bold":true}],["the dating system and its offset from the Georgian calendar (A.D.).  For                                        ",{}],["|",{"inverse":true}],[" 25 ",{"fg":3,"bold":true}],["  .gtkrc-2.0-kde4 ",{}]],"25":[["~                   ",{"fg":4,"bold":true}],["|",{"inverse":true}],["106 ",{"fg":3,"bold":true}],["example, to use the current Japanese era (Heisei), you would set: >                                             ",{}],["|",{"inverse":true}],[" 26 ",{"fg":3,"bold":true}],["  .lesshst        ",{}]],"26":[["~                   ",{"fg":4,"bold":true}],["|",{"inverse":true}],["107 ",{"fg":3,"bold":true}],["  let g:calendar_erafmt = 'Heisei,-1988'                                                                        ",{}],["|",{"inverse":true}],[" 27 ",{"fg":3,"bold":true}],["  .tcshrc         ",{}]],"27":[["~                   ",{"fg":4,"bold":true}],["|",{"inverse":true}],["108 ",{"fg":3,"bold":true}],["<                                                                                                               ",{}],["|",{"inverse":true}],[" 28 ",{"fg":3,"bold":true}],["  .viminfo        ",{}]],"28":[["~                   ",{"fg":4,"bold":true}],["|",{"inverse":true}],["109 ",{"fg":3,"bold":true}],["                                                                                                                ",{}],["|",{"inverse":true}],[" 29 ",{"fg":3,"bold":true}],["  .vimrc          ",{}]],"29":[["~                   ",{"fg":4,"bold":true}],["|",{"inverse":true}],["110 ",{"fg":3,"bold":true}],["                                                *g:calendar_mruler*                                             ",{}],["|",{"inverse":true}],[" 30 ",{"fg":3,"bold":true}],["  .xsession-errors",{}]],"30":[["~                   ",{"fg":4,"bold":true}],["|",{"inverse":true}],["111 ",{"fg":3,"bold":true}],["To change the month names for the calendar headings, set this variable.  The                                    ",{}],["|",{"inverse":true}],[" 31 ",{"fg":3,"bold":true}],["  anaconda-ks.cfg ",{}]],"31":[["~                   ",{"fg":4,"bold":true}],["|",{"inverse":true}],["112 ",{"fg":3,"bold":true}],["value is expected to be a comma-separated list of twelve values, starting with                                  ",{}],["|",{"inverse":true}],[" 32 ",{"fg":3,"bold":true}],["  initial-setup-ks",{}]],"32":[["~                   ",{"fg":4,"bold":true}],["|",{"inverse":true}],["113 ",{"fg":3,"bold":true}],["Janurary: >                                                                                                     ",{}],["|",{"inverse":true}],[" 33 ",{"fg":3,"bold":true}],["  test.c          ",{}]],"33":[["~                   ",{"fg":4,"bold":true}],["|",{"inverse":true}],["114 ",{"fg":3,"bold":true}],["  let g:calendar_mruler = 'Jan,Feb,Mar,Apr,May,Jun,Jul,Aug,Sep,Oct,Nov,Dec'                                     ",{}],["|",{"inverse":true}],[" 34 ",{"fg":3,"bold":true}],["  test.cpp        ",{}]],"34":[["~                   ",{"fg":4,"bold":true}],["|",{"inverse":true}],["115 ",{"fg":3,"bold":true}],["<                                                                                                               ",{}],["|",{"inverse":true}],[" 35 ",{"fg":3,"bold":true}],["  .test.cpp.swp   ",{}]],"35":[["~                   ",{"fg":4,"bold":true}],["|",{"inverse":true}],["116 ",{"fg":3,"bold":true}],["                                                                                                                ",{}],["|",{"inverse":true}],["~                     ",{"fg":4,"bold":true}]],"36":[["~                   ",{"fg":4,"bold":true}],["|",{"inverse":true}],["117 ",{"fg":3,"bold":true}],["                                                *g:calendar_wruler*                                             ",{}],["|",{"inverse":true}],["~                     ",{"fg":4,"bold":true}]],"37":[["~                   ",{"fg":4,"bold":true}],["|",{"inverse":true}],["118 ",{"fg":3,"bold":true}],["To change the week names for the calendar headings, set this variable.  The                                     ",{}],["|",{"inverse":true}],["~                     ",{"fg":4,"bold":true}]],"38":[["~                   ",{"fg":4,"bold":true}],["|",{"inverse":true}],["119 ",{"fg":3,"bold":true}],["value is expected to be a space-separated list of seven values, starting with                                   ",{}],["|",{"inverse":true}],["~                     ",{"fg":4,"bold":true}]],"39":[["~                   ",{"fg":4,"bold":true}],["|",{"inverse":true}],["120 ",{"fg":3,"bold":true}],["Sunday: >                                                                                                       ",{}],["|",{"inverse":true}],["~                     ",{"fg":4,"bold":true}]],"40":[["~                   ",{"fg":4,"bold":true}],["|",{"inverse":true}],["121 ",{"fg":3,"bold":true}],["  let g:calendar_wruler = 'Su Mo Tu We Th Fr Sa'                                                                ",{}],["|",{"inverse":true}],["~                     ",{"fg":4,"bold":true}]],"41":[["~                   ",{"fg":4,"bold":true}],["|",{"inverse":true}],["122 ",{"fg":3,"bold":true}],["<                                                                                                               ",{}],["|",{"inverse":true}],["~                     ",{"fg":4,"bold":true}]],"42":[["~                   ",{"fg":4,"bold":true}],["|",{"inverse":true}],["123 ",{"fg":3,"bold":true}],["                                                                                                                ",{}],["|",{"inverse":true}],["~                     ",{"fg":4,"bold":true}]],"43":[["~                   ",{"fg":4,"bold":true}],["|",{"inverse":true}],["124 ",{"fg":3,"bold":true}],["                                                *g:calendar_monday*                                             ",{}],["|",{"inverse":true}],["~                     ",{"fg":4,"bold":true}]],"44":[["~                   ",{"fg":4,"bold":true}],["|",{"inverse":true}],["125 ",{"fg":3,"bold":true}],["To make the week start on Monday rather than Sunday, set this variable.  Note                                   ",{}],["|",{"inverse":true}],["~                     ",{"fg":4,"bold":true}]],"45":[["~                   ",{"fg":4,"bold":true}],["|",{"inverse":true}],["126 ",{"fg":3,"bold":true}],["that the value of |g:calendar_wruler| is not affected by this; it should                                        ",{"underline":true}],["|",{"inverse":true}],["~                     ",{"fg":4,"bold":true}]],"46":[["[Name] test.cpp      ",{"inverse":true}],[" NORMAL ",{"bold":true}],[" ",{}],["calendar.txt ",{"bold":true}],["                                                        unix │ utf-8 │ text │  57% ",{}],[" LN 126",{"bold":true}],[":1  ",{}],[" ",{"bold":true,"inverse":true}],[" ~/…/calendar-vim/doc>",{"bold":true}]]},"cursor":{"x":25,"y":7}}],[0.005921,{"lines":{"7":[["▼",{"fg":3,"bold":true}],[" Last",{"fg":5,"bold":true}],[" : ",{}],["struct",{"fg":2,"bold":true}],["     ",{}],["|",{"inverse":true}],[" 89 ",{"fg":3,"bold":true}],["                                                                                                                ",{}],["|",{"inverse":true}],["  8 ",{"fg":3,"bold":true}],["▸ .dbus/",{"fg":6,"bold":true}],["          ",{}]],"8":[["    [functions]",{"fg":6,"bold":true}],["     ",{}],["|",{"inverse":true}],[" 90 ",{"fg":3,"bold":true}],["                                                                                                                ",{}],["|",{"inverse":true}],["  9 ",{"fg":3,"bold":true}],["▸ .gnupg/",{"fg":6,"bold":true}],["         ",{}]],"9":[["   ",{}],["+",{"fg":2,"bold":true}],["FirstRun(void)  ",{}],["|",{"inverse":true}],[" 91 ",{"fg":3,"bold":true}],["                                                *g:calendar_navi*                                               ",{}],["|",{"inverse":true}],[" 10 ",{"fg":3,"bold":true}],["▸ .kde/",{"fg":6,"bold":true}],["           ",{}]],"10":[["   ",{}],["+",{"fg":2,"bold":true}],["FirstRun2(void) ",{}],["|",{"inverse":true}],[" 92 ",{"fg":3,"bold":true}],["To control the calendar navigator, set this variable.  Acceptable values are                                    ",{}],["|",{"inverse":true}],[" 11 ",{"fg":3,"bold":true}],["▸ .local/",{"fg":6,"bold":true}],["         ",{}]],"11":[["   ",{}],["+",{"fg":2,"bold":true}],["~Last()         ",{}],["|",{"inverse":true}],[" 93 ",{"fg":3,"bold":true}],["'top', 'bottom', or 'both'. >                                                                                   ",{}],["|",{"inverse":true}],[" 12 ",{"fg":3,"bold":true}],["▸ .pki/",{"fg":6,"bold":true}],["           ",{}]],"12":[["   ",{}],["+",{"fg":2,"bold":true}],["SecondRun(void) ",{}],["|",{"inverse":true}],[" 94 ",{"fg":3,"bold":true}],["  let g:calendar_navi = ''                                                                                      ",{}],["|",{"inverse":true}],[" 13 ",{"fg":3,"bold":true}],["▸ .ssh/",{"fg":6,"bold":true}],["           ",{}]],"13":[["   ",{}],["+",{"fg":2,"bold":true}],["SecondRun2(void)",{}],["|",{"inverse":true}],[" 95 ",{"fg":3,"bold":true}],["<                                                                                                               ",{}],["|",{"inverse":true}],[" 14 ",{"fg":3,"bold":true}],["▸ .vim/",{"fg":6,"bold":true}],["           ",{}]],"14":[["                    ",{}],["|",{"inverse":true}],[" 96 ",{"fg":3,"bold":true}],["                                                                                                                ",{}],["|",{"inverse":true}],[" 15 ",{"fg":3,"bold":true}],["▸ diary/",{"fg":6,"bold":true}],["          ",{}]],"15":[["▼",{"fg":3,"bold":true}],[" Second",{"fg":5,"bold":true}],[" : ",{}],["struct",{"fg":2,"bold":true}],["   ",{}],["|",{"inverse":true}],[" 97 ",{"fg":3,"bold":true}],["                                                *g:calendar_navi_label*                                         ",{}],["|",{"inverse":true}],[" 16 ",{"fg":3,"bold":true}],["▸ temp/",{"fg":6,"bold":true}],["           ",{}]],"16":[["    [prototypes]",{"fg":6,"bold":true}],["    ",{}],["|",{"inverse":true}],[" 98 ",{"fg":3,"bold":true}],["To set the labels for the calendar navigator, for example to change the                                         ",{}],["|",{"inverse":true}],[" 17 ",{"fg":3,"bold":true}],["  .bash_history   ",{}]],"17":[["   ",{}],["+",{"fg":2,"bold":true}],["SecondRun(void) ",{}],["|",{"inverse":true}],[" 99 ",{"fg":3,"bold":true}],["language, use this variable.  Entries should be comma separated. >                                              ",{}],["|",{"inverse":true}],[" 18 ",{"fg":3,"bold":true}],["  .bash_logout    ",{}]],"18":[["   ",{}],["+",{"fg":2,"bold":true}],["SecondRun2(void)",{}],["|",{"inverse":true}],["100 ",{"fg":3,"bold":true}],["  let g:calendar_navi_label = 'Prev,Today,Next'                                                                 ",{}],["|",{"inverse":true}],[" 19 ",{"fg":3,"bold":true}],["  .bash_profile   ",{"underline":true}]],"19":[["                    ",{}],["|",{"inverse":true}],["101 ",{"fg":3,"bold":true}],["<                                                                                                               ",{}],["|",{"inverse":true}],[" 20 ",{"fg":3,"bold":true}],["  .bashrc         ",{}]],"20":[["▼",{"fg":3,"bold":true}],[" ",{}],["functions",{"fg":6,"bold":true}],["         ",{}],["|",{"inverse":true}],["102 ",{"fg":3,"bold":true}],["                                                                                                                ",{}],["|",{"inverse":true}],[" 21 ",{"fg":3,"bold":true}],["  .cshrc          ",{}]],"21":[["    main(int argc, c",{"underline":true}],["|",{"inverse":true}],["103 ",{"fg":3,"bold":true}],["                                                *g:calendar_erafmt*                                             ",{}],["|",{"inverse":true}],[" 22 ",{"fg":3,"bold":true}],["  .dmrc           ",{}]],"22":[["~                   ",{"fg":4,"bold":true}],["|",{"inverse":true}],["104 ",{"fg":3,"bold":true}],["To change the dating system, set the following variable.  Include the name of                                   ",{}],["|",{"inverse":true}],[" 23 ",{"fg":3,"bold":true}],["  .esd_auth       ",{}]],"23":[["~                   ",{"fg":4,"bold":true}],["|",{"inverse":true}],["105 ",{"fg":3,"bold":true}],["the dating system and its offset from the Georgian calendar (A.D.).  For                                        ",{}],["|",{"inverse":true}],[" 24 ",{"fg":3,"bold":true}],["  .gtkrc-2.0      ",{}]],"24":[["~                   ",{"fg":4,"bold":true}],["|",{"inverse":true}],["106 ",{"fg":3,"bold":true}],["example, to use the current Japanese era (Heisei), you would set: >                                             ",{}],["|",{"inverse":true}],[" 25 ",{"fg":3,"bold":true}],["  .gtkrc-2.0-kde4 ",{}]],"25":[["~                   ",{"fg":4,"bold":true}],["|",{"inverse":true}],["107 ",{"fg":3,"bold":true}],["  let g:calendar_erafmt = 'Heisei,-1988'                                                                        ",{}],["|",{"inverse":true}],[" 26 ",{"fg":3,"bold":true}],["  .lesshst        ",{}]],"26":[["~                   ",{"fg":4,"bold":true}],["|",{"inverse":true}],["108 ",{"fg":3,"bold":true}],["<                                                                                                               ",{}],["|",{"inverse":true}],[" 27 ",{"fg":3,"bold":true}],["  .tcshrc         ",{}]],"27":[["~                   ",{"fg":4,"bold":true}],["|",{"inverse":true}],["109 ",{"fg":3,"bold":true}],["                                                                                                                ",{}],["|",{"inverse":true}],[" 28 ",{"fg":3,"bold":true}],["  .viminfo        ",{}]],"28":[["~                   ",{"fg":4,"bold":true}],["|",{"inverse":true}],["110 ",{"fg":3,"bold":true}],["                                                *g:calendar_mruler*                                             ",{}],["|",{"inverse":true}],[" 29 ",{"fg":3,"bold":true}],["  .vimrc          ",{}]],"29":[["~                   ",{"fg":4,"bold":true}],["|",{"inverse":true}],["111 ",{"fg":3,"bold":true}],["To change the month names for the calendar headings, set this variable.  The                                    ",{}],["|",{"inverse":true}],[" 30 ",{"fg":3,"bold":true}],["  .xsession-errors",{}]],"30":[["~                   ",{"fg":4,"bold":true}],["|",{"inverse":true}],["112 ",{"fg":3,"bold":true}],["value is expected to be a comma-separated list of twelve values, starting with                                  ",{}],["|",{"inverse":true}],[" 31 ",{"fg":3,"bold":true}],["  anaconda-ks.cfg ",{}]],"31":[["~                   ",{"fg":4,"bold":true}],["|",{"inverse":true}],["113 ",{"fg":3,"bold":true}],["Janurary: >                                                                                                     ",{}],["|",{"inverse":true}],[" 32 ",{"fg":3,"bold":true}],["  initial-setup-ks",{}]],"32":[["~                   ",{"fg":4,"bold":true}],["|",{"inverse":true}],["114 ",{"fg":3,"bold":true}],["  let g:calendar_mruler = 'Jan,Feb,Mar,Apr,May,Jun,Jul,Aug,Sep,Oct,Nov,Dec'                                     ",{}],["|",{"inverse":true}],[" 33 ",{"fg":3,"bold":true}],["  test.c          ",{}]],"33":[["~                   ",{"fg":4,"bold":true}],["|",{"inverse":true}],["115 ",{"fg":3,"bold":true}],["<                                                                                                               ",{}],["|",{"inverse":true}],[" 34 ",{"fg":3,"bold":true}],["  test.cpp        ",{}]],"34":[["~                   ",{"fg":4,"bold":true}],["|",{"inverse":true}],["116 ",{"fg":3,"bold":true}],["                                                                                                                ",{}],["|",{"inverse":true}],[" 35 ",{"fg":3,"bold":true}],["  .test.cpp.swp   ",{}]],"35":[["~                   ",{"fg":4,"bold":true}],["|",{"inverse":true}],["117 ",{"fg":3,"bold":true}],["                                                *g:calendar_wruler*                                             ",{}],["|",{"inverse":true}],["~                     ",{"fg":4,"bold":true}]],"36":[["~                   ",{"fg":4,"bold":true}],["|",{"inverse":true}],["118 ",{"fg":3,"bold":true}],["To change the week names for the calendar headings, set this variable.  The                                     ",{}],["|",{"inverse":true}],["~                     ",{"fg":4,"bold":true}]],"37":[["~                   ",{"fg":4,"bold":true}],["|",{"inverse":true}],["119 ",{"fg":3,"bold":true}],["value is expected to be a space-separated list of seven values, starting with                                   ",{}],["|",{"inverse":true}],["~                     ",{"fg":4,"bold":true}]],"38":[["~                   ",{"fg":4,"bold":true}],["|",{"inverse":true}],["120 ",{"fg":3,"bold":true}],["Sunday: >                                                                                                       ",{}],["|",{"inverse":true}],["~                     ",{"fg":4,"bold":true}]],"39":[["~                   ",{"fg":4,"bold":true}],["|",{"inverse":true}],["121 ",{"fg":3,"bold":true}],["  let g:calendar_wruler = 'Su Mo Tu We Th Fr Sa'                                                                ",{}],["|",{"inverse":true}],["~                     ",{"fg":4,"bold":true}]],"40":[["~                   ",{"fg":4,"bold":true}],["|",{"inverse":true}],["122 ",{"fg":3,"bold":true}],["<                                                                                                               ",{}],["|",{"inverse":true}],["~                     ",{"fg":4,"bold":true}]],"41":[["~                   ",{"fg":4,"bold":true}],["|",{"inverse":true}],["123 ",{"fg":3,"bold":true}],["                                                                                                                ",{}],["|",{"inverse":true}],["~                     ",{"fg":4,"bold":true}]],"42":[["~                   ",{"fg":4,"bold":true}],["|",{"inverse":true}],["124 ",{"fg":3,"bold":true}],["                                                *g:calendar_monday*                                             ",{}],["|",{"inverse":true}],["~                     ",{"fg":4,"bold":true}]],"43":[["~                   ",{"fg":4,"bold":true}],["|",{"inverse":true}],["125 ",{"fg":3,"bold":true}],["To make the week start on Monday rather than Sunday, set this variable.  Note                                   ",{}],["|",{"inverse":true}],["~                     ",{"fg":4,"bold":true}]],"44":[["~                   ",{"fg":4,"bold":true}],["|",{"inverse":true}],["126 ",{"fg":3,"bold":true}],["that the value of |g:calendar_wruler| is not affected by this; it should                                        ",{}],["|",{"inverse":true}],["~                     ",{"fg":4,"bold":true}]],"45":[["~                   ",{"fg":4,"bold":true}],["|",{"inverse":true}],["127 ",{"fg":3,"bold":true}],["always begin with Sunday: >                                                                                     ",{"underline":true}],["|",{"inverse":true}],["~                     ",{"fg":4,"bold":true}]],"46":[["[Name] test.cpp      ",{"inverse":true}],[" NORMAL ",{"bold":true}],[" ",{}],["calendar.txt ",{"bold":true}],["                                                        unix │ utf-8 │ text │  57% ",{}],[" LN 127",{"bold":true}],[":1  ",{}],[" ",{"bold":true,"inverse":true}],[" ~/…/calendar-vim/doc>",{"bold":true}]]},"cursor":{"y":45,"visible":true}}],[0.033311,{"lines":{"0":[["\" Press <F1> for hel",{"fg":6,"bold":true}],["|",{"inverse":true}],[" 83 ",{"fg":3,"bold":true}],["  let g:calendar_mark = 'right'                                                                                 ",{}],["|",{"inverse":true}],["  1 ",{"fg":3,"bold":true}],["\" Press ? for help",{"fg":5,"bold":true}]],"1":[["                    ",{}],["|",{"inverse":true}],[" 84 ",{"fg":3,"bold":true}],["<                                                                                                               ",{}],["|",{"inverse":true}],["  2 ",{"fg":3,"bold":true}],["                  ",{}]],"2":[["▼",{"fg":3,"bold":true}],[" First",{"fg":5,"bold":true}],[" : ",{}],["struct",{"fg":2,"bold":true}],["    ",{}],["|",{"inverse":true}],[" 85 ",{"fg":3,"bold":true}],["                                                                                                                ",{}],["|",{"inverse":true}],["  3 ",{"fg":3,"bold":true}],[".. (up a dir)",{"fg":6,"bold":true}],["     ",{}]],"3":[["    [prototypes]",{"fg":6,"bold":true}],["    ",{}],["|",{"inverse":true}],[" 86 ",{"fg":3,"bold":true}],["                                                *g:calendar_diary*                                              ",{}],["|",{"inverse":true}],["  4 /root/",{"fg":3,"bold":true}],["            ",{}]],"4":[["   ",{}],["+",{"fg":2,"bold":true}],["FirstRun(void)  ",{}],["|",{"inverse":true}],[" 87 ",{"fg":3,"bold":true}],["Specify the directory for the diary files.  The default value is $HOME/diary.                                   ",{}],["|",{"inverse":true}],["  5 ",{"fg":3,"bold":true}],["▸ .asciinema/",{"fg":6,"bold":true}],["     ",{}]],"5":[["   ",{}],["+",{"fg":2,"bold":true}],["FirstRun2(void) ",{}],["|",{"inverse":true}],[" 88 ",{"fg":3,"bold":true}],["  let g:calendar_diary=$HOME.'/.vim/diary'                                                                      ",{}],["|",{"inverse":true}],["  6 ",{"fg":3,"bold":true}],["▸ .cache/",{"fg":6,"bold":true}],["         ",{}]],"6":[["                    ",{}],["|",{"inverse":true}],[" 89 ",{"fg":3,"bold":true}],["                                                                                                                ",{}],["|",{"inverse":true}],["  7 ",{"fg":3,"bold":true}],["▸ .config/",{"fg":6,"bold":true}],["        ",{}]],"7":[["▼",{"fg":3,"bold":true}],[" Last",{"fg":5,"bold":true}],[" : ",{}],["struct",{"fg":2,"bold":true}],["     ",{}],["|",{"inverse":true}],[" 90 ",{"fg":3,"bold":true}],["                                                                                                                ",{}],["|",{"inverse":true}],["  8 ",{"fg":3,"bold":true}],["▸ .dbus/",{"fg":6,"bold":true}],["          ",{}]]},"cursor":{"y":7,"visible":false}}],[0.005886,{"lines":{"8":[["    [functions]",{"fg":6,"bold":true}],["     ",{}],["|",{"inverse":true}],[" 91 ",{"fg":3,"bold":true}],["                                                *g:calendar_navi*                                               ",{}],["|",{"inverse":true}],["  9 ",{"fg":3,"bold":true}],["▸ .gnupg/",{"fg":6,"bold":true}],["         ",{}]],"9":[["   ",{}],["+",{"fg":2,"bold":true}],["FirstRun(void)  ",{}],["|",{"inverse":true}],[" 92 ",{"fg":3,"bold":true}],["To control the calendar navigator, set this variable.  Acceptable values are                                    ",{}],["|",{"inverse":true}],[" 10 ",{"fg":3,"bold":true}],["▸ .kde/",{"fg":6,"bold":true}],["           ",{}]],"10":[["   ",{}],["+",{"fg":2,"bold":true}],["FirstRun2(void) ",{}],["|",{"inverse":true}],[" 93 ",{"fg":3,"bold":true}],["'top', 'bottom', or 'both'. >                                                                                   ",{}],["|",{"inverse":true}],[" 11 ",{"fg":3,"bold":true}],["▸ .local/",{"fg":6,"bold":true}],["         ",{}]],"11":[["   ",{}],["+",{"fg":2,"bold":true}],["~Last()         ",{}],["|",{"inverse":true}],[" 94 ",{"fg":3,"bold":true}],["  let g:calendar_navi = ''                                                                                      ",{}],["|",{"inverse":true}],[" 12 ",{"fg":3,"bold":true}],["▸ .pki/",{"fg":6,"bold":true}],["           ",{}]],"12":[["   ",{}],["+",{"fg":2,"bold":true}],["SecondRun(void) ",{}],["|",{"inverse":true}],[" 95 ",{"fg":3,"bold":true}],["<                                                                                                               ",{}],["|",{"inverse":true}],[" 13 ",{"fg":3,"bold":true}],["▸ .ssh/",{"fg":6,"bold":true}],["           ",{}]],"13":[["   ",{}],["+",{"fg":2,"bold":true}],["SecondRun2(void)",{}],["|",{"inverse":true}],[" 96 ",{"fg":3,"bold":true}],["                                                                                                                ",{}],["|",{"inverse":true}],[" 14 ",{"fg":3,"bold":true}],["▸ .vim/",{"fg":6,"bold":true}],["           ",{}]],"14":[["                    ",{}],["|",{"inverse":true}],[" 97 ",{"fg":3,"bold":true}],["                                                *g:calendar_navi_label*                                         ",{}],["|",{"inverse":true}],[" 15 ",{"fg":3,"bold":true}],["▸ diary/",{"fg":6,"bold":true}],["          ",{}]],"15":[["▼",{"fg":3,"bold":true}],[" Second",{"fg":5,"bold":true}],[" : ",{}],["struct",{"fg":2,"bold":true}],["   ",{}],["|",{"inverse":true}],[" 98 ",{"fg":3,"bold":true}],["To set the labels for the calendar navigator, for example to change the                                         ",{}],["|",{"inverse":true}],[" 16 ",{"fg":3,"bold":true}],["▸ temp/",{"fg":6,"bold":true}],["           ",{}]],"16":[["    [prototypes]",{"fg":6,"bold":true}],["    ",{}],["|",{"inverse":true}],[" 99 ",{"fg":3,"bold":true}],["language, use this variable.  Entries should be comma separated. >                                              ",{}],["|",{"inverse":true}],[" 17 ",{"fg":3,"bold":true}],["  .bash_history   ",{}]],"17":[["   ",{}],["+",{"fg":2,"bold":true}],["SecondRun(void) ",{}],["|",{"inverse":true}],["100 ",{"fg":3,"bold":true}],["  let g:calendar_navi_label = 'Prev,Today,Next'                                                                 ",{}],["|",{"inverse":true}],[" 18 ",{"fg":3,"bold":true}],["  .bash_logout    ",{}]],"18":[["   ",{}],["+",{"fg":2,"bold":true}],["SecondRun2(void)",{}],["|",{"inverse":true}],["101 ",{"fg":3,"bold":true}],["<                                                                                                               ",{}],["|",{"inverse":true}],[" 19 ",{"fg":3,"bold":true}],["  .bash_profile   ",{"underline":true}]],"19":[["                    ",{}],["|",{"inverse":true}],["102 ",{"fg":3,"bold":true}],["                                                                                                                ",{}],["|",{"inverse":true}],[" 20 ",{"fg":3,"bold":true}],["  .bashrc         ",{}]],"20":[["▼",{"fg":3,"bold":true}],[" ",{}],["functions",{"fg":6,"bold":true}],["         ",{}],["|",{"inverse":true}],["103 ",{"fg":3,"bold":true}],["                                                *g:calendar_erafmt*                                             ",{}],["|",{"inverse":true}],[" 21 ",{"fg":3,"bold":true}],["  .cshrc          ",{}]],"21":[["    main(int argc, c",{"underline":true}],["|",{"inverse":true}],["104 ",{"fg":3,"bold":true}],["To change the dating system, set the following variable.  Include the name of                                   ",{}],["|",{"inverse":true}],[" 22 ",{"fg":3,"bold":true}],["  .dmrc           ",{}]],"22":[["~                   ",{"fg":4,"bold":true}],["|",{"inverse":true}],["105 ",{"fg":3,"bold":true}],["the dating system and its offset from the Georgian calendar (A.D.).  For                                        ",{}],["|",{"inverse":true}],[" 23 ",{"fg":3,"bold":true}],["  .esd_auth       ",{}]],"23":[["~                   ",{"fg":4,"bold":true}],["|",{"inverse":true}],["106 ",{"fg":3,"bold":true}],["example, to use the current Japanese era (Heisei), you would set: >                                             ",{}],["|",{"inverse":true}],[" 24 ",{"fg":3,"bold":true}],["  .gtkrc-2.0      ",{}]],"24":[["~                   ",{"fg":4,"bold":true}],["|",{"inverse":true}],["107 ",{"fg":3,"bold":true}],["  let g:calendar_erafmt = 'Heisei,-1988'                                                                        ",{}],["|",{"inverse":true}],[" 25 ",{"fg":3,"bold":true}],["  .gtkrc-2.0-kde4 ",{}]],"25":[["~                   ",{"fg":4,"bold":true}],["|",{"inverse":true}],["108 ",{"fg":3,"bold":true}],["<                                                                                                               ",{}],["|",{"inverse":true}],[" 26 ",{"fg":3,"bold":true}],["  .lesshst        ",{}]],"26":[["~                   ",{"fg":4,"bold":true}],["|",{"inverse":true}],["109 ",{"fg":3,"bold":true}],["                                                                                                                ",{}],["|",{"inverse":true}],[" 27 ",{"fg":3,"bold":true}],["  .tcshrc         ",{}]],"27":[["~                   ",{"fg":4,"bold":true}],["|",{"inverse":true}],["110 ",{"fg":3,"bold":true}],["                                                *g:calendar_mruler*                                             ",{}],["|",{"inverse":true}],[" 28 ",{"fg":3,"bold":true}],["  .viminfo        ",{}]],"28":[["~                   ",{"fg":4,"bold":true}],["|",{"inverse":true}],["111 ",{"fg":3,"bold":true}],["To change the month names for the calendar headings, set this variable.  The                                    ",{}],["|",{"inverse":true}],[" 29 ",{"fg":3,"bold":true}],["  .vimrc          ",{}]],"29":[["~                   ",{"fg":4,"bold":true}],["|",{"inverse":true}],["112 ",{"fg":3,"bold":true}],["value is expected to be a comma-separated list of twelve values, starting with                                  ",{}],["|",{"inverse":true}],[" 30 ",{"fg":3,"bold":true}],["  .xsession-errors",{}]],"30":[["~                   ",{"fg":4,"bold":true}],["|",{"inverse":true}],["113 ",{"fg":3,"bold":true}],["Janurary: >                                                                                                     ",{}],["|",{"inverse":true}],[" 31 ",{"fg":3,"bold":true}],["  anaconda-ks.cfg ",{}]],"31":[["~                   ",{"fg":4,"bold":true}],["|",{"inverse":true}],["114 ",{"fg":3,"bold":true}],["  let g:calendar_mruler = 'Jan,Feb,Mar,Apr,May,Jun,Jul,Aug,Sep,Oct,Nov,Dec'                                     ",{}],["|",{"inverse":true}],[" 32 ",{"fg":3,"bold":true}],["  initial-setup-ks",{}]],"32":[["~                   ",{"fg":4,"bold":true}],["|",{"inverse":true}],["115 ",{"fg":3,"bold":true}],["<                                                                                                               ",{}],["|",{"inverse":true}],[" 33 ",{"fg":3,"bold":true}],["  test.c          ",{}]],"33":[["~                   ",{"fg":4,"bold":true}],["|",{"inverse":true}],["116 ",{"fg":3,"bold":true}],["                                                                                                                ",{}],["|",{"inverse":true}],[" 34 ",{"fg":3,"bold":true}],["  test.cpp        ",{}]],"34":[["~                   ",{"fg":4,"bold":true}],["|",{"inverse":true}],["117 ",{"fg":3,"bold":true}],["                                                *g:calendar_wruler*                                             ",{}],["|",{"inverse":true}],[" 35 ",{"fg":3,"bold":true}],["  .test.cpp.swp   ",{}]],"35":[["~                   ",{"fg":4,"bold":true}],["|",{"inverse":true}],["118 ",{"fg":3,"bold":true}],["To change the week names for the calendar headings, set this variable.  The                                     ",{}],["|",{"inverse":true}],["~                     ",{"fg":4,"bold":true}]],"36":[["~                   ",{"fg":4,"bold":true}],["|",{"inverse":true}],["119 ",{"fg":3,"bold":true}],["value is expected to be a space-separated list of seven values, starting with                                   ",{}],["|",{"inverse":true}],["~                     ",{"fg":4,"bold":true}]],"37":[["~                   ",{"fg":4,"bold":true}],["|",{"inverse":true}],["120 ",{"fg":3,"bold":true}],["Sunday: >                                                                                                       ",{}],["|",{"inverse":true}],["~                     ",{"fg":4,"bold":true}]],"38":[["~                   ",{"fg":4,"bold":true}],["|",{"inverse":true}],["121 ",{"fg":3,"bold":true}],["  let g:calendar_wruler = 'Su Mo Tu We Th Fr Sa'                                                                ",{}],["|",{"inverse":true}],["~                     ",{"fg":4,"bold":true}]],"39":[["~                   ",{"fg":4,"bold":true}],["|",{"inverse":true}],["122 ",{"fg":3,"bold":true}],["<                                                                                                               ",{}],["|",{"inverse":true}],["~                     ",{"fg":4,"bold":true}]],"40":[["~                   ",{"fg":4,"bold":true}],["|",{"inverse":true}],["123 ",{"fg":3,"bold":true}],["                                                                                                                ",{}],["|",{"inverse":true}],["~                     ",{"fg":4,"bold":true}]],"41":[["~                   ",{"fg":4,"bold":true}],["|",{"inverse":true}],["124 ",{"fg":3,"bold":true}],["                                                *g:calendar_monday*                                             ",{}],["|",{"inverse":true}],["~                     ",{"fg":4,"bold":true}]],"42":[["~                   ",{"fg":4,"bold":true}],["|",{"inverse":true}],["125 ",{"fg":3,"bold":true}],["To make the week start on Monday rather than Sunday, set this variable.  Note                                   ",{}],["|",{"inverse":true}],["~                     ",{"fg":4,"bold":true}]],"43":[["~                   ",{"fg":4,"bold":true}],["|",{"inverse":true}],["126 ",{"fg":3,"bold":true}],["that the value of |g:calendar_wruler| is not affected by this; it should                                        ",{}],["|",{"inverse":true}],["~                     ",{"fg":4,"bold":true}]],"44":[["~                   ",{"fg":4,"bold":true}],["|",{"inverse":true}],["127 ",{"fg":3,"bold":true}],["always begin with Sunday: >                                                                                     ",{}],["|",{"inverse":true}],["~                     ",{"fg":4,"bold":true}]],"45":[["~                   ",{"fg":4,"bold":true}],["|",{"inverse":true}],["128 ",{"fg":3,"bold":true}],["  let g:calendar_monday = 1                                                                                     ",{"underline":true}],["|",{"inverse":true}],["~                     ",{"fg":4,"bold":true}]],"46":[["[Name] test.cpp      ",{"inverse":true}],[" NORMAL ",{"bold":true}],[" ",{}],["calendar.txt ",{"bold":true}],["                                                        unix │ utf-8 │ text │  58% ",{}],[" LN 128",{"bold":true}],[":1  ",{}],[" ",{"bold":true,"inverse":true}],[" ~/…/calendar-vim/doc>",{"bold":true}]]},"cursor":{"y":45,"visible":true}}],[0.018874,{"lines":{"47":[["                                                                                                                                                     j          ",{}]]},"cursor":{"visible":false}}],[0.004258,{"lines":{"0":[["\" Press <F1> for hel",{"fg":6,"bold":true}],["|",{"inverse":true}],[" 84 ",{"fg":3,"bold":true}],["<                                                                                                               ",{}],["|",{"inverse":true}],["  1 ",{"fg":3,"bold":true}],["\" Press ? for help",{"fg":5,"bold":true}]],"1":[["                    ",{}],["|",{"inverse":true}],[" 85 ",{"fg":3,"bold":true}],["                                                                                                                ",{}],["|",{"inverse":true}],["  2 ",{"fg":3,"bold":true}],["                  ",{}]],"2":[["▼",{"fg":3,"bold":true}],[" First",{"fg":5,"bold":true}],[" : ",{}],["struct",{"fg":2,"bold":true}],["    ",{}],["|",{"inverse":true}],[" 86 ",{"fg":3,"bold":true}],["                                                *g:calendar_diary*                                              ",{}],["|",{"inverse":true}],["  3 ",{"fg":3,"bold":true}],[".. (up a dir)",{"fg":6,"bold":true}],["     ",{}]],"3":[["    [prototypes]",{"fg":6,"bold":true}],["    ",{}],["|",{"inverse":true}],[" 87 ",{"fg":3,"bold":true}],["Specify the directory for the diary files.  The default value is $HOME/diary.                                   ",{}],["|",{"inverse":true}],["  4 /root/",{"fg":3,"bold":true}],["            ",{}]],"4":[["   ",{}],["+",{"fg":2,"bold":true}],["FirstRun(void)  ",{}],["|",{"inverse":true}],[" 88 ",{"fg":3,"bold":true}],["  let g:calendar_diary=$HOME.'/.vim/diary'                                                                      ",{}],["|",{"inverse":true}],["  5 ",{"fg":3,"bold":true}],["▸ .asciinema/",{"fg":6,"bold":true}],["     ",{}]],"5":[["   ",{}],["+",{"fg":2,"bold":true}],["FirstRun2(void) ",{}],["|",{"inverse":true}],[" 89 ",{"fg":3,"bold":true}],["                                                                                                                ",{}],["|",{"inverse":true}],["  6 ",{"fg":3,"bold":true}],["▸ .cache/",{"fg":6,"bold":true}],["         ",{}]],"6":[["                    ",{}],["|",{"inverse":true}],[" 90 ",{"fg":3,"bold":true}],["                                                                                                                ",{}],["|",{"inverse":true}],["  7 ",{"fg":3,"bold":true}],["▸ .config/",{"fg":6,"bold":true}],["        ",{}]],"7":[["▼",{"fg":3,"bold":true}],[" Last",{"fg":5,"bold":true}],[" : ",{}],["struct",{"fg":2,"bold":true}],["     ",{}],["|",{"inverse":true}],[" 91 ",{"fg":3,"bold":true}],["                                                *g:calendar_navi*                                               ",{}],["|",{"inverse":true}],["  8 ",{"fg":3,"bold":true}],["▸ .dbus/",{"fg":6,"bold":true}],["          ",{}]],"8":[["    [functions]",{"fg":6,"bold":true}],["     ",{}],["|",{"inverse":true}],[" 92 ",{"fg":3,"bold":true}],["To control the calendar navigator, set this variable.  Acceptable values are                                    ",{}],["|",{"inverse":true}],["  9 ",{"fg":3,"bold":true}],["▸ .gnupg/",{"fg":6,"bold":true}],["         ",{}]],"9":[["   ",{}],["+",{"fg":2,"bold":true}],["FirstRun(void)  ",{}],["|",{"inverse":true}],[" 93 ",{"fg":3,"bold":true}],["'top', 'bottom', or 'both'. >                                                                                   ",{}],["|",{"inverse":true}],[" 10 ",{"fg":3,"bold":true}],["▸ .kde/",{"fg":6,"bold":true}],["           ",{}]],"10":[["   ",{}],["+",{"fg":2,"bold":true}],["FirstRun2(void) ",{}],["|",{"inverse":true}],[" 94 ",{"fg":3,"bold":true}],["  let g:calendar_navi = ''                                                                                      ",{}],["|",{"inverse":true}],[" 11 ",{"fg":3,"bold":true}],["▸ .local/",{"fg":6,"bold":true}],["         ",{}]],"11":[["   ",{}],["+",{"fg":2,"bold":true}],["~Last()         ",{}],["|",{"inverse":true}],[" 95 ",{"fg":3,"bold":true}],["<                                                                                                               ",{}],["|",{"inverse":true}],[" 12 ",{"fg":3,"bold":true}],["▸ .pki/",{"fg":6,"bold":true}],["           ",{}]],"12":[["   ",{}],["+",{"fg":2,"bold":true}],["SecondRun(void) ",{}],["|",{"inverse":true}],[" 96 ",{"fg":3,"bold":true}],["                                                                                                                ",{}],["|",{"inverse":true}],[" 13 ",{"fg":3,"bold":true}],["▸ .ssh/",{"fg":6,"bold":true}],["           ",{}]],"13":[["   ",{}],["+",{"fg":2,"bold":true}],["SecondRun2(void)",{}],["|",{"inverse":true}],[" 97 ",{"fg":3,"bold":true}],["                                                *g:calendar_navi_label*                                         ",{}],["|",{"inverse":true}],[" 14 ",{"fg":3,"bold":true}],["▸ .vim/",{"fg":6,"bold":true}],["           ",{}]],"14":[["                    ",{}],["|",{"inverse":true}],[" 98 ",{"fg":3,"bold":true}],["To set the labels for the calendar navigator, for example to change the                                         ",{}],["|",{"inverse":true}],[" 15 ",{"fg":3,"bold":true}],["▸ diary/",{"fg":6,"bold":true}],["          ",{}]],"15":[["▼",{"fg":3,"bold":true}],[" Second",{"fg":5,"bold":true}],[" : ",{}],["struct",{"fg":2,"bold":true}],["   ",{}],["|",{"inverse":true}],[" 99 ",{"fg":3,"bold":true}],["language, use this variable.  Entries should be comma separated. >                                              ",{}],["|",{"inverse":true}],[" 16 ",{"fg":3,"bold":true}],["▸ temp/",{"fg":6,"bold":true}],["           ",{}]],"16":[["    [prototypes]",{"fg":6,"bold":true}],["    ",{}],["|",{"inverse":true}],["100 ",{"fg":3,"bold":true}],["  let g:calendar_navi_label = 'Prev,Today,Next'                                                                 ",{}],["|",{"inverse":true}],[" 17 ",{"fg":3,"bold":true}],["  .bash_history   ",{}]],"17":[["   ",{}],["+",{"fg":2,"bold":true}],["SecondRun(void) ",{}],["|",{"inverse":true}],["101 ",{"fg":3,"bold":true}],["<                                                                                                               ",{}],["|",{"inverse":true}],[" 18 ",{"fg":3,"bold":true}],["  .bash_logout    ",{}]],"18":[["   ",{}],["+",{"fg":2,"bold":true}],["SecondRun2(void)",{}],["|",{"inverse":true}],["102 ",{"fg":3,"bold":true}],["                                                                                                                ",{}],["|",{"inverse":true}],[" 19 ",{"fg":3,"bold":true}],["  .bash_profile   ",{"underline":true}]],"19":[["                    ",{}],["|",{"inverse":true}],["103 ",{"fg":3,"bold":true}],["                                                *g:calendar_erafmt*                                             ",{}],["|",{"inverse":true}],[" 20 ",{"fg":3,"bold":true}],["  .bashrc         ",{}]],"20":[["▼",{"fg":3,"bold":true}],[" ",{}],["functions",{"fg":6,"bold":true}],["         ",{}],["|",{"inverse":true}],["104 ",{"fg":3,"bold":true}],["To change the dating system, set the following variable.  Include the name of                                   ",{}],["|",{"inverse":true}],[" 21 ",{"fg":3,"bold":true}],["  .cshrc          ",{}]],"21":[["    main(int argc, c",{"underline":true}],["|",{"inverse":true}],["105 ",{"fg":3,"bold":true}],["the dating system and its offset from the Georgian calendar (A.D.).  For                                        ",{}],["|",{"inverse":true}],[" 22 ",{"fg":3,"bold":true}],["  .dmrc           ",{}]],"22":[["~                   ",{"fg":4,"bold":true}],["|",{"inverse":true}],["106 ",{"fg":3,"bold":true}],["example, to use the current Japanese era (Heisei), you would set: >                                             ",{}],["|",{"inverse":true}],[" 23 ",{"fg":3,"bold":true}],["  .esd_auth       ",{}]],"23":[["~                   ",{"fg":4,"bold":true}],["|",{"inverse":true}],["107 ",{"fg":3,"bold":true}],["  let g:calendar_erafmt = 'Heisei,-1988'                                                                        ",{}],["|",{"inverse":true}],[" 24 ",{"fg":3,"bold":true}],["  .gtkrc-2.0      ",{}]],"24":[["~                   ",{"fg":4,"bold":true}],["|",{"inverse":true}],["108 ",{"fg":3,"bold":true}],["<                                                                                                               ",{}],["|",{"inverse":true}],[" 25 ",{"fg":3,"bold":true}],["  .gtkrc-2.0-kde4 ",{}]],"25":[["~                   ",{"fg":4,"bold":true}],["|",{"inverse":true}],["109 ",{"fg":3,"bold":true}],["                                                                                                                ",{}],["|",{"inverse":true}],[" 26 ",{"fg":3,"bold":true}],["  .lesshst        ",{}]],"26":[["~                   ",{"fg":4,"bold":true}],["|",{"inverse":true}],["110 ",{"fg":3,"bold":true}],["                                                *g:calendar_mruler*                                             ",{}],["|",{"inverse":true}],[" 27 ",{"fg":3,"bold":true}],["  .tcshrc         ",{}]],"27":[["~                   ",{"fg":4,"bold":true}],["|",{"inverse":true}],["111 ",{"fg":3,"bold":true}],["To change the month names for the calendar headings, set this variable.  The                                    ",{}],["|",{"inverse":true}],[" 28 ",{"fg":3,"bold":true}],["  .viminfo        ",{}]],"28":[["~                   ",{"fg":4,"bold":true}],["|",{"inverse":true}],["112 ",{"fg":3,"bold":true}],["value is expected to be a comma-separated list of twelve values, starting with                                  ",{}],["|",{"inverse":true}],[" 29 ",{"fg":3,"bold":true}],["  .vimrc          ",{}]],"29":[["~                   ",{"fg":4,"bold":true}],["|",{"inverse":true}],["113 ",{"fg":3,"bold":true}],["Janurary: >                                                                                                     ",{}],["|",{"inverse":true}],[" 30 ",{"fg":3,"bold":true}],["  .xsession-errors",{}]],"30":[["~                   ",{"fg":4,"bold":true}],["|",{"inverse":true}],["114 ",{"fg":3,"bold":true}],["  let g:calendar_mruler = 'Jan,Feb,Mar,Apr,May,Jun,Jul,Aug,Sep,Oct,Nov,Dec'                                     ",{}],["|",{"inverse":true}],[" 31 ",{"fg":3,"bold":true}],["  anaconda-ks.cfg ",{}]],"31":[["~                   ",{"fg":4,"bold":true}],["|",{"inverse":true}],["115 ",{"fg":3,"bold":true}],["<                                                                                                               ",{}],["|",{"inverse":true}],[" 32 ",{"fg":3,"bold":true}],["  initial-setup-ks",{}]],"32":[["~                   ",{"fg":4,"bold":true}],["|",{"inverse":true}],["116 ",{"fg":3,"bold":true}],["                                                                                                                ",{}],["|",{"inverse":true}],[" 33 ",{"fg":3,"bold":true}],["  test.c          ",{}]],"33":[["~                   ",{"fg":4,"bold":true}],["|",{"inverse":true}],["117 ",{"fg":3,"bold":true}],["                                                *g:calendar_wruler*                                             ",{}],["|",{"inverse":true}],[" 34 ",{"fg":3,"bold":true}],["  test.cpp        ",{}]],"34":[["~                   ",{"fg":4,"bold":true}],["|",{"inverse":true}],["118 ",{"fg":3,"bold":true}],["To change the week names for the calendar headings, set this variable.  The                                     ",{}],["|",{"inverse":true}],[" 35 ",{"fg":3,"bold":true}],["  .test.cpp.swp   ",{}]],"35":[["~                   ",{"fg":4,"bold":true}],["|",{"inverse":true}],["119 ",{"fg":3,"bold":true}],["value is expected to be a space-separated list of seven values, starting with                                   ",{}],["|",{"inverse":true}],["~                     ",{"fg":4,"bold":true}]],"36":[["~                   ",{"fg":4,"bold":true}],["|",{"inverse":true}],["120 ",{"fg":3,"bold":true}],["Sunday: >                                                                                                       ",{}],["|",{"inverse":true}],["~                     ",{"fg":4,"bold":true}]],"37":[["~                   ",{"fg":4,"bold":true}],["|",{"inverse":true}],["121 ",{"fg":3,"bold":true}],["  let g:calendar_wruler = 'Su Mo Tu We Th Fr Sa'                                                                ",{}],["|",{"inverse":true}],["~                     ",{"fg":4,"bold":true}]],"38":[["~                   ",{"fg":4,"bold":true}],["|",{"inverse":true}],["122 ",{"fg":3,"bold":true}],["<                                                                                                               ",{}],["|",{"inverse":true}],["~                     ",{"fg":4,"bold":true}]],"39":[["~                   ",{"fg":4,"bold":true}],["|",{"inverse":true}],["123 ",{"fg":3,"bold":true}],["                                                                                                                ",{}],["|",{"inverse":true}],["~                     ",{"fg":4,"bold":true}]],"40":[["~                   ",{"fg":4,"bold":true}],["|",{"inverse":true}],["124 ",{"fg":3,"bold":true}],["                                                *g:calendar_monday*                                             ",{}],["|",{"inverse":true}],["~                     ",{"fg":4,"bold":true}]],"41":[["~                   ",{"fg":4,"bold":true}],["|",{"inverse":true}],["125 ",{"fg":3,"bold":true}],["To make the week start on Monday rather than Sunday, set this variable.  Note                                   ",{}],["|",{"inverse":true}],["~                     ",{"fg":4,"bold":true}]],"42":[["~                   ",{"fg":4,"bold":true}],["|",{"inverse":true}],["126 ",{"fg":3,"bold":true}],["that the value of |g:calendar_wruler| is not affected by this; it should                                        ",{}],["|",{"inverse":true}],["~                     ",{"fg":4,"bold":true}]],"43":[["~                   ",{"fg":4,"bold":true}],["|",{"inverse":true}],["127 ",{"fg":3,"bold":true}],["always begin with Sunday: >                                                                                     ",{}],["|",{"inverse":true}],["~                     ",{"fg":4,"bold":true}]],"44":[["~                   ",{"fg":4,"bold":true}],["|",{"inverse":true}],["128 ",{"fg":3,"bold":true}],["  let g:calendar_monday = 1                                                ",{"underline":true}],["                                     ",{}],["|",{"inverse":true}],["~                     ",{"fg":4,"bold":true}]],"47":[["                                                                                                                                                                ",{}]]},"cursor":{"x":100,"y":44}}],[0.024219,{"lines":{"44":[["~                   ",{"fg":4,"bold":true}],["|",{"inverse":true}],["128 ",{"fg":3,"bold":true}],["  let g:calendar_monday = 1                                                                                     ",{}],["|",{"inverse":true}],["~                     ",{"fg":4,"bold":true}]],"45":[["~                   ",{"fg":4,"bold":true}],["|",{"inverse":true}],["129 ",{"fg":3,"bold":true}],["<                                                                                                               ",{"underline":true}],["|",{"inverse":true}],["~                     ",{"fg":4,"bold":true}]],"46":[["[Name] test.cpp      ",{"inverse":true}],[" NORMAL ",{"bold":true}],[" ",{}],["calendar.txt ",{"bold":true}],["                                                        unix │ utf-8 │ text │  58% ",{}],[" LN 129",{"bold":true}],[":1  ",{}],[" ",{"bold":true,"inverse":true}],[" ~/…/calendar-vim/doc>",{"bold":true}]]},"cursor":{"x":25,"y":45,"visible":true}}],[0.015715,{"lines":{"0":[["\" Press <F1> for hel",{"fg":6,"bold":true}],["|",{"inverse":true}],[" 85 ",{"fg":3,"bold":true}],["                                                                                                                ",{}],["|",{"inverse":true}],["  1 ",{"fg":3,"bold":true}],["\" Press ? for help",{"fg":5,"bold":true}]],"1":[["                    ",{}],["|",{"inverse":true}],[" 86 ",{"fg":3,"bold":true}],["                                                *g:calendar_diary*                                              ",{}],["|",{"inverse":true}],["  2 ",{"fg":3,"bold":true}],["                  ",{}]],"2":[["▼",{"fg":3,"bold":true}],[" First",{"fg":5,"bold":true}],[" : ",{}],["struct",{"fg":2,"bold":true}],["    ",{}],["|",{"inverse":true}],[" 87 ",{"fg":3,"bold":true}],["Specify the directory for the diary files.  The default value is $HOME/diary.                                   ",{}],["|",{"inverse":true}],["  3 ",{"fg":3,"bold":true}],[".. (up a dir)",{"fg":6,"bold":true}],["     ",{}]],"3":[["    [prototypes]",{"fg":6,"bold":true}],["    ",{}],["|",{"inverse":true}],[" 88 ",{"fg":3,"bold":true}],["  let g:calendar_diary=$HOME.'/.vim/diary'                                                                      ",{}],["|",{"inverse":true}],["  4 /root/",{"fg":3,"bold":true}],["            ",{}]],"4":[["   ",{}],["+",{"fg":2,"bold":true}],["FirstRun(void)  ",{}],["|",{"inverse":true}],[" 89 ",{"fg":3,"bold":true}],["                                                                                                                ",{}],["|",{"inverse":true}],["  5 ",{"fg":3,"bold":true}],["▸ .asciinema/",{"fg":6,"bold":true}],["     ",{}]],"5":[["   ",{}],["+",{"fg":2,"bold":true}],["FirstRun2(void) ",{}],["|",{"inverse":true}],[" 90 ",{"fg":3,"bold":true}],["                                                                                                                ",{}],["|",{"inverse":true}],["  6 ",{"fg":3,"bold":true}],["▸ .cache/",{"fg":6,"bold":true}],["         ",{}]],"6":[["                    ",{}],["|",{"inverse":true}],[" 91 ",{"fg":3,"bold":true}],["                                                *g:calendar_navi*                                               ",{}],["|",{"inverse":true}],["  7 ",{"fg":3,"bold":true}],["▸ .config/",{"fg":6,"bold":true}],["        ",{}]],"7":[["▼",{"fg":3,"bold":true}],[" Last",{"fg":5,"bold":true}],[" : ",{}],["struct",{"fg":2,"bold":true}],["     ",{}],["|",{"inverse":true}],[" 92 ",{"fg":3,"bold":true}],["To control the calendar navigator, set this variable.  Acceptable values are                                    ",{}],["|",{"inverse":true}],["  8 ",{"fg":3,"bold":true}],["▸ .dbus/",{"fg":6,"bold":true}],["          ",{}]],"8":[["    [functions]",{"fg":6,"bold":true}],["     ",{}],["|",{"inverse":true}],[" 93 ",{"fg":3,"bold":true}],["'top', 'bottom', or 'both'. >                                                                                   ",{}],["|",{"inverse":true}],["  9 ",{"fg":3,"bold":true}],["▸ .gnupg/",{"fg":6,"bold":true}],["         ",{}]],"9":[["   ",{}],["+",{"fg":2,"bold":true}],["FirstRun(void)  ",{}],["|",{"inverse":true}],[" 94 ",{"fg":3,"bold":true}],["  let g:calendar_navi = ''                                                                                      ",{}],["|",{"inverse":true}],[" 10 ",{"fg":3,"bold":true}],["▸ .kde/",{"fg":6,"bold":true}],["           ",{}]],"10":[["   ",{}],["+",{"fg":2,"bold":true}],["FirstRun2(void) ",{}],["|",{"inverse":true}],[" 95 ",{"fg":3,"bold":true}],["<                                                                                                               ",{}],["|",{"inverse":true}],[" 11 ",{"fg":3,"bold":true}],["▸ .local/",{"fg":6,"bold":true}],["         ",{}]],"11":[["   ",{}],["+",{"fg":2,"bold":true}],["~Last()         ",{}],["|",{"inverse":true}],[" 96 ",{"fg":3,"bold":true}],["                                                                                                                ",{}],["|",{"inverse":true}],[" 12 ",{"fg":3,"bold":true}],["▸ .pki/",{"fg":6,"bold":true}],["           ",{}]],"12":[["   ",{}],["+",{"fg":2,"bold":true}],["SecondRun(void) ",{}],["|",{"inverse":true}],[" 97 ",{"fg":3,"bold":true}],["                                                *g:calendar_navi_label*                                         ",{}],["|",{"inverse":true}],[" 13 ",{"fg":3,"bold":true}],["▸ .ssh/",{"fg":6,"bold":true}],["           ",{}]],"13":[["   ",{}],["+",{"fg":2,"bold":true}],["SecondRun2(void)",{}],["|",{"inverse":true}],[" 98 ",{"fg":3,"bold":true}],["To set the labels for the calendar navigator, for example to change the                                         ",{}],["|",{"inverse":true}],[" 14 ",{"fg":3,"bold":true}],["▸ .vim/",{"fg":6,"bold":true}],["           ",{}]],"14":[["                    ",{}],["|",{"inverse":true}],[" 99 ",{"fg":3,"bold":true}],["language, use this variable.  Entries should be comma separated. >                                              ",{}],["|",{"inverse":true}],[" 15 ",{"fg":3,"bold":true}],["▸ diary/",{"fg":6,"bold":true}],["          ",{}]],"15":[["▼",{"fg":3,"bold":true}],[" Second",{"fg":5,"bold":true}],[" : ",{}],["struct",{"fg":2,"bold":true}],["   ",{}],["|",{"inverse":true}],["100 ",{"fg":3,"bold":true}],["  let g:calendar_navi_label = 'Prev,Today,Next'                                                                 ",{}],["|",{"inverse":true}],[" 16 ",{"fg":3,"bold":true}],["▸ temp/",{"fg":6,"bold":true}],["           ",{}]],"16":[["    [prototypes]",{"fg":6,"bold":true}],["    ",{}],["|",{"inverse":true}],["101 ",{"fg":3,"bold":true}],["<                                                                                                               ",{}],["|",{"inverse":true}],[" 17 ",{"fg":3,"bold":true}],["  .bash_history   ",{}]],"17":[["   ",{}],["+",{"fg":2,"bold":true}],["SecondRun(void) ",{}],["|",{"inverse":true}],["102 ",{"fg":3,"bold":true}],["                                                                                                                ",{}],["|",{"inverse":true}],[" 18 ",{"fg":3,"bold":true}],["  .bash_logout    ",{}]],"18":[["   ",{}],["+",{"fg":2,"bold":true}],["SecondRun2(void)",{}],["|",{"inverse":true}],["103 ",{"fg":3,"bold":true}],["                                                *g:calendar_erafmt*                                             ",{}],["|",{"inverse":true}],[" 19 ",{"fg":3,"bold":true}],["  .bash_profile   ",{"underline":true}]],"19":[["                    ",{}],["|",{"inverse":true}],["104 ",{"fg":3,"bold":true}],["To change the dating system, set the following variable.  Include the name of                                   ",{}],["|",{"inverse":true}],[" 20 ",{"fg":3,"bold":true}],["  .bashrc         ",{}]],"20":[["▼",{"fg":3,"bold":true}],[" ",{}],["functions",{"fg":6,"bold":true}],["         ",{}],["|",{"inverse":true}],["105 ",{"fg":3,"bold":true}],["the dating system and its offset from the Georgian calendar (A.D.).  For                                        ",{}],["|",{"inverse":true}],[" 21 ",{"fg":3,"bold":true}],["  .cshrc          ",{}]],"21":[["    main(int argc, c",{"underline":true}],["|",{"inverse":true}],["106 ",{"fg":3,"bold":true}],["example, to use the current Japanese era (Heisei), you would set: >                                             ",{}],["|",{"inverse":true}],[" 22 ",{"fg":3,"bold":true}],["  .dmrc           ",{}]],"22":[["~                   ",{"fg":4,"bold":true}],["|",{"inverse":true}],["107 ",{"fg":3,"bold":true}],["  let g:calendar_erafmt = 'Heisei,-1988'                                                                        ",{}],["|",{"inverse":true}],[" 23 ",{"fg":3,"bold":true}],["  .esd_auth       ",{}]],"23":[["~                   ",{"fg":4,"bold":true}],["|",{"inverse":true}],["108 ",{"fg":3,"bold":true}],["<                                                                                                               ",{}],["|",{"inverse":true}],[" 24 ",{"fg":3,"bold":true}],["  .gtkrc-2.0      ",{}]],"24":[["~                   ",{"fg":4,"bold":true}],["|",{"inverse":true}],["109 ",{"fg":3,"bold":true}],["                                                                                                                ",{}],["|",{"inverse":true}],[" 25 ",{"fg":3,"bold":true}],["  .gtkrc-2.0-kde4 ",{}]],"25":[["~                   ",{"fg":4,"bold":true}],["|",{"inverse":true}],["110 ",{"fg":3,"bold":true}],["                                                *g:calendar_mruler*                                             ",{}],["|",{"inverse":true}],[" 26 ",{"fg":3,"bold":true}],["  .lesshst        ",{}]],"26":[["~                   ",{"fg":4,"bold":true}],["|",{"inverse":true}],["111 ",{"fg":3,"bold":true}],["To change the month names for the calendar headings, set this variable.  The                                    ",{}],["|",{"inverse":true}],[" 27 ",{"fg":3,"bold":true}],["  .tcshrc         ",{}]],"27":[["~                   ",{"fg":4,"bold":true}],["|",{"inverse":true}],["112 ",{"fg":3,"bold":true}],["value is expected to be a comma-separated list of twelve values, starting with                                  ",{}],["|",{"inverse":true}],[" 28 ",{"fg":3,"bold":true}],["  .viminfo        ",{}]],"28":[["~                   ",{"fg":4,"bold":true}],["|",{"inverse":true}],["113 ",{"fg":3,"bold":true}],["Janurary: >                                                                                                     ",{}],["|",{"inverse":true}],[" 29 ",{"fg":3,"bold":true}],["  .vimrc          ",{}]],"29":[["~                   ",{"fg":4,"bold":true}],["|",{"inverse":true}],["114 ",{"fg":3,"bold":true}],["  let g:calendar_mruler = 'Jan,Feb,Mar,Apr,May,Jun,Jul,Aug,Sep,Oct,Nov,Dec'                                     ",{}],["|",{"inverse":true}],[" 30 ",{"fg":3,"bold":true}],["  .xsession-errors",{}]],"30":[["~                   ",{"fg":4,"bold":true}],["|",{"inverse":true}],["115 ",{"fg":3,"bold":true}],["<                                                                                                               ",{}],["|",{"inverse":true}],[" 31 ",{"fg":3,"bold":true}],["  anaconda-ks.cfg ",{}]],"31":[["~                   ",{"fg":4,"bold":true}],["|",{"inverse":true}],["116 ",{"fg":3,"bold":true}],["                                                                                                                ",{}],["|",{"inverse":true}],[" 32 ",{"fg":3,"bold":true}],["  initial-setup-ks",{}]],"32":[["~                   ",{"fg":4,"bold":true}],["|",{"inverse":true}],["117 ",{"fg":3,"bold":true}],["                                                *g:calendar_wruler*                                             ",{}],["|",{"inverse":true}],[" 33 ",{"fg":3,"bold":true}],["  test.c          ",{}]],"33":[["~                   ",{"fg":4,"bold":true}],["|",{"inverse":true}],["118 ",{"fg":3,"bold":true}],["To change the week names for the calendar headings, set this variable.  The                                     ",{}],["|",{"inverse":true}],[" 34 ",{"fg":3,"bold":true}],["  test.cpp        ",{}]],"34":[["~                   ",{"fg":4,"bold":true}],["|",{"inverse":true}],["119 ",{"fg":3,"bold":true}],["value is expected to be a space-separated list of seven values, starting with                                   ",{}],["|",{"inverse":true}],[" 35 ",{"fg":3,"bold":true}],["  .test.cpp.swp   ",{}]],"35":[["~                   ",{"fg":4,"bold":true}],["|",{"inverse":true}],["120 ",{"fg":3,"bold":true}],["Sunday: >                                                                                                       ",{}],["|",{"inverse":true}],["~                     ",{"fg":4,"bold":true}]],"36":[["~                   ",{"fg":4,"bold":true}],["|",{"inverse":true}],["121 ",{"fg":3,"bold":true}],["  let g:calendar_wruler = 'Su Mo Tu We Th Fr Sa'                                                                ",{}],["|",{"inverse":true}],["~                     ",{"fg":4,"bold":true}]],"37":[["~                   ",{"fg":4,"bold":true}],["|",{"inverse":true}],["122 ",{"fg":3,"bold":true}],["<                                                                                                               ",{}],["|",{"inverse":true}],["~                     ",{"fg":4,"bold":true}]],"38":[["~                   ",{"fg":4,"bold":true}],["|",{"inverse":true}],["123 ",{"fg":3,"bold":true}],["                                                                                                                ",{}],["|",{"inverse":true}],["~                     ",{"fg":4,"bold":true}]],"39":[["~                   ",{"fg":4,"bold":true}],["|",{"inverse":true}],["124 ",{"fg":3,"bold":true}],["                                                *g:calendar_monday*                                             ",{}],["|",{"inverse":true}],["~                     ",{"fg":4,"bold":true}]],"40":[["~                   ",{"fg":4,"bold":true}],["|",{"inverse":true}],["125 ",{"fg":3,"bold":true}],["To make the week start on Monday rather than Sunday, set this variable.  Note                                   ",{}],["|",{"inverse":true}],["~                     ",{"fg":4,"bold":true}]],"41":[["~                   ",{"fg":4,"bold":true}],["|",{"inverse":true}],["126 ",{"fg":3,"bold":true}],["that the value of |g:calendar_wruler| is not affected by this; it should                                        ",{}],["|",{"inverse":true}],["~                     ",{"fg":4,"bold":true}]],"42":[["~                   ",{"fg":4,"bold":true}],["|",{"inverse":true}],["127 ",{"fg":3,"bold":true}],["always begin with Sunday: >                                                                                     ",{}],["|",{"inverse":true}],["~                     ",{"fg":4,"bold":true}]],"43":[["~                   ",{"fg":4,"bold":true}],["|",{"inverse":true}],["128 ",{"fg":3,"bold":true}],["  let g:calendar_monday = 1                                                                                     ",{}],["|",{"inverse":true}],["~                     ",{"fg":4,"bold":true}]],"44":[["~                   ",{"fg":4,"bold":true}],["|",{"inverse":true}],["129 ",{"fg":3,"bold":true}],["<                                                                                                               ",{}],["|",{"inverse":true}],["~                     ",{"fg":4,"bold":true}]],"45":[["~                   ",{"fg":4,"bold":true}],["|",{"inverse":true}],["130 ",{"fg":3,"bold":true}],["                                                                                                                ",{"underline":true}],["|",{"inverse":true}],["~                     ",{"fg":4,"bold":true}]],"46":[["[Name] test.cpp      ",{"inverse":true}],[" NORMAL ",{"bold":true}],[" ",{}],["calendar.txt ",{"bold":true}],["                                                        unix │ utf-8 │ text │  59% ",{}],[" LN 130",{"bold":true}],[":1  ",{}],[" ",{"bold":true,"inverse":true}],[" ~/…/calendar-vim/doc>",{"bold":true}]]}}],[0.04003,{"lines":{"0":[["\" Press <F1> for hel",{"fg":6,"bold":true}],["|",{"inverse":true}],[" 86 ",{"fg":3,"bold":true}],["                                                *g:calendar_diary*                                              ",{}],["|",{"inverse":true}],["  1 ",{"fg":3,"bold":true}],["\" Press ? for help",{"fg":5,"bold":true}]],"1":[["                    ",{}],["|",{"inverse":true}],[" 87 ",{"fg":3,"bold":true}],["Specify the directory for the diary files.  The default value is $HOME/diary.                                   ",{}],["|",{"inverse":true}],["  2 ",{"fg":3,"bold":true}],["                  ",{}]],"2":[["▼",{"fg":3,"bold":true}],[" First",{"fg":5,"bold":true}],[" : ",{}],["struct",{"fg":2,"bold":true}],["    ",{}],["|",{"inverse":true}],[" 88 ",{"fg":3,"bold":true}],["  let g:calendar_diary=$HOME.'/.vim/diary'                                                                      ",{}],["|",{"inverse":true}],["  3 ",{"fg":3,"bold":true}],[".. (up a dir)",{"fg":6,"bold":true}],["     ",{}]],"3":[["    [prototypes]",{"fg":6,"bold":true}],["    ",{}],["|",{"inverse":true}],[" 89 ",{"fg":3,"bold":true}],["                                                                                                                ",{}],["|",{"inverse":true}],["  4 /root/",{"fg":3,"bold":true}],["            ",{}]],"4":[["   ",{}],["+",{"fg":2,"bold":true}],["FirstRun(void)  ",{}],["|",{"inverse":true}],[" 90 ",{"fg":3,"bold":true}],["                                                                                                                ",{}],["|",{"inverse":true}],["  5 ",{"fg":3,"bold":true}],["▸ .asciinema/",{"fg":6,"bold":true}],["     ",{}]],"5":[["   ",{}],["+",{"fg":2,"bold":true}],["FirstRun2(void) ",{}],["|",{"inverse":true}],[" 91 ",{"fg":3,"bold":true}],["                                                *g:calendar_navi*                                               ",{}],["|",{"inverse":true}],["  6 ",{"fg":3,"bold":true}],["▸ .cache/",{"fg":6,"bold":true}],["         ",{}]],"6":[["                    ",{}],["|",{"inverse":true}],[" 92 ",{"fg":3,"bold":true}],["To control the calendar navigator, set this variable.  Acceptable values are                                    ",{}],["|",{"inverse":true}],["  7 ",{"fg":3,"bold":true}],["▸ .config/",{"fg":6,"bold":true}],["        ",{}]],"7":[["▼",{"fg":3,"bold":true}],[" Last",{"fg":5,"bold":true}],[" : ",{}],["struct",{"fg":2,"bold":true}],["     ",{}],["|",{"inverse":true}],[" 93 ",{"fg":3,"bold":true}],["To control the calendar navigator, set this variable.  Acceptable values are                                    ",{}],["|",{"inverse":true}],["  8 ",{"fg":3,"bold":true}],["▸ .dbus/",{"fg":6,"bold":true}],["          ",{}]]},"cursor":{"y":7,"visible":false}}],[0.01665,{"lines":{"7":[["▼",{"fg":3,"bold":true}],[" Last",{"fg":5,"bold":true}],[" : ",{}],["struct",{"fg":2,"bold":true}],["     ",{}],["|",{"inverse":true}],[" 93 ",{"fg":3,"bold":true}],["'top', 'bottom', or 'both'. >                                                                                   ",{}],["|",{"inverse":true}],["  8 ",{"fg":3,"bold":true}],["▸ .dbus/",{"fg":6,"bold":true}],["          ",{}]],"8":[["    [functions]",{"fg":6,"bold":true}],["     ",{}],["|",{"inverse":true}],[" 94 ",{"fg":3,"bold":true}],["  let g:calendar_navi = ''                                                                                      ",{}],["|",{"inverse":true}],["  9 ",{"fg":3,"bold":true}],["▸ .gnupg/",{"fg":6,"bold":true}],["         ",{}]],"9":[["   ",{}],["+",{"fg":2,"bold":true}],["FirstRun(void)  ",{}],["|",{"inverse":true}],[" 95 ",{"fg":3,"bold":true}],["<                                                                                                               ",{}],["|",{"inverse":true}],[" 10 ",{"fg":3,"bold":true}],["▸ .kde/",{"fg":6,"bold":true}],["           ",{}]],"10":[["   ",{}],["+",{"fg":2,"bold":true}],["FirstRun2(void) ",{}],["|",{"inverse":true}],[" 96 ",{"fg":3,"bold":true}],["                                                                                                                ",{}],["|",{"inverse":true}],[" 11 ",{"fg":3,"bold":true}],["▸ .local/",{"fg":6,"bold":true}],["         ",{}]],"11":[["   ",{}],["+",{"fg":2,"bold":true}],["~Last()         ",{}],["|",{"inverse":true}],[" 97 ",{"fg":3,"bold":true}],["                                                *g:calendar_navi_label*                                         ",{}],["|",{"inverse":true}],[" 12 ",{"fg":3,"bold":true}],["▸ .pki/",{"fg":6,"bold":true}],["           ",{}]],"12":[["   ",{}],["+",{"fg":2,"bold":true}],["SecondRun(void) ",{}],["|",{"inverse":true}],[" 98 ",{"fg":3,"bold":true}],["To set the labels for the calendar navigator, for example to change the                                         ",{}],["|",{"inverse":true}],[" 13 ",{"fg":3,"bold":true}],["▸ .ssh/",{"fg":6,"bold":true}],["           ",{}]],"13":[["   ",{}],["+",{"fg":2,"bold":true}],["SecondRun2(void)",{}],["|",{"inverse":true}],[" 99 ",{"fg":3,"bold":true}],["language, use this variable.  Entries should be comma separated. >                                              ",{}],["|",{"inverse":true}],[" 14 ",{"fg":3,"bold":true}],["▸ .vim/",{"fg":6,"bold":true}],["           ",{}]],"14":[["                    ",{}],["|",{"inverse":true}],["100 ",{"fg":3,"bold":true}],["  let g:calendar_navi_label = 'Prev,Today,Next'                                                                 ",{}],["|",{"inverse":true}],[" 15 ",{"fg":3,"bold":true}],["▸ diary/",{"fg":6,"bold":true}],["          ",{}]],"15":[["▼",{"fg":3,"bold":true}],[" Second",{"fg":5,"bold":true}],[" : ",{}],["struct",{"fg":2,"bold":true}],["   ",{}],["|",{"inverse":true}],["101 ",{"fg":3,"bold":true}],["<                                                                                                               ",{}],["|",{"inverse":true}],[" 16 ",{"fg":3,"bold":true}],["▸ temp/",{"fg":6,"bold":true}],["           ",{}]],"16":[["    [prototypes]",{"fg":6,"bold":true}],["    ",{}],["|",{"inverse":true}],["102 ",{"fg":3,"bold":true}],["                                                                                                                ",{}],["|",{"inverse":true}],[" 17 ",{"fg":3,"bold":true}],["  .bash_history   ",{}]],"17":[["   ",{}],["+",{"fg":2,"bold":true}],["SecondRun(void) ",{}],["|",{"inverse":true}],["103 ",{"fg":3,"bold":true}],["                                                *g:calendar_erafmt*                                             ",{}],["|",{"inverse":true}],[" 18 ",{"fg":3,"bold":true}],["  .bash_logout    ",{}]],"18":[["   ",{}],["+",{"fg":2,"bold":true}],["SecondRun2(void)",{}],["|",{"inverse":true}],["104 ",{"fg":3,"bold":true}],["To change the dating system, set the following variable.  Include the name of                                   ",{}],["|",{"inverse":true}],[" 19 ",{"fg":3,"bold":true}],["  .bash_profile   ",{"underline":true}]],"19":[["                    ",{}],["|",{"inverse":true}],["105 ",{"fg":3,"bold":true}],["the dating system and its offset from the Georgian calendar (A.D.).  For                                        ",{}],["|",{"inverse":true}],[" 20 ",{"fg":3,"bold":true}],["  .bashrc         ",{}]],"20":[["▼",{"fg":3,"bold":true}],[" ",{}],["functions",{"fg":6,"bold":true}],["         ",{}],["|",{"inverse":true}],["106 ",{"fg":3,"bold":true}],["example, to use the current Japanese era (Heisei), you would set: >                                             ",{}],["|",{"inverse":true}],[" 21 ",{"fg":3,"bold":true}],["  .cshrc          ",{}]],"21":[["    main(int argc, c",{"underline":true}],["|",{"inverse":true}],["107 ",{"fg":3,"bold":true}],["  let g:calendar_erafmt = 'Heisei,-1988'                                                                        ",{}],["|",{"inverse":true}],[" 22 ",{"fg":3,"bold":true}],["  .dmrc           ",{}]],"22":[["~                   ",{"fg":4,"bold":true}],["|",{"inverse":true}],["108 ",{"fg":3,"bold":true}],["<                                                                                                               ",{}],["|",{"inverse":true}],[" 23 ",{"fg":3,"bold":true}],["  .esd_auth       ",{}]],"23":[["~                   ",{"fg":4,"bold":true}],["|",{"inverse":true}],["109 ",{"fg":3,"bold":true}],["                                                                                                                ",{}],["|",{"inverse":true}],[" 24 ",{"fg":3,"bold":true}],["  .gtkrc-2.0      ",{}]],"24":[["~                   ",{"fg":4,"bold":true}],["|",{"inverse":true}],["110 ",{"fg":3,"bold":true}],["                                                *g:calendar_mruler*                                             ",{}],["|",{"inverse":true}],[" 25 ",{"fg":3,"bold":true}],["  .gtkrc-2.0-kde4 ",{}]],"25":[["~                   ",{"fg":4,"bold":true}],["|",{"inverse":true}],["111 ",{"fg":3,"bold":true}],["To change the month names for the calendar headings, set this variable.  The                                    ",{}],["|",{"inverse":true}],[" 26 ",{"fg":3,"bold":true}],["  .lesshst        ",{}]],"26":[["~                   ",{"fg":4,"bold":true}],["|",{"inverse":true}],["112 ",{"fg":3,"bold":true}],["value is expected to be a comma-separated list of twelve values, starting with                                  ",{}],["|",{"inverse":true}],[" 27 ",{"fg":3,"bold":true}],["  .tcshrc         ",{}]],"27":[["~                   ",{"fg":4,"bold":true}],["|",{"inverse":true}],["113 ",{"fg":3,"bold":true}],["Janurary: >                                                                                                     ",{}],["|",{"inverse":true}],[" 28 ",{"fg":3,"bold":true}],["  .viminfo        ",{}]],"28":[["~                   ",{"fg":4,"bold":true}],["|",{"inverse":true}],["114 ",{"fg":3,"bold":true}],["  let g:calendar_mruler = 'Jan,Feb,Mar,Apr,May,Jun,Jul,Aug,Sep,Oct,Nov,Dec'                                     ",{}],["|",{"inverse":true}],[" 29 ",{"fg":3,"bold":true}],["  .vimrc          ",{}]],"29":[["~                   ",{"fg":4,"bold":true}],["|",{"inverse":true}],["115 ",{"fg":3,"bold":true}],["<                                                                                                               ",{}],["|",{"inverse":true}],[" 30 ",{"fg":3,"bold":true}],["  .xsession-errors",{}]],"30":[["~                   ",{"fg":4,"bold":true}],["|",{"inverse":true}],["116 ",{"fg":3,"bold":true}],["                                                                                                                ",{}],["|",{"inverse":true}],[" 31 ",{"fg":3,"bold":true}],["  anaconda-ks.cfg ",{}]],"31":[["~                   ",{"fg":4,"bold":true}],["|",{"inverse":true}],["117 ",{"fg":3,"bold":true}],["                                                *g:calendar_wruler*                                             ",{}],["|",{"inverse":true}],[" 32 ",{"fg":3,"bold":true}],["  initial-setup-ks",{}]],"32":[["~                   ",{"fg":4,"bold":true}],["|",{"inverse":true}],["118 ",{"fg":3,"bold":true}],["To change the week names for the calendar headings, set this variable.  The                                     ",{}],["|",{"inverse":true}],[" 33 ",{"fg":3,"bold":true}],["  test.c          ",{}]],"33":[["~                   ",{"fg":4,"bold":true}],["|",{"inverse":true}],["119 ",{"fg":3,"bold":true}],["value is expected to be a space-separated list of seven values, starting with                                   ",{}],["|",{"inverse":true}],[" 34 ",{"fg":3,"bold":true}],["  test.cpp        ",{}]],"34":[["~                   ",{"fg":4,"bold":true}],["|",{"inverse":true}],["120 ",{"fg":3,"bold":true}],["Sunday: >                                                                                                       ",{}],["|",{"inverse":true}],[" 35 ",{"fg":3,"bold":true}],["  .test.cpp.swp   ",{}]],"35":[["~                   ",{"fg":4,"bold":true}],["|",{"inverse":true}],["121 ",{"fg":3,"bold":true}],["  let g:calendar_wruler = 'Su Mo Tu We Th Fr Sa'                                                                ",{}],["|",{"inverse":true}],["~                     ",{"fg":4,"bold":true}]],"36":[["~                   ",{"fg":4,"bold":true}],["|",{"inverse":true}],["122 ",{"fg":3,"bold":true}],["<                                                                                                               ",{}],["|",{"inverse":true}],["~                     ",{"fg":4,"bold":true}]],"37":[["~                   ",{"fg":4,"bold":true}],["|",{"inverse":true}],["123 ",{"fg":3,"bold":true}],["                                                                                                                ",{}],["|",{"inverse":true}],["~                     ",{"fg":4,"bold":true}]],"38":[["~                   ",{"fg":4,"bold":true}],["|",{"inverse":true}],["124 ",{"fg":3,"bold":true}],["                                                *g:calendar_monday*                                             ",{}],["|",{"inverse":true}],["~                     ",{"fg":4,"bold":true}]],"39":[["~                   ",{"fg":4,"bold":true}],["|",{"inverse":true}],["125 ",{"fg":3,"bold":true}],["To make the week start on Monday rather than Sunday, set this variable.  Note                                   ",{}],["|",{"inverse":true}],["~                     ",{"fg":4,"bold":true}]],"40":[["~                   ",{"fg":4,"bold":true}],["|",{"inverse":true}],["126 ",{"fg":3,"bold":true}],["that the value of |g:calendar_wruler| is not affected by this; it should                                        ",{}],["|",{"inverse":true}],["~                     ",{"fg":4,"bold":true}]],"41":[["~                   ",{"fg":4,"bold":true}],["|",{"inverse":true}],["127 ",{"fg":3,"bold":true}],["always begin with Sunday: >                                                                                     ",{}],["|",{"inverse":true}],["~                     ",{"fg":4,"bold":true}]],"42":[["~                   ",{"fg":4,"bold":true}],["|",{"inverse":true}],["128 ",{"fg":3,"bold":true}],["  let g:calendar_monday = 1                                                                                     ",{}],["|",{"inverse":true}],["~                     ",{"fg":4,"bold":true}]],"43":[["~                   ",{"fg":4,"bold":true}],["|",{"inverse":true}],["129 ",{"fg":3,"bold":true}],["<                                                                                                               ",{}],["|",{"inverse":true}],["~                     ",{"fg":4,"bold":true}]],"44":[["~                   ",{"fg":4,"bold":true}],["|",{"inverse":true}],["130 ",{"fg":3,"bold":true}],["                                                                                                                ",{}],["|",{"inverse":true}],["~                     ",{"fg":4,"bold":true}]],"45":[["~                   ",{"fg":4,"bold":true}],["|",{"inverse":true}],["131 ",{"fg":3,"bold":true}],["                                                *g:calendar_weeknm*                                             ",{"underline":true}],["|",{"inverse":true}],["~                     ",{"fg":4,"bold":true}]],"46":[["[Name] test.cpp      ",{"inverse":true}],[" NORMAL ",{"bold":true}],[" ",{}],["calendar.txt ",{"bold":true}],["                                                        unix │ utf-8 │ text │  59% ",{}],[" LN 131",{"bold":true}],[":1  ",{}],[" ",{"bold":true,"inverse":true}],[" ~/…/calendar-vim/doc>",{"bold":true}]],"47":[["                                                                                                                                                     j          ",{}]]},"cursor":{"y":45}}],[0.009611000000000001,{"lines":{"0":[["\" Press <F1> for hel",{"fg":6,"bold":true}],["|",{"inverse":true}],[" 87 ",{"fg":3,"bold":true}],["Specify the directory for the diary files.  The default value is $HOME/diary.                                   ",{}],["|",{"inverse":true}],["  1 ",{"fg":3,"bold":true}],["\" Press ? for help",{"fg":5,"bold":true}]],"1":[["                    ",{}],["|",{"inverse":true}],[" 88 ",{"fg":3,"bold":true}],["  let g:calendar_diary=$HOME.'/.vim/diary'                                                                      ",{}],["|",{"inverse":true}],["  2 ",{"fg":3,"bold":true}],["                  ",{}]],"2":[["▼",{"fg":3,"bold":true}],[" First",{"fg":5,"bold":true}],[" : ",{}],["struct",{"fg":2,"bold":true}],["    ",{}],["|",{"inverse":true}],[" 89 ",{"fg":3,"bold":true}],["                                                                                                                ",{}],["|",{"inverse":true}],["  3 ",{"fg":3,"bold":true}],[".. (up a dir)",{"fg":6,"bold":true}],["     ",{}]],"3":[["    [prototypes]",{"fg":6,"bold":true}],["    ",{}],["|",{"inverse":true}],[" 90 ",{"fg":3,"bold":true}],["                                                                                                                ",{}],["|",{"inverse":true}],["  4 /root/",{"fg":3,"bold":true}],["            ",{}]],"4":[["   ",{}],["+",{"fg":2,"bold":true}],["FirstRun(void)  ",{}],["|",{"inverse":true}],[" 91 ",{"fg":3,"bold":true}],["                                                *g:calendar_navi*                                               ",{}],["|",{"inverse":true}],["  5 ",{"fg":3,"bold":true}],["▸ .asciinema/",{"fg":6,"bold":true}],["     ",{}]],"5":[["   ",{}],["+",{"fg":2,"bold":true}],["FirstRun2(void) ",{}],["|",{"inverse":true}],[" 92 ",{"fg":3,"bold":true}],["To control the calendar navigator, set this variable.  Acceptable values are                                    ",{}],["|",{"inverse":true}],["  6 ",{"fg":3,"bold":true}],["▸ .cache/",{"fg":6,"bold":true}],["         ",{}]],"6":[["                    ",{}],["|",{"inverse":true}],[" 93 ",{"fg":3,"bold":true}],["'top', 'bottom', or 'both'. >                                                                                   ",{}],["|",{"inverse":true}],["  7 ",{"fg":3,"bold":true}],["▸ .config/",{"fg":6,"bold":true}],["        ",{}]],"7":[["▼",{"fg":3,"bold":true}],[" Last",{"fg":5,"bold":true}],[" : ",{}],["struct",{"fg":2,"bold":true}],["     ",{}],["|",{"inverse":true}],[" 94 ",{"fg":3,"bold":true}],["  let g:calendar_navi = ''                                                                                      ",{}],["|",{"inverse":true}],["  8 ",{"fg":3,"bold":true}],["▸ .dbus/",{"fg":6,"bold":true}],["          ",{}]],"8":[["    [functions]",{"fg":6,"bold":true}],["     ",{}],["|",{"inverse":true}],[" 95 ",{"fg":3,"bold":true}],["<                                                                                                               ",{}],["|",{"inverse":true}],["  9 ",{"fg":3,"bold":true}],["▸ .gnupg/",{"fg":6,"bold":true}],["         ",{}]],"9":[["   ",{}],["+",{"fg":2,"bold":true}],["FirstRun(void)  ",{}],["|",{"inverse":true}],[" 96 ",{"fg":3,"bold":true}],["                                                                                                                ",{}],["|",{"inverse":true}],[" 10 ",{"fg":3,"bold":true}],["▸ .kde/",{"fg":6,"bold":true}],["           ",{}]],"10":[["   ",{}],["+",{"fg":2,"bold":true}],["FirstRun2(void) ",{}],["|",{"inverse":true}],[" 97 ",{"fg":3,"bold":true}],["                                                *g:calendar_navi_label*                                         ",{}],["|",{"inverse":true}],[" 11 ",{"fg":3,"bold":true}],["▸ .local/",{"fg":6,"bold":true}],["         ",{}]],"11":[["   ",{}],["+",{"fg":2,"bold":true}],["~Last()         ",{}],["|",{"inverse":true}],[" 98 ",{"fg":3,"bold":true}],["To set the labels for the calendar navigator, for example to change the                                         ",{}],["|",{"inverse":true}],[" 12 ",{"fg":3,"bold":true}],["▸ .pki/",{"fg":6,"bold":true}],["           ",{}]],"12":[["   ",{}],["+",{"fg":2,"bold":true}],["SecondRun(void) ",{}],["|",{"inverse":true}],[" 99 ",{"fg":3,"bold":true}],["language, use this variable.  Entries should be comma separated. >                                              ",{}],["|",{"inverse":true}],[" 13 ",{"fg":3,"bold":true}],["▸ .ssh/",{"fg":6,"bold":true}],["           ",{}]],"13":[["   ",{}],["+",{"fg":2,"bold":true}],["SecondRun2(void)",{}],["|",{"inverse":true}],["100 ",{"fg":3,"bold":true}],["  let g:calendar_navi_label = 'Prev,Today,Next'                                                                 ",{}],["|",{"inverse":true}],[" 14 ",{"fg":3,"bold":true}],["▸ .vim/",{"fg":6,"bold":true}],["           ",{}]],"14":[["                    ",{}],["|",{"inverse":true}],["101 ",{"fg":3,"bold":true}],["<                                                                                                               ",{}],["|",{"inverse":true}],[" 15 ",{"fg":3,"bold":true}],["▸ diary/",{"fg":6,"bold":true}],["          ",{}]],"15":[["▼",{"fg":3,"bold":true}],[" Second",{"fg":5,"bold":true}],[" : ",{}],["struct",{"fg":2,"bold":true}],["   ",{}],["|",{"inverse":true}],["102 ",{"fg":3,"bold":true}],["                                                                                                                ",{}],["|",{"inverse":true}],[" 16 ",{"fg":3,"bold":true}],["▸ temp/",{"fg":6,"bold":true}],["           ",{}]],"16":[["    [prototypes]",{"fg":6,"bold":true}],["    ",{}],["|",{"inverse":true}],["103 ",{"fg":3,"bold":true}],["                                                *g:calendar_erafmt*                                             ",{}],["|",{"inverse":true}],[" 17 ",{"fg":3,"bold":true}],["  .bash_history   ",{}]],"17":[["   ",{}],["+",{"fg":2,"bold":true}],["SecondRun(void) ",{}],["|",{"inverse":true}],["104 ",{"fg":3,"bold":true}],["To change the dating system, set the following variable.  Include the name of                                   ",{}],["|",{"inverse":true}],[" 18 ",{"fg":3,"bold":true}],["  .bash_logout    ",{}]],"18":[["   ",{}],["+",{"fg":2,"bold":true}],["SecondRun2(void)",{}],["|",{"inverse":true}],["105 ",{"fg":3,"bold":true}],["the dating system and its offset from the Georgian calendar (A.D.).  For                                        ",{}],["|",{"inverse":true}],[" 19 ",{"fg":3,"bold":true}],["  .bash_profile   ",{"underline":true}]],"19":[["                    ",{}],["|",{"inverse":true}],["106 ",{"fg":3,"bold":true}],["example, to use the current Japanese era (Heisei), you would set: >                                             ",{}],["|",{"inverse":true}],[" 20 ",{"fg":3,"bold":true}],["  .bashrc         ",{}]],"20":[["▼",{"fg":3,"bold":true}],[" ",{}],["functions",{"fg":6,"bold":true}],["         ",{}],["|",{"inverse":true}],["107 ",{"fg":3,"bold":true}],["  let g:calendar_erafmt = 'Heisei,-1988'                                                                        ",{}],["|",{"inverse":true}],[" 21 ",{"fg":3,"bold":true}],["  .cshrc          ",{}]],"21":[["    main(int argc, c",{"underline":true}],["|",{"inverse":true}],["108 ",{"fg":3,"bold":true}],["<                                                                                                               ",{}],["|",{"inverse":true}],[" 22 ",{"fg":3,"bold":true}],["  .dmrc           ",{}]],"22":[["~                   ",{"fg":4,"bold":true}],["|",{"inverse":true}],["109 ",{"fg":3,"bold":true}],["                                                                                                                ",{}],["|",{"inverse":true}],[" 23 ",{"fg":3,"bold":true}],["  .esd_auth       ",{}]],"23":[["~                   ",{"fg":4,"bold":true}],["|",{"inverse":true}],["110 ",{"fg":3,"bold":true}],["                                                *g:calendar_mruler*                                             ",{}],["|",{"inverse":true}],[" 24 ",{"fg":3,"bold":true}],["  .gtkrc-2.0      ",{}]],"24":[["~                   ",{"fg":4,"bold":true}],["|",{"inverse":true}],["111 ",{"fg":3,"bold":true}],["To change the month names for the calendar headings, set this variable.  The                                    ",{}],["|",{"inverse":true}],[" 25 ",{"fg":3,"bold":true}],["  .gtkrc-2.0-kde4 ",{}]],"25":[["~                   ",{"fg":4,"bold":true}],["|",{"inverse":true}],["112 ",{"fg":3,"bold":true}],["value is expected to be a comma-separated list of twelve values, starting with                                  ",{}],["|",{"inverse":true}],[" 26 ",{"fg":3,"bold":true}],["  .lesshst        ",{}]],"26":[["~                   ",{"fg":4,"bold":true}],["|",{"inverse":true}],["113 ",{"fg":3,"bold":true}],["Janurary: >                                                                                                     ",{}],["|",{"inverse":true}],[" 27 ",{"fg":3,"bold":true}],["  .tcshrc         ",{}]],"27":[["~                   ",{"fg":4,"bold":true}],["|",{"inverse":true}],["114 ",{"fg":3,"bold":true}],["  let g:calendar_mruler = 'Jan,Feb,Mar,Apr,May,Jun,Jul,Aug,Sep,Oct,Nov,Dec'                                     ",{}],["|",{"inverse":true}],[" 28 ",{"fg":3,"bold":true}],["  .viminfo        ",{}]],"28":[["~                   ",{"fg":4,"bold":true}],["|",{"inverse":true}],["115 ",{"fg":3,"bold":true}],["<                                                                                                               ",{}],["|",{"inverse":true}],[" 29 ",{"fg":3,"bold":true}],["  .vimrc          ",{}]],"29":[["~                   ",{"fg":4,"bold":true}],["|",{"inverse":true}],["116 ",{"fg":3,"bold":true}],["                                                                                                                ",{}],["|",{"inverse":true}],[" 30 ",{"fg":3,"bold":true}],["  .xsession-errors",{}]],"30":[["~                   ",{"fg":4,"bold":true}],["|",{"inverse":true}],["117 ",{"fg":3,"bold":true}],["                                                *g:calendar_wruler*                                             ",{}],["|",{"inverse":true}],[" 31 ",{"fg":3,"bold":true}],["  anaconda-ks.cfg ",{}]],"31":[["~                   ",{"fg":4,"bold":true}],["|",{"inverse":true}],["118 ",{"fg":3,"bold":true}],["To change the week names for the calendar headings, set this variable.  The                                     ",{}],["|",{"inverse":true}],[" 32 ",{"fg":3,"bold":true}],["  initial-setup-ks",{}]],"32":[["~                   ",{"fg":4,"bold":true}],["|",{"inverse":true}],["119 ",{"fg":3,"bold":true}],["value is expected to be a space-separated list of seven values, starting with                                   ",{}],["|",{"inverse":true}],[" 33 ",{"fg":3,"bold":true}],["  test.c          ",{}]],"33":[["~                   ",{"fg":4,"bold":true}],["|",{"inverse":true}],["120 ",{"fg":3,"bold":true}],["Sunday: >                                                                                                       ",{}],["|",{"inverse":true}],[" 34 ",{"fg":3,"bold":true}],["  test.cpp        ",{}]],"34":[["~                   ",{"fg":4,"bold":true}],["|",{"inverse":true}],["121 ",{"fg":3,"bold":true}],["  let g:calendar_wruler = 'Su Mo Tu We Th Fr Sa'                                                                ",{}],["|",{"inverse":true}],[" 35 ",{"fg":3,"bold":true}],["  .test.cpp.swp   ",{}]],"35":[["~                   ",{"fg":4,"bold":true}],["|",{"inverse":true}],["122 ",{"fg":3,"bold":true}],["<                                                                                                               ",{}],["|",{"inverse":true}],["~                     ",{"fg":4,"bold":true}]],"36":[["~                   ",{"fg":4,"bold":true}],["|",{"inverse":true}],["123 ",{"fg":3,"bold":true}],["                                                                                                                ",{}],["|",{"inverse":true}],["~                     ",{"fg":4,"bold":true}]],"37":[["~                   ",{"fg":4,"bold":true}],["|",{"inverse":true}],["124 ",{"fg":3,"bold":true}],["                                                *g:calendar_monday*                                             ",{}],["|",{"inverse":true}],["~                     ",{"fg":4,"bold":true}]],"38":[["~                   ",{"fg":4,"bold":true}],["|",{"inverse":true}],["125 ",{"fg":3,"bold":true}],["To make the week start on Monday rather than Sunday, set this variable.  Note                                   ",{}],["|",{"inverse":true}],["~                     ",{"fg":4,"bold":true}]],"39":[["~                   ",{"fg":4,"bold":true}],["|",{"inverse":true}],["126 ",{"fg":3,"bold":true}],["that the value of |g:calendar_wruler| is not affected by this; it should                                        ",{}],["|",{"inverse":true}],["~                     ",{"fg":4,"bold":true}]],"40":[["~                   ",{"fg":4,"bold":true}],["|",{"inverse":true}],["127 ",{"fg":3,"bold":true}],["always begin with Sunday: >                                                                                     ",{}],["|",{"inverse":true}],["~                     ",{"fg":4,"bold":true}]],"41":[["~                   ",{"fg":4,"bold":true}],["|",{"inverse":true}],["128 ",{"fg":3,"bold":true}],["  let g:calendar_monday = 1                                                                                     ",{}],["|",{"inverse":true}],["~                     ",{"fg":4,"bold":true}]],"42":[["~                   ",{"fg":4,"bold":true}],["|",{"inverse":true}],["129 ",{"fg":3,"bold":true}],["<                                                                                                               ",{}],["|",{"inverse":true}],["~                     ",{"fg":4,"bold":true}]],"43":[["~                   ",{"fg":4,"bold":true}],["|",{"inverse":true}],["130 ",{"fg":3,"bold":true}],["                                                                                                                ",{}],["|",{"inverse":true}],["~                     ",{"fg":4,"bold":true}]],"44":[["~                   ",{"fg":4,"bold":true}],["|",{"inverse":true}],["131 ",{"fg":3,"bold":true}],["                                                *g:calendar_weeknm*                                             ",{}],["|",{"inverse":true}],["~                     ",{"fg":4,"bold":true}]],"45":[["~                   ",{"fg":4,"bold":true}],["|",{"inverse":true}],["132 ",{"fg":3,"bold":true}],["To show the week number, set this variable.  There are four valid settings: >                                   ",{"underline":true}],["|",{"inverse":true}],["~                     ",{"fg":4,"bold":true}]],"46":[["[Name] test.cpp      ",{"inverse":true}],[" NORMAL ",{"bold":true}],[" ",{}],["calendar.txt ",{"bold":true}],["                                                        unix │ utf-8 │ text │  60% ",{}],[" LN 132",{"bold":true}],[":1  ",{}],[" ",{"bold":true,"inverse":true}],[" ~/…/calendar-vim/doc>",{"bold":true}]],"47":[["                                                                                                                                                                ",{}]]},"cursor":{"visible":true}}],[0.032797,{"lines":{"0":[["\" Press <F1> for hel",{"fg":6,"bold":true}],["|",{"inverse":true}],[" 88 ",{"fg":3,"bold":true}],["  let g:calendar_diary=$HOME.'/.vim/diary'                                                                      ",{}],["|",{"inverse":true}],["  1 ",{"fg":3,"bold":true}],["\" Press ? for help",{"fg":5,"bold":true}]],"1":[["                    ",{}],["|",{"inverse":true}],[" 89 ",{"fg":3,"bold":true}],["                                                                                                                ",{}],["|",{"inverse":true}],["  2 ",{"fg":3,"bold":true}],["                  ",{}]],"2":[["▼",{"fg":3,"bold":true}],[" First",{"fg":5,"bold":true}],[" : ",{}],["struct",{"fg":2,"bold":true}],["    ",{}],["|",{"inverse":true}],[" 90 ",{"fg":3,"bold":true}],["                                                                                                                ",{}],["|",{"inverse":true}],["  3 ",{"fg":3,"bold":true}],[".. (up a dir)",{"fg":6,"bold":true}],["     ",{}]],"3":[["    [prototypes]",{"fg":6,"bold":true}],["    ",{}],["|",{"inverse":true}],[" 91 ",{"fg":3,"bold":true}],["                                                *g:calendar_navi*                                               ",{}],["|",{"inverse":true}],["  4 /root/",{"fg":3,"bold":true}],["            ",{}]],"4":[["   ",{}],["+",{"fg":2,"bold":true}],["FirstRun(void)  ",{}],["|",{"inverse":true}],[" 92 ",{"fg":3,"bold":true}],["To control the calendar navigator, set this variable.  Acceptable values are                                    ",{}],["|",{"inverse":true}],["  5 ",{"fg":3,"bold":true}],["▸ .asciinema/",{"fg":6,"bold":true}],["     ",{}]],"5":[["   ",{}],["+",{"fg":2,"bold":true}],["FirstRun2(void) ",{}],["|",{"inverse":true}],[" 93 ",{"fg":3,"bold":true}],["'top', 'bottom', or 'both'. >                                                                                   ",{}],["|",{"inverse":true}],["  6 ",{"fg":3,"bold":true}],["▸ .cache/",{"fg":6,"bold":true}],["         ",{}]],"6":[["                    ",{}],["|",{"inverse":true}],[" 94 ",{"fg":3,"bold":true}],["  let g:calendar_navi = ''                                                                                      ",{}],["|",{"inverse":true}],["  7 ",{"fg":3,"bold":true}],["▸ .config/",{"fg":6,"bold":true}],["        ",{}]],"7":[["▼",{"fg":3,"bold":true}],[" Last",{"fg":5,"bold":true}],[" : ",{}],["struct",{"fg":2,"bold":true}],["     ",{}],["|",{"inverse":true}],[" 95 ",{"fg":3,"bold":true}],["  let g:calendar_navi = ''                                                                                      ",{}],["|",{"inverse":true}],["  8 ",{"fg":3,"bold":true}],["▸ .dbus/",{"fg":6,"bold":true}],["          ",{}]]},"cursor":{"y":7,"visible":false}}],[0.00473,{"lines":{"7":[["▼",{"fg":3,"bold":true}],[" Last",{"fg":5,"bold":true}],[" : ",{}],["struct",{"fg":2,"bold":true}],["     ",{}],["|",{"inverse":true}],[" 95 ",{"fg":3,"bold":true}],["<                                                                                                               ",{}],["|",{"inverse":true}],["  8 ",{"fg":3,"bold":true}],["▸ .dbus/",{"fg":6,"bold":true}],["          ",{}]],"8":[["    [functions]",{"fg":6,"bold":true}],["     ",{}],["|",{"inverse":true}],[" 96 ",{"fg":3,"bold":true}],["                                                                                                                ",{}],["|",{"inverse":true}],["  9 ",{"fg":3,"bold":true}],["▸ .gnupg/",{"fg":6,"bold":true}],["         ",{}]],"9":[["   ",{}],["+",{"fg":2,"bold":true}],["FirstRun(void)  ",{}],["|",{"inverse":true}],[" 97 ",{"fg":3,"bold":true}],["                                                *g:calendar_navi_label*                                         ",{}],["|",{"inverse":true}],[" 10 ",{"fg":3,"bold":true}],["▸ .kde/",{"fg":6,"bold":true}],["           ",{}]],"10":[["   ",{}],["+",{"fg":2,"bold":true}],["FirstRun2(void) ",{}],["|",{"inverse":true}],[" 98 ",{"fg":3,"bold":true}],["To set the labels for the calendar navigator, for example to change the                                         ",{}],["|",{"inverse":true}],[" 11 ",{"fg":3,"bold":true}],["▸ .local/",{"fg":6,"bold":true}],["         ",{}]],"11":[["   ",{}],["+",{"fg":2,"bold":true}],["~Last()         ",{}],["|",{"inverse":true}],[" 99 ",{"fg":3,"bold":true}],["language, use this variable.  Entries should be comma separated. >                                              ",{}],["|",{"inverse":true}],[" 12 ",{"fg":3,"bold":true}],["▸ .pki/",{"fg":6,"bold":true}],["           ",{}]],"12":[["   ",{}],["+",{"fg":2,"bold":true}],["SecondRun(void) ",{}],["|",{"inverse":true}],["100 ",{"fg":3,"bold":true}],["  let g:calendar_navi_label = 'Prev,Today,Next'                                                                 ",{}],["|",{"inverse":true}],[" 13 ",{"fg":3,"bold":true}],["▸ .ssh/",{"fg":6,"bold":true}],["           ",{}]],"13":[["   ",{}],["+",{"fg":2,"bold":true}],["SecondRun2(void)",{}],["|",{"inverse":true}],["101 ",{"fg":3,"bold":true}],["<                                                                                                               ",{}],["|",{"inverse":true}],[" 14 ",{"fg":3,"bold":true}],["▸ .vim/",{"fg":6,"bold":true}],["           ",{}]],"14":[["                    ",{}],["|",{"inverse":true}],["102 ",{"fg":3,"bold":true}],["                                                                                                                ",{}],["|",{"inverse":true}],[" 15 ",{"fg":3,"bold":true}],["▸ diary/",{"fg":6,"bold":true}],["          ",{}]],"15":[["▼",{"fg":3,"bold":true}],[" Second",{"fg":5,"bold":true}],[" : ",{}],["struct",{"fg":2,"bold":true}],["   ",{}],["|",{"inverse":true}],["103 ",{"fg":3,"bold":true}],["                                                *g:calendar_erafmt*                                             ",{}],["|",{"inverse":true}],[" 16 ",{"fg":3,"bold":true}],["▸ temp/",{"fg":6,"bold":true}],["           ",{}]],"16":[["    [prototypes]",{"fg":6,"bold":true}],["    ",{}],["|",{"inverse":true}],["104 ",{"fg":3,"bold":true}],["To change the dating system, set the following variable.  Include the name of                                   ",{}],["|",{"inverse":true}],[" 17 ",{"fg":3,"bold":true}],["  .bash_history   ",{}]],"17":[["   ",{}],["+",{"fg":2,"bold":true}],["SecondRun(void) ",{}],["|",{"inverse":true}],["105 ",{"fg":3,"bold":true}],["the dating system and its offset from the Georgian calendar (A.D.).  For                                        ",{}],["|",{"inverse":true}],[" 18 ",{"fg":3,"bold":true}],["  .bash_logout    ",{}]],"18":[["   ",{}],["+",{"fg":2,"bold":true}],["SecondRun2(void)",{}],["|",{"inverse":true}],["106 ",{"fg":3,"bold":true}],["example, to use the current Japanese era (Heisei), you would set: >                                             ",{}],["|",{"inverse":true}],[" 19 ",{"fg":3,"bold":true}],["  .bash_profile   ",{"underline":true}]],"19":[["                    ",{}],["|",{"inverse":true}],["107 ",{"fg":3,"bold":true}],["  let g:calendar_erafmt = 'Heisei,-1988'                                                                        ",{}],["|",{"inverse":true}],[" 20 ",{"fg":3,"bold":true}],["  .bashrc         ",{}]],"20":[["▼",{"fg":3,"bold":true}],[" ",{}],["functions",{"fg":6,"bold":true}],["         ",{}],["|",{"inverse":true}],["108 ",{"fg":3,"bold":true}],["<                                                                                                               ",{}],["|",{"inverse":true}],[" 21 ",{"fg":3,"bold":true}],["  .cshrc          ",{}]],"21":[["    main(int argc, c",{"underline":true}],["|",{"inverse":true}],["109 ",{"fg":3,"bold":true}],["                                                                                                                ",{}],["|",{"inverse":true}],[" 22 ",{"fg":3,"bold":true}],["  .dmrc           ",{}]],"22":[["~                   ",{"fg":4,"bold":true}],["|",{"inverse":true}],["110 ",{"fg":3,"bold":true}],["                                                *g:calendar_mruler*                                             ",{}],["|",{"inverse":true}],[" 23 ",{"fg":3,"bold":true}],["  .esd_auth       ",{}]],"23":[["~                   ",{"fg":4,"bold":true}],["|",{"inverse":true}],["111 ",{"fg":3,"bold":true}],["To change the month names for the calendar headings, set this variable.  The                                    ",{}],["|",{"inverse":true}],[" 24 ",{"fg":3,"bold":true}],["  .gtkrc-2.0      ",{}]],"24":[["~                   ",{"fg":4,"bold":true}],["|",{"inverse":true}],["112 ",{"fg":3,"bold":true}],["value is expected to be a comma-separated list of twelve values, starting with                                  ",{}],["|",{"inverse":true}],[" 25 ",{"fg":3,"bold":true}],["  .gtkrc-2.0-kde4 ",{}]],"25":[["~                   ",{"fg":4,"bold":true}],["|",{"inverse":true}],["113 ",{"fg":3,"bold":true}],["Janurary: >                                                                                                     ",{}],["|",{"inverse":true}],[" 26 ",{"fg":3,"bold":true}],["  .lesshst        ",{}]],"26":[["~                   ",{"fg":4,"bold":true}],["|",{"inverse":true}],["114 ",{"fg":3,"bold":true}],["  let g:calendar_mruler = 'Jan,Feb,Mar,Apr,May,Jun,Jul,Aug,Sep,Oct,Nov,Dec'                                     ",{}],["|",{"inverse":true}],[" 27 ",{"fg":3,"bold":true}],["  .tcshrc         ",{}]],"27":[["~                   ",{"fg":4,"bold":true}],["|",{"inverse":true}],["115 ",{"fg":3,"bold":true}],["<                                                                                                               ",{}],["|",{"inverse":true}],[" 28 ",{"fg":3,"bold":true}],["  .viminfo        ",{}]],"28":[["~                   ",{"fg":4,"bold":true}],["|",{"inverse":true}],["116 ",{"fg":3,"bold":true}],["                                                                                                                ",{}],["|",{"inverse":true}],[" 29 ",{"fg":3,"bold":true}],["  .vimrc          ",{}]],"29":[["~                   ",{"fg":4,"bold":true}],["|",{"inverse":true}],["117 ",{"fg":3,"bold":true}],["                                                *g:calendar_wruler*                                             ",{}],["|",{"inverse":true}],[" 30 ",{"fg":3,"bold":true}],["  .xsession-errors",{}]],"30":[["~                   ",{"fg":4,"bold":true}],["|",{"inverse":true}],["118 ",{"fg":3,"bold":true}],["To change the week names for the calendar headings, set this variable.  The                                     ",{}],["|",{"inverse":true}],[" 31 ",{"fg":3,"bold":true}],["  anaconda-ks.cfg ",{}]],"31":[["~                   ",{"fg":4,"bold":true}],["|",{"inverse":true}],["119 ",{"fg":3,"bold":true}],["value is expected to be a space-separated list of seven values, starting with                                   ",{}],["|",{"inverse":true}],[" 32 ",{"fg":3,"bold":true}],["  initial-setup-ks",{}]],"32":[["~                   ",{"fg":4,"bold":true}],["|",{"inverse":true}],["120 ",{"fg":3,"bold":true}],["Sunday: >                                                                                                       ",{}],["|",{"inverse":true}],[" 33 ",{"fg":3,"bold":true}],["  test.c          ",{}]],"33":[["~                   ",{"fg":4,"bold":true}],["|",{"inverse":true}],["121 ",{"fg":3,"bold":true}],["  let g:calendar_wruler = 'Su Mo Tu We Th Fr Sa'                                                                ",{}],["|",{"inverse":true}],[" 34 ",{"fg":3,"bold":true}],["  test.cpp        ",{}]],"34":[["~                   ",{"fg":4,"bold":true}],["|",{"inverse":true}],["122 ",{"fg":3,"bold":true}],["<                                                                                                               ",{}],["|",{"inverse":true}],[" 35 ",{"fg":3,"bold":true}],["  .test.cpp.swp   ",{}]],"35":[["~                   ",{"fg":4,"bold":true}],["|",{"inverse":true}],["123 ",{"fg":3,"bold":true}],["                                                                                                                ",{}],["|",{"inverse":true}],["~                     ",{"fg":4,"bold":true}]],"36":[["~                   ",{"fg":4,"bold":true}],["|",{"inverse":true}],["124 ",{"fg":3,"bold":true}],["                                                *g:calendar_monday*                                             ",{}],["|",{"inverse":true}],["~                     ",{"fg":4,"bold":true}]],"37":[["~                   ",{"fg":4,"bold":true}],["|",{"inverse":true}],["125 ",{"fg":3,"bold":true}],["To make the week start on Monday rather than Sunday, set this variable.  Note                                   ",{}],["|",{"inverse":true}],["~                     ",{"fg":4,"bold":true}]],"38":[["~                   ",{"fg":4,"bold":true}],["|",{"inverse":true}],["126 ",{"fg":3,"bold":true}],["that the value of |g:calendar_wruler| is not affected by this; it should                                        ",{}],["|",{"inverse":true}],["~                     ",{"fg":4,"bold":true}]],"39":[["~                   ",{"fg":4,"bold":true}],["|",{"inverse":true}],["127 ",{"fg":3,"bold":true}],["always begin with Sunday: >                                                                                     ",{}],["|",{"inverse":true}],["~                     ",{"fg":4,"bold":true}]],"40":[["~                   ",{"fg":4,"bold":true}],["|",{"inverse":true}],["128 ",{"fg":3,"bold":true}],["  let g:calendar_monday = 1                                                                                     ",{}],["|",{"inverse":true}],["~                     ",{"fg":4,"bold":true}]],"41":[["~                   ",{"fg":4,"bold":true}],["|",{"inverse":true}],["129 ",{"fg":3,"bold":true}],["<                                                                                                               ",{}],["|",{"inverse":true}],["~                     ",{"fg":4,"bold":true}]],"42":[["~                   ",{"fg":4,"bold":true}],["|",{"inverse":true}],["130 ",{"fg":3,"bold":true}],["                                                                                                                ",{}],["|",{"inverse":true}],["~                     ",{"fg":4,"bold":true}]],"43":[["~                   ",{"fg":4,"bold":true}],["|",{"inverse":true}],["131 ",{"fg":3,"bold":true}],["                                                *g:calendar_weeknm*                                             ",{}],["|",{"inverse":true}],["~                     ",{"fg":4,"bold":true}]],"44":[["~                   ",{"fg":4,"bold":true}],["|",{"inverse":true}],["132 ",{"fg":3,"bold":true}],["To show the week number, set this variable.  There are four valid settings: >                                   ",{}],["|",{"inverse":true}],["~                     ",{"fg":4,"bold":true}]],"45":[["~                   ",{"fg":4,"bold":true}],["|",{"inverse":true}],["133 ",{"fg":3,"bold":true}],["  let g:calendar_weeknm = 1 \" WK01                                                                              ",{"underline":true}],["|",{"inverse":true}],["~                     ",{"fg":4,"bold":true}]],"46":[["[Name] test.cpp      ",{"inverse":true}],[" NORMAL ",{"bold":true}],[" ",{}],["calendar.txt ",{"bold":true}],["                                                        unix │ utf-8 │ text │  60% ",{}],[" LN 133",{"bold":true}],[":1  ",{}],[" ",{"bold":true,"inverse":true}],[" ~/…/calendar-vim/doc>",{"bold":true}]]},"cursor":{"y":45,"visible":true}}],[0.044912,{"lines":{"0":[["\" Press <F1> for hel",{"fg":6,"bold":true}],["|",{"inverse":true}],[" 89 ",{"fg":3,"bold":true}],["                                                                                                                ",{}],["|",{"inverse":true}],["  1 ",{"fg":3,"bold":true}],["\" Press ? for help",{"fg":5,"bold":true}]],"1":[["                    ",{}],["|",{"inverse":true}],[" 90 ",{"fg":3,"bold":true}],["                                                                                                                ",{}],["|",{"inverse":true}],["  2 ",{"fg":3,"bold":true}],["                  ",{}]],"2":[["▼",{"fg":3,"bold":true}],[" First",{"fg":5,"bold":true}],[" : ",{}],["struct",{"fg":2,"bold":true}],["    ",{}],["|",{"inverse":true}],[" 91 ",{"fg":3,"bold":true}],["                                                *g:calendar_navi*                                               ",{}],["|",{"inverse":true}],["  3 ",{"fg":3,"bold":true}],[".. (up a dir)",{"fg":6,"bold":true}],["     ",{}]],"3":[["    [prototypes]",{"fg":6,"bold":true}],["    ",{}],["|",{"inverse":true}],[" 92 ",{"fg":3,"bold":true}],["To control the calendar navigator, set this variable.  Acceptable values are                                    ",{}],["|",{"inverse":true}],["  4 /root/",{"fg":3,"bold":true}],["            ",{}]],"4":[["   ",{}],["+",{"fg":2,"bold":true}],["FirstRun(void)  ",{}],["|",{"inverse":true}],[" 93 ",{"fg":3,"bold":true}],["'top', 'bottom', or 'both'. >                                                                                   ",{}],["|",{"inverse":true}],["  5 ",{"fg":3,"bold":true}],["▸ .asciinema/",{"fg":6,"bold":true}],["     ",{}]],"5":[["   ",{}],["+",{"fg":2,"bold":true}],["FirstRun2(void) ",{}],["|",{"inverse":true}],[" 94 ",{"fg":3,"bold":true}],["  let g:calendar_navi = ''                                                                                      ",{}],["|",{"inverse":true}],["  6 ",{"fg":3,"bold":true}],["▸ .cache/",{"fg":6,"bold":true}],["         ",{}]],"6":[["                    ",{}],["|",{"inverse":true}],[" 95 ",{"fg":3,"bold":true}],["<                                                                                                               ",{}],["|",{"inverse":true}],["  7 ",{"fg":3,"bold":true}],["▸ .config/",{"fg":6,"bold":true}],["        ",{}]],"7":[["▼",{"fg":3,"bold":true}],[" Last",{"fg":5,"bold":true}],[" : ",{}],["struct",{"fg":2,"bold":true}],["     ",{}],["|",{"inverse":true}],[" 96 ",{"fg":3,"bold":true}],["<                                                                                                               ",{}],["|",{"inverse":true}],["  8 ",{"fg":3,"bold":true}],["▸ .dbus/",{"fg":6,"bold":true}],["          ",{}]]},"cursor":{"y":7,"visible":false}}],[0.016516,{"lines":{"0":[["\" Press <F1> for hel",{"fg":6,"bold":true}],["|",{"inverse":true}],[" 90 ",{"fg":3,"bold":true}],["                                                                                                                ",{}],["|",{"inverse":true}],["  1 ",{"fg":3,"bold":true}],["\" Press ? for help",{"fg":5,"bold":true}]],"1":[["                    ",{}],["|",{"inverse":true}],[" 91 ",{"fg":3,"bold":true}],["                                                *g:calendar_navi*                                               ",{}],["|",{"inverse":true}],["  2 ",{"fg":3,"bold":true}],["                  ",{}]],"2":[["▼",{"fg":3,"bold":true}],[" First",{"fg":5,"bold":true}],[" : ",{}],["struct",{"fg":2,"bold":true}],["    ",{}],["|",{"inverse":true}],[" 92 ",{"fg":3,"bold":true}],["To control the calendar navigator, set this variable.  Acceptable values are                                    ",{}],["|",{"inverse":true}],["  3 ",{"fg":3,"bold":true}],[".. (up a dir)",{"fg":6,"bold":true}],["     ",{}]],"3":[["    [prototypes]",{"fg":6,"bold":true}],["    ",{}],["|",{"inverse":true}],[" 93 ",{"fg":3,"bold":true}],["'top', 'bottom', or 'both'. >                                                                                   ",{}],["|",{"inverse":true}],["  4 /root/",{"fg":3,"bold":true}],["            ",{}]],"4":[["   ",{}],["+",{"fg":2,"bold":true}],["FirstRun(void)  ",{}],["|",{"inverse":true}],[" 94 ",{"fg":3,"bold":true}],["  let g:calendar_navi = ''                                                                                      ",{}],["|",{"inverse":true}],["  5 ",{"fg":3,"bold":true}],["▸ .asciinema/",{"fg":6,"bold":true}],["     ",{}]],"5":[["   ",{}],["+",{"fg":2,"bold":true}],["FirstRun2(void) ",{}],["|",{"inverse":true}],[" 95 ",{"fg":3,"bold":true}],["<                                                                                                               ",{}],["|",{"inverse":true}],["  6 ",{"fg":3,"bold":true}],["▸ .cache/",{"fg":6,"bold":true}],["         ",{}]],"6":[["                    ",{}],["|",{"inverse":true}],[" 96 ",{"fg":3,"bold":true}],["                                                                                                                ",{}],["|",{"inverse":true}],["  7 ",{"fg":3,"bold":true}],["▸ .config/",{"fg":6,"bold":true}],["        ",{}]],"7":[["▼",{"fg":3,"bold":true}],[" Last",{"fg":5,"bold":true}],[" : ",{}],["struct",{"fg":2,"bold":true}],["     ",{}],["|",{"inverse":true}],[" 97 ",{"fg":3,"bold":true}],["                                                *g:calendar_navi_label*                                         ",{}],["|",{"inverse":true}],["  8 ",{"fg":3,"bold":true}],["▸ .dbus/",{"fg":6,"bold":true}],["          ",{}]],"8":[["    [functions]",{"fg":6,"bold":true}],["     ",{}],["|",{"inverse":true}],[" 98 ",{"fg":3,"bold":true}],["To set the labels for the calendar navigator, for example to change the                                         ",{}],["|",{"inverse":true}],["  9 ",{"fg":3,"bold":true}],["▸ .gnupg/",{"fg":6,"bold":true}],["         ",{}]],"9":[["   ",{}],["+",{"fg":2,"bold":true}],["FirstRun(void)  ",{}],["|",{"inverse":true}],[" 99 ",{"fg":3,"bold":true}],["language, use this variable.  Entries should be comma separated. >                                              ",{}],["|",{"inverse":true}],[" 10 ",{"fg":3,"bold":true}],["▸ .kde/",{"fg":6,"bold":true}],["           ",{}]],"10":[["   ",{}],["+",{"fg":2,"bold":true}],["FirstRun2(void) ",{}],["|",{"inverse":true}],["100 ",{"fg":3,"bold":true}],["  let g:calendar_navi_label = 'Prev,Today,Next'                                                                 ",{}],["|",{"inverse":true}],[" 11 ",{"fg":3,"bold":true}],["▸ .local/",{"fg":6,"bold":true}],["         ",{}]],"11":[["   ",{}],["+",{"fg":2,"bold":true}],["~Last()         ",{}],["|",{"inverse":true}],["101 ",{"fg":3,"bold":true}],["<                                                                                                               ",{}],["|",{"inverse":true}],[" 12 ",{"fg":3,"bold":true}],["▸ .pki/",{"fg":6,"bold":true}],["           ",{}]],"12":[["   ",{}],["+",{"fg":2,"bold":true}],["SecondRun(void) ",{}],["|",{"inverse":true}],["102 ",{"fg":3,"bold":true}],["                                                                                                                ",{}],["|",{"inverse":true}],[" 13 ",{"fg":3,"bold":true}],["▸ .ssh/",{"fg":6,"bold":true}],["           ",{}]],"13":[["   ",{}],["+",{"fg":2,"bold":true}],["SecondRun2(void)",{}],["|",{"inverse":true}],["103 ",{"fg":3,"bold":true}],["                                                *g:calendar_erafmt*                                             ",{}],["|",{"inverse":true}],[" 14 ",{"fg":3,"bold":true}],["▸ .vim/",{"fg":6,"bold":true}],["           ",{}]],"14":[["                    ",{}],["|",{"inverse":true}],["104 ",{"fg":3,"bold":true}],["To change the dating system, set the following variable.  Include the name of                                   ",{}],["|",{"inverse":true}],[" 15 ",{"fg":3,"bold":true}],["▸ diary/",{"fg":6,"bold":true}],["          ",{}]],"15":[["▼",{"fg":3,"bold":true}],[" Second",{"fg":5,"bold":true}],[" : ",{}],["struct",{"fg":2,"bold":true}],["   ",{}],["|",{"inverse":true}],["105 ",{"fg":3,"bold":true}],["the dating system and its offset from the Georgian calendar (A.D.).  For                                        ",{}],["|",{"inverse":true}],[" 16 ",{"fg":3,"bold":true}],["▸ temp/",{"fg":6,"bold":true}],["           ",{}]],"16":[["    [prototypes]",{"fg":6,"bold":true}],["    ",{}],["|",{"inverse":true}],["106 ",{"fg":3,"bold":true}],["example, to use the current Japanese era (Heisei), you would set: >                                             ",{}],["|",{"inverse":true}],[" 17 ",{"fg":3,"bold":true}],["  .bash_history   ",{}]],"17":[["   ",{}],["+",{"fg":2,"bold":true}],["SecondRun(void) ",{}],["|",{"inverse":true}],["107 ",{"fg":3,"bold":true}],["  let g:calendar_erafmt = 'Heisei,-1988'                                                                        ",{}],["|",{"inverse":true}],[" 18 ",{"fg":3,"bold":true}],["  .bash_logout    ",{}]],"18":[["   ",{}],["+",{"fg":2,"bold":true}],["SecondRun2(void)",{}],["|",{"inverse":true}],["108 ",{"fg":3,"bold":true}],["<                                                                                                               ",{}],["|",{"inverse":true}],[" 19 ",{"fg":3,"bold":true}],["  .bash_profile   ",{"underline":true}]],"19":[["                    ",{}],["|",{"inverse":true}],["109 ",{"fg":3,"bold":true}],["                                                                                                                ",{}],["|",{"inverse":true}],[" 20 ",{"fg":3,"bold":true}],["  .bashrc         ",{}]],"20":[["▼",{"fg":3,"bold":true}],[" ",{}],["functions",{"fg":6,"bold":true}],["         ",{}],["|",{"inverse":true}],["110 ",{"fg":3,"bold":true}],["                                                *g:calendar_mruler*                                             ",{}],["|",{"inverse":true}],[" 21 ",{"fg":3,"bold":true}],["  .cshrc          ",{}]],"21":[["    main(int argc, c",{"underline":true}],["|",{"inverse":true}],["111 ",{"fg":3,"bold":true}],["To change the month names for the calendar headings, set this variable.  The                                    ",{}],["|",{"inverse":true}],[" 22 ",{"fg":3,"bold":true}],["  .dmrc           ",{}]],"22":[["~                   ",{"fg":4,"bold":true}],["|",{"inverse":true}],["111 ",{"fg":3,"bold":true}],["To change the month names for the calendar headings, set this variable.  The                                    ",{}],["|",{"inverse":true}],[" 23 ",{"fg":3,"bold":true}],["  .esd_auth       ",{}]],"23":[["~                   ",{"fg":4,"bold":true}],["|",{"inverse":true}],["112 ",{"fg":3,"bold":true}],["value is expected to be a comma-separated list of twelve values, starting with                                  ",{}],["|",{"inverse":true}],[" 24 ",{"fg":3,"bold":true}],["  .gtkrc-2.0      ",{}]],"24":[["~                   ",{"fg":4,"bold":true}],["|",{"inverse":true}],["113 ",{"fg":3,"bold":true}],["Janurary: >                                                                                                     ",{}],["|",{"inverse":true}],[" 25 ",{"fg":3,"bold":true}],["  .gtkrc-2.0-kde4 ",{}]],"25":[["~                   ",{"fg":4,"bold":true}],["|",{"inverse":true}],["114 ",{"fg":3,"bold":true}],["  let g:calendar_mruler = 'Jan,Feb,Mar,Apr,May,Jun,Jul,Aug,Sep,Oct,Nov,Dec'                                     ",{}],["|",{"inverse":true}],[" 26 ",{"fg":3,"bold":true}],["  .lesshst        ",{}]],"26":[["~                   ",{"fg":4,"bold":true}],["|",{"inverse":true}],["115 ",{"fg":3,"bold":true}],["<                                                                                                               ",{}],["|",{"inverse":true}],[" 27 ",{"fg":3,"bold":true}],["  .tcshrc         ",{}]],"27":[["~                   ",{"fg":4,"bold":true}],["|",{"inverse":true}],["116 ",{"fg":3,"bold":true}],["                                                                                                                ",{}],["|",{"inverse":true}],[" 28 ",{"fg":3,"bold":true}],["  .viminfo        ",{}]],"28":[["~                   ",{"fg":4,"bold":true}],["|",{"inverse":true}],["117 ",{"fg":3,"bold":true}],["                                                *g:calendar_wruler*                                             ",{}],["|",{"inverse":true}],[" 29 ",{"fg":3,"bold":true}],["  .vimrc          ",{}]],"29":[["~                   ",{"fg":4,"bold":true}],["|",{"inverse":true}],["118 ",{"fg":3,"bold":true}],["To change the week names for the calendar headings, set this variable.  The                                     ",{}],["|",{"inverse":true}],[" 30 ",{"fg":3,"bold":true}],["  .xsession-errors",{}]],"30":[["~                   ",{"fg":4,"bold":true}],["|",{"inverse":true}],["119 ",{"fg":3,"bold":true}],["value is expected to be a space-separated list of seven values, starting with                                   ",{}],["|",{"inverse":true}],[" 31 ",{"fg":3,"bold":true}],["  anaconda-ks.cfg ",{}]],"31":[["~                   ",{"fg":4,"bold":true}],["|",{"inverse":true}],["120 ",{"fg":3,"bold":true}],["Sunday: >                                                                                                       ",{}],["|",{"inverse":true}],[" 32 ",{"fg":3,"bold":true}],["  initial-setup-ks",{}]],"32":[["~                   ",{"fg":4,"bold":true}],["|",{"inverse":true}],["121 ",{"fg":3,"bold":true}],["  let g:calendar_wruler = 'Su Mo Tu We Th Fr Sa'                                                                ",{}],["|",{"inverse":true}],[" 33 ",{"fg":3,"bold":true}],["  test.c          ",{}]],"33":[["~                   ",{"fg":4,"bold":true}],["|",{"inverse":true}],["122 ",{"fg":3,"bold":true}],["<                                                                                                               ",{}],["|",{"inverse":true}],[" 34 ",{"fg":3,"bold":true}],["  test.cpp        ",{}]],"34":[["~                   ",{"fg":4,"bold":true}],["|",{"inverse":true}],["123 ",{"fg":3,"bold":true}],["                                                                                                                ",{}],["|",{"inverse":true}],[" 35 ",{"fg":3,"bold":true}],["  .test.cpp.swp   ",{}]],"35":[["~                   ",{"fg":4,"bold":true}],["|",{"inverse":true}],["124 ",{"fg":3,"bold":true}],["                                                *g:calendar_monday*                                             ",{}],["|",{"inverse":true}],["~                     ",{"fg":4,"bold":true}]],"36":[["~                   ",{"fg":4,"bold":true}],["|",{"inverse":true}],["125 ",{"fg":3,"bold":true}],["To make the week start on Monday rather than Sunday, set this variable.  Note                                   ",{}],["|",{"inverse":true}],["~                     ",{"fg":4,"bold":true}]],"37":[["~                   ",{"fg":4,"bold":true}],["|",{"inverse":true}],["126 ",{"fg":3,"bold":true}],["that the value of |g:calendar_wruler| is not affected by this; it should                                        ",{}],["|",{"inverse":true}],["~                     ",{"fg":4,"bold":true}]],"38":[["~                   ",{"fg":4,"bold":true}],["|",{"inverse":true}],["127 ",{"fg":3,"bold":true}],["always begin with Sunday: >                                                                                     ",{}],["|",{"inverse":true}],["~                     ",{"fg":4,"bold":true}]],"39":[["~                   ",{"fg":4,"bold":true}],["|",{"inverse":true}],["128 ",{"fg":3,"bold":true}],["  let g:calendar_monday = 1                                                                                     ",{}],["|",{"inverse":true}],["~                     ",{"fg":4,"bold":true}]],"40":[["~                   ",{"fg":4,"bold":true}],["|",{"inverse":true}],["129 ",{"fg":3,"bold":true}],["<                                                                                                               ",{}],["|",{"inverse":true}],["~                     ",{"fg":4,"bold":true}]],"41":[["~                   ",{"fg":4,"bold":true}],["|",{"inverse":true}],["130 ",{"fg":3,"bold":true}],["                                                                                                                ",{}],["|",{"inverse":true}],["~                     ",{"fg":4,"bold":true}]],"42":[["~                   ",{"fg":4,"bold":true}],["|",{"inverse":true}],["131 ",{"fg":3,"bold":true}],["                                                *g:calendar_weeknm*                                             ",{}],["|",{"inverse":true}],["~                     ",{"fg":4,"bold":true}]],"43":[["~                   ",{"fg":4,"bold":true}],["|",{"inverse":true}],["132 ",{"fg":3,"bold":true}],["To show the week number, set this variable.  There are four valid settings: >                                   ",{}],["|",{"inverse":true}],["~                     ",{"fg":4,"bold":true}]],"44":[["~                   ",{"fg":4,"bold":true}],["|",{"inverse":true}],["133 ",{"fg":3,"bold":true}],["  let g:calendar_weeknm = 1 \" WK01                                                                              ",{}],["|",{"inverse":true}],["~                     ",{"fg":4,"bold":true}]],"45":[["~                   ",{"fg":4,"bold":true}],["|",{"inverse":true}],["134 ",{"fg":3,"bold":true}],["  let g:calendar_weeknm = 2 \" WK 1                                                                              ",{"underline":true}],["|",{"inverse":true}],["~                     ",{"fg":4,"bold":true}]],"46":[["[Name] test.cpp      ",{"inverse":true}],[" NORMAL ",{"bold":true}],[" ",{}],["calendar.txt ",{"bold":true}],["                                                        unix │ utf-8 │ text │  60% ",{}],[" LN 134",{"bold":true}],[":1  ",{}],[" ",{"bold":true,"inverse":true}],[" ~/…/calendar-vim/doc>",{"bold":true}]]},"cursor":{"x":21,"y":22}}],[0.002743,{"lines":{"22":[["~                   ",{"fg":4,"bold":true}],["|",{"inverse":true}],["112 ",{"fg":3,"bold":true}],["value is expected to be a comma-separated list of twelve values, starting with                                  ",{}],["|",{"inverse":true}],[" 23 ",{"fg":3,"bold":true}],["  .esd_auth       ",{}]],"23":[["~                   ",{"fg":4,"bold":true}],["|",{"inverse":true}],["113 ",{"fg":3,"bold":true}],["Janurary: >                                                                                                     ",{}],["|",{"inverse":true}],[" 24 ",{"fg":3,"bold":true}],["  .gtkrc-2.0      ",{}]],"24":[["~                   ",{"fg":4,"bold":true}],["|",{"inverse":true}],["114 ",{"fg":3,"bold":true}],["  let g:calendar_mruler = 'Jan,Feb,Mar,Apr,May,Jun,Jul,Aug,Sep,Oct,Nov,Dec'                                     ",{}],["|",{"inverse":true}],[" 25 ",{"fg":3,"bold":true}],["  .gtkrc-2.0-kde4 ",{}]],"25":[["~                   ",{"fg":4,"bold":true}],["|",{"inverse":true}],["115 ",{"fg":3,"bold":true}],["<                                                                                                               ",{}],["|",{"inverse":true}],[" 26 ",{"fg":3,"bold":true}],["  .lesshst        ",{}]],"26":[["~                   ",{"fg":4,"bold":true}],["|",{"inverse":true}],["116 ",{"fg":3,"bold":true}],["                                                                                                                ",{}],["|",{"inverse":true}],[" 27 ",{"fg":3,"bold":true}],["  .tcshrc         ",{}]],"27":[["~                   ",{"fg":4,"bold":true}],["|",{"inverse":true}],["117 ",{"fg":3,"bold":true}],["                                                *g:calendar_wruler*                                             ",{}],["|",{"inverse":true}],[" 28 ",{"fg":3,"bold":true}],["  .viminfo        ",{}]],"28":[["~                   ",{"fg":4,"bold":true}],["|",{"inverse":true}],["118 ",{"fg":3,"bold":true}],["To change the week names for the calendar headings, set this variable.  The                                     ",{}],["|",{"inverse":true}],[" 29 ",{"fg":3,"bold":true}],["  .vimrc          ",{}]],"29":[["~                   ",{"fg":4,"bold":true}],["|",{"inverse":true}],["119 ",{"fg":3,"bold":true}],["value is expected to be a space-separated list of seven values, starting with                                   ",{}],["|",{"inverse":true}],[" 30 ",{"fg":3,"bold":true}],["  .xsession-errors",{}]],"30":[["~                   ",{"fg":4,"bold":true}],["|",{"inverse":true}],["120 ",{"fg":3,"bold":true}],["Sunday: >                                                                                                       ",{}],["|",{"inverse":true}],[" 31 ",{"fg":3,"bold":true}],["  anaconda-ks.cfg ",{}]],"31":[["~                   ",{"fg":4,"bold":true}],["|",{"inverse":true}],["121 ",{"fg":3,"bold":true}],["  let g:calendar_wruler = 'Su Mo Tu We Th Fr Sa'                                                                ",{}],["|",{"inverse":true}],[" 32 ",{"fg":3,"bold":true}],["  initial-setup-ks",{}]],"32":[["~                   ",{"fg":4,"bold":true}],["|",{"inverse":true}],["122 ",{"fg":3,"bold":true}],["<                                                                                                               ",{}],["|",{"inverse":true}],[" 33 ",{"fg":3,"bold":true}],["  test.c          ",{}]],"33":[["~                   ",{"fg":4,"bold":true}],["|",{"inverse":true}],["123 ",{"fg":3,"bold":true}],["                                                                                                                ",{}],["|",{"inverse":true}],[" 34 ",{"fg":3,"bold":true}],["  test.cpp        ",{}]],"34":[["~                   ",{"fg":4,"bold":true}],["|",{"inverse":true}],["124 ",{"fg":3,"bold":true}],["                                                *g:calendar_monday*                                             ",{}],["|",{"inverse":true}],[" 35 ",{"fg":3,"bold":true}],["  .test.cpp.swp   ",{}]],"35":[["~                   ",{"fg":4,"bold":true}],["|",{"inverse":true}],["125 ",{"fg":3,"bold":true}],["To make the week start on Monday rather than Sunday, set this variable.  Note                                   ",{}],["|",{"inverse":true}],["~                     ",{"fg":4,"bold":true}]],"36":[["~                   ",{"fg":4,"bold":true}],["|",{"inverse":true}],["126 ",{"fg":3,"bold":true}],["that the value of |g:calendar_wruler| is not affected by this; it should                                        ",{}],["|",{"inverse":true}],["~                     ",{"fg":4,"bold":true}]],"37":[["~                   ",{"fg":4,"bold":true}],["|",{"inverse":true}],["127 ",{"fg":3,"bold":true}],["always begin with Sunday: >                                                                                     ",{}],["|",{"inverse":true}],["~                     ",{"fg":4,"bold":true}]],"38":[["~                   ",{"fg":4,"bold":true}],["|",{"inverse":true}],["128 ",{"fg":3,"bold":true}],["  let g:calendar_monday = 1                                                                                     ",{}],["|",{"inverse":true}],["~                     ",{"fg":4,"bold":true}]],"39":[["~                   ",{"fg":4,"bold":true}],["|",{"inverse":true}],["129 ",{"fg":3,"bold":true}],["<                                                                                                               ",{}],["|",{"inverse":true}],["~                     ",{"fg":4,"bold":true}]],"40":[["~                   ",{"fg":4,"bold":true}],["|",{"inverse":true}],["130 ",{"fg":3,"bold":true}],["                                                                                                                ",{}],["|",{"inverse":true}],["~                     ",{"fg":4,"bold":true}]],"41":[["~                   ",{"fg":4,"bold":true}],["|",{"inverse":true}],["131 ",{"fg":3,"bold":true}],["                                                *g:calendar_weeknm*                                             ",{}],["|",{"inverse":true}],["~                     ",{"fg":4,"bold":true}]],"42":[["~                   ",{"fg":4,"bold":true}],["|",{"inverse":true}],["132 ",{"fg":3,"bold":true}],["To show the week number, set this variable.  There are four valid settings: >                                   ",{}],["|",{"inverse":true}],["~                     ",{"fg":4,"bold":true}]],"43":[["~                   ",{"fg":4,"bold":true}],["|",{"inverse":true}],["133 ",{"fg":3,"bold":true}],["  let g:calendar_weeknm = 1 \" WK01                                                                              ",{}],["|",{"inverse":true}],["~                     ",{"fg":4,"bold":true}]],"44":[["~                   ",{"fg":4,"bold":true}],["|",{"inverse":true}],["134 ",{"fg":3,"bold":true}],["  let g:calendar_weeknm = 2 \" WK 1                                                                              ",{}],["|",{"inverse":true}],["~                     ",{"fg":4,"bold":true}]],"45":[["~                   ",{"fg":4,"bold":true}],["|",{"inverse":true}],["135 ",{"fg":3,"bold":true}],["  let g:calendar_weeknm = 3 \" KW01                                                                              ",{"underline":true}],["|",{"inverse":true}],["~                     ",{"fg":4,"bold":true}]],"46":[["[Name] test.cpp      ",{"inverse":true}],[" NORMAL ",{"bold":true}],[" ",{}],["calendar.txt ",{"bold":true}],["                                                        unix │ utf-8 │ text │  61% ",{}],[" LN 135",{"bold":true}],[":1  ",{}],[" ",{"bold":true,"inverse":true}],[" ~/…/calendar-vim/doc>",{"bold":true}]]},"cursor":{"x":25,"y":45,"visible":true}}],[0.037017,{"lines":{"0":[["\" Press <F1> for hel",{"fg":6,"bold":true}],["|",{"inverse":true}],[" 91 ",{"fg":3,"bold":true}],["                                                *g:calendar_navi*                                               ",{}],["|",{"inverse":true}],["  1 ",{"fg":3,"bold":true}],["\" Press ? for help",{"fg":5,"bold":true}]],"1":[["                    ",{}],["|",{"inverse":true}],[" 92 ",{"fg":3,"bold":true}],["To control the calendar navigator, set this variable.  Acceptable values are                                    ",{}],["|",{"inverse":true}],["  2 ",{"fg":3,"bold":true}],["                  ",{}]],"2":[["▼",{"fg":3,"bold":true}],[" First",{"fg":5,"bold":true}],[" : ",{}],["struct",{"fg":2,"bold":true}],["    ",{}],["|",{"inverse":true}],[" 93 ",{"fg":3,"bold":true}],["'top', 'bottom', or 'both'. >                                                                                   ",{}],["|",{"inverse":true}],["  3 ",{"fg":3,"bold":true}],[".. (up a dir)",{"fg":6,"bold":true}],["     ",{}]],"3":[["    [prototypes]",{"fg":6,"bold":true}],["    ",{}],["|",{"inverse":true}],[" 94 ",{"fg":3,"bold":true}],["  let g:calendar_navi = ''                                                                                      ",{}],["|",{"inverse":true}],["  4 /root/",{"fg":3,"bold":true}],["            ",{}]],"4":[["   ",{}],["+",{"fg":2,"bold":true}],["FirstRun(void)  ",{}],["|",{"inverse":true}],[" 95 ",{"fg":3,"bold":true}],["<                                                                                                               ",{}],["|",{"inverse":true}],["  5 ",{"fg":3,"bold":true}],["▸ .asciinema/",{"fg":6,"bold":true}],["     ",{}]],"5":[["   ",{}],["+",{"fg":2,"bold":true}],["FirstRun2(void) ",{}],["|",{"inverse":true}],[" 96 ",{"fg":3,"bold":true}],["                                                                                                                ",{}],["|",{"inverse":true}],["  6 ",{"fg":3,"bold":true}],["▸ .cache/",{"fg":6,"bold":true}],["         ",{}]],"6":[["                    ",{}],["|",{"inverse":true}],[" 97 ",{"fg":3,"bold":true}],["                                                *g:calendar_navi_label*                                         ",{}],["|",{"inverse":true}],["  7 ",{"fg":3,"bold":true}],["▸ .config/",{"fg":6,"bold":true}],["        ",{}]],"7":[["▼",{"fg":3,"bold":true}],[" Last",{"fg":5,"bold":true}],[" : ",{}],["struct",{"fg":2,"bold":true}],["     ",{}],["|",{"inverse":true}],[" 98 ",{"fg":3,"bold":true}],["                                                *g:calendar_navi_label*                                         ",{}],["|",{"inverse":true}],["  8 ",{"fg":3,"bold":true}],["▸ .dbus/",{"fg":6,"bold":true}],["          ",{}]]},"cursor":{"y":7,"visible":false}}],[0.005765,{"lines":{"7":[["▼",{"fg":3,"bold":true}],[" Last",{"fg":5,"bold":true}],[" : ",{}],["struct",{"fg":2,"bold":true}],["     ",{}],["|",{"inverse":true}],[" 98 ",{"fg":3,"bold":true}],["To set the labels for the calendar navigator, for example to change the                                         ",{}],["|",{"inverse":true}],["  8 ",{"fg":3,"bold":true}],["▸ .dbus/",{"fg":6,"bold":true}],["          ",{}]],"8":[["    [functions]",{"fg":6,"bold":true}],["     ",{}],["|",{"inverse":true}],[" 99 ",{"fg":3,"bold":true}],["language, use this variable.  Entries should be comma separated. >                                              ",{}],["|",{"inverse":true}],["  9 ",{"fg":3,"bold":true}],["▸ .gnupg/",{"fg":6,"bold":true}],["         ",{}]],"9":[["   ",{}],["+",{"fg":2,"bold":true}],["FirstRun(void)  ",{}],["|",{"inverse":true}],["100 ",{"fg":3,"bold":true}],["  let g:calendar_navi_label = 'Prev,Today,Next'                                                                 ",{}],["|",{"inverse":true}],[" 10 ",{"fg":3,"bold":true}],["▸ .kde/",{"fg":6,"bold":true}],["           ",{}]],"10":[["   ",{}],["+",{"fg":2,"bold":true}],["FirstRun2(void) ",{}],["|",{"inverse":true}],["101 ",{"fg":3,"bold":true}],["<                                                                                                               ",{}],["|",{"inverse":true}],[" 11 ",{"fg":3,"bold":true}],["▸ .local/",{"fg":6,"bold":true}],["         ",{}]],"11":[["   ",{}],["+",{"fg":2,"bold":true}],["~Last()         ",{}],["|",{"inverse":true}],["102 ",{"fg":3,"bold":true}],["                                                                                                                ",{}],["|",{"inverse":true}],[" 12 ",{"fg":3,"bold":true}],["▸ .pki/",{"fg":6,"bold":true}],["           ",{}]],"12":[["   ",{}],["+",{"fg":2,"bold":true}],["SecondRun(void) ",{}],["|",{"inverse":true}],["103 ",{"fg":3,"bold":true}],["                                                *g:calendar_erafmt*                                             ",{}],["|",{"inverse":true}],[" 13 ",{"fg":3,"bold":true}],["▸ .ssh/",{"fg":6,"bold":true}],["           ",{}]],"13":[["   ",{}],["+",{"fg":2,"bold":true}],["SecondRun2(void)",{}],["|",{"inverse":true}],["104 ",{"fg":3,"bold":true}],["To change the dating system, set the following variable.  Include the name of                                   ",{}],["|",{"inverse":true}],[" 14 ",{"fg":3,"bold":true}],["▸ .vim/",{"fg":6,"bold":true}],["           ",{}]],"14":[["                    ",{}],["|",{"inverse":true}],["105 ",{"fg":3,"bold":true}],["the dating system and its offset from the Georgian calendar (A.D.).  For                                        ",{}],["|",{"inverse":true}],[" 15 ",{"fg":3,"bold":true}],["▸ diary/",{"fg":6,"bold":true}],["          ",{}]],"15":[["▼",{"fg":3,"bold":true}],[" Second",{"fg":5,"bold":true}],[" : ",{}],["struct",{"fg":2,"bold":true}],["   ",{}],["|",{"inverse":true}],["106 ",{"fg":3,"bold":true}],["example, to use the current Japanese era (Heisei), you would set: >                                             ",{}],["|",{"inverse":true}],[" 16 ",{"fg":3,"bold":true}],["▸ temp/",{"fg":6,"bold":true}],["           ",{}]],"16":[["    [prototypes]",{"fg":6,"bold":true}],["    ",{}],["|",{"inverse":true}],["107 ",{"fg":3,"bold":true}],["  let g:calendar_erafmt = 'Heisei,-1988'                                                                        ",{}],["|",{"inverse":true}],[" 17 ",{"fg":3,"bold":true}],["  .bash_history   ",{}]],"17":[["   ",{}],["+",{"fg":2,"bold":true}],["SecondRun(void) ",{}],["|",{"inverse":true}],["108 ",{"fg":3,"bold":true}],["<                                                                                                               ",{}],["|",{"inverse":true}],[" 18 ",{"fg":3,"bold":true}],["  .bash_logout    ",{}]],"18":[["   ",{}],["+",{"fg":2,"bold":true}],["SecondRun2(void)",{}],["|",{"inverse":true}],["109 ",{"fg":3,"bold":true}],["                                                                                                                ",{}],["|",{"inverse":true}],[" 19 ",{"fg":3,"bold":true}],["  .bash_profile   ",{"underline":true}]],"19":[["                    ",{}],["|",{"inverse":true}],["110 ",{"fg":3,"bold":true}],["                                                *g:calendar_mruler*                                             ",{}],["|",{"inverse":true}],[" 20 ",{"fg":3,"bold":true}],["  .bashrc         ",{}]],"20":[["▼",{"fg":3,"bold":true}],[" ",{}],["functions",{"fg":6,"bold":true}],["         ",{}],["|",{"inverse":true}],["111 ",{"fg":3,"bold":true}],["To change the month names for the calendar headings, set this variable.  The                                    ",{}],["|",{"inverse":true}],[" 21 ",{"fg":3,"bold":true}],["  .cshrc          ",{}]],"21":[["    main(int argc, c",{"underline":true}],["|",{"inverse":true}],["112 ",{"fg":3,"bold":true}],["value is expected to be a comma-separated list of twelve values, starting with                                  ",{}],["|",{"inverse":true}],[" 22 ",{"fg":3,"bold":true}],["  .dmrc           ",{}]],"22":[["~                   ",{"fg":4,"bold":true}],["|",{"inverse":true}],["113 ",{"fg":3,"bold":true}],["Janurary: >                                                                                                     ",{}],["|",{"inverse":true}],[" 23 ",{"fg":3,"bold":true}],["  .esd_auth       ",{}]],"23":[["~                   ",{"fg":4,"bold":true}],["|",{"inverse":true}],["114 ",{"fg":3,"bold":true}],["  let g:calendar_mruler = 'Jan,Feb,Mar,Apr,May,Jun,Jul,Aug,Sep,Oct,Nov,Dec'                                     ",{}],["|",{"inverse":true}],[" 24 ",{"fg":3,"bold":true}],["  .gtkrc-2.0      ",{}]],"24":[["~                   ",{"fg":4,"bold":true}],["|",{"inverse":true}],["115 ",{"fg":3,"bold":true}],["<                                                                                                               ",{}],["|",{"inverse":true}],[" 25 ",{"fg":3,"bold":true}],["  .gtkrc-2.0-kde4 ",{}]],"25":[["~                   ",{"fg":4,"bold":true}],["|",{"inverse":true}],["116 ",{"fg":3,"bold":true}],["                                                                                                                ",{}],["|",{"inverse":true}],[" 26 ",{"fg":3,"bold":true}],["  .lesshst        ",{}]],"26":[["~                   ",{"fg":4,"bold":true}],["|",{"inverse":true}],["117 ",{"fg":3,"bold":true}],["                                                *g:calendar_wruler*                                             ",{}],["|",{"inverse":true}],[" 27 ",{"fg":3,"bold":true}],["  .tcshrc         ",{}]],"27":[["~                   ",{"fg":4,"bold":true}],["|",{"inverse":true}],["118 ",{"fg":3,"bold":true}],["To change the week names for the calendar headings, set this variable.  The                                     ",{}],["|",{"inverse":true}],[" 28 ",{"fg":3,"bold":true}],["  .viminfo        ",{}]],"28":[["~                   ",{"fg":4,"bold":true}],["|",{"inverse":true}],["119 ",{"fg":3,"bold":true}],["value is expected to be a space-separated list of seven values, starting with                                   ",{}],["|",{"inverse":true}],[" 29 ",{"fg":3,"bold":true}],["  .vimrc          ",{}]],"29":[["~                   ",{"fg":4,"bold":true}],["|",{"inverse":true}],["120 ",{"fg":3,"bold":true}],["Sunday: >                                                                                                       ",{}],["|",{"inverse":true}],[" 30 ",{"fg":3,"bold":true}],["  .xsession-errors",{}]],"30":[["~                   ",{"fg":4,"bold":true}],["|",{"inverse":true}],["121 ",{"fg":3,"bold":true}],["  let g:calendar_wruler = 'Su Mo Tu We Th Fr Sa'                                                                ",{}],["|",{"inverse":true}],[" 31 ",{"fg":3,"bold":true}],["  anaconda-ks.cfg ",{}]],"31":[["~                   ",{"fg":4,"bold":true}],["|",{"inverse":true}],["122 ",{"fg":3,"bold":true}],["<                                                                                                               ",{}],["|",{"inverse":true}],[" 32 ",{"fg":3,"bold":true}],["  initial-setup-ks",{}]],"32":[["~                   ",{"fg":4,"bold":true}],["|",{"inverse":true}],["123 ",{"fg":3,"bold":true}],["                                                                                                                ",{}],["|",{"inverse":true}],[" 33 ",{"fg":3,"bold":true}],["  test.c          ",{}]],"33":[["~                   ",{"fg":4,"bold":true}],["|",{"inverse":true}],["124 ",{"fg":3,"bold":true}],["                                                *g:calendar_monday*                                             ",{}],["|",{"inverse":true}],[" 34 ",{"fg":3,"bold":true}],["  test.cpp        ",{}]],"34":[["~                   ",{"fg":4,"bold":true}],["|",{"inverse":true}],["125 ",{"fg":3,"bold":true}],["To make the week start on Monday rather than Sunday, set this variable.  Note                                   ",{}],["|",{"inverse":true}],[" 35 ",{"fg":3,"bold":true}],["  .test.cpp.swp   ",{}]],"35":[["~                   ",{"fg":4,"bold":true}],["|",{"inverse":true}],["126 ",{"fg":3,"bold":true}],["that the value of |g:calendar_wruler| is not affected by this; it should                                        ",{}],["|",{"inverse":true}],["~                     ",{"fg":4,"bold":true}]],"36":[["~                   ",{"fg":4,"bold":true}],["|",{"inverse":true}],["127 ",{"fg":3,"bold":true}],["always begin with Sunday: >                                                                                     ",{}],["|",{"inverse":true}],["~                     ",{"fg":4,"bold":true}]],"37":[["~                   ",{"fg":4,"bold":true}],["|",{"inverse":true}],["128 ",{"fg":3,"bold":true}],["  let g:calendar_monday = 1                                                                                     ",{}],["|",{"inverse":true}],["~                     ",{"fg":4,"bold":true}]],"38":[["~                   ",{"fg":4,"bold":true}],["|",{"inverse":true}],["129 ",{"fg":3,"bold":true}],["<                                                                                                               ",{}],["|",{"inverse":true}],["~                     ",{"fg":4,"bold":true}]],"39":[["~                   ",{"fg":4,"bold":true}],["|",{"inverse":true}],["130 ",{"fg":3,"bold":true}],["                                                                                                                ",{}],["|",{"inverse":true}],["~                     ",{"fg":4,"bold":true}]],"40":[["~                   ",{"fg":4,"bold":true}],["|",{"inverse":true}],["131 ",{"fg":3,"bold":true}],["                                                *g:calendar_weeknm*                                             ",{}],["|",{"inverse":true}],["~                     ",{"fg":4,"bold":true}]],"41":[["~                   ",{"fg":4,"bold":true}],["|",{"inverse":true}],["132 ",{"fg":3,"bold":true}],["To show the week number, set this variable.  There are four valid settings: >                                   ",{}],["|",{"inverse":true}],["~                     ",{"fg":4,"bold":true}]],"42":[["~                   ",{"fg":4,"bold":true}],["|",{"inverse":true}],["133 ",{"fg":3,"bold":true}],["  let g:calendar_weeknm = 1 \" WK01                                                                              ",{}],["|",{"inverse":true}],["~                     ",{"fg":4,"bold":true}]],"43":[["~                   ",{"fg":4,"bold":true}],["|",{"inverse":true}],["134 ",{"fg":3,"bold":true}],["  let g:calendar_weeknm = 2 \" WK 1                                                                              ",{}],["|",{"inverse":true}],["~                     ",{"fg":4,"bold":true}]],"44":[["~                   ",{"fg":4,"bold":true}],["|",{"inverse":true}],["135 ",{"fg":3,"bold":true}],["  let g:calendar_weeknm = 3 \" KW01                                                                              ",{}],["|",{"inverse":true}],["~                     ",{"fg":4,"bold":true}]],"45":[["~                   ",{"fg":4,"bold":true}],["|",{"inverse":true}],["136 ",{"fg":3,"bold":true}],["  let g:calendar_weeknm = 4 \" KW 1                                                                              ",{"underline":true}],["|",{"inverse":true}],["~                     ",{"fg":4,"bold":true}]],"46":[["[Name] test.cpp      ",{"inverse":true}],[" NORMAL ",{"bold":true}],[" ",{}],["calendar.txt ",{"bold":true}],["                                                        unix │ utf-8 │ text │  61% ",{}],[" LN 136",{"bold":true}],[":1  ",{}],[" ",{"bold":true,"inverse":true}],[" ~/…/calendar-vim/doc>",{"bold":true}]]},"cursor":{"y":45,"visible":true}}],[0.016495,{"lines":{"0":[["\" Press <F1> for hel",{"fg":6,"bold":true}],["|",{"inverse":true}],[" 92 ",{"fg":3,"bold":true}],["To control the calendar navigator, set this variable.  Acceptable values are                                    ",{}],["|",{"inverse":true}],["  1 ",{"fg":3,"bold":true}],["\" Press ? for help",{"fg":5,"bold":true}]],"1":[["                    ",{}],["|",{"inverse":true}],[" 93 ",{"fg":3,"bold":true}],["'top', 'bottom', or 'both'. >                                                                                   ",{}],["|",{"inverse":true}],["  2 ",{"fg":3,"bold":true}],["                  ",{}]],"2":[["▼",{"fg":3,"bold":true}],[" First",{"fg":5,"bold":true}],[" : ",{}],["struct",{"fg":2,"bold":true}],["    ",{}],["|",{"inverse":true}],[" 94 ",{"fg":3,"bold":true}],["  let g:calendar_navi = ''                                                                                      ",{}],["|",{"inverse":true}],["  3 ",{"fg":3,"bold":true}],[".. (up a dir)",{"fg":6,"bold":true}],["     ",{}]],"3":[["    [prototypes]",{"fg":6,"bold":true}],["    ",{}],["|",{"inverse":true}],[" 95 ",{"fg":3,"bold":true}],["<                                                                                                               ",{}],["|",{"inverse":true}],["  4 /root/",{"fg":3,"bold":true}],["            ",{}]],"4":[["   ",{}],["+",{"fg":2,"bold":true}],["FirstRun(void)  ",{}],["|",{"inverse":true}],[" 96 ",{"fg":3,"bold":true}],["                                                                                                                ",{}],["|",{"inverse":true}],["  5 ",{"fg":3,"bold":true}],["▸ .asciinema/",{"fg":6,"bold":true}],["     ",{}]],"5":[["   ",{}],["+",{"fg":2,"bold":true}],["FirstRun2(void) ",{}],["|",{"inverse":true}],[" 97 ",{"fg":3,"bold":true}],["                                                *g:calendar_navi_label*                                         ",{}],["|",{"inverse":true}],["  6 ",{"fg":3,"bold":true}],["▸ .cache/",{"fg":6,"bold":true}],["         ",{}]],"6":[["                    ",{}],["|",{"inverse":true}],[" 98 ",{"fg":3,"bold":true}],["To set the labels for the calendar navigator, for example to change the                                         ",{}],["|",{"inverse":true}],["  7 ",{"fg":3,"bold":true}],["▸ .config/",{"fg":6,"bold":true}],["        ",{}]],"7":[["▼",{"fg":3,"bold":true}],[" Last",{"fg":5,"bold":true}],[" : ",{}],["struct",{"fg":2,"bold":true}],["     ",{}],["|",{"inverse":true}],[" 99 ",{"fg":3,"bold":true}],["language, use this variable.  Entries should be comma separated. >                                              ",{}],["|",{"inverse":true}],["  8 ",{"fg":3,"bold":true}],["▸ .dbus/",{"fg":6,"bold":true}],["          ",{}]],"8":[["    [functions]",{"fg":6,"bold":true}],["     ",{}],["|",{"inverse":true}],["100 ",{"fg":3,"bold":true}],["  let g:calendar_navi_label = 'Prev,Today,Next'                                                                 ",{}],["|",{"inverse":true}],["  9 ",{"fg":3,"bold":true}],["▸ .gnupg/",{"fg":6,"bold":true}],["         ",{}]],"9":[["   ",{}],["+",{"fg":2,"bold":true}],["FirstRun(void)  ",{}],["|",{"inverse":true}],["101 ",{"fg":3,"bold":true}],["<                                                                                                               ",{}],["|",{"inverse":true}],[" 10 ",{"fg":3,"bold":true}],["▸ .kde/",{"fg":6,"bold":true}],["           ",{}]],"10":[["   ",{}],["+",{"fg":2,"bold":true}],["FirstRun2(void) ",{}],["|",{"inverse":true}],["102 ",{"fg":3,"bold":true}],["                                                                                                                ",{}],["|",{"inverse":true}],[" 11 ",{"fg":3,"bold":true}],["▸ .local/",{"fg":6,"bold":true}],["         ",{}]],"11":[["   ",{}],["+",{"fg":2,"bold":true}],["~Last()         ",{}],["|",{"inverse":true}],["103 ",{"fg":3,"bold":true}],["                                                *g:calendar_erafmt*                                             ",{}],["|",{"inverse":true}],[" 12 ",{"fg":3,"bold":true}],["▸ .pki/",{"fg":6,"bold":true}],["           ",{}]],"12":[["   ",{}],["+",{"fg":2,"bold":true}],["SecondRun(void) ",{}],["|",{"inverse":true}],["104 ",{"fg":3,"bold":true}],["To change the dating system, set the following variable.  Include the name of                                   ",{}],["|",{"inverse":true}],[" 13 ",{"fg":3,"bold":true}],["▸ .ssh/",{"fg":6,"bold":true}],["           ",{}]],"13":[["   ",{}],["+",{"fg":2,"bold":true}],["SecondRun2(void)",{}],["|",{"inverse":true}],["105 ",{"fg":3,"bold":true}],["the dating system and its offset from the Georgian calendar (A.D.).  For                                        ",{}],["|",{"inverse":true}],[" 14 ",{"fg":3,"bold":true}],["▸ .vim/",{"fg":6,"bold":true}],["           ",{}]],"14":[["                    ",{}],["|",{"inverse":true}],["106 ",{"fg":3,"bold":true}],["example, to use the current Japanese era (Heisei), you would set: >                                             ",{}],["|",{"inverse":true}],[" 15 ",{"fg":3,"bold":true}],["▸ diary/",{"fg":6,"bold":true}],["          ",{}]],"15":[["▼",{"fg":3,"bold":true}],[" Second",{"fg":5,"bold":true}],[" : ",{}],["struct",{"fg":2,"bold":true}],["   ",{}],["|",{"inverse":true}],["107 ",{"fg":3,"bold":true}],["  let g:calendar_erafmt = 'Heisei,-1988'                                                                        ",{}],["|",{"inverse":true}],[" 16 ",{"fg":3,"bold":true}],["▸ temp/",{"fg":6,"bold":true}],["           ",{}]],"16":[["    [prototypes]",{"fg":6,"bold":true}],["    ",{}],["|",{"inverse":true}],["108 ",{"fg":3,"bold":true}],["<                                                                                                               ",{}],["|",{"inverse":true}],[" 17 ",{"fg":3,"bold":true}],["  .bash_history   ",{}]],"17":[["   ",{}],["+",{"fg":2,"bold":true}],["SecondRun(void) ",{}],["|",{"inverse":true}],["109 ",{"fg":3,"bold":true}],["                                                                                                                ",{}],["|",{"inverse":true}],[" 18 ",{"fg":3,"bold":true}],["  .bash_logout    ",{}]],"18":[["   ",{}],["+",{"fg":2,"bold":true}],["SecondRun2(void)",{}],["|",{"inverse":true}],["110 ",{"fg":3,"bold":true}],["                                                *g:calendar_mruler*                                             ",{}],["|",{"inverse":true}],[" 19 ",{"fg":3,"bold":true}],["  .bash_profile   ",{"underline":true}]],"19":[["                    ",{}],["|",{"inverse":true}],["111 ",{"fg":3,"bold":true}],["To change the month names for the calendar headings, set this variable.  The                                    ",{}],["|",{"inverse":true}],[" 20 ",{"fg":3,"bold":true}],["  .bashrc         ",{}]],"20":[["▼",{"fg":3,"bold":true}],[" ",{}],["functions",{"fg":6,"bold":true}],["         ",{}],["|",{"inverse":true}],["112 ",{"fg":3,"bold":true}],["value is expected to be a comma-separated list of twelve values, starting with                                  ",{}],["|",{"inverse":true}],[" 21 ",{"fg":3,"bold":true}],["  .cshrc          ",{}]],"21":[["    main(int argc, c",{"underline":true}],["|",{"inverse":true}],["113 ",{"fg":3,"bold":true}],["Janurary: >                                                                                                     ",{}],["|",{"inverse":true}],[" 22 ",{"fg":3,"bold":true}],["  .dmrc           ",{}]],"22":[["~                   ",{"fg":4,"bold":true}],["|",{"inverse":true}],["114 ",{"fg":3,"bold":true}],["  let g:calendar_mruler = 'Jan,Feb,Mar,Apr,May,Jun,Jul,Aug,Sep,Oct,Nov,Dec'                                     ",{}],["|",{"inverse":true}],[" 23 ",{"fg":3,"bold":true}],["  .esd_auth       ",{}]],"23":[["~                   ",{"fg":4,"bold":true}],["|",{"inverse":true}],["115 ",{"fg":3,"bold":true}],["<                                                                                                               ",{}],["|",{"inverse":true}],[" 24 ",{"fg":3,"bold":true}],["  .gtkrc-2.0      ",{}]],"24":[["~                   ",{"fg":4,"bold":true}],["|",{"inverse":true}],["116 ",{"fg":3,"bold":true}],["                                                                                                                ",{}],["|",{"inverse":true}],[" 25 ",{"fg":3,"bold":true}],["  .gtkrc-2.0-kde4 ",{}]],"25":[["~                   ",{"fg":4,"bold":true}],["|",{"inverse":true}],["117 ",{"fg":3,"bold":true}],["                                                *g:calendar_wruler*                                             ",{}],["|",{"inverse":true}],[" 26 ",{"fg":3,"bold":true}],["  .lesshst        ",{}]],"26":[["~                   ",{"fg":4,"bold":true}],["|",{"inverse":true}],["118 ",{"fg":3,"bold":true}],["To change the week names for the calendar headings, set this variable.  The                                     ",{}],["|",{"inverse":true}],[" 27 ",{"fg":3,"bold":true}],["  .tcshrc         ",{}]],"27":[["~                   ",{"fg":4,"bold":true}],["|",{"inverse":true}],["119 ",{"fg":3,"bold":true}],["value is expected to be a space-separated list of seven values, starting with                                   ",{}],["|",{"inverse":true}],[" 28 ",{"fg":3,"bold":true}],["  .viminfo        ",{}]],"28":[["~                   ",{"fg":4,"bold":true}],["|",{"inverse":true}],["120 ",{"fg":3,"bold":true}],["Sunday: >                                                                                                       ",{}],["|",{"inverse":true}],[" 29 ",{"fg":3,"bold":true}],["  .vimrc          ",{}]],"29":[["~                   ",{"fg":4,"bold":true}],["|",{"inverse":true}],["121 ",{"fg":3,"bold":true}],["  let g:calendar_wruler = 'Su Mo Tu We Th Fr Sa'                                                                ",{}],["|",{"inverse":true}],[" 30 ",{"fg":3,"bold":true}],["  .xsession-errors",{}]]},"cursor":{"x":112,"y":29,"visible":false}}],[0.007196,{"lines":{"30":[["~                   ",{"fg":4,"bold":true}],["|",{"inverse":true}],["122 ",{"fg":3,"bold":true}],["<                                                                                                               ",{}],["|",{"inverse":true}],[" 31 ",{"fg":3,"bold":true}],["  anaconda-ks.cfg ",{}]],"31":[["~                   ",{"fg":4,"bold":true}],["|",{"inverse":true}],["123 ",{"fg":3,"bold":true}],["                                                                                                                ",{}],["|",{"inverse":true}],[" 32 ",{"fg":3,"bold":true}],["  initial-setup-ks",{}]],"32":[["~                   ",{"fg":4,"bold":true}],["|",{"inverse":true}],["124 ",{"fg":3,"bold":true}],["                                                *g:calendar_monday*                                             ",{}],["|",{"inverse":true}],[" 33 ",{"fg":3,"bold":true}],["  test.c          ",{}]],"33":[["~                   ",{"fg":4,"bold":true}],["|",{"inverse":true}],["125 ",{"fg":3,"bold":true}],["To make the week start on Monday rather than Sunday, set this variable.  Note                                   ",{}],["|",{"inverse":true}],[" 34 ",{"fg":3,"bold":true}],["  test.cpp        ",{}]],"34":[["~                   ",{"fg":4,"bold":true}],["|",{"inverse":true}],["126 ",{"fg":3,"bold":true}],["that the value of |g:calendar_wruler| is not affected by this; it should                                        ",{}],["|",{"inverse":true}],[" 35 ",{"fg":3,"bold":true}],["  .test.cpp.swp   ",{}]],"35":[["~                   ",{"fg":4,"bold":true}],["|",{"inverse":true}],["127 ",{"fg":3,"bold":true}],["always begin with Sunday: >                                                                                     ",{}],["|",{"inverse":true}],["~                     ",{"fg":4,"bold":true}]],"36":[["~                   ",{"fg":4,"bold":true}],["|",{"inverse":true}],["128 ",{"fg":3,"bold":true}],["  let g:calendar_monday = 1                                                                                     ",{}],["|",{"inverse":true}],["~                     ",{"fg":4,"bold":true}]],"37":[["~                   ",{"fg":4,"bold":true}],["|",{"inverse":true}],["129 ",{"fg":3,"bold":true}],["<                                                                                                               ",{}],["|",{"inverse":true}],["~                     ",{"fg":4,"bold":true}]],"38":[["~                   ",{"fg":4,"bold":true}],["|",{"inverse":true}],["130 ",{"fg":3,"bold":true}],["                                                                                                                ",{}],["|",{"inverse":true}],["~                     ",{"fg":4,"bold":true}]],"39":[["~                   ",{"fg":4,"bold":true}],["|",{"inverse":true}],["131 ",{"fg":3,"bold":true}],["                                                *g:calendar_weeknm*                                             ",{}],["|",{"inverse":true}],["~                     ",{"fg":4,"bold":true}]],"40":[["~                   ",{"fg":4,"bold":true}],["|",{"inverse":true}],["132 ",{"fg":3,"bold":true}],["To show the week number, set this variable.  There are four valid settings: >                                   ",{}],["|",{"inverse":true}],["~                     ",{"fg":4,"bold":true}]],"41":[["~                   ",{"fg":4,"bold":true}],["|",{"inverse":true}],["133 ",{"fg":3,"bold":true}],["  let g:calendar_weeknm = 1 \" WK01                                                                              ",{}],["|",{"inverse":true}],["~                     ",{"fg":4,"bold":true}]],"42":[["~                   ",{"fg":4,"bold":true}],["|",{"inverse":true}],["134 ",{"fg":3,"bold":true}],["  let g:calendar_weeknm = 2 \" WK 1                                                                              ",{}],["|",{"inverse":true}],["~                     ",{"fg":4,"bold":true}]],"43":[["~                   ",{"fg":4,"bold":true}],["|",{"inverse":true}],["135 ",{"fg":3,"bold":true}],["  let g:calendar_weeknm = 3 \" KW01                                                                              ",{}],["|",{"inverse":true}],["~                     ",{"fg":4,"bold":true}]],"44":[["~                   ",{"fg":4,"bold":true}],["|",{"inverse":true}],["136 ",{"fg":3,"bold":true}],["  let g:calendar_weeknm = 4 \" KW 1                                                                              ",{}],["|",{"inverse":true}],["~                     ",{"fg":4,"bold":true}]],"45":[["~                   ",{"fg":4,"bold":true}],["|",{"inverse":true}],["137 ",{"fg":3,"bold":true}],["  let g:calendar_weeknm = 5 \" 1                                                                                 ",{"underline":true}],["|",{"inverse":true}],["~                     ",{"fg":4,"bold":true}]],"46":[["[Name] test.cpp      ",{"inverse":true}],[" NORMAL ",{"bold":true}],[" ",{}],["calendar.txt ",{"bold":true}],["                                                        unix │ utf-8 │ text │  62% ",{}],[" LN 137",{"bold":true}],[":1  ",{}],[" ",{"bold":true,"inverse":true}],[" ~/…/calendar-vim/doc>",{"bold":true}]]},"cursor":{"x":25,"y":45,"visible":true}}],[0.031356,{"lines":{"0":[["\" Press <F1> for hel",{"fg":6,"bold":true}],["|",{"inverse":true}],[" 93 ",{"fg":3,"bold":true}],["'top', 'bottom', or 'both'. >                                                                                   ",{}],["|",{"inverse":true}],["  1 ",{"fg":3,"bold":true}],["\" Press ? for help",{"fg":5,"bold":true}]],"1":[["                    ",{}],["|",{"inverse":true}],[" 94 ",{"fg":3,"bold":true}],["  let g:calendar_navi = ''                                                                                      ",{}],["|",{"inverse":true}],["  2 ",{"fg":3,"bold":true}],["                  ",{}]],"2":[["▼",{"fg":3,"bold":true}],[" First",{"fg":5,"bold":true}],[" : ",{}],["struct",{"fg":2,"bold":true}],["    ",{}],["|",{"inverse":true}],[" 95 ",{"fg":3,"bold":true}],["<                                                                                                               ",{}],["|",{"inverse":true}],["  3 ",{"fg":3,"bold":true}],[".. (up a dir)",{"fg":6,"bold":true}],["     ",{}]],"3":[["    [prototypes]",{"fg":6,"bold":true}],["    ",{}],["|",{"inverse":true}],[" 96 ",{"fg":3,"bold":true}],["                                                                                                                ",{}],["|",{"inverse":true}],["  4 /root/",{"fg":3,"bold":true}],["            ",{}]],"4":[["   ",{}],["+",{"fg":2,"bold":true}],["FirstRun(void)  ",{}],["|",{"inverse":true}],[" 97 ",{"fg":3,"bold":true}],["                                                *g:calendar_navi_label*                                         ",{}],["|",{"inverse":true}],["  5 ",{"fg":3,"bold":true}],["▸ .asciinema/",{"fg":6,"bold":true}],["     ",{}]],"5":[["   ",{}],["+",{"fg":2,"bold":true}],["FirstRun2(void) ",{}],["|",{"inverse":true}],[" 98 ",{"fg":3,"bold":true}],["To set the labels for the calendar navigator, for example to change the                                         ",{}],["|",{"inverse":true}],["  6 ",{"fg":3,"bold":true}],["▸ .cache/",{"fg":6,"bold":true}],["         ",{}]],"6":[["                    ",{}],["|",{"inverse":true}],[" 99 ",{"fg":3,"bold":true}],["language, use this variable.  Entries should be comma separated. >                                              ",{}],["|",{"inverse":true}],["  7 ",{"fg":3,"bold":true}],["▸ .config/",{"fg":6,"bold":true}],["        ",{}]],"7":[["▼",{"fg":3,"bold":true}],[" Last",{"fg":5,"bold":true}],[" : ",{}],["struct",{"fg":2,"bold":true}],["     ",{}],["|",{"inverse":true}],["100 ",{"fg":3,"bold":true}],["language, use this variable.  Entries should be comma separated. >                                              ",{}],["|",{"inverse":true}],["  8 ",{"fg":3,"bold":true}],["▸ .dbus/",{"fg":6,"bold":true}],["          ",{}]]},"cursor":{"y":7,"visible":false}}],[0.005662,{"lines":{"7":[["▼",{"fg":3,"bold":true}],[" Last",{"fg":5,"bold":true}],[" : ",{}],["struct",{"fg":2,"bold":true}],["     ",{}],["|",{"inverse":true}],["100 ",{"fg":3,"bold":true}],["  let g:calendar_navi_label = 'Prev,Today,Next'                                                                 ",{}],["|",{"inverse":true}],["  8 ",{"fg":3,"bold":true}],["▸ .dbus/",{"fg":6,"bold":true}],["          ",{}]],"8":[["    [functions]",{"fg":6,"bold":true}],["     ",{}],["|",{"inverse":true}],["101 ",{"fg":3,"bold":true}],["<                                                                                                               ",{}],["|",{"inverse":true}],["  9 ",{"fg":3,"bold":true}],["▸ .gnupg/",{"fg":6,"bold":true}],["         ",{}]],"9":[["   ",{}],["+",{"fg":2,"bold":true}],["FirstRun(void)  ",{}],["|",{"inverse":true}],["102 ",{"fg":3,"bold":true}],["                                                                                                                ",{}],["|",{"inverse":true}],[" 10 ",{"fg":3,"bold":true}],["▸ .kde/",{"fg":6,"bold":true}],["           ",{}]],"10":[["   ",{}],["+",{"fg":2,"bold":true}],["FirstRun2(void) ",{}],["|",{"inverse":true}],["103 ",{"fg":3,"bold":true}],["                                                *g:calendar_erafmt*                                             ",{}],["|",{"inverse":true}],[" 11 ",{"fg":3,"bold":true}],["▸ .local/",{"fg":6,"bold":true}],["         ",{}]],"11":[["   ",{}],["+",{"fg":2,"bold":true}],["~Last()         ",{}],["|",{"inverse":true}],["104 ",{"fg":3,"bold":true}],["To change the dating system, set the following variable.  Include the name of                                   ",{}],["|",{"inverse":true}],[" 12 ",{"fg":3,"bold":true}],["▸ .pki/",{"fg":6,"bold":true}],["           ",{}]],"12":[["   ",{}],["+",{"fg":2,"bold":true}],["SecondRun(void) ",{}],["|",{"inverse":true}],["105 ",{"fg":3,"bold":true}],["the dating system and its offset from the Georgian calendar (A.D.).  For                                        ",{}],["|",{"inverse":true}],[" 13 ",{"fg":3,"bold":true}],["▸ .ssh/",{"fg":6,"bold":true}],["           ",{}]],"13":[["   ",{}],["+",{"fg":2,"bold":true}],["SecondRun2(void)",{}],["|",{"inverse":true}],["106 ",{"fg":3,"bold":true}],["example, to use the current Japanese era (Heisei), you would set: >                                             ",{}],["|",{"inverse":true}],[" 14 ",{"fg":3,"bold":true}],["▸ .vim/",{"fg":6,"bold":true}],["           ",{}]],"14":[["                    ",{}],["|",{"inverse":true}],["107 ",{"fg":3,"bold":true}],["  let g:calendar_erafmt = 'Heisei,-1988'                                                                        ",{}],["|",{"inverse":true}],[" 15 ",{"fg":3,"bold":true}],["▸ diary/",{"fg":6,"bold":true}],["          ",{}]],"15":[["▼",{"fg":3,"bold":true}],[" Second",{"fg":5,"bold":true}],[" : ",{}],["struct",{"fg":2,"bold":true}],["   ",{}],["|",{"inverse":true}],["108 ",{"fg":3,"bold":true}],["<                                                                                                               ",{}],["|",{"inverse":true}],[" 16 ",{"fg":3,"bold":true}],["▸ temp/",{"fg":6,"bold":true}],["           ",{}]],"16":[["    [prototypes]",{"fg":6,"bold":true}],["    ",{}],["|",{"inverse":true}],["109 ",{"fg":3,"bold":true}],["                                                                                                                ",{}],["|",{"inverse":true}],[" 17 ",{"fg":3,"bold":true}],["  .bash_history   ",{}]],"17":[["   ",{}],["+",{"fg":2,"bold":true}],["SecondRun(void) ",{}],["|",{"inverse":true}],["110 ",{"fg":3,"bold":true}],["                                                *g:calendar_mruler*                                             ",{}],["|",{"inverse":true}],[" 18 ",{"fg":3,"bold":true}],["  .bash_logout    ",{}]],"18":[["   ",{}],["+",{"fg":2,"bold":true}],["SecondRun2(void)",{}],["|",{"inverse":true}],["111 ",{"fg":3,"bold":true}],["To change the month names for the calendar headings, set this variable.  The                                    ",{}],["|",{"inverse":true}],[" 19 ",{"fg":3,"bold":true}],["  .bash_profile   ",{"underline":true}]],"19":[["                    ",{}],["|",{"inverse":true}],["112 ",{"fg":3,"bold":true}],["value is expected to be a comma-separated list of twelve values, starting with                                  ",{}],["|",{"inverse":true}],[" 20 ",{"fg":3,"bold":true}],["  .bashrc         ",{}]],"20":[["▼",{"fg":3,"bold":true}],[" ",{}],["functions",{"fg":6,"bold":true}],["         ",{}],["|",{"inverse":true}],["113 ",{"fg":3,"bold":true}],["Janurary: >                                                                                                     ",{}],["|",{"inverse":true}],[" 21 ",{"fg":3,"bold":true}],["  .cshrc          ",{}]],"21":[["    main(int argc, c",{"underline":true}],["|",{"inverse":true}],["114 ",{"fg":3,"bold":true}],["  let g:calendar_mruler = 'Jan,Feb,Mar,Apr,May,Jun,Jul,Aug,Sep,Oct,Nov,Dec'                                     ",{}],["|",{"inverse":true}],[" 22 ",{"fg":3,"bold":true}],["  .dmrc           ",{}]],"22":[["~                   ",{"fg":4,"bold":true}],["|",{"inverse":true}],["115 ",{"fg":3,"bold":true}],["<                                                                                                               ",{}],["|",{"inverse":true}],[" 23 ",{"fg":3,"bold":true}],["  .esd_auth       ",{}]],"23":[["~                   ",{"fg":4,"bold":true}],["|",{"inverse":true}],["116 ",{"fg":3,"bold":true}],["                                                                                                                ",{}],["|",{"inverse":true}],[" 24 ",{"fg":3,"bold":true}],["  .gtkrc-2.0      ",{}]],"24":[["~                   ",{"fg":4,"bold":true}],["|",{"inverse":true}],["117 ",{"fg":3,"bold":true}],["                                                *g:calendar_wruler*                                             ",{}],["|",{"inverse":true}],[" 25 ",{"fg":3,"bold":true}],["  .gtkrc-2.0-kde4 ",{}]],"25":[["~                   ",{"fg":4,"bold":true}],["|",{"inverse":true}],["118 ",{"fg":3,"bold":true}],["To change the week names for the calendar headings, set this variable.  The                                     ",{}],["|",{"inverse":true}],[" 26 ",{"fg":3,"bold":true}],["  .lesshst        ",{}]],"26":[["~                   ",{"fg":4,"bold":true}],["|",{"inverse":true}],["119 ",{"fg":3,"bold":true}],["value is expected to be a space-separated list of seven values, starting with                                   ",{}],["|",{"inverse":true}],[" 27 ",{"fg":3,"bold":true}],["  .tcshrc         ",{}]],"27":[["~                   ",{"fg":4,"bold":true}],["|",{"inverse":true}],["120 ",{"fg":3,"bold":true}],["Sunday: >                                                                                                       ",{}],["|",{"inverse":true}],[" 28 ",{"fg":3,"bold":true}],["  .viminfo        ",{}]],"28":[["~                   ",{"fg":4,"bold":true}],["|",{"inverse":true}],["121 ",{"fg":3,"bold":true}],["  let g:calendar_wruler = 'Su Mo Tu We Th Fr Sa'                                                                ",{}],["|",{"inverse":true}],[" 29 ",{"fg":3,"bold":true}],["  .vimrc          ",{}]],"29":[["~                   ",{"fg":4,"bold":true}],["|",{"inverse":true}],["122 ",{"fg":3,"bold":true}],["<                                                                                                               ",{}],["|",{"inverse":true}],[" 30 ",{"fg":3,"bold":true}],["  .xsession-errors",{}]],"30":[["~                   ",{"fg":4,"bold":true}],["|",{"inverse":true}],["123 ",{"fg":3,"bold":true}],["                                                                                                                ",{}],["|",{"inverse":true}],[" 31 ",{"fg":3,"bold":true}],["  anaconda-ks.cfg ",{}]],"31":[["~                   ",{"fg":4,"bold":true}],["|",{"inverse":true}],["124 ",{"fg":3,"bold":true}],["                                                *g:calendar_monday*                                             ",{}],["|",{"inverse":true}],[" 32 ",{"fg":3,"bold":true}],["  initial-setup-ks",{}]],"32":[["~                   ",{"fg":4,"bold":true}],["|",{"inverse":true}],["125 ",{"fg":3,"bold":true}],["To make the week start on Monday rather than Sunday, set this variable.  Note                                   ",{}],["|",{"inverse":true}],[" 33 ",{"fg":3,"bold":true}],["  test.c          ",{}]],"33":[["~                   ",{"fg":4,"bold":true}],["|",{"inverse":true}],["126 ",{"fg":3,"bold":true}],["that the value of |g:calendar_wruler| is not affected by this; it should                                        ",{}],["|",{"inverse":true}],[" 34 ",{"fg":3,"bold":true}],["  test.cpp        ",{}]],"34":[["~                   ",{"fg":4,"bold":true}],["|",{"inverse":true}],["127 ",{"fg":3,"bold":true}],["always begin with Sunday: >                                                                                     ",{}],["|",{"inverse":true}],[" 35 ",{"fg":3,"bold":true}],["  .test.cpp.swp   ",{}]],"35":[["~                   ",{"fg":4,"bold":true}],["|",{"inverse":true}],["128 ",{"fg":3,"bold":true}],["  let g:calendar_monday = 1                                                                                     ",{}],["|",{"inverse":true}],["~                     ",{"fg":4,"bold":true}]],"36":[["~                   ",{"fg":4,"bold":true}],["|",{"inverse":true}],["129 ",{"fg":3,"bold":true}],["<                                                                                                               ",{}],["|",{"inverse":true}],["~                     ",{"fg":4,"bold":true}]],"37":[["~                   ",{"fg":4,"bold":true}],["|",{"inverse":true}],["130 ",{"fg":3,"bold":true}],["                                                                                                                ",{}],["|",{"inverse":true}],["~                     ",{"fg":4,"bold":true}]],"38":[["~                   ",{"fg":4,"bold":true}],["|",{"inverse":true}],["131 ",{"fg":3,"bold":true}],["                                                *g:calendar_weeknm*                                             ",{}],["|",{"inverse":true}],["~                     ",{"fg":4,"bold":true}]],"39":[["~                   ",{"fg":4,"bold":true}],["|",{"inverse":true}],["132 ",{"fg":3,"bold":true}],["To show the week number, set this variable.  There are four valid settings: >                                   ",{}],["|",{"inverse":true}],["~                     ",{"fg":4,"bold":true}]],"40":[["~                   ",{"fg":4,"bold":true}],["|",{"inverse":true}],["133 ",{"fg":3,"bold":true}],["  let g:calendar_weeknm = 1 \" WK01                                                                              ",{}],["|",{"inverse":true}],["~                     ",{"fg":4,"bold":true}]],"41":[["~                   ",{"fg":4,"bold":true}],["|",{"inverse":true}],["134 ",{"fg":3,"bold":true}],["  let g:calendar_weeknm = 2 \" WK 1                                                                              ",{}],["|",{"inverse":true}],["~                     ",{"fg":4,"bold":true}]],"42":[["~                   ",{"fg":4,"bold":true}],["|",{"inverse":true}],["135 ",{"fg":3,"bold":true}],["  let g:calendar_weeknm = 3 \" KW01                                                                              ",{}],["|",{"inverse":true}],["~                     ",{"fg":4,"bold":true}]],"43":[["~                   ",{"fg":4,"bold":true}],["|",{"inverse":true}],["136 ",{"fg":3,"bold":true}],["  let g:calendar_weeknm = 4 \" KW 1                                                                              ",{}],["|",{"inverse":true}],["~                     ",{"fg":4,"bold":true}]],"44":[["~                   ",{"fg":4,"bold":true}],["|",{"inverse":true}],["137 ",{"fg":3,"bold":true}],["  let g:calendar_weeknm = 5 \" 1                                                                                 ",{}],["|",{"inverse":true}],["~                     ",{"fg":4,"bold":true}]],"45":[["~                   ",{"fg":4,"bold":true}],["|",{"inverse":true}],["138 ",{"fg":3,"bold":true}],["<                                                                                                               ",{"underline":true}],["|",{"inverse":true}],["~                     ",{"fg":4,"bold":true}]],"46":[["[Name] test.cpp      ",{"inverse":true}],[" NORMAL ",{"bold":true}],[" ",{}],["calendar.txt ",{"bold":true}],["                                                        unix │ utf-8 │ text │  62% ",{}],[" LN 138",{"bold":true}],[":1  ",{}],[" ",{"bold":true,"inverse":true}],[" ~/…/calendar-vim/doc>",{"bold":true}]]},"cursor":{"y":45,"visible":true}}],[0.023352,{"lines":{"47":[["                                                                                                                                                     j          ",{}]]},"cursor":{"visible":false}}],[0.00305,{"lines":{"0":[["\" Press <F1> for hel",{"fg":6,"bold":true}],["|",{"inverse":true}],[" 94 ",{"fg":3,"bold":true}],["  let g:calendar_navi = ''                                                                                      ",{}],["|",{"inverse":true}],["  1 ",{"fg":3,"bold":true}],["\" Press ? for help",{"fg":5,"bold":true}]],"1":[["                    ",{}],["|",{"inverse":true}],[" 95 ",{"fg":3,"bold":true}],["<                                                                                                               ",{}],["|",{"inverse":true}],["  2 ",{"fg":3,"bold":true}],["                  ",{}]],"2":[["▼",{"fg":3,"bold":true}],[" First",{"fg":5,"bold":true}],[" : ",{}],["struct",{"fg":2,"bold":true}],["    ",{}],["|",{"inverse":true}],[" 96 ",{"fg":3,"bold":true}],["                                                                                                                ",{}],["|",{"inverse":true}],["  3 ",{"fg":3,"bold":true}],[".. (up a dir)",{"fg":6,"bold":true}],["     ",{}]],"3":[["    [prototypes]",{"fg":6,"bold":true}],["    ",{}],["|",{"inverse":true}],[" 97 ",{"fg":3,"bold":true}],["                                                *g:calendar_navi_label*                                         ",{}],["|",{"inverse":true}],["  4 /root/",{"fg":3,"bold":true}],["            ",{}]],"4":[["   ",{}],["+",{"fg":2,"bold":true}],["FirstRun(void)  ",{}],["|",{"inverse":true}],[" 98 ",{"fg":3,"bold":true}],["To set the labels for the calendar navigator, for example to change the                                         ",{}],["|",{"inverse":true}],["  5 ",{"fg":3,"bold":true}],["▸ .asciinema/",{"fg":6,"bold":true}],["     ",{}]],"5":[["   ",{}],["+",{"fg":2,"bold":true}],["FirstRun2(void) ",{}],["|",{"inverse":true}],[" 99 ",{"fg":3,"bold":true}],["language, use this variable.  Entries should be comma separated. >                                              ",{}],["|",{"inverse":true}],["  6 ",{"fg":3,"bold":true}],["▸ .cache/",{"fg":6,"bold":true}],["         ",{}]],"6":[["                    ",{}],["|",{"inverse":true}],["100 ",{"fg":3,"bold":true}],["  let g:calendar_navi_label = 'Prev,Today,Next'                                                                 ",{}],["|",{"inverse":true}],["  7 ",{"fg":3,"bold":true}],["▸ .config/",{"fg":6,"bold":true}],["        ",{}]],"7":[["▼",{"fg":3,"bold":true}],[" Last",{"fg":5,"bold":true}],[" : ",{}],["struct",{"fg":2,"bold":true}],["     ",{}],["|",{"inverse":true}],["101 ",{"fg":3,"bold":true}],["<                                                                                                               ",{}],["|",{"inverse":true}],["  8 ",{"fg":3,"bold":true}],["▸ .dbus/",{"fg":6,"bold":true}],["          ",{}]],"8":[["    [functions]",{"fg":6,"bold":true}],["     ",{}],["|",{"inverse":true}],["102 ",{"fg":3,"bold":true}],["                                                                                                                ",{}],["|",{"inverse":true}],["  9 ",{"fg":3,"bold":true}],["▸ .gnupg/",{"fg":6,"bold":true}],["         ",{}]],"9":[["   ",{}],["+",{"fg":2,"bold":true}],["FirstRun(void)  ",{}],["|",{"inverse":true}],["103 ",{"fg":3,"bold":true}],["                                                *g:calendar_erafmt*                                             ",{}],["|",{"inverse":true}],[" 10 ",{"fg":3,"bold":true}],["▸ .kde/",{"fg":6,"bold":true}],["           ",{}]],"10":[["   ",{}],["+",{"fg":2,"bold":true}],["FirstRun2(void) ",{}],["|",{"inverse":true}],["104 ",{"fg":3,"bold":true}],["To change the dating system, set the following variable.  Include the name of                                   ",{}],["|",{"inverse":true}],[" 11 ",{"fg":3,"bold":true}],["▸ .local/",{"fg":6,"bold":true}],["         ",{}]],"11":[["   ",{}],["+",{"fg":2,"bold":true}],["~Last()         ",{}],["|",{"inverse":true}],["105 ",{"fg":3,"bold":true}],["the dating system and its offset from the Georgian calendar (A.D.).  For                                        ",{}],["|",{"inverse":true}],[" 12 ",{"fg":3,"bold":true}],["▸ .pki/",{"fg":6,"bold":true}],["           ",{}]],"12":[["   ",{}],["+",{"fg":2,"bold":true}],["SecondRun(void) ",{}],["|",{"inverse":true}],["106 ",{"fg":3,"bold":true}],["example, to use the current Japanese era (Heisei), you would set: >                                             ",{}],["|",{"inverse":true}],[" 13 ",{"fg":3,"bold":true}],["▸ .ssh/",{"fg":6,"bold":true}],["           ",{}]],"13":[["   ",{}],["+",{"fg":2,"bold":true}],["SecondRun2(void)",{}],["|",{"inverse":true}],["107 ",{"fg":3,"bold":true}],["  let g:calendar_erafmt = 'Heisei,-1988'                                                                        ",{}],["|",{"inverse":true}],[" 14 ",{"fg":3,"bold":true}],["▸ .vim/",{"fg":6,"bold":true}],["           ",{}]],"14":[["                    ",{}],["|",{"inverse":true}],["108 ",{"fg":3,"bold":true}],["<                                                                                                               ",{}],["|",{"inverse":true}],[" 15 ",{"fg":3,"bold":true}],["▸ diary/",{"fg":6,"bold":true}],["          ",{}]],"15":[["▼",{"fg":3,"bold":true}],[" Second",{"fg":5,"bold":true}],[" : ",{}],["struct",{"fg":2,"bold":true}],["   ",{}],["|",{"inverse":true}],["109 ",{"fg":3,"bold":true}],["                                                                                                                ",{}],["|",{"inverse":true}],[" 16 ",{"fg":3,"bold":true}],["▸ temp/",{"fg":6,"bold":true}],["           ",{}]],"16":[["    [prototypes]",{"fg":6,"bold":true}],["    ",{}],["|",{"inverse":true}],["110 ",{"fg":3,"bold":true}],["                                                *g:calendar_mruler*                                             ",{}],["|",{"inverse":true}],[" 17 ",{"fg":3,"bold":true}],["  .bash_history   ",{}]],"17":[["   ",{}],["+",{"fg":2,"bold":true}],["SecondRun(void) ",{}],["|",{"inverse":true}],["111 ",{"fg":3,"bold":true}],["To change the month names for the calendar headings, set this variable.  The                                    ",{}],["|",{"inverse":true}],[" 18 ",{"fg":3,"bold":true}],["  .bash_logout    ",{}]],"18":[["   ",{}],["+",{"fg":2,"bold":true}],["SecondRun2(void)",{}],["|",{"inverse":true}],["112 ",{"fg":3,"bold":true}],["value is expected to be a comma-separated list of twelve values, starting with                                  ",{}],["|",{"inverse":true}],[" 19 ",{"fg":3,"bold":true}],["  .bash_profile   ",{"underline":true}]],"19":[["                    ",{}],["|",{"inverse":true}],["113 ",{"fg":3,"bold":true}],["Janurary: >                                                                                                     ",{}],["|",{"inverse":true}],[" 20 ",{"fg":3,"bold":true}],["  .bashrc         ",{}]],"20":[["▼",{"fg":3,"bold":true}],[" ",{}],["functions",{"fg":6,"bold":true}],["         ",{}],["|",{"inverse":true}],["114 ",{"fg":3,"bold":true}],["  let g:calendar_mruler = 'Jan,Feb,Mar,Apr,May,Jun,Jul,Aug,Sep,Oct,Nov,Dec'                                     ",{}],["|",{"inverse":true}],[" 21 ",{"fg":3,"bold":true}],["  .cshrc          ",{}]],"21":[["    main(int argc, c",{"underline":true}],["|",{"inverse":true}],["115 ",{"fg":3,"bold":true}],["<                                                                                                               ",{}],["|",{"inverse":true}],[" 22 ",{"fg":3,"bold":true}],["  .dmrc           ",{}]],"22":[["~                   ",{"fg":4,"bold":true}],["|",{"inverse":true}],["116 ",{"fg":3,"bold":true}],["                                                                                                                ",{}],["|",{"inverse":true}],[" 23 ",{"fg":3,"bold":true}],["  .esd_auth       ",{}]],"23":[["~                   ",{"fg":4,"bold":true}],["|",{"inverse":true}],["117 ",{"fg":3,"bold":true}],["                                                *g:calendar_wruler*                                             ",{}],["|",{"inverse":true}],[" 24 ",{"fg":3,"bold":true}],["  .gtkrc-2.0      ",{}]],"24":[["~                   ",{"fg":4,"bold":true}],["|",{"inverse":true}],["118 ",{"fg":3,"bold":true}],["To change the week names for the calendar headings, set this variable.  The                                     ",{}],["|",{"inverse":true}],[" 25 ",{"fg":3,"bold":true}],["  .gtkrc-2.0-kde4 ",{}]],"25":[["~                   ",{"fg":4,"bold":true}],["|",{"inverse":true}],["119 ",{"fg":3,"bold":true}],["value is expected to be a space-separated list of seven values, starting with                                   ",{}],["|",{"inverse":true}],[" 26 ",{"fg":3,"bold":true}],["  .lesshst        ",{}]],"26":[["~                   ",{"fg":4,"bold":true}],["|",{"inverse":true}],["120 ",{"fg":3,"bold":true}],["Sunday: >                                                                                                       ",{}],["|",{"inverse":true}],[" 27 ",{"fg":3,"bold":true}],["  .tcshrc         ",{}]],"27":[["~                   ",{"fg":4,"bold":true}],["|",{"inverse":true}],["121 ",{"fg":3,"bold":true}],["  let g:calendar_wruler = 'Su Mo Tu We Th Fr Sa'                                                                ",{}],["|",{"inverse":true}],[" 28 ",{"fg":3,"bold":true}],["  .viminfo        ",{}]],"28":[["~                   ",{"fg":4,"bold":true}],["|",{"inverse":true}],["122 ",{"fg":3,"bold":true}],["<                                                                                                               ",{}],["|",{"inverse":true}],[" 29 ",{"fg":3,"bold":true}],["  .vimrc          ",{}]],"29":[["~                   ",{"fg":4,"bold":true}],["|",{"inverse":true}],["123 ",{"fg":3,"bold":true}],["                                                                                                                ",{}],["|",{"inverse":true}],[" 30 ",{"fg":3,"bold":true}],["  .xsession-errors",{}]],"47":[["                                                                                                                                                                ",{}]]},"cursor":{"x":112,"y":29}}],[0.025119,{"lines":{"30":[["~                   ",{"fg":4,"bold":true}],["|",{"inverse":true}],["124 ",{"fg":3,"bold":true}],["                                                *g:calendar_monday*                                             ",{}],["|",{"inverse":true}],[" 31 ",{"fg":3,"bold":true}],["  anaconda-ks.cfg ",{}]],"31":[["~                   ",{"fg":4,"bold":true}],["|",{"inverse":true}],["125 ",{"fg":3,"bold":true}],["To make the week start on Monday rather than Sunday, set this variable.  Note                                   ",{}],["|",{"inverse":true}],[" 32 ",{"fg":3,"bold":true}],["  initial-setup-ks",{}]],"32":[["~                   ",{"fg":4,"bold":true}],["|",{"inverse":true}],["126 ",{"fg":3,"bold":true}],["that the value of |g:calendar_wruler| is not affected by this; it should                                        ",{}],["|",{"inverse":true}],[" 33 ",{"fg":3,"bold":true}],["  test.c          ",{}]],"33":[["~                   ",{"fg":4,"bold":true}],["|",{"inverse":true}],["127 ",{"fg":3,"bold":true}],["always begin with Sunday: >                                                                                     ",{}],["|",{"inverse":true}],[" 34 ",{"fg":3,"bold":true}],["  test.cpp        ",{}]],"34":[["~                   ",{"fg":4,"bold":true}],["|",{"inverse":true}],["128 ",{"fg":3,"bold":true}],["  let g:calendar_monday = 1                                                                                     ",{}],["|",{"inverse":true}],[" 35 ",{"fg":3,"bold":true}],["  .test.cpp.swp   ",{}]],"35":[["~                   ",{"fg":4,"bold":true}],["|",{"inverse":true}],["129 ",{"fg":3,"bold":true}],["<                                                                                                               ",{}],["|",{"inverse":true}],["~                     ",{"fg":4,"bold":true}]],"36":[["~                   ",{"fg":4,"bold":true}],["|",{"inverse":true}],["130 ",{"fg":3,"bold":true}],["                                                                                                                ",{}],["|",{"inverse":true}],["~                     ",{"fg":4,"bold":true}]],"37":[["~                   ",{"fg":4,"bold":true}],["|",{"inverse":true}],["131 ",{"fg":3,"bold":true}],["                                                                                                                ",{}],["|",{"inverse":true}],["~                     ",{"fg":4,"bold":true}]]},"cursor":{"x":40,"y":37}}],[0.016182,{"lines":{"0":[["\" Press <F1> for hel",{"fg":6,"bold":true}],["|",{"inverse":true}],[" 95 ",{"fg":3,"bold":true}],["<                                                                                                               ",{}],["|",{"inverse":true}],["  1 ",{"fg":3,"bold":true}],["\" Press ? for help",{"fg":5,"bold":true}]],"1":[["                    ",{}],["|",{"inverse":true}],[" 96 ",{"fg":3,"bold":true}],["                                                                                                                ",{}],["|",{"inverse":true}],["  2 ",{"fg":3,"bold":true}],["                  ",{}]],"2":[["▼",{"fg":3,"bold":true}],[" First",{"fg":5,"bold":true}],[" : ",{}],["struct",{"fg":2,"bold":true}],["    ",{}],["|",{"inverse":true}],[" 97 ",{"fg":3,"bold":true}],["                                                *g:calendar_navi_label*                                         ",{}],["|",{"inverse":true}],["  3 ",{"fg":3,"bold":true}],[".. (up a dir)",{"fg":6,"bold":true}],["     ",{}]],"3":[["    [prototypes]",{"fg":6,"bold":true}],["    ",{}],["|",{"inverse":true}],[" 98 ",{"fg":3,"bold":true}],["To set the labels for the calendar navigator, for example to change the                                         ",{}],["|",{"inverse":true}],["  4 /root/",{"fg":3,"bold":true}],["            ",{}]],"4":[["   ",{}],["+",{"fg":2,"bold":true}],["FirstRun(void)  ",{}],["|",{"inverse":true}],[" 99 ",{"fg":3,"bold":true}],["language, use this variable.  Entries should be comma separated. >                                              ",{}],["|",{"inverse":true}],["  5 ",{"fg":3,"bold":true}],["▸ .asciinema/",{"fg":6,"bold":true}],["     ",{}]],"5":[["   ",{}],["+",{"fg":2,"bold":true}],["FirstRun2(void) ",{}],["|",{"inverse":true}],["100 ",{"fg":3,"bold":true}],["  let g:calendar_navi_label = 'Prev,Today,Next'                                                                 ",{}],["|",{"inverse":true}],["  6 ",{"fg":3,"bold":true}],["▸ .cache/",{"fg":6,"bold":true}],["         ",{}]],"6":[["                    ",{}],["|",{"inverse":true}],["101 ",{"fg":3,"bold":true}],["<                                                                                                               ",{}],["|",{"inverse":true}],["  7 ",{"fg":3,"bold":true}],["▸ .config/",{"fg":6,"bold":true}],["        ",{}]],"7":[["▼",{"fg":3,"bold":true}],[" Last",{"fg":5,"bold":true}],[" : ",{}],["struct",{"fg":2,"bold":true}],["     ",{}],["|",{"inverse":true}],["102 ",{"fg":3,"bold":true}],["                                                                                                                ",{}],["|",{"inverse":true}],["  8 ",{"fg":3,"bold":true}],["▸ .dbus/",{"fg":6,"bold":true}],["          ",{}]],"8":[["    [functions]",{"fg":6,"bold":true}],["     ",{}],["|",{"inverse":true}],["103 ",{"fg":3,"bold":true}],["                                                *g:calendar_erafmt*                                             ",{}],["|",{"inverse":true}],["  9 ",{"fg":3,"bold":true}],["▸ .gnupg/",{"fg":6,"bold":true}],["         ",{}]],"9":[["   ",{}],["+",{"fg":2,"bold":true}],["FirstRun(void)  ",{}],["|",{"inverse":true}],["104 ",{"fg":3,"bold":true}],["To change the dating system, set the following variable.  Include the name of                                   ",{}],["|",{"inverse":true}],[" 10 ",{"fg":3,"bold":true}],["▸ .kde/",{"fg":6,"bold":true}],["           ",{}]],"10":[["   ",{}],["+",{"fg":2,"bold":true}],["FirstRun2(void) ",{}],["|",{"inverse":true}],["105 ",{"fg":3,"bold":true}],["the dating system and its offset from the Georgian calendar (A.D.).  For                                        ",{}],["|",{"inverse":true}],[" 11 ",{"fg":3,"bold":true}],["▸ .local/",{"fg":6,"bold":true}],["         ",{}]],"11":[["   ",{}],["+",{"fg":2,"bold":true}],["~Last()         ",{}],["|",{"inverse":true}],["106 ",{"fg":3,"bold":true}],["example, to use the current Japanese era (Heisei), you would set: >                                             ",{}],["|",{"inverse":true}],[" 12 ",{"fg":3,"bold":true}],["▸ .pki/",{"fg":6,"bold":true}],["           ",{}]],"12":[["   ",{}],["+",{"fg":2,"bold":true}],["SecondRun(void) ",{}],["|",{"inverse":true}],["107 ",{"fg":3,"bold":true}],["  let g:calendar_erafmt = 'Heisei,-1988'                                                                        ",{}],["|",{"inverse":true}],[" 13 ",{"fg":3,"bold":true}],["▸ .ssh/",{"fg":6,"bold":true}],["           ",{}]],"13":[["   ",{}],["+",{"fg":2,"bold":true}],["SecondRun2(void)",{}],["|",{"inverse":true}],["108 ",{"fg":3,"bold":true}],["<                                                                                                               ",{}],["|",{"inverse":true}],[" 14 ",{"fg":3,"bold":true}],["▸ .vim/",{"fg":6,"bold":true}],["           ",{}]],"14":[["                    ",{}],["|",{"inverse":true}],["109 ",{"fg":3,"bold":true}],["                                                                                                                ",{}],["|",{"inverse":true}],[" 15 ",{"fg":3,"bold":true}],["▸ diary/",{"fg":6,"bold":true}],["          ",{}]],"15":[["▼",{"fg":3,"bold":true}],[" Second",{"fg":5,"bold":true}],[" : ",{}],["struct",{"fg":2,"bold":true}],["   ",{}],["|",{"inverse":true}],["110 ",{"fg":3,"bold":true}],["                                                *g:calendar_mruler*                                             ",{}],["|",{"inverse":true}],[" 16 ",{"fg":3,"bold":true}],["▸ temp/",{"fg":6,"bold":true}],["           ",{}]],"16":[["    [prototypes]",{"fg":6,"bold":true}],["    ",{}],["|",{"inverse":true}],["111 ",{"fg":3,"bold":true}],["To change the month names for the calendar headings, set this variable.  The                                    ",{}],["|",{"inverse":true}],[" 17 ",{"fg":3,"bold":true}],["  .bash_history   ",{}]],"17":[["   ",{}],["+",{"fg":2,"bold":true}],["SecondRun(void) ",{}],["|",{"inverse":true}],["112 ",{"fg":3,"bold":true}],["value is expected to be a comma-separated list of twelve values, starting with                                  ",{}],["|",{"inverse":true}],[" 18 ",{"fg":3,"bold":true}],["  .bash_logout    ",{}]],"18":[["   ",{}],["+",{"fg":2,"bold":true}],["SecondRun2(void)",{}],["|",{"inverse":true}],["113 ",{"fg":3,"bold":true}],["Janurary: >                                                                                                     ",{}],["|",{"inverse":true}],[" 19 ",{"fg":3,"bold":true}],["  .bash_profile   ",{"underline":true}]],"19":[["                    ",{}],["|",{"inverse":true}],["114 ",{"fg":3,"bold":true}],["  let g:calendar_mruler = 'Jan,Feb,Mar,Apr,May,Jun,Jul,Aug,Sep,Oct,Nov,Dec'                                     ",{}],["|",{"inverse":true}],[" 20 ",{"fg":3,"bold":true}],["  .bashrc         ",{}]],"20":[["▼",{"fg":3,"bold":true}],[" ",{}],["functions",{"fg":6,"bold":true}],["         ",{}],["|",{"inverse":true}],["115 ",{"fg":3,"bold":true}],["<                                                                                                               ",{}],["|",{"inverse":true}],[" 21 ",{"fg":3,"bold":true}],["  .cshrc          ",{}]],"21":[["    main(int argc, c",{"underline":true}],["|",{"inverse":true}],["116 ",{"fg":3,"bold":true}],["                                                                                                                ",{}],["|",{"inverse":true}],[" 22 ",{"fg":3,"bold":true}],["  .dmrc           ",{}]],"22":[["~                   ",{"fg":4,"bold":true}],["|",{"inverse":true}],["117 ",{"fg":3,"bold":true}],["                                                *g:calendar_wruler*                                             ",{}],["|",{"inverse":true}],[" 23 ",{"fg":3,"bold":true}],["  .esd_auth       ",{}]],"23":[["~                   ",{"fg":4,"bold":true}],["|",{"inverse":true}],["118 ",{"fg":3,"bold":true}],["To change the week names for the calendar headings, set this variable.  The                                     ",{}],["|",{"inverse":true}],[" 24 ",{"fg":3,"bold":true}],["  .gtkrc-2.0      ",{}]],"24":[["~                   ",{"fg":4,"bold":true}],["|",{"inverse":true}],["119 ",{"fg":3,"bold":true}],["value is expected to be a space-separated list of seven values, starting with                                   ",{}],["|",{"inverse":true}],[" 25 ",{"fg":3,"bold":true}],["  .gtkrc-2.0-kde4 ",{}]],"25":[["~                   ",{"fg":4,"bold":true}],["|",{"inverse":true}],["120 ",{"fg":3,"bold":true}],["Sunday: >                                                                                                       ",{}],["|",{"inverse":true}],[" 26 ",{"fg":3,"bold":true}],["  .lesshst        ",{}]],"26":[["~                   ",{"fg":4,"bold":true}],["|",{"inverse":true}],["121 ",{"fg":3,"bold":true}],["  let g:calendar_wruler = 'Su Mo Tu We Th Fr Sa'                                                                ",{}],["|",{"inverse":true}],[" 27 ",{"fg":3,"bold":true}],["  .tcshrc         ",{}]],"27":[["~                   ",{"fg":4,"bold":true}],["|",{"inverse":true}],["122 ",{"fg":3,"bold":true}],["<                                                                                                               ",{}],["|",{"inverse":true}],[" 28 ",{"fg":3,"bold":true}],["  .viminfo        ",{}]],"28":[["~                   ",{"fg":4,"bold":true}],["|",{"inverse":true}],["123 ",{"fg":3,"bold":true}],["                                                                                                                ",{}],["|",{"inverse":true}],[" 29 ",{"fg":3,"bold":true}],["  .vimrc          ",{}]],"29":[["~                   ",{"fg":4,"bold":true}],["|",{"inverse":true}],["124 ",{"fg":3,"bold":true}],["                                                *g:calendar_monday*                                             ",{}],["|",{"inverse":true}],[" 30 ",{"fg":3,"bold":true}],["  .xsession-errors",{}]],"30":[["~                   ",{"fg":4,"bold":true}],["|",{"inverse":true}],["125 ",{"fg":3,"bold":true}],["To make the week start on Monday rather than Sunday, set this variable.  Note                                   ",{}],["|",{"inverse":true}],[" 31 ",{"fg":3,"bold":true}],["  anaconda-ks.cfg ",{}]],"31":[["~                   ",{"fg":4,"bold":true}],["|",{"inverse":true}],["126 ",{"fg":3,"bold":true}],["that the value of |g:calendar_wruler| is not affected by this; it should                                        ",{}],["|",{"inverse":true}],[" 32 ",{"fg":3,"bold":true}],["  initial-setup-ks",{}]],"32":[["~                   ",{"fg":4,"bold":true}],["|",{"inverse":true}],["127 ",{"fg":3,"bold":true}],["always begin with Sunday: >                                                                                     ",{}],["|",{"inverse":true}],[" 33 ",{"fg":3,"bold":true}],["  test.c          ",{}]],"33":[["~                   ",{"fg":4,"bold":true}],["|",{"inverse":true}],["128 ",{"fg":3,"bold":true}],["  let g:calendar_monday = 1                                                                                     ",{}],["|",{"inverse":true}],[" 34 ",{"fg":3,"bold":true}],["  test.cpp        ",{}]],"34":[["~                   ",{"fg":4,"bold":true}],["|",{"inverse":true}],["129 ",{"fg":3,"bold":true}],["<                                                                                                               ",{}],["|",{"inverse":true}],[" 35 ",{"fg":3,"bold":true}],["  .test.cpp.swp   ",{}]],"35":[["~                   ",{"fg":4,"bold":true}],["|",{"inverse":true}],["130 ",{"fg":3,"bold":true}],["                                                                                                                ",{}],["|",{"inverse":true}],["~                     ",{"fg":4,"bold":true}]],"36":[["~                   ",{"fg":4,"bold":true}],["|",{"inverse":true}],["131 ",{"fg":3,"bold":true}],["                                                *g:calendar_weeknm*                                             ",{}],["|",{"inverse":true}],["~                     ",{"fg":4,"bold":true}]],"37":[["~                   ",{"fg":4,"bold":true}],["|",{"inverse":true}],["132 ",{"fg":3,"bold":true}],["To show the week number, set this variable.  There are four valid settings: >                                   ",{}],["|",{"inverse":true}],["~                     ",{"fg":4,"bold":true}]],"38":[["~                   ",{"fg":4,"bold":true}],["|",{"inverse":true}],["133 ",{"fg":3,"bold":true}],["  let g:calendar_weeknm = 1 \" WK01                                                                              ",{}],["|",{"inverse":true}],["~                     ",{"fg":4,"bold":true}]],"39":[["~                   ",{"fg":4,"bold":true}],["|",{"inverse":true}],["134 ",{"fg":3,"bold":true}],["  let g:calendar_weeknm = 2 \" WK 1                                                                              ",{}],["|",{"inverse":true}],["~                     ",{"fg":4,"bold":true}]],"40":[["~                   ",{"fg":4,"bold":true}],["|",{"inverse":true}],["135 ",{"fg":3,"bold":true}],["  let g:calendar_weeknm = 3 \" KW01                                                                              ",{}],["|",{"inverse":true}],["~                     ",{"fg":4,"bold":true}]],"41":[["~                   ",{"fg":4,"bold":true}],["|",{"inverse":true}],["136 ",{"fg":3,"bold":true}],["  let g:calendar_weeknm = 4 \" KW 1                                                                              ",{}],["|",{"inverse":true}],["~                     ",{"fg":4,"bold":true}]],"42":[["~                   ",{"fg":4,"bold":true}],["|",{"inverse":true}],["137 ",{"fg":3,"bold":true}],["  let g:calendar_weeknm = 5 \" 1                                                                                 ",{}],["|",{"inverse":true}],["~                     ",{"fg":4,"bold":true}]],"43":[["~                   ",{"fg":4,"bold":true}],["|",{"inverse":true}],["138 ",{"fg":3,"bold":true}],["<                                                                                                               ",{}],["|",{"inverse":true}],["~                     ",{"fg":4,"bold":true}]],"44":[["~                   ",{"fg":4,"bold":true}],["|",{"inverse":true}],["139 ",{"fg":3,"bold":true}],["                                                                           ",{"underline":true}],["                                     ",{}],["|",{"inverse":true}],["~                     ",{"fg":4,"bold":true}]],"45":[["~                   ",{"fg":4,"bold":true}],["|",{"inverse":true}],["139 ",{"fg":3,"bold":true}],["                                                                                                                ",{"underline":true}],["|",{"inverse":true}],["~                     ",{"fg":4,"bold":true}]],"46":[["[Name] test.cpp      ",{"inverse":true}],[" NORMAL ",{"bold":true}],[" ",{}],["calendar.txt ",{"bold":true}],["                                                        unix │ utf-8 │ text │  63% ",{}],[" LN 139",{"bold":true}],[":1  ",{}],[" ",{"bold":true,"inverse":true}],[" ~/…/calendar-vim/doc>",{"bold":true}]]},"cursor":{"x":100,"y":44}}],[0.002941,{"lines":{"44":[["~                   ",{"fg":4,"bold":true}],["|",{"inverse":true}],["139 ",{"fg":3,"bold":true}],["                                                                                                                ",{}],["|",{"inverse":true}],["~                     ",{"fg":4,"bold":true}]],"45":[["~                   ",{"fg":4,"bold":true}],["|",{"inverse":true}],["140 ",{"fg":3,"bold":true}],["                                                *g:calendar_datetime*                                           ",{"underline":true}],["|",{"inverse":true}],["~                     ",{"fg":4,"bold":true}]],"46":[["[Name] test.cpp      ",{"inverse":true}],[" NORMAL ",{"bold":true}],[" ",{}],["calendar.txt ",{"bold":true}],["                                                        unix │ utf-8 │ text │  63% ",{}],[" LN 140",{"bold":true}],[":1  ",{}],[" ",{"bold":true,"inverse":true}],[" ~/…/calendar-vim/doc>",{"bold":true}]]},"cursor":{"x":25,"y":45,"visible":true}}],[0.038114,{"lines":{"0":[["\" Press <F1> for hel",{"fg":6,"bold":true}],["|",{"inverse":true}],[" 96 ",{"fg":3,"bold":true}],["                                                                                                                ",{}],["|",{"inverse":true}],["  1 ",{"fg":3,"bold":true}],["\" Press ? for help",{"fg":5,"bold":true}]],"1":[["                    ",{}],["|",{"inverse":true}],[" 97 ",{"fg":3,"bold":true}],["                                                *g:calendar_navi_label*                                         ",{}],["|",{"inverse":true}],["  2 ",{"fg":3,"bold":true}],["                  ",{}]],"2":[["▼",{"fg":3,"bold":true}],[" First",{"fg":5,"bold":true}],[" : ",{}],["struct",{"fg":2,"bold":true}],["    ",{}],["|",{"inverse":true}],[" 98 ",{"fg":3,"bold":true}],["To set the labels for the calendar navigator, for example to change the                                         ",{}],["|",{"inverse":true}],["  3 ",{"fg":3,"bold":true}],[".. (up a dir)",{"fg":6,"bold":true}],["     ",{}]],"3":[["    [prototypes]",{"fg":6,"bold":true}],["    ",{}],["|",{"inverse":true}],[" 99 ",{"fg":3,"bold":true}],["language, use this variable.  Entries should be comma separated. >                                              ",{}],["|",{"inverse":true}],["  4 /root/",{"fg":3,"bold":true}],["            ",{}]],"4":[["   ",{}],["+",{"fg":2,"bold":true}],["FirstRun(void)  ",{}],["|",{"inverse":true}],["100 ",{"fg":3,"bold":true}],["  let g:calendar_navi_label = 'Prev,Today,Next'                                                                 ",{}],["|",{"inverse":true}],["  5 ",{"fg":3,"bold":true}],["▸ .asciinema/",{"fg":6,"bold":true}],["     ",{}]],"5":[["   ",{}],["+",{"fg":2,"bold":true}],["FirstRun2(void) ",{}],["|",{"inverse":true}],["101 ",{"fg":3,"bold":true}],["<                                                                                                               ",{}],["|",{"inverse":true}],["  6 ",{"fg":3,"bold":true}],["▸ .cache/",{"fg":6,"bold":true}],["         ",{}]],"6":[["                    ",{}],["|",{"inverse":true}],["102 ",{"fg":3,"bold":true}],["                                                                                                                ",{}],["|",{"inverse":true}],["  7 ",{"fg":3,"bold":true}],["▸ .config/",{"fg":6,"bold":true}],["        ",{}]],"7":[["▼",{"fg":3,"bold":true}],[" Last",{"fg":5,"bold":true}],[" : ",{}],["struct",{"fg":2,"bold":true}],["     ",{}],["|",{"inverse":true}],["103 ",{"fg":3,"bold":true}],["                                                                                                                ",{}],["|",{"inverse":true}],["  8 ",{"fg":3,"bold":true}],["▸ .dbus/",{"fg":6,"bold":true}],["          ",{}]]},"cursor":{"y":7,"visible":false}}],[0.007423,{"lines":{"7":[["▼",{"fg":3,"bold":true}],[" Last",{"fg":5,"bold":true}],[" : ",{}],["struct",{"fg":2,"bold":true}],["     ",{}],["|",{"inverse":true}],["103 ",{"fg":3,"bold":true}],["                                                *g:calendar_erafmt*                                             ",{}],["|",{"inverse":true}],["  8 ",{"fg":3,"bold":true}],["▸ .dbus/",{"fg":6,"bold":true}],["          ",{}]],"8":[["    [functions]",{"fg":6,"bold":true}],["     ",{}],["|",{"inverse":true}],["104 ",{"fg":3,"bold":true}],["To change the dating system, set the following variable.  Include the name of                                   ",{}],["|",{"inverse":true}],["  9 ",{"fg":3,"bold":true}],["▸ .gnupg/",{"fg":6,"bold":true}],["         ",{}]],"9":[["   ",{}],["+",{"fg":2,"bold":true}],["FirstRun(void)  ",{}],["|",{"inverse":true}],["105 ",{"fg":3,"bold":true}],["the dating system and its offset from the Georgian calendar (A.D.).  For                                        ",{}],["|",{"inverse":true}],[" 10 ",{"fg":3,"bold":true}],["▸ .kde/",{"fg":6,"bold":true}],["           ",{}]],"10":[["   ",{}],["+",{"fg":2,"bold":true}],["FirstRun2(void) ",{}],["|",{"inverse":true}],["106 ",{"fg":3,"bold":true}],["example, to use the current Japanese era (Heisei), you would set: >                                             ",{}],["|",{"inverse":true}],[" 11 ",{"fg":3,"bold":true}],["▸ .local/",{"fg":6,"bold":true}],["         ",{}]],"11":[["   ",{}],["+",{"fg":2,"bold":true}],["~Last()         ",{}],["|",{"inverse":true}],["107 ",{"fg":3,"bold":true}],["  let g:calendar_erafmt = 'Heisei,-1988'                                                                        ",{}],["|",{"inverse":true}],[" 12 ",{"fg":3,"bold":true}],["▸ .pki/",{"fg":6,"bold":true}],["           ",{}]],"12":[["   ",{}],["+",{"fg":2,"bold":true}],["SecondRun(void) ",{}],["|",{"inverse":true}],["108 ",{"fg":3,"bold":true}],["<                                                                                                               ",{}],["|",{"inverse":true}],[" 13 ",{"fg":3,"bold":true}],["▸ .ssh/",{"fg":6,"bold":true}],["           ",{}]],"13":[["   ",{}],["+",{"fg":2,"bold":true}],["SecondRun2(void)",{}],["|",{"inverse":true}],["109 ",{"fg":3,"bold":true}],["                                                                                                                ",{}],["|",{"inverse":true}],[" 14 ",{"fg":3,"bold":true}],["▸ .vim/",{"fg":6,"bold":true}],["           ",{}]],"14":[["                    ",{}],["|",{"inverse":true}],["110 ",{"fg":3,"bold":true}],["                                                *g:calendar_mruler*                                             ",{}],["|",{"inverse":true}],[" 15 ",{"fg":3,"bold":true}],["▸ diary/",{"fg":6,"bold":true}],["          ",{}]],"15":[["▼",{"fg":3,"bold":true}],[" Second",{"fg":5,"bold":true}],[" : ",{}],["struct",{"fg":2,"bold":true}],["   ",{}],["|",{"inverse":true}],["111 ",{"fg":3,"bold":true}],["To change the month names for the calendar headings, set this variable.  The                                    ",{}],["|",{"inverse":true}],[" 16 ",{"fg":3,"bold":true}],["▸ temp/",{"fg":6,"bold":true}],["           ",{}]],"16":[["    [prototypes]",{"fg":6,"bold":true}],["    ",{}],["|",{"inverse":true}],["112 ",{"fg":3,"bold":true}],["value is expected to be a comma-separated list of twelve values, starting with                                  ",{}],["|",{"inverse":true}],[" 17 ",{"fg":3,"bold":true}],["  .bash_history   ",{}]],"17":[["   ",{}],["+",{"fg":2,"bold":true}],["SecondRun(void) ",{}],["|",{"inverse":true}],["113 ",{"fg":3,"bold":true}],["Janurary: >                                                                                                     ",{}],["|",{"inverse":true}],[" 18 ",{"fg":3,"bold":true}],["  .bash_logout    ",{}]],"18":[["   ",{}],["+",{"fg":2,"bold":true}],["SecondRun2(void)",{}],["|",{"inverse":true}],["114 ",{"fg":3,"bold":true}],["  let g:calendar_mruler = 'Jan,Feb,Mar,Apr,May,Jun,Jul,Aug,Sep,Oct,Nov,Dec'                                     ",{}],["|",{"inverse":true}],[" 19 ",{"fg":3,"bold":true}],["  .bash_profile   ",{"underline":true}]],"19":[["                    ",{}],["|",{"inverse":true}],["115 ",{"fg":3,"bold":true}],["<                                                                                                               ",{}],["|",{"inverse":true}],[" 20 ",{"fg":3,"bold":true}],["  .bashrc         ",{}]],"20":[["▼",{"fg":3,"bold":true}],[" ",{}],["functions",{"fg":6,"bold":true}],["         ",{}],["|",{"inverse":true}],["116 ",{"fg":3,"bold":true}],["                                                                                                                ",{}],["|",{"inverse":true}],[" 21 ",{"fg":3,"bold":true}],["  .cshrc          ",{}]],"21":[["    main(int argc, c",{"underline":true}],["|",{"inverse":true}],["117 ",{"fg":3,"bold":true}],["                                                *g:calendar_wruler*                                             ",{}],["|",{"inverse":true}],[" 22 ",{"fg":3,"bold":true}],["  .dmrc           ",{}]],"22":[["~                   ",{"fg":4,"bold":true}],["|",{"inverse":true}],["118 ",{"fg":3,"bold":true}],["To change the week names for the calendar headings, set this variable.  The                                     ",{}],["|",{"inverse":true}],[" 23 ",{"fg":3,"bold":true}],["  .esd_auth       ",{}]],"23":[["~                   ",{"fg":4,"bold":true}],["|",{"inverse":true}],["119 ",{"fg":3,"bold":true}],["value is expected to be a space-separated list of seven values, starting with                                   ",{}],["|",{"inverse":true}],[" 24 ",{"fg":3,"bold":true}],["  .gtkrc-2.0      ",{}]],"24":[["~                   ",{"fg":4,"bold":true}],["|",{"inverse":true}],["120 ",{"fg":3,"bold":true}],["Sunday: >                                                                                                       ",{}],["|",{"inverse":true}],[" 25 ",{"fg":3,"bold":true}],["  .gtkrc-2.0-kde4 ",{}]],"25":[["~                   ",{"fg":4,"bold":true}],["|",{"inverse":true}],["121 ",{"fg":3,"bold":true}],["  let g:calendar_wruler = 'Su Mo Tu We Th Fr Sa'                                                                ",{}],["|",{"inverse":true}],[" 26 ",{"fg":3,"bold":true}],["  .lesshst        ",{}]],"26":[["~                   ",{"fg":4,"bold":true}],["|",{"inverse":true}],["122 ",{"fg":3,"bold":true}],["<                                                                                                               ",{}],["|",{"inverse":true}],[" 27 ",{"fg":3,"bold":true}],["  .tcshrc         ",{}]],"27":[["~                   ",{"fg":4,"bold":true}],["|",{"inverse":true}],["123 ",{"fg":3,"bold":true}],["                                                                                                                ",{}],["|",{"inverse":true}],[" 28 ",{"fg":3,"bold":true}],["  .viminfo        ",{}]],"28":[["~                   ",{"fg":4,"bold":true}],["|",{"inverse":true}],["124 ",{"fg":3,"bold":true}],["                                                *g:calendar_monday*                                             ",{}],["|",{"inverse":true}],[" 29 ",{"fg":3,"bold":true}],["  .vimrc          ",{}]],"29":[["~                   ",{"fg":4,"bold":true}],["|",{"inverse":true}],["125 ",{"fg":3,"bold":true}],["To make the week start on Monday rather than Sunday, set this variable.  Note                                   ",{}],["|",{"inverse":true}],[" 30 ",{"fg":3,"bold":true}],["  .xsession-errors",{}]],"30":[["~                   ",{"fg":4,"bold":true}],["|",{"inverse":true}],["126 ",{"fg":3,"bold":true}],["that the value of |g:calendar_wruler| is not affected by this; it should                                        ",{}],["|",{"inverse":true}],[" 31 ",{"fg":3,"bold":true}],["  anaconda-ks.cfg ",{}]],"31":[["~                   ",{"fg":4,"bold":true}],["|",{"inverse":true}],["127 ",{"fg":3,"bold":true}],["always begin with Sunday: >                                                                                     ",{}],["|",{"inverse":true}],[" 32 ",{"fg":3,"bold":true}],["  initial-setup-ks",{}]],"32":[["~                   ",{"fg":4,"bold":true}],["|",{"inverse":true}],["128 ",{"fg":3,"bold":true}],["  let g:calendar_monday = 1                                                                                     ",{}],["|",{"inverse":true}],[" 33 ",{"fg":3,"bold":true}],["  test.c          ",{}]],"33":[["~                   ",{"fg":4,"bold":true}],["|",{"inverse":true}],["129 ",{"fg":3,"bold":true}],["<                                                                                                               ",{}],["|",{"inverse":true}],[" 34 ",{"fg":3,"bold":true}],["  test.cpp        ",{}]],"34":[["~                   ",{"fg":4,"bold":true}],["|",{"inverse":true}],["130 ",{"fg":3,"bold":true}],["                                                                                                                ",{}],["|",{"inverse":true}],[" 35 ",{"fg":3,"bold":true}],["  .test.cpp.swp   ",{}]],"35":[["~                   ",{"fg":4,"bold":true}],["|",{"inverse":true}],["131 ",{"fg":3,"bold":true}],["                                                *g:calendar_weeknm*                                             ",{}],["|",{"inverse":true}],["~                     ",{"fg":4,"bold":true}]],"36":[["~                   ",{"fg":4,"bold":true}],["|",{"inverse":true}],["132 ",{"fg":3,"bold":true}],["To show the week number, set this variable.  There are four valid settings: >                                   ",{}],["|",{"inverse":true}],["~                     ",{"fg":4,"bold":true}]],"37":[["~                   ",{"fg":4,"bold":true}],["|",{"inverse":true}],["133 ",{"fg":3,"bold":true}],["  let g:calendar_weeknm = 1 \" WK01                                                                              ",{}],["|",{"inverse":true}],["~                     ",{"fg":4,"bold":true}]],"38":[["~                   ",{"fg":4,"bold":true}],["|",{"inverse":true}],["134 ",{"fg":3,"bold":true}],["  let g:calendar_weeknm = 2 \" WK 1                                                                              ",{}],["|",{"inverse":true}],["~                     ",{"fg":4,"bold":true}]],"39":[["~                   ",{"fg":4,"bold":true}],["|",{"inverse":true}],["135 ",{"fg":3,"bold":true}],["  let g:calendar_weeknm = 3 \" KW01                                                                              ",{}],["|",{"inverse":true}],["~                     ",{"fg":4,"bold":true}]],"40":[["~                   ",{"fg":4,"bold":true}],["|",{"inverse":true}],["136 ",{"fg":3,"bold":true}],["  let g:calendar_weeknm = 4 \" KW 1                                                                              ",{}],["|",{"inverse":true}],["~                     ",{"fg":4,"bold":true}]],"41":[["~                   ",{"fg":4,"bold":true}],["|",{"inverse":true}],["137 ",{"fg":3,"bold":true}],["  let g:calendar_weeknm = 5 \" 1                                                                                 ",{}],["|",{"inverse":true}],["~                     ",{"fg":4,"bold":true}]],"42":[["~                   ",{"fg":4,"bold":true}],["|",{"inverse":true}],["138 ",{"fg":3,"bold":true}],["<                                                                                                               ",{}],["|",{"inverse":true}],["~                     ",{"fg":4,"bold":true}]],"43":[["~                   ",{"fg":4,"bold":true}],["|",{"inverse":true}],["139 ",{"fg":3,"bold":true}],["                                                                                                                ",{}],["|",{"inverse":true}],["~                     ",{"fg":4,"bold":true}]],"44":[["~                   ",{"fg":4,"bold":true}],["|",{"inverse":true}],["140 ",{"fg":3,"bold":true}],["                                                *g:calendar_datetime*                                           ",{}],["|",{"inverse":true}],["~                     ",{"fg":4,"bold":true}]],"45":[["~                   ",{"fg":4,"bold":true}],["|",{"inverse":true}],["141 ",{"fg":3,"bold":true}],["To control display of the current date and time, set this variable.                                             ",{"underline":true}],["|",{"inverse":true}],["~                     ",{"fg":4,"bold":true}]],"46":[["[Name] test.cpp      ",{"inverse":true}],[" NORMAL ",{"bold":true}],[" ",{}],["calendar.txt ",{"bold":true}],["                                                        unix │ utf-8 │ text │  64% ",{}],[" LN 141",{"bold":true}],[":1  ",{}],[" ",{"bold":true,"inverse":true}],[" ~/…/calendar-vim/doc>",{"bold":true}]]},"cursor":{"y":45,"visible":true}}],[0.014888,{"lines":{"0":[["\" Press <F1> for hel",{"fg":6,"bold":true}],["|",{"inverse":true}],[" 97 ",{"fg":3,"bold":true}],["                                                *g:calendar_navi_label*                                         ",{}],["|",{"inverse":true}],["  1 ",{"fg":3,"bold":true}],["\" Press ? for help",{"fg":5,"bold":true}]],"1":[["                    ",{}],["|",{"inverse":true}],[" 98 ",{"fg":3,"bold":true}],["To set the labels for the calendar navigator, for example to change the                                         ",{}],["|",{"inverse":true}],["  2 ",{"fg":3,"bold":true}],["                  ",{}]],"2":[["▼",{"fg":3,"bold":true}],[" First",{"fg":5,"bold":true}],[" : ",{}],["struct",{"fg":2,"bold":true}],["    ",{}],["|",{"inverse":true}],[" 99 ",{"fg":3,"bold":true}],["language, use this variable.  Entries should be comma separated. >                                              ",{}],["|",{"inverse":true}],["  3 ",{"fg":3,"bold":true}],[".. (up a dir)",{"fg":6,"bold":true}],["     ",{}]],"3":[["    [prototypes]",{"fg":6,"bold":true}],["    ",{}],["|",{"inverse":true}],["100 ",{"fg":3,"bold":true}],["  let g:calendar_navi_label = 'Prev,Today,Next'                                                                 ",{}],["|",{"inverse":true}],["  4 /root/",{"fg":3,"bold":true}],["            ",{}]],"4":[["   ",{}],["+",{"fg":2,"bold":true}],["FirstRun(void)  ",{}],["|",{"inverse":true}],["101 ",{"fg":3,"bold":true}],["<                                                                                                               ",{}],["|",{"inverse":true}],["  5 ",{"fg":3,"bold":true}],["▸ .asciinema/",{"fg":6,"bold":true}],["     ",{}]],"5":[["   ",{}],["+",{"fg":2,"bold":true}],["FirstRun2(void) ",{}],["|",{"inverse":true}],["102 ",{"fg":3,"bold":true}],["                                                                                                                ",{}],["|",{"inverse":true}],["  6 ",{"fg":3,"bold":true}],["▸ .cache/",{"fg":6,"bold":true}],["         ",{}]],"6":[["                    ",{}],["|",{"inverse":true}],["103 ",{"fg":3,"bold":true}],["                                                *g:calendar_erafmt*                                             ",{}],["|",{"inverse":true}],["  7 ",{"fg":3,"bold":true}],["▸ .config/",{"fg":6,"bold":true}],["        ",{}]],"7":[["▼",{"fg":3,"bold":true}],[" Last",{"fg":5,"bold":true}],[" : ",{}],["struct",{"fg":2,"bold":true}],["     ",{}],["|",{"inverse":true}],["104 ",{"fg":3,"bold":true}],["To change the dating system, set the following variable.  Include the name of                                   ",{}],["|",{"inverse":true}],["  8 ",{"fg":3,"bold":true}],["▸ .dbus/",{"fg":6,"bold":true}],["          ",{}]],"8":[["    [functions]",{"fg":6,"bold":true}],["     ",{}],["|",{"inverse":true}],["105 ",{"fg":3,"bold":true}],["the dating system and its offset from the Georgian calendar (A.D.).  For                                        ",{}],["|",{"inverse":true}],["  9 ",{"fg":3,"bold":true}],["▸ .gnupg/",{"fg":6,"bold":true}],["         ",{}]],"9":[["   ",{}],["+",{"fg":2,"bold":true}],["FirstRun(void)  ",{}],["|",{"inverse":true}],["106 ",{"fg":3,"bold":true}],["example, to use the current Japanese era (Heisei), you would set: >                                             ",{}],["|",{"inverse":true}],[" 10 ",{"fg":3,"bold":true}],["▸ .kde/",{"fg":6,"bold":true}],["           ",{}]],"10":[["   ",{}],["+",{"fg":2,"bold":true}],["FirstRun2(void) ",{}],["|",{"inverse":true}],["107 ",{"fg":3,"bold":true}],["  let g:calendar_erafmt = 'Heisei,-1988'                                                                        ",{}],["|",{"inverse":true}],[" 11 ",{"fg":3,"bold":true}],["▸ .local/",{"fg":6,"bold":true}],["         ",{}]],"11":[["   ",{}],["+",{"fg":2,"bold":true}],["~Last()         ",{}],["|",{"inverse":true}],["108 ",{"fg":3,"bold":true}],["<                                                                                                               ",{}],["|",{"inverse":true}],[" 12 ",{"fg":3,"bold":true}],["▸ .pki/",{"fg":6,"bold":true}],["           ",{}]],"12":[["   ",{}],["+",{"fg":2,"bold":true}],["SecondRun(void) ",{}],["|",{"inverse":true}],["109 ",{"fg":3,"bold":true}],["                                                                                                                ",{}],["|",{"inverse":true}],[" 13 ",{"fg":3,"bold":true}],["▸ .ssh/",{"fg":6,"bold":true}],["           ",{}]],"13":[["   ",{}],["+",{"fg":2,"bold":true}],["SecondRun2(void)",{}],["|",{"inverse":true}],["110 ",{"fg":3,"bold":true}],["                                                *g:calendar_mruler*                                             ",{}],["|",{"inverse":true}],[" 14 ",{"fg":3,"bold":true}],["▸ .vim/",{"fg":6,"bold":true}],["           ",{}]],"14":[["                    ",{}],["|",{"inverse":true}],["111 ",{"fg":3,"bold":true}],["To change the month names for the calendar headings, set this variable.  The                                    ",{}],["|",{"inverse":true}],[" 15 ",{"fg":3,"bold":true}],["▸ diary/",{"fg":6,"bold":true}],["          ",{}]],"15":[["▼",{"fg":3,"bold":true}],[" Second",{"fg":5,"bold":true}],[" : ",{}],["struct",{"fg":2,"bold":true}],["   ",{}],["|",{"inverse":true}],["112 ",{"fg":3,"bold":true}],["value is expected to be a comma-separated list of twelve values, starting with                                  ",{}],["|",{"inverse":true}],[" 16 ",{"fg":3,"bold":true}],["▸ temp/",{"fg":6,"bold":true}],["           ",{}]],"16":[["    [prototypes]",{"fg":6,"bold":true}],["    ",{}],["|",{"inverse":true}],["113 ",{"fg":3,"bold":true}],["Janurary: >                                                                                                     ",{}],["|",{"inverse":true}],[" 17 ",{"fg":3,"bold":true}],["  .bash_history   ",{}]],"17":[["   ",{}],["+",{"fg":2,"bold":true}],["SecondRun(void) ",{}],["|",{"inverse":true}],["114 ",{"fg":3,"bold":true}],["  let g:calendar_mruler = 'Jan,Feb,Mar,Apr,May,Jun,Jul,Aug,Sep,Oct,Nov,Dec'                                     ",{}],["|",{"inverse":true}],[" 18 ",{"fg":3,"bold":true}],["  .bash_logout    ",{}]],"18":[["   ",{}],["+",{"fg":2,"bold":true}],["SecondRun2(void)",{}],["|",{"inverse":true}],["115 ",{"fg":3,"bold":true}],["<                                                                                                               ",{}],["|",{"inverse":true}],[" 19 ",{"fg":3,"bold":true}],["  .bash_profile   ",{"underline":true}]],"19":[["                    ",{}],["|",{"inverse":true}],["116 ",{"fg":3,"bold":true}],["                                                                                                                ",{}],["|",{"inverse":true}],[" 20 ",{"fg":3,"bold":true}],["  .bashrc         ",{}]],"20":[["▼",{"fg":3,"bold":true}],[" ",{}],["functions",{"fg":6,"bold":true}],["         ",{}],["|",{"inverse":true}],["117 ",{"fg":3,"bold":true}],["                                                *g:calendar_wruler*                                             ",{}],["|",{"inverse":true}],[" 21 ",{"fg":3,"bold":true}],["  .cshrc          ",{}]],"21":[["    main(int argc, c",{"underline":true}],["|",{"inverse":true}],["118 ",{"fg":3,"bold":true}],["To change the week names for the calendar headings, set this variable.  The                                     ",{}],["|",{"inverse":true}],[" 22 ",{"fg":3,"bold":true}],["  .dmrc           ",{}]],"22":[["~                   ",{"fg":4,"bold":true}],["|",{"inverse":true}],["119 ",{"fg":3,"bold":true}],["value is expected to be a space-separated list of seven values, starting with                                   ",{}],["|",{"inverse":true}],[" 23 ",{"fg":3,"bold":true}],["  .esd_auth       ",{}]],"23":[["~                   ",{"fg":4,"bold":true}],["|",{"inverse":true}],["120 ",{"fg":3,"bold":true}],["Sunday: >                                                                                                       ",{}],["|",{"inverse":true}],[" 24 ",{"fg":3,"bold":true}],["  .gtkrc-2.0      ",{}]],"24":[["~                   ",{"fg":4,"bold":true}],["|",{"inverse":true}],["121 ",{"fg":3,"bold":true}],["  let g:calendar_wruler = 'Su Mo Tu We Th Fr Sa'                                                                ",{}],["|",{"inverse":true}],[" 25 ",{"fg":3,"bold":true}],["  .gtkrc-2.0-kde4 ",{}]],"25":[["~                   ",{"fg":4,"bold":true}],["|",{"inverse":true}],["122 ",{"fg":3,"bold":true}],["<                                                                                                               ",{}],["|",{"inverse":true}],[" 26 ",{"fg":3,"bold":true}],["  .lesshst        ",{}]],"26":[["~                   ",{"fg":4,"bold":true}],["|",{"inverse":true}],["123 ",{"fg":3,"bold":true}],["                                                                                                                ",{}],["|",{"inverse":true}],[" 27 ",{"fg":3,"bold":true}],["  .tcshrc         ",{}]],"27":[["~                   ",{"fg":4,"bold":true}],["|",{"inverse":true}],["124 ",{"fg":3,"bold":true}],["                                                *g:calendar_monday*                                             ",{}],["|",{"inverse":true}],[" 28 ",{"fg":3,"bold":true}],["  .viminfo        ",{}]],"28":[["~                   ",{"fg":4,"bold":true}],["|",{"inverse":true}],["125 ",{"fg":3,"bold":true}],["To make the week start on Monday rather than Sunday, set this variable.  Note                                   ",{}],["|",{"inverse":true}],[" 29 ",{"fg":3,"bold":true}],["  .vimrc          ",{}]],"29":[["~                   ",{"fg":4,"bold":true}],["|",{"inverse":true}],["126 ",{"fg":3,"bold":true}],["that the value of |g:calendar_wruler| is not affected by this; it should                                        ",{}],["|",{"inverse":true}],[" 30 ",{"fg":3,"bold":true}],["  .xsession-errors",{}]],"30":[["~                   ",{"fg":4,"bold":true}],["|",{"inverse":true}],["127 ",{"fg":3,"bold":true}],["always begin with Sunday: >                                                                                     ",{}],["|",{"inverse":true}],[" 31 ",{"fg":3,"bold":true}],["  anaconda-ks.cfg ",{}]],"31":[["~                   ",{"fg":4,"bold":true}],["|",{"inverse":true}],["128 ",{"fg":3,"bold":true}],["  let g:calendar_monday = 1                                                                                     ",{}],["|",{"inverse":true}],[" 32 ",{"fg":3,"bold":true}],["  initial-setup-ks",{}]],"32":[["~                   ",{"fg":4,"bold":true}],["|",{"inverse":true}],["129 ",{"fg":3,"bold":true}],["<                                                                                                               ",{}],["|",{"inverse":true}],[" 33 ",{"fg":3,"bold":true}],["  test.c          ",{}]],"33":[["~                   ",{"fg":4,"bold":true}],["|",{"inverse":true}],["130 ",{"fg":3,"bold":true}],["                                                                                                                ",{}],["|",{"inverse":true}],[" 34 ",{"fg":3,"bold":true}],["  test.cpp        ",{}]],"34":[["~                   ",{"fg":4,"bold":true}],["|",{"inverse":true}],["131 ",{"fg":3,"bold":true}],["                                                *g:calendar_weeknm*                                             ",{}],["|",{"inverse":true}],[" 35 ",{"fg":3,"bold":true}],["  .test.cpp.swp   ",{}]],"35":[["~                   ",{"fg":4,"bold":true}],["|",{"inverse":true}],["132 ",{"fg":3,"bold":true}],["To show the week number, set this variable.  There are four valid settings: >                                   ",{}],["|",{"inverse":true}],["~                     ",{"fg":4,"bold":true}]],"36":[["~                   ",{"fg":4,"bold":true}],["|",{"inverse":true}],["133 ",{"fg":3,"bold":true}],["  let g:calendar_weeknm = 1 \" WK01                                                                              ",{}],["|",{"inverse":true}],["~                     ",{"fg":4,"bold":true}]],"37":[["~                   ",{"fg":4,"bold":true}],["|",{"inverse":true}],["134 ",{"fg":3,"bold":true}],["  let g:calendar_weeknm = 2 \" WK 1                                                                              ",{}],["|",{"inverse":true}],["~                     ",{"fg":4,"bold":true}]],"38":[["~                   ",{"fg":4,"bold":true}],["|",{"inverse":true}],["135 ",{"fg":3,"bold":true}],["  let g:calendar_weeknm = 3 \" KW01                                                                              ",{}],["|",{"inverse":true}],["~                     ",{"fg":4,"bold":true}]],"39":[["~                   ",{"fg":4,"bold":true}],["|",{"inverse":true}],["136 ",{"fg":3,"bold":true}],["  let g:calendar_weeknm = 4 \" KW 1                                                                              ",{}],["|",{"inverse":true}],["~                     ",{"fg":4,"bold":true}]],"40":[["~                   ",{"fg":4,"bold":true}],["|",{"inverse":true}],["137 ",{"fg":3,"bold":true}],["  let g:calendar_weeknm = 5 \" 1                                                                                 ",{}],["|",{"inverse":true}],["~                     ",{"fg":4,"bold":true}]],"41":[["~                   ",{"fg":4,"bold":true}],["|",{"inverse":true}],["138 ",{"fg":3,"bold":true}],["<                                                                                                               ",{}],["|",{"inverse":true}],["~                     ",{"fg":4,"bold":true}]],"42":[["~                   ",{"fg":4,"bold":true}],["|",{"inverse":true}],["139 ",{"fg":3,"bold":true}],["                                                                                                                ",{}],["|",{"inverse":true}],["~                     ",{"fg":4,"bold":true}]],"43":[["~                   ",{"fg":4,"bold":true}],["|",{"inverse":true}],["140 ",{"fg":3,"bold":true}],["                                                *g:calendar_datetime*                                           ",{}],["|",{"inverse":true}],["~                     ",{"fg":4,"bold":true}]],"44":[["~                   ",{"fg":4,"bold":true}],["|",{"inverse":true}],["141 ",{"fg":3,"bold":true}],["To control display of the current date and time, set this variable.        ",{"underline":true}],["                                     ",{}],["|",{"inverse":true}],["~                     ",{"fg":4,"bold":true}]]},"cursor":{"x":100,"y":44,"visible":false}}],[0.005445,{"lines":{"44":[["~                   ",{"fg":4,"bold":true}],["|",{"inverse":true}],["141 ",{"fg":3,"bold":true}],["To control display of the current date and time, set this variable.                                             ",{}],["|",{"inverse":true}],["~                     ",{"fg":4,"bold":true}]],"45":[["~                   ",{"fg":4,"bold":true}],["|",{"inverse":true}],["142 ",{"fg":3,"bold":true}],["Acceptable values are 'title', 'statusline', and '': >                                                          ",{"underline":true}],["|",{"inverse":true}],["~                     ",{"fg":4,"bold":true}]],"46":[["[Name] test.cpp      ",{"inverse":true}],[" NORMAL ",{"bold":true}],[" ",{}],["calendar.txt ",{"bold":true}],["                                                        unix │ utf-8 │ text │  64% ",{}],[" LN 142",{"bold":true}],[":1  ",{}],[" ",{"bold":true,"inverse":true}],[" ~/…/calendar-vim/doc>",{"bold":true}]]},"cursor":{"x":25,"y":45,"visible":true}}],[0.028523,{"lines":{"0":[["\" Press <F1> for hel",{"fg":6,"bold":true}],["|",{"inverse":true}],[" 98 ",{"fg":3,"bold":true}],["To set the labels for the calendar navigator, for example to change the                                         ",{}],["|",{"inverse":true}],["  1 ",{"fg":3,"bold":true}],["\" Press ? for help",{"fg":5,"bold":true}]],"1":[["                    ",{}],["|",{"inverse":true}],[" 99 ",{"fg":3,"bold":true}],["language, use this variable.  Entries should be comma separated. >                                              ",{}],["|",{"inverse":true}],["  2 ",{"fg":3,"bold":true}],["                  ",{}]],"2":[["▼",{"fg":3,"bold":true}],[" First",{"fg":5,"bold":true}],[" : ",{}],["struct",{"fg":2,"bold":true}],["    ",{}],["|",{"inverse":true}],["100 ",{"fg":3,"bold":true}],["  let g:calendar_navi_label = 'Prev,Today,Next'                                                                 ",{}],["|",{"inverse":true}],["  3 ",{"fg":3,"bold":true}],[".. (up a dir)",{"fg":6,"bold":true}],["     ",{}]],"3":[["    [prototypes]",{"fg":6,"bold":true}],["    ",{}],["|",{"inverse":true}],["101 ",{"fg":3,"bold":true}],["<                                                                                                               ",{}],["|",{"inverse":true}],["  4 /root/",{"fg":3,"bold":true}],["            ",{}]],"4":[["   ",{}],["+",{"fg":2,"bold":true}],["FirstRun(void)  ",{}],["|",{"inverse":true}],["102 ",{"fg":3,"bold":true}],["                                                                                                                ",{}],["|",{"inverse":true}],["  5 ",{"fg":3,"bold":true}],["▸ .asciinema/",{"fg":6,"bold":true}],["     ",{}]],"5":[["   ",{}],["+",{"fg":2,"bold":true}],["FirstRun2(void) ",{}],["|",{"inverse":true}],["103 ",{"fg":3,"bold":true}],["                                                *g:calendar_erafmt*                                             ",{}],["|",{"inverse":true}],["  6 ",{"fg":3,"bold":true}],["▸ .cache/",{"fg":6,"bold":true}],["         ",{}]],"6":[["                    ",{}],["|",{"inverse":true}],["104 ",{"fg":3,"bold":true}],["To change the dating system, set the following variable.  Include the name of                                   ",{}],["|",{"inverse":true}],["  7 ",{"fg":3,"bold":true}],["▸ .config/",{"fg":6,"bold":true}],["        ",{}]],"7":[["▼",{"fg":3,"bold":true}],[" Last",{"fg":5,"bold":true}],[" : ",{}],["struct",{"fg":2,"bold":true}],["     ",{}],["|",{"inverse":true}],["105 ",{"fg":3,"bold":true}],["To change the dating system, set the following variable.  Include the name of                                   ",{}],["|",{"inverse":true}],["  8 ",{"fg":3,"bold":true}],["▸ .dbus/",{"fg":6,"bold":true}],["          ",{}]]},"cursor":{"y":7,"visible":false}}],[0.007784000000000001,{"lines":{"7":[["▼",{"fg":3,"bold":true}],[" Last",{"fg":5,"bold":true}],[" : ",{}],["struct",{"fg":2,"bold":true}],["     ",{}],["|",{"inverse":true}],["105 ",{"fg":3,"bold":true}],["the dating system and its offset from the Georgian calendar (A.D.).  For                                        ",{}],["|",{"inverse":true}],["  8 ",{"fg":3,"bold":true}],["▸ .dbus/",{"fg":6,"bold":true}],["          ",{}]],"8":[["    [functions]",{"fg":6,"bold":true}],["     ",{}],["|",{"inverse":true}],["106 ",{"fg":3,"bold":true}],["example, to use the current Japanese era (Heisei), you would set: >                                             ",{}],["|",{"inverse":true}],["  9 ",{"fg":3,"bold":true}],["▸ .gnupg/",{"fg":6,"bold":true}],["         ",{}]],"9":[["   ",{}],["+",{"fg":2,"bold":true}],["FirstRun(void)  ",{}],["|",{"inverse":true}],["107 ",{"fg":3,"bold":true}],["  let g:calendar_erafmt = 'Heisei,-1988'                                                                        ",{}],["|",{"inverse":true}],[" 10 ",{"fg":3,"bold":true}],["▸ .kde/",{"fg":6,"bold":true}],["           ",{}]],"10":[["   ",{}],["+",{"fg":2,"bold":true}],["FirstRun2(void) ",{}],["|",{"inverse":true}],["108 ",{"fg":3,"bold":true}],["<                                                                                                               ",{}],["|",{"inverse":true}],[" 11 ",{"fg":3,"bold":true}],["▸ .local/",{"fg":6,"bold":true}],["         ",{}]],"11":[["   ",{}],["+",{"fg":2,"bold":true}],["~Last()         ",{}],["|",{"inverse":true}],["109 ",{"fg":3,"bold":true}],["                                                                                                                ",{}],["|",{"inverse":true}],[" 12 ",{"fg":3,"bold":true}],["▸ .pki/",{"fg":6,"bold":true}],["           ",{}]],"12":[["   ",{}],["+",{"fg":2,"bold":true}],["SecondRun(void) ",{}],["|",{"inverse":true}],["110 ",{"fg":3,"bold":true}],["                                                *g:calendar_mruler*                                             ",{}],["|",{"inverse":true}],[" 13 ",{"fg":3,"bold":true}],["▸ .ssh/",{"fg":6,"bold":true}],["           ",{}]],"13":[["   ",{}],["+",{"fg":2,"bold":true}],["SecondRun2(void)",{}],["|",{"inverse":true}],["111 ",{"fg":3,"bold":true}],["To change the month names for the calendar headings, set this variable.  The                                    ",{}],["|",{"inverse":true}],[" 14 ",{"fg":3,"bold":true}],["▸ .vim/",{"fg":6,"bold":true}],["           ",{}]],"14":[["                    ",{}],["|",{"inverse":true}],["112 ",{"fg":3,"bold":true}],["value is expected to be a comma-separated list of twelve values, starting with                                  ",{}],["|",{"inverse":true}],[" 15 ",{"fg":3,"bold":true}],["▸ diary/",{"fg":6,"bold":true}],["          ",{}]],"15":[["▼",{"fg":3,"bold":true}],[" Second",{"fg":5,"bold":true}],[" : ",{}],["struct",{"fg":2,"bold":true}],["   ",{}],["|",{"inverse":true}],["113 ",{"fg":3,"bold":true}],["Janurary: >                                                                                                     ",{}],["|",{"inverse":true}],[" 16 ",{"fg":3,"bold":true}],["▸ temp/",{"fg":6,"bold":true}],["           ",{}]],"16":[["    [prototypes]",{"fg":6,"bold":true}],["    ",{}],["|",{"inverse":true}],["114 ",{"fg":3,"bold":true}],["  let g:calendar_mruler = 'Jan,Feb,Mar,Apr,May,Jun,Jul,Aug,Sep,Oct,Nov,Dec'                                     ",{}],["|",{"inverse":true}],[" 17 ",{"fg":3,"bold":true}],["  .bash_history   ",{}]],"17":[["   ",{}],["+",{"fg":2,"bold":true}],["SecondRun(void) ",{}],["|",{"inverse":true}],["115 ",{"fg":3,"bold":true}],["<                                                                                                               ",{}],["|",{"inverse":true}],[" 18 ",{"fg":3,"bold":true}],["  .bash_logout    ",{}]],"18":[["   ",{}],["+",{"fg":2,"bold":true}],["SecondRun2(void)",{}],["|",{"inverse":true}],["116 ",{"fg":3,"bold":true}],["                                                                                                                ",{}],["|",{"inverse":true}],[" 19 ",{"fg":3,"bold":true}],["  .bash_profile   ",{"underline":true}]],"19":[["                    ",{}],["|",{"inverse":true}],["117 ",{"fg":3,"bold":true}],["                                                *g:calendar_wruler*                                             ",{}],["|",{"inverse":true}],[" 20 ",{"fg":3,"bold":true}],["  .bashrc         ",{}]],"20":[["▼",{"fg":3,"bold":true}],[" ",{}],["functions",{"fg":6,"bold":true}],["         ",{}],["|",{"inverse":true}],["118 ",{"fg":3,"bold":true}],["To change the week names for the calendar headings, set this variable.  The                                     ",{}],["|",{"inverse":true}],[" 21 ",{"fg":3,"bold":true}],["  .cshrc          ",{}]],"21":[["    main(int argc, c",{"underline":true}],["|",{"inverse":true}],["119 ",{"fg":3,"bold":true}],["value is expected to be a space-separated list of seven values, starting with                                   ",{}],["|",{"inverse":true}],[" 22 ",{"fg":3,"bold":true}],["  .dmrc           ",{}]],"22":[["~                   ",{"fg":4,"bold":true}],["|",{"inverse":true}],["120 ",{"fg":3,"bold":true}],["Sunday: >                                                                                                       ",{}],["|",{"inverse":true}],[" 23 ",{"fg":3,"bold":true}],["  .esd_auth       ",{}]],"23":[["~                   ",{"fg":4,"bold":true}],["|",{"inverse":true}],["121 ",{"fg":3,"bold":true}],["  let g:calendar_wruler = 'Su Mo Tu We Th Fr Sa'                                                                ",{}],["|",{"inverse":true}],[" 24 ",{"fg":3,"bold":true}],["  .gtkrc-2.0      ",{}]],"24":[["~                   ",{"fg":4,"bold":true}],["|",{"inverse":true}],["122 ",{"fg":3,"bold":true}],["<                                                                                                               ",{}],["|",{"inverse":true}],[" 25 ",{"fg":3,"bold":true}],["  .gtkrc-2.0-kde4 ",{}]],"25":[["~                   ",{"fg":4,"bold":true}],["|",{"inverse":true}],["123 ",{"fg":3,"bold":true}],["                                                                                                                ",{}],["|",{"inverse":true}],[" 26 ",{"fg":3,"bold":true}],["  .lesshst        ",{}]],"26":[["~                   ",{"fg":4,"bold":true}],["|",{"inverse":true}],["124 ",{"fg":3,"bold":true}],["                                                *g:calendar_monday*                                             ",{}],["|",{"inverse":true}],[" 27 ",{"fg":3,"bold":true}],["  .tcshrc         ",{}]],"27":[["~                   ",{"fg":4,"bold":true}],["|",{"inverse":true}],["125 ",{"fg":3,"bold":true}],["To make the week start on Monday rather than Sunday, set this variable.  Note                                   ",{}],["|",{"inverse":true}],[" 28 ",{"fg":3,"bold":true}],["  .viminfo        ",{}]],"28":[["~                   ",{"fg":4,"bold":true}],["|",{"inverse":true}],["126 ",{"fg":3,"bold":true}],["that the value of |g:calendar_wruler| is not affected by this; it should                                        ",{}],["|",{"inverse":true}],[" 29 ",{"fg":3,"bold":true}],["  .vimrc          ",{}]],"29":[["~                   ",{"fg":4,"bold":true}],["|",{"inverse":true}],["127 ",{"fg":3,"bold":true}],["always begin with Sunday: >                                                                                     ",{}],["|",{"inverse":true}],[" 30 ",{"fg":3,"bold":true}],["  .xsession-errors",{}]],"30":[["~                   ",{"fg":4,"bold":true}],["|",{"inverse":true}],["128 ",{"fg":3,"bold":true}],["  let g:calendar_monday = 1                                                                                     ",{}],["|",{"inverse":true}],[" 31 ",{"fg":3,"bold":true}],["  anaconda-ks.cfg ",{}]],"31":[["~                   ",{"fg":4,"bold":true}],["|",{"inverse":true}],["129 ",{"fg":3,"bold":true}],["<                                                                                                               ",{}],["|",{"inverse":true}],[" 32 ",{"fg":3,"bold":true}],["  initial-setup-ks",{}]],"32":[["~                   ",{"fg":4,"bold":true}],["|",{"inverse":true}],["130 ",{"fg":3,"bold":true}],["                                                                                                                ",{}],["|",{"inverse":true}],[" 33 ",{"fg":3,"bold":true}],["  test.c          ",{}]],"33":[["~                   ",{"fg":4,"bold":true}],["|",{"inverse":true}],["131 ",{"fg":3,"bold":true}],["                                                *g:calendar_weeknm*                                             ",{}],["|",{"inverse":true}],[" 34 ",{"fg":3,"bold":true}],["  test.cpp        ",{}]],"34":[["~                   ",{"fg":4,"bold":true}],["|",{"inverse":true}],["132 ",{"fg":3,"bold":true}],["To show the week number, set this variable.  There are four valid settings: >                                   ",{}],["|",{"inverse":true}],[" 35 ",{"fg":3,"bold":true}],["  .test.cpp.swp   ",{}]],"35":[["~                   ",{"fg":4,"bold":true}],["|",{"inverse":true}],["133 ",{"fg":3,"bold":true}],["  let g:calendar_weeknm = 1 \" WK01                                                                              ",{}],["|",{"inverse":true}],["~                     ",{"fg":4,"bold":true}]],"36":[["~                   ",{"fg":4,"bold":true}],["|",{"inverse":true}],["134 ",{"fg":3,"bold":true}],["  let g:calendar_weeknm = 2 \" WK 1                                                                              ",{}],["|",{"inverse":true}],["~                     ",{"fg":4,"bold":true}]],"37":[["~                   ",{"fg":4,"bold":true}],["|",{"inverse":true}],["135 ",{"fg":3,"bold":true}],["  let g:calendar_weeknm = 3 \" KW01                                                                              ",{}],["|",{"inverse":true}],["~                     ",{"fg":4,"bold":true}]],"38":[["~                   ",{"fg":4,"bold":true}],["|",{"inverse":true}],["136 ",{"fg":3,"bold":true}],["  let g:calendar_weeknm = 4 \" KW 1                                                                              ",{}],["|",{"inverse":true}],["~                     ",{"fg":4,"bold":true}]],"39":[["~                   ",{"fg":4,"bold":true}],["|",{"inverse":true}],["137 ",{"fg":3,"bold":true}],["  let g:calendar_weeknm = 5 \" 1                                                                                 ",{}],["|",{"inverse":true}],["~                     ",{"fg":4,"bold":true}]],"40":[["~                   ",{"fg":4,"bold":true}],["|",{"inverse":true}],["138 ",{"fg":3,"bold":true}],["<                                                                                                               ",{}],["|",{"inverse":true}],["~                     ",{"fg":4,"bold":true}]],"41":[["~                   ",{"fg":4,"bold":true}],["|",{"inverse":true}],["139 ",{"fg":3,"bold":true}],["                                                                                                                ",{}],["|",{"inverse":true}],["~                     ",{"fg":4,"bold":true}]],"42":[["~                   ",{"fg":4,"bold":true}],["|",{"inverse":true}],["140 ",{"fg":3,"bold":true}],["                                                *g:calendar_datetime*                                           ",{}],["|",{"inverse":true}],["~                     ",{"fg":4,"bold":true}]],"43":[["~                   ",{"fg":4,"bold":true}],["|",{"inverse":true}],["141 ",{"fg":3,"bold":true}],["To control display of the current date and time, set this variable.                                             ",{}],["|",{"inverse":true}],["~                     ",{"fg":4,"bold":true}]],"44":[["~                   ",{"fg":4,"bold":true}],["|",{"inverse":true}],["142 ",{"fg":3,"bold":true}],["Acceptable values are 'title', 'statusline', and '': >                                                          ",{}],["|",{"inverse":true}],["~                     ",{"fg":4,"bold":true}]],"45":[["~                   ",{"fg":4,"bold":true}],["|",{"inverse":true}],["143 ",{"fg":3,"bold":true}],["  let g:calendar_datetime = 'title'                                                                             ",{"underline":true}],["|",{"inverse":true}],["~                     ",{"fg":4,"bold":true}]],"46":[["[Name] test.cpp      ",{"inverse":true}],[" NORMAL ",{"bold":true}],[" ",{}],["calendar.txt ",{"bold":true}],["                                                        unix │ utf-8 │ text │  65% ",{}],[" LN 143",{"bold":true}],[":1  ",{}],[" ",{"bold":true,"inverse":true}],[" ~/…/calendar-vim/doc>",{"bold":true}]]},"cursor":{"y":45,"visible":true}}],[0.021108,{"lines":{"47":[["                                                                                                                                                     j          ",{}]]},"cursor":{"visible":false}}],[0.002775,{"lines":{"0":[["\" Press <F1> for hel",{"fg":6,"bold":true}],["|",{"inverse":true}],[" 99 ",{"fg":3,"bold":true}],["language, use this variable.  Entries should be comma separated. >                                              ",{}],["|",{"inverse":true}],["  1 ",{"fg":3,"bold":true}],["\" Press ? for help",{"fg":5,"bold":true}]],"1":[["                    ",{}],["|",{"inverse":true}],["100 ",{"fg":3,"bold":true}],["  let g:calendar_navi_label = 'Prev,Today,Next'                                                                 ",{}],["|",{"inverse":true}],["  2 ",{"fg":3,"bold":true}],["                  ",{}]],"2":[["▼",{"fg":3,"bold":true}],[" First",{"fg":5,"bold":true}],[" : ",{}],["struct",{"fg":2,"bold":true}],["    ",{}],["|",{"inverse":true}],["101 ",{"fg":3,"bold":true}],["<                                                                                                               ",{}],["|",{"inverse":true}],["  3 ",{"fg":3,"bold":true}],[".. (up a dir)",{"fg":6,"bold":true}],["     ",{}]],"3":[["    [prototypes]",{"fg":6,"bold":true}],["    ",{}],["|",{"inverse":true}],["102 ",{"fg":3,"bold":true}],["                                                                                                                ",{}],["|",{"inverse":true}],["  4 /root/",{"fg":3,"bold":true}],["            ",{}]],"4":[["   ",{}],["+",{"fg":2,"bold":true}],["FirstRun(void)  ",{}],["|",{"inverse":true}],["103 ",{"fg":3,"bold":true}],["                                                *g:calendar_erafmt*                                             ",{}],["|",{"inverse":true}],["  5 ",{"fg":3,"bold":true}],["▸ .asciinema/",{"fg":6,"bold":true}],["     ",{}]],"5":[["   ",{}],["+",{"fg":2,"bold":true}],["FirstRun2(void) ",{}],["|",{"inverse":true}],["104 ",{"fg":3,"bold":true}],["To change the dating system, set the following variable.  Include the name of                                   ",{}],["|",{"inverse":true}],["  6 ",{"fg":3,"bold":true}],["▸ .cache/",{"fg":6,"bold":true}],["         ",{}]],"6":[["                    ",{}],["|",{"inverse":true}],["105 ",{"fg":3,"bold":true}],["the dating system and its offset from the Georgian calendar (A.D.).  For                                        ",{}],["|",{"inverse":true}],["  7 ",{"fg":3,"bold":true}],["▸ .config/",{"fg":6,"bold":true}],["        ",{}]],"7":[["▼",{"fg":3,"bold":true}],[" Last",{"fg":5,"bold":true}],[" : ",{}],["struct",{"fg":2,"bold":true}],["     ",{}],["|",{"inverse":true}],["106 ",{"fg":3,"bold":true}],["example, to use the current Japanese era (Heisei), you would set: >                                             ",{}],["|",{"inverse":true}],["  8 ",{"fg":3,"bold":true}],["▸ .dbus/",{"fg":6,"bold":true}],["          ",{}]],"8":[["    [functions]",{"fg":6,"bold":true}],["     ",{}],["|",{"inverse":true}],["107 ",{"fg":3,"bold":true}],["  let g:calendar_erafmt = 'Heisei,-1988'                                                                        ",{}],["|",{"inverse":true}],["  9 ",{"fg":3,"bold":true}],["▸ .gnupg/",{"fg":6,"bold":true}],["         ",{}]],"9":[["   ",{}],["+",{"fg":2,"bold":true}],["FirstRun(void)  ",{}],["|",{"inverse":true}],["108 ",{"fg":3,"bold":true}],["<                                                                                                               ",{}],["|",{"inverse":true}],[" 10 ",{"fg":3,"bold":true}],["▸ .kde/",{"fg":6,"bold":true}],["           ",{}]],"10":[["   ",{}],["+",{"fg":2,"bold":true}],["FirstRun2(void) ",{}],["|",{"inverse":true}],["109 ",{"fg":3,"bold":true}],["                                                                                                                ",{}],["|",{"inverse":true}],[" 11 ",{"fg":3,"bold":true}],["▸ .local/",{"fg":6,"bold":true}],["         ",{}]],"11":[["   ",{}],["+",{"fg":2,"bold":true}],["~Last()         ",{}],["|",{"inverse":true}],["110 ",{"fg":3,"bold":true}],["                                                *g:calendar_mruler*                                             ",{}],["|",{"inverse":true}],[" 12 ",{"fg":3,"bold":true}],["▸ .pki/",{"fg":6,"bold":true}],["           ",{}]],"12":[["   ",{}],["+",{"fg":2,"bold":true}],["SecondRun(void) ",{}],["|",{"inverse":true}],["111 ",{"fg":3,"bold":true}],["To change the month names for the calendar headings, set this variable.  The                                    ",{}],["|",{"inverse":true}],[" 13 ",{"fg":3,"bold":true}],["▸ .ssh/",{"fg":6,"bold":true}],["           ",{}]],"13":[["   ",{}],["+",{"fg":2,"bold":true}],["SecondRun2(void)",{}],["|",{"inverse":true}],["112 ",{"fg":3,"bold":true}],["value is expected to be a comma-separated list of twelve values, starting with                                  ",{}],["|",{"inverse":true}],[" 14 ",{"fg":3,"bold":true}],["▸ .vim/",{"fg":6,"bold":true}],["           ",{}]],"14":[["                    ",{}],["|",{"inverse":true}],["113 ",{"fg":3,"bold":true}],["Janurary: >                                                                                                     ",{}],["|",{"inverse":true}],[" 15 ",{"fg":3,"bold":true}],["▸ diary/",{"fg":6,"bold":true}],["          ",{}]],"15":[["▼",{"fg":3,"bold":true}],[" Second",{"fg":5,"bold":true}],[" : ",{}],["struct",{"fg":2,"bold":true}],["   ",{}],["|",{"inverse":true}],["114 ",{"fg":3,"bold":true}],["  let g:calendar_mruler = 'Jan,Feb,Mar,Apr,May,Jun,Jul,Aug,Sep,Oct,Nov,Dec'                                     ",{}],["|",{"inverse":true}],[" 16 ",{"fg":3,"bold":true}],["▸ temp/",{"fg":6,"bold":true}],["           ",{}]],"16":[["    [prototypes]",{"fg":6,"bold":true}],["    ",{}],["|",{"inverse":true}],["115 ",{"fg":3,"bold":true}],["<                                                                                                               ",{}],["|",{"inverse":true}],[" 17 ",{"fg":3,"bold":true}],["  .bash_history   ",{}]],"17":[["   ",{}],["+",{"fg":2,"bold":true}],["SecondRun(void) ",{}],["|",{"inverse":true}],["116 ",{"fg":3,"bold":true}],["                                                                                                                ",{}],["|",{"inverse":true}],[" 18 ",{"fg":3,"bold":true}],["  .bash_logout    ",{}]],"18":[["   ",{}],["+",{"fg":2,"bold":true}],["SecondRun2(void)",{}],["|",{"inverse":true}],["117 ",{"fg":3,"bold":true}],["                                                *g:calendar_wruler*                                             ",{}],["|",{"inverse":true}],[" 19 ",{"fg":3,"bold":true}],["  .bash_profile   ",{"underline":true}]],"19":[["                    ",{}],["|",{"inverse":true}],["118 ",{"fg":3,"bold":true}],["To change the week names for the calendar headings, set this variable.  The                                     ",{}],["|",{"inverse":true}],[" 20 ",{"fg":3,"bold":true}],["  .bashrc         ",{}]],"20":[["▼",{"fg":3,"bold":true}],[" ",{}],["functions",{"fg":6,"bold":true}],["         ",{}],["|",{"inverse":true}],["119 ",{"fg":3,"bold":true}],["value is expected to be a space-separated list of seven values, starting with                                   ",{}],["|",{"inverse":true}],[" 21 ",{"fg":3,"bold":true}],["  .cshrc          ",{}]],"21":[["    main(int argc, c",{"underline":true}],["|",{"inverse":true}],["120 ",{"fg":3,"bold":true}],["Sunday: >                                                                                                       ",{}],["|",{"inverse":true}],[" 22 ",{"fg":3,"bold":true}],["  .dmrc           ",{}]],"22":[["~                   ",{"fg":4,"bold":true}],["|",{"inverse":true}],["121 ",{"fg":3,"bold":true}],["  let g:calendar_wruler = 'Su Mo Tu We Th Fr Sa'                                                                ",{}],["|",{"inverse":true}],[" 23 ",{"fg":3,"bold":true}],["  .esd_auth       ",{}]],"23":[["~                   ",{"fg":4,"bold":true}],["|",{"inverse":true}],["122 ",{"fg":3,"bold":true}],["<                                                                                                               ",{}],["|",{"inverse":true}],[" 24 ",{"fg":3,"bold":true}],["  .gtkrc-2.0      ",{}]],"24":[["~                   ",{"fg":4,"bold":true}],["|",{"inverse":true}],["123 ",{"fg":3,"bold":true}],["                                                                                                                ",{}],["|",{"inverse":true}],[" 25 ",{"fg":3,"bold":true}],["  .gtkrc-2.0-kde4 ",{}]],"25":[["~                   ",{"fg":4,"bold":true}],["|",{"inverse":true}],["124 ",{"fg":3,"bold":true}],["                                                *g:calendar_monday*                                             ",{}],["|",{"inverse":true}],[" 26 ",{"fg":3,"bold":true}],["  .lesshst        ",{}]],"26":[["~                   ",{"fg":4,"bold":true}],["|",{"inverse":true}],["125 ",{"fg":3,"bold":true}],["To make the week start on Monday rather than Sunday, set this variable.  Note                                   ",{}],["|",{"inverse":true}],[" 27 ",{"fg":3,"bold":true}],["  .tcshrc         ",{}]],"27":[["~                   ",{"fg":4,"bold":true}],["|",{"inverse":true}],["126 ",{"fg":3,"bold":true}],["that the value of |g:calendar_wruler| is not affected by this; it should                                        ",{}],["|",{"inverse":true}],[" 28 ",{"fg":3,"bold":true}],["  .viminfo        ",{}]],"28":[["~                   ",{"fg":4,"bold":true}],["|",{"inverse":true}],["127 ",{"fg":3,"bold":true}],["always begin with Sunday: >                                                                                     ",{}],["|",{"inverse":true}],[" 29 ",{"fg":3,"bold":true}],["  .vimrc          ",{}]],"29":[["~                   ",{"fg":4,"bold":true}],["|",{"inverse":true}],["128 ",{"fg":3,"bold":true}],["  let g:calendar_monday = 1                                                                                     ",{}],["|",{"inverse":true}],[" 30 ",{"fg":3,"bold":true}],["  .xsession-errors",{}]],"47":[["                                                                                                                                                                ",{}]]},"cursor":{"x":112,"y":29}}],[0.026486,{"lines":{"30":[["~                   ",{"fg":4,"bold":true}],["|",{"inverse":true}],["129 ",{"fg":3,"bold":true}],["<                                                                                                               ",{}],["|",{"inverse":true}],[" 31 ",{"fg":3,"bold":true}],["  anaconda-ks.cfg ",{}]],"31":[["~                   ",{"fg":4,"bold":true}],["|",{"inverse":true}],["130 ",{"fg":3,"bold":true}],["                                                                                                                ",{}],["|",{"inverse":true}],[" 32 ",{"fg":3,"bold":true}],["  initial-setup-ks",{}]],"32":[["~                   ",{"fg":4,"bold":true}],["|",{"inverse":true}],["131 ",{"fg":3,"bold":true}],["                                                *g:calendar_weeknm*                                             ",{}],["|",{"inverse":true}],[" 33 ",{"fg":3,"bold":true}],["  test.c          ",{}]],"33":[["~                   ",{"fg":4,"bold":true}],["|",{"inverse":true}],["132 ",{"fg":3,"bold":true}],["To show the week number, set this variable.  There are four valid settings: >                                   ",{}],["|",{"inverse":true}],[" 34 ",{"fg":3,"bold":true}],["  test.cpp        ",{}]],"34":[["~                   ",{"fg":4,"bold":true}],["|",{"inverse":true}],["133 ",{"fg":3,"bold":true}],["  let g:calendar_weeknm = 1 \" WK01                                                                              ",{}],["|",{"inverse":true}],[" 35 ",{"fg":3,"bold":true}],["  .test.cpp.swp   ",{}]],"35":[["~                   ",{"fg":4,"bold":true}],["|",{"inverse":true}],["134 ",{"fg":3,"bold":true}],["  let g:calendar_weeknm = 2 \" WK 1                                                                              ",{}],["|",{"inverse":true}],["~                     ",{"fg":4,"bold":true}]],"36":[["~                   ",{"fg":4,"bold":true}],["|",{"inverse":true}],["135 ",{"fg":3,"bold":true}],["  let g:calendar_weeknm = 3 \" KW01                                                                              ",{}],["|",{"inverse":true}],["~                     ",{"fg":4,"bold":true}]],"37":[["~                   ",{"fg":4,"bold":true}],["|",{"inverse":true}],["136 ",{"fg":3,"bold":true}],["  let g:calendar_weeknm = 3 \" KW01                                                                              ",{}],["|",{"inverse":true}],["~                     ",{"fg":4,"bold":true}]]},"cursor":{"x":40,"y":37}}],[0.015103,{"lines":{"0":[["\" Press <F1> for hel",{"fg":6,"bold":true}],["|",{"inverse":true}],["100 ",{"fg":3,"bold":true}],["  let g:calendar_navi_label = 'Prev,Today,Next'                                                                 ",{}],["|",{"inverse":true}],["  1 ",{"fg":3,"bold":true}],["\" Press ? for help",{"fg":5,"bold":true}]],"1":[["                    ",{}],["|",{"inverse":true}],["101 ",{"fg":3,"bold":true}],["<                                                                                                               ",{}],["|",{"inverse":true}],["  2 ",{"fg":3,"bold":true}],["                  ",{}]],"2":[["▼",{"fg":3,"bold":true}],[" First",{"fg":5,"bold":true}],[" : ",{}],["struct",{"fg":2,"bold":true}],["    ",{}],["|",{"inverse":true}],["102 ",{"fg":3,"bold":true}],["                                                                                                                ",{}],["|",{"inverse":true}],["  3 ",{"fg":3,"bold":true}],[".. (up a dir)",{"fg":6,"bold":true}],["     ",{}]],"3":[["    [prototypes]",{"fg":6,"bold":true}],["    ",{}],["|",{"inverse":true}],["103 ",{"fg":3,"bold":true}],["                                                *g:calendar_erafmt*                                             ",{}],["|",{"inverse":true}],["  4 /root/",{"fg":3,"bold":true}],["            ",{}]],"4":[["   ",{}],["+",{"fg":2,"bold":true}],["FirstRun(void)  ",{}],["|",{"inverse":true}],["104 ",{"fg":3,"bold":true}],["To change the dating system, set the following variable.  Include the name of                                   ",{}],["|",{"inverse":true}],["  5 ",{"fg":3,"bold":true}],["▸ .asciinema/",{"fg":6,"bold":true}],["     ",{}]],"5":[["   ",{}],["+",{"fg":2,"bold":true}],["FirstRun2(void) ",{}],["|",{"inverse":true}],["105 ",{"fg":3,"bold":true}],["the dating system and its offset from the Georgian calendar (A.D.).  For                                        ",{}],["|",{"inverse":true}],["  6 ",{"fg":3,"bold":true}],["▸ .cache/",{"fg":6,"bold":true}],["         ",{}]],"6":[["                    ",{}],["|",{"inverse":true}],["106 ",{"fg":3,"bold":true}],["example, to use the current Japanese era (Heisei), you would set: >                                             ",{}],["|",{"inverse":true}],["  7 ",{"fg":3,"bold":true}],["▸ .config/",{"fg":6,"bold":true}],["        ",{}]],"7":[["▼",{"fg":3,"bold":true}],[" Last",{"fg":5,"bold":true}],[" : ",{}],["struct",{"fg":2,"bold":true}],["     ",{}],["|",{"inverse":true}],["107 ",{"fg":3,"bold":true}],["  let g:calendar_erafmt = 'Heisei,-1988'                                                                        ",{}],["|",{"inverse":true}],["  8 ",{"fg":3,"bold":true}],["▸ .dbus/",{"fg":6,"bold":true}],["          ",{}]],"8":[["    [functions]",{"fg":6,"bold":true}],["     ",{}],["|",{"inverse":true}],["108 ",{"fg":3,"bold":true}],["<                                                                                                               ",{}],["|",{"inverse":true}],["  9 ",{"fg":3,"bold":true}],["▸ .gnupg/",{"fg":6,"bold":true}],["         ",{}]],"9":[["   ",{}],["+",{"fg":2,"bold":true}],["FirstRun(void)  ",{}],["|",{"inverse":true}],["109 ",{"fg":3,"bold":true}],["                                                                                                                ",{}],["|",{"inverse":true}],[" 10 ",{"fg":3,"bold":true}],["▸ .kde/",{"fg":6,"bold":true}],["           ",{}]],"10":[["   ",{}],["+",{"fg":2,"bold":true}],["FirstRun2(void) ",{}],["|",{"inverse":true}],["110 ",{"fg":3,"bold":true}],["                                                *g:calendar_mruler*                                             ",{}],["|",{"inverse":true}],[" 11 ",{"fg":3,"bold":true}],["▸ .local/",{"fg":6,"bold":true}],["         ",{}]],"11":[["   ",{}],["+",{"fg":2,"bold":true}],["~Last()         ",{}],["|",{"inverse":true}],["111 ",{"fg":3,"bold":true}],["To change the month names for the calendar headings, set this variable.  The                                    ",{}],["|",{"inverse":true}],[" 12 ",{"fg":3,"bold":true}],["▸ .pki/",{"fg":6,"bold":true}],["           ",{}]],"12":[["   ",{}],["+",{"fg":2,"bold":true}],["SecondRun(void) ",{}],["|",{"inverse":true}],["112 ",{"fg":3,"bold":true}],["value is expected to be a comma-separated list of twelve values, starting with                                  ",{}],["|",{"inverse":true}],[" 13 ",{"fg":3,"bold":true}],["▸ .ssh/",{"fg":6,"bold":true}],["           ",{}]],"13":[["   ",{}],["+",{"fg":2,"bold":true}],["SecondRun2(void)",{}],["|",{"inverse":true}],["113 ",{"fg":3,"bold":true}],["Janurary: >                                                                                                     ",{}],["|",{"inverse":true}],[" 14 ",{"fg":3,"bold":true}],["▸ .vim/",{"fg":6,"bold":true}],["           ",{}]],"14":[["                    ",{}],["|",{"inverse":true}],["114 ",{"fg":3,"bold":true}],["  let g:calendar_mruler = 'Jan,Feb,Mar,Apr,May,Jun,Jul,Aug,Sep,Oct,Nov,Dec'                                     ",{}],["|",{"inverse":true}],[" 15 ",{"fg":3,"bold":true}],["▸ diary/",{"fg":6,"bold":true}],["          ",{}]],"15":[["▼",{"fg":3,"bold":true}],[" Second",{"fg":5,"bold":true}],[" : ",{}],["struct",{"fg":2,"bold":true}],["   ",{}],["|",{"inverse":true}],["115 ",{"fg":3,"bold":true}],["<                                                                                                               ",{}],["|",{"inverse":true}],[" 16 ",{"fg":3,"bold":true}],["▸ temp/",{"fg":6,"bold":true}],["           ",{}]],"16":[["    [prototypes]",{"fg":6,"bold":true}],["    ",{}],["|",{"inverse":true}],["116 ",{"fg":3,"bold":true}],["                                                                                                                ",{}],["|",{"inverse":true}],[" 17 ",{"fg":3,"bold":true}],["  .bash_history   ",{}]],"17":[["   ",{}],["+",{"fg":2,"bold":true}],["SecondRun(void) ",{}],["|",{"inverse":true}],["117 ",{"fg":3,"bold":true}],["                                                *g:calendar_wruler*                                             ",{}],["|",{"inverse":true}],[" 18 ",{"fg":3,"bold":true}],["  .bash_logout    ",{}]],"18":[["   ",{}],["+",{"fg":2,"bold":true}],["SecondRun2(void)",{}],["|",{"inverse":true}],["118 ",{"fg":3,"bold":true}],["To change the week names for the calendar headings, set this variable.  The                                     ",{}],["|",{"inverse":true}],[" 19 ",{"fg":3,"bold":true}],["  .bash_profile   ",{"underline":true}]],"19":[["                    ",{}],["|",{"inverse":true}],["119 ",{"fg":3,"bold":true}],["value is expected to be a space-separated list of seven values, starting with                                   ",{}],["|",{"inverse":true}],[" 20 ",{"fg":3,"bold":true}],["  .bashrc         ",{}]],"20":[["▼",{"fg":3,"bold":true}],[" ",{}],["functions",{"fg":6,"bold":true}],["         ",{}],["|",{"inverse":true}],["120 ",{"fg":3,"bold":true}],["Sunday: >                                                                                                       ",{}],["|",{"inverse":true}],[" 21 ",{"fg":3,"bold":true}],["  .cshrc          ",{}]],"21":[["    main(int argc, c",{"underline":true}],["|",{"inverse":true}],["121 ",{"fg":3,"bold":true}],["  let g:calendar_wruler = 'Su Mo Tu We Th Fr Sa'                                                                ",{}],["|",{"inverse":true}],[" 22 ",{"fg":3,"bold":true}],["  .dmrc           ",{}]],"22":[["~                   ",{"fg":4,"bold":true}],["|",{"inverse":true}],["122 ",{"fg":3,"bold":true}],["<                                                                                                               ",{}],["|",{"inverse":true}],[" 23 ",{"fg":3,"bold":true}],["  .esd_auth       ",{}]],"23":[["~                   ",{"fg":4,"bold":true}],["|",{"inverse":true}],["123 ",{"fg":3,"bold":true}],["                                                                                                                ",{}],["|",{"inverse":true}],[" 24 ",{"fg":3,"bold":true}],["  .gtkrc-2.0      ",{}]],"24":[["~                   ",{"fg":4,"bold":true}],["|",{"inverse":true}],["124 ",{"fg":3,"bold":true}],["                                                *g:calendar_monday*                                             ",{}],["|",{"inverse":true}],[" 25 ",{"fg":3,"bold":true}],["  .gtkrc-2.0-kde4 ",{}]],"25":[["~                   ",{"fg":4,"bold":true}],["|",{"inverse":true}],["125 ",{"fg":3,"bold":true}],["To make the week start on Monday rather than Sunday, set this variable.  Note                                   ",{}],["|",{"inverse":true}],[" 26 ",{"fg":3,"bold":true}],["  .lesshst        ",{}]],"26":[["~                   ",{"fg":4,"bold":true}],["|",{"inverse":true}],["126 ",{"fg":3,"bold":true}],["that the value of |g:calendar_wruler| is not affected by this; it should                                        ",{}],["|",{"inverse":true}],[" 27 ",{"fg":3,"bold":true}],["  .tcshrc         ",{}]],"27":[["~                   ",{"fg":4,"bold":true}],["|",{"inverse":true}],["127 ",{"fg":3,"bold":true}],["always begin with Sunday: >                                                                                     ",{}],["|",{"inverse":true}],[" 28 ",{"fg":3,"bold":true}],["  .viminfo        ",{}]],"28":[["~                   ",{"fg":4,"bold":true}],["|",{"inverse":true}],["128 ",{"fg":3,"bold":true}],["  let g:calendar_monday = 1                                                                                     ",{}],["|",{"inverse":true}],[" 29 ",{"fg":3,"bold":true}],["  .vimrc          ",{}]],"29":[["~                   ",{"fg":4,"bold":true}],["|",{"inverse":true}],["129 ",{"fg":3,"bold":true}],["<                                                                                                               ",{}],["|",{"inverse":true}],[" 30 ",{"fg":3,"bold":true}],["  .xsession-errors",{}]],"30":[["~                   ",{"fg":4,"bold":true}],["|",{"inverse":true}],["130 ",{"fg":3,"bold":true}],["                                                                                                                ",{}],["|",{"inverse":true}],[" 31 ",{"fg":3,"bold":true}],["  anaconda-ks.cfg ",{}]],"31":[["~                   ",{"fg":4,"bold":true}],["|",{"inverse":true}],["131 ",{"fg":3,"bold":true}],["                                                *g:calendar_weeknm*                                             ",{}],["|",{"inverse":true}],[" 32 ",{"fg":3,"bold":true}],["  initial-setup-ks",{}]],"32":[["~                   ",{"fg":4,"bold":true}],["|",{"inverse":true}],["132 ",{"fg":3,"bold":true}],["To show the week number, set this variable.  There are four valid settings: >                                   ",{}],["|",{"inverse":true}],[" 33 ",{"fg":3,"bold":true}],["  test.c          ",{}]],"33":[["~                   ",{"fg":4,"bold":true}],["|",{"inverse":true}],["133 ",{"fg":3,"bold":true}],["  let g:calendar_weeknm = 1 \" WK01                                                                              ",{}],["|",{"inverse":true}],[" 34 ",{"fg":3,"bold":true}],["  test.cpp        ",{}]],"34":[["~                   ",{"fg":4,"bold":true}],["|",{"inverse":true}],["134 ",{"fg":3,"bold":true}],["  let g:calendar_weeknm = 2 \" WK 1                                                                              ",{}],["|",{"inverse":true}],[" 35 ",{"fg":3,"bold":true}],["  .test.cpp.swp   ",{}]],"35":[["~                   ",{"fg":4,"bold":true}],["|",{"inverse":true}],["135 ",{"fg":3,"bold":true}],["  let g:calendar_weeknm = 3 \" KW01                                                                              ",{}],["|",{"inverse":true}],["~                     ",{"fg":4,"bold":true}]],"36":[["~                   ",{"fg":4,"bold":true}],["|",{"inverse":true}],["136 ",{"fg":3,"bold":true}],["  let g:calendar_weeknm = 4 \" KW 1                                                                              ",{}],["|",{"inverse":true}],["~                     ",{"fg":4,"bold":true}]],"37":[["~                   ",{"fg":4,"bold":true}],["|",{"inverse":true}],["137 ",{"fg":3,"bold":true}],["  let g:calendar_weeknm = 5 \" 1                                                                                 ",{}],["|",{"inverse":true}],["~                     ",{"fg":4,"bold":true}]],"38":[["~                   ",{"fg":4,"bold":true}],["|",{"inverse":true}],["138 ",{"fg":3,"bold":true}],["<                                                                                                               ",{}],["|",{"inverse":true}],["~                     ",{"fg":4,"bold":true}]],"39":[["~                   ",{"fg":4,"bold":true}],["|",{"inverse":true}],["139 ",{"fg":3,"bold":true}],["                                                                                                                ",{}],["|",{"inverse":true}],["~                     ",{"fg":4,"bold":true}]],"40":[["~                   ",{"fg":4,"bold":true}],["|",{"inverse":true}],["140 ",{"fg":3,"bold":true}],["                                                *g:calendar_datetime*                                           ",{}],["|",{"inverse":true}],["~                     ",{"fg":4,"bold":true}]],"41":[["~                   ",{"fg":4,"bold":true}],["|",{"inverse":true}],["141 ",{"fg":3,"bold":true}],["To control display of the current date and time, set this variable.                                             ",{}],["|",{"inverse":true}],["~                     ",{"fg":4,"bold":true}]],"42":[["~                   ",{"fg":4,"bold":true}],["|",{"inverse":true}],["142 ",{"fg":3,"bold":true}],["Acceptable values are 'title', 'statusline', and '': >                                                          ",{}],["|",{"inverse":true}],["~                     ",{"fg":4,"bold":true}]],"43":[["~                   ",{"fg":4,"bold":true}],["|",{"inverse":true}],["143 ",{"fg":3,"bold":true}],["  let g:calendar_datetime = 'title'                                                                             ",{}],["|",{"inverse":true}],["~                     ",{"fg":4,"bold":true}]],"44":[["~                   ",{"fg":4,"bold":true}],["|",{"inverse":true}],["144 ",{"fg":3,"bold":true}],["<                                                                                                               ",{}],["|",{"inverse":true}],["~                     ",{"fg":4,"bold":true}]],"45":[["~                   ",{"fg":4,"bold":true}],["|",{"inverse":true}],["145 ",{"fg":3,"bold":true}],["                                                *g:calendar_filetype*                                           ",{"underline":true}],["|",{"inverse":true}],["~                     ",{"fg":4,"bold":true}]],"46":[["[Name] test.cpp      ",{"inverse":true}],[" NORMAL ",{"bold":true}],[" ",{}],["calendar.txt ",{"bold":true}],["                                                        unix │ utf-8 │ text │  65% ",{}],[" LN 145",{"bold":true}],[":1  ",{}],[" ",{"bold":true,"inverse":true}],[" ~/…/calendar-vim/doc>",{"bold":true}]]},"cursor":{"x":25,"y":45,"visible":true}}],[0.043225,{"lines":{"0":[["\" Press <F1> for hel",{"fg":6,"bold":true}],["|",{"inverse":true}],["101 ",{"fg":3,"bold":true}],["<                                                                                                               ",{}],["|",{"inverse":true}],["  1 ",{"fg":3,"bold":true}],["\" Press ? for help",{"fg":5,"bold":true}]],"1":[["                    ",{}],["|",{"inverse":true}],["102 ",{"fg":3,"bold":true}],["                                                                                                                ",{}],["|",{"inverse":true}],["  2 ",{"fg":3,"bold":true}],["                  ",{}]],"2":[["▼",{"fg":3,"bold":true}],[" First",{"fg":5,"bold":true}],[" : ",{}],["struct",{"fg":2,"bold":true}],["    ",{}],["|",{"inverse":true}],["103 ",{"fg":3,"bold":true}],["                                                *g:calendar_erafmt*                                             ",{}],["|",{"inverse":true}],["  3 ",{"fg":3,"bold":true}],[".. (up a dir)",{"fg":6,"bold":true}],["     ",{}]],"3":[["    [prototypes]",{"fg":6,"bold":true}],["    ",{}],["|",{"inverse":true}],["104 ",{"fg":3,"bold":true}],["To change the dating system, set the following variable.  Include the name of                                   ",{}],["|",{"inverse":true}],["  4 /root/",{"fg":3,"bold":true}],["            ",{}]],"4":[["   ",{}],["+",{"fg":2,"bold":true}],["FirstRun(void)  ",{}],["|",{"inverse":true}],["105 ",{"fg":3,"bold":true}],["the dating system and its offset from the Georgian calendar (A.D.).  For                                        ",{}],["|",{"inverse":true}],["  5 ",{"fg":3,"bold":true}],["▸ .asciinema/",{"fg":6,"bold":true}],["     ",{}]],"5":[["   ",{}],["+",{"fg":2,"bold":true}],["FirstRun2(void) ",{}],["|",{"inverse":true}],["106 ",{"fg":3,"bold":true}],["example, to use the current Japanese era (Heisei), you would set: >                                             ",{}],["|",{"inverse":true}],["  6 ",{"fg":3,"bold":true}],["▸ .cache/",{"fg":6,"bold":true}],["         ",{}]],"6":[["                    ",{}],["|",{"inverse":true}],["107 ",{"fg":3,"bold":true}],["  let g:calendar_erafmt = 'Heisei,-1988'                                                                        ",{}],["|",{"inverse":true}],["  7 ",{"fg":3,"bold":true}],["▸ .config/",{"fg":6,"bold":true}],["        ",{}]],"7":[["▼",{"fg":3,"bold":true}],[" Last",{"fg":5,"bold":true}],[" : ",{}],["struct",{"fg":2,"bold":true}],["     ",{}],["|",{"inverse":true}],["108 ",{"fg":3,"bold":true}],["  let g:calendar_erafmt = 'Heisei,-1988'                                                                        ",{}],["|",{"inverse":true}],["  8 ",{"fg":3,"bold":true}],["▸ .dbus/",{"fg":6,"bold":true}],["          ",{}]]},"cursor":{"y":7,"visible":false}}],[0.004836,{"lines":{"7":[["▼",{"fg":3,"bold":true}],[" Last",{"fg":5,"bold":true}],[" : ",{}],["struct",{"fg":2,"bold":true}],["     ",{}],["|",{"inverse":true}],["108 ",{"fg":3,"bold":true}],["<                                                                                                               ",{}],["|",{"inverse":true}],["  8 ",{"fg":3,"bold":true}],["▸ .dbus/",{"fg":6,"bold":true}],["          ",{}]],"8":[["    [functions]",{"fg":6,"bold":true}],["     ",{}],["|",{"inverse":true}],["109 ",{"fg":3,"bold":true}],["                                                                                                                ",{}],["|",{"inverse":true}],["  9 ",{"fg":3,"bold":true}],["▸ .gnupg/",{"fg":6,"bold":true}],["         ",{}]],"9":[["   ",{}],["+",{"fg":2,"bold":true}],["FirstRun(void)  ",{}],["|",{"inverse":true}],["110 ",{"fg":3,"bold":true}],["                                                *g:calendar_mruler*                                             ",{}],["|",{"inverse":true}],[" 10 ",{"fg":3,"bold":true}],["▸ .kde/",{"fg":6,"bold":true}],["           ",{}]],"10":[["   ",{}],["+",{"fg":2,"bold":true}],["FirstRun2(void) ",{}],["|",{"inverse":true}],["111 ",{"fg":3,"bold":true}],["To change the month names for the calendar headings, set this variable.  The                                    ",{}],["|",{"inverse":true}],[" 11 ",{"fg":3,"bold":true}],["▸ .local/",{"fg":6,"bold":true}],["         ",{}]],"11":[["   ",{}],["+",{"fg":2,"bold":true}],["~Last()         ",{}],["|",{"inverse":true}],["112 ",{"fg":3,"bold":true}],["value is expected to be a comma-separated list of twelve values, starting with                                  ",{}],["|",{"inverse":true}],[" 12 ",{"fg":3,"bold":true}],["▸ .pki/",{"fg":6,"bold":true}],["           ",{}]],"12":[["   ",{}],["+",{"fg":2,"bold":true}],["SecondRun(void) ",{}],["|",{"inverse":true}],["113 ",{"fg":3,"bold":true}],["Janurary: >                                                                                                     ",{}],["|",{"inverse":true}],[" 13 ",{"fg":3,"bold":true}],["▸ .ssh/",{"fg":6,"bold":true}],["           ",{}]],"13":[["   ",{}],["+",{"fg":2,"bold":true}],["SecondRun2(void)",{}],["|",{"inverse":true}],["114 ",{"fg":3,"bold":true}],["  let g:calendar_mruler = 'Jan,Feb,Mar,Apr,May,Jun,Jul,Aug,Sep,Oct,Nov,Dec'                                     ",{}],["|",{"inverse":true}],[" 14 ",{"fg":3,"bold":true}],["▸ .vim/",{"fg":6,"bold":true}],["           ",{}]],"14":[["                    ",{}],["|",{"inverse":true}],["115 ",{"fg":3,"bold":true}],["<                                                                                                               ",{}],["|",{"inverse":true}],[" 15 ",{"fg":3,"bold":true}],["▸ diary/",{"fg":6,"bold":true}],["          ",{}]],"15":[["▼",{"fg":3,"bold":true}],[" Second",{"fg":5,"bold":true}],[" : ",{}],["struct",{"fg":2,"bold":true}],["   ",{}],["|",{"inverse":true}],["116 ",{"fg":3,"bold":true}],["                                                                                                                ",{}],["|",{"inverse":true}],[" 16 ",{"fg":3,"bold":true}],["▸ temp/",{"fg":6,"bold":true}],["           ",{}]],"16":[["    [prototypes]",{"fg":6,"bold":true}],["    ",{}],["|",{"inverse":true}],["117 ",{"fg":3,"bold":true}],["                                                *g:calendar_wruler*                                             ",{}],["|",{"inverse":true}],[" 17 ",{"fg":3,"bold":true}],["  .bash_history   ",{}]],"17":[["   ",{}],["+",{"fg":2,"bold":true}],["SecondRun(void) ",{}],["|",{"inverse":true}],["118 ",{"fg":3,"bold":true}],["To change the week names for the calendar headings, set this variable.  The                                     ",{}],["|",{"inverse":true}],[" 18 ",{"fg":3,"bold":true}],["  .bash_logout    ",{}]],"18":[["   ",{}],["+",{"fg":2,"bold":true}],["SecondRun2(void)",{}],["|",{"inverse":true}],["119 ",{"fg":3,"bold":true}],["value is expected to be a space-separated list of seven values, starting with                                   ",{}],["|",{"inverse":true}],[" 19 ",{"fg":3,"bold":true}],["  .bash_profile   ",{"underline":true}]],"19":[["                    ",{}],["|",{"inverse":true}],["120 ",{"fg":3,"bold":true}],["Sunday: >                                                                                                       ",{}],["|",{"inverse":true}],[" 20 ",{"fg":3,"bold":true}],["  .bashrc         ",{}]],"20":[["▼",{"fg":3,"bold":true}],[" ",{}],["functions",{"fg":6,"bold":true}],["         ",{}],["|",{"inverse":true}],["121 ",{"fg":3,"bold":true}],["  let g:calendar_wruler = 'Su Mo Tu We Th Fr Sa'                                                                ",{}],["|",{"inverse":true}],[" 21 ",{"fg":3,"bold":true}],["  .cshrc          ",{}]],"21":[["    main(int argc, c",{"underline":true}],["|",{"inverse":true}],["122 ",{"fg":3,"bold":true}],["<                                                                                                               ",{}],["|",{"inverse":true}],[" 22 ",{"fg":3,"bold":true}],["  .dmrc           ",{}]],"22":[["~                   ",{"fg":4,"bold":true}],["|",{"inverse":true}],["123 ",{"fg":3,"bold":true}],["                                                                                                                ",{}],["|",{"inverse":true}],[" 23 ",{"fg":3,"bold":true}],["  .esd_auth       ",{}]],"23":[["~                   ",{"fg":4,"bold":true}],["|",{"inverse":true}],["124 ",{"fg":3,"bold":true}],["                                                *g:calendar_monday*                                             ",{}],["|",{"inverse":true}],[" 24 ",{"fg":3,"bold":true}],["  .gtkrc-2.0      ",{}]],"24":[["~                   ",{"fg":4,"bold":true}],["|",{"inverse":true}],["125 ",{"fg":3,"bold":true}],["To make the week start on Monday rather than Sunday, set this variable.  Note                                   ",{}],["|",{"inverse":true}],[" 25 ",{"fg":3,"bold":true}],["  .gtkrc-2.0-kde4 ",{}]],"25":[["~                   ",{"fg":4,"bold":true}],["|",{"inverse":true}],["126 ",{"fg":3,"bold":true}],["that the value of |g:calendar_wruler| is not affected by this; it should                                        ",{}],["|",{"inverse":true}],[" 26 ",{"fg":3,"bold":true}],["  .lesshst        ",{}]],"26":[["~                   ",{"fg":4,"bold":true}],["|",{"inverse":true}],["127 ",{"fg":3,"bold":true}],["always begin with Sunday: >                                                                                     ",{}],["|",{"inverse":true}],[" 27 ",{"fg":3,"bold":true}],["  .tcshrc         ",{}]],"27":[["~                   ",{"fg":4,"bold":true}],["|",{"inverse":true}],["128 ",{"fg":3,"bold":true}],["  let g:calendar_monday = 1                                                                                     ",{}],["|",{"inverse":true}],[" 28 ",{"fg":3,"bold":true}],["  .viminfo        ",{}]],"28":[["~                   ",{"fg":4,"bold":true}],["|",{"inverse":true}],["129 ",{"fg":3,"bold":true}],["<                                                                                                               ",{}],["|",{"inverse":true}],[" 29 ",{"fg":3,"bold":true}],["  .vimrc          ",{}]],"29":[["~                   ",{"fg":4,"bold":true}],["|",{"inverse":true}],["130 ",{"fg":3,"bold":true}],["                                                                                                                ",{}],["|",{"inverse":true}],[" 30 ",{"fg":3,"bold":true}],["  .xsession-errors",{}]],"30":[["~                   ",{"fg":4,"bold":true}],["|",{"inverse":true}],["131 ",{"fg":3,"bold":true}],["                                                *g:calendar_weeknm*                                             ",{}],["|",{"inverse":true}],[" 31 ",{"fg":3,"bold":true}],["  anaconda-ks.cfg ",{}]],"31":[["~                   ",{"fg":4,"bold":true}],["|",{"inverse":true}],["132 ",{"fg":3,"bold":true}],["To show the week number, set this variable.  There are four valid settings: >                                   ",{}],["|",{"inverse":true}],[" 32 ",{"fg":3,"bold":true}],["  initial-setup-ks",{}]],"32":[["~                   ",{"fg":4,"bold":true}],["|",{"inverse":true}],["133 ",{"fg":3,"bold":true}],["  let g:calendar_weeknm = 1 \" WK01                                                                              ",{}],["|",{"inverse":true}],[" 33 ",{"fg":3,"bold":true}],["  test.c          ",{}]],"33":[["~                   ",{"fg":4,"bold":true}],["|",{"inverse":true}],["134 ",{"fg":3,"bold":true}],["  let g:calendar_weeknm = 2 \" WK 1                                                                              ",{}],["|",{"inverse":true}],[" 34 ",{"fg":3,"bold":true}],["  test.cpp        ",{}]],"34":[["~                   ",{"fg":4,"bold":true}],["|",{"inverse":true}],["135 ",{"fg":3,"bold":true}],["  let g:calendar_weeknm = 3 \" KW01                                                                              ",{}],["|",{"inverse":true}],[" 35 ",{"fg":3,"bold":true}],["  .test.cpp.swp   ",{}]],"35":[["~                   ",{"fg":4,"bold":true}],["|",{"inverse":true}],["136 ",{"fg":3,"bold":true}],["  let g:calendar_weeknm = 4 \" KW 1                                                                              ",{}],["|",{"inverse":true}],["~                     ",{"fg":4,"bold":true}]],"36":[["~                   ",{"fg":4,"bold":true}],["|",{"inverse":true}],["137 ",{"fg":3,"bold":true}],["  let g:calendar_weeknm = 5 \" 1                                                                                 ",{}],["|",{"inverse":true}],["~                     ",{"fg":4,"bold":true}]],"37":[["~                   ",{"fg":4,"bold":true}],["|",{"inverse":true}],["138 ",{"fg":3,"bold":true}],["<                                                                                                               ",{}],["|",{"inverse":true}],["~                     ",{"fg":4,"bold":true}]],"38":[["~                   ",{"fg":4,"bold":true}],["|",{"inverse":true}],["139 ",{"fg":3,"bold":true}],["                                                                                                                ",{}],["|",{"inverse":true}],["~                     ",{"fg":4,"bold":true}]],"39":[["~                   ",{"fg":4,"bold":true}],["|",{"inverse":true}],["140 ",{"fg":3,"bold":true}],["                                                *g:calendar_datetime*                                           ",{}],["|",{"inverse":true}],["~                     ",{"fg":4,"bold":true}]],"40":[["~                   ",{"fg":4,"bold":true}],["|",{"inverse":true}],["141 ",{"fg":3,"bold":true}],["To control display of the current date and time, set this variable.                                             ",{}],["|",{"inverse":true}],["~                     ",{"fg":4,"bold":true}]],"41":[["~                   ",{"fg":4,"bold":true}],["|",{"inverse":true}],["142 ",{"fg":3,"bold":true}],["Acceptable values are 'title', 'statusline', and '': >                                                          ",{}],["|",{"inverse":true}],["~                     ",{"fg":4,"bold":true}]],"42":[["~                   ",{"fg":4,"bold":true}],["|",{"inverse":true}],["143 ",{"fg":3,"bold":true}],["  let g:calendar_datetime = 'title'                                                                             ",{}],["|",{"inverse":true}],["~                     ",{"fg":4,"bold":true}]],"43":[["~                   ",{"fg":4,"bold":true}],["|",{"inverse":true}],["144 ",{"fg":3,"bold":true}],["<                                                                                                               ",{}],["|",{"inverse":true}],["~                     ",{"fg":4,"bold":true}]],"44":[["~                   ",{"fg":4,"bold":true}],["|",{"inverse":true}],["145 ",{"fg":3,"bold":true}],["                                                *g:calendar_filetype*                                           ",{}],["|",{"inverse":true}],["~                     ",{"fg":4,"bold":true}]],"45":[["~                   ",{"fg":4,"bold":true}],["|",{"inverse":true}],["146 ",{"fg":3,"bold":true}],["To control the filetype of calendar entries, set this variable. It defaults to                                  ",{"underline":true}],["|",{"inverse":true}],["~                     ",{"fg":4,"bold":true}]],"46":[["[Name] test.cpp      ",{"inverse":true}],[" NORMAL ",{"bold":true}],[" ",{}],["calendar.txt ",{"bold":true}],["                                                        unix │ utf-8 │ text │  66% ",{}],[" LN 146",{"bold":true}],[":1  ",{}],[" ",{"bold":true,"inverse":true}],[" ~/…/calendar-vim/doc>",{"bold":true}]]},"cursor":{"y":45,"visible":true}}],[0.015276,{"lines":{"0":[["\" Press <F1> for hel",{"fg":6,"bold":true}],["|",{"inverse":true}],["102 ",{"fg":3,"bold":true}],["                                                                                                                ",{}],["|",{"inverse":true}],["  1 ",{"fg":3,"bold":true}],["\" Press ? for help",{"fg":5,"bold":true}]],"1":[["                    ",{}],["|",{"inverse":true}],["103 ",{"fg":3,"bold":true}],["                                                *g:calendar_erafmt*                                             ",{}],["|",{"inverse":true}],["  2 ",{"fg":3,"bold":true}],["                  ",{}]],"2":[["▼",{"fg":3,"bold":true}],[" First",{"fg":5,"bold":true}],[" : ",{}],["struct",{"fg":2,"bold":true}],["    ",{}],["|",{"inverse":true}],["104 ",{"fg":3,"bold":true}],["To change the dating system, set the following variable.  Include the name of                                   ",{}],["|",{"inverse":true}],["  3 ",{"fg":3,"bold":true}],[".. (up a dir)",{"fg":6,"bold":true}],["     ",{}]],"3":[["    [prototypes]",{"fg":6,"bold":true}],["    ",{}],["|",{"inverse":true}],["105 ",{"fg":3,"bold":true}],["the dating system and its offset from the Georgian calendar (A.D.).  For                                        ",{}],["|",{"inverse":true}],["  4 /root/",{"fg":3,"bold":true}],["            ",{}]],"4":[["   ",{}],["+",{"fg":2,"bold":true}],["FirstRun(void)  ",{}],["|",{"inverse":true}],["106 ",{"fg":3,"bold":true}],["example, to use the current Japanese era (Heisei), you would set: >                                             ",{}],["|",{"inverse":true}],["  5 ",{"fg":3,"bold":true}],["▸ .asciinema/",{"fg":6,"bold":true}],["     ",{}]],"5":[["   ",{}],["+",{"fg":2,"bold":true}],["FirstRun2(void) ",{}],["|",{"inverse":true}],["107 ",{"fg":3,"bold":true}],["  let g:calendar_erafmt = 'Heisei,-1988'                                                                        ",{}],["|",{"inverse":true}],["  6 ",{"fg":3,"bold":true}],["▸ .cache/",{"fg":6,"bold":true}],["         ",{}]],"6":[["                    ",{}],["|",{"inverse":true}],["108 ",{"fg":3,"bold":true}],["<                                                                                                               ",{}],["|",{"inverse":true}],["  7 ",{"fg":3,"bold":true}],["▸ .config/",{"fg":6,"bold":true}],["        ",{}]],"7":[["▼",{"fg":3,"bold":true}],[" Last",{"fg":5,"bold":true}],[" : ",{}],["struct",{"fg":2,"bold":true}],["     ",{}],["|",{"inverse":true}],["109 ",{"fg":3,"bold":true}],["                                                                                                                ",{}],["|",{"inverse":true}],["  8 ",{"fg":3,"bold":true}],["▸ .dbus/",{"fg":6,"bold":true}],["          ",{}]],"8":[["    [functions]",{"fg":6,"bold":true}],["     ",{}],["|",{"inverse":true}],["110 ",{"fg":3,"bold":true}],["                                                *g:calendar_mruler*                                             ",{}],["|",{"inverse":true}],["  9 ",{"fg":3,"bold":true}],["▸ .gnupg/",{"fg":6,"bold":true}],["         ",{}]],"9":[["   ",{}],["+",{"fg":2,"bold":true}],["FirstRun(void)  ",{}],["|",{"inverse":true}],["111 ",{"fg":3,"bold":true}],["To change the month names for the calendar headings, set this variable.  The                                    ",{}],["|",{"inverse":true}],[" 10 ",{"fg":3,"bold":true}],["▸ .kde/",{"fg":6,"bold":true}],["           ",{}]],"10":[["   ",{}],["+",{"fg":2,"bold":true}],["FirstRun2(void) ",{}],["|",{"inverse":true}],["112 ",{"fg":3,"bold":true}],["value is expected to be a comma-separated list of twelve values, starting with                                  ",{}],["|",{"inverse":true}],[" 11 ",{"fg":3,"bold":true}],["▸ .local/",{"fg":6,"bold":true}],["         ",{}]],"11":[["   ",{}],["+",{"fg":2,"bold":true}],["~Last()         ",{}],["|",{"inverse":true}],["113 ",{"fg":3,"bold":true}],["Janurary: >                                                                                                     ",{}],["|",{"inverse":true}],[" 12 ",{"fg":3,"bold":true}],["▸ .pki/",{"fg":6,"bold":true}],["           ",{}]],"12":[["   ",{}],["+",{"fg":2,"bold":true}],["SecondRun(void) ",{}],["|",{"inverse":true}],["114 ",{"fg":3,"bold":true}],["  let g:calendar_mruler = 'Jan,Feb,Mar,Apr,May,Jun,Jul,Aug,Sep,Oct,Nov,Dec'                                     ",{}],["|",{"inverse":true}],[" 13 ",{"fg":3,"bold":true}],["▸ .ssh/",{"fg":6,"bold":true}],["           ",{}]],"13":[["   ",{}],["+",{"fg":2,"bold":true}],["SecondRun2(void)",{}],["|",{"inverse":true}],["115 ",{"fg":3,"bold":true}],["<                                                                                                               ",{}],["|",{"inverse":true}],[" 14 ",{"fg":3,"bold":true}],["▸ .vim/",{"fg":6,"bold":true}],["           ",{}]],"14":[["                    ",{}],["|",{"inverse":true}],["116 ",{"fg":3,"bold":true}],["                                                                                                                ",{}],["|",{"inverse":true}],[" 15 ",{"fg":3,"bold":true}],["▸ diary/",{"fg":6,"bold":true}],["          ",{}]],"15":[["▼",{"fg":3,"bold":true}],[" Second",{"fg":5,"bold":true}],[" : ",{}],["struct",{"fg":2,"bold":true}],["   ",{}],["|",{"inverse":true}],["117 ",{"fg":3,"bold":true}],["                                                *g:calendar_wruler*                                             ",{}],["|",{"inverse":true}],[" 16 ",{"fg":3,"bold":true}],["▸ temp/",{"fg":6,"bold":true}],["           ",{}]],"16":[["    [prototypes]",{"fg":6,"bold":true}],["    ",{}],["|",{"inverse":true}],["118 ",{"fg":3,"bold":true}],["To change the week names for the calendar headings, set this variable.  The                                     ",{}],["|",{"inverse":true}],[" 17 ",{"fg":3,"bold":true}],["  .bash_history   ",{}]],"17":[["   ",{}],["+",{"fg":2,"bold":true}],["SecondRun(void) ",{}],["|",{"inverse":true}],["119 ",{"fg":3,"bold":true}],["value is expected to be a space-separated list of seven values, starting with                                   ",{}],["|",{"inverse":true}],[" 18 ",{"fg":3,"bold":true}],["  .bash_logout    ",{}]],"18":[["   ",{}],["+",{"fg":2,"bold":true}],["SecondRun2(void)",{}],["|",{"inverse":true}],["120 ",{"fg":3,"bold":true}],["Sunday: >                                                                                                       ",{}],["|",{"inverse":true}],[" 19 ",{"fg":3,"bold":true}],["  .bash_profile   ",{"underline":true}]],"19":[["                    ",{}],["|",{"inverse":true}],["121 ",{"fg":3,"bold":true}],["  let g:calendar_wruler = 'Su Mo Tu We Th Fr Sa'                                                                ",{}],["|",{"inverse":true}],[" 20 ",{"fg":3,"bold":true}],["  .bashrc         ",{}]],"20":[["▼",{"fg":3,"bold":true}],[" ",{}],["functions",{"fg":6,"bold":true}],["         ",{}],["|",{"inverse":true}],["122 ",{"fg":3,"bold":true}],["<                                                                                                               ",{}],["|",{"inverse":true}],[" 21 ",{"fg":3,"bold":true}],["  .cshrc          ",{}]],"21":[["    main(int argc, c",{"underline":true}],["|",{"inverse":true}],["123 ",{"fg":3,"bold":true}],["                                                                                                                ",{}],["|",{"inverse":true}],[" 22 ",{"fg":3,"bold":true}],["  .dmrc           ",{}]],"22":[["~                   ",{"fg":4,"bold":true}],["|",{"inverse":true}],["124 ",{"fg":3,"bold":true}],["                                                *g:calendar_monday*                                             ",{}],["|",{"inverse":true}],[" 23 ",{"fg":3,"bold":true}],["  .esd_auth       ",{}]],"23":[["~                   ",{"fg":4,"bold":true}],["|",{"inverse":true}],["125 ",{"fg":3,"bold":true}],["To make the week start on Monday rather than Sunday, set this variable.  Note                                   ",{}],["|",{"inverse":true}],[" 24 ",{"fg":3,"bold":true}],["  .gtkrc-2.0      ",{}]],"24":[["~                   ",{"fg":4,"bold":true}],["|",{"inverse":true}],["126 ",{"fg":3,"bold":true}],["that the value of |g:calendar_wruler| is not affected by this; it should                                        ",{}],["|",{"inverse":true}],[" 25 ",{"fg":3,"bold":true}],["  .gtkrc-2.0-kde4 ",{}]],"25":[["~                   ",{"fg":4,"bold":true}],["|",{"inverse":true}],["127 ",{"fg":3,"bold":true}],["always begin with Sunday: >                                                                                     ",{}],["|",{"inverse":true}],[" 26 ",{"fg":3,"bold":true}],["  .lesshst        ",{}]],"26":[["~                   ",{"fg":4,"bold":true}],["|",{"inverse":true}],["128 ",{"fg":3,"bold":true}],["  let g:calendar_monday = 1                                                                                     ",{}],["|",{"inverse":true}],[" 27 ",{"fg":3,"bold":true}],["  .tcshrc         ",{}]],"27":[["~                   ",{"fg":4,"bold":true}],["|",{"inverse":true}],["129 ",{"fg":3,"bold":true}],["<                                                                                                               ",{}],["|",{"inverse":true}],[" 28 ",{"fg":3,"bold":true}],["  .viminfo        ",{}]],"28":[["~                   ",{"fg":4,"bold":true}],["|",{"inverse":true}],["130 ",{"fg":3,"bold":true}],["                                                                                                                ",{}],["|",{"inverse":true}],[" 29 ",{"fg":3,"bold":true}],["  .vimrc          ",{}]],"29":[["~                   ",{"fg":4,"bold":true}],["|",{"inverse":true}],["131 ",{"fg":3,"bold":true}],["                                                *g:calendar_weeknm*                                             ",{}],["|",{"inverse":true}],[" 30 ",{"fg":3,"bold":true}],["  .xsession-errors",{}]],"30":[["~                   ",{"fg":4,"bold":true}],["|",{"inverse":true}],["132 ",{"fg":3,"bold":true}],["To show the week number, set this variable.  There are four valid settings: >                                   ",{}],["|",{"inverse":true}],[" 31 ",{"fg":3,"bold":true}],["  anaconda-ks.cfg ",{}]],"31":[["~                   ",{"fg":4,"bold":true}],["|",{"inverse":true}],["133 ",{"fg":3,"bold":true}],["  let g:calendar_weeknm = 1 \" WK01                                                                              ",{}],["|",{"inverse":true}],[" 32 ",{"fg":3,"bold":true}],["  initial-setup-ks",{}]],"32":[["~                   ",{"fg":4,"bold":true}],["|",{"inverse":true}],["134 ",{"fg":3,"bold":true}],["  let g:calendar_weeknm = 2 \" WK 1                                                                              ",{}],["|",{"inverse":true}],[" 33 ",{"fg":3,"bold":true}],["  test.c          ",{}]],"33":[["~                   ",{"fg":4,"bold":true}],["|",{"inverse":true}],["135 ",{"fg":3,"bold":true}],["  let g:calendar_weeknm = 3 \" KW01                                                                              ",{}],["|",{"inverse":true}],[" 34 ",{"fg":3,"bold":true}],["  test.cpp        ",{}]],"34":[["~                   ",{"fg":4,"bold":true}],["|",{"inverse":true}],["136 ",{"fg":3,"bold":true}],["  let g:calendar_weeknm = 4 \" KW 1                                                                              ",{}],["|",{"inverse":true}],[" 35 ",{"fg":3,"bold":true}],["  .test.cpp.swp   ",{}]],"35":[["~                   ",{"fg":4,"bold":true}],["|",{"inverse":true}],["137 ",{"fg":3,"bold":true}],["  let g:calendar_weeknm = 5 \" 1                                                                                 ",{}],["|",{"inverse":true}],["~                     ",{"fg":4,"bold":true}]],"36":[["~                   ",{"fg":4,"bold":true}],["|",{"inverse":true}],["138 ",{"fg":3,"bold":true}],["<                                                                                                               ",{}],["|",{"inverse":true}],["~                     ",{"fg":4,"bold":true}]],"37":[["~                   ",{"fg":4,"bold":true}],["|",{"inverse":true}],["139 ",{"fg":3,"bold":true}],["                                                                                                                ",{}],["|",{"inverse":true}],["~                     ",{"fg":4,"bold":true}]],"38":[["~                   ",{"fg":4,"bold":true}],["|",{"inverse":true}],["140 ",{"fg":3,"bold":true}],["                                                *g:calendar_datetime*                                           ",{}],["|",{"inverse":true}],["~                     ",{"fg":4,"bold":true}]],"39":[["~                   ",{"fg":4,"bold":true}],["|",{"inverse":true}],["141 ",{"fg":3,"bold":true}],["To control display of the current date and time, set this variable.                                             ",{}],["|",{"inverse":true}],["~                     ",{"fg":4,"bold":true}]],"40":[["~                   ",{"fg":4,"bold":true}],["|",{"inverse":true}],["142 ",{"fg":3,"bold":true}],["Acceptable values are 'title', 'statusline', and '': >                                                          ",{}],["|",{"inverse":true}],["~                     ",{"fg":4,"bold":true}]],"41":[["~                   ",{"fg":4,"bold":true}],["|",{"inverse":true}],["143 ",{"fg":3,"bold":true}],["  let g:calendar_datetime = 'title'                                                                             ",{}],["|",{"inverse":true}],["~                     ",{"fg":4,"bold":true}]],"42":[["~                   ",{"fg":4,"bold":true}],["|",{"inverse":true}],["144 ",{"fg":3,"bold":true}],["<                                                                                                               ",{}],["|",{"inverse":true}],["~                     ",{"fg":4,"bold":true}]],"43":[["~                   ",{"fg":4,"bold":true}],["|",{"inverse":true}],["145 ",{"fg":3,"bold":true}],["                                                *g:calendar_filetype*                                           ",{}],["|",{"inverse":true}],["~                     ",{"fg":4,"bold":true}]],"44":[["~                   ",{"fg":4,"bold":true}],["|",{"inverse":true}],["146 ",{"fg":3,"bold":true}],["To control the filetype of calendar entries, set this variable. It defaults",{"underline":true}],["                                     ",{}],["|",{"inverse":true}],["~                     ",{"fg":4,"bold":true}]]},"cursor":{"x":100,"y":44,"visible":false}}],[0.002944,{"lines":{"44":[["~                   ",{"fg":4,"bold":true}],["|",{"inverse":true}],["146 ",{"fg":3,"bold":true}],["To control the filetype of calendar entries, set this variable. It defaults to                                  ",{}],["|",{"inverse":true}],["~                     ",{"fg":4,"bold":true}]],"45":[["~                   ",{"fg":4,"bold":true}],["|",{"inverse":true}],["147 ",{"fg":3,"bold":true}],["'markdown'. Acceptable values are values that are acceptable for |filetype|                                     ",{"underline":true}],["|",{"inverse":true}],["~                     ",{"fg":4,"bold":true}]],"46":[["[Name] test.cpp      ",{"inverse":true}],[" NORMAL ",{"bold":true}],[" ",{}],["calendar.txt ",{"bold":true}],["                                                        unix │ utf-8 │ text │  66% ",{}],[" LN 147",{"bold":true}],[":1  ",{}],[" ",{"bold":true,"inverse":true}],[" ~/…/calendar-vim/doc>",{"bold":true}]]},"cursor":{"x":25,"y":45,"visible":true}}],[0.033975,{"lines":{"0":[["\" Press <F1> for hel",{"fg":6,"bold":true}],["|",{"inverse":true}],["103 ",{"fg":3,"bold":true}],["                                                *g:calendar_erafmt*                                             ",{}],["|",{"inverse":true}],["  1 ",{"fg":3,"bold":true}],["\" Press ? for help",{"fg":5,"bold":true}]],"1":[["                    ",{}],["|",{"inverse":true}],["104 ",{"fg":3,"bold":true}],["To change the dating system, set the following variable.  Include the name of                                   ",{}],["|",{"inverse":true}],["  2 ",{"fg":3,"bold":true}],["                  ",{}]],"2":[["▼",{"fg":3,"bold":true}],[" First",{"fg":5,"bold":true}],[" : ",{}],["struct",{"fg":2,"bold":true}],["    ",{}],["|",{"inverse":true}],["105 ",{"fg":3,"bold":true}],["the dating system and its offset from the Georgian calendar (A.D.).  For                                        ",{}],["|",{"inverse":true}],["  3 ",{"fg":3,"bold":true}],[".. (up a dir)",{"fg":6,"bold":true}],["     ",{}]],"3":[["    [prototypes]",{"fg":6,"bold":true}],["    ",{}],["|",{"inverse":true}],["106 ",{"fg":3,"bold":true}],["example, to use the current Japanese era (Heisei), you would set: >                                             ",{}],["|",{"inverse":true}],["  4 /root/",{"fg":3,"bold":true}],["            ",{}]],"4":[["   ",{}],["+",{"fg":2,"bold":true}],["FirstRun(void)  ",{}],["|",{"inverse":true}],["107 ",{"fg":3,"bold":true}],["  let g:calendar_erafmt = 'Heisei,-1988'                                                                        ",{}],["|",{"inverse":true}],["  5 ",{"fg":3,"bold":true}],["▸ .asciinema/",{"fg":6,"bold":true}],["     ",{}]],"5":[["   ",{}],["+",{"fg":2,"bold":true}],["FirstRun2(void) ",{}],["|",{"inverse":true}],["108 ",{"fg":3,"bold":true}],["<                                                                                                               ",{}],["|",{"inverse":true}],["  6 ",{"fg":3,"bold":true}],["▸ .cache/",{"fg":6,"bold":true}],["         ",{}]],"6":[["                    ",{}],["|",{"inverse":true}],["109 ",{"fg":3,"bold":true}],["                                                                                                                ",{}],["|",{"inverse":true}],["  7 ",{"fg":3,"bold":true}],["▸ .config/",{"fg":6,"bold":true}],["        ",{}]],"7":[["▼",{"fg":3,"bold":true}],[" Last",{"fg":5,"bold":true}],[" : ",{}],["struct",{"fg":2,"bold":true}],["     ",{}],["|",{"inverse":true}],["110 ",{"fg":3,"bold":true}],["                                                                                                                ",{}],["|",{"inverse":true}],["  8 ",{"fg":3,"bold":true}],["▸ .dbus/",{"fg":6,"bold":true}],["          ",{}]]},"cursor":{"y":7,"visible":false}}],[0.007171,{"lines":{"7":[["▼",{"fg":3,"bold":true}],[" Last",{"fg":5,"bold":true}],[" : ",{}],["struct",{"fg":2,"bold":true}],["     ",{}],["|",{"inverse":true}],["110 ",{"fg":3,"bold":true}],["                                                *g:calendar_mruler*                                             ",{}],["|",{"inverse":true}],["  8 ",{"fg":3,"bold":true}],["▸ .dbus/",{"fg":6,"bold":true}],["          ",{}]],"8":[["    [functions]",{"fg":6,"bold":true}],["     ",{}],["|",{"inverse":true}],["111 ",{"fg":3,"bold":true}],["To change the month names for the calendar headings, set this variable.  The                                    ",{}],["|",{"inverse":true}],["  9 ",{"fg":3,"bold":true}],["▸ .gnupg/",{"fg":6,"bold":true}],["         ",{}]],"9":[["   ",{}],["+",{"fg":2,"bold":true}],["FirstRun(void)  ",{}],["|",{"inverse":true}],["112 ",{"fg":3,"bold":true}],["value is expected to be a comma-separated list of twelve values, starting with                                  ",{}],["|",{"inverse":true}],[" 10 ",{"fg":3,"bold":true}],["▸ .kde/",{"fg":6,"bold":true}],["           ",{}]],"10":[["   ",{}],["+",{"fg":2,"bold":true}],["FirstRun2(void) ",{}],["|",{"inverse":true}],["113 ",{"fg":3,"bold":true}],["Janurary: >                                                                                                     ",{}],["|",{"inverse":true}],[" 11 ",{"fg":3,"bold":true}],["▸ .local/",{"fg":6,"bold":true}],["         ",{}]],"11":[["   ",{}],["+",{"fg":2,"bold":true}],["~Last()         ",{}],["|",{"inverse":true}],["114 ",{"fg":3,"bold":true}],["  let g:calendar_mruler = 'Jan,Feb,Mar,Apr,May,Jun,Jul,Aug,Sep,Oct,Nov,Dec'                                     ",{}],["|",{"inverse":true}],[" 12 ",{"fg":3,"bold":true}],["▸ .pki/",{"fg":6,"bold":true}],["           ",{}]],"12":[["   ",{}],["+",{"fg":2,"bold":true}],["SecondRun(void) ",{}],["|",{"inverse":true}],["115 ",{"fg":3,"bold":true}],["<                                                                                                               ",{}],["|",{"inverse":true}],[" 13 ",{"fg":3,"bold":true}],["▸ .ssh/",{"fg":6,"bold":true}],["           ",{}]],"13":[["   ",{}],["+",{"fg":2,"bold":true}],["SecondRun2(void)",{}],["|",{"inverse":true}],["116 ",{"fg":3,"bold":true}],["                                                                                                                ",{}],["|",{"inverse":true}],[" 14 ",{"fg":3,"bold":true}],["▸ .vim/",{"fg":6,"bold":true}],["           ",{}]],"14":[["                    ",{}],["|",{"inverse":true}],["117 ",{"fg":3,"bold":true}],["                                                *g:calendar_wruler*                                             ",{}],["|",{"inverse":true}],[" 15 ",{"fg":3,"bold":true}],["▸ diary/",{"fg":6,"bold":true}],["          ",{}]],"15":[["▼",{"fg":3,"bold":true}],[" Second",{"fg":5,"bold":true}],[" : ",{}],["struct",{"fg":2,"bold":true}],["   ",{}],["|",{"inverse":true}],["118 ",{"fg":3,"bold":true}],["To change the week names for the calendar headings, set this variable.  The                                     ",{}],["|",{"inverse":true}],[" 16 ",{"fg":3,"bold":true}],["▸ temp/",{"fg":6,"bold":true}],["           ",{}]],"16":[["    [prototypes]",{"fg":6,"bold":true}],["    ",{}],["|",{"inverse":true}],["119 ",{"fg":3,"bold":true}],["value is expected to be a space-separated list of seven values, starting with                                   ",{}],["|",{"inverse":true}],[" 17 ",{"fg":3,"bold":true}],["  .bash_history   ",{}]],"17":[["   ",{}],["+",{"fg":2,"bold":true}],["SecondRun(void) ",{}],["|",{"inverse":true}],["120 ",{"fg":3,"bold":true}],["Sunday: >                                                                                                       ",{}],["|",{"inverse":true}],[" 18 ",{"fg":3,"bold":true}],["  .bash_logout    ",{}]],"18":[["   ",{}],["+",{"fg":2,"bold":true}],["SecondRun2(void)",{}],["|",{"inverse":true}],["121 ",{"fg":3,"bold":true}],["  let g:calendar_wruler = 'Su Mo Tu We Th Fr Sa'                                                                ",{}],["|",{"inverse":true}],[" 19 ",{"fg":3,"bold":true}],["  .bash_profile   ",{"underline":true}]],"19":[["                    ",{}],["|",{"inverse":true}],["122 ",{"fg":3,"bold":true}],["<                                                                                                               ",{}],["|",{"inverse":true}],[" 20 ",{"fg":3,"bold":true}],["  .bashrc         ",{}]],"20":[["▼",{"fg":3,"bold":true}],[" ",{}],["functions",{"fg":6,"bold":true}],["         ",{}],["|",{"inverse":true}],["123 ",{"fg":3,"bold":true}],["                                                                                                                ",{}],["|",{"inverse":true}],[" 21 ",{"fg":3,"bold":true}],["  .cshrc          ",{}]],"21":[["    main(int argc, c",{"underline":true}],["|",{"inverse":true}],["124 ",{"fg":3,"bold":true}],["                                                *g:calendar_monday*                                             ",{}],["|",{"inverse":true}],[" 22 ",{"fg":3,"bold":true}],["  .dmrc           ",{}]],"22":[["~                   ",{"fg":4,"bold":true}],["|",{"inverse":true}],["125 ",{"fg":3,"bold":true}],["To make the week start on Monday rather than Sunday, set this variable.  Note                                   ",{}],["|",{"inverse":true}],[" 23 ",{"fg":3,"bold":true}],["  .esd_auth       ",{}]],"23":[["~                   ",{"fg":4,"bold":true}],["|",{"inverse":true}],["126 ",{"fg":3,"bold":true}],["that the value of |g:calendar_wruler| is not affected by this; it should                                        ",{}],["|",{"inverse":true}],[" 24 ",{"fg":3,"bold":true}],["  .gtkrc-2.0      ",{}]],"24":[["~                   ",{"fg":4,"bold":true}],["|",{"inverse":true}],["127 ",{"fg":3,"bold":true}],["always begin with Sunday: >                                                                                     ",{}],["|",{"inverse":true}],[" 25 ",{"fg":3,"bold":true}],["  .gtkrc-2.0-kde4 ",{}]],"25":[["~                   ",{"fg":4,"bold":true}],["|",{"inverse":true}],["128 ",{"fg":3,"bold":true}],["  let g:calendar_monday = 1                                                                                     ",{}],["|",{"inverse":true}],[" 26 ",{"fg":3,"bold":true}],["  .lesshst        ",{}]],"26":[["~                   ",{"fg":4,"bold":true}],["|",{"inverse":true}],["129 ",{"fg":3,"bold":true}],["<                                                                                                               ",{}],["|",{"inverse":true}],[" 27 ",{"fg":3,"bold":true}],["  .tcshrc         ",{}]],"27":[["~                   ",{"fg":4,"bold":true}],["|",{"inverse":true}],["130 ",{"fg":3,"bold":true}],["                                                                                                                ",{}],["|",{"inverse":true}],[" 28 ",{"fg":3,"bold":true}],["  .viminfo        ",{}]],"28":[["~                   ",{"fg":4,"bold":true}],["|",{"inverse":true}],["131 ",{"fg":3,"bold":true}],["                                                *g:calendar_weeknm*                                             ",{}],["|",{"inverse":true}],[" 29 ",{"fg":3,"bold":true}],["  .vimrc          ",{}]],"29":[["~                   ",{"fg":4,"bold":true}],["|",{"inverse":true}],["132 ",{"fg":3,"bold":true}],["To show the week number, set this variable.  There are four valid settings: >                                   ",{}],["|",{"inverse":true}],[" 30 ",{"fg":3,"bold":true}],["  .xsession-errors",{}]],"30":[["~                   ",{"fg":4,"bold":true}],["|",{"inverse":true}],["133 ",{"fg":3,"bold":true}],["  let g:calendar_weeknm = 1 \" WK01                                                                              ",{}],["|",{"inverse":true}],[" 31 ",{"fg":3,"bold":true}],["  anaconda-ks.cfg ",{}]],"31":[["~                   ",{"fg":4,"bold":true}],["|",{"inverse":true}],["134 ",{"fg":3,"bold":true}],["  let g:calendar_weeknm = 2 \" WK 1                                                                              ",{}],["|",{"inverse":true}],[" 32 ",{"fg":3,"bold":true}],["  initial-setup-ks",{}]],"32":[["~                   ",{"fg":4,"bold":true}],["|",{"inverse":true}],["135 ",{"fg":3,"bold":true}],["  let g:calendar_weeknm = 3 \" KW01                                                                              ",{}],["|",{"inverse":true}],[" 33 ",{"fg":3,"bold":true}],["  test.c          ",{}]],"33":[["~                   ",{"fg":4,"bold":true}],["|",{"inverse":true}],["136 ",{"fg":3,"bold":true}],["  let g:calendar_weeknm = 4 \" KW 1                                                                              ",{}],["|",{"inverse":true}],[" 34 ",{"fg":3,"bold":true}],["  test.cpp        ",{}]],"34":[["~                   ",{"fg":4,"bold":true}],["|",{"inverse":true}],["137 ",{"fg":3,"bold":true}],["  let g:calendar_weeknm = 5 \" 1                                                                                 ",{}],["|",{"inverse":true}],[" 35 ",{"fg":3,"bold":true}],["  .test.cpp.swp   ",{}]],"35":[["~                   ",{"fg":4,"bold":true}],["|",{"inverse":true}],["138 ",{"fg":3,"bold":true}],["<                                                                                                               ",{}],["|",{"inverse":true}],["~                     ",{"fg":4,"bold":true}]],"36":[["~                   ",{"fg":4,"bold":true}],["|",{"inverse":true}],["139 ",{"fg":3,"bold":true}],["                                                                                                                ",{}],["|",{"inverse":true}],["~                     ",{"fg":4,"bold":true}]],"37":[["~                   ",{"fg":4,"bold":true}],["|",{"inverse":true}],["140 ",{"fg":3,"bold":true}],["                                                *g:calendar_datetime*                                           ",{}],["|",{"inverse":true}],["~                     ",{"fg":4,"bold":true}]],"38":[["~                   ",{"fg":4,"bold":true}],["|",{"inverse":true}],["141 ",{"fg":3,"bold":true}],["To control display of the current date and time, set this variable.                                             ",{}],["|",{"inverse":true}],["~                     ",{"fg":4,"bold":true}]],"39":[["~                   ",{"fg":4,"bold":true}],["|",{"inverse":true}],["142 ",{"fg":3,"bold":true}],["Acceptable values are 'title', 'statusline', and '': >                                                          ",{}],["|",{"inverse":true}],["~                     ",{"fg":4,"bold":true}]],"40":[["~                   ",{"fg":4,"bold":true}],["|",{"inverse":true}],["143 ",{"fg":3,"bold":true}],["  let g:calendar_datetime = 'title'                                                                             ",{}],["|",{"inverse":true}],["~                     ",{"fg":4,"bold":true}]],"41":[["~                   ",{"fg":4,"bold":true}],["|",{"inverse":true}],["144 ",{"fg":3,"bold":true}],["<                                                                                                               ",{}],["|",{"inverse":true}],["~                     ",{"fg":4,"bold":true}]],"42":[["~                   ",{"fg":4,"bold":true}],["|",{"inverse":true}],["145 ",{"fg":3,"bold":true}],["                                                *g:calendar_filetype*                                           ",{}],["|",{"inverse":true}],["~                     ",{"fg":4,"bold":true}]],"43":[["~                   ",{"fg":4,"bold":true}],["|",{"inverse":true}],["146 ",{"fg":3,"bold":true}],["To control the filetype of calendar entries, set this variable. It defaults to                                  ",{}],["|",{"inverse":true}],["~                     ",{"fg":4,"bold":true}]],"44":[["~                   ",{"fg":4,"bold":true}],["|",{"inverse":true}],["147 ",{"fg":3,"bold":true}],["'markdown'. Acceptable values are values that are acceptable for |filetype|                                     ",{}],["|",{"inverse":true}],["~                     ",{"fg":4,"bold":true}]],"45":[["~                   ",{"fg":4,"bold":true}],["|",{"inverse":true}],["148 ",{"fg":3,"bold":true}],["like e.g. 'markdown' or 'pandoc':                                                                               ",{"underline":true}],["|",{"inverse":true}],["~                     ",{"fg":4,"bold":true}]],"46":[["[Name] test.cpp      ",{"inverse":true}],[" NORMAL ",{"bold":true}],[" ",{}],["calendar.txt ",{"bold":true}],["                                                        unix │ utf-8 │ text │  67% ",{}],[" LN 148",{"bold":true}],[":1  ",{}],[" ",{"bold":true,"inverse":true}],[" ~/…/calendar-vim/doc>",{"bold":true}]]},"cursor":{"y":45,"visible":true}}],[0.016157,{"lines":{"47":[["                                                                                                                                                     j          ",{}]]},"cursor":{"visible":false}}],[0.004557,{"lines":{"0":[["\" Press <F1> for hel",{"fg":6,"bold":true}],["|",{"inverse":true}],["104 ",{"fg":3,"bold":true}],["To change the dating system, set the following variable.  Include the name of                                   ",{}],["|",{"inverse":true}],["  1 ",{"fg":3,"bold":true}],["\" Press ? for help",{"fg":5,"bold":true}]],"1":[["                    ",{}],["|",{"inverse":true}],["105 ",{"fg":3,"bold":true}],["the dating system and its offset from the Georgian calendar (A.D.).  For                                        ",{}],["|",{"inverse":true}],["  2 ",{"fg":3,"bold":true}],["                  ",{}]],"2":[["▼",{"fg":3,"bold":true}],[" First",{"fg":5,"bold":true}],[" : ",{}],["struct",{"fg":2,"bold":true}],["    ",{}],["|",{"inverse":true}],["106 ",{"fg":3,"bold":true}],["example, to use the current Japanese era (Heisei), you would set: >                                             ",{}],["|",{"inverse":true}],["  3 ",{"fg":3,"bold":true}],[".. (up a dir)",{"fg":6,"bold":true}],["     ",{}]],"3":[["    [prototypes]",{"fg":6,"bold":true}],["    ",{}],["|",{"inverse":true}],["107 ",{"fg":3,"bold":true}],["  let g:calendar_erafmt = 'Heisei,-1988'                                                                        ",{}],["|",{"inverse":true}],["  4 /root/",{"fg":3,"bold":true}],["            ",{}]],"4":[["   ",{}],["+",{"fg":2,"bold":true}],["FirstRun(void)  ",{}],["|",{"inverse":true}],["108 ",{"fg":3,"bold":true}],["<                                                                                                               ",{}],["|",{"inverse":true}],["  5 ",{"fg":3,"bold":true}],["▸ .asciinema/",{"fg":6,"bold":true}],["     ",{}]],"5":[["   ",{}],["+",{"fg":2,"bold":true}],["FirstRun2(void) ",{}],["|",{"inverse":true}],["109 ",{"fg":3,"bold":true}],["                                                                                                                ",{}],["|",{"inverse":true}],["  6 ",{"fg":3,"bold":true}],["▸ .cache/",{"fg":6,"bold":true}],["         ",{}]],"6":[["                    ",{}],["|",{"inverse":true}],["110 ",{"fg":3,"bold":true}],["                                                *g:calendar_mruler*                                             ",{}],["|",{"inverse":true}],["  7 ",{"fg":3,"bold":true}],["▸ .config/",{"fg":6,"bold":true}],["        ",{}]],"7":[["▼",{"fg":3,"bold":true}],[" Last",{"fg":5,"bold":true}],[" : ",{}],["struct",{"fg":2,"bold":true}],["     ",{}],["|",{"inverse":true}],["111 ",{"fg":3,"bold":true}],["To change the month names for the calendar headings, set this variable.  The                                    ",{}],["|",{"inverse":true}],["  8 ",{"fg":3,"bold":true}],["▸ .dbus/",{"fg":6,"bold":true}],["          ",{}]],"8":[["    [functions]",{"fg":6,"bold":true}],["     ",{}],["|",{"inverse":true}],["112 ",{"fg":3,"bold":true}],["value is expected to be a comma-separated list of twelve values, starting with                                  ",{}],["|",{"inverse":true}],["  9 ",{"fg":3,"bold":true}],["▸ .gnupg/",{"fg":6,"bold":true}],["         ",{}]],"9":[["   ",{}],["+",{"fg":2,"bold":true}],["FirstRun(void)  ",{}],["|",{"inverse":true}],["113 ",{"fg":3,"bold":true}],["Janurary: >                                                                                                     ",{}],["|",{"inverse":true}],[" 10 ",{"fg":3,"bold":true}],["▸ .kde/",{"fg":6,"bold":true}],["           ",{}]],"10":[["   ",{}],["+",{"fg":2,"bold":true}],["FirstRun2(void) ",{}],["|",{"inverse":true}],["114 ",{"fg":3,"bold":true}],["  let g:calendar_mruler = 'Jan,Feb,Mar,Apr,May,Jun,Jul,Aug,Sep,Oct,Nov,Dec'                                     ",{}],["|",{"inverse":true}],[" 11 ",{"fg":3,"bold":true}],["▸ .local/",{"fg":6,"bold":true}],["         ",{}]],"11":[["   ",{}],["+",{"fg":2,"bold":true}],["~Last()         ",{}],["|",{"inverse":true}],["115 ",{"fg":3,"bold":true}],["<                                                                                                               ",{}],["|",{"inverse":true}],[" 12 ",{"fg":3,"bold":true}],["▸ .pki/",{"fg":6,"bold":true}],["           ",{}]],"12":[["   ",{}],["+",{"fg":2,"bold":true}],["SecondRun(void) ",{}],["|",{"inverse":true}],["116 ",{"fg":3,"bold":true}],["                                                                                                                ",{}],["|",{"inverse":true}],[" 13 ",{"fg":3,"bold":true}],["▸ .ssh/",{"fg":6,"bold":true}],["           ",{}]],"13":[["   ",{}],["+",{"fg":2,"bold":true}],["SecondRun2(void)",{}],["|",{"inverse":true}],["117 ",{"fg":3,"bold":true}],["                                                *g:calendar_wruler*                                             ",{}],["|",{"inverse":true}],[" 14 ",{"fg":3,"bold":true}],["▸ .vim/",{"fg":6,"bold":true}],["           ",{}]],"14":[["                    ",{}],["|",{"inverse":true}],["118 ",{"fg":3,"bold":true}],["To change the week names for the calendar headings, set this variable.  The                                     ",{}],["|",{"inverse":true}],[" 15 ",{"fg":3,"bold":true}],["▸ diary/",{"fg":6,"bold":true}],["          ",{}]],"15":[["▼",{"fg":3,"bold":true}],[" Second",{"fg":5,"bold":true}],[" : ",{}],["struct",{"fg":2,"bold":true}],["   ",{}],["|",{"inverse":true}],["119 ",{"fg":3,"bold":true}],["value is expected to be a space-separated list of seven values, starting with                                   ",{}],["|",{"inverse":true}],[" 16 ",{"fg":3,"bold":true}],["▸ temp/",{"fg":6,"bold":true}],["           ",{}]],"16":[["    [prototypes]",{"fg":6,"bold":true}],["    ",{}],["|",{"inverse":true}],["120 ",{"fg":3,"bold":true}],["Sunday: >                                                                                                       ",{}],["|",{"inverse":true}],[" 17 ",{"fg":3,"bold":true}],["  .bash_history   ",{}]],"17":[["   ",{}],["+",{"fg":2,"bold":true}],["SecondRun(void) ",{}],["|",{"inverse":true}],["121 ",{"fg":3,"bold":true}],["  let g:calendar_wruler = 'Su Mo Tu We Th Fr Sa'                                                                ",{}],["|",{"inverse":true}],[" 18 ",{"fg":3,"bold":true}],["  .bash_logout    ",{}]],"18":[["   ",{}],["+",{"fg":2,"bold":true}],["SecondRun2(void)",{}],["|",{"inverse":true}],["122 ",{"fg":3,"bold":true}],["<                                                                                                               ",{}],["|",{"inverse":true}],[" 19 ",{"fg":3,"bold":true}],["  .bash_profile   ",{"underline":true}]],"19":[["                    ",{}],["|",{"inverse":true}],["123 ",{"fg":3,"bold":true}],["                                                                                                                ",{}],["|",{"inverse":true}],[" 20 ",{"fg":3,"bold":true}],["  .bashrc         ",{}]],"20":[["▼",{"fg":3,"bold":true}],[" ",{}],["functions",{"fg":6,"bold":true}],["         ",{}],["|",{"inverse":true}],["124 ",{"fg":3,"bold":true}],["                                                *g:calendar_monday*                                             ",{}],["|",{"inverse":true}],[" 21 ",{"fg":3,"bold":true}],["  .cshrc          ",{}]],"21":[["    main(int argc, c",{"underline":true}],["|",{"inverse":true}],["125 ",{"fg":3,"bold":true}],["To make the week start on Monday rather than Sunday, set this variable.  Note                                   ",{}],["|",{"inverse":true}],[" 22 ",{"fg":3,"bold":true}],["  .dmrc           ",{}]],"22":[["~                   ",{"fg":4,"bold":true}],["|",{"inverse":true}],["126 ",{"fg":3,"bold":true}],["that the value of |g:calendar_wruler| is not affected by this; it should                                        ",{}],["|",{"inverse":true}],[" 23 ",{"fg":3,"bold":true}],["  .esd_auth       ",{}]],"23":[["~                   ",{"fg":4,"bold":true}],["|",{"inverse":true}],["127 ",{"fg":3,"bold":true}],["always begin with Sunday: >                                                                                     ",{}],["|",{"inverse":true}],[" 24 ",{"fg":3,"bold":true}],["  .gtkrc-2.0      ",{}]],"24":[["~                   ",{"fg":4,"bold":true}],["|",{"inverse":true}],["128 ",{"fg":3,"bold":true}],["  let g:calendar_monday = 1                                                                                     ",{}],["|",{"inverse":true}],[" 25 ",{"fg":3,"bold":true}],["  .gtkrc-2.0-kde4 ",{}]],"25":[["~                   ",{"fg":4,"bold":true}],["|",{"inverse":true}],["129 ",{"fg":3,"bold":true}],["<                                                                                                               ",{}],["|",{"inverse":true}],[" 26 ",{"fg":3,"bold":true}],["  .lesshst        ",{}]],"26":[["~                   ",{"fg":4,"bold":true}],["|",{"inverse":true}],["130 ",{"fg":3,"bold":true}],["                                                                                                                ",{}],["|",{"inverse":true}],[" 27 ",{"fg":3,"bold":true}],["  .tcshrc         ",{}]],"27":[["~                   ",{"fg":4,"bold":true}],["|",{"inverse":true}],["131 ",{"fg":3,"bold":true}],["                                                *g:calendar_weeknm*                                             ",{}],["|",{"inverse":true}],[" 28 ",{"fg":3,"bold":true}],["  .viminfo        ",{}]],"28":[["~                   ",{"fg":4,"bold":true}],["|",{"inverse":true}],["132 ",{"fg":3,"bold":true}],["To show the week number, set this variable.  There are four valid settings: >                                   ",{}],["|",{"inverse":true}],[" 29 ",{"fg":3,"bold":true}],["  .vimrc          ",{}]],"29":[["~                   ",{"fg":4,"bold":true}],["|",{"inverse":true}],["133 ",{"fg":3,"bold":true}],["  let g:calendar_weeknm = 1 \" WK01                                                                              ",{}],["|",{"inverse":true}],[" 30 ",{"fg":3,"bold":true}],["  .xsession-errors",{}]],"30":[["~                   ",{"fg":4,"bold":true}],["|",{"inverse":true}],["134 ",{"fg":3,"bold":true}],["  let g:calendar_weeknm = 2 \" WK 1                                                                              ",{}],["|",{"inverse":true}],[" 31 ",{"fg":3,"bold":true}],["  anaconda-ks.cfg ",{}]],"31":[["~                   ",{"fg":4,"bold":true}],["|",{"inverse":true}],["135 ",{"fg":3,"bold":true}],["  let g:calendar_weeknm = 3 \" KW01                                                                              ",{}],["|",{"inverse":true}],[" 32 ",{"fg":3,"bold":true}],["  initial-setup-ks",{}]],"32":[["~                   ",{"fg":4,"bold":true}],["|",{"inverse":true}],["136 ",{"fg":3,"bold":true}],["  let g:calendar_weeknm = 4 \" KW 1                                                                              ",{}],["|",{"inverse":true}],[" 33 ",{"fg":3,"bold":true}],["  test.c          ",{}]],"33":[["~                   ",{"fg":4,"bold":true}],["|",{"inverse":true}],["137 ",{"fg":3,"bold":true}],["  let g:calendar_weeknm = 5 \" 1                                                                                 ",{}],["|",{"inverse":true}],[" 34 ",{"fg":3,"bold":true}],["  test.cpp        ",{}]],"34":[["~                   ",{"fg":4,"bold":true}],["|",{"inverse":true}],["138 ",{"fg":3,"bold":true}],["<                                                                                                               ",{}],["|",{"inverse":true}],[" 35 ",{"fg":3,"bold":true}],["  .test.cpp.swp   ",{}]],"35":[["~                   ",{"fg":4,"bold":true}],["|",{"inverse":true}],["139 ",{"fg":3,"bold":true}],["                                                                                                                ",{}],["|",{"inverse":true}],["~                     ",{"fg":4,"bold":true}]],"36":[["~                   ",{"fg":4,"bold":true}],["|",{"inverse":true}],["140 ",{"fg":3,"bold":true}],["                                                *g:calendar_datetime*                                           ",{}],["|",{"inverse":true}],["~                     ",{"fg":4,"bold":true}]],"37":[["~                   ",{"fg":4,"bold":true}],["|",{"inverse":true}],["141 ",{"fg":3,"bold":true}],["To control display of the current date and time, set this variable.                                             ",{}],["|",{"inverse":true}],["~                     ",{"fg":4,"bold":true}]],"38":[["~                   ",{"fg":4,"bold":true}],["|",{"inverse":true}],["142 ",{"fg":3,"bold":true}],["Acceptable values are 'title', 'statusline', and '': >                                                          ",{}],["|",{"inverse":true}],["~                     ",{"fg":4,"bold":true}]],"39":[["~                   ",{"fg":4,"bold":true}],["|",{"inverse":true}],["143 ",{"fg":3,"bold":true}],["  let g:calendar_datetime = 'title'                                                                             ",{}],["|",{"inverse":true}],["~                     ",{"fg":4,"bold":true}]],"40":[["~                   ",{"fg":4,"bold":true}],["|",{"inverse":true}],["144 ",{"fg":3,"bold":true}],["<                                                                                                               ",{}],["|",{"inverse":true}],["~                     ",{"fg":4,"bold":true}]],"41":[["~                   ",{"fg":4,"bold":true}],["|",{"inverse":true}],["145 ",{"fg":3,"bold":true}],["                                                *g:calendar_filetype*                                           ",{}],["|",{"inverse":true}],["~                     ",{"fg":4,"bold":true}]],"42":[["~                   ",{"fg":4,"bold":true}],["|",{"inverse":true}],["146 ",{"fg":3,"bold":true}],["To control the filetype of calendar entries, set this variable. It defaults to                                  ",{}],["|",{"inverse":true}],["~                     ",{"fg":4,"bold":true}]],"43":[["~                   ",{"fg":4,"bold":true}],["|",{"inverse":true}],["147 ",{"fg":3,"bold":true}],["'markdown'. Acceptable values are values that are acceptable for |filetype|                                     ",{}],["|",{"inverse":true}],["~                     ",{"fg":4,"bold":true}]],"44":[["~                   ",{"fg":4,"bold":true}],["|",{"inverse":true}],["148 ",{"fg":3,"bold":true}],["like e.g. 'markdown' or 'pandoc':                                          ",{"underline":true}],["                                     ",{}],["|",{"inverse":true}],["~                     ",{"fg":4,"bold":true}]],"47":[["                                                                                                                                                                ",{}]]},"cursor":{"x":100,"y":44}}],[0.025896,{"lines":{"44":[["~                   ",{"fg":4,"bold":true}],["|",{"inverse":true}],["148 ",{"fg":3,"bold":true}],["like e.g. 'markdown' or 'pandoc':                                                                               ",{}],["|",{"inverse":true}],["~                     ",{"fg":4,"bold":true}]],"45":[["~                   ",{"fg":4,"bold":true}],["|",{"inverse":true}],["149 ",{"fg":3,"bold":true}],["  let g:calendar_filetype = 'pandoc'                                                                            ",{"underline":true}],["|",{"inverse":true}],["~                     ",{"fg":4,"bold":true}]],"46":[["[Name] test.cpp      ",{"inverse":true}],[" NORMAL ",{"bold":true}],[" ",{}],["calendar.txt ",{"bold":true}],["                                                        unix │ utf-8 │ text │  67% ",{}],[" LN 149",{"bold":true}],[":1  ",{}],[" ",{"bold":true,"inverse":true}],[" ~/…/calendar-vim/doc>",{"bold":true}]]},"cursor":{"x":25,"y":45,"visible":true}}],[0.014299,{"lines":{"0":[["\" Press <F1> for hel",{"fg":6,"bold":true}],["|",{"inverse":true}],["105 ",{"fg":3,"bold":true}],["the dating system and its offset from the Georgian calendar (A.D.).  For                                        ",{}],["|",{"inverse":true}],["  1 ",{"fg":3,"bold":true}],["\" Press ? for help",{"fg":5,"bold":true}]],"1":[["                    ",{}],["|",{"inverse":true}],["106 ",{"fg":3,"bold":true}],["example, to use the current Japanese era (Heisei), you would set: >                                             ",{}],["|",{"inverse":true}],["  2 ",{"fg":3,"bold":true}],["                  ",{}]],"2":[["▼",{"fg":3,"bold":true}],[" First",{"fg":5,"bold":true}],[" : ",{}],["struct",{"fg":2,"bold":true}],["    ",{}],["|",{"inverse":true}],["107 ",{"fg":3,"bold":true}],["  let g:calendar_erafmt = 'Heisei,-1988'                                                                        ",{}],["|",{"inverse":true}],["  3 ",{"fg":3,"bold":true}],[".. (up a dir)",{"fg":6,"bold":true}],["     ",{}]],"3":[["    [prototypes]",{"fg":6,"bold":true}],["    ",{}],["|",{"inverse":true}],["108 ",{"fg":3,"bold":true}],["<                                                                                                               ",{}],["|",{"inverse":true}],["  4 /root/",{"fg":3,"bold":true}],["            ",{}]],"4":[["   ",{}],["+",{"fg":2,"bold":true}],["FirstRun(void)  ",{}],["|",{"inverse":true}],["109 ",{"fg":3,"bold":true}],["                                                                                                                ",{}],["|",{"inverse":true}],["  5 ",{"fg":3,"bold":true}],["▸ .asciinema/",{"fg":6,"bold":true}],["     ",{}]],"5":[["   ",{}],["+",{"fg":2,"bold":true}],["FirstRun2(void) ",{}],["|",{"inverse":true}],["110 ",{"fg":3,"bold":true}],["                                                *g:calendar_mruler*                                             ",{}],["|",{"inverse":true}],["  6 ",{"fg":3,"bold":true}],["▸ .cache/",{"fg":6,"bold":true}],["         ",{}]],"6":[["                    ",{}],["|",{"inverse":true}],["111 ",{"fg":3,"bold":true}],["To change the month names for the calendar headings, set this variable.  The                                    ",{}],["|",{"inverse":true}],["  7 ",{"fg":3,"bold":true}],["▸ .config/",{"fg":6,"bold":true}],["        ",{}]],"7":[["▼",{"fg":3,"bold":true}],[" Last",{"fg":5,"bold":true}],[" : ",{}],["struct",{"fg":2,"bold":true}],["     ",{}],["|",{"inverse":true}],["112 ",{"fg":3,"bold":true}],["value is expected to be a comma-separated list of twelve values, starting with                                  ",{}],["|",{"inverse":true}],["  8 ",{"fg":3,"bold":true}],["▸ .dbus/",{"fg":6,"bold":true}],["          ",{}]],"8":[["    [functions]",{"fg":6,"bold":true}],["     ",{}],["|",{"inverse":true}],["113 ",{"fg":3,"bold":true}],["Janurary: >                                                                                                     ",{}],["|",{"inverse":true}],["  9 ",{"fg":3,"bold":true}],["▸ .gnupg/",{"fg":6,"bold":true}],["         ",{}]],"9":[["   ",{}],["+",{"fg":2,"bold":true}],["FirstRun(void)  ",{}],["|",{"inverse":true}],["114 ",{"fg":3,"bold":true}],["  let g:calendar_mruler = 'Jan,Feb,Mar,Apr,May,Jun,Jul,Aug,Sep,Oct,Nov,Dec'                                     ",{}],["|",{"inverse":true}],[" 10 ",{"fg":3,"bold":true}],["▸ .kde/",{"fg":6,"bold":true}],["           ",{}]],"10":[["   ",{}],["+",{"fg":2,"bold":true}],["FirstRun2(void) ",{}],["|",{"inverse":true}],["115 ",{"fg":3,"bold":true}],["<                                                                                                               ",{}],["|",{"inverse":true}],[" 11 ",{"fg":3,"bold":true}],["▸ .local/",{"fg":6,"bold":true}],["         ",{}]],"11":[["   ",{}],["+",{"fg":2,"bold":true}],["~Last()         ",{}],["|",{"inverse":true}],["116 ",{"fg":3,"bold":true}],["                                                                                                                ",{}],["|",{"inverse":true}],[" 12 ",{"fg":3,"bold":true}],["▸ .pki/",{"fg":6,"bold":true}],["           ",{}]],"12":[["   ",{}],["+",{"fg":2,"bold":true}],["SecondRun(void) ",{}],["|",{"inverse":true}],["117 ",{"fg":3,"bold":true}],["                                                *g:calendar_wruler*                                             ",{}],["|",{"inverse":true}],[" 13 ",{"fg":3,"bold":true}],["▸ .ssh/",{"fg":6,"bold":true}],["           ",{}]],"13":[["   ",{}],["+",{"fg":2,"bold":true}],["SecondRun2(void)",{}],["|",{"inverse":true}],["118 ",{"fg":3,"bold":true}],["To change the week names for the calendar headings, set this variable.  The                                     ",{}],["|",{"inverse":true}],[" 14 ",{"fg":3,"bold":true}],["▸ .vim/",{"fg":6,"bold":true}],["           ",{}]],"14":[["                    ",{}],["|",{"inverse":true}],["119 ",{"fg":3,"bold":true}],["value is expected to be a space-separated list of seven values, starting with                                   ",{}],["|",{"inverse":true}],[" 15 ",{"fg":3,"bold":true}],["▸ diary/",{"fg":6,"bold":true}],["          ",{}]],"15":[["▼",{"fg":3,"bold":true}],[" Second",{"fg":5,"bold":true}],[" : ",{}],["struct",{"fg":2,"bold":true}],["   ",{}],["|",{"inverse":true}],["120 ",{"fg":3,"bold":true}],["Sunday: >                                                                                                       ",{}],["|",{"inverse":true}],[" 16 ",{"fg":3,"bold":true}],["▸ temp/",{"fg":6,"bold":true}],["           ",{}]],"16":[["    [prototypes]",{"fg":6,"bold":true}],["    ",{}],["|",{"inverse":true}],["121 ",{"fg":3,"bold":true}],["  let g:calendar_wruler = 'Su Mo Tu We Th Fr Sa'                                                                ",{}],["|",{"inverse":true}],[" 17 ",{"fg":3,"bold":true}],["  .bash_history   ",{}]],"17":[["   ",{}],["+",{"fg":2,"bold":true}],["SecondRun(void) ",{}],["|",{"inverse":true}],["122 ",{"fg":3,"bold":true}],["<                                                                                                               ",{}],["|",{"inverse":true}],[" 18 ",{"fg":3,"bold":true}],["  .bash_logout    ",{}]],"18":[["   ",{}],["+",{"fg":2,"bold":true}],["SecondRun2(void)",{}],["|",{"inverse":true}],["123 ",{"fg":3,"bold":true}],["                                                                                                                ",{}],["|",{"inverse":true}],[" 19 ",{"fg":3,"bold":true}],["  .bash_profile   ",{"underline":true}]],"19":[["                    ",{}],["|",{"inverse":true}],["124 ",{"fg":3,"bold":true}],["                                                *g:calendar_monday*                                             ",{}],["|",{"inverse":true}],[" 20 ",{"fg":3,"bold":true}],["  .bashrc         ",{}]],"20":[["▼",{"fg":3,"bold":true}],[" ",{}],["functions",{"fg":6,"bold":true}],["         ",{}],["|",{"inverse":true}],["125 ",{"fg":3,"bold":true}],["To make the week start on Monday rather than Sunday, set this variable.  Note                                   ",{}],["|",{"inverse":true}],[" 21 ",{"fg":3,"bold":true}],["  .cshrc          ",{}]],"21":[["    main(int argc, c",{"underline":true}],["|",{"inverse":true}],["126 ",{"fg":3,"bold":true}],["that the value of |g:calendar_wruler| is not affected by this; it should                                        ",{}],["|",{"inverse":true}],[" 22 ",{"fg":3,"bold":true}],["  .dmrc           ",{}]],"22":[["~                   ",{"fg":4,"bold":true}],["|",{"inverse":true}],["127 ",{"fg":3,"bold":true}],["always begin with Sunday: >                                                                                     ",{}],["|",{"inverse":true}],[" 23 ",{"fg":3,"bold":true}],["  .esd_auth       ",{}]],"23":[["~                   ",{"fg":4,"bold":true}],["|",{"inverse":true}],["128 ",{"fg":3,"bold":true}],["  let g:calendar_monday = 1                                                                                     ",{}],["|",{"inverse":true}],[" 24 ",{"fg":3,"bold":true}],["  .gtkrc-2.0      ",{}]],"24":[["~                   ",{"fg":4,"bold":true}],["|",{"inverse":true}],["129 ",{"fg":3,"bold":true}],["<                                                                                                               ",{}],["|",{"inverse":true}],[" 25 ",{"fg":3,"bold":true}],["  .gtkrc-2.0-kde4 ",{}]],"25":[["~                   ",{"fg":4,"bold":true}],["|",{"inverse":true}],["130 ",{"fg":3,"bold":true}],["                                                                                                                ",{}],["|",{"inverse":true}],[" 26 ",{"fg":3,"bold":true}],["  .lesshst        ",{}]],"26":[["~                   ",{"fg":4,"bold":true}],["|",{"inverse":true}],["131 ",{"fg":3,"bold":true}],["                                                *g:calendar_weeknm*                                             ",{}],["|",{"inverse":true}],[" 27 ",{"fg":3,"bold":true}],["  .tcshrc         ",{}]],"27":[["~                   ",{"fg":4,"bold":true}],["|",{"inverse":true}],["132 ",{"fg":3,"bold":true}],["To show the week number, set this variable.  There are four valid settings: >                                   ",{}],["|",{"inverse":true}],[" 28 ",{"fg":3,"bold":true}],["  .viminfo        ",{}]],"28":[["~                   ",{"fg":4,"bold":true}],["|",{"inverse":true}],["133 ",{"fg":3,"bold":true}],["  let g:calendar_weeknm = 1 \" WK01                                                                              ",{}],["|",{"inverse":true}],[" 29 ",{"fg":3,"bold":true}],["  .vimrc          ",{}]],"29":[["~                   ",{"fg":4,"bold":true}],["|",{"inverse":true}],["134 ",{"fg":3,"bold":true}],["  let g:calendar_weeknm = 2 \" WK 1                                                                              ",{}],["|",{"inverse":true}],[" 30 ",{"fg":3,"bold":true}],["  .xsession-errors",{}]],"30":[["~                   ",{"fg":4,"bold":true}],["|",{"inverse":true}],["135 ",{"fg":3,"bold":true}],["  let g:calendar_weeknm = 3 \" KW01                                                                              ",{}],["|",{"inverse":true}],[" 31 ",{"fg":3,"bold":true}],["  anaconda-ks.cfg ",{}]],"31":[["~                   ",{"fg":4,"bold":true}],["|",{"inverse":true}],["136 ",{"fg":3,"bold":true}],["  let g:calendar_weeknm = 4 \" KW 1                                                                              ",{}],["|",{"inverse":true}],[" 32 ",{"fg":3,"bold":true}],["  initial-setup-ks",{}]],"32":[["~                   ",{"fg":4,"bold":true}],["|",{"inverse":true}],["137 ",{"fg":3,"bold":true}],["  let g:calendar_weeknm = 5 \" 1                                                                                 ",{}],["|",{"inverse":true}],[" 33 ",{"fg":3,"bold":true}],["  test.c          ",{}]],"33":[["~                   ",{"fg":4,"bold":true}],["|",{"inverse":true}],["138 ",{"fg":3,"bold":true}],["<                                                                                                               ",{}],["|",{"inverse":true}],[" 34 ",{"fg":3,"bold":true}],["  test.cpp        ",{}]],"34":[["~                   ",{"fg":4,"bold":true}],["|",{"inverse":true}],["139 ",{"fg":3,"bold":true}],["                                                                                                                ",{}],["|",{"inverse":true}],[" 35 ",{"fg":3,"bold":true}],["  .test.cpp.swp   ",{}]],"35":[["~                   ",{"fg":4,"bold":true}],["|",{"inverse":true}],["140 ",{"fg":3,"bold":true}],["                                                *g:calendar_datetime*                                           ",{}],["|",{"inverse":true}],["~                     ",{"fg":4,"bold":true}]],"36":[["~                   ",{"fg":4,"bold":true}],["|",{"inverse":true}],["141 ",{"fg":3,"bold":true}],["To control display of the current date and time, set this variable.                                             ",{}],["|",{"inverse":true}],["~                     ",{"fg":4,"bold":true}]],"37":[["~                   ",{"fg":4,"bold":true}],["|",{"inverse":true}],["142 ",{"fg":3,"bold":true}],["Acceptable values are 'title', 'statusline', and '': >                                                          ",{}],["|",{"inverse":true}],["~                     ",{"fg":4,"bold":true}]],"38":[["~                   ",{"fg":4,"bold":true}],["|",{"inverse":true}],["143 ",{"fg":3,"bold":true}],["  let g:calendar_datetime = 'title'                                                                             ",{}],["|",{"inverse":true}],["~                     ",{"fg":4,"bold":true}]],"39":[["~                   ",{"fg":4,"bold":true}],["|",{"inverse":true}],["144 ",{"fg":3,"bold":true}],["<                                                                                                               ",{}],["|",{"inverse":true}],["~                     ",{"fg":4,"bold":true}]],"40":[["~                   ",{"fg":4,"bold":true}],["|",{"inverse":true}],["145 ",{"fg":3,"bold":true}],["                                                *g:calendar_filetype*                                           ",{}],["|",{"inverse":true}],["~                     ",{"fg":4,"bold":true}]],"41":[["~                   ",{"fg":4,"bold":true}],["|",{"inverse":true}],["146 ",{"fg":3,"bold":true}],["To control the filetype of calendar entries, set this variable. It defaults to                                  ",{}],["|",{"inverse":true}],["~                     ",{"fg":4,"bold":true}]],"42":[["~                   ",{"fg":4,"bold":true}],["|",{"inverse":true}],["147 ",{"fg":3,"bold":true}],["'markdown'. Acceptable values are values that are acceptable for |filetype|                                     ",{}],["|",{"inverse":true}],["~                     ",{"fg":4,"bold":true}]],"43":[["~                   ",{"fg":4,"bold":true}],["|",{"inverse":true}],["148 ",{"fg":3,"bold":true}],["like e.g. 'markdown' or 'pandoc':                                                                               ",{}],["|",{"inverse":true}],["~                     ",{"fg":4,"bold":true}]],"44":[["~                   ",{"fg":4,"bold":true}],["|",{"inverse":true}],["149 ",{"fg":3,"bold":true}],["  let g:calendar_filetype = 'pandoc'                                                                            ",{}],["|",{"inverse":true}],["~                     ",{"fg":4,"bold":true}]],"45":[["~                   ",{"fg":4,"bold":true}],["|",{"inverse":true}],["150 ",{"fg":3,"bold":true}],["                                                                                                                ",{"underline":true}],["|",{"inverse":true}],["~                     ",{"fg":4,"bold":true}]],"46":[["[Name] test.cpp      ",{"inverse":true}],[" NORMAL ",{"bold":true}],[" ",{}],["calendar.txt ",{"bold":true}],["                                                        unix │ utf-8 │ text │  68% ",{}],[" LN 150",{"bold":true}],[":1  ",{}],[" ",{"bold":true,"inverse":true}],[" ~/…/calendar-vim/doc>",{"bold":true}]]}}],[0.041966,{"lines":{"0":[["\" Press <F1> for hel",{"fg":6,"bold":true}],["|",{"inverse":true}],["106 ",{"fg":3,"bold":true}],["example, to use the current Japanese era (Heisei), you would set: >                                             ",{}],["|",{"inverse":true}],["  1 ",{"fg":3,"bold":true}],["\" Press ? for help",{"fg":5,"bold":true}]],"1":[["                    ",{}],["|",{"inverse":true}],["107 ",{"fg":3,"bold":true}],["  let g:calendar_erafmt = 'Heisei,-1988'                                                                        ",{}],["|",{"inverse":true}],["  2 ",{"fg":3,"bold":true}],["                  ",{}]],"2":[["▼",{"fg":3,"bold":true}],[" First",{"fg":5,"bold":true}],[" : ",{}],["struct",{"fg":2,"bold":true}],["    ",{}],["|",{"inverse":true}],["108 ",{"fg":3,"bold":true}],["<                                                                                                               ",{}],["|",{"inverse":true}],["  3 ",{"fg":3,"bold":true}],[".. (up a dir)",{"fg":6,"bold":true}],["     ",{}]],"3":[["    [prototypes]",{"fg":6,"bold":true}],["    ",{}],["|",{"inverse":true}],["109 ",{"fg":3,"bold":true}],["                                                                                                                ",{}],["|",{"inverse":true}],["  4 /root/",{"fg":3,"bold":true}],["            ",{}]],"4":[["   ",{}],["+",{"fg":2,"bold":true}],["FirstRun(void)  ",{}],["|",{"inverse":true}],["110 ",{"fg":3,"bold":true}],["                                                *g:calendar_mruler*                                             ",{}],["|",{"inverse":true}],["  5 ",{"fg":3,"bold":true}],["▸ .asciinema/",{"fg":6,"bold":true}],["     ",{}]],"5":[["   ",{}],["+",{"fg":2,"bold":true}],["FirstRun2(void) ",{}],["|",{"inverse":true}],["111 ",{"fg":3,"bold":true}],["To change the month names for the calendar headings, set this variable.  The                                    ",{}],["|",{"inverse":true}],["  6 ",{"fg":3,"bold":true}],["▸ .cache/",{"fg":6,"bold":true}],["         ",{}]],"6":[["                    ",{}],["|",{"inverse":true}],["112 ",{"fg":3,"bold":true}],["value is expected to be a comma-separated list of twelve values, starting with                                  ",{}],["|",{"inverse":true}],["  7 ",{"fg":3,"bold":true}],["▸ .config/",{"fg":6,"bold":true}],["        ",{}]],"7":[["▼",{"fg":3,"bold":true}],[" Last",{"fg":5,"bold":true}],[" : ",{}],["struct",{"fg":2,"bold":true}],["     ",{}],["|",{"inverse":true}],["113 ",{"fg":3,"bold":true}],["value is expected to be a comma-separated list of twelve values, starting with                                  ",{}],["|",{"inverse":true}],["  8 ",{"fg":3,"bold":true}],["▸ .dbus/",{"fg":6,"bold":true}],["          ",{}]]},"cursor":{"y":7,"visible":false}}],[0.016579,{"lines":{"0":[["\" Press <F1> for hel",{"fg":6,"bold":true}],["|",{"inverse":true}],["107 ",{"fg":3,"bold":true}],["  let g:calendar_erafmt = 'Heisei,-1988'                                                                        ",{}],["|",{"inverse":true}],["  1 ",{"fg":3,"bold":true}],["\" Press ? for help",{"fg":5,"bold":true}]],"1":[["                    ",{}],["|",{"inverse":true}],["108 ",{"fg":3,"bold":true}],["<                                                                                                               ",{}],["|",{"inverse":true}],["  2 ",{"fg":3,"bold":true}],["                  ",{}]],"2":[["▼",{"fg":3,"bold":true}],[" First",{"fg":5,"bold":true}],[" : ",{}],["struct",{"fg":2,"bold":true}],["    ",{}],["|",{"inverse":true}],["109 ",{"fg":3,"bold":true}],["                                                                                                                ",{}],["|",{"inverse":true}],["  3 ",{"fg":3,"bold":true}],[".. (up a dir)",{"fg":6,"bold":true}],["     ",{}]],"3":[["    [prototypes]",{"fg":6,"bold":true}],["    ",{}],["|",{"inverse":true}],["110 ",{"fg":3,"bold":true}],["                                                *g:calendar_mruler*                                             ",{}],["|",{"inverse":true}],["  4 /root/",{"fg":3,"bold":true}],["            ",{}]],"4":[["   ",{}],["+",{"fg":2,"bold":true}],["FirstRun(void)  ",{}],["|",{"inverse":true}],["111 ",{"fg":3,"bold":true}],["To change the month names for the calendar headings, set this variable.  The                                    ",{}],["|",{"inverse":true}],["  5 ",{"fg":3,"bold":true}],["▸ .asciinema/",{"fg":6,"bold":true}],["     ",{}]],"5":[["   ",{}],["+",{"fg":2,"bold":true}],["FirstRun2(void) ",{}],["|",{"inverse":true}],["112 ",{"fg":3,"bold":true}],["value is expected to be a comma-separated list of twelve values, starting with                                  ",{}],["|",{"inverse":true}],["  6 ",{"fg":3,"bold":true}],["▸ .cache/",{"fg":6,"bold":true}],["         ",{}]],"6":[["                    ",{}],["|",{"inverse":true}],["113 ",{"fg":3,"bold":true}],["Janurary: >                                                                                                     ",{}],["|",{"inverse":true}],["  7 ",{"fg":3,"bold":true}],["▸ .config/",{"fg":6,"bold":true}],["        ",{}]],"7":[["▼",{"fg":3,"bold":true}],[" Last",{"fg":5,"bold":true}],[" : ",{}],["struct",{"fg":2,"bold":true}],["     ",{}],["|",{"inverse":true}],["114 ",{"fg":3,"bold":true}],["  let g:calendar_mruler = 'Jan                                                                                  ",{}],["|",{"inverse":true}],["  8 ",{"fg":3,"bold":true}],["▸ .dbus/",{"fg":6,"bold":true}],["          ",{}]],"8":[["    [functions]",{"fg":6,"bold":true}],["     ",{}],["|",{"inverse":true}],["114 ",{"fg":3,"bold":true}],["  let g:calendar_mruler = 'Jan,Feb,Mar,Apr,May,Jun,Jul,Aug,Sep,Oct,Nov,Dec'                                     ",{}],["|",{"inverse":true}],["  9 ",{"fg":3,"bold":true}],["▸ .gnupg/",{"fg":6,"bold":true}],["         ",{}]],"9":[["   ",{}],["+",{"fg":2,"bold":true}],["FirstRun(void)  ",{}],["|",{"inverse":true}],["115 ",{"fg":3,"bold":true}],["<                                                                                                               ",{}],["|",{"inverse":true}],[" 10 ",{"fg":3,"bold":true}],["▸ .kde/",{"fg":6,"bold":true}],["           ",{}]],"10":[["   ",{}],["+",{"fg":2,"bold":true}],["FirstRun2(void) ",{}],["|",{"inverse":true}],["116 ",{"fg":3,"bold":true}],["                                                                                                                ",{}],["|",{"inverse":true}],[" 11 ",{"fg":3,"bold":true}],["▸ .local/",{"fg":6,"bold":true}],["         ",{}]],"11":[["   ",{}],["+",{"fg":2,"bold":true}],["~Last()         ",{}],["|",{"inverse":true}],["117 ",{"fg":3,"bold":true}],["                                                *g:calendar_wruler*                                             ",{}],["|",{"inverse":true}],[" 12 ",{"fg":3,"bold":true}],["▸ .pki/",{"fg":6,"bold":true}],["           ",{}]],"12":[["   ",{}],["+",{"fg":2,"bold":true}],["SecondRun(void) ",{}],["|",{"inverse":true}],["118 ",{"fg":3,"bold":true}],["To change the week names for the calendar headings, set this variable.  The                                     ",{}],["|",{"inverse":true}],[" 13 ",{"fg":3,"bold":true}],["▸ .ssh/",{"fg":6,"bold":true}],["           ",{}]],"13":[["   ",{}],["+",{"fg":2,"bold":true}],["SecondRun2(void)",{}],["|",{"inverse":true}],["119 ",{"fg":3,"bold":true}],["value is expected to be a space-separated list of seven values, starting with                                   ",{}],["|",{"inverse":true}],[" 14 ",{"fg":3,"bold":true}],["▸ .vim/",{"fg":6,"bold":true}],["           ",{}]],"14":[["                    ",{}],["|",{"inverse":true}],["120 ",{"fg":3,"bold":true}],["Sunday: >                                                                                                       ",{}],["|",{"inverse":true}],[" 15 ",{"fg":3,"bold":true}],["▸ diary/",{"fg":6,"bold":true}],["          ",{}]],"15":[["▼",{"fg":3,"bold":true}],[" Second",{"fg":5,"bold":true}],[" : ",{}],["struct",{"fg":2,"bold":true}],["   ",{}],["|",{"inverse":true}],["121 ",{"fg":3,"bold":true}],["  let g:calendar_wruler = 'Su Mo Tu We Th Fr Sa'                                                                ",{}],["|",{"inverse":true}],[" 16 ",{"fg":3,"bold":true}],["▸ temp/",{"fg":6,"bold":true}],["           ",{}]],"16":[["    [prototypes]",{"fg":6,"bold":true}],["    ",{}],["|",{"inverse":true}],["122 ",{"fg":3,"bold":true}],["<                                                                                                               ",{}],["|",{"inverse":true}],[" 17 ",{"fg":3,"bold":true}],["  .bash_history   ",{}]],"17":[["   ",{}],["+",{"fg":2,"bold":true}],["SecondRun(void) ",{}],["|",{"inverse":true}],["123 ",{"fg":3,"bold":true}],["                                                                                                                ",{}],["|",{"inverse":true}],[" 18 ",{"fg":3,"bold":true}],["  .bash_logout    ",{}]],"18":[["   ",{}],["+",{"fg":2,"bold":true}],["SecondRun2(void)",{}],["|",{"inverse":true}],["124 ",{"fg":3,"bold":true}],["                                                *g:calendar_monday*                                             ",{}],["|",{"inverse":true}],[" 19 ",{"fg":3,"bold":true}],["  .bash_profile   ",{"underline":true}]],"19":[["                    ",{}],["|",{"inverse":true}],["125 ",{"fg":3,"bold":true}],["To make the week start on Monday rather than Sunday, set this variable.  Note                                   ",{}],["|",{"inverse":true}],[" 20 ",{"fg":3,"bold":true}],["  .bashrc         ",{}]],"20":[["▼",{"fg":3,"bold":true}],[" ",{}],["functions",{"fg":6,"bold":true}],["         ",{}],["|",{"inverse":true}],["126 ",{"fg":3,"bold":true}],["that the value of |g:calendar_wruler| is not affected by this; it should                                        ",{}],["|",{"inverse":true}],[" 21 ",{"fg":3,"bold":true}],["  .cshrc          ",{}]],"21":[["    main(int argc, c",{"underline":true}],["|",{"inverse":true}],["127 ",{"fg":3,"bold":true}],["always begin with Sunday: >                                                                                     ",{}],["|",{"inverse":true}],[" 22 ",{"fg":3,"bold":true}],["  .dmrc           ",{}]],"22":[["~                   ",{"fg":4,"bold":true}],["|",{"inverse":true}],["128 ",{"fg":3,"bold":true}],["  let g:calendar_monday = 1                                                                                     ",{}],["|",{"inverse":true}],[" 23 ",{"fg":3,"bold":true}],["  .esd_auth       ",{}]],"23":[["~                   ",{"fg":4,"bold":true}],["|",{"inverse":true}],["129 ",{"fg":3,"bold":true}],["<                                                                                                               ",{}],["|",{"inverse":true}],[" 24 ",{"fg":3,"bold":true}],["  .gtkrc-2.0      ",{}]],"24":[["~                   ",{"fg":4,"bold":true}],["|",{"inverse":true}],["130 ",{"fg":3,"bold":true}],["                                                                                                                ",{}],["|",{"inverse":true}],[" 25 ",{"fg":3,"bold":true}],["  .gtkrc-2.0-kde4 ",{}]],"25":[["~                   ",{"fg":4,"bold":true}],["|",{"inverse":true}],["131 ",{"fg":3,"bold":true}],["                                                *g:calendar_weeknm*                                             ",{}],["|",{"inverse":true}],[" 26 ",{"fg":3,"bold":true}],["  .lesshst        ",{}]],"26":[["~                   ",{"fg":4,"bold":true}],["|",{"inverse":true}],["132 ",{"fg":3,"bold":true}],["To show the week number, set this variable.  There are four valid settings: >                                   ",{}],["|",{"inverse":true}],[" 27 ",{"fg":3,"bold":true}],["  .tcshrc         ",{}]],"27":[["~                   ",{"fg":4,"bold":true}],["|",{"inverse":true}],["133 ",{"fg":3,"bold":true}],["  let g:calendar_weeknm = 1 \" WK01                                                                              ",{}],["|",{"inverse":true}],[" 28 ",{"fg":3,"bold":true}],["  .viminfo        ",{}]],"28":[["~                   ",{"fg":4,"bold":true}],["|",{"inverse":true}],["134 ",{"fg":3,"bold":true}],["  let g:calendar_weeknm = 2 \" WK 1                                                                              ",{}],["|",{"inverse":true}],[" 29 ",{"fg":3,"bold":true}],["  .vimrc          ",{}]],"29":[["~                   ",{"fg":4,"bold":true}],["|",{"inverse":true}],["135 ",{"fg":3,"bold":true}],["  let g:calendar_weeknm = 3 \" KW01                                                                              ",{}],["|",{"inverse":true}],[" 30 ",{"fg":3,"bold":true}],["  .xsession-errors",{}]],"30":[["~                   ",{"fg":4,"bold":true}],["|",{"inverse":true}],["136 ",{"fg":3,"bold":true}],["  let g:calendar_weeknm = 4 \" KW 1                                                                              ",{}],["|",{"inverse":true}],[" 31 ",{"fg":3,"bold":true}],["  anaconda-ks.cfg ",{}]],"31":[["~                   ",{"fg":4,"bold":true}],["|",{"inverse":true}],["137 ",{"fg":3,"bold":true}],["  let g:calendar_weeknm = 5 \" 1                                                                                 ",{}],["|",{"inverse":true}],[" 32 ",{"fg":3,"bold":true}],["  initial-setup-ks",{}]],"32":[["~                   ",{"fg":4,"bold":true}],["|",{"inverse":true}],["138 ",{"fg":3,"bold":true}],["<                                                                                                               ",{}],["|",{"inverse":true}],[" 33 ",{"fg":3,"bold":true}],["  test.c          ",{}]],"33":[["~                   ",{"fg":4,"bold":true}],["|",{"inverse":true}],["139 ",{"fg":3,"bold":true}],["                                                                                                                ",{}],["|",{"inverse":true}],[" 34 ",{"fg":3,"bold":true}],["  test.cpp        ",{}]],"34":[["~                   ",{"fg":4,"bold":true}],["|",{"inverse":true}],["140 ",{"fg":3,"bold":true}],["                                                *g:calendar_datetime*                                           ",{}],["|",{"inverse":true}],[" 35 ",{"fg":3,"bold":true}],["  .test.cpp.swp   ",{}]],"35":[["~                   ",{"fg":4,"bold":true}],["|",{"inverse":true}],["141 ",{"fg":3,"bold":true}],["To control display of the current date and time, set this variable.                                             ",{}],["|",{"inverse":true}],["~                     ",{"fg":4,"bold":true}]],"36":[["~                   ",{"fg":4,"bold":true}],["|",{"inverse":true}],["142 ",{"fg":3,"bold":true}],["Acceptable values are 'title', 'statusline', and '': >                                                          ",{}],["|",{"inverse":true}],["~                     ",{"fg":4,"bold":true}]],"37":[["~                   ",{"fg":4,"bold":true}],["|",{"inverse":true}],["143 ",{"fg":3,"bold":true}],["  let g:calendar_datetime = 'title'                                                                             ",{}],["|",{"inverse":true}],["~                     ",{"fg":4,"bold":true}]],"38":[["~                   ",{"fg":4,"bold":true}],["|",{"inverse":true}],["144 ",{"fg":3,"bold":true}],["<                                                                                                               ",{}],["|",{"inverse":true}],["~                     ",{"fg":4,"bold":true}]],"39":[["~                   ",{"fg":4,"bold":true}],["|",{"inverse":true}],["145 ",{"fg":3,"bold":true}],["                                                *g:calendar_filetype*                                           ",{}],["|",{"inverse":true}],["~                     ",{"fg":4,"bold":true}]],"40":[["~                   ",{"fg":4,"bold":true}],["|",{"inverse":true}],["146 ",{"fg":3,"bold":true}],["To control the filetype of calendar entries, set this variable. It defaults to                                  ",{}],["|",{"inverse":true}],["~                     ",{"fg":4,"bold":true}]],"41":[["~                   ",{"fg":4,"bold":true}],["|",{"inverse":true}],["147 ",{"fg":3,"bold":true}],["'markdown'. Acceptable values are values that are acceptable for |filetype|                                     ",{}],["|",{"inverse":true}],["~                     ",{"fg":4,"bold":true}]],"42":[["~                   ",{"fg":4,"bold":true}],["|",{"inverse":true}],["148 ",{"fg":3,"bold":true}],["like e.g. 'markdown' or 'pandoc':                                                                               ",{}],["|",{"inverse":true}],["~                     ",{"fg":4,"bold":true}]],"43":[["~                   ",{"fg":4,"bold":true}],["|",{"inverse":true}],["149 ",{"fg":3,"bold":true}],["  let g:calendar_filetype = 'pandoc'                                                                            ",{}],["|",{"inverse":true}],["~                     ",{"fg":4,"bold":true}]],"44":[["~                   ",{"fg":4,"bold":true}],["|",{"inverse":true}],["150 ",{"fg":3,"bold":true}],["                                                                                                                ",{}],["|",{"inverse":true}],["~                     ",{"fg":4,"bold":true}]],"45":[["~                   ",{"fg":4,"bold":true}],["|",{"inverse":true}],["151 ",{"fg":3,"bold":true}],["                                                                                                                ",{"underline":true}],["|",{"inverse":true}],["~                     ",{"fg":4,"bold":true}]],"46":[["[Name] test.cpp      ",{"inverse":true}],[" NORMAL ",{"bold":true}],[" ",{}],["calendar.txt ",{"bold":true}],["                                                        unix │ utf-8 │ text │  68% ",{}],[" LN 151",{"bold":true}],[":1  ",{}],[" ",{"bold":true,"inverse":true}],[" ~/…/calendar-vim/doc>",{"bold":true}]]},"cursor":{"x":55}}],[0.008448000000000001,{"lines":{"7":[["▼",{"fg":3,"bold":true}],[" Last",{"fg":5,"bold":true}],[" : ",{}],["struct",{"fg":2,"bold":true}],["     ",{}],["|",{"inverse":true}],["114 ",{"fg":3,"bold":true}],["  let g:calendar_mruler = 'Jan,Feb,Mar,Apr,May,Jun,Jul,Aug,Sep,Oct,Nov,Dec'                                     ",{}],["|",{"inverse":true}],["  8 ",{"fg":3,"bold":true}],["▸ .dbus/",{"fg":6,"bold":true}],["          ",{}]],"8":[["    [functions]",{"fg":6,"bold":true}],["     ",{}],["|",{"inverse":true}],["115 ",{"fg":3,"bold":true}],["<                                                                                                               ",{}],["|",{"inverse":true}],["  9 ",{"fg":3,"bold":true}],["▸ .gnupg/",{"fg":6,"bold":true}],["         ",{}]],"9":[["   ",{}],["+",{"fg":2,"bold":true}],["FirstRun(void)  ",{}],["|",{"inverse":true}],["116 ",{"fg":3,"bold":true}],["                                                                                                                ",{}],["|",{"inverse":true}],[" 10 ",{"fg":3,"bold":true}],["▸ .kde/",{"fg":6,"bold":true}],["           ",{}]],"10":[["   ",{}],["+",{"fg":2,"bold":true}],["FirstRun2(void) ",{}],["|",{"inverse":true}],["117 ",{"fg":3,"bold":true}],["                                                *g:calendar_wruler*                                             ",{}],["|",{"inverse":true}],[" 11 ",{"fg":3,"bold":true}],["▸ .local/",{"fg":6,"bold":true}],["         ",{}]],"11":[["   ",{}],["+",{"fg":2,"bold":true}],["~Last()         ",{}],["|",{"inverse":true}],["118 ",{"fg":3,"bold":true}],["To change the week names for the calendar headings, set this variable.  The                                     ",{}],["|",{"inverse":true}],[" 12 ",{"fg":3,"bold":true}],["▸ .pki/",{"fg":6,"bold":true}],["           ",{}]],"12":[["   ",{}],["+",{"fg":2,"bold":true}],["SecondRun(void) ",{}],["|",{"inverse":true}],["119 ",{"fg":3,"bold":true}],["value is expected to be a space-separated list of seven values, starting with                                   ",{}],["|",{"inverse":true}],[" 13 ",{"fg":3,"bold":true}],["▸ .ssh/",{"fg":6,"bold":true}],["           ",{}]],"13":[["   ",{}],["+",{"fg":2,"bold":true}],["SecondRun2(void)",{}],["|",{"inverse":true}],["120 ",{"fg":3,"bold":true}],["Sunday: >                                                                                                       ",{}],["|",{"inverse":true}],[" 14 ",{"fg":3,"bold":true}],["▸ .vim/",{"fg":6,"bold":true}],["           ",{}]],"14":[["                    ",{}],["|",{"inverse":true}],["121 ",{"fg":3,"bold":true}],["  let g:calendar_wruler = 'Su Mo Tu We Th Fr Sa'                                                                ",{}],["|",{"inverse":true}],[" 15 ",{"fg":3,"bold":true}],["▸ diary/",{"fg":6,"bold":true}],["          ",{}]],"15":[["▼",{"fg":3,"bold":true}],[" Second",{"fg":5,"bold":true}],[" : ",{}],["struct",{"fg":2,"bold":true}],["   ",{}],["|",{"inverse":true}],["122 ",{"fg":3,"bold":true}],["<                                                                                                               ",{}],["|",{"inverse":true}],[" 16 ",{"fg":3,"bold":true}],["▸ temp/",{"fg":6,"bold":true}],["           ",{}]],"16":[["    [prototypes]",{"fg":6,"bold":true}],["    ",{}],["|",{"inverse":true}],["123 ",{"fg":3,"bold":true}],["                                                                                                                ",{}],["|",{"inverse":true}],[" 17 ",{"fg":3,"bold":true}],["  .bash_history   ",{}]],"17":[["   ",{}],["+",{"fg":2,"bold":true}],["SecondRun(void) ",{}],["|",{"inverse":true}],["124 ",{"fg":3,"bold":true}],["                                                *g:calendar_monday*                                             ",{}],["|",{"inverse":true}],[" 18 ",{"fg":3,"bold":true}],["  .bash_logout    ",{}]],"18":[["   ",{}],["+",{"fg":2,"bold":true}],["SecondRun2(void)",{}],["|",{"inverse":true}],["125 ",{"fg":3,"bold":true}],["To make the week start on Monday rather than Sunday, set this variable.  Note                                   ",{}],["|",{"inverse":true}],[" 19 ",{"fg":3,"bold":true}],["  .bash_profile   ",{"underline":true}]],"19":[["                    ",{}],["|",{"inverse":true}],["126 ",{"fg":3,"bold":true}],["that the value of |g:calendar_wruler| is not affected by this; it should                                        ",{}],["|",{"inverse":true}],[" 20 ",{"fg":3,"bold":true}],["  .bashrc         ",{}]],"20":[["▼",{"fg":3,"bold":true}],[" ",{}],["functions",{"fg":6,"bold":true}],["         ",{}],["|",{"inverse":true}],["127 ",{"fg":3,"bold":true}],["always begin with Sunday: >                                                                                     ",{}],["|",{"inverse":true}],[" 21 ",{"fg":3,"bold":true}],["  .cshrc          ",{}]],"21":[["    main(int argc, c",{"underline":true}],["|",{"inverse":true}],["128 ",{"fg":3,"bold":true}],["  let g:calendar_monday = 1                                                                                     ",{}],["|",{"inverse":true}],[" 22 ",{"fg":3,"bold":true}],["  .dmrc           ",{}]],"22":[["~                   ",{"fg":4,"bold":true}],["|",{"inverse":true}],["129 ",{"fg":3,"bold":true}],["<                                                                                                               ",{}],["|",{"inverse":true}],[" 23 ",{"fg":3,"bold":true}],["  .esd_auth       ",{}]],"23":[["~                   ",{"fg":4,"bold":true}],["|",{"inverse":true}],["130 ",{"fg":3,"bold":true}],["                                                                                                                ",{}],["|",{"inverse":true}],[" 24 ",{"fg":3,"bold":true}],["  .gtkrc-2.0      ",{}]],"24":[["~                   ",{"fg":4,"bold":true}],["|",{"inverse":true}],["131 ",{"fg":3,"bold":true}],["                                                *g:calendar_weeknm*                                             ",{}],["|",{"inverse":true}],[" 25 ",{"fg":3,"bold":true}],["  .gtkrc-2.0-kde4 ",{}]],"25":[["~                   ",{"fg":4,"bold":true}],["|",{"inverse":true}],["132 ",{"fg":3,"bold":true}],["To show the week number, set this variable.  There are four valid settings: >                                   ",{}],["|",{"inverse":true}],[" 26 ",{"fg":3,"bold":true}],["  .lesshst        ",{}]],"26":[["~                   ",{"fg":4,"bold":true}],["|",{"inverse":true}],["133 ",{"fg":3,"bold":true}],["  let g:calendar_weeknm = 1 \" WK01                                                                              ",{}],["|",{"inverse":true}],[" 27 ",{"fg":3,"bold":true}],["  .tcshrc         ",{}]],"27":[["~                   ",{"fg":4,"bold":true}],["|",{"inverse":true}],["134 ",{"fg":3,"bold":true}],["  let g:calendar_weeknm = 2 \" WK 1                                                                              ",{}],["|",{"inverse":true}],[" 28 ",{"fg":3,"bold":true}],["  .viminfo        ",{}]],"28":[["~                   ",{"fg":4,"bold":true}],["|",{"inverse":true}],["135 ",{"fg":3,"bold":true}],["  let g:calendar_weeknm = 3 \" KW01                                                                              ",{}],["|",{"inverse":true}],[" 29 ",{"fg":3,"bold":true}],["  .vimrc          ",{}]],"29":[["~                   ",{"fg":4,"bold":true}],["|",{"inverse":true}],["136 ",{"fg":3,"bold":true}],["  let g:calendar_weeknm = 4 \" KW 1                                                                              ",{}],["|",{"inverse":true}],[" 30 ",{"fg":3,"bold":true}],["  .xsession-errors",{}]],"30":[["~                   ",{"fg":4,"bold":true}],["|",{"inverse":true}],["137 ",{"fg":3,"bold":true}],["  let g:calendar_weeknm = 5 \" 1                                                                                 ",{}],["|",{"inverse":true}],[" 31 ",{"fg":3,"bold":true}],["  anaconda-ks.cfg ",{}]],"31":[["~                   ",{"fg":4,"bold":true}],["|",{"inverse":true}],["138 ",{"fg":3,"bold":true}],["<                                                                                                               ",{}],["|",{"inverse":true}],[" 32 ",{"fg":3,"bold":true}],["  initial-setup-ks",{}]],"32":[["~                   ",{"fg":4,"bold":true}],["|",{"inverse":true}],["139 ",{"fg":3,"bold":true}],["                                                                                                                ",{}],["|",{"inverse":true}],[" 33 ",{"fg":3,"bold":true}],["  test.c          ",{}]],"33":[["~                   ",{"fg":4,"bold":true}],["|",{"inverse":true}],["140 ",{"fg":3,"bold":true}],["                                                *g:calendar_datetime*                                           ",{}],["|",{"inverse":true}],[" 34 ",{"fg":3,"bold":true}],["  test.cpp        ",{}]],"34":[["~                   ",{"fg":4,"bold":true}],["|",{"inverse":true}],["141 ",{"fg":3,"bold":true}],["To control display of the current date and time, set this variable.                                             ",{}],["|",{"inverse":true}],[" 35 ",{"fg":3,"bold":true}],["  .test.cpp.swp   ",{}]],"35":[["~                   ",{"fg":4,"bold":true}],["|",{"inverse":true}],["142 ",{"fg":3,"bold":true}],["Acceptable values are 'title', 'statusline', and '': >                                                          ",{}],["|",{"inverse":true}],["~                     ",{"fg":4,"bold":true}]],"36":[["~                   ",{"fg":4,"bold":true}],["|",{"inverse":true}],["143 ",{"fg":3,"bold":true}],["  let g:calendar_datetime = 'title'                                                                             ",{}],["|",{"inverse":true}],["~                     ",{"fg":4,"bold":true}]],"37":[["~                   ",{"fg":4,"bold":true}],["|",{"inverse":true}],["144 ",{"fg":3,"bold":true}],["<                                                                                                               ",{}],["|",{"inverse":true}],["~                     ",{"fg":4,"bold":true}]],"38":[["~                   ",{"fg":4,"bold":true}],["|",{"inverse":true}],["145 ",{"fg":3,"bold":true}],["                                                *g:calendar_filetype*                                           ",{}],["|",{"inverse":true}],["~                     ",{"fg":4,"bold":true}]],"39":[["~                   ",{"fg":4,"bold":true}],["|",{"inverse":true}],["146 ",{"fg":3,"bold":true}],["To control the filetype of calendar entries, set this variable. It defaults to                                  ",{}],["|",{"inverse":true}],["~                     ",{"fg":4,"bold":true}]],"40":[["~                   ",{"fg":4,"bold":true}],["|",{"inverse":true}],["147 ",{"fg":3,"bold":true}],["'markdown'. Acceptable values are values that are acceptable for |filetype|                                     ",{}],["|",{"inverse":true}],["~                     ",{"fg":4,"bold":true}]],"41":[["~                   ",{"fg":4,"bold":true}],["|",{"inverse":true}],["148 ",{"fg":3,"bold":true}],["like e.g. 'markdown' or 'pandoc':                                                                               ",{}],["|",{"inverse":true}],["~                     ",{"fg":4,"bold":true}]],"42":[["~                   ",{"fg":4,"bold":true}],["|",{"inverse":true}],["149 ",{"fg":3,"bold":true}],["  let g:calendar_filetype = 'pandoc'                                                                            ",{}],["|",{"inverse":true}],["~                     ",{"fg":4,"bold":true}]],"43":[["~                   ",{"fg":4,"bold":true}],["|",{"inverse":true}],["150 ",{"fg":3,"bold":true}],["                                                                                                                ",{}],["|",{"inverse":true}],["~                     ",{"fg":4,"bold":true}]],"44":[["~                   ",{"fg":4,"bold":true}],["|",{"inverse":true}],["151 ",{"fg":3,"bold":true}],["                                                                                                                ",{}],["|",{"inverse":true}],["~                     ",{"fg":4,"bold":true}]],"45":[["~                   ",{"fg":4,"bold":true}],["|",{"inverse":true}],["152 ",{"fg":3,"bold":true}],["HOOKS                                           *calendar-hooks*                                                ",{"underline":true}],["|",{"inverse":true}],["~                     ",{"fg":4,"bold":true}]],"46":[["[Name] test.cpp      ",{"inverse":true}],[" NORMAL ",{"bold":true}],[" ",{}],["calendar.txt ",{"bold":true}],["                                                        unix │ utf-8 │ text │  69% ",{}],[" LN 152",{"bold":true}],[":1  ",{}],[" ",{"bold":true,"inverse":true}],[" ~/…/calendar-vim/doc>",{"bold":true}]]},"cursor":{"x":25,"y":45,"visible":true}}],[0.027903,{"lines":{"47":[["                                                                                                                                                     j          ",{}]]},"cursor":{"visible":false}}],[0.011137,{"lines":{"0":[["\" Press <F1> for hel",{"fg":6,"bold":true}],["|",{"inverse":true}],["108 ",{"fg":3,"bold":true}],["<                                                                                                               ",{}],["|",{"inverse":true}],["  1 ",{"fg":3,"bold":true}],["\" Press ? for help",{"fg":5,"bold":true}]],"1":[["                    ",{}],["|",{"inverse":true}],["109 ",{"fg":3,"bold":true}],["                                                                                                                ",{}],["|",{"inverse":true}],["  2 ",{"fg":3,"bold":true}],["                  ",{}]],"2":[["▼",{"fg":3,"bold":true}],[" First",{"fg":5,"bold":true}],[" : ",{}],["struct",{"fg":2,"bold":true}],["    ",{}],["|",{"inverse":true}],["110 ",{"fg":3,"bold":true}],["                                                *g:calendar_mruler*                                             ",{}],["|",{"inverse":true}],["  3 ",{"fg":3,"bold":true}],[".. (up a dir)",{"fg":6,"bold":true}],["     ",{}]],"3":[["    [prototypes]",{"fg":6,"bold":true}],["    ",{}],["|",{"inverse":true}],["111 ",{"fg":3,"bold":true}],["To change the month names for the calendar headings, set this variable.  The                                    ",{}],["|",{"inverse":true}],["  4 /root/",{"fg":3,"bold":true}],["            ",{}]],"4":[["   ",{}],["+",{"fg":2,"bold":true}],["FirstRun(void)  ",{}],["|",{"inverse":true}],["112 ",{"fg":3,"bold":true}],["value is expected to be a comma-separated list of twelve values, starting with                                  ",{}],["|",{"inverse":true}],["  5 ",{"fg":3,"bold":true}],["▸ .asciinema/",{"fg":6,"bold":true}],["     ",{}]],"5":[["   ",{}],["+",{"fg":2,"bold":true}],["FirstRun2(void) ",{}],["|",{"inverse":true}],["113 ",{"fg":3,"bold":true}],["Janurary: >                                                                                                     ",{}],["|",{"inverse":true}],["  6 ",{"fg":3,"bold":true}],["▸ .cache/",{"fg":6,"bold":true}],["         ",{}]],"6":[["                    ",{}],["|",{"inverse":true}],["114 ",{"fg":3,"bold":true}],["  let g:calendar_mruler = 'Jan,Feb,Mar,Apr,May,Jun,Jul,Aug,Sep,Oct,Nov,Dec'                                     ",{}],["|",{"inverse":true}],["  7 ",{"fg":3,"bold":true}],["▸ .config/",{"fg":6,"bold":true}],["        ",{}]],"7":[["▼",{"fg":3,"bold":true}],[" Last",{"fg":5,"bold":true}],[" : ",{}],["struct",{"fg":2,"bold":true}],["     ",{}],["|",{"inverse":true}],["115 ",{"fg":3,"bold":true}],["<                                                                                                               ",{}],["|",{"inverse":true}],["  8 ",{"fg":3,"bold":true}],["▸ .dbus/",{"fg":6,"bold":true}],["          ",{}]],"8":[["    [functions]",{"fg":6,"bold":true}],["     ",{}],["|",{"inverse":true}],["116 ",{"fg":3,"bold":true}],["                                                                                                                ",{}],["|",{"inverse":true}],["  9 ",{"fg":3,"bold":true}],["▸ .gnupg/",{"fg":6,"bold":true}],["         ",{}]],"9":[["   ",{}],["+",{"fg":2,"bold":true}],["FirstRun(void)  ",{}],["|",{"inverse":true}],["117 ",{"fg":3,"bold":true}],["                                                *g:calendar_wruler*                                             ",{}],["|",{"inverse":true}],[" 10 ",{"fg":3,"bold":true}],["▸ .kde/",{"fg":6,"bold":true}],["           ",{}]],"10":[["   ",{}],["+",{"fg":2,"bold":true}],["FirstRun2(void) ",{}],["|",{"inverse":true}],["118 ",{"fg":3,"bold":true}],["To change the week names for the calendar headings, set this variable.  The                                     ",{}],["|",{"inverse":true}],[" 11 ",{"fg":3,"bold":true}],["▸ .local/",{"fg":6,"bold":true}],["         ",{}]],"11":[["   ",{}],["+",{"fg":2,"bold":true}],["~Last()         ",{}],["|",{"inverse":true}],["119 ",{"fg":3,"bold":true}],["value is expected to be a space-separated list of seven values, starting with                                   ",{}],["|",{"inverse":true}],[" 12 ",{"fg":3,"bold":true}],["▸ .pki/",{"fg":6,"bold":true}],["           ",{}]],"12":[["   ",{}],["+",{"fg":2,"bold":true}],["SecondRun(void) ",{}],["|",{"inverse":true}],["120 ",{"fg":3,"bold":true}],["Sunday: >                                                                                                       ",{}],["|",{"inverse":true}],[" 13 ",{"fg":3,"bold":true}],["▸ .ssh/",{"fg":6,"bold":true}],["           ",{}]],"13":[["   ",{}],["+",{"fg":2,"bold":true}],["SecondRun2(void)",{}],["|",{"inverse":true}],["121 ",{"fg":3,"bold":true}],["  let g:calendar_wruler = 'Su Mo Tu We Th Fr Sa'                                                                ",{}],["|",{"inverse":true}],[" 14 ",{"fg":3,"bold":true}],["▸ .vim/",{"fg":6,"bold":true}],["           ",{}]],"14":[["                    ",{}],["|",{"inverse":true}],["122 ",{"fg":3,"bold":true}],["<                                                                                                               ",{}],["|",{"inverse":true}],[" 15 ",{"fg":3,"bold":true}],["▸ diary/",{"fg":6,"bold":true}],["          ",{}]],"15":[["▼",{"fg":3,"bold":true}],[" Second",{"fg":5,"bold":true}],[" : ",{}],["struct",{"fg":2,"bold":true}],["   ",{}],["|",{"inverse":true}],["123 ",{"fg":3,"bold":true}],["                                                                                                                ",{}],["|",{"inverse":true}],[" 16 ",{"fg":3,"bold":true}],["▸ temp/",{"fg":6,"bold":true}],["           ",{}]],"16":[["    [prototypes]",{"fg":6,"bold":true}],["    ",{}],["|",{"inverse":true}],["124 ",{"fg":3,"bold":true}],["                                                *g:calendar_monday*                                             ",{}],["|",{"inverse":true}],[" 17 ",{"fg":3,"bold":true}],["  .bash_history   ",{}]],"17":[["   ",{}],["+",{"fg":2,"bold":true}],["SecondRun(void) ",{}],["|",{"inverse":true}],["125 ",{"fg":3,"bold":true}],["To make the week start on Monday rather than Sunday, set this variable.  Note                                   ",{}],["|",{"inverse":true}],[" 18 ",{"fg":3,"bold":true}],["  .bash_logout    ",{}]],"18":[["   ",{}],["+",{"fg":2,"bold":true}],["SecondRun2(void)",{}],["|",{"inverse":true}],["126 ",{"fg":3,"bold":true}],["that the value of |g:calendar_wruler| is not affected by this; it should                                        ",{}],["|",{"inverse":true}],[" 19 ",{"fg":3,"bold":true}],["  .bash_profile   ",{"underline":true}]],"19":[["                    ",{}],["|",{"inverse":true}],["127 ",{"fg":3,"bold":true}],["always begin with Sunday: >                                                                                     ",{}],["|",{"inverse":true}],[" 20 ",{"fg":3,"bold":true}],["  .bashrc         ",{}]],"20":[["▼",{"fg":3,"bold":true}],[" ",{}],["functions",{"fg":6,"bold":true}],["         ",{}],["|",{"inverse":true}],["128 ",{"fg":3,"bold":true}],["  let g:calendar_monday = 1                                                                                     ",{}],["|",{"inverse":true}],[" 21 ",{"fg":3,"bold":true}],["  .cshrc          ",{}]],"21":[["    main(int argc, c",{"underline":true}],["|",{"inverse":true}],["129 ",{"fg":3,"bold":true}],["<                                                                                                               ",{}],["|",{"inverse":true}],[" 22 ",{"fg":3,"bold":true}],["  .dmrc           ",{}]],"22":[["~                   ",{"fg":4,"bold":true}],["|",{"inverse":true}],["130 ",{"fg":3,"bold":true}],["                                                                                                                ",{}],["|",{"inverse":true}],[" 23 ",{"fg":3,"bold":true}],["  .esd_auth       ",{}]],"23":[["~                   ",{"fg":4,"bold":true}],["|",{"inverse":true}],["131 ",{"fg":3,"bold":true}],["                                                *g:calendar_weeknm*                                             ",{}],["|",{"inverse":true}],[" 24 ",{"fg":3,"bold":true}],["  .gtkrc-2.0      ",{}]],"24":[["~                   ",{"fg":4,"bold":true}],["|",{"inverse":true}],["132 ",{"fg":3,"bold":true}],["To show the week number, set this variable.  There are four valid settings: >                                   ",{}],["|",{"inverse":true}],[" 25 ",{"fg":3,"bold":true}],["  .gtkrc-2.0-kde4 ",{}]],"25":[["~                   ",{"fg":4,"bold":true}],["|",{"inverse":true}],["133 ",{"fg":3,"bold":true}],["  let g:calendar_weeknm = 1 \" WK01                                                                              ",{}],["|",{"inverse":true}],[" 26 ",{"fg":3,"bold":true}],["  .lesshst        ",{}]],"26":[["~                   ",{"fg":4,"bold":true}],["|",{"inverse":true}],["134 ",{"fg":3,"bold":true}],["  let g:calendar_weeknm = 2 \" WK 1                                                                              ",{}],["|",{"inverse":true}],[" 27 ",{"fg":3,"bold":true}],["  .tcshrc         ",{}]],"27":[["~                   ",{"fg":4,"bold":true}],["|",{"inverse":true}],["135 ",{"fg":3,"bold":true}],["  let g:calendar_weeknm = 3 \" KW01                                                                              ",{}],["|",{"inverse":true}],[" 28 ",{"fg":3,"bold":true}],["  .viminfo        ",{}]],"28":[["~                   ",{"fg":4,"bold":true}],["|",{"inverse":true}],["136 ",{"fg":3,"bold":true}],["  let g:calendar_weeknm = 4 \" KW 1                                                                              ",{}],["|",{"inverse":true}],[" 29 ",{"fg":3,"bold":true}],["  .vimrc          ",{}]],"29":[["~                   ",{"fg":4,"bold":true}],["|",{"inverse":true}],["137 ",{"fg":3,"bold":true}],["  let g:calendar_weeknm = 5 \" 1                                                                                 ",{}],["|",{"inverse":true}],[" 30 ",{"fg":3,"bold":true}],["  .xsession-errors",{}]],"30":[["~                   ",{"fg":4,"bold":true}],["|",{"inverse":true}],["138 ",{"fg":3,"bold":true}],["<                                                                                                               ",{}],["|",{"inverse":true}],[" 31 ",{"fg":3,"bold":true}],["  anaconda-ks.cfg ",{}]],"31":[["~                   ",{"fg":4,"bold":true}],["|",{"inverse":true}],["139 ",{"fg":3,"bold":true}],["                                                                                                                ",{}],["|",{"inverse":true}],[" 32 ",{"fg":3,"bold":true}],["  initial-setup-ks",{}]],"32":[["~                   ",{"fg":4,"bold":true}],["|",{"inverse":true}],["140 ",{"fg":3,"bold":true}],["                                                *g:calendar_datetime*                                           ",{}],["|",{"inverse":true}],[" 33 ",{"fg":3,"bold":true}],["  test.c          ",{}]],"33":[["~                   ",{"fg":4,"bold":true}],["|",{"inverse":true}],["141 ",{"fg":3,"bold":true}],["To control display of the current date and time, set this variable.                                             ",{}],["|",{"inverse":true}],[" 34 ",{"fg":3,"bold":true}],["  test.cpp        ",{}]],"34":[["~                   ",{"fg":4,"bold":true}],["|",{"inverse":true}],["142 ",{"fg":3,"bold":true}],["Acceptable values are 'title', 'statusline', and '': >                                                          ",{}],["|",{"inverse":true}],[" 35 ",{"fg":3,"bold":true}],["  .test.cpp.swp   ",{}]],"35":[["~                   ",{"fg":4,"bold":true}],["|",{"inverse":true}],["143 ",{"fg":3,"bold":true}],["  let g:calendar_datetime = 'title'                                                                             ",{}],["|",{"inverse":true}],["~                     ",{"fg":4,"bold":true}]],"36":[["~                   ",{"fg":4,"bold":true}],["|",{"inverse":true}],["144 ",{"fg":3,"bold":true}],["<                                                                                                               ",{}],["|",{"inverse":true}],["~                     ",{"fg":4,"bold":true}]],"37":[["~                   ",{"fg":4,"bold":true}],["|",{"inverse":true}],["145 ",{"fg":3,"bold":true}],["                                                *g:calendar_filetype*                                           ",{}],["|",{"inverse":true}],["~                     ",{"fg":4,"bold":true}]],"38":[["~                   ",{"fg":4,"bold":true}],["|",{"inverse":true}],["146 ",{"fg":3,"bold":true}],["To control the filetype of calendar entries, set this variable. It defaults to                                  ",{}],["|",{"inverse":true}],["~                     ",{"fg":4,"bold":true}]],"39":[["~                   ",{"fg":4,"bold":true}],["|",{"inverse":true}],["147 ",{"fg":3,"bold":true}],["'markdown'. Acceptable values are values that are acceptable for |filetype|                                     ",{}],["|",{"inverse":true}],["~                     ",{"fg":4,"bold":true}]],"40":[["~                   ",{"fg":4,"bold":true}],["|",{"inverse":true}],["148 ",{"fg":3,"bold":true}],["like e.g. 'markdown' or 'pandoc':                                                                               ",{}],["|",{"inverse":true}],["~                     ",{"fg":4,"bold":true}]],"41":[["~                   ",{"fg":4,"bold":true}],["|",{"inverse":true}],["149 ",{"fg":3,"bold":true}],["  let g:calendar_filetype = 'pandoc'                                                                            ",{}],["|",{"inverse":true}],["~                     ",{"fg":4,"bold":true}]],"42":[["~                   ",{"fg":4,"bold":true}],["|",{"inverse":true}],["150 ",{"fg":3,"bold":true}],["                                                                                                                ",{}],["|",{"inverse":true}],["~                     ",{"fg":4,"bold":true}]],"43":[["~                   ",{"fg":4,"bold":true}],["|",{"inverse":true}],["151 ",{"fg":3,"bold":true}],["                                                                                                                ",{}],["|",{"inverse":true}],["~                     ",{"fg":4,"bold":true}]],"44":[["~                   ",{"fg":4,"bold":true}],["|",{"inverse":true}],["152 ",{"fg":3,"bold":true}],["HOOKS                                           *calendar-hooks*                                                ",{}],["|",{"inverse":true}],["~                     ",{"fg":4,"bold":true}]],"45":[["~                   ",{"fg":4,"bold":true}],["|",{"inverse":true}],["153 ",{"fg":3,"bold":true}],["                                                                                                                ",{"underline":true}],["|",{"inverse":true}],["~                     ",{"fg":4,"bold":true}]],"46":[["[Name] test.cpp      ",{"inverse":true}],[" NORMAL ",{"bold":true}],[" ",{}],["calendar.txt ",{"bold":true}],["                                                        unix │ utf-8 │ text │  69% ",{}],[" LN 153",{"bold":true}],[":1  ",{}],[" ",{"bold":true,"inverse":true}],[" ~/…/calendar-vim/doc>",{"bold":true}]],"47":[["                                                                                                                                                                ",{}]]},"cursor":{"visible":true}}],[0.018279,{"lines":{"47":[["                                                                                                                                                     j          ",{}]]},"cursor":{"visible":false}}],[0.002402,{"lines":{"0":[["\" Press <F1> for hel",{"fg":6,"bold":true}],["|",{"inverse":true}],["109 ",{"fg":3,"bold":true}],["                                                                                                                ",{}],["|",{"inverse":true}],["  1 ",{"fg":3,"bold":true}],["\" Press ? for help",{"fg":5,"bold":true}]],"1":[["                    ",{}],["|",{"inverse":true}],["110 ",{"fg":3,"bold":true}],["                                                *g:calendar_mruler*                                             ",{}],["|",{"inverse":true}],["  2 ",{"fg":3,"bold":true}],["                  ",{}]],"2":[["▼",{"fg":3,"bold":true}],[" First",{"fg":5,"bold":true}],[" : ",{}],["struct",{"fg":2,"bold":true}],["    ",{}],["|",{"inverse":true}],["111 ",{"fg":3,"bold":true}],["To change the month names for the calendar headings, set this variable.  The                                    ",{}],["|",{"inverse":true}],["  3 ",{"fg":3,"bold":true}],[".. (up a dir)",{"fg":6,"bold":true}],["     ",{}]],"3":[["    [prototypes]",{"fg":6,"bold":true}],["    ",{}],["|",{"inverse":true}],["112 ",{"fg":3,"bold":true}],["value is expected to be a comma-separated list of twelve values, starting with                                  ",{}],["|",{"inverse":true}],["  4 /root/",{"fg":3,"bold":true}],["            ",{}]],"4":[["   ",{}],["+",{"fg":2,"bold":true}],["FirstRun(void)  ",{}],["|",{"inverse":true}],["113 ",{"fg":3,"bold":true}],["Janurary: >                                                                                                     ",{}],["|",{"inverse":true}],["  5 ",{"fg":3,"bold":true}],["▸ .asciinema/",{"fg":6,"bold":true}],["     ",{}]],"5":[["   ",{}],["+",{"fg":2,"bold":true}],["FirstRun2(void) ",{}],["|",{"inverse":true}],["114 ",{"fg":3,"bold":true}],["  let g:calendar_mruler = 'Jan,Feb,Mar,Apr,May,Jun,Jul,Aug,Sep,Oct,Nov,Dec'                                     ",{}],["|",{"inverse":true}],["  6 ",{"fg":3,"bold":true}],["▸ .cache/",{"fg":6,"bold":true}],["         ",{}]],"6":[["                    ",{}],["|",{"inverse":true}],["115 ",{"fg":3,"bold":true}],["<                                                                                                               ",{}],["|",{"inverse":true}],["  7 ",{"fg":3,"bold":true}],["▸ .config/",{"fg":6,"bold":true}],["        ",{}]],"7":[["▼",{"fg":3,"bold":true}],[" Last",{"fg":5,"bold":true}],[" : ",{}],["struct",{"fg":2,"bold":true}],["     ",{}],["|",{"inverse":true}],["116 ",{"fg":3,"bold":true}],["                                                                                                                ",{}],["|",{"inverse":true}],["  8 ",{"fg":3,"bold":true}],["▸ .dbus/",{"fg":6,"bold":true}],["          ",{}]],"8":[["    [functions]",{"fg":6,"bold":true}],["     ",{}],["|",{"inverse":true}],["117 ",{"fg":3,"bold":true}],["                                                *g:calendar_wruler*                                             ",{}],["|",{"inverse":true}],["  9 ",{"fg":3,"bold":true}],["▸ .gnupg/",{"fg":6,"bold":true}],["         ",{}]],"9":[["   ",{}],["+",{"fg":2,"bold":true}],["FirstRun(void)  ",{}],["|",{"inverse":true}],["118 ",{"fg":3,"bold":true}],["To change the week names for the calendar headings, set this variable.  The                                     ",{}],["|",{"inverse":true}],[" 10 ",{"fg":3,"bold":true}],["▸ .kde/",{"fg":6,"bold":true}],["           ",{}]],"10":[["   ",{}],["+",{"fg":2,"bold":true}],["FirstRun2(void) ",{}],["|",{"inverse":true}],["119 ",{"fg":3,"bold":true}],["value is expected to be a space-separated list of seven values, starting with                                   ",{}],["|",{"inverse":true}],[" 11 ",{"fg":3,"bold":true}],["▸ .local/",{"fg":6,"bold":true}],["         ",{}]],"11":[["   ",{}],["+",{"fg":2,"bold":true}],["~Last()         ",{}],["|",{"inverse":true}],["120 ",{"fg":3,"bold":true}],["Sunday: >                                                                                                       ",{}],["|",{"inverse":true}],[" 12 ",{"fg":3,"bold":true}],["▸ .pki/",{"fg":6,"bold":true}],["           ",{}]],"12":[["   ",{}],["+",{"fg":2,"bold":true}],["SecondRun(void) ",{}],["|",{"inverse":true}],["121 ",{"fg":3,"bold":true}],["  let g:calendar_wruler = 'Su Mo Tu We Th Fr Sa'                                                                ",{}],["|",{"inverse":true}],[" 13 ",{"fg":3,"bold":true}],["▸ .ssh/",{"fg":6,"bold":true}],["           ",{}]],"13":[["   ",{}],["+",{"fg":2,"bold":true}],["SecondRun2(void)",{}],["|",{"inverse":true}],["122 ",{"fg":3,"bold":true}],["<                                                                                                               ",{}],["|",{"inverse":true}],[" 14 ",{"fg":3,"bold":true}],["▸ .vim/",{"fg":6,"bold":true}],["           ",{}]],"14":[["                    ",{}],["|",{"inverse":true}],["123 ",{"fg":3,"bold":true}],["                                                                                                                ",{}],["|",{"inverse":true}],[" 15 ",{"fg":3,"bold":true}],["▸ diary/",{"fg":6,"bold":true}],["          ",{}]],"15":[["▼",{"fg":3,"bold":true}],[" Second",{"fg":5,"bold":true}],[" : ",{}],["struct",{"fg":2,"bold":true}],["   ",{}],["|",{"inverse":true}],["124 ",{"fg":3,"bold":true}],["                                                *g:calendar_monday*                                             ",{}],["|",{"inverse":true}],[" 16 ",{"fg":3,"bold":true}],["▸ temp/",{"fg":6,"bold":true}],["           ",{}]],"16":[["    [prototypes]",{"fg":6,"bold":true}],["    ",{}],["|",{"inverse":true}],["125 ",{"fg":3,"bold":true}],["To make the week start on Monday rather than Sunday, set this variable.  Note                                   ",{}],["|",{"inverse":true}],[" 17 ",{"fg":3,"bold":true}],["  .bash_history   ",{}]],"17":[["   ",{}],["+",{"fg":2,"bold":true}],["SecondRun(void) ",{}],["|",{"inverse":true}],["126 ",{"fg":3,"bold":true}],["that the value of |g:calendar_wruler| is not affected by this; it should                                        ",{}],["|",{"inverse":true}],[" 18 ",{"fg":3,"bold":true}],["  .bash_logout    ",{}]],"18":[["   ",{}],["+",{"fg":2,"bold":true}],["SecondRun2(void)",{}],["|",{"inverse":true}],["127 ",{"fg":3,"bold":true}],["always begin with Sunday: >                                                                                     ",{}],["|",{"inverse":true}],[" 19 ",{"fg":3,"bold":true}],["  .bash_profile   ",{"underline":true}]],"19":[["                    ",{}],["|",{"inverse":true}],["128 ",{"fg":3,"bold":true}],["  let g:calendar_monday = 1                                                                                     ",{}],["|",{"inverse":true}],[" 20 ",{"fg":3,"bold":true}],["  .bashrc         ",{}]],"20":[["▼",{"fg":3,"bold":true}],[" ",{}],["functions",{"fg":6,"bold":true}],["         ",{}],["|",{"inverse":true}],["129 ",{"fg":3,"bold":true}],["<                                                                                                               ",{}],["|",{"inverse":true}],[" 21 ",{"fg":3,"bold":true}],["  .cshrc          ",{}]],"21":[["    main(int argc, c",{"underline":true}],["|",{"inverse":true}],["130 ",{"fg":3,"bold":true}],["                                                                                                                ",{}],["|",{"inverse":true}],[" 22 ",{"fg":3,"bold":true}],["  .dmrc           ",{}]],"22":[["~                   ",{"fg":4,"bold":true}],["|",{"inverse":true}],["131 ",{"fg":3,"bold":true}],["                                                                                                                ",{}],["|",{"inverse":true}],[" 23 ",{"fg":3,"bold":true}],["  .esd_auth       ",{}]],"47":[["                                                                                                                                                                ",{}]]},"cursor":{"x":48,"y":22}}],[0.020901,{"lines":{"22":[["~                   ",{"fg":4,"bold":true}],["|",{"inverse":true}],["131 ",{"fg":3,"bold":true}],["                                                *g:calendar_weeknm*                                             ",{}],["|",{"inverse":true}],[" 23 ",{"fg":3,"bold":true}],["  .esd_auth       ",{}]],"23":[["~                   ",{"fg":4,"bold":true}],["|",{"inverse":true}],["132 ",{"fg":3,"bold":true}],["To show the week number, set this variable.  There are four valid settings: >                                   ",{}],["|",{"inverse":true}],[" 24 ",{"fg":3,"bold":true}],["  .gtkrc-2.0      ",{}]],"24":[["~                   ",{"fg":4,"bold":true}],["|",{"inverse":true}],["133 ",{"fg":3,"bold":true}],["  let g:calendar_weeknm = 1 \" WK01                                                                              ",{}],["|",{"inverse":true}],[" 25 ",{"fg":3,"bold":true}],["  .gtkrc-2.0-kde4 ",{}]],"25":[["~                   ",{"fg":4,"bold":true}],["|",{"inverse":true}],["134 ",{"fg":3,"bold":true}],["  let g:calendar_weeknm = 2 \" WK 1                                                                              ",{}],["|",{"inverse":true}],[" 26 ",{"fg":3,"bold":true}],["  .lesshst        ",{}]],"26":[["~                   ",{"fg":4,"bold":true}],["|",{"inverse":true}],["135 ",{"fg":3,"bold":true}],["  let g:calendar_weeknm = 3 \" KW01                                                                              ",{}],["|",{"inverse":true}],[" 27 ",{"fg":3,"bold":true}],["  .tcshrc         ",{}]],"27":[["~                   ",{"fg":4,"bold":true}],["|",{"inverse":true}],["136 ",{"fg":3,"bold":true}],["  let g:calendar_weeknm = 4 \" KW 1                                                                              ",{}],["|",{"inverse":true}],[" 28 ",{"fg":3,"bold":true}],["  .viminfo        ",{}]],"28":[["~                   ",{"fg":4,"bold":true}],["|",{"inverse":true}],["137 ",{"fg":3,"bold":true}],["  let g:calendar_weeknm = 5 \" 1                                                                                 ",{}],["|",{"inverse":true}],[" 29 ",{"fg":3,"bold":true}],["  .vimrc          ",{}]],"29":[["~                   ",{"fg":4,"bold":true}],["|",{"inverse":true}],["138 ",{"fg":3,"bold":true}],["<                                                                                                               ",{}],["|",{"inverse":true}],[" 30 ",{"fg":3,"bold":true}],["  .xsession-errors",{}]]},"cursor":{"x":112,"y":29}}],[0.016264,{"lines":{"0":[["\" Press <F1> for hel",{"fg":6,"bold":true}],["|",{"inverse":true}],["110 ",{"fg":3,"bold":true}],["                                                *g:calendar_mruler*                                             ",{}],["|",{"inverse":true}],["  1 ",{"fg":3,"bold":true}],["\" Press ? for help",{"fg":5,"bold":true}]],"1":[["                    ",{}],["|",{"inverse":true}],["111 ",{"fg":3,"bold":true}],["To change the month names for the calendar headings, set this variable.  The                                    ",{}],["|",{"inverse":true}],["  2 ",{"fg":3,"bold":true}],["                  ",{}]],"2":[["▼",{"fg":3,"bold":true}],[" First",{"fg":5,"bold":true}],[" : ",{}],["struct",{"fg":2,"bold":true}],["    ",{}],["|",{"inverse":true}],["112 ",{"fg":3,"bold":true}],["value is expected to be a comma-separated list of twelve values, starting with                                  ",{}],["|",{"inverse":true}],["  3 ",{"fg":3,"bold":true}],[".. (up a dir)",{"fg":6,"bold":true}],["     ",{}]],"3":[["    [prototypes]",{"fg":6,"bold":true}],["    ",{}],["|",{"inverse":true}],["113 ",{"fg":3,"bold":true}],["Janurary: >                                                                                                     ",{}],["|",{"inverse":true}],["  4 /root/",{"fg":3,"bold":true}],["            ",{}]],"4":[["   ",{}],["+",{"fg":2,"bold":true}],["FirstRun(void)  ",{}],["|",{"inverse":true}],["114 ",{"fg":3,"bold":true}],["  let g:calendar_mruler = 'Jan,Feb,Mar,Apr,May,Jun,Jul,Aug,Sep,Oct,Nov,Dec'                                     ",{}],["|",{"inverse":true}],["  5 ",{"fg":3,"bold":true}],["▸ .asciinema/",{"fg":6,"bold":true}],["     ",{}]],"5":[["   ",{}],["+",{"fg":2,"bold":true}],["FirstRun2(void) ",{}],["|",{"inverse":true}],["115 ",{"fg":3,"bold":true}],["<                                                                                                               ",{}],["|",{"inverse":true}],["  6 ",{"fg":3,"bold":true}],["▸ .cache/",{"fg":6,"bold":true}],["         ",{}]],"6":[["                    ",{}],["|",{"inverse":true}],["116 ",{"fg":3,"bold":true}],["                                                                                                                ",{}],["|",{"inverse":true}],["  7 ",{"fg":3,"bold":true}],["▸ .config/",{"fg":6,"bold":true}],["        ",{}]],"7":[["▼",{"fg":3,"bold":true}],[" Last",{"fg":5,"bold":true}],[" : ",{}],["struct",{"fg":2,"bold":true}],["     ",{}],["|",{"inverse":true}],["117 ",{"fg":3,"bold":true}],["                                                                                                                ",{}],["|",{"inverse":true}],["  8 ",{"fg":3,"bold":true}],["▸ .dbus/",{"fg":6,"bold":true}],["          ",{}]],"30":[["~                   ",{"fg":4,"bold":true}],["|",{"inverse":true}],["139 ",{"fg":3,"bold":true}],["                                                                                                                ",{}],["|",{"inverse":true}],[" 31 ",{"fg":3,"bold":true}],["  anaconda-ks.cfg ",{}]],"31":[["~                   ",{"fg":4,"bold":true}],["|",{"inverse":true}],["140 ",{"fg":3,"bold":true}],["                                                *g:calendar_datetime*                                           ",{}],["|",{"inverse":true}],[" 32 ",{"fg":3,"bold":true}],["  initial-setup-ks",{}]],"32":[["~                   ",{"fg":4,"bold":true}],["|",{"inverse":true}],["141 ",{"fg":3,"bold":true}],["To control display of the current date and time, set this variable.                                             ",{}],["|",{"inverse":true}],[" 33 ",{"fg":3,"bold":true}],["  test.c          ",{}]],"33":[["~                   ",{"fg":4,"bold":true}],["|",{"inverse":true}],["142 ",{"fg":3,"bold":true}],["Acceptable values are 'title', 'statusline', and '': >                                                          ",{}],["|",{"inverse":true}],[" 34 ",{"fg":3,"bold":true}],["  test.cpp        ",{}]],"34":[["~                   ",{"fg":4,"bold":true}],["|",{"inverse":true}],["143 ",{"fg":3,"bold":true}],["  let g:calendar_datetime = 'title'                                                                             ",{}],["|",{"inverse":true}],[" 35 ",{"fg":3,"bold":true}],["  .test.cpp.swp   ",{}]],"35":[["~                   ",{"fg":4,"bold":true}],["|",{"inverse":true}],["144 ",{"fg":3,"bold":true}],["<                                                                                                               ",{}],["|",{"inverse":true}],["~                     ",{"fg":4,"bold":true}]],"36":[["~                   ",{"fg":4,"bold":true}],["|",{"inverse":true}],["145 ",{"fg":3,"bold":true}],["                                                *g:calendar_filetype*                                           ",{}],["|",{"inverse":true}],["~                     ",{"fg":4,"bold":true}]],"37":[["~                   ",{"fg":4,"bold":true}],["|",{"inverse":true}],["146 ",{"fg":3,"bold":true}],["To control the filetype of calendar entries, set this variable. It defaults to                                  ",{}],["|",{"inverse":true}],["~                     ",{"fg":4,"bold":true}]],"38":[["~                   ",{"fg":4,"bold":true}],["|",{"inverse":true}],["147 ",{"fg":3,"bold":true}],["'markdown'. Acceptable values are values that are acceptable for |filetype|                                     ",{}],["|",{"inverse":true}],["~                     ",{"fg":4,"bold":true}]],"39":[["~                   ",{"fg":4,"bold":true}],["|",{"inverse":true}],["148 ",{"fg":3,"bold":true}],["like e.g. 'markdown' or 'pandoc':                                                                               ",{}],["|",{"inverse":true}],["~                     ",{"fg":4,"bold":true}]],"40":[["~                   ",{"fg":4,"bold":true}],["|",{"inverse":true}],["149 ",{"fg":3,"bold":true}],["  let g:calendar_filetype = 'pandoc'                                                                            ",{}],["|",{"inverse":true}],["~                     ",{"fg":4,"bold":true}]],"41":[["~                   ",{"fg":4,"bold":true}],["|",{"inverse":true}],["150 ",{"fg":3,"bold":true}],["                                                                                                                ",{}],["|",{"inverse":true}],["~                     ",{"fg":4,"bold":true}]],"42":[["~                   ",{"fg":4,"bold":true}],["|",{"inverse":true}],["151 ",{"fg":3,"bold":true}],["                                                                                                                ",{}],["|",{"inverse":true}],["~                     ",{"fg":4,"bold":true}]],"43":[["~                   ",{"fg":4,"bold":true}],["|",{"inverse":true}],["152 ",{"fg":3,"bold":true}],["HOOKS                                           *calendar-hooks*                                                ",{}],["|",{"inverse":true}],["~                     ",{"fg":4,"bold":true}]],"44":[["~                   ",{"fg":4,"bold":true}],["|",{"inverse":true}],["153 ",{"fg":3,"bold":true}],["                                                                                                                ",{}],["|",{"inverse":true}],["~                     ",{"fg":4,"bold":true}]],"45":[["~                   ",{"fg":4,"bold":true}],["|",{"inverse":true}],["154 ",{"fg":3,"bold":true}],["calendar.vim provides a number of hooks which allow you to run custom code on                                   ",{"underline":true}],["|",{"inverse":true}],["~                     ",{"fg":4,"bold":true}]],"46":[["[Name] test.cpp      ",{"inverse":true}],[" NORMAL ",{"bold":true}],[" ",{}],["calendar.txt ",{"bold":true}],["                                                        unix │ utf-8 │ text │  70% ",{}],[" LN 154",{"bold":true}],[":1  ",{}],[" ",{"bold":true,"inverse":true}],[" ~/…/calendar-vim/doc>",{"bold":true}]]},"cursor":{"x":25,"y":7}}],[0.005904,{"lines":{"7":[["▼",{"fg":3,"bold":true}],[" Last",{"fg":5,"bold":true}],[" : ",{}],["struct",{"fg":2,"bold":true}],["     ",{}],["|",{"inverse":true}],["117 ",{"fg":3,"bold":true}],["                                                *g:calendar_wruler*                                             ",{}],["|",{"inverse":true}],["  8 ",{"fg":3,"bold":true}],["▸ .dbus/",{"fg":6,"bold":true}],["          ",{}]],"8":[["    [functions]",{"fg":6,"bold":true}],["     ",{}],["|",{"inverse":true}],["118 ",{"fg":3,"bold":true}],["To change the week names for the calendar headings, set this variable.  The                                     ",{}],["|",{"inverse":true}],["  9 ",{"fg":3,"bold":true}],["▸ .gnupg/",{"fg":6,"bold":true}],["         ",{}]],"9":[["   ",{}],["+",{"fg":2,"bold":true}],["FirstRun(void)  ",{}],["|",{"inverse":true}],["119 ",{"fg":3,"bold":true}],["value is expected to be a space-separated list of seven values, starting with                                   ",{}],["|",{"inverse":true}],[" 10 ",{"fg":3,"bold":true}],["▸ .kde/",{"fg":6,"bold":true}],["           ",{}]],"10":[["   ",{}],["+",{"fg":2,"bold":true}],["FirstRun2(void) ",{}],["|",{"inverse":true}],["120 ",{"fg":3,"bold":true}],["Sunday: >                                                                                                       ",{}],["|",{"inverse":true}],[" 11 ",{"fg":3,"bold":true}],["▸ .local/",{"fg":6,"bold":true}],["         ",{}]],"11":[["   ",{}],["+",{"fg":2,"bold":true}],["~Last()         ",{}],["|",{"inverse":true}],["121 ",{"fg":3,"bold":true}],["  let g:calendar_wruler = 'Su Mo Tu We Th Fr Sa'                                                                ",{}],["|",{"inverse":true}],[" 12 ",{"fg":3,"bold":true}],["▸ .pki/",{"fg":6,"bold":true}],["           ",{}]],"12":[["   ",{}],["+",{"fg":2,"bold":true}],["SecondRun(void) ",{}],["|",{"inverse":true}],["122 ",{"fg":3,"bold":true}],["<                                                                                                               ",{}],["|",{"inverse":true}],[" 13 ",{"fg":3,"bold":true}],["▸ .ssh/",{"fg":6,"bold":true}],["           ",{}]],"13":[["   ",{}],["+",{"fg":2,"bold":true}],["SecondRun2(void)",{}],["|",{"inverse":true}],["123 ",{"fg":3,"bold":true}],["                                                                                                                ",{}],["|",{"inverse":true}],[" 14 ",{"fg":3,"bold":true}],["▸ .vim/",{"fg":6,"bold":true}],["           ",{}]],"14":[["                    ",{}],["|",{"inverse":true}],["124 ",{"fg":3,"bold":true}],["                                                *g:calendar_monday*                                             ",{}],["|",{"inverse":true}],[" 15 ",{"fg":3,"bold":true}],["▸ diary/",{"fg":6,"bold":true}],["          ",{}]],"15":[["▼",{"fg":3,"bold":true}],[" Second",{"fg":5,"bold":true}],[" : ",{}],["struct",{"fg":2,"bold":true}],["   ",{}],["|",{"inverse":true}],["125 ",{"fg":3,"bold":true}],["To make the week start on Monday rather than Sunday, set this variable.  Note                                   ",{}],["|",{"inverse":true}],[" 16 ",{"fg":3,"bold":true}],["▸ temp/",{"fg":6,"bold":true}],["           ",{}]],"16":[["    [prototypes]",{"fg":6,"bold":true}],["    ",{}],["|",{"inverse":true}],["126 ",{"fg":3,"bold":true}],["that the value of |g:calendar_wruler| is not affected by this; it should                                        ",{}],["|",{"inverse":true}],[" 17 ",{"fg":3,"bold":true}],["  .bash_history   ",{}]],"17":[["   ",{}],["+",{"fg":2,"bold":true}],["SecondRun(void) ",{}],["|",{"inverse":true}],["127 ",{"fg":3,"bold":true}],["always begin with Sunday: >                                                                                     ",{}],["|",{"inverse":true}],[" 18 ",{"fg":3,"bold":true}],["  .bash_logout    ",{}]],"18":[["   ",{}],["+",{"fg":2,"bold":true}],["SecondRun2(void)",{}],["|",{"inverse":true}],["128 ",{"fg":3,"bold":true}],["  let g:calendar_monday = 1                                                                                     ",{}],["|",{"inverse":true}],[" 19 ",{"fg":3,"bold":true}],["  .bash_profile   ",{"underline":true}]],"19":[["                    ",{}],["|",{"inverse":true}],["129 ",{"fg":3,"bold":true}],["<                                                                                                               ",{}],["|",{"inverse":true}],[" 20 ",{"fg":3,"bold":true}],["  .bashrc         ",{}]],"20":[["▼",{"fg":3,"bold":true}],[" ",{}],["functions",{"fg":6,"bold":true}],["         ",{}],["|",{"inverse":true}],["130 ",{"fg":3,"bold":true}],["                                                                                                                ",{}],["|",{"inverse":true}],[" 21 ",{"fg":3,"bold":true}],["  .cshrc          ",{}]],"21":[["    main(int argc, c",{"underline":true}],["|",{"inverse":true}],["131 ",{"fg":3,"bold":true}],["                                                *g:calendar_weeknm*                                             ",{}],["|",{"inverse":true}],[" 22 ",{"fg":3,"bold":true}],["  .dmrc           ",{}]],"22":[["~                   ",{"fg":4,"bold":true}],["|",{"inverse":true}],["132 ",{"fg":3,"bold":true}],["To show the week number, set this variable.  There are four valid settings: >                                   ",{}],["|",{"inverse":true}],[" 23 ",{"fg":3,"bold":true}],["  .esd_auth       ",{}]],"23":[["~                   ",{"fg":4,"bold":true}],["|",{"inverse":true}],["133 ",{"fg":3,"bold":true}],["  let g:calendar_weeknm = 1 \" WK01                                                                              ",{}],["|",{"inverse":true}],[" 24 ",{"fg":3,"bold":true}],["  .gtkrc-2.0      ",{}]],"24":[["~                   ",{"fg":4,"bold":true}],["|",{"inverse":true}],["134 ",{"fg":3,"bold":true}],["  let g:calendar_weeknm = 2 \" WK 1                                                                              ",{}],["|",{"inverse":true}],[" 25 ",{"fg":3,"bold":true}],["  .gtkrc-2.0-kde4 ",{}]],"25":[["~                   ",{"fg":4,"bold":true}],["|",{"inverse":true}],["135 ",{"fg":3,"bold":true}],["  let g:calendar_weeknm = 3 \" KW01                                                                              ",{}],["|",{"inverse":true}],[" 26 ",{"fg":3,"bold":true}],["  .lesshst        ",{}]],"26":[["~                   ",{"fg":4,"bold":true}],["|",{"inverse":true}],["136 ",{"fg":3,"bold":true}],["  let g:calendar_weeknm = 4 \" KW 1                                                                              ",{}],["|",{"inverse":true}],[" 27 ",{"fg":3,"bold":true}],["  .tcshrc         ",{}]],"27":[["~                   ",{"fg":4,"bold":true}],["|",{"inverse":true}],["137 ",{"fg":3,"bold":true}],["  let g:calendar_weeknm = 5 \" 1                                                                                 ",{}],["|",{"inverse":true}],[" 28 ",{"fg":3,"bold":true}],["  .viminfo        ",{}]],"28":[["~                   ",{"fg":4,"bold":true}],["|",{"inverse":true}],["138 ",{"fg":3,"bold":true}],["<                                                                                                               ",{}],["|",{"inverse":true}],[" 29 ",{"fg":3,"bold":true}],["  .vimrc          ",{}]],"29":[["~                   ",{"fg":4,"bold":true}],["|",{"inverse":true}],["139 ",{"fg":3,"bold":true}],["                                                                                                                ",{}],["|",{"inverse":true}],[" 30 ",{"fg":3,"bold":true}],["  .xsession-errors",{}]],"30":[["~                   ",{"fg":4,"bold":true}],["|",{"inverse":true}],["140 ",{"fg":3,"bold":true}],["                                                *g:calendar_datetime*                                           ",{}],["|",{"inverse":true}],[" 31 ",{"fg":3,"bold":true}],["  anaconda-ks.cfg ",{}]],"31":[["~                   ",{"fg":4,"bold":true}],["|",{"inverse":true}],["141 ",{"fg":3,"bold":true}],["To control display of the current date and time, set this variable.                                             ",{}],["|",{"inverse":true}],[" 32 ",{"fg":3,"bold":true}],["  initial-setup-ks",{}]],"32":[["~                   ",{"fg":4,"bold":true}],["|",{"inverse":true}],["142 ",{"fg":3,"bold":true}],["Acceptable values are 'title', 'statusline', and '': >                                                          ",{}],["|",{"inverse":true}],[" 33 ",{"fg":3,"bold":true}],["  test.c          ",{}]],"33":[["~                   ",{"fg":4,"bold":true}],["|",{"inverse":true}],["143 ",{"fg":3,"bold":true}],["  let g:calendar_datetime = 'title'                                                                             ",{}],["|",{"inverse":true}],[" 34 ",{"fg":3,"bold":true}],["  test.cpp        ",{}]],"34":[["~                   ",{"fg":4,"bold":true}],["|",{"inverse":true}],["144 ",{"fg":3,"bold":true}],["<                                                                                                               ",{}],["|",{"inverse":true}],[" 35 ",{"fg":3,"bold":true}],["  .test.cpp.swp   ",{}]],"35":[["~                   ",{"fg":4,"bold":true}],["|",{"inverse":true}],["145 ",{"fg":3,"bold":true}],["                                                *g:calendar_filetype*                                           ",{}],["|",{"inverse":true}],["~                     ",{"fg":4,"bold":true}]],"36":[["~                   ",{"fg":4,"bold":true}],["|",{"inverse":true}],["146 ",{"fg":3,"bold":true}],["To control the filetype of calendar entries, set this variable. It defaults to                                  ",{}],["|",{"inverse":true}],["~                     ",{"fg":4,"bold":true}]],"37":[["~                   ",{"fg":4,"bold":true}],["|",{"inverse":true}],["147 ",{"fg":3,"bold":true}],["'markdown'. Acceptable values are values that are acceptable for |filetype|                                     ",{}],["|",{"inverse":true}],["~                     ",{"fg":4,"bold":true}]],"38":[["~                   ",{"fg":4,"bold":true}],["|",{"inverse":true}],["148 ",{"fg":3,"bold":true}],["like e.g. 'markdown' or 'pandoc':                                                                               ",{}],["|",{"inverse":true}],["~                     ",{"fg":4,"bold":true}]],"39":[["~                   ",{"fg":4,"bold":true}],["|",{"inverse":true}],["149 ",{"fg":3,"bold":true}],["  let g:calendar_filetype = 'pandoc'                                                                            ",{}],["|",{"inverse":true}],["~                     ",{"fg":4,"bold":true}]],"40":[["~                   ",{"fg":4,"bold":true}],["|",{"inverse":true}],["150 ",{"fg":3,"bold":true}],["                                                                                                                ",{}],["|",{"inverse":true}],["~                     ",{"fg":4,"bold":true}]],"41":[["~                   ",{"fg":4,"bold":true}],["|",{"inverse":true}],["151 ",{"fg":3,"bold":true}],["                                                                                                                ",{}],["|",{"inverse":true}],["~                     ",{"fg":4,"bold":true}]],"42":[["~                   ",{"fg":4,"bold":true}],["|",{"inverse":true}],["152 ",{"fg":3,"bold":true}],["HOOKS                                           *calendar-hooks*                                                ",{}],["|",{"inverse":true}],["~                     ",{"fg":4,"bold":true}]],"43":[["~                   ",{"fg":4,"bold":true}],["|",{"inverse":true}],["153 ",{"fg":3,"bold":true}],["                                                                                                                ",{}],["|",{"inverse":true}],["~                     ",{"fg":4,"bold":true}]],"44":[["~                   ",{"fg":4,"bold":true}],["|",{"inverse":true}],["154 ",{"fg":3,"bold":true}],["calendar.vim provides a number of hooks which allow you to run custom code on                                   ",{}],["|",{"inverse":true}],["~                     ",{"fg":4,"bold":true}]],"45":[["~                   ",{"fg":4,"bold":true}],["|",{"inverse":true}],["155 ",{"fg":3,"bold":true}],["certain events.  These are documented below.                                                                    ",{"underline":true}],["|",{"inverse":true}],["~                     ",{"fg":4,"bold":true}]],"46":[["[Name] test.cpp      ",{"inverse":true}],[" NORMAL ",{"bold":true}],[" ",{}],["calendar.txt ",{"bold":true}],["                                                        unix │ utf-8 │ text │  70% ",{}],[" LN 155",{"bold":true}],[":1  ",{}],[" ",{"bold":true,"inverse":true}],[" ~/…/calendar-vim/doc>",{"bold":true}]]},"cursor":{"y":45,"visible":true}}],[0.28628,{"lines":{"0":[["\" Press <F1> for hel",{"fg":6,"bold":true}],["|",{"inverse":true}],["111 ",{"fg":3,"bold":true}],["To change the month names for the calendar headings, set this variable.  The                                    ",{}],["|",{"inverse":true}],["  1 ",{"fg":3,"bold":true}],["\" Press ? for help",{"fg":5,"bold":true}]],"1":[["                    ",{}],["|",{"inverse":true}],["112 ",{"fg":3,"bold":true}],["value is expected to be a comma-separated list of twelve values, starting with                                  ",{}],["|",{"inverse":true}],["  2 ",{"fg":3,"bold":true}],["                  ",{}]],"2":[["▼",{"fg":3,"bold":true}],[" First",{"fg":5,"bold":true}],[" : ",{}],["struct",{"fg":2,"bold":true}],["    ",{}],["|",{"inverse":true}],["113 ",{"fg":3,"bold":true}],["Janurary: >                                                                                                     ",{}],["|",{"inverse":true}],["  3 ",{"fg":3,"bold":true}],[".. (up a dir)",{"fg":6,"bold":true}],["     ",{}]],"3":[["    [prototypes]",{"fg":6,"bold":true}],["    ",{}],["|",{"inverse":true}],["114 ",{"fg":3,"bold":true}],["  let g:calendar_mruler = 'Jan,Feb,Mar,Apr,May,Jun,Jul,Aug,Sep,Oct,Nov,Dec'                                     ",{}],["|",{"inverse":true}],["  4 /root/",{"fg":3,"bold":true}],["            ",{}]],"4":[["   ",{}],["+",{"fg":2,"bold":true}],["FirstRun(void)  ",{}],["|",{"inverse":true}],["115 ",{"fg":3,"bold":true}],["<                                                                                                               ",{}],["|",{"inverse":true}],["  5 ",{"fg":3,"bold":true}],["▸ .asciinema/",{"fg":6,"bold":true}],["     ",{}]],"5":[["   ",{}],["+",{"fg":2,"bold":true}],["FirstRun2(void) ",{}],["|",{"inverse":true}],["116 ",{"fg":3,"bold":true}],["                                                                                                                ",{}],["|",{"inverse":true}],["  6 ",{"fg":3,"bold":true}],["▸ .cache/",{"fg":6,"bold":true}],["         ",{}]],"6":[["                    ",{}],["|",{"inverse":true}],["117 ",{"fg":3,"bold":true}],["                                                *g:calendar_wruler*                                             ",{}],["|",{"inverse":true}],["  7 ",{"fg":3,"bold":true}],["▸ .config/",{"fg":6,"bold":true}],["        ",{}]],"7":[["▼",{"fg":3,"bold":true}],[" Last",{"fg":5,"bold":true}],[" : ",{}],["struct",{"fg":2,"bold":true}],["     ",{}],["|",{"inverse":true}],["118 ",{"fg":3,"bold":true}],["                                                *g:calendar_wruler*                                             ",{}],["|",{"inverse":true}],["  8 ",{"fg":3,"bold":true}],["▸ .dbus/",{"fg":6,"bold":true}],["          ",{}]]},"cursor":{"y":7,"visible":false}}],[0.01652,{"lines":{"7":[["▼",{"fg":3,"bold":true}],[" Last",{"fg":5,"bold":true}],[" : ",{}],["struct",{"fg":2,"bold":true}],["     ",{}],["|",{"inverse":true}],["118 ",{"fg":3,"bold":true}],["To change the week names for the calendar headings, set this variable.  The                                     ",{}],["|",{"inverse":true}],["  8 ",{"fg":3,"bold":true}],["▸ .dbus/",{"fg":6,"bold":true}],["          ",{}]],"8":[["    [functions]",{"fg":6,"bold":true}],["     ",{}],["|",{"inverse":true}],["119 ",{"fg":3,"bold":true}],["value is expected to be a space-separated list of seven values, starting with                                   ",{}],["|",{"inverse":true}],["  9 ",{"fg":3,"bold":true}],["▸ .gnupg/",{"fg":6,"bold":true}],["         ",{}]],"9":[["   ",{}],["+",{"fg":2,"bold":true}],["FirstRun(void)  ",{}],["|",{"inverse":true}],["120 ",{"fg":3,"bold":true}],["Sunday: >                                                                                                       ",{}],["|",{"inverse":true}],[" 10 ",{"fg":3,"bold":true}],["▸ .kde/",{"fg":6,"bold":true}],["           ",{}]],"10":[["   ",{}],["+",{"fg":2,"bold":true}],["FirstRun2(void) ",{}],["|",{"inverse":true}],["121 ",{"fg":3,"bold":true}],["  let g:calendar_wruler = 'Su Mo Tu We Th Fr Sa'                                                                ",{}],["|",{"inverse":true}],[" 11 ",{"fg":3,"bold":true}],["▸ .local/",{"fg":6,"bold":true}],["         ",{}]],"11":[["   ",{}],["+",{"fg":2,"bold":true}],["~Last()         ",{}],["|",{"inverse":true}],["122 ",{"fg":3,"bold":true}],["<                                                                                                               ",{}],["|",{"inverse":true}],[" 12 ",{"fg":3,"bold":true}],["▸ .pki/",{"fg":6,"bold":true}],["           ",{}]],"12":[["   ",{}],["+",{"fg":2,"bold":true}],["SecondRun(void) ",{}],["|",{"inverse":true}],["123 ",{"fg":3,"bold":true}],["                                                                                                                ",{}],["|",{"inverse":true}],[" 13 ",{"fg":3,"bold":true}],["▸ .ssh/",{"fg":6,"bold":true}],["           ",{}]],"13":[["   ",{}],["+",{"fg":2,"bold":true}],["SecondRun2(void)",{}],["|",{"inverse":true}],["124 ",{"fg":3,"bold":true}],["                                                *g:calendar_monday*                                             ",{}],["|",{"inverse":true}],[" 14 ",{"fg":3,"bold":true}],["▸ .vim/",{"fg":6,"bold":true}],["           ",{}]],"14":[["                    ",{}],["|",{"inverse":true}],["125 ",{"fg":3,"bold":true}],["To make the week start on Monday rather than Sunday, set this variable.  Note                                   ",{}],["|",{"inverse":true}],[" 15 ",{"fg":3,"bold":true}],["▸ diary/",{"fg":6,"bold":true}],["          ",{}]],"15":[["▼",{"fg":3,"bold":true}],[" Second",{"fg":5,"bold":true}],[" : ",{}],["struct",{"fg":2,"bold":true}],["   ",{}],["|",{"inverse":true}],["126 ",{"fg":3,"bold":true}],["that the value of |g:calendar_wruler| is not affected by this; it should                                        ",{}],["|",{"inverse":true}],[" 16 ",{"fg":3,"bold":true}],["▸ temp/",{"fg":6,"bold":true}],["           ",{}]],"16":[["    [prototypes]",{"fg":6,"bold":true}],["    ",{}],["|",{"inverse":true}],["127 ",{"fg":3,"bold":true}],["always begin with Sunday: >                                                                                     ",{}],["|",{"inverse":true}],[" 17 ",{"fg":3,"bold":true}],["  .bash_history   ",{}]],"17":[["   ",{}],["+",{"fg":2,"bold":true}],["SecondRun(void) ",{}],["|",{"inverse":true}],["128 ",{"fg":3,"bold":true}],["  let g:calendar_monday = 1                                                                                     ",{}],["|",{"inverse":true}],[" 18 ",{"fg":3,"bold":true}],["  .bash_logout    ",{}]],"18":[["   ",{}],["+",{"fg":2,"bold":true}],["SecondRun2(void)",{}],["|",{"inverse":true}],["129 ",{"fg":3,"bold":true}],["<                                                                                                               ",{}],["|",{"inverse":true}],[" 19 ",{"fg":3,"bold":true}],["  .bash_profile   ",{"underline":true}]],"19":[["                    ",{}],["|",{"inverse":true}],["130 ",{"fg":3,"bold":true}],["                                                                                                                ",{}],["|",{"inverse":true}],[" 20 ",{"fg":3,"bold":true}],["  .bashrc         ",{}]],"20":[["▼",{"fg":3,"bold":true}],[" ",{}],["functions",{"fg":6,"bold":true}],["         ",{}],["|",{"inverse":true}],["131 ",{"fg":3,"bold":true}],["                                                *g:calendar_weeknm*                                             ",{}],["|",{"inverse":true}],[" 21 ",{"fg":3,"bold":true}],["  .cshrc          ",{}]],"21":[["    main(int argc, c",{"underline":true}],["|",{"inverse":true}],["132 ",{"fg":3,"bold":true}],["To show the week number, set this variable.  There are four valid settings: >                                   ",{}],["|",{"inverse":true}],[" 22 ",{"fg":3,"bold":true}],["  .dmrc           ",{}]],"22":[["~                   ",{"fg":4,"bold":true}],["|",{"inverse":true}],["133 ",{"fg":3,"bold":true}],["  let g:calendar_weeknm = 1 \" WK01                                                                              ",{}],["|",{"inverse":true}],[" 23 ",{"fg":3,"bold":true}],["  .esd_auth       ",{}]],"23":[["~                   ",{"fg":4,"bold":true}],["|",{"inverse":true}],["134 ",{"fg":3,"bold":true}],["  let g:calendar_weeknm = 2 \" WK 1                                                                              ",{}],["|",{"inverse":true}],[" 24 ",{"fg":3,"bold":true}],["  .gtkrc-2.0      ",{}]],"24":[["~                   ",{"fg":4,"bold":true}],["|",{"inverse":true}],["135 ",{"fg":3,"bold":true}],["  let g:calendar_weeknm = 3 \" KW01                                                                              ",{}],["|",{"inverse":true}],[" 25 ",{"fg":3,"bold":true}],["  .gtkrc-2.0-kde4 ",{}]],"25":[["~                   ",{"fg":4,"bold":true}],["|",{"inverse":true}],["136 ",{"fg":3,"bold":true}],["  let g:calendar_weeknm = 4 \" KW 1                                                                              ",{}],["|",{"inverse":true}],[" 26 ",{"fg":3,"bold":true}],["  .lesshst        ",{}]],"26":[["~                   ",{"fg":4,"bold":true}],["|",{"inverse":true}],["137 ",{"fg":3,"bold":true}],["  let g:calendar_weeknm = 5 \" 1                                                                                 ",{}],["|",{"inverse":true}],[" 27 ",{"fg":3,"bold":true}],["  .tcshrc         ",{}]],"27":[["~                   ",{"fg":4,"bold":true}],["|",{"inverse":true}],["138 ",{"fg":3,"bold":true}],["<                                                                                                               ",{}],["|",{"inverse":true}],[" 28 ",{"fg":3,"bold":true}],["  .viminfo        ",{}]],"28":[["~                   ",{"fg":4,"bold":true}],["|",{"inverse":true}],["139 ",{"fg":3,"bold":true}],["                                                                                                                ",{}],["|",{"inverse":true}],[" 29 ",{"fg":3,"bold":true}],["  .vimrc          ",{}]],"29":[["~                   ",{"fg":4,"bold":true}],["|",{"inverse":true}],["140 ",{"fg":3,"bold":true}],["                                                *g:calendar_datetime*                                           ",{}],["|",{"inverse":true}],[" 30 ",{"fg":3,"bold":true}],["  .xsession-errors",{}]],"30":[["~                   ",{"fg":4,"bold":true}],["|",{"inverse":true}],["141 ",{"fg":3,"bold":true}],["To control display of the current date and time, set this variable.                                             ",{}],["|",{"inverse":true}],[" 31 ",{"fg":3,"bold":true}],["  anaconda-ks.cfg ",{}]],"31":[["~                   ",{"fg":4,"bold":true}],["|",{"inverse":true}],["142 ",{"fg":3,"bold":true}],["Acceptable values are 'title', 'statusline', and '': >                                                          ",{}],["|",{"inverse":true}],[" 32 ",{"fg":3,"bold":true}],["  initial-setup-ks",{}]],"32":[["~                   ",{"fg":4,"bold":true}],["|",{"inverse":true}],["143 ",{"fg":3,"bold":true}],["  let g:calendar_datetime = 'title'                                                                             ",{}],["|",{"inverse":true}],[" 33 ",{"fg":3,"bold":true}],["  test.c          ",{}]],"33":[["~                   ",{"fg":4,"bold":true}],["|",{"inverse":true}],["144 ",{"fg":3,"bold":true}],["<                                                                                                               ",{}],["|",{"inverse":true}],[" 34 ",{"fg":3,"bold":true}],["  test.cpp        ",{}]],"34":[["~                   ",{"fg":4,"bold":true}],["|",{"inverse":true}],["145 ",{"fg":3,"bold":true}],["                                                *g:calendar_filetype*                                           ",{}],["|",{"inverse":true}],[" 35 ",{"fg":3,"bold":true}],["  .test.cpp.swp   ",{}]],"35":[["~                   ",{"fg":4,"bold":true}],["|",{"inverse":true}],["146 ",{"fg":3,"bold":true}],["To control the filetype of calendar entries, set this variable. It defaults to                                  ",{}],["|",{"inverse":true}],["~                     ",{"fg":4,"bold":true}]],"36":[["~                   ",{"fg":4,"bold":true}],["|",{"inverse":true}],["147 ",{"fg":3,"bold":true}],["'markdown'. Acceptable values are values that are acceptable for |filetype|                                     ",{}],["|",{"inverse":true}],["~                     ",{"fg":4,"bold":true}]],"37":[["~                   ",{"fg":4,"bold":true}],["|",{"inverse":true}],["148 ",{"fg":3,"bold":true}],["like e.g. 'markdown' or 'pandoc':                                                                               ",{}],["|",{"inverse":true}],["~                     ",{"fg":4,"bold":true}]],"38":[["~                   ",{"fg":4,"bold":true}],["|",{"inverse":true}],["149 ",{"fg":3,"bold":true}],["  let g:calendar_filetype = 'pandoc'                                                                            ",{}],["|",{"inverse":true}],["~                     ",{"fg":4,"bold":true}]],"39":[["~                   ",{"fg":4,"bold":true}],["|",{"inverse":true}],["150 ",{"fg":3,"bold":true}],["                                                                                                                ",{}],["|",{"inverse":true}],["~                     ",{"fg":4,"bold":true}]],"40":[["~                   ",{"fg":4,"bold":true}],["|",{"inverse":true}],["151 ",{"fg":3,"bold":true}],["                                                                                                                ",{}],["|",{"inverse":true}],["~                     ",{"fg":4,"bold":true}]],"41":[["~                   ",{"fg":4,"bold":true}],["|",{"inverse":true}],["152 ",{"fg":3,"bold":true}],["HOOKS                                           *calendar-hooks*                                                ",{}],["|",{"inverse":true}],["~                     ",{"fg":4,"bold":true}]],"42":[["~                   ",{"fg":4,"bold":true}],["|",{"inverse":true}],["153 ",{"fg":3,"bold":true}],["                                                                                                                ",{}],["|",{"inverse":true}],["~                     ",{"fg":4,"bold":true}]],"43":[["~                   ",{"fg":4,"bold":true}],["|",{"inverse":true}],["154 ",{"fg":3,"bold":true}],["calendar.vim provides a number of hooks which allow you to run custom code on                                   ",{}],["|",{"inverse":true}],["~                     ",{"fg":4,"bold":true}]],"44":[["~                   ",{"fg":4,"bold":true}],["|",{"inverse":true}],["155 ",{"fg":3,"bold":true}],["certain events.  These are documented below. ",{"underline":true}],[" allow you to run custom code on                                   ",{}],["|",{"inverse":true}],["~                     ",{"fg":4,"bold":true}]]},"cursor":{"x":70,"y":44}}],[0.003156,{"lines":{"44":[["~                   ",{"fg":4,"bold":true}],["|",{"inverse":true}],["155 ",{"fg":3,"bold":true}],["certain events.  These are documented below.                                                                    ",{}],["|",{"inverse":true}],["~                     ",{"fg":4,"bold":true}]],"45":[["~                   ",{"fg":4,"bold":true}],["|",{"inverse":true}],["156 ",{"fg":3,"bold":true}],["                                                                                                                ",{"underline":true}],["|",{"inverse":true}],["~                     ",{"fg":4,"bold":true}]],"46":[["[Name] test.cpp      ",{"inverse":true}],[" NORMAL ",{"bold":true}],[" ",{}],["calendar.txt ",{"bold":true}],["                                                        unix │ utf-8 │ text │  70% ",{}],[" LN 156",{"bold":true}],[":1  ",{}],[" ",{"bold":true,"inverse":true}],[" ~/…/calendar-vim/doc>",{"bold":true}]]},"cursor":{"x":25,"y":45,"visible":true}}],[0.23126,{"lines":{"0":[["\" Press <F1> for hel",{"fg":6,"bold":true}],["|",{"inverse":true}],["112 ",{"fg":3,"bold":true}],["value is expected to be a comma-separated list of twelve values, starting with                                  ",{}],["|",{"inverse":true}],["  1 ",{"fg":3,"bold":true}],["\" Press ? for help",{"fg":5,"bold":true}]],"1":[["                    ",{}],["|",{"inverse":true}],["113 ",{"fg":3,"bold":true}],["Janurary: >                                                                                                     ",{}],["|",{"inverse":true}],["  2 ",{"fg":3,"bold":true}],["                  ",{}]],"2":[["▼",{"fg":3,"bold":true}],[" First",{"fg":5,"bold":true}],[" : ",{}],["struct",{"fg":2,"bold":true}],["    ",{}],["|",{"inverse":true}],["114 ",{"fg":3,"bold":true}],["  let g:calendar_mruler = 'Jan,Feb,Mar,Apr,May,Jun,Jul,Aug,Sep,Oct,Nov,Dec'                                     ",{}],["|",{"inverse":true}],["  3 ",{"fg":3,"bold":true}],[".. (up a dir)",{"fg":6,"bold":true}],["     ",{}]],"3":[["    [prototypes]",{"fg":6,"bold":true}],["    ",{}],["|",{"inverse":true}],["115 ",{"fg":3,"bold":true}],["<                                                                                                               ",{}],["|",{"inverse":true}],["  4 /root/",{"fg":3,"bold":true}],["            ",{}]],"4":[["   ",{}],["+",{"fg":2,"bold":true}],["FirstRun(void)  ",{}],["|",{"inverse":true}],["116 ",{"fg":3,"bold":true}],["                                                                                                                ",{}],["|",{"inverse":true}],["  5 ",{"fg":3,"bold":true}],["▸ .asciinema/",{"fg":6,"bold":true}],["     ",{}]],"5":[["   ",{}],["+",{"fg":2,"bold":true}],["FirstRun2(void) ",{}],["|",{"inverse":true}],["117 ",{"fg":3,"bold":true}],["                                                *g:calendar_wruler*                                             ",{}],["|",{"inverse":true}],["  6 ",{"fg":3,"bold":true}],["▸ .cache/",{"fg":6,"bold":true}],["         ",{}]],"6":[["                    ",{}],["|",{"inverse":true}],["118 ",{"fg":3,"bold":true}],["To change the week names for the calendar headings, set this variable.  The                                     ",{}],["|",{"inverse":true}],["  7 ",{"fg":3,"bold":true}],["▸ .config/",{"fg":6,"bold":true}],["        ",{}]],"7":[["▼",{"fg":3,"bold":true}],[" Last",{"fg":5,"bold":true}],[" : ",{}],["struct",{"fg":2,"bold":true}],["     ",{}],["|",{"inverse":true}],["119 ",{"fg":3,"bold":true}],["To change the week names for the calendar headings, set this variable.  The                                     ",{}],["|",{"inverse":true}],["  8 ",{"fg":3,"bold":true}],["▸ .dbus/",{"fg":6,"bold":true}],["          ",{}]]},"cursor":{"y":7,"visible":false}}],[0.015912,{"lines":{"7":[["▼",{"fg":3,"bold":true}],[" Last",{"fg":5,"bold":true}],[" : ",{}],["struct",{"fg":2,"bold":true}],["     ",{}],["|",{"inverse":true}],["119 ",{"fg":3,"bold":true}],["value is expected to be a space-separated list of seven values, starting with                                   ",{}],["|",{"inverse":true}],["  8 ",{"fg":3,"bold":true}],["▸ .dbus/",{"fg":6,"bold":true}],["          ",{}]],"8":[["    [functions]",{"fg":6,"bold":true}],["     ",{}],["|",{"inverse":true}],["120 ",{"fg":3,"bold":true}],["Sunday: >                                                                                                       ",{}],["|",{"inverse":true}],["  9 ",{"fg":3,"bold":true}],["▸ .gnupg/",{"fg":6,"bold":true}],["         ",{}]],"9":[["   ",{}],["+",{"fg":2,"bold":true}],["FirstRun(void)  ",{}],["|",{"inverse":true}],["121 ",{"fg":3,"bold":true}],["  let g:calendar_wruler = 'Su Mo Tu We Th Fr Sa'                                                                ",{}],["|",{"inverse":true}],[" 10 ",{"fg":3,"bold":true}],["▸ .kde/",{"fg":6,"bold":true}],["           ",{}]],"10":[["   ",{}],["+",{"fg":2,"bold":true}],["FirstRun2(void) ",{}],["|",{"inverse":true}],["122 ",{"fg":3,"bold":true}],["<                                                                                                               ",{}],["|",{"inverse":true}],[" 11 ",{"fg":3,"bold":true}],["▸ .local/",{"fg":6,"bold":true}],["         ",{}]],"11":[["   ",{}],["+",{"fg":2,"bold":true}],["~Last()         ",{}],["|",{"inverse":true}],["123 ",{"fg":3,"bold":true}],["                                                                                                                ",{}],["|",{"inverse":true}],[" 12 ",{"fg":3,"bold":true}],["▸ .pki/",{"fg":6,"bold":true}],["           ",{}]],"12":[["   ",{}],["+",{"fg":2,"bold":true}],["SecondRun(void) ",{}],["|",{"inverse":true}],["124 ",{"fg":3,"bold":true}],["                                                *g:calendar_monday*                                             ",{}],["|",{"inverse":true}],[" 13 ",{"fg":3,"bold":true}],["▸ .ssh/",{"fg":6,"bold":true}],["           ",{}]],"13":[["   ",{}],["+",{"fg":2,"bold":true}],["SecondRun2(void)",{}],["|",{"inverse":true}],["125 ",{"fg":3,"bold":true}],["To make the week start on Monday rather than Sunday, set this variable.  Note                                   ",{}],["|",{"inverse":true}],[" 14 ",{"fg":3,"bold":true}],["▸ .vim/",{"fg":6,"bold":true}],["           ",{}]],"14":[["                    ",{}],["|",{"inverse":true}],["126 ",{"fg":3,"bold":true}],["that the value of |g:calendar_wruler| is not affected by this; it should                                        ",{}],["|",{"inverse":true}],[" 15 ",{"fg":3,"bold":true}],["▸ diary/",{"fg":6,"bold":true}],["          ",{}]],"15":[["▼",{"fg":3,"bold":true}],[" Second",{"fg":5,"bold":true}],[" : ",{}],["struct",{"fg":2,"bold":true}],["   ",{}],["|",{"inverse":true}],["127 ",{"fg":3,"bold":true}],["always begin with Sunday: >                                                                                     ",{}],["|",{"inverse":true}],[" 16 ",{"fg":3,"bold":true}],["▸ temp/",{"fg":6,"bold":true}],["           ",{}]],"16":[["    [prototypes]",{"fg":6,"bold":true}],["    ",{}],["|",{"inverse":true}],["128 ",{"fg":3,"bold":true}],["  let g:calendar_monday = 1                                                                                     ",{}],["|",{"inverse":true}],[" 17 ",{"fg":3,"bold":true}],["  .bash_history   ",{}]],"17":[["   ",{}],["+",{"fg":2,"bold":true}],["SecondRun(void) ",{}],["|",{"inverse":true}],["129 ",{"fg":3,"bold":true}],["<                                                                                                               ",{}],["|",{"inverse":true}],[" 18 ",{"fg":3,"bold":true}],["  .bash_logout    ",{}]],"18":[["   ",{}],["+",{"fg":2,"bold":true}],["SecondRun2(void)",{}],["|",{"inverse":true}],["130 ",{"fg":3,"bold":true}],["                                                                                                                ",{}],["|",{"inverse":true}],[" 19 ",{"fg":3,"bold":true}],["  .bash_profile   ",{"underline":true}]],"19":[["                    ",{}],["|",{"inverse":true}],["131 ",{"fg":3,"bold":true}],["                                                *g:calendar_weeknm*                                             ",{}],["|",{"inverse":true}],[" 20 ",{"fg":3,"bold":true}],["  .bashrc         ",{}]],"20":[["▼",{"fg":3,"bold":true}],[" ",{}],["functions",{"fg":6,"bold":true}],["         ",{}],["|",{"inverse":true}],["132 ",{"fg":3,"bold":true}],["To show the week number, set this variable.  There are four valid settings: >                                   ",{}],["|",{"inverse":true}],[" 21 ",{"fg":3,"bold":true}],["  .cshrc          ",{}]],"21":[["    main(int argc, c",{"underline":true}],["|",{"inverse":true}],["133 ",{"fg":3,"bold":true}],["  let g:calendar_weeknm = 1 \" WK01                                                                              ",{}],["|",{"inverse":true}],[" 22 ",{"fg":3,"bold":true}],["  .dmrc           ",{}]],"22":[["~                   ",{"fg":4,"bold":true}],["|",{"inverse":true}],["134 ",{"fg":3,"bold":true}],["  let g:calendar_weeknm = 2 \" WK 1                                                                              ",{}],["|",{"inverse":true}],[" 23 ",{"fg":3,"bold":true}],["  .esd_auth       ",{}]],"23":[["~                   ",{"fg":4,"bold":true}],["|",{"inverse":true}],["135 ",{"fg":3,"bold":true}],["  let g:calendar_weeknm = 3 \" KW01                                                                              ",{}],["|",{"inverse":true}],[" 24 ",{"fg":3,"bold":true}],["  .gtkrc-2.0      ",{}]],"24":[["~                   ",{"fg":4,"bold":true}],["|",{"inverse":true}],["136 ",{"fg":3,"bold":true}],["  let g:calendar_weeknm = 4 \" KW 1                                                                              ",{}],["|",{"inverse":true}],[" 25 ",{"fg":3,"bold":true}],["  .gtkrc-2.0-kde4 ",{}]],"25":[["~                   ",{"fg":4,"bold":true}],["|",{"inverse":true}],["137 ",{"fg":3,"bold":true}],["  let g:calendar_weeknm = 5 \" 1                                                                                 ",{}],["|",{"inverse":true}],[" 26 ",{"fg":3,"bold":true}],["  .lesshst        ",{}]],"26":[["~                   ",{"fg":4,"bold":true}],["|",{"inverse":true}],["138 ",{"fg":3,"bold":true}],["<                                                                                                               ",{}],["|",{"inverse":true}],[" 27 ",{"fg":3,"bold":true}],["  .tcshrc         ",{}]],"27":[["~                   ",{"fg":4,"bold":true}],["|",{"inverse":true}],["139 ",{"fg":3,"bold":true}],["                                                                                                                ",{}],["|",{"inverse":true}],[" 28 ",{"fg":3,"bold":true}],["  .viminfo        ",{}]],"28":[["~                   ",{"fg":4,"bold":true}],["|",{"inverse":true}],["140 ",{"fg":3,"bold":true}],["                                                *g:calendar_datetime*                                           ",{}],["|",{"inverse":true}],[" 29 ",{"fg":3,"bold":true}],["  .vimrc          ",{}]],"29":[["~                   ",{"fg":4,"bold":true}],["|",{"inverse":true}],["141 ",{"fg":3,"bold":true}],["To control display of the current date and time, set this variable.                                             ",{}],["|",{"inverse":true}],[" 30 ",{"fg":3,"bold":true}],["  .xsession-errors",{}]],"30":[["~                   ",{"fg":4,"bold":true}],["|",{"inverse":true}],["142 ",{"fg":3,"bold":true}],["Acceptable values are 'title', 'statusline', and '': >                                                          ",{}],["|",{"inverse":true}],[" 31 ",{"fg":3,"bold":true}],["  anaconda-ks.cfg ",{}]],"31":[["~                   ",{"fg":4,"bold":true}],["|",{"inverse":true}],["143 ",{"fg":3,"bold":true}],["  let g:calendar_datetime = 'title'                                                                             ",{}],["|",{"inverse":true}],[" 32 ",{"fg":3,"bold":true}],["  initial-setup-ks",{}]],"32":[["~                   ",{"fg":4,"bold":true}],["|",{"inverse":true}],["144 ",{"fg":3,"bold":true}],["<                                                                                                               ",{}],["|",{"inverse":true}],[" 33 ",{"fg":3,"bold":true}],["  test.c          ",{}]],"33":[["~                   ",{"fg":4,"bold":true}],["|",{"inverse":true}],["145 ",{"fg":3,"bold":true}],["                                                *g:calendar_filetype*                                           ",{}],["|",{"inverse":true}],[" 34 ",{"fg":3,"bold":true}],["  test.cpp        ",{}]],"34":[["~                   ",{"fg":4,"bold":true}],["|",{"inverse":true}],["146 ",{"fg":3,"bold":true}],["To control the filetype of calendar entries, set this variable. It defaults to                                  ",{}],["|",{"inverse":true}],[" 35 ",{"fg":3,"bold":true}],["  .test.cpp.swp   ",{}]],"35":[["~                   ",{"fg":4,"bold":true}],["|",{"inverse":true}],["147 ",{"fg":3,"bold":true}],["'markdown'. Acceptable values are values that are acceptable for |filetype|                                     ",{}],["|",{"inverse":true}],["~                     ",{"fg":4,"bold":true}]],"36":[["~                   ",{"fg":4,"bold":true}],["|",{"inverse":true}],["148 ",{"fg":3,"bold":true}],["like e.g. 'markdown' or 'pandoc':                                                                               ",{}],["|",{"inverse":true}],["~                     ",{"fg":4,"bold":true}]],"37":[["~                   ",{"fg":4,"bold":true}],["|",{"inverse":true}],["149 ",{"fg":3,"bold":true}],["  let g:calendar_filetype = 'pandoc'                                                                            ",{}],["|",{"inverse":true}],["~                     ",{"fg":4,"bold":true}]],"38":[["~                   ",{"fg":4,"bold":true}],["|",{"inverse":true}],["150 ",{"fg":3,"bold":true}],["                                                                                                                ",{}],["|",{"inverse":true}],["~                     ",{"fg":4,"bold":true}]],"39":[["~                   ",{"fg":4,"bold":true}],["|",{"inverse":true}],["151 ",{"fg":3,"bold":true}],["                                                                                                                ",{}],["|",{"inverse":true}],["~                     ",{"fg":4,"bold":true}]],"40":[["~                   ",{"fg":4,"bold":true}],["|",{"inverse":true}],["152 ",{"fg":3,"bold":true}],["HOOKS                                           *calendar-hooks*                                                ",{}],["|",{"inverse":true}],["~                     ",{"fg":4,"bold":true}]],"41":[["~                   ",{"fg":4,"bold":true}],["|",{"inverse":true}],["153 ",{"fg":3,"bold":true}],["                                                                                                                ",{}],["|",{"inverse":true}],["~                     ",{"fg":4,"bold":true}]],"42":[["~                   ",{"fg":4,"bold":true}],["|",{"inverse":true}],["154 ",{"fg":3,"bold":true}],["calendar.vim provides a number of hooks which allow you to run custom code on                                   ",{}],["|",{"inverse":true}],["~                     ",{"fg":4,"bold":true}]],"43":[["~                   ",{"fg":4,"bold":true}],["|",{"inverse":true}],["155 ",{"fg":3,"bold":true}],["certain events.  These are documented below.                                                                    ",{}],["|",{"inverse":true}],["~                     ",{"fg":4,"bold":true}]],"44":[["~                   ",{"fg":4,"bold":true}],["|",{"inverse":true}],["156 ",{"fg":3,"bold":true}],["                                                                                                                ",{}],["|",{"inverse":true}],["~                     ",{"fg":4,"bold":true}]],"45":[["~                   ",{"fg":4,"bold":true}],["|",{"inverse":true}],["157 ",{"fg":3,"bold":true}],["                                                *calendar_action*                                               ",{"underline":true}],["|",{"inverse":true}],["~                     ",{"fg":4,"bold":true}]],"46":[["[Name] test.cpp      ",{"inverse":true}],[" NORMAL ",{"bold":true}],[" ",{}],["calendar.txt ",{"bold":true}],["                                                        unix │ utf-8 │ text │  71% ",{}],[" LN 157",{"bold":true}],[":1  ",{}],[" ",{"bold":true,"inverse":true}],[" ~/…/calendar-vim/doc>",{"bold":true}]]},"cursor":{"y":45,"visible":true}}],[0.014465,{"lines":{"0":[["\" Press <F1> for hel",{"fg":6,"bold":true}],["|",{"inverse":true}],["113 ",{"fg":3,"bold":true}],["Janurary: >                                                                                                     ",{}],["|",{"inverse":true}],["  1 ",{"fg":3,"bold":true}],["\" Press ? for help",{"fg":5,"bold":true}]],"1":[["                    ",{}],["|",{"inverse":true}],["114 ",{"fg":3,"bold":true}],["  let g:calendar_mruler = 'Jan,Feb,Mar,Apr,May,Jun,Jul,Aug,Sep,Oct,Nov,Dec'                                     ",{}],["|",{"inverse":true}],["  2 ",{"fg":3,"bold":true}],["                  ",{}]],"2":[["▼",{"fg":3,"bold":true}],[" First",{"fg":5,"bold":true}],[" : ",{}],["struct",{"fg":2,"bold":true}],["    ",{}],["|",{"inverse":true}],["115 ",{"fg":3,"bold":true}],["<                                                                                                               ",{}],["|",{"inverse":true}],["  3 ",{"fg":3,"bold":true}],[".. (up a dir)",{"fg":6,"bold":true}],["     ",{}]],"3":[["    [prototypes]",{"fg":6,"bold":true}],["    ",{}],["|",{"inverse":true}],["116 ",{"fg":3,"bold":true}],["                                                                                                                ",{}],["|",{"inverse":true}],["  4 /root/",{"fg":3,"bold":true}],["            ",{}]],"4":[["   ",{}],["+",{"fg":2,"bold":true}],["FirstRun(void)  ",{}],["|",{"inverse":true}],["117 ",{"fg":3,"bold":true}],["                                                *g:calendar_wruler*                                             ",{}],["|",{"inverse":true}],["  5 ",{"fg":3,"bold":true}],["▸ .asciinema/",{"fg":6,"bold":true}],["     ",{}]],"5":[["   ",{}],["+",{"fg":2,"bold":true}],["FirstRun2(void) ",{}],["|",{"inverse":true}],["118 ",{"fg":3,"bold":true}],["To change the week names for the calendar headings, set this variable.  The                                     ",{}],["|",{"inverse":true}],["  6 ",{"fg":3,"bold":true}],["▸ .cache/",{"fg":6,"bold":true}],["         ",{}]],"6":[["                    ",{}],["|",{"inverse":true}],["119 ",{"fg":3,"bold":true}],["value is expected to be a space-separated list of seven values, starting with                                   ",{}],["|",{"inverse":true}],["  7 ",{"fg":3,"bold":true}],["▸ .config/",{"fg":6,"bold":true}],["        ",{}]],"7":[["▼",{"fg":3,"bold":true}],[" Last",{"fg":5,"bold":true}],[" : ",{}],["struct",{"fg":2,"bold":true}],["     ",{}],["|",{"inverse":true}],["120 ",{"fg":3,"bold":true}],["Sunday: >                                                                                                       ",{}],["|",{"inverse":true}],["  8 ",{"fg":3,"bold":true}],["▸ .dbus/",{"fg":6,"bold":true}],["          ",{}]],"8":[["    [functions]",{"fg":6,"bold":true}],["     ",{}],["|",{"inverse":true}],["121 ",{"fg":3,"bold":true}],["  let g:calendar_wruler = 'Su Mo Tu We Th Fr Sa'                                                                ",{}],["|",{"inverse":true}],["  9 ",{"fg":3,"bold":true}],["▸ .gnupg/",{"fg":6,"bold":true}],["         ",{}]],"9":[["   ",{}],["+",{"fg":2,"bold":true}],["FirstRun(void)  ",{}],["|",{"inverse":true}],["122 ",{"fg":3,"bold":true}],["<                                                                                                               ",{}],["|",{"inverse":true}],[" 10 ",{"fg":3,"bold":true}],["▸ .kde/",{"fg":6,"bold":true}],["           ",{}]],"10":[["   ",{}],["+",{"fg":2,"bold":true}],["FirstRun2(void) ",{}],["|",{"inverse":true}],["123 ",{"fg":3,"bold":true}],["                                                                                                                ",{}],["|",{"inverse":true}],[" 11 ",{"fg":3,"bold":true}],["▸ .local/",{"fg":6,"bold":true}],["         ",{}]],"11":[["   ",{}],["+",{"fg":2,"bold":true}],["~Last()         ",{}],["|",{"inverse":true}],["124 ",{"fg":3,"bold":true}],["                                                *g:calendar_monday*                                             ",{}],["|",{"inverse":true}],[" 12 ",{"fg":3,"bold":true}],["▸ .pki/",{"fg":6,"bold":true}],["           ",{}]],"12":[["   ",{}],["+",{"fg":2,"bold":true}],["SecondRun(void) ",{}],["|",{"inverse":true}],["125 ",{"fg":3,"bold":true}],["To make the week start on Monday rather than Sunday, set this variable.  Note                                   ",{}],["|",{"inverse":true}],[" 13 ",{"fg":3,"bold":true}],["▸ .ssh/",{"fg":6,"bold":true}],["           ",{}]],"13":[["   ",{}],["+",{"fg":2,"bold":true}],["SecondRun2(void)",{}],["|",{"inverse":true}],["126 ",{"fg":3,"bold":true}],["that the value of |g:calendar_wruler| is not affected by this; it should                                        ",{}],["|",{"inverse":true}],[" 14 ",{"fg":3,"bold":true}],["▸ .vim/",{"fg":6,"bold":true}],["           ",{}]],"14":[["                    ",{}],["|",{"inverse":true}],["127 ",{"fg":3,"bold":true}],["always begin with Sunday: >                                                                                     ",{}],["|",{"inverse":true}],[" 15 ",{"fg":3,"bold":true}],["▸ diary/",{"fg":6,"bold":true}],["          ",{}]]},"cursor":{"x":120,"y":14,"visible":false}}],[0.033435,{"lines":{"15":[["▼",{"fg":3,"bold":true}],[" Second",{"fg":5,"bold":true}],[" : ",{}],["struct",{"fg":2,"bold":true}],["   ",{}],["|",{"inverse":true}],["128 ",{"fg":3,"bold":true}],["  let g:calendar_monday = 1                                                                                     ",{}],["|",{"inverse":true}],[" 16 ",{"fg":3,"bold":true}],["▸ temp/",{"fg":6,"bold":true}],["           ",{}]],"16":[["    [prototypes]",{"fg":6,"bold":true}],["    ",{}],["|",{"inverse":true}],["129 ",{"fg":3,"bold":true}],["<                                                                                                               ",{}],["|",{"inverse":true}],[" 17 ",{"fg":3,"bold":true}],["  .bash_history   ",{}]],"17":[["   ",{}],["+",{"fg":2,"bold":true}],["SecondRun(void) ",{}],["|",{"inverse":true}],["130 ",{"fg":3,"bold":true}],["                                                                                                                ",{}],["|",{"inverse":true}],[" 18 ",{"fg":3,"bold":true}],["  .bash_logout    ",{}]],"18":[["   ",{}],["+",{"fg":2,"bold":true}],["SecondRun2(void)",{}],["|",{"inverse":true}],["131 ",{"fg":3,"bold":true}],["                                                *g:calendar_weeknm*                                             ",{}],["|",{"inverse":true}],[" 19 ",{"fg":3,"bold":true}],["  .bash_profile   ",{"underline":true}]],"19":[["                    ",{}],["|",{"inverse":true}],["132 ",{"fg":3,"bold":true}],["To show the week number, set this variable.  There are four valid settings: >                                   ",{}],["|",{"inverse":true}],[" 20 ",{"fg":3,"bold":true}],["  .bashrc         ",{}]],"20":[["▼",{"fg":3,"bold":true}],[" ",{}],["functions",{"fg":6,"bold":true}],["         ",{}],["|",{"inverse":true}],["133 ",{"fg":3,"bold":true}],["  let g:calendar_weeknm = 1 \" WK01                                                                              ",{}],["|",{"inverse":true}],[" 21 ",{"fg":3,"bold":true}],["  .cshrc          ",{}]],"21":[["    main(int argc, c",{"underline":true}],["|",{"inverse":true}],["134 ",{"fg":3,"bold":true}],["  let g:calendar_weeknm = 2 \" WK 1                                                                              ",{}],["|",{"inverse":true}],[" 22 ",{"fg":3,"bold":true}],["  .dmrc           ",{}]],"22":[["~                   ",{"fg":4,"bold":true}],["|",{"inverse":true}],["135 ",{"fg":3,"bold":true}],["  let g:calendar_weeknm = 2 \" WK 1                                                                              ",{}],["|",{"inverse":true}],[" 23 ",{"fg":3,"bold":true}],["  .esd_auth       ",{}]]},"cursor":{"x":48,"y":22}}],[0.016356,{"lines":{"0":[["\" Press <F1> for hel",{"fg":6,"bold":true}],["|",{"inverse":true}],["114 ",{"fg":3,"bold":true}],["  let g:calendar_mruler = 'Jan,Feb,Mar,Apr,May,Jun,Jul,Aug,Sep,Oct,Nov,Dec'                                     ",{}],["|",{"inverse":true}],["  1 ",{"fg":3,"bold":true}],["\" Press ? for help",{"fg":5,"bold":true}]],"1":[["                    ",{}],["|",{"inverse":true}],["115 ",{"fg":3,"bold":true}],["<                                                                                                               ",{}],["|",{"inverse":true}],["  2 ",{"fg":3,"bold":true}],["                  ",{}]],"2":[["▼",{"fg":3,"bold":true}],[" First",{"fg":5,"bold":true}],[" : ",{}],["struct",{"fg":2,"bold":true}],["    ",{}],["|",{"inverse":true}],["116 ",{"fg":3,"bold":true}],["                                                                                                                ",{}],["|",{"inverse":true}],["  3 ",{"fg":3,"bold":true}],[".. (up a dir)",{"fg":6,"bold":true}],["     ",{}]],"3":[["    [prototypes]",{"fg":6,"bold":true}],["    ",{}],["|",{"inverse":true}],["117 ",{"fg":3,"bold":true}],["                                                *g:calendar_wruler*                                             ",{}],["|",{"inverse":true}],["  4 /root/",{"fg":3,"bold":true}],["            ",{}]],"4":[["   ",{}],["+",{"fg":2,"bold":true}],["FirstRun(void)  ",{}],["|",{"inverse":true}],["118 ",{"fg":3,"bold":true}],["To change the week names for the calendar headings, set this variable.  The                                     ",{}],["|",{"inverse":true}],["  5 ",{"fg":3,"bold":true}],["▸ .asciinema/",{"fg":6,"bold":true}],["     ",{}]],"5":[["   ",{}],["+",{"fg":2,"bold":true}],["FirstRun2(void) ",{}],["|",{"inverse":true}],["119 ",{"fg":3,"bold":true}],["value is expected to be a space-separated list of seven values, starting with                                   ",{}],["|",{"inverse":true}],["  6 ",{"fg":3,"bold":true}],["▸ .cache/",{"fg":6,"bold":true}],["         ",{}]],"6":[["                    ",{}],["|",{"inverse":true}],["120 ",{"fg":3,"bold":true}],["Sunday: >                                                                                                       ",{}],["|",{"inverse":true}],["  7 ",{"fg":3,"bold":true}],["▸ .config/",{"fg":6,"bold":true}],["        ",{}]],"7":[["▼",{"fg":3,"bold":true}],[" Last",{"fg":5,"bold":true}],[" : ",{}],["struct",{"fg":2,"bold":true}],["     ",{}],["|",{"inverse":true}],["121 ",{"fg":3,"bold":true}],["  let g:calendar_wruler = 'Su Mo Tu We Th Fr Sa'                                                                ",{}],["|",{"inverse":true}],["  8 ",{"fg":3,"bold":true}],["▸ .dbus/",{"fg":6,"bold":true}],["          ",{}]],"8":[["    [functions]",{"fg":6,"bold":true}],["     ",{}],["|",{"inverse":true}],["122 ",{"fg":3,"bold":true}],["<                                                                                                               ",{}],["|",{"inverse":true}],["  9 ",{"fg":3,"bold":true}],["▸ .gnupg/",{"fg":6,"bold":true}],["         ",{}]],"9":[["   ",{}],["+",{"fg":2,"bold":true}],["FirstRun(void)  ",{}],["|",{"inverse":true}],["123 ",{"fg":3,"bold":true}],["                                                                                                                ",{}],["|",{"inverse":true}],[" 10 ",{"fg":3,"bold":true}],["▸ .kde/",{"fg":6,"bold":true}],["           ",{}]],"10":[["   ",{}],["+",{"fg":2,"bold":true}],["FirstRun2(void) ",{}],["|",{"inverse":true}],["124 ",{"fg":3,"bold":true}],["                                                *g:calendar_monday*                                             ",{}],["|",{"inverse":true}],[" 11 ",{"fg":3,"bold":true}],["▸ .local/",{"fg":6,"bold":true}],["         ",{}]],"11":[["   ",{}],["+",{"fg":2,"bold":true}],["~Last()         ",{}],["|",{"inverse":true}],["125 ",{"fg":3,"bold":true}],["To make the week start on Monday rather than Sunday, set this variable.  Note                                   ",{}],["|",{"inverse":true}],[" 12 ",{"fg":3,"bold":true}],["▸ .pki/",{"fg":6,"bold":true}],["           ",{}]],"12":[["   ",{}],["+",{"fg":2,"bold":true}],["SecondRun(void) ",{}],["|",{"inverse":true}],["126 ",{"fg":3,"bold":true}],["that the value of |g:calendar_wruler| is not affected by this; it should                                        ",{}],["|",{"inverse":true}],[" 13 ",{"fg":3,"bold":true}],["▸ .ssh/",{"fg":6,"bold":true}],["           ",{}]],"13":[["   ",{}],["+",{"fg":2,"bold":true}],["SecondRun2(void)",{}],["|",{"inverse":true}],["127 ",{"fg":3,"bold":true}],["always begin with Sunday: >                                                                                     ",{}],["|",{"inverse":true}],[" 14 ",{"fg":3,"bold":true}],["▸ .vim/",{"fg":6,"bold":true}],["           ",{}]],"14":[["                    ",{}],["|",{"inverse":true}],["128 ",{"fg":3,"bold":true}],["  let g:calendar_monday = 1                                                                                     ",{}],["|",{"inverse":true}],[" 15 ",{"fg":3,"bold":true}],["▸ diary/",{"fg":6,"bold":true}],["          ",{}]],"15":[["▼",{"fg":3,"bold":true}],[" Second",{"fg":5,"bold":true}],[" : ",{}],["struct",{"fg":2,"bold":true}],["   ",{}],["|",{"inverse":true}],["129 ",{"fg":3,"bold":true}],["<                                                                                                               ",{}],["|",{"inverse":true}],[" 16 ",{"fg":3,"bold":true}],["▸ temp/",{"fg":6,"bold":true}],["           ",{}]],"16":[["    [prototypes]",{"fg":6,"bold":true}],["    ",{}],["|",{"inverse":true}],["130 ",{"fg":3,"bold":true}],["                                                                                                                ",{}],["|",{"inverse":true}],[" 17 ",{"fg":3,"bold":true}],["  .bash_history   ",{}]],"17":[["   ",{}],["+",{"fg":2,"bold":true}],["SecondRun(void) ",{}],["|",{"inverse":true}],["131 ",{"fg":3,"bold":true}],["                                                *g:calendar_weeknm*                                             ",{}],["|",{"inverse":true}],[" 18 ",{"fg":3,"bold":true}],["  .bash_logout    ",{}]],"18":[["   ",{}],["+",{"fg":2,"bold":true}],["SecondRun2(void)",{}],["|",{"inverse":true}],["132 ",{"fg":3,"bold":true}],["To show the week number, set this variable.  There are four valid settings: >                                   ",{}],["|",{"inverse":true}],[" 19 ",{"fg":3,"bold":true}],["  .bash_profile   ",{"underline":true}]],"19":[["                    ",{}],["|",{"inverse":true}],["133 ",{"fg":3,"bold":true}],["  let g:calendar_weeknm = 1 \" WK01                                                                              ",{}],["|",{"inverse":true}],[" 20 ",{"fg":3,"bold":true}],["  .bashrc         ",{}]],"20":[["▼",{"fg":3,"bold":true}],[" ",{}],["functions",{"fg":6,"bold":true}],["         ",{}],["|",{"inverse":true}],["134 ",{"fg":3,"bold":true}],["  let g:calendar_weeknm = 2 \" WK 1                                                                              ",{}],["|",{"inverse":true}],[" 21 ",{"fg":3,"bold":true}],["  .cshrc          ",{}]],"21":[["    main(int argc, c",{"underline":true}],["|",{"inverse":true}],["135 ",{"fg":3,"bold":true}],["  let g:calendar_weeknm = 3 \" KW01                                                                              ",{}],["|",{"inverse":true}],[" 22 ",{"fg":3,"bold":true}],["  .dmrc           ",{}]],"22":[["~                   ",{"fg":4,"bold":true}],["|",{"inverse":true}],["135 ",{"fg":3,"bold":true}],["  let g:calendar_weeknm = 3 \" KW01                                                                              ",{}],["|",{"inverse":true}],[" 23 ",{"fg":3,"bold":true}],["  .esd_auth       ",{}]],"23":[["~                   ",{"fg":4,"bold":true}],["|",{"inverse":true}],["136 ",{"fg":3,"bold":true}],["  let g:calendar_weeknm = 4 \" KW 1                                                                              ",{}],["|",{"inverse":true}],[" 24 ",{"fg":3,"bold":true}],["  .gtkrc-2.0      ",{}]],"24":[["~                   ",{"fg":4,"bold":true}],["|",{"inverse":true}],["137 ",{"fg":3,"bold":true}],["  let g:calendar_weeknm = 5 \" 1                                                                                 ",{}],["|",{"inverse":true}],[" 25 ",{"fg":3,"bold":true}],["  .gtkrc-2.0-kde4 ",{}]],"25":[["~                   ",{"fg":4,"bold":true}],["|",{"inverse":true}],["138 ",{"fg":3,"bold":true}],["<                                                                                                               ",{}],["|",{"inverse":true}],[" 26 ",{"fg":3,"bold":true}],["  .lesshst        ",{}]],"26":[["~                   ",{"fg":4,"bold":true}],["|",{"inverse":true}],["139 ",{"fg":3,"bold":true}],["                                                                                                                ",{}],["|",{"inverse":true}],[" 27 ",{"fg":3,"bold":true}],["  .tcshrc         ",{}]],"27":[["~                   ",{"fg":4,"bold":true}],["|",{"inverse":true}],["140 ",{"fg":3,"bold":true}],["                                                *g:calendar_datetime*                                           ",{}],["|",{"inverse":true}],[" 28 ",{"fg":3,"bold":true}],["  .viminfo        ",{}]],"28":[["~                   ",{"fg":4,"bold":true}],["|",{"inverse":true}],["141 ",{"fg":3,"bold":true}],["To control display of the current date and time, set this variable.                                             ",{}],["|",{"inverse":true}],[" 29 ",{"fg":3,"bold":true}],["  .vimrc          ",{}]],"29":[["~                   ",{"fg":4,"bold":true}],["|",{"inverse":true}],["142 ",{"fg":3,"bold":true}],["Acceptable values are 'title', 'statusline', and '': >                                                          ",{}],["|",{"inverse":true}],[" 30 ",{"fg":3,"bold":true}],["  .xsession-errors",{}]],"30":[["~                   ",{"fg":4,"bold":true}],["|",{"inverse":true}],["143 ",{"fg":3,"bold":true}],["  let g:calendar_datetime = 'title'                                                                             ",{}],["|",{"inverse":true}],[" 31 ",{"fg":3,"bold":true}],["  anaconda-ks.cfg ",{}]],"31":[["~                   ",{"fg":4,"bold":true}],["|",{"inverse":true}],["144 ",{"fg":3,"bold":true}],["<                                                                                                               ",{}],["|",{"inverse":true}],[" 32 ",{"fg":3,"bold":true}],["  initial-setup-ks",{}]],"32":[["~                   ",{"fg":4,"bold":true}],["|",{"inverse":true}],["145 ",{"fg":3,"bold":true}],["                                                *g:calendar_filetype*                                           ",{}],["|",{"inverse":true}],[" 33 ",{"fg":3,"bold":true}],["  test.c          ",{}]],"33":[["~                   ",{"fg":4,"bold":true}],["|",{"inverse":true}],["146 ",{"fg":3,"bold":true}],["To control the filetype of calendar entries, set this variable. It defaults to                                  ",{}],["|",{"inverse":true}],[" 34 ",{"fg":3,"bold":true}],["  test.cpp        ",{}]],"34":[["~                   ",{"fg":4,"bold":true}],["|",{"inverse":true}],["147 ",{"fg":3,"bold":true}],["'markdown'. Acceptable values are values that are acceptable for |filetype|                                     ",{}],["|",{"inverse":true}],[" 35 ",{"fg":3,"bold":true}],["  .test.cpp.swp   ",{}]],"35":[["~                   ",{"fg":4,"bold":true}],["|",{"inverse":true}],["148 ",{"fg":3,"bold":true}],["like e.g. 'markdown' or 'pandoc':                                                                               ",{}],["|",{"inverse":true}],["~                     ",{"fg":4,"bold":true}]],"36":[["~                   ",{"fg":4,"bold":true}],["|",{"inverse":true}],["149 ",{"fg":3,"bold":true}],["  let g:calendar_filetype = 'pandoc'                                                                            ",{}],["|",{"inverse":true}],["~                     ",{"fg":4,"bold":true}]],"37":[["~                   ",{"fg":4,"bold":true}],["|",{"inverse":true}],["150 ",{"fg":3,"bold":true}],["                                                                                                                ",{}],["|",{"inverse":true}],["~                     ",{"fg":4,"bold":true}]],"38":[["~                   ",{"fg":4,"bold":true}],["|",{"inverse":true}],["151 ",{"fg":3,"bold":true}],["                                                                                                                ",{}],["|",{"inverse":true}],["~                     ",{"fg":4,"bold":true}]],"39":[["~                   ",{"fg":4,"bold":true}],["|",{"inverse":true}],["152 ",{"fg":3,"bold":true}],["HOOKS                                           *calendar-hooks*                                                ",{}],["|",{"inverse":true}],["~                     ",{"fg":4,"bold":true}]],"40":[["~                   ",{"fg":4,"bold":true}],["|",{"inverse":true}],["153 ",{"fg":3,"bold":true}],["                                                                                                                ",{}],["|",{"inverse":true}],["~                     ",{"fg":4,"bold":true}]],"41":[["~                   ",{"fg":4,"bold":true}],["|",{"inverse":true}],["154 ",{"fg":3,"bold":true}],["calendar.vim provides a number of hooks which allow you to run custom code on                                   ",{}],["|",{"inverse":true}],["~                     ",{"fg":4,"bold":true}]],"42":[["~                   ",{"fg":4,"bold":true}],["|",{"inverse":true}],["155 ",{"fg":3,"bold":true}],["certain events.  These are documented below.                                                                    ",{}],["|",{"inverse":true}],["~                     ",{"fg":4,"bold":true}]],"43":[["~                   ",{"fg":4,"bold":true}],["|",{"inverse":true}],["156 ",{"fg":3,"bold":true}],["                                                                                                                ",{}],["|",{"inverse":true}],["~                     ",{"fg":4,"bold":true}]],"44":[["~                   ",{"fg":4,"bold":true}],["|",{"inverse":true}],["157 ",{"fg":3,"bold":true}],["                                                *calendar_action*                                               ",{}],["|",{"inverse":true}],["~                     ",{"fg":4,"bold":true}]],"45":[["~                   ",{"fg":4,"bold":true}],["|",{"inverse":true}],["158 ",{"fg":3,"bold":true}],["The function declared in the calendar_action variable is run when the user                                      ",{"underline":true}],["|",{"inverse":true}],["~                     ",{"fg":4,"bold":true}]],"46":[["[Name] test.cpp      ",{"inverse":true}],[" NORMAL ",{"bold":true}],[" ",{}],["calendar.txt ",{"bold":true}],["                                                        unix │ utf-8 │ text │  71% ",{}],[" LN 158",{"bold":true}],[":1  ",{}],[" ",{"bold":true,"inverse":true}],[" ~/…/calendar-vim/doc>",{"bold":true}]]},"cursor":{"x":21}}],[0.002947,{"lines":{"22":[["~                   ",{"fg":4,"bold":true}],["|",{"inverse":true}],["136 ",{"fg":3,"bold":true}],["  let g:calendar_weeknm = 4 \" KW 1                                                                              ",{}],["|",{"inverse":true}],[" 23 ",{"fg":3,"bold":true}],["  .esd_auth       ",{}]],"23":[["~                   ",{"fg":4,"bold":true}],["|",{"inverse":true}],["137 ",{"fg":3,"bold":true}],["  let g:calendar_weeknm = 5 \" 1                                                                                 ",{}],["|",{"inverse":true}],[" 24 ",{"fg":3,"bold":true}],["  .gtkrc-2.0      ",{}]],"24":[["~                   ",{"fg":4,"bold":true}],["|",{"inverse":true}],["138 ",{"fg":3,"bold":true}],["<                                                                                                               ",{}],["|",{"inverse":true}],[" 25 ",{"fg":3,"bold":true}],["  .gtkrc-2.0-kde4 ",{}]],"25":[["~                   ",{"fg":4,"bold":true}],["|",{"inverse":true}],["139 ",{"fg":3,"bold":true}],["                                                                                                                ",{}],["|",{"inverse":true}],[" 26 ",{"fg":3,"bold":true}],["  .lesshst        ",{}]],"26":[["~                   ",{"fg":4,"bold":true}],["|",{"inverse":true}],["140 ",{"fg":3,"bold":true}],["                                                *g:calendar_datetime*                                           ",{}],["|",{"inverse":true}],[" 27 ",{"fg":3,"bold":true}],["  .tcshrc         ",{}]],"27":[["~                   ",{"fg":4,"bold":true}],["|",{"inverse":true}],["141 ",{"fg":3,"bold":true}],["To control display of the current date and time, set this variable.                                             ",{}],["|",{"inverse":true}],[" 28 ",{"fg":3,"bold":true}],["  .viminfo        ",{}]],"28":[["~                   ",{"fg":4,"bold":true}],["|",{"inverse":true}],["142 ",{"fg":3,"bold":true}],["Acceptable values are 'title', 'statusline', and '': >                                                          ",{}],["|",{"inverse":true}],[" 29 ",{"fg":3,"bold":true}],["  .vimrc          ",{}]],"29":[["~                   ",{"fg":4,"bold":true}],["|",{"inverse":true}],["143 ",{"fg":3,"bold":true}],["  let g:calendar_datetime = 'title'                                                                             ",{}],["|",{"inverse":true}],[" 30 ",{"fg":3,"bold":true}],["  .xsession-errors",{}]],"30":[["~                   ",{"fg":4,"bold":true}],["|",{"inverse":true}],["144 ",{"fg":3,"bold":true}],["<                                                                                                               ",{}],["|",{"inverse":true}],[" 31 ",{"fg":3,"bold":true}],["  anaconda-ks.cfg ",{}]],"31":[["~                   ",{"fg":4,"bold":true}],["|",{"inverse":true}],["145 ",{"fg":3,"bold":true}],["                                                *g:calendar_filetype*                                           ",{}],["|",{"inverse":true}],[" 32 ",{"fg":3,"bold":true}],["  initial-setup-ks",{}]],"32":[["~                   ",{"fg":4,"bold":true}],["|",{"inverse":true}],["146 ",{"fg":3,"bold":true}],["To control the filetype of calendar entries, set this variable. It defaults to                                  ",{}],["|",{"inverse":true}],[" 33 ",{"fg":3,"bold":true}],["  test.c          ",{}]],"33":[["~                   ",{"fg":4,"bold":true}],["|",{"inverse":true}],["147 ",{"fg":3,"bold":true}],["'markdown'. Acceptable values are values that are acceptable for |filetype|                                     ",{}],["|",{"inverse":true}],[" 34 ",{"fg":3,"bold":true}],["  test.cpp        ",{}]],"34":[["~                   ",{"fg":4,"bold":true}],["|",{"inverse":true}],["148 ",{"fg":3,"bold":true}],["like e.g. 'markdown' or 'pandoc':                                                                               ",{}],["|",{"inverse":true}],[" 35 ",{"fg":3,"bold":true}],["  .test.cpp.swp   ",{}]],"35":[["~                   ",{"fg":4,"bold":true}],["|",{"inverse":true}],["149 ",{"fg":3,"bold":true}],["  let g:calendar_filetype = 'pandoc'                                                                            ",{}],["|",{"inverse":true}],["~                     ",{"fg":4,"bold":true}]],"36":[["~                   ",{"fg":4,"bold":true}],["|",{"inverse":true}],["150 ",{"fg":3,"bold":true}],["                                                                                                                ",{}],["|",{"inverse":true}],["~                     ",{"fg":4,"bold":true}]],"37":[["~                   ",{"fg":4,"bold":true}],["|",{"inverse":true}],["151 ",{"fg":3,"bold":true}],["                                                                                                                ",{}],["|",{"inverse":true}],["~                     ",{"fg":4,"bold":true}]],"38":[["~                   ",{"fg":4,"bold":true}],["|",{"inverse":true}],["152 ",{"fg":3,"bold":true}],["HOOKS                                           *calendar-hooks*                                                ",{}],["|",{"inverse":true}],["~                     ",{"fg":4,"bold":true}]],"39":[["~                   ",{"fg":4,"bold":true}],["|",{"inverse":true}],["153 ",{"fg":3,"bold":true}],["                                                                                                                ",{}],["|",{"inverse":true}],["~                     ",{"fg":4,"bold":true}]],"40":[["~                   ",{"fg":4,"bold":true}],["|",{"inverse":true}],["154 ",{"fg":3,"bold":true}],["calendar.vim provides a number of hooks which allow you to run custom code on                                   ",{}],["|",{"inverse":true}],["~                     ",{"fg":4,"bold":true}]],"41":[["~                   ",{"fg":4,"bold":true}],["|",{"inverse":true}],["155 ",{"fg":3,"bold":true}],["certain events.  These are documented below.                                                                    ",{}],["|",{"inverse":true}],["~                     ",{"fg":4,"bold":true}]],"42":[["~                   ",{"fg":4,"bold":true}],["|",{"inverse":true}],["156 ",{"fg":3,"bold":true}],["                                                                                                                ",{}],["|",{"inverse":true}],["~                     ",{"fg":4,"bold":true}]],"43":[["~                   ",{"fg":4,"bold":true}],["|",{"inverse":true}],["157 ",{"fg":3,"bold":true}],["                                                *calendar_action*                                               ",{}],["|",{"inverse":true}],["~                     ",{"fg":4,"bold":true}]],"44":[["~                   ",{"fg":4,"bold":true}],["|",{"inverse":true}],["158 ",{"fg":3,"bold":true}],["The function declared in the calendar_action variable is run when the user                                      ",{}],["|",{"inverse":true}],["~                     ",{"fg":4,"bold":true}]],"45":[["~                   ",{"fg":4,"bold":true}],["|",{"inverse":true}],["159 ",{"fg":3,"bold":true}],["presses enter on a date.  Implement and set your function as follows: >                                         ",{"underline":true}],["|",{"inverse":true}],["~                     ",{"fg":4,"bold":true}]],"46":[["[Name] test.cpp      ",{"inverse":true}],[" NORMAL ",{"bold":true}],[" ",{}],["calendar.txt ",{"bold":true}],["                                                        unix │ utf-8 │ text │  72% ",{}],[" LN 159",{"bold":true}],[":1  ",{}],[" ",{"bold":true,"inverse":true}],[" ~/…/calendar-vim/doc>",{"bold":true}]]},"cursor":{"x":25,"y":45,"visible":true}}],[0.016943,{"lines":{"0":[["\" Press <F1> for hel",{"fg":6,"bold":true}],["|",{"inverse":true}],["115 ",{"fg":3,"bold":true}],["<                                                                                                               ",{}],["|",{"inverse":true}],["  1 ",{"fg":3,"bold":true}],["\" Press ? for help",{"fg":5,"bold":true}]],"1":[["                    ",{}],["|",{"inverse":true}],["116 ",{"fg":3,"bold":true}],["                                                                                                                ",{}],["|",{"inverse":true}],["  2 ",{"fg":3,"bold":true}],["                  ",{}]],"2":[["▼",{"fg":3,"bold":true}],[" First",{"fg":5,"bold":true}],[" : ",{}],["struct",{"fg":2,"bold":true}],["    ",{}],["|",{"inverse":true}],["117 ",{"fg":3,"bold":true}],["                                                *g:calendar_wruler*                                             ",{}],["|",{"inverse":true}],["  3 ",{"fg":3,"bold":true}],[".. (up a dir)",{"fg":6,"bold":true}],["     ",{}]],"3":[["    [prototypes]",{"fg":6,"bold":true}],["    ",{}],["|",{"inverse":true}],["118 ",{"fg":3,"bold":true}],["To change the week names for the calendar headings, set this variable.  The                                     ",{}],["|",{"inverse":true}],["  4 /root/",{"fg":3,"bold":true}],["            ",{}]],"4":[["   ",{}],["+",{"fg":2,"bold":true}],["FirstRun(void)  ",{}],["|",{"inverse":true}],["119 ",{"fg":3,"bold":true}],["value is expected to be a space-separated list of seven values, starting with                                   ",{}],["|",{"inverse":true}],["  5 ",{"fg":3,"bold":true}],["▸ .asciinema/",{"fg":6,"bold":true}],["     ",{}]],"5":[["   ",{}],["+",{"fg":2,"bold":true}],["FirstRun2(void) ",{}],["|",{"inverse":true}],["120 ",{"fg":3,"bold":true}],["Sunday: >                                                                                                       ",{}],["|",{"inverse":true}],["  6 ",{"fg":3,"bold":true}],["▸ .cache/",{"fg":6,"bold":true}],["         ",{}]],"6":[["                    ",{}],["|",{"inverse":true}],["121 ",{"fg":3,"bold":true}],["  let g:calendar_wruler = 'Su Mo Tu We Th Fr Sa'                                                                ",{}],["|",{"inverse":true}],["  7 ",{"fg":3,"bold":true}],["▸ .config/",{"fg":6,"bold":true}],["        ",{}]],"7":[["▼",{"fg":3,"bold":true}],[" Last",{"fg":5,"bold":true}],[" : ",{}],["struct",{"fg":2,"bold":true}],["     ",{}],["|",{"inverse":true}],["122 ",{"fg":3,"bold":true}],["  let g:calendar_wruler = 'Su Mo Tu We Th Fr Sa'                                                                ",{}],["|",{"inverse":true}],["  8 ",{"fg":3,"bold":true}],["▸ .dbus/",{"fg":6,"bold":true}],["          ",{}]]},"cursor":{"y":7,"visible":false}}],[0.001625,{"lines":{"7":[["▼",{"fg":3,"bold":true}],[" Last",{"fg":5,"bold":true}],[" : ",{}],["struct",{"fg":2,"bold":true}],["     ",{}],["|",{"inverse":true}],["122 ",{"fg":3,"bold":true}],["<                                                                                                               ",{}],["|",{"inverse":true}],["  8 ",{"fg":3,"bold":true}],["▸ .dbus/",{"fg":6,"bold":true}],["          ",{}]],"8":[["    [functions]",{"fg":6,"bold":true}],["     ",{}],["|",{"inverse":true}],["123 ",{"fg":3,"bold":true}],["                                                                                                                ",{}],["|",{"inverse":true}],["  9 ",{"fg":3,"bold":true}],["▸ .gnupg/",{"fg":6,"bold":true}],["         ",{}]],"9":[["   ",{}],["+",{"fg":2,"bold":true}],["FirstRun(void)  ",{}],["|",{"inverse":true}],["124 ",{"fg":3,"bold":true}],["                                                *g:calendar_monday*                                             ",{}],["|",{"inverse":true}],[" 10 ",{"fg":3,"bold":true}],["▸ .kde/",{"fg":6,"bold":true}],["           ",{}]],"10":[["   ",{}],["+",{"fg":2,"bold":true}],["FirstRun2(void) ",{}],["|",{"inverse":true}],["125 ",{"fg":3,"bold":true}],["To make the week start on Monday rather than Sunday, set this variable.  Note                                   ",{}],["|",{"inverse":true}],[" 11 ",{"fg":3,"bold":true}],["▸ .local/",{"fg":6,"bold":true}],["         ",{}]],"11":[["   ",{}],["+",{"fg":2,"bold":true}],["~Last()         ",{}],["|",{"inverse":true}],["126 ",{"fg":3,"bold":true}],["that the value of |g:calendar_wruler| is not affected by this; it should                                        ",{}],["|",{"inverse":true}],[" 12 ",{"fg":3,"bold":true}],["▸ .pki/",{"fg":6,"bold":true}],["           ",{}]],"12":[["   ",{}],["+",{"fg":2,"bold":true}],["SecondRun(void) ",{}],["|",{"inverse":true}],["127 ",{"fg":3,"bold":true}],["always begin with Sunday: >                                                                                     ",{}],["|",{"inverse":true}],[" 13 ",{"fg":3,"bold":true}],["▸ .ssh/",{"fg":6,"bold":true}],["           ",{}]],"13":[["   ",{}],["+",{"fg":2,"bold":true}],["SecondRun2(void)",{}],["|",{"inverse":true}],["128 ",{"fg":3,"bold":true}],["  let g:calendar_monday = 1                                                                                     ",{}],["|",{"inverse":true}],[" 14 ",{"fg":3,"bold":true}],["▸ .vim/",{"fg":6,"bold":true}],["           ",{}]],"14":[["                    ",{}],["|",{"inverse":true}],["129 ",{"fg":3,"bold":true}],["<                                                                                                               ",{}],["|",{"inverse":true}],[" 15 ",{"fg":3,"bold":true}],["▸ diary/",{"fg":6,"bold":true}],["          ",{}]],"15":[["▼",{"fg":3,"bold":true}],[" Second",{"fg":5,"bold":true}],[" : ",{}],["struct",{"fg":2,"bold":true}],["   ",{}],["|",{"inverse":true}],["130 ",{"fg":3,"bold":true}],["                                                                                                                ",{}],["|",{"inverse":true}],[" 16 ",{"fg":3,"bold":true}],["▸ temp/",{"fg":6,"bold":true}],["           ",{}]],"16":[["    [prototypes]",{"fg":6,"bold":true}],["    ",{}],["|",{"inverse":true}],["131 ",{"fg":3,"bold":true}],["                                                *g:calendar_weeknm*                                             ",{}],["|",{"inverse":true}],[" 17 ",{"fg":3,"bold":true}],["  .bash_history   ",{}]],"17":[["   ",{}],["+",{"fg":2,"bold":true}],["SecondRun(void) ",{}],["|",{"inverse":true}],["132 ",{"fg":3,"bold":true}],["To show the week number, set this variable.  There are four valid settings: >                                   ",{}],["|",{"inverse":true}],[" 18 ",{"fg":3,"bold":true}],["  .bash_logout    ",{}]],"18":[["   ",{}],["+",{"fg":2,"bold":true}],["SecondRun2(void)",{}],["|",{"inverse":true}],["133 ",{"fg":3,"bold":true}],["  let g:calendar_weeknm = 1 \" WK01                                                                              ",{}],["|",{"inverse":true}],[" 19 ",{"fg":3,"bold":true}],["  .bash_profile   ",{"underline":true}]],"19":[["                    ",{}],["|",{"inverse":true}],["134 ",{"fg":3,"bold":true}],["  let g:calendar_weeknm = 2 \" WK 1                                                                              ",{}],["|",{"inverse":true}],[" 20 ",{"fg":3,"bold":true}],["  .bashrc         ",{}]],"20":[["▼",{"fg":3,"bold":true}],[" ",{}],["functions",{"fg":6,"bold":true}],["         ",{}],["|",{"inverse":true}],["135 ",{"fg":3,"bold":true}],["  let g:calendar_weeknm = 3 \" KW01                                                                              ",{}],["|",{"inverse":true}],[" 21 ",{"fg":3,"bold":true}],["  .cshrc          ",{}]],"21":[["    main(int argc, c",{"underline":true}],["|",{"inverse":true}],["136 ",{"fg":3,"bold":true}],["  let g:calendar_weeknm = 4 \" KW 1                                                                              ",{}],["|",{"inverse":true}],[" 22 ",{"fg":3,"bold":true}],["  .dmrc           ",{}]]},"cursor":{"x":21,"y":22}}],[0.019739,{"lines":{"22":[["~                   ",{"fg":4,"bold":true}],["|",{"inverse":true}],["137 ",{"fg":3,"bold":true}],["  let g:calendar_weeknm = 5 \" 1                                                                                 ",{}],["|",{"inverse":true}],[" 23 ",{"fg":3,"bold":true}],["  .esd_auth       ",{}]],"23":[["~                   ",{"fg":4,"bold":true}],["|",{"inverse":true}],["138 ",{"fg":3,"bold":true}],["<                                                                                                               ",{}],["|",{"inverse":true}],[" 24 ",{"fg":3,"bold":true}],["  .gtkrc-2.0      ",{}]],"24":[["~                   ",{"fg":4,"bold":true}],["|",{"inverse":true}],["139 ",{"fg":3,"bold":true}],["                                                                                                                ",{}],["|",{"inverse":true}],[" 25 ",{"fg":3,"bold":true}],["  .gtkrc-2.0-kde4 ",{}]],"25":[["~                   ",{"fg":4,"bold":true}],["|",{"inverse":true}],["140 ",{"fg":3,"bold":true}],["                                                *g:calendar_datetime*                                           ",{}],["|",{"inverse":true}],[" 26 ",{"fg":3,"bold":true}],["  .lesshst        ",{}]],"26":[["~                   ",{"fg":4,"bold":true}],["|",{"inverse":true}],["141 ",{"fg":3,"bold":true}],["To control display of the current date and time, set this variable.                                             ",{}],["|",{"inverse":true}],[" 27 ",{"fg":3,"bold":true}],["  .tcshrc         ",{}]],"27":[["~                   ",{"fg":4,"bold":true}],["|",{"inverse":true}],["142 ",{"fg":3,"bold":true}],["Acceptable values are 'title', 'statusline', and '': >                                                          ",{}],["|",{"inverse":true}],[" 28 ",{"fg":3,"bold":true}],["  .viminfo        ",{}]],"28":[["~                   ",{"fg":4,"bold":true}],["|",{"inverse":true}],["143 ",{"fg":3,"bold":true}],["  let g:calendar_datetime = 'title'                                                                             ",{}],["|",{"inverse":true}],[" 29 ",{"fg":3,"bold":true}],["  .vimrc          ",{}]],"29":[["~                   ",{"fg":4,"bold":true}],["|",{"inverse":true}],["144 ",{"fg":3,"bold":true}],["<                                                                                                               ",{}],["|",{"inverse":true}],[" 30 ",{"fg":3,"bold":true}],["  .xsession-errors",{}]]},"cursor":{"x":81,"y":29}}],[0.014517,{"lines":{"0":[["\" Press <F1> for hel",{"fg":6,"bold":true}],["|",{"inverse":true}],["116 ",{"fg":3,"bold":true}],["                                                                                                                ",{}],["|",{"inverse":true}],["  1 ",{"fg":3,"bold":true}],["\" Press ? for help",{"fg":5,"bold":true}]],"1":[["                    ",{}],["|",{"inverse":true}],["117 ",{"fg":3,"bold":true}],["                                                *g:calendar_wruler*                                             ",{}],["|",{"inverse":true}],["  2 ",{"fg":3,"bold":true}],["                  ",{}]],"2":[["▼",{"fg":3,"bold":true}],[" First",{"fg":5,"bold":true}],[" : ",{}],["struct",{"fg":2,"bold":true}],["    ",{}],["|",{"inverse":true}],["118 ",{"fg":3,"bold":true}],["To change the week names for the calendar headings, set this variable.  The                                     ",{}],["|",{"inverse":true}],["  3 ",{"fg":3,"bold":true}],[".. (up a dir)",{"fg":6,"bold":true}],["     ",{}]],"3":[["    [prototypes]",{"fg":6,"bold":true}],["    ",{}],["|",{"inverse":true}],["119 ",{"fg":3,"bold":true}],["value is expected to be a space-separated list of seven values, starting with                                   ",{}],["|",{"inverse":true}],["  4 /root/",{"fg":3,"bold":true}],["            ",{}]],"4":[["   ",{}],["+",{"fg":2,"bold":true}],["FirstRun(void)  ",{}],["|",{"inverse":true}],["120 ",{"fg":3,"bold":true}],["Sunday: >                                                                                                       ",{}],["|",{"inverse":true}],["  5 ",{"fg":3,"bold":true}],["▸ .asciinema/",{"fg":6,"bold":true}],["     ",{}]],"5":[["   ",{}],["+",{"fg":2,"bold":true}],["FirstRun2(void) ",{}],["|",{"inverse":true}],["121 ",{"fg":3,"bold":true}],["  let g:calendar_wruler = 'Su Mo Tu We Th Fr Sa'                                                                ",{}],["|",{"inverse":true}],["  6 ",{"fg":3,"bold":true}],["▸ .cache/",{"fg":6,"bold":true}],["         ",{}]],"6":[["                    ",{}],["|",{"inverse":true}],["122 ",{"fg":3,"bold":true}],["<                                                                                                               ",{}],["|",{"inverse":true}],["  7 ",{"fg":3,"bold":true}],["▸ .config/",{"fg":6,"bold":true}],["        ",{}]],"7":[["▼",{"fg":3,"bold":true}],[" Last",{"fg":5,"bold":true}],[" : ",{}],["struct",{"fg":2,"bold":true}],["     ",{}],["|",{"inverse":true}],["123 ",{"fg":3,"bold":true}],["                                                                                                                ",{}],["|",{"inverse":true}],["  8 ",{"fg":3,"bold":true}],["▸ .dbus/",{"fg":6,"bold":true}],["          ",{}]],"8":[["    [functions]",{"fg":6,"bold":true}],["     ",{}],["|",{"inverse":true}],["124 ",{"fg":3,"bold":true}],["                                                *g:calendar_monday*                                             ",{}],["|",{"inverse":true}],["  9 ",{"fg":3,"bold":true}],["▸ .gnupg/",{"fg":6,"bold":true}],["         ",{}]],"9":[["   ",{}],["+",{"fg":2,"bold":true}],["FirstRun(void)  ",{}],["|",{"inverse":true}],["125 ",{"fg":3,"bold":true}],["To make the week start on Monday rather than Sunday, set this variable.  Note                                   ",{}],["|",{"inverse":true}],[" 10 ",{"fg":3,"bold":true}],["▸ .kde/",{"fg":6,"bold":true}],["           ",{}]],"10":[["   ",{}],["+",{"fg":2,"bold":true}],["FirstRun2(void) ",{}],["|",{"inverse":true}],["126 ",{"fg":3,"bold":true}],["that the value of |g:calendar_wruler| is not affected by this; it should                                        ",{}],["|",{"inverse":true}],[" 11 ",{"fg":3,"bold":true}],["▸ .local/",{"fg":6,"bold":true}],["         ",{}]],"11":[["   ",{}],["+",{"fg":2,"bold":true}],["~Last()         ",{}],["|",{"inverse":true}],["127 ",{"fg":3,"bold":true}],["always begin with Sunday: >                                                                                     ",{}],["|",{"inverse":true}],[" 12 ",{"fg":3,"bold":true}],["▸ .pki/",{"fg":6,"bold":true}],["           ",{}]],"12":[["   ",{}],["+",{"fg":2,"bold":true}],["SecondRun(void) ",{}],["|",{"inverse":true}],["128 ",{"fg":3,"bold":true}],["  let g:calendar_monday = 1                                                                                     ",{}],["|",{"inverse":true}],[" 13 ",{"fg":3,"bold":true}],["▸ .ssh/",{"fg":6,"bold":true}],["           ",{}]],"13":[["   ",{}],["+",{"fg":2,"bold":true}],["SecondRun2(void)",{}],["|",{"inverse":true}],["129 ",{"fg":3,"bold":true}],["<                                                                                                               ",{}],["|",{"inverse":true}],[" 14 ",{"fg":3,"bold":true}],["▸ .vim/",{"fg":6,"bold":true}],["           ",{}]],"14":[["                    ",{}],["|",{"inverse":true}],["130 ",{"fg":3,"bold":true}],["                                                                                                                ",{}],["|",{"inverse":true}],[" 15 ",{"fg":3,"bold":true}],["▸ diary/",{"fg":6,"bold":true}],["          ",{}]],"15":[["▼",{"fg":3,"bold":true}],[" Second",{"fg":5,"bold":true}],[" : ",{}],["struct",{"fg":2,"bold":true}],["   ",{}],["|",{"inverse":true}],["131 ",{"fg":3,"bold":true}],["                                                *g:calendar_weeknm*                                             ",{}],["|",{"inverse":true}],[" 16 ",{"fg":3,"bold":true}],["▸ temp/",{"fg":6,"bold":true}],["           ",{}]],"16":[["    [prototypes]",{"fg":6,"bold":true}],["    ",{}],["|",{"inverse":true}],["132 ",{"fg":3,"bold":true}],["To show the week number, set this variable.  There are four valid settings: >                                   ",{}],["|",{"inverse":true}],[" 17 ",{"fg":3,"bold":true}],["  .bash_history   ",{}]],"17":[["   ",{}],["+",{"fg":2,"bold":true}],["SecondRun(void) ",{}],["|",{"inverse":true}],["133 ",{"fg":3,"bold":true}],["  let g:calendar_weeknm = 1 \" WK01                                                                              ",{}],["|",{"inverse":true}],[" 18 ",{"fg":3,"bold":true}],["  .bash_logout    ",{}]],"18":[["   ",{}],["+",{"fg":2,"bold":true}],["SecondRun2(void)",{}],["|",{"inverse":true}],["134 ",{"fg":3,"bold":true}],["  let g:calendar_weeknm = 2 \" WK 1                                                                              ",{}],["|",{"inverse":true}],[" 19 ",{"fg":3,"bold":true}],["  .bash_profile   ",{"underline":true}]],"19":[["                    ",{}],["|",{"inverse":true}],["135 ",{"fg":3,"bold":true}],["  let g:calendar_weeknm = 3 \" KW01                                                                              ",{}],["|",{"inverse":true}],[" 20 ",{"fg":3,"bold":true}],["  .bashrc         ",{}]],"20":[["▼",{"fg":3,"bold":true}],[" ",{}],["functions",{"fg":6,"bold":true}],["         ",{}],["|",{"inverse":true}],["136 ",{"fg":3,"bold":true}],["  let g:calendar_weeknm = 4 \" KW 1                                                                              ",{}],["|",{"inverse":true}],[" 21 ",{"fg":3,"bold":true}],["  .cshrc          ",{}]],"21":[["    main(int argc, c",{"underline":true}],["|",{"inverse":true}],["137 ",{"fg":3,"bold":true}],["  let g:calendar_weeknm = 5 \" 1                                                                                 ",{}],["|",{"inverse":true}],[" 22 ",{"fg":3,"bold":true}],["  .dmrc           ",{}]],"22":[["~                   ",{"fg":4,"bold":true}],["|",{"inverse":true}],["138 ",{"fg":3,"bold":true}],["<                                                                                                               ",{}],["|",{"inverse":true}],[" 23 ",{"fg":3,"bold":true}],["  .esd_auth       ",{}]],"23":[["~                   ",{"fg":4,"bold":true}],["|",{"inverse":true}],["139 ",{"fg":3,"bold":true}],["                                                                                                                ",{}],["|",{"inverse":true}],[" 24 ",{"fg":3,"bold":true}],["  .gtkrc-2.0      ",{}]],"24":[["~                   ",{"fg":4,"bold":true}],["|",{"inverse":true}],["140 ",{"fg":3,"bold":true}],["                                                *g:calendar_datetime*                                           ",{}],["|",{"inverse":true}],[" 25 ",{"fg":3,"bold":true}],["  .gtkrc-2.0-kde4 ",{}]],"25":[["~                   ",{"fg":4,"bold":true}],["|",{"inverse":true}],["141 ",{"fg":3,"bold":true}],["To control display of the current date and time, set this variable.                                             ",{}],["|",{"inverse":true}],[" 26 ",{"fg":3,"bold":true}],["  .lesshst        ",{}]],"26":[["~                   ",{"fg":4,"bold":true}],["|",{"inverse":true}],["142 ",{"fg":3,"bold":true}],["Acceptable values are 'title', 'statusline', and '': >                                                          ",{}],["|",{"inverse":true}],[" 27 ",{"fg":3,"bold":true}],["  .tcshrc         ",{}]],"27":[["~                   ",{"fg":4,"bold":true}],["|",{"inverse":true}],["143 ",{"fg":3,"bold":true}],["  let g:calendar_datetime = 'title'                                                                             ",{}],["|",{"inverse":true}],[" 28 ",{"fg":3,"bold":true}],["  .viminfo        ",{}]],"28":[["~                   ",{"fg":4,"bold":true}],["|",{"inverse":true}],["144 ",{"fg":3,"bold":true}],["<                                                                                                               ",{}],["|",{"inverse":true}],[" 29 ",{"fg":3,"bold":true}],["  .vimrc          ",{}]],"29":[["~                   ",{"fg":4,"bold":true}],["|",{"inverse":true}],["145 ",{"fg":3,"bold":true}],["                                                *g:calendar_filetype*                                           ",{}],["|",{"inverse":true}],[" 30 ",{"fg":3,"bold":true}],["  .xsession-errors",{}]],"30":[["~                   ",{"fg":4,"bold":true}],["|",{"inverse":true}],["146 ",{"fg":3,"bold":true}],["To control the filetype of calendar entries, set this variable. It defaults to                                  ",{}],["|",{"inverse":true}],[" 31 ",{"fg":3,"bold":true}],["  anaconda-ks.cfg ",{}]],"31":[["~                   ",{"fg":4,"bold":true}],["|",{"inverse":true}],["147 ",{"fg":3,"bold":true}],["'markdown'. Acceptable values are values that are acceptable for |filetype|                                     ",{}],["|",{"inverse":true}],[" 32 ",{"fg":3,"bold":true}],["  initial-setup-ks",{}]],"32":[["~                   ",{"fg":4,"bold":true}],["|",{"inverse":true}],["148 ",{"fg":3,"bold":true}],["like e.g. 'markdown' or 'pandoc':                                                                               ",{}],["|",{"inverse":true}],[" 33 ",{"fg":3,"bold":true}],["  test.c          ",{}]],"33":[["~                   ",{"fg":4,"bold":true}],["|",{"inverse":true}],["149 ",{"fg":3,"bold":true}],["  let g:calendar_filetype = 'pandoc'                                                                            ",{}],["|",{"inverse":true}],[" 34 ",{"fg":3,"bold":true}],["  test.cpp        ",{}]],"34":[["~                   ",{"fg":4,"bold":true}],["|",{"inverse":true}],["150 ",{"fg":3,"bold":true}],["                                                                                                                ",{}],["|",{"inverse":true}],[" 35 ",{"fg":3,"bold":true}],["  .test.cpp.swp   ",{}]],"35":[["~                   ",{"fg":4,"bold":true}],["|",{"inverse":true}],["151 ",{"fg":3,"bold":true}],["                                                                                                                ",{}],["|",{"inverse":true}],["~                     ",{"fg":4,"bold":true}]],"36":[["~                   ",{"fg":4,"bold":true}],["|",{"inverse":true}],["152 ",{"fg":3,"bold":true}],["HOOKS                                           *calendar-hooks*                                                ",{}],["|",{"inverse":true}],["~                     ",{"fg":4,"bold":true}]],"37":[["~                   ",{"fg":4,"bold":true}],["|",{"inverse":true}],["153 ",{"fg":3,"bold":true}],["                                                                                                                ",{}],["|",{"inverse":true}],["~                     ",{"fg":4,"bold":true}]],"38":[["~                   ",{"fg":4,"bold":true}],["|",{"inverse":true}],["154 ",{"fg":3,"bold":true}],["calendar.vim provides a number of hooks which allow you to run custom code on                                   ",{}],["|",{"inverse":true}],["~                     ",{"fg":4,"bold":true}]],"39":[["~                   ",{"fg":4,"bold":true}],["|",{"inverse":true}],["155 ",{"fg":3,"bold":true}],["certain events.  These are documented below.                                                                    ",{}],["|",{"inverse":true}],["~                     ",{"fg":4,"bold":true}]],"40":[["~                   ",{"fg":4,"bold":true}],["|",{"inverse":true}],["156 ",{"fg":3,"bold":true}],["                                                                                                                ",{}],["|",{"inverse":true}],["~                     ",{"fg":4,"bold":true}]],"41":[["~                   ",{"fg":4,"bold":true}],["|",{"inverse":true}],["157 ",{"fg":3,"bold":true}],["                                                *calendar_action*                                               ",{}],["|",{"inverse":true}],["~                     ",{"fg":4,"bold":true}]],"42":[["~                   ",{"fg":4,"bold":true}],["|",{"inverse":true}],["158 ",{"fg":3,"bold":true}],["The function declared in the calendar_action variable is run when the user                                      ",{}],["|",{"inverse":true}],["~                     ",{"fg":4,"bold":true}]],"43":[["~                   ",{"fg":4,"bold":true}],["|",{"inverse":true}],["159 ",{"fg":3,"bold":true}],["presses enter on a date.  Implement and set your function as follows: >                                         ",{}],["|",{"inverse":true}],["~                     ",{"fg":4,"bold":true}]],"44":[["~                   ",{"fg":4,"bold":true}],["|",{"inverse":true}],["160 ",{"fg":3,"bold":true}],["  function MyCalAction(day,month,year,week,dir)                            ",{"underline":true}],["                                     ",{}],["|",{"inverse":true}],["~                     ",{"fg":4,"bold":true}]],"45":[["~                   ",{"fg":4,"bold":true}],["|",{"inverse":true}],["160 ",{"fg":3,"bold":true}],["  function MyCalAction(day,month,year,week,dir)                                                                 ",{"underline":true}],["|",{"inverse":true}],["~                     ",{"fg":4,"bold":true}]],"46":[["[Name] test.cpp      ",{"inverse":true}],[" NORMAL ",{"bold":true}],[" ",{}],["calendar.txt ",{"bold":true}],["                                                        unix │ utf-8 │ text │  72% ",{}],[" LN 160",{"bold":true}],[":1  ",{}],[" ",{"bold":true,"inverse":true}],[" ~/…/calendar-vim/doc>",{"bold":true}]]},"cursor":{"x":100,"y":44}}],[0.002681,{"lines":{"44":[["~                   ",{"fg":4,"bold":true}],["|",{"inverse":true}],["160 ",{"fg":3,"bold":true}],["  function MyCalAction(day,month,year,week,dir)                                                                 ",{}],["|",{"inverse":true}],["~                     ",{"fg":4,"bold":true}]],"45":[["~                   ",{"fg":4,"bold":true}],["|",{"inverse":true}],["161 ",{"fg":3,"bold":true}],["    \" day   : day you actioned                                                                                  ",{"underline":true}],["|",{"inverse":true}],["~                     ",{"fg":4,"bold":true}]],"46":[["[Name] test.cpp      ",{"inverse":true}],[" NORMAL ",{"bold":true}],[" ",{}],["calendar.txt ",{"bold":true}],["                                                        unix │ utf-8 │ text │  73% ",{}],[" LN 161",{"bold":true}],[":1  ",{}],[" ",{"bold":true,"inverse":true}],[" ~/…/calendar-vim/doc>",{"bold":true}]]},"cursor":{"x":25,"y":45,"visible":true}}],[0.04056,{"lines":{"0":[["\" Press <F1> for hel",{"fg":6,"bold":true}],["|",{"inverse":true}],["117 ",{"fg":3,"bold":true}],["                                                *g:calendar_wruler*                                             ",{}],["|",{"inverse":true}],["  1 ",{"fg":3,"bold":true}],["\" Press ? for help",{"fg":5,"bold":true}]],"1":[["                    ",{}],["|",{"inverse":true}],["118 ",{"fg":3,"bold":true}],["To change the week names for the calendar headings, set this variable.  The                                     ",{}],["|",{"inverse":true}],["  2 ",{"fg":3,"bold":true}],["                  ",{}]],"2":[["▼",{"fg":3,"bold":true}],[" First",{"fg":5,"bold":true}],[" : ",{}],["struct",{"fg":2,"bold":true}],["    ",{}],["|",{"inverse":true}],["119 ",{"fg":3,"bold":true}],["value is expected to be a space-separated list of seven values, starting with                                   ",{}],["|",{"inverse":true}],["  3 ",{"fg":3,"bold":true}],[".. (up a dir)",{"fg":6,"bold":true}],["     ",{}]],"3":[["    [prototypes]",{"fg":6,"bold":true}],["    ",{}],["|",{"inverse":true}],["120 ",{"fg":3,"bold":true}],["Sunday: >                                                                                                       ",{}],["|",{"inverse":true}],["  4 /root/",{"fg":3,"bold":true}],["            ",{}]],"4":[["   ",{}],["+",{"fg":2,"bold":true}],["FirstRun(void)  ",{}],["|",{"inverse":true}],["121 ",{"fg":3,"bold":true}],["  let g:calendar_wruler = 'Su Mo Tu We Th Fr Sa'                                                                ",{}],["|",{"inverse":true}],["  5 ",{"fg":3,"bold":true}],["▸ .asciinema/",{"fg":6,"bold":true}],["     ",{}]],"5":[["   ",{}],["+",{"fg":2,"bold":true}],["FirstRun2(void) ",{}],["|",{"inverse":true}],["122 ",{"fg":3,"bold":true}],["<                                                                                                               ",{}],["|",{"inverse":true}],["  6 ",{"fg":3,"bold":true}],["▸ .cache/",{"fg":6,"bold":true}],["         ",{}]],"6":[["                    ",{}],["|",{"inverse":true}],["123 ",{"fg":3,"bold":true}],["                                                                                                                ",{}],["|",{"inverse":true}],["  7 ",{"fg":3,"bold":true}],["▸ .config/",{"fg":6,"bold":true}],["        ",{}]],"7":[["▼",{"fg":3,"bold":true}],[" Last",{"fg":5,"bold":true}],[" : ",{}],["struct",{"fg":2,"bold":true}],["     ",{}],["|",{"inverse":true}],["124 ",{"fg":3,"bold":true}],["                                                                                                                ",{}],["|",{"inverse":true}],["  8 ",{"fg":3,"bold":true}],["▸ .dbus/",{"fg":6,"bold":true}],["          ",{}]]},"cursor":{"y":7,"visible":false}}],[0.006987999999999999,{"lines":{"7":[["▼",{"fg":3,"bold":true}],[" Last",{"fg":5,"bold":true}],[" : ",{}],["struct",{"fg":2,"bold":true}],["     ",{}],["|",{"inverse":true}],["124 ",{"fg":3,"bold":true}],["                                                *g:calendar_monday*                                             ",{}],["|",{"inverse":true}],["  8 ",{"fg":3,"bold":true}],["▸ .dbus/",{"fg":6,"bold":true}],["          ",{}]],"8":[["    [functions]",{"fg":6,"bold":true}],["     ",{}],["|",{"inverse":true}],["125 ",{"fg":3,"bold":true}],["To make the week start on Monday rather than Sunday, set this variable.  Note                                   ",{}],["|",{"inverse":true}],["  9 ",{"fg":3,"bold":true}],["▸ .gnupg/",{"fg":6,"bold":true}],["         ",{}]],"9":[["   ",{}],["+",{"fg":2,"bold":true}],["FirstRun(void)  ",{}],["|",{"inverse":true}],["126 ",{"fg":3,"bold":true}],["that the value of |g:calendar_wruler| is not affected by this; it should                                        ",{}],["|",{"inverse":true}],[" 10 ",{"fg":3,"bold":true}],["▸ .kde/",{"fg":6,"bold":true}],["           ",{}]],"10":[["   ",{}],["+",{"fg":2,"bold":true}],["FirstRun2(void) ",{}],["|",{"inverse":true}],["127 ",{"fg":3,"bold":true}],["always begin with Sunday: >                                                                                     ",{}],["|",{"inverse":true}],[" 11 ",{"fg":3,"bold":true}],["▸ .local/",{"fg":6,"bold":true}],["         ",{}]],"11":[["   ",{}],["+",{"fg":2,"bold":true}],["~Last()         ",{}],["|",{"inverse":true}],["128 ",{"fg":3,"bold":true}],["  let g:calendar_monday = 1                                                                                     ",{}],["|",{"inverse":true}],[" 12 ",{"fg":3,"bold":true}],["▸ .pki/",{"fg":6,"bold":true}],["           ",{}]],"12":[["   ",{}],["+",{"fg":2,"bold":true}],["SecondRun(void) ",{}],["|",{"inverse":true}],["129 ",{"fg":3,"bold":true}],["<                                                                                                               ",{}],["|",{"inverse":true}],[" 13 ",{"fg":3,"bold":true}],["▸ .ssh/",{"fg":6,"bold":true}],["           ",{}]],"13":[["   ",{}],["+",{"fg":2,"bold":true}],["SecondRun2(void)",{}],["|",{"inverse":true}],["130 ",{"fg":3,"bold":true}],["                                                                                                                ",{}],["|",{"inverse":true}],[" 14 ",{"fg":3,"bold":true}],["▸ .vim/",{"fg":6,"bold":true}],["           ",{}]],"14":[["                    ",{}],["|",{"inverse":true}],["131 ",{"fg":3,"bold":true}],["                                                *g:calendar_weeknm*                                             ",{}],["|",{"inverse":true}],[" 15 ",{"fg":3,"bold":true}],["▸ diary/",{"fg":6,"bold":true}],["          ",{}]],"15":[["▼",{"fg":3,"bold":true}],[" Second",{"fg":5,"bold":true}],[" : ",{}],["struct",{"fg":2,"bold":true}],["   ",{}],["|",{"inverse":true}],["132 ",{"fg":3,"bold":true}],["To show the week number, set this variable.  There are four valid settings: >                                   ",{}],["|",{"inverse":true}],[" 16 ",{"fg":3,"bold":true}],["▸ temp/",{"fg":6,"bold":true}],["           ",{}]],"16":[["    [prototypes]",{"fg":6,"bold":true}],["    ",{}],["|",{"inverse":true}],["133 ",{"fg":3,"bold":true}],["  let g:calendar_weeknm = 1 \" WK01                                                                              ",{}],["|",{"inverse":true}],[" 17 ",{"fg":3,"bold":true}],["  .bash_history   ",{}]],"17":[["   ",{}],["+",{"fg":2,"bold":true}],["SecondRun(void) ",{}],["|",{"inverse":true}],["134 ",{"fg":3,"bold":true}],["  let g:calendar_weeknm = 2 \" WK 1                                                                              ",{}],["|",{"inverse":true}],[" 18 ",{"fg":3,"bold":true}],["  .bash_logout    ",{}]],"18":[["   ",{}],["+",{"fg":2,"bold":true}],["SecondRun2(void)",{}],["|",{"inverse":true}],["135 ",{"fg":3,"bold":true}],["  let g:calendar_weeknm = 3 \" KW01                                                                              ",{}],["|",{"inverse":true}],[" 19 ",{"fg":3,"bold":true}],["  .bash_profile   ",{"underline":true}]],"19":[["                    ",{}],["|",{"inverse":true}],["136 ",{"fg":3,"bold":true}],["  let g:calendar_weeknm = 4 \" KW 1                                                                              ",{}],["|",{"inverse":true}],[" 20 ",{"fg":3,"bold":true}],["  .bashrc         ",{}]],"20":[["▼",{"fg":3,"bold":true}],[" ",{}],["functions",{"fg":6,"bold":true}],["         ",{}],["|",{"inverse":true}],["137 ",{"fg":3,"bold":true}],["  let g:calendar_weeknm = 5 \" 1                                                                                 ",{}],["|",{"inverse":true}],[" 21 ",{"fg":3,"bold":true}],["  .cshrc          ",{}]],"21":[["    main(int argc, c",{"underline":true}],["|",{"inverse":true}],["138 ",{"fg":3,"bold":true}],["<                                                                                                               ",{}],["|",{"inverse":true}],[" 22 ",{"fg":3,"bold":true}],["  .dmrc           ",{}]],"22":[["~                   ",{"fg":4,"bold":true}],["|",{"inverse":true}],["139 ",{"fg":3,"bold":true}],["                                                                                                                ",{}],["|",{"inverse":true}],[" 23 ",{"fg":3,"bold":true}],["  .esd_auth       ",{}]],"23":[["~                   ",{"fg":4,"bold":true}],["|",{"inverse":true}],["140 ",{"fg":3,"bold":true}],["                                                *g:calendar_datetime*                                           ",{}],["|",{"inverse":true}],[" 24 ",{"fg":3,"bold":true}],["  .gtkrc-2.0      ",{}]],"24":[["~                   ",{"fg":4,"bold":true}],["|",{"inverse":true}],["141 ",{"fg":3,"bold":true}],["To control display of the current date and time, set this variable.                                             ",{}],["|",{"inverse":true}],[" 25 ",{"fg":3,"bold":true}],["  .gtkrc-2.0-kde4 ",{}]],"25":[["~                   ",{"fg":4,"bold":true}],["|",{"inverse":true}],["142 ",{"fg":3,"bold":true}],["Acceptable values are 'title', 'statusline', and '': >                                                          ",{}],["|",{"inverse":true}],[" 26 ",{"fg":3,"bold":true}],["  .lesshst        ",{}]],"26":[["~                   ",{"fg":4,"bold":true}],["|",{"inverse":true}],["143 ",{"fg":3,"bold":true}],["  let g:calendar_datetime = 'title'                                                                             ",{}],["|",{"inverse":true}],[" 27 ",{"fg":3,"bold":true}],["  .tcshrc         ",{}]],"27":[["~                   ",{"fg":4,"bold":true}],["|",{"inverse":true}],["144 ",{"fg":3,"bold":true}],["<                                                                                                               ",{}],["|",{"inverse":true}],[" 28 ",{"fg":3,"bold":true}],["  .viminfo        ",{}]],"28":[["~                   ",{"fg":4,"bold":true}],["|",{"inverse":true}],["145 ",{"fg":3,"bold":true}],["                                                *g:calendar_filetype*                                           ",{}],["|",{"inverse":true}],[" 29 ",{"fg":3,"bold":true}],["  .vimrc          ",{}]],"29":[["~                   ",{"fg":4,"bold":true}],["|",{"inverse":true}],["146 ",{"fg":3,"bold":true}],["To control the filetype of calendar entries, set this variable. It defaults to                                  ",{}],["|",{"inverse":true}],[" 30 ",{"fg":3,"bold":true}],["  .xsession-errors",{}]],"30":[["~                   ",{"fg":4,"bold":true}],["|",{"inverse":true}],["147 ",{"fg":3,"bold":true}],["'markdown'. Acceptable values are values that are acceptable for |filetype|                                     ",{}],["|",{"inverse":true}],[" 31 ",{"fg":3,"bold":true}],["  anaconda-ks.cfg ",{}]],"31":[["~                   ",{"fg":4,"bold":true}],["|",{"inverse":true}],["148 ",{"fg":3,"bold":true}],["like e.g. 'markdown' or 'pandoc':                                                                               ",{}],["|",{"inverse":true}],[" 32 ",{"fg":3,"bold":true}],["  initial-setup-ks",{}]],"32":[["~                   ",{"fg":4,"bold":true}],["|",{"inverse":true}],["149 ",{"fg":3,"bold":true}],["  let g:calendar_filetype = 'pandoc'                                                                            ",{}],["|",{"inverse":true}],[" 33 ",{"fg":3,"bold":true}],["  test.c          ",{}]],"33":[["~                   ",{"fg":4,"bold":true}],["|",{"inverse":true}],["150 ",{"fg":3,"bold":true}],["                                                                                                                ",{}],["|",{"inverse":true}],[" 34 ",{"fg":3,"bold":true}],["  test.cpp        ",{}]],"34":[["~                   ",{"fg":4,"bold":true}],["|",{"inverse":true}],["151 ",{"fg":3,"bold":true}],["                                                                                                                ",{}],["|",{"inverse":true}],[" 35 ",{"fg":3,"bold":true}],["  .test.cpp.swp   ",{}]],"35":[["~                   ",{"fg":4,"bold":true}],["|",{"inverse":true}],["152 ",{"fg":3,"bold":true}],["HOOKS                                           *calendar-hooks*                                                ",{}],["|",{"inverse":true}],["~                     ",{"fg":4,"bold":true}]],"36":[["~                   ",{"fg":4,"bold":true}],["|",{"inverse":true}],["153 ",{"fg":3,"bold":true}],["                                                                                                                ",{}],["|",{"inverse":true}],["~                     ",{"fg":4,"bold":true}]],"37":[["~                   ",{"fg":4,"bold":true}],["|",{"inverse":true}],["154 ",{"fg":3,"bold":true}],["calendar.vim provides a number of hooks which allow you to run custom code on                                   ",{}],["|",{"inverse":true}],["~                     ",{"fg":4,"bold":true}]],"38":[["~                   ",{"fg":4,"bold":true}],["|",{"inverse":true}],["155 ",{"fg":3,"bold":true}],["certain events.  These are documented below.                                                                    ",{}],["|",{"inverse":true}],["~                     ",{"fg":4,"bold":true}]],"39":[["~                   ",{"fg":4,"bold":true}],["|",{"inverse":true}],["156 ",{"fg":3,"bold":true}],["                                                                                                                ",{}],["|",{"inverse":true}],["~                     ",{"fg":4,"bold":true}]],"40":[["~                   ",{"fg":4,"bold":true}],["|",{"inverse":true}],["157 ",{"fg":3,"bold":true}],["                                                *calendar_action*                                               ",{}],["|",{"inverse":true}],["~                     ",{"fg":4,"bold":true}]],"41":[["~                   ",{"fg":4,"bold":true}],["|",{"inverse":true}],["158 ",{"fg":3,"bold":true}],["The function declared in the calendar_action variable is run when the user                                      ",{}],["|",{"inverse":true}],["~                     ",{"fg":4,"bold":true}]],"42":[["~                   ",{"fg":4,"bold":true}],["|",{"inverse":true}],["159 ",{"fg":3,"bold":true}],["presses enter on a date.  Implement and set your function as follows: >                                         ",{}],["|",{"inverse":true}],["~                     ",{"fg":4,"bold":true}]],"43":[["~                   ",{"fg":4,"bold":true}],["|",{"inverse":true}],["160 ",{"fg":3,"bold":true}],["  function MyCalAction(day,month,year,week,dir)                                                                 ",{}],["|",{"inverse":true}],["~                     ",{"fg":4,"bold":true}]],"44":[["~                   ",{"fg":4,"bold":true}],["|",{"inverse":true}],["161 ",{"fg":3,"bold":true}],["    \" day   : day you actioned                                                                                  ",{}],["|",{"inverse":true}],["~                     ",{"fg":4,"bold":true}]],"45":[["~                   ",{"fg":4,"bold":true}],["|",{"inverse":true}],["162 ",{"fg":3,"bold":true}],["    \" month : month you actioned                                                                                ",{"underline":true}],["|",{"inverse":true}],["~                     ",{"fg":4,"bold":true}]],"46":[["[Name] test.cpp      ",{"inverse":true}],[" NORMAL ",{"bold":true}],[" ",{}],["calendar.txt ",{"bold":true}],["                                                        unix │ utf-8 │ text │  73% ",{}],[" LN 162",{"bold":true}],[":1  ",{}],[" ",{"bold":true,"inverse":true}],[" ~/…/calendar-vim/doc>",{"bold":true}]]},"cursor":{"y":45,"visible":true}}],[0.015011,{"lines":{"0":[["\" Press <F1> for hel",{"fg":6,"bold":true}],["|",{"inverse":true}],["118 ",{"fg":3,"bold":true}],["To change the week names for the calendar headings, set this variable.  The                                     ",{}],["|",{"inverse":true}],["  1 ",{"fg":3,"bold":true}],["\" Press ? for help",{"fg":5,"bold":true}]],"1":[["                    ",{}],["|",{"inverse":true}],["119 ",{"fg":3,"bold":true}],["value is expected to be a space-separated list of seven values, starting with                                   ",{}],["|",{"inverse":true}],["  2 ",{"fg":3,"bold":true}],["                  ",{}]],"2":[["▼",{"fg":3,"bold":true}],[" First",{"fg":5,"bold":true}],[" : ",{}],["struct",{"fg":2,"bold":true}],["    ",{}],["|",{"inverse":true}],["120 ",{"fg":3,"bold":true}],["Sunday: >                                                                                                       ",{}],["|",{"inverse":true}],["  3 ",{"fg":3,"bold":true}],[".. (up a dir)",{"fg":6,"bold":true}],["     ",{}]],"3":[["    [prototypes]",{"fg":6,"bold":true}],["    ",{}],["|",{"inverse":true}],["121 ",{"fg":3,"bold":true}],["  let g:calendar_wruler = 'Su Mo Tu We Th Fr Sa'                                                                ",{}],["|",{"inverse":true}],["  4 /root/",{"fg":3,"bold":true}],["            ",{}]],"4":[["   ",{}],["+",{"fg":2,"bold":true}],["FirstRun(void)  ",{}],["|",{"inverse":true}],["122 ",{"fg":3,"bold":true}],["<                                                                                                               ",{}],["|",{"inverse":true}],["  5 ",{"fg":3,"bold":true}],["▸ .asciinema/",{"fg":6,"bold":true}],["     ",{}]],"5":[["   ",{}],["+",{"fg":2,"bold":true}],["FirstRun2(void) ",{}],["|",{"inverse":true}],["123 ",{"fg":3,"bold":true}],["                                                                                                                ",{}],["|",{"inverse":true}],["  6 ",{"fg":3,"bold":true}],["▸ .cache/",{"fg":6,"bold":true}],["         ",{}]],"6":[["                    ",{}],["|",{"inverse":true}],["124 ",{"fg":3,"bold":true}],["                                                *g:calendar_monday*                                             ",{}],["|",{"inverse":true}],["  7 ",{"fg":3,"bold":true}],["▸ .config/",{"fg":6,"bold":true}],["        ",{}]],"7":[["▼",{"fg":3,"bold":true}],[" Last",{"fg":5,"bold":true}],[" : ",{}],["struct",{"fg":2,"bold":true}],["     ",{}],["|",{"inverse":true}],["125 ",{"fg":3,"bold":true}],["To make the week start on Monday rather than Sunday, set this variable.  Note                                   ",{}],["|",{"inverse":true}],["  8 ",{"fg":3,"bold":true}],["▸ .dbus/",{"fg":6,"bold":true}],["          ",{}]],"8":[["    [functions]",{"fg":6,"bold":true}],["     ",{}],["|",{"inverse":true}],["126 ",{"fg":3,"bold":true}],["that the value of |g:calendar_wruler| is not affected by this; it should                                        ",{}],["|",{"inverse":true}],["  9 ",{"fg":3,"bold":true}],["▸ .gnupg/",{"fg":6,"bold":true}],["         ",{}]],"9":[["   ",{}],["+",{"fg":2,"bold":true}],["FirstRun(void)  ",{}],["|",{"inverse":true}],["127 ",{"fg":3,"bold":true}],["always begin with Sunday: >                                                                                     ",{}],["|",{"inverse":true}],[" 10 ",{"fg":3,"bold":true}],["▸ .kde/",{"fg":6,"bold":true}],["           ",{}]],"10":[["   ",{}],["+",{"fg":2,"bold":true}],["FirstRun2(void) ",{}],["|",{"inverse":true}],["128 ",{"fg":3,"bold":true}],["  let g:calendar_monday = 1                                                                                     ",{}],["|",{"inverse":true}],[" 11 ",{"fg":3,"bold":true}],["▸ .local/",{"fg":6,"bold":true}],["         ",{}]],"11":[["   ",{}],["+",{"fg":2,"bold":true}],["~Last()         ",{}],["|",{"inverse":true}],["129 ",{"fg":3,"bold":true}],["<                                                                                                               ",{}],["|",{"inverse":true}],[" 12 ",{"fg":3,"bold":true}],["▸ .pki/",{"fg":6,"bold":true}],["           ",{}]],"12":[["   ",{}],["+",{"fg":2,"bold":true}],["SecondRun(void) ",{}],["|",{"inverse":true}],["130 ",{"fg":3,"bold":true}],["                                                                                                                ",{}],["|",{"inverse":true}],[" 13 ",{"fg":3,"bold":true}],["▸ .ssh/",{"fg":6,"bold":true}],["           ",{}]],"13":[["   ",{}],["+",{"fg":2,"bold":true}],["SecondRun2(void)",{}],["|",{"inverse":true}],["131 ",{"fg":3,"bold":true}],["                                                *g:calendar_weeknm*                                             ",{}],["|",{"inverse":true}],[" 14 ",{"fg":3,"bold":true}],["▸ .vim/",{"fg":6,"bold":true}],["           ",{}]],"14":[["                    ",{}],["|",{"inverse":true}],["132 ",{"fg":3,"bold":true}],["To show the week number, set this variable.  There are four valid settings: >                                   ",{}],["|",{"inverse":true}],[" 15 ",{"fg":3,"bold":true}],["▸ diary/",{"fg":6,"bold":true}],["          ",{}]],"15":[["▼",{"fg":3,"bold":true}],[" Second",{"fg":5,"bold":true}],[" : ",{}],["struct",{"fg":2,"bold":true}],["   ",{}],["|",{"inverse":true}],["133 ",{"fg":3,"bold":true}],["  let g:calendar_weeknm = 1 \" WK01                                                                              ",{}],["|",{"inverse":true}],[" 16 ",{"fg":3,"bold":true}],["▸ temp/",{"fg":6,"bold":true}],["           ",{}]],"16":[["    [prototypes]",{"fg":6,"bold":true}],["    ",{}],["|",{"inverse":true}],["134 ",{"fg":3,"bold":true}],["  let g:calendar_weeknm = 2 \" WK 1                                                                              ",{}],["|",{"inverse":true}],[" 17 ",{"fg":3,"bold":true}],["  .bash_history   ",{}]],"17":[["   ",{}],["+",{"fg":2,"bold":true}],["SecondRun(void) ",{}],["|",{"inverse":true}],["135 ",{"fg":3,"bold":true}],["  let g:calendar_weeknm = 3 \" KW01                                                                              ",{}],["|",{"inverse":true}],[" 18 ",{"fg":3,"bold":true}],["  .bash_logout    ",{}]],"18":[["   ",{}],["+",{"fg":2,"bold":true}],["SecondRun2(void)",{}],["|",{"inverse":true}],["136 ",{"fg":3,"bold":true}],["  let g:calendar_weeknm = 4 \" KW 1                                                                              ",{}],["|",{"inverse":true}],[" 19 ",{"fg":3,"bold":true}],["  .bash_profile   ",{"underline":true}]],"19":[["                    ",{}],["|",{"inverse":true}],["137 ",{"fg":3,"bold":true}],["  let g:calendar_weeknm = 5 \" 1                                                                                 ",{}],["|",{"inverse":true}],[" 20 ",{"fg":3,"bold":true}],["  .bashrc         ",{}]],"20":[["▼",{"fg":3,"bold":true}],[" ",{}],["functions",{"fg":6,"bold":true}],["         ",{}],["|",{"inverse":true}],["138 ",{"fg":3,"bold":true}],["<                                                                                                               ",{}],["|",{"inverse":true}],[" 21 ",{"fg":3,"bold":true}],["  .cshrc          ",{}]],"21":[["    main(int argc, c",{"underline":true}],["|",{"inverse":true}],["139 ",{"fg":3,"bold":true}],["                                                                                                                ",{}],["|",{"inverse":true}],[" 22 ",{"fg":3,"bold":true}],["  .dmrc           ",{}]],"22":[["~                   ",{"fg":4,"bold":true}],["|",{"inverse":true}],["140 ",{"fg":3,"bold":true}],["                                                *g:calendar_datetime*                                           ",{}],["|",{"inverse":true}],[" 23 ",{"fg":3,"bold":true}],["  .esd_auth       ",{}]],"23":[["~                   ",{"fg":4,"bold":true}],["|",{"inverse":true}],["141 ",{"fg":3,"bold":true}],["To control display of the current date and time, set this variable.                                             ",{}],["|",{"inverse":true}],[" 24 ",{"fg":3,"bold":true}],["  .gtkrc-2.0      ",{}]],"24":[["~                   ",{"fg":4,"bold":true}],["|",{"inverse":true}],["142 ",{"fg":3,"bold":true}],["Acceptable values are 'title', 'statusline', and '': >                                                          ",{}],["|",{"inverse":true}],[" 25 ",{"fg":3,"bold":true}],["  .gtkrc-2.0-kde4 ",{}]],"25":[["~                   ",{"fg":4,"bold":true}],["|",{"inverse":true}],["143 ",{"fg":3,"bold":true}],["  let g:calendar_datetime = 'title'                                                                             ",{}],["|",{"inverse":true}],[" 26 ",{"fg":3,"bold":true}],["  .lesshst        ",{}]],"26":[["~                   ",{"fg":4,"bold":true}],["|",{"inverse":true}],["144 ",{"fg":3,"bold":true}],["<                                                                                                               ",{}],["|",{"inverse":true}],[" 27 ",{"fg":3,"bold":true}],["  .tcshrc         ",{}]],"27":[["~                   ",{"fg":4,"bold":true}],["|",{"inverse":true}],["145 ",{"fg":3,"bold":true}],["                                                *g:calendar_filetype*                                           ",{}],["|",{"inverse":true}],[" 28 ",{"fg":3,"bold":true}],["  .viminfo        ",{}]],"28":[["~                   ",{"fg":4,"bold":true}],["|",{"inverse":true}],["146 ",{"fg":3,"bold":true}],["To control the filetype of calendar entries, set this variable. It defaults to                                  ",{}],["|",{"inverse":true}],[" 29 ",{"fg":3,"bold":true}],["  .vimrc          ",{}]],"29":[["~                   ",{"fg":4,"bold":true}],["|",{"inverse":true}],["147 ",{"fg":3,"bold":true}],["'markdown'. Acceptable values are values that are acceptable for |filetype|                                     ",{}],["|",{"inverse":true}],[" 30 ",{"fg":3,"bold":true}],["  .xsession-errors",{}]],"30":[["~                   ",{"fg":4,"bold":true}],["|",{"inverse":true}],["148 ",{"fg":3,"bold":true}],["like e.g. 'markdown' or 'pandoc':                                                                               ",{}],["|",{"inverse":true}],[" 31 ",{"fg":3,"bold":true}],["  anaconda-ks.cfg ",{}]],"31":[["~                   ",{"fg":4,"bold":true}],["|",{"inverse":true}],["149 ",{"fg":3,"bold":true}],["  let g:calendar_filetype = 'pandoc'                                                                            ",{}],["|",{"inverse":true}],[" 32 ",{"fg":3,"bold":true}],["  initial-setup-ks",{}]],"32":[["~                   ",{"fg":4,"bold":true}],["|",{"inverse":true}],["150 ",{"fg":3,"bold":true}],["                                                                                                                ",{}],["|",{"inverse":true}],[" 33 ",{"fg":3,"bold":true}],["  test.c          ",{}]],"33":[["~                   ",{"fg":4,"bold":true}],["|",{"inverse":true}],["151 ",{"fg":3,"bold":true}],["                                                                                                                ",{}],["|",{"inverse":true}],[" 34 ",{"fg":3,"bold":true}],["  test.cpp        ",{}]],"34":[["~                   ",{"fg":4,"bold":true}],["|",{"inverse":true}],["152 ",{"fg":3,"bold":true}],["HOOKS                                           *calendar-hooks*                                                ",{}],["|",{"inverse":true}],[" 35 ",{"fg":3,"bold":true}],["  .test.cpp.swp   ",{}]],"35":[["~                   ",{"fg":4,"bold":true}],["|",{"inverse":true}],["153 ",{"fg":3,"bold":true}],["                                                                                                                ",{}],["|",{"inverse":true}],["~                     ",{"fg":4,"bold":true}]],"36":[["~                   ",{"fg":4,"bold":true}],["|",{"inverse":true}],["154 ",{"fg":3,"bold":true}],["calendar.vim provides a number of hooks which allow you to run custom code on                                   ",{}],["|",{"inverse":true}],["~                     ",{"fg":4,"bold":true}]],"37":[["~                   ",{"fg":4,"bold":true}],["|",{"inverse":true}],["155 ",{"fg":3,"bold":true}],["certain events.  These are documented below.                                                                    ",{}],["|",{"inverse":true}],["~                     ",{"fg":4,"bold":true}]],"38":[["~                   ",{"fg":4,"bold":true}],["|",{"inverse":true}],["156 ",{"fg":3,"bold":true}],["                                                                                                                ",{}],["|",{"inverse":true}],["~                     ",{"fg":4,"bold":true}]],"39":[["~                   ",{"fg":4,"bold":true}],["|",{"inverse":true}],["157 ",{"fg":3,"bold":true}],["                                                *calendar_action*                                               ",{}],["|",{"inverse":true}],["~                     ",{"fg":4,"bold":true}]],"40":[["~                   ",{"fg":4,"bold":true}],["|",{"inverse":true}],["158 ",{"fg":3,"bold":true}],["The function declared in the calendar_action variable is run when the user                                      ",{}],["|",{"inverse":true}],["~                     ",{"fg":4,"bold":true}]],"41":[["~                   ",{"fg":4,"bold":true}],["|",{"inverse":true}],["159 ",{"fg":3,"bold":true}],["presses enter on a date.  Implement and set your function as follows: >                                         ",{}],["|",{"inverse":true}],["~                     ",{"fg":4,"bold":true}]],"42":[["~                   ",{"fg":4,"bold":true}],["|",{"inverse":true}],["160 ",{"fg":3,"bold":true}],["  function MyCalAction(day,month,year,week,dir)                                                                 ",{}],["|",{"inverse":true}],["~                     ",{"fg":4,"bold":true}]],"43":[["~                   ",{"fg":4,"bold":true}],["|",{"inverse":true}],["161 ",{"fg":3,"bold":true}],["    \" day   : day you actioned                                                                                  ",{}],["|",{"inverse":true}],["~                     ",{"fg":4,"bold":true}]],"44":[["~                   ",{"fg":4,"bold":true}],["|",{"inverse":true}],["162 ",{"fg":3,"bold":true}],["    \" month : month you actioned                                           ",{"underline":true}],["                                     ",{}],["|",{"inverse":true}],["~                     ",{"fg":4,"bold":true}]]},"cursor":{"x":100,"y":44,"visible":false}}],[0.005422,{"lines":{"44":[["~                   ",{"fg":4,"bold":true}],["|",{"inverse":true}],["162 ",{"fg":3,"bold":true}],["    \" month : month you actioned                                                                                ",{}],["|",{"inverse":true}],["~                     ",{"fg":4,"bold":true}]],"45":[["~                   ",{"fg":4,"bold":true}],["|",{"inverse":true}],["163 ",{"fg":3,"bold":true}],["    \" year  : year you actioned                                                                                 ",{"underline":true}],["|",{"inverse":true}],["~                     ",{"fg":4,"bold":true}]],"46":[["[Name] test.cpp      ",{"inverse":true}],[" NORMAL ",{"bold":true}],[" ",{}],["calendar.txt ",{"bold":true}],["                                                        unix │ utf-8 │ text │  74% ",{}],[" LN 163",{"bold":true}],[":1  ",{}],[" ",{"bold":true,"inverse":true}],[" ~/…/calendar-vim/doc>",{"bold":true}]]},"cursor":{"x":25,"y":45,"visible":true}}],[0.034297,{"lines":{"0":[["\" Press <F1> for hel",{"fg":6,"bold":true}],["|",{"inverse":true}],["119 ",{"fg":3,"bold":true}],["value is expected to be a space-separated list of seven values, starting with                                   ",{}],["|",{"inverse":true}],["  1 ",{"fg":3,"bold":true}],["\" Press ? for help",{"fg":5,"bold":true}]],"1":[["                    ",{}],["|",{"inverse":true}],["120 ",{"fg":3,"bold":true}],["Sunday: >                                                                                                       ",{}],["|",{"inverse":true}],["  2 ",{"fg":3,"bold":true}],["                  ",{}]],"2":[["▼",{"fg":3,"bold":true}],[" First",{"fg":5,"bold":true}],[" : ",{}],["struct",{"fg":2,"bold":true}],["    ",{}],["|",{"inverse":true}],["121 ",{"fg":3,"bold":true}],["  let g:calendar_wruler = 'Su Mo Tu We Th Fr Sa'                                                                ",{}],["|",{"inverse":true}],["  3 ",{"fg":3,"bold":true}],[".. (up a dir)",{"fg":6,"bold":true}],["     ",{}]],"3":[["    [prototypes]",{"fg":6,"bold":true}],["    ",{}],["|",{"inverse":true}],["122 ",{"fg":3,"bold":true}],["<                                                                                                               ",{}],["|",{"inverse":true}],["  4 /root/",{"fg":3,"bold":true}],["            ",{}]],"4":[["   ",{}],["+",{"fg":2,"bold":true}],["FirstRun(void)  ",{}],["|",{"inverse":true}],["123 ",{"fg":3,"bold":true}],["                                                                                                                ",{}],["|",{"inverse":true}],["  5 ",{"fg":3,"bold":true}],["▸ .asciinema/",{"fg":6,"bold":true}],["     ",{}]],"5":[["   ",{}],["+",{"fg":2,"bold":true}],["FirstRun2(void) ",{}],["|",{"inverse":true}],["124 ",{"fg":3,"bold":true}],["                                                *g:calendar_monday*                                             ",{}],["|",{"inverse":true}],["  6 ",{"fg":3,"bold":true}],["▸ .cache/",{"fg":6,"bold":true}],["         ",{}]],"6":[["                    ",{}],["|",{"inverse":true}],["125 ",{"fg":3,"bold":true}],["To make the week start on Monday rather than Sunday, set this variable.  Note                                   ",{}],["|",{"inverse":true}],["  7 ",{"fg":3,"bold":true}],["▸ .config/",{"fg":6,"bold":true}],["        ",{}]],"7":[["▼",{"fg":3,"bold":true}],[" Last",{"fg":5,"bold":true}],[" : ",{}],["struct",{"fg":2,"bold":true}],["     ",{}],["|",{"inverse":true}],["126 ",{"fg":3,"bold":true}],["To make the week start on Monday rather than Sunday, set this variable.  Note                                   ",{}],["|",{"inverse":true}],["  8 ",{"fg":3,"bold":true}],["▸ .dbus/",{"fg":6,"bold":true}],["          ",{}]]},"cursor":{"y":7,"visible":false}}],[0.005774,{"lines":{"7":[["▼",{"fg":3,"bold":true}],[" Last",{"fg":5,"bold":true}],[" : ",{}],["struct",{"fg":2,"bold":true}],["     ",{}],["|",{"inverse":true}],["126 ",{"fg":3,"bold":true}],["that the value of |g:calendar_wruler| is not affected by this; it should                                        ",{}],["|",{"inverse":true}],["  8 ",{"fg":3,"bold":true}],["▸ .dbus/",{"fg":6,"bold":true}],["          ",{}]],"8":[["    [functions]",{"fg":6,"bold":true}],["     ",{}],["|",{"inverse":true}],["127 ",{"fg":3,"bold":true}],["always begin with Sunday: >                                                                                     ",{}],["|",{"inverse":true}],["  9 ",{"fg":3,"bold":true}],["▸ .gnupg/",{"fg":6,"bold":true}],["         ",{}]],"9":[["   ",{}],["+",{"fg":2,"bold":true}],["FirstRun(void)  ",{}],["|",{"inverse":true}],["128 ",{"fg":3,"bold":true}],["  let g:calendar_monday = 1                                                                                     ",{}],["|",{"inverse":true}],[" 10 ",{"fg":3,"bold":true}],["▸ .kde/",{"fg":6,"bold":true}],["           ",{}]],"10":[["   ",{}],["+",{"fg":2,"bold":true}],["FirstRun2(void) ",{}],["|",{"inverse":true}],["129 ",{"fg":3,"bold":true}],["<                                                                                                               ",{}],["|",{"inverse":true}],[" 11 ",{"fg":3,"bold":true}],["▸ .local/",{"fg":6,"bold":true}],["         ",{}]],"11":[["   ",{}],["+",{"fg":2,"bold":true}],["~Last()         ",{}],["|",{"inverse":true}],["130 ",{"fg":3,"bold":true}],["                                                                                                                ",{}],["|",{"inverse":true}],[" 12 ",{"fg":3,"bold":true}],["▸ .pki/",{"fg":6,"bold":true}],["           ",{}]],"12":[["   ",{}],["+",{"fg":2,"bold":true}],["SecondRun(void) ",{}],["|",{"inverse":true}],["131 ",{"fg":3,"bold":true}],["                                                *g:calendar_weeknm*                                             ",{}],["|",{"inverse":true}],[" 13 ",{"fg":3,"bold":true}],["▸ .ssh/",{"fg":6,"bold":true}],["           ",{}]],"13":[["   ",{}],["+",{"fg":2,"bold":true}],["SecondRun2(void)",{}],["|",{"inverse":true}],["132 ",{"fg":3,"bold":true}],["To show the week number, set this variable.  There are four valid settings: >                                   ",{}],["|",{"inverse":true}],[" 14 ",{"fg":3,"bold":true}],["▸ .vim/",{"fg":6,"bold":true}],["           ",{}]],"14":[["                    ",{}],["|",{"inverse":true}],["133 ",{"fg":3,"bold":true}],["  let g:calendar_weeknm = 1 \" WK01                                                                              ",{}],["|",{"inverse":true}],[" 15 ",{"fg":3,"bold":true}],["▸ diary/",{"fg":6,"bold":true}],["          ",{}]],"15":[["▼",{"fg":3,"bold":true}],[" Second",{"fg":5,"bold":true}],[" : ",{}],["struct",{"fg":2,"bold":true}],["   ",{}],["|",{"inverse":true}],["134 ",{"fg":3,"bold":true}],["  let g:calendar_weeknm = 2 \" WK 1                                                                              ",{}],["|",{"inverse":true}],[" 16 ",{"fg":3,"bold":true}],["▸ temp/",{"fg":6,"bold":true}],["           ",{}]],"16":[["    [prototypes]",{"fg":6,"bold":true}],["    ",{}],["|",{"inverse":true}],["135 ",{"fg":3,"bold":true}],["  let g:calendar_weeknm = 3 \" KW01                                                                              ",{}],["|",{"inverse":true}],[" 17 ",{"fg":3,"bold":true}],["  .bash_history   ",{}]],"17":[["   ",{}],["+",{"fg":2,"bold":true}],["SecondRun(void) ",{}],["|",{"inverse":true}],["136 ",{"fg":3,"bold":true}],["  let g:calendar_weeknm = 4 \" KW 1                                                                              ",{}],["|",{"inverse":true}],[" 18 ",{"fg":3,"bold":true}],["  .bash_logout    ",{}]],"18":[["   ",{}],["+",{"fg":2,"bold":true}],["SecondRun2(void)",{}],["|",{"inverse":true}],["137 ",{"fg":3,"bold":true}],["  let g:calendar_weeknm = 5 \" 1                                                                                 ",{}],["|",{"inverse":true}],[" 19 ",{"fg":3,"bold":true}],["  .bash_profile   ",{"underline":true}]],"19":[["                    ",{}],["|",{"inverse":true}],["138 ",{"fg":3,"bold":true}],["<                                                                                                               ",{}],["|",{"inverse":true}],[" 20 ",{"fg":3,"bold":true}],["  .bashrc         ",{}]],"20":[["▼",{"fg":3,"bold":true}],[" ",{}],["functions",{"fg":6,"bold":true}],["         ",{}],["|",{"inverse":true}],["139 ",{"fg":3,"bold":true}],["                                                                                                                ",{}],["|",{"inverse":true}],[" 21 ",{"fg":3,"bold":true}],["  .cshrc          ",{}]],"21":[["    main(int argc, c",{"underline":true}],["|",{"inverse":true}],["140 ",{"fg":3,"bold":true}],["                                                *g:calendar_datetime*                                           ",{}],["|",{"inverse":true}],[" 22 ",{"fg":3,"bold":true}],["  .dmrc           ",{}]],"22":[["~                   ",{"fg":4,"bold":true}],["|",{"inverse":true}],["141 ",{"fg":3,"bold":true}],["To control display of the current date and time, set this variable.                                             ",{}],["|",{"inverse":true}],[" 23 ",{"fg":3,"bold":true}],["  .esd_auth       ",{}]],"23":[["~                   ",{"fg":4,"bold":true}],["|",{"inverse":true}],["142 ",{"fg":3,"bold":true}],["Acceptable values are 'title', 'statusline', and '': >                                                          ",{}],["|",{"inverse":true}],[" 24 ",{"fg":3,"bold":true}],["  .gtkrc-2.0      ",{}]],"24":[["~                   ",{"fg":4,"bold":true}],["|",{"inverse":true}],["143 ",{"fg":3,"bold":true}],["  let g:calendar_datetime = 'title'                                                                             ",{}],["|",{"inverse":true}],[" 25 ",{"fg":3,"bold":true}],["  .gtkrc-2.0-kde4 ",{}]],"25":[["~                   ",{"fg":4,"bold":true}],["|",{"inverse":true}],["144 ",{"fg":3,"bold":true}],["<                                                                                                               ",{}],["|",{"inverse":true}],[" 26 ",{"fg":3,"bold":true}],["  .lesshst        ",{}]],"26":[["~                   ",{"fg":4,"bold":true}],["|",{"inverse":true}],["145 ",{"fg":3,"bold":true}],["                                                *g:calendar_filetype*                                           ",{}],["|",{"inverse":true}],[" 27 ",{"fg":3,"bold":true}],["  .tcshrc         ",{}]],"27":[["~                   ",{"fg":4,"bold":true}],["|",{"inverse":true}],["146 ",{"fg":3,"bold":true}],["To control the filetype of calendar entries, set this variable. It defaults to                                  ",{}],["|",{"inverse":true}],[" 28 ",{"fg":3,"bold":true}],["  .viminfo        ",{}]],"28":[["~                   ",{"fg":4,"bold":true}],["|",{"inverse":true}],["147 ",{"fg":3,"bold":true}],["'markdown'. Acceptable values are values that are acceptable for |filetype|                                     ",{}],["|",{"inverse":true}],[" 29 ",{"fg":3,"bold":true}],["  .vimrc          ",{}]],"29":[["~                   ",{"fg":4,"bold":true}],["|",{"inverse":true}],["148 ",{"fg":3,"bold":true}],["like e.g. 'markdown' or 'pandoc':                                                                               ",{}],["|",{"inverse":true}],[" 30 ",{"fg":3,"bold":true}],["  .xsession-errors",{}]],"30":[["~                   ",{"fg":4,"bold":true}],["|",{"inverse":true}],["149 ",{"fg":3,"bold":true}],["  let g:calendar_filetype = 'pandoc'                                                                            ",{}],["|",{"inverse":true}],[" 31 ",{"fg":3,"bold":true}],["  anaconda-ks.cfg ",{}]],"31":[["~                   ",{"fg":4,"bold":true}],["|",{"inverse":true}],["150 ",{"fg":3,"bold":true}],["                                                                                                                ",{}],["|",{"inverse":true}],[" 32 ",{"fg":3,"bold":true}],["  initial-setup-ks",{}]],"32":[["~                   ",{"fg":4,"bold":true}],["|",{"inverse":true}],["151 ",{"fg":3,"bold":true}],["                                                                                                                ",{}],["|",{"inverse":true}],[" 33 ",{"fg":3,"bold":true}],["  test.c          ",{}]],"33":[["~                   ",{"fg":4,"bold":true}],["|",{"inverse":true}],["152 ",{"fg":3,"bold":true}],["HOOKS                                           *calendar-hooks*                                                ",{}],["|",{"inverse":true}],[" 34 ",{"fg":3,"bold":true}],["  test.cpp        ",{}]],"34":[["~                   ",{"fg":4,"bold":true}],["|",{"inverse":true}],["153 ",{"fg":3,"bold":true}],["                                                                                                                ",{}],["|",{"inverse":true}],[" 35 ",{"fg":3,"bold":true}],["  .test.cpp.swp   ",{}]],"35":[["~                   ",{"fg":4,"bold":true}],["|",{"inverse":true}],["154 ",{"fg":3,"bold":true}],["calendar.vim provides a number of hooks which allow you to run custom code on                                   ",{}],["|",{"inverse":true}],["~                     ",{"fg":4,"bold":true}]],"36":[["~                   ",{"fg":4,"bold":true}],["|",{"inverse":true}],["155 ",{"fg":3,"bold":true}],["certain events.  These are documented below.                                                                    ",{}],["|",{"inverse":true}],["~                     ",{"fg":4,"bold":true}]],"37":[["~                   ",{"fg":4,"bold":true}],["|",{"inverse":true}],["156 ",{"fg":3,"bold":true}],["                                                                                                                ",{}],["|",{"inverse":true}],["~                     ",{"fg":4,"bold":true}]],"38":[["~                   ",{"fg":4,"bold":true}],["|",{"inverse":true}],["157 ",{"fg":3,"bold":true}],["                                                *calendar_action*                                               ",{}],["|",{"inverse":true}],["~                     ",{"fg":4,"bold":true}]],"39":[["~                   ",{"fg":4,"bold":true}],["|",{"inverse":true}],["158 ",{"fg":3,"bold":true}],["The function declared in the calendar_action variable is run when the user                                      ",{}],["|",{"inverse":true}],["~                     ",{"fg":4,"bold":true}]],"40":[["~                   ",{"fg":4,"bold":true}],["|",{"inverse":true}],["159 ",{"fg":3,"bold":true}],["presses enter on a date.  Implement and set your function as follows: >                                         ",{}],["|",{"inverse":true}],["~                     ",{"fg":4,"bold":true}]],"41":[["~                   ",{"fg":4,"bold":true}],["|",{"inverse":true}],["160 ",{"fg":3,"bold":true}],["  function MyCalAction(day,month,year,week,dir)                                                                 ",{}],["|",{"inverse":true}],["~                     ",{"fg":4,"bold":true}]],"42":[["~                   ",{"fg":4,"bold":true}],["|",{"inverse":true}],["161 ",{"fg":3,"bold":true}],["    \" day   : day you actioned                                                                                  ",{}],["|",{"inverse":true}],["~                     ",{"fg":4,"bold":true}]],"43":[["~                   ",{"fg":4,"bold":true}],["|",{"inverse":true}],["162 ",{"fg":3,"bold":true}],["    \" month : month you actioned                                                                                ",{}],["|",{"inverse":true}],["~                     ",{"fg":4,"bold":true}]],"44":[["~                   ",{"fg":4,"bold":true}],["|",{"inverse":true}],["163 ",{"fg":3,"bold":true}],["    \" year  : year you actioned                                                                                 ",{}],["|",{"inverse":true}],["~                     ",{"fg":4,"bold":true}]],"45":[["~                   ",{"fg":4,"bold":true}],["|",{"inverse":true}],["164 ",{"fg":3,"bold":true}],["    \" week  : day of week (Mo=1 ... Su=7)                                                                       ",{"underline":true}],["|",{"inverse":true}],["~                     ",{"fg":4,"bold":true}]],"46":[["[Name] test.cpp      ",{"inverse":true}],[" NORMAL ",{"bold":true}],[" ",{}],["calendar.txt ",{"bold":true}],["                                                        unix │ utf-8 │ text │  74% ",{}],[" LN 164",{"bold":true}],[":1  ",{}],[" ",{"bold":true,"inverse":true}],[" ~/…/calendar-vim/doc>",{"bold":true}]]},"cursor":{"y":45,"visible":true}}],[0.023788,{"lines":{"47":[["                                                                                                                                                     j          ",{}]]},"cursor":{"visible":false}}],[0.002434,{"lines":{"0":[["\" Press <F1> for hel",{"fg":6,"bold":true}],["|",{"inverse":true}],["120 ",{"fg":3,"bold":true}],["Sunday: >                                                                                                       ",{}],["|",{"inverse":true}],["  1 ",{"fg":3,"bold":true}],["\" Press ? for help",{"fg":5,"bold":true}]],"1":[["                    ",{}],["|",{"inverse":true}],["121 ",{"fg":3,"bold":true}],["  let g:calendar_wruler = 'Su Mo Tu We Th Fr Sa'                                                                ",{}],["|",{"inverse":true}],["  2 ",{"fg":3,"bold":true}],["                  ",{}]],"2":[["▼",{"fg":3,"bold":true}],[" First",{"fg":5,"bold":true}],[" : ",{}],["struct",{"fg":2,"bold":true}],["    ",{}],["|",{"inverse":true}],["122 ",{"fg":3,"bold":true}],["<                                                                                                               ",{}],["|",{"inverse":true}],["  3 ",{"fg":3,"bold":true}],[".. (up a dir)",{"fg":6,"bold":true}],["     ",{}]],"3":[["    [prototypes]",{"fg":6,"bold":true}],["    ",{}],["|",{"inverse":true}],["123 ",{"fg":3,"bold":true}],["                                                                                                                ",{}],["|",{"inverse":true}],["  4 /root/",{"fg":3,"bold":true}],["            ",{}]],"4":[["   ",{}],["+",{"fg":2,"bold":true}],["FirstRun(void)  ",{}],["|",{"inverse":true}],["124 ",{"fg":3,"bold":true}],["                                                *g:calendar_monday*                                             ",{}],["|",{"inverse":true}],["  5 ",{"fg":3,"bold":true}],["▸ .asciinema/",{"fg":6,"bold":true}],["     ",{}]],"5":[["   ",{}],["+",{"fg":2,"bold":true}],["FirstRun2(void) ",{}],["|",{"inverse":true}],["125 ",{"fg":3,"bold":true}],["To make the week start on Monday rather than Sunday, set this variable.  Note                                   ",{}],["|",{"inverse":true}],["  6 ",{"fg":3,"bold":true}],["▸ .cache/",{"fg":6,"bold":true}],["         ",{}]],"6":[["                    ",{}],["|",{"inverse":true}],["126 ",{"fg":3,"bold":true}],["that the value of |g:calendar_wruler| is not affected by this; it should                                        ",{}],["|",{"inverse":true}],["  7 ",{"fg":3,"bold":true}],["▸ .config/",{"fg":6,"bold":true}],["        ",{}]],"7":[["▼",{"fg":3,"bold":true}],[" Last",{"fg":5,"bold":true}],[" : ",{}],["struct",{"fg":2,"bold":true}],["     ",{}],["|",{"inverse":true}],["127 ",{"fg":3,"bold":true}],["always begin with Sunday: >                                                                                     ",{}],["|",{"inverse":true}],["  8 ",{"fg":3,"bold":true}],["▸ .dbus/",{"fg":6,"bold":true}],["          ",{}]],"8":[["    [functions]",{"fg":6,"bold":true}],["     ",{}],["|",{"inverse":true}],["128 ",{"fg":3,"bold":true}],["  let g:calendar_monday = 1                                                                                     ",{}],["|",{"inverse":true}],["  9 ",{"fg":3,"bold":true}],["▸ .gnupg/",{"fg":6,"bold":true}],["         ",{}]],"9":[["   ",{}],["+",{"fg":2,"bold":true}],["FirstRun(void)  ",{}],["|",{"inverse":true}],["129 ",{"fg":3,"bold":true}],["<                                                                                                               ",{}],["|",{"inverse":true}],[" 10 ",{"fg":3,"bold":true}],["▸ .kde/",{"fg":6,"bold":true}],["           ",{}]],"10":[["   ",{}],["+",{"fg":2,"bold":true}],["FirstRun2(void) ",{}],["|",{"inverse":true}],["130 ",{"fg":3,"bold":true}],["                                                                                                                ",{}],["|",{"inverse":true}],[" 11 ",{"fg":3,"bold":true}],["▸ .local/",{"fg":6,"bold":true}],["         ",{}]],"11":[["   ",{}],["+",{"fg":2,"bold":true}],["~Last()         ",{}],["|",{"inverse":true}],["131 ",{"fg":3,"bold":true}],["                                                *g:calendar_weeknm*                                             ",{}],["|",{"inverse":true}],[" 12 ",{"fg":3,"bold":true}],["▸ .pki/",{"fg":6,"bold":true}],["           ",{}]],"12":[["   ",{}],["+",{"fg":2,"bold":true}],["SecondRun(void) ",{}],["|",{"inverse":true}],["132 ",{"fg":3,"bold":true}],["To show the week number, set this variable.  There are four valid settings: >                                   ",{}],["|",{"inverse":true}],[" 13 ",{"fg":3,"bold":true}],["▸ .ssh/",{"fg":6,"bold":true}],["           ",{}]],"13":[["   ",{}],["+",{"fg":2,"bold":true}],["SecondRun2(void)",{}],["|",{"inverse":true}],["133 ",{"fg":3,"bold":true}],["  let g:calendar_weeknm = 1 \" WK01                                                                              ",{}],["|",{"inverse":true}],[" 14 ",{"fg":3,"bold":true}],["▸ .vim/",{"fg":6,"bold":true}],["           ",{}]],"14":[["                    ",{}],["|",{"inverse":true}],["134 ",{"fg":3,"bold":true}],["  let g:calendar_weeknm = 2 \" WK 1                                                                              ",{}],["|",{"inverse":true}],[" 15 ",{"fg":3,"bold":true}],["▸ diary/",{"fg":6,"bold":true}],["          ",{}]],"15":[["▼",{"fg":3,"bold":true}],[" Second",{"fg":5,"bold":true}],[" : ",{}],["struct",{"fg":2,"bold":true}],["   ",{}],["|",{"inverse":true}],["135 ",{"fg":3,"bold":true}],["  let g:calendar_weeknm = 3 \" KW01                                                                              ",{}],["|",{"inverse":true}],[" 16 ",{"fg":3,"bold":true}],["▸ temp/",{"fg":6,"bold":true}],["           ",{}]],"16":[["    [prototypes]",{"fg":6,"bold":true}],["    ",{}],["|",{"inverse":true}],["136 ",{"fg":3,"bold":true}],["  let g:calendar_weeknm = 4 \" KW 1                                                                              ",{}],["|",{"inverse":true}],[" 17 ",{"fg":3,"bold":true}],["  .bash_history   ",{}]],"17":[["   ",{}],["+",{"fg":2,"bold":true}],["SecondRun(void) ",{}],["|",{"inverse":true}],["137 ",{"fg":3,"bold":true}],["  let g:calendar_weeknm = 5 \" 1                                                                                 ",{}],["|",{"inverse":true}],[" 18 ",{"fg":3,"bold":true}],["  .bash_logout    ",{}]],"18":[["   ",{}],["+",{"fg":2,"bold":true}],["SecondRun2(void)",{}],["|",{"inverse":true}],["138 ",{"fg":3,"bold":true}],["<                                                                                                               ",{}],["|",{"inverse":true}],[" 19 ",{"fg":3,"bold":true}],["  .bash_profile   ",{"underline":true}]],"19":[["                    ",{}],["|",{"inverse":true}],["139 ",{"fg":3,"bold":true}],["                                                                                                                ",{}],["|",{"inverse":true}],[" 20 ",{"fg":3,"bold":true}],["  .bashrc         ",{}]],"20":[["▼",{"fg":3,"bold":true}],[" ",{}],["functions",{"fg":6,"bold":true}],["         ",{}],["|",{"inverse":true}],["140 ",{"fg":3,"bold":true}],["                                                *g:calendar_datetime*                                           ",{}],["|",{"inverse":true}],[" 21 ",{"fg":3,"bold":true}],["  .cshrc          ",{}]],"21":[["    main(int argc, c",{"underline":true}],["|",{"inverse":true}],["141 ",{"fg":3,"bold":true}],["To control display of the current date and time, set this variable.                                             ",{}],["|",{"inverse":true}],[" 22 ",{"fg":3,"bold":true}],["  .dmrc           ",{}]],"22":[["~                   ",{"fg":4,"bold":true}],["|",{"inverse":true}],["142 ",{"fg":3,"bold":true}],["Acceptable values are 'he current date and time, set this variable.                                             ",{}],["|",{"inverse":true}],[" 23 ",{"fg":3,"bold":true}],["  .esd_auth       ",{}]],"47":[["                                                                                                                                                                ",{}]]},"cursor":{"x":48,"y":22}}],[0.023472,{"lines":{"22":[["~                   ",{"fg":4,"bold":true}],["|",{"inverse":true}],["142 ",{"fg":3,"bold":true}],["Acceptable values are 'title', 'statusline', and '': >                                                          ",{}],["|",{"inverse":true}],[" 23 ",{"fg":3,"bold":true}],["  .esd_auth       ",{}]],"23":[["~                   ",{"fg":4,"bold":true}],["|",{"inverse":true}],["143 ",{"fg":3,"bold":true}],["  let g:calendar_datetime = 'title'                                                                             ",{}],["|",{"inverse":true}],[" 24 ",{"fg":3,"bold":true}],["  .gtkrc-2.0      ",{}]],"24":[["~                   ",{"fg":4,"bold":true}],["|",{"inverse":true}],["144 ",{"fg":3,"bold":true}],["<                                                                                                               ",{}],["|",{"inverse":true}],[" 25 ",{"fg":3,"bold":true}],["  .gtkrc-2.0-kde4 ",{}]],"25":[["~                   ",{"fg":4,"bold":true}],["|",{"inverse":true}],["145 ",{"fg":3,"bold":true}],["                                                *g:calendar_filetype*                                           ",{}],["|",{"inverse":true}],[" 26 ",{"fg":3,"bold":true}],["  .lesshst        ",{}]],"26":[["~                   ",{"fg":4,"bold":true}],["|",{"inverse":true}],["146 ",{"fg":3,"bold":true}],["To control the filetype of calendar entries, set this variable. It defaults to                                  ",{}],["|",{"inverse":true}],[" 27 ",{"fg":3,"bold":true}],["  .tcshrc         ",{}]],"27":[["~                   ",{"fg":4,"bold":true}],["|",{"inverse":true}],["147 ",{"fg":3,"bold":true}],["'markdown'. Acceptable values are values that are acceptable for |filetype|                                     ",{}],["|",{"inverse":true}],[" 28 ",{"fg":3,"bold":true}],["  .viminfo        ",{}]],"28":[["~                   ",{"fg":4,"bold":true}],["|",{"inverse":true}],["148 ",{"fg":3,"bold":true}],["like e.g. 'markdown' or 'pandoc':                                                                               ",{}],["|",{"inverse":true}],[" 29 ",{"fg":3,"bold":true}],["  .vimrc          ",{}]],"29":[["~                   ",{"fg":4,"bold":true}],["|",{"inverse":true}],["149 ",{"fg":3,"bold":true}],["  let g:calendar_filetype = 'pandoc'                                                                            ",{}],["|",{"inverse":true}],[" 30 ",{"fg":3,"bold":true}],["  .xsession-errors",{}]]},"cursor":{"x":112,"y":29}}],[0.007123000000000001,{"lines":{"30":[["~                   ",{"fg":4,"bold":true}],["|",{"inverse":true}],["150 ",{"fg":3,"bold":true}],["                                                                                                                ",{}],["|",{"inverse":true}],[" 31 ",{"fg":3,"bold":true}],["  anaconda-ks.cfg ",{}]],"31":[["~                   ",{"fg":4,"bold":true}],["|",{"inverse":true}],["151 ",{"fg":3,"bold":true}],["                                                                                                                ",{}],["|",{"inverse":true}],[" 32 ",{"fg":3,"bold":true}],["  initial-setup-ks",{}]],"32":[["~                   ",{"fg":4,"bold":true}],["|",{"inverse":true}],["152 ",{"fg":3,"bold":true}],["HOOKS                                           *calendar-hooks*                                                ",{}],["|",{"inverse":true}],[" 33 ",{"fg":3,"bold":true}],["  test.c          ",{}]],"33":[["~                   ",{"fg":4,"bold":true}],["|",{"inverse":true}],["153 ",{"fg":3,"bold":true}],["                                                                                                                ",{}],["|",{"inverse":true}],[" 34 ",{"fg":3,"bold":true}],["  test.cpp        ",{}]],"34":[["~                   ",{"fg":4,"bold":true}],["|",{"inverse":true}],["154 ",{"fg":3,"bold":true}],["calendar.vim provides a number of hooks which allow you to run custom code on                                   ",{}],["|",{"inverse":true}],[" 35 ",{"fg":3,"bold":true}],["  .test.cpp.swp   ",{}]],"35":[["~                   ",{"fg":4,"bold":true}],["|",{"inverse":true}],["155 ",{"fg":3,"bold":true}],["certain events.  These are documented below.                                                                    ",{}],["|",{"inverse":true}],["~                     ",{"fg":4,"bold":true}]],"36":[["~                   ",{"fg":4,"bold":true}],["|",{"inverse":true}],["156 ",{"fg":3,"bold":true}],["                                                                                                                ",{}],["|",{"inverse":true}],["~                     ",{"fg":4,"bold":true}]],"37":[["~                   ",{"fg":4,"bold":true}],["|",{"inverse":true}],["157 ",{"fg":3,"bold":true}],["                                                *calendar_action*                                               ",{}],["|",{"inverse":true}],["~                     ",{"fg":4,"bold":true}]],"38":[["~                   ",{"fg":4,"bold":true}],["|",{"inverse":true}],["158 ",{"fg":3,"bold":true}],["The function declared in the calendar_action variable is run when the user                                      ",{}],["|",{"inverse":true}],["~                     ",{"fg":4,"bold":true}]],"39":[["~                   ",{"fg":4,"bold":true}],["|",{"inverse":true}],["159 ",{"fg":3,"bold":true}],["presses enter on a date.  Implement and set your function as follows: >                                         ",{}],["|",{"inverse":true}],["~                     ",{"fg":4,"bold":true}]],"40":[["~                   ",{"fg":4,"bold":true}],["|",{"inverse":true}],["160 ",{"fg":3,"bold":true}],["  function MyCalAction(day,month,year,week,dir)                                                                 ",{}],["|",{"inverse":true}],["~                     ",{"fg":4,"bold":true}]],"41":[["~                   ",{"fg":4,"bold":true}],["|",{"inverse":true}],["161 ",{"fg":3,"bold":true}],["    \" day   : day you actioned                                                                                  ",{}],["|",{"inverse":true}],["~                     ",{"fg":4,"bold":true}]],"42":[["~                   ",{"fg":4,"bold":true}],["|",{"inverse":true}],["162 ",{"fg":3,"bold":true}],["    \" month : month you actioned                                                                                ",{}],["|",{"inverse":true}],["~                     ",{"fg":4,"bold":true}]],"43":[["~                   ",{"fg":4,"bold":true}],["|",{"inverse":true}],["163 ",{"fg":3,"bold":true}],["    \" year  : year you actioned                                                                                 ",{}],["|",{"inverse":true}],["~                     ",{"fg":4,"bold":true}]],"44":[["~                   ",{"fg":4,"bold":true}],["|",{"inverse":true}],["164 ",{"fg":3,"bold":true}],["    \" week  : day of week (Mo=1 ... Su=7)                                                                       ",{}],["|",{"inverse":true}],["~                     ",{"fg":4,"bold":true}]],"45":[["~                   ",{"fg":4,"bold":true}],["|",{"inverse":true}],["165 ",{"fg":3,"bold":true}],["    \" dir   : direction of calendar                                                                             ",{"underline":true}],["|",{"inverse":true}],["~                     ",{"fg":4,"bold":true}]],"46":[["[Name] test.cpp      ",{"inverse":true}],[" NORMAL ",{"bold":true}],[" ",{}],["calendar.txt ",{"bold":true}],["                                                        unix │ utf-8 │ text │  75% ",{}],[" LN 165",{"bold":true}],[":1  ",{}],[" ",{"bold":true,"inverse":true}],[" ~/…/calendar-vim/doc>",{"bold":true}]]},"cursor":{"x":25,"y":45,"visible":true}}],[1.293093,{"lines":{"47":[["                                                                                                                                                     ^W         ",{}]]}}],[0.318632,{"lines":{"47":[["                                                                                                                                                     ^Wh        ",{}]]},"cursor":{"visible":false}}],[0.04699,{"lines":{"46":[[" Tagbar ",{"bold":true}],[" Tree       ",{}],[" ",{"bold":true,"inverse":true}],[" ",{"inverse":true}],[".vim/bundle/calendar-vim/doc/",{}],["calendar.txt ",{"bold":true}],["                                                         75% ",{}],["│ LN 165",{"bold":true}],[":1  ",{}],[" ",{"inverse":true}],[" ~/NERD_tree_1 ",{"bold":true}],["       ",{}]],"47":[["                                                                                                                                                                ",{}]]},"cursor":{"x":4,"y":21,"visible":true}}],[1.669668,{"lines":{"0":[["\" Press <F1> for help",{"fg":6,"bold":true}],["                                                                                                                                       ",{}],["|",{"inverse":true}],["elp",{"fg":5,"bold":true}]],"1":[["                                                                                                                                                            ",{}],["|",{"inverse":true}],["   ",{}]],"2":[["▼",{"fg":3,"bold":true}],[" First",{"fg":5,"bold":true}],[" : ",{}],["struct",{"fg":2,"bold":true}],["                                                                                                                                            ",{}],["|",{"inverse":true}],["   ",{}]],"3":[["    [prototypes]",{"fg":6,"bold":true}],["                                                                                                                                            ",{}],["|",{"inverse":true}],["   ",{}]],"4":[["   ",{}],["+",{"fg":2,"bold":true}],["FirstRun(void)                                                                                                                                          ",{}],["|",{"inverse":true}],["   ",{}]],"5":[["   ",{}],["+",{"fg":2,"bold":true}],["FirstRun2(void)                                                                                                                                         ",{}],["|",{"inverse":true}],["   ",{}]],"6":[["                                                                                                                                                            ",{}],["|",{"inverse":true}],["   ",{}]],"7":[["▼",{"fg":3,"bold":true}],[" Last",{"fg":5,"bold":true}],[" : ",{}],["struct",{"fg":2,"bold":true}],["                                                                                                                                             ",{}],["|",{"inverse":true}],["   ",{}]],"8":[["    [functions]",{"fg":6,"bold":true}],["                                                                                                                                             ",{}],["|",{"inverse":true}],["   ",{}]],"9":[["   ",{}],["+",{"fg":2,"bold":true}],["FirstRun(void)                                                                                                                                          ",{}],["|",{"inverse":true}],["   ",{}]],"10":[["   ",{}],["+",{"fg":2,"bold":true}],["FirstRun2(void)                                                                                                                                         ",{}],["|",{"inverse":true}],["   ",{}]],"11":[["   ",{}],["+",{"fg":2,"bold":true}],["~Last()                                                                                                                                                 ",{}],["|",{"inverse":true}],["   ",{}]],"12":[["   ",{}],["+",{"fg":2,"bold":true}],["SecondRun(void)                                                                                                                                         ",{}],["|",{"inverse":true}],["   ",{}]],"13":[["   ",{}],["+",{"fg":2,"bold":true}],["SecondRun2(void)                             = 1 \" WK01                                                                              ",{}],["|",{"inverse":true}],[" 14 ",{"fg":3,"bold":true}],["▸ .vim/",{"fg":6,"bold":true}],["           ",{}]]},"cursor":{"x":49,"y":13,"visible":false}}],[0.013118,{"lines":{"0":[["\" Press <F1> for help",{"fg":6,"bold":true}],["                                                                                                                                       ",{}],["|",{"inverse":true}],["1",{"fg":3,"bold":true}],["|",{"inverse":true}],[" ",{"fg":3,"bold":true}]],"1":[["                                                                                                                                                            ",{}],["|",{"inverse":true}],["@",{"fg":4,"bold":true}],["|",{"inverse":true}],[" ",{"fg":3,"bold":true}]],"2":[["▼",{"fg":3,"bold":true}],[" First",{"fg":5,"bold":true}],[" : ",{}],["struct",{"fg":2,"bold":true}],["                                                                                                                                            ",{}],["|",{"inverse":true}],["@",{"fg":4,"bold":true}],["|",{"inverse":true}],[" ",{"fg":3,"bold":true}]],"3":[["    [prototypes]",{"fg":6,"bold":true}],["                                                                                                                                            ",{}],["|",{"inverse":true}],["@",{"fg":4,"bold":true}],["|",{"inverse":true}],[" ",{"fg":3,"bold":true}]],"4":[["   ",{}],["+",{"fg":2,"bold":true}],["FirstRun(void)                                                                                                                                          ",{}],["|",{"inverse":true}],["@",{"fg":4,"bold":true}],["|",{"inverse":true}],[" ",{"fg":3,"bold":true}]],"5":[["   ",{}],["+",{"fg":2,"bold":true}],["FirstRun2(void)                                                                                                                                         ",{}],["|",{"inverse":true}],["@",{"fg":4,"bold":true}],["|",{"inverse":true}],[" ",{"fg":3,"bold":true}]],"6":[["                                                                                                                                                            ",{}],["|",{"inverse":true}],["@",{"fg":4,"bold":true}],["|",{"inverse":true}],[" ",{"fg":3,"bold":true}]],"7":[["▼",{"fg":3,"bold":true}],[" Last",{"fg":5,"bold":true}],[" : ",{}],["struct",{"fg":2,"bold":true}],["                                                                                                                                             ",{}],["|",{"inverse":true}],["@",{"fg":4,"bold":true}],["|",{"inverse":true}],[" ",{"fg":3,"bold":true}]],"8":[["    [functions]",{"fg":6,"bold":true}],["                                                                                                                                             ",{}],["|",{"inverse":true}],["@",{"fg":4,"bold":true}],["|",{"inverse":true}],[" ",{"fg":3,"bold":true}]],"9":[["   ",{}],["+",{"fg":2,"bold":true}],["FirstRun(void)                                                                                                                                          ",{}],["|",{"inverse":true}],["@",{"fg":4,"bold":true}],["|",{"inverse":true}],[" ",{"fg":3,"bold":true}]],"10":[["   ",{}],["+",{"fg":2,"bold":true}],["FirstRun2(void)                                                                                                                                         ",{}],["|",{"inverse":true}],["@",{"fg":4,"bold":true}],["|",{"inverse":true}],[" ",{"fg":3,"bold":true}]],"11":[["   ",{}],["+",{"fg":2,"bold":true}],["~Last()                                                                                                                                                 ",{}],["|",{"inverse":true}],["@",{"fg":4,"bold":true}],["|",{"inverse":true}],[" ",{"fg":3,"bold":true}]],"12":[["   ",{}],["+",{"fg":2,"bold":true}],["SecondRun(void)                                                                                                                                         ",{}],["|",{"inverse":true}],["@",{"fg":4,"bold":true}],["|",{"inverse":true}],[" ",{"fg":3,"bold":true}]],"13":[["   ",{}],["+",{"fg":2,"bold":true}],["SecondRun2(void)                                                                                                                                        ",{}],["|",{"inverse":true}],["@",{"fg":4,"bold":true}],["|",{"inverse":true}],[" ",{"fg":3,"bold":true}]],"14":[["                                                                                                                                                            ",{}],["|",{"inverse":true}],["@",{"fg":4,"bold":true}],["|",{"inverse":true}],[" ",{"fg":3,"bold":true}]],"15":[["▼",{"fg":3,"bold":true}],[" Second",{"fg":5,"bold":true}],[" : ",{}],["struct",{"fg":2,"bold":true}],["                                                                                                                                           ",{}],["|",{"inverse":true}],["@",{"fg":4,"bold":true}],["|",{"inverse":true}],[" ",{"fg":3,"bold":true}]],"16":[["    [prototypes]",{"fg":6,"bold":true}],["                                                                                                                                            ",{}],["|",{"inverse":true}],["@",{"fg":4,"bold":true}],["|",{"inverse":true}],[" ",{"fg":3,"bold":true}]],"17":[["   ",{}],["+",{"fg":2,"bold":true}],["SecondRun(void)                                                                                                                                         ",{}],["|",{"inverse":true}],["@",{"fg":4,"bold":true}],["|",{"inverse":true}],[" ",{"fg":3,"bold":true}]],"18":[["   ",{}],["+",{"fg":2,"bold":true}],["SecondRun2(void)                                                                                                                                        ",{}],["|",{"inverse":true}],["@",{"fg":4,"bold":true}],["|",{"inverse":true}],[" ",{"fg":3,"bold":true}]],"19":[["                                                                                                                                                            ",{}],["|",{"inverse":true}],["@",{"fg":4,"bold":true}],["|",{"inverse":true}],[" ",{"fg":3,"bold":true}]],"20":[["▼",{"fg":3,"bold":true}],[" ",{}],["functions",{"fg":6,"bold":true}],["                                                                                                                                                 ",{}],["|",{"inverse":true}],["@",{"fg":4,"bold":true}],["|",{"inverse":true}],[" ",{"fg":3,"bold":true}]],"21":[["    main(int argc, char* argv[])                                                                                                                            ",{"underline":true}],["|",{"inverse":true}],["@",{"fg":4,"bold":true}],["|",{"inverse":true}],[" ",{"fg":3,"bold":true}]],"22":[["~                                                                                                                                                           ",{"fg":4,"bold":true}],["|",{"inverse":true}],["@",{"fg":4,"bold":true}],["|",{"inverse":true}],[" ",{"fg":3,"bold":true}]],"23":[["~                                                                                                                                                           ",{"fg":4,"bold":true}],["|",{"inverse":true}],["@",{"fg":4,"bold":true}],["|",{"inverse":true}],[" ",{"fg":3,"bold":true}]],"24":[["~                                                                                                                                                           ",{"fg":4,"bold":true}],["|",{"inverse":true}],["@",{"fg":4,"bold":true}],["|",{"inverse":true}],[" ",{"fg":3,"bold":true}]],"25":[["~                                                                                                                                                           ",{"fg":4,"bold":true}],["|",{"inverse":true}],["@",{"fg":4,"bold":true}],["|",{"inverse":true}],[" ",{"fg":3,"bold":true}]],"26":[["~                                                                                                                                                           ",{"fg":4,"bold":true}],["|",{"inverse":true}],["@",{"fg":4,"bold":true}],["|",{"inverse":true}],[" ",{"fg":3,"bold":true}]],"27":[["~                                                                                                                                                           ",{"fg":4,"bold":true}],["|",{"inverse":true}],["@",{"fg":4,"bold":true}],["|",{"inverse":true}],[" ",{"fg":3,"bold":true}]],"28":[["~                                                                                                                                                           ",{"fg":4,"bold":true}],["|",{"inverse":true}],["@",{"fg":4,"bold":true}],["|",{"inverse":true}],[" ",{"fg":3,"bold":true}]],"29":[["~                                                                                                                                                           ",{"fg":4,"bold":true}],["|",{"inverse":true}],["@",{"fg":4,"bold":true}],["|",{"inverse":true}],[" ",{"fg":3,"bold":true}]],"30":[["~                                                                                                                                                           ",{"fg":4,"bold":true}],["|",{"inverse":true}],["@",{"fg":4,"bold":true}],["|",{"inverse":true}],[" ",{"fg":3,"bold":true}]],"31":[["~                                                                                                                                                           ",{"fg":4,"bold":true}],["|",{"inverse":true}],["@",{"fg":4,"bold":true}],["|",{"inverse":true}],[" ",{"fg":3,"bold":true}]],"32":[["~                                                                                                                                                           ",{"fg":4,"bold":true}],["|",{"inverse":true}],["@",{"fg":4,"bold":true}],["|",{"inverse":true}],[" ",{"fg":3,"bold":true}]],"33":[["~                                                                                                                                                           ",{"fg":4,"bold":true}],["|",{"inverse":true}],["@",{"fg":4,"bold":true}],["|",{"inverse":true}],[" ",{"fg":3,"bold":true}]],"34":[["~                                                                                                                                                           ",{"fg":4,"bold":true}],["|",{"inverse":true}],["@",{"fg":4,"bold":true}],["|",{"inverse":true}],[" ",{"fg":3,"bold":true}]],"35":[["~                                                                                                                                                           ",{"fg":4,"bold":true}],["|",{"inverse":true}],["@",{"fg":4,"bold":true}],["|",{"inverse":true}],["~",{"fg":4,"bold":true}]],"36":[["~                                                                                                                                                           ",{"fg":4,"bold":true}],["|",{"inverse":true}],["@",{"fg":4,"bold":true}],["|",{"inverse":true}],["~",{"fg":4,"bold":true}]],"37":[["~                                                                                                                                                           ",{"fg":4,"bold":true}],["|",{"inverse":true}],["@",{"fg":4,"bold":true}],["|",{"inverse":true}],["~",{"fg":4,"bold":true}]],"38":[["~                                                                                                                                                           ",{"fg":4,"bold":true}],["|",{"inverse":true}],["@",{"fg":4,"bold":true}],["|",{"inverse":true}],["~",{"fg":4,"bold":true}]],"39":[["~                                                                                                                                                           ",{"fg":4,"bold":true}],["|",{"inverse":true}],["@",{"fg":4,"bold":true}],["|",{"inverse":true}],["~",{"fg":4,"bold":true}]],"40":[["~                                                                                                                                                           ",{"fg":4,"bold":true}],["|",{"inverse":true}],["@",{"fg":4,"bold":true}],["|",{"inverse":true}],["~",{"fg":4,"bold":true}]],"41":[["~                                                                                                                                                           ",{"fg":4,"bold":true}],["|",{"inverse":true}],["@",{"fg":4,"bold":true}],["|",{"inverse":true}],["~",{"fg":4,"bold":true}]],"42":[["~                                                                                                                                                           ",{"fg":4,"bold":true}],["|",{"inverse":true}],["@",{"fg":4,"bold":true}],["|",{"inverse":true}],["~",{"fg":4,"bold":true}]],"43":[["~                                                                                                                                                           ",{"fg":4,"bold":true}],["|",{"inverse":true}],["@",{"fg":4,"bold":true}],["|",{"inverse":true}],["~",{"fg":4,"bold":true}]],"44":[["~                                                                                                                                                           ",{"fg":4,"bold":true}],["|",{"inverse":true}],["@",{"fg":4,"bold":true}],["|",{"inverse":true}],["~",{"fg":4,"bold":true}]],"45":[["~                                                                                                                                                           ",{"fg":4,"bold":true}],["|",{"inverse":true}],["@",{"fg":4,"bold":true}],["|",{"inverse":true}],["~",{"fg":4,"bold":true}]],"46":[[" Tagbar ",{"bold":true}],[" Tree                                                                                                                                               ",{}],[" ",{"bold":true,"inverse":true}],["> ",{"inverse":true}],[">",{"bold":true}]]},"cursor":{"x":4,"y":21,"visible":true}}],[1.567651,{"lines":{"47":[["                                                                                                                                                     k          ",{}]]},"cursor":{"visible":false}}],[0.018719,{"lines":{"20":[["▼",{"fg":3,"bold":true,"underline":true}],[" ",{"underline":true}],["functions",{"fg":6,"bold":true,"underline":true}],["                                                                                                                                                 ",{"underline":true}],["|",{"inverse":true}],["@",{"fg":4,"bold":true}],["|",{"inverse":true}],[" ",{"fg":3,"bold":true}]],"21":[["    main(int argc, char* argv[])                                                                                                                            ",{}],["|",{"inverse":true}],["@",{"fg":4,"bold":true}],["|",{"inverse":true}],[" ",{"fg":3,"bold":true}]],"47":[["                                                                                                                                                                ",{}]]},"cursor":{"y":20,"visible":true}}],[0.231757,{"lines":{"47":[["                                                                                                                                                     k          ",{}]]},"cursor":{"visible":false}}],[0.020575,{"lines":{"19":[["                                                                                                                                                            ",{"underline":true}],["|",{"inverse":true}],["@",{"fg":4,"bold":true}],["|",{"inverse":true}],[" ",{"fg":3,"bold":true}]],"20":[["▼",{"fg":3,"bold":true}],[" ",{}],["functions",{"fg":6,"bold":true}],["                                                                                                                                                 ",{}],["|",{"inverse":true}],["@",{"fg":4,"bold":true}],["|",{"inverse":true}],[" ",{"fg":3,"bold":true}]],"47":[["                                                                                                                                                                ",{}]]},"cursor":{"x":0,"y":19,"visible":true}}],[0.009371000000000001,{"lines":{"47":[["                                                                                                                                                     k          ",{}]]},"cursor":{"visible":false}}],[0.050457,{"lines":{"18":[["   ",{"underline":true}],["+",{"fg":2,"bold":true,"underline":true}],["SecondRun2(void)                                                                                                                                        ",{"underline":true}],["|",{"inverse":true}],["@",{"fg":4,"bold":true}],["|",{"inverse":true}],[" ",{"fg":3,"bold":true}]],"19":[["                                                                                                                                                            ",{}],["|",{"inverse":true}],["@",{"fg":4,"bold":true}],["|",{"inverse":true}],[" ",{"fg":3,"bold":true}]],"47":[["                                                                                                                                                                ",{}]]},"cursor":{"x":4,"y":18,"visible":true}}],[0.016497,{"lines":{"17":[["   ",{"underline":true}],["+",{"fg":2,"bold":true,"underline":true}],["SecondRun(void)                                                                                                                                         ",{"underline":true}],["|",{"inverse":true}],["@",{"fg":4,"bold":true}],["|",{"inverse":true}],[" ",{"fg":3,"bold":true}]],"18":[["   ",{}],["+",{"fg":2,"bold":true}],["SecondRun2(void)                                                                                                                                        ",{}],["|",{"inverse":true}],["@",{"fg":4,"bold":true}],["|",{"inverse":true}],[" ",{"fg":3,"bold":true}]],"47":[["                                                                                                                                                     k          ",{}]]},"cursor":{"y":17,"visible":false}}],[0.013527,{"lines":{"16":[["    ",{"fg":6,"bold":true,"underline":true}],["[",{"fg":6,"bg":6,"bold":true}],["prototypes",{"fg":6,"bold":true,"underline":true}],["]",{"fg":6,"bg":6,"bold":true}],["                                                                                                                                            ",{"underline":true}],["|",{"inverse":true}],["@",{"fg":4,"bold":true}],["|",{"inverse":true}],[" ",{"fg":3,"bold":true}]],"17":[["   ",{}],["+",{"fg":2,"bold":true}],["SecondRun(void)                                                                                                                                         ",{}],["|",{"inverse":true}],["@",{"fg":4,"bold":true}],["|",{"inverse":true}],[" ",{"fg":3,"bold":true}]],"47":[["                                                                                                                                                                ",{}]]},"cursor":{"y":16,"visible":true}}],[0.028225,{"lines":{"47":[["                                                                                                                                                     k          ",{}]]},"cursor":{"visible":false}}],[0.007081,{"lines":{"15":[["▼",{"fg":3,"bold":true,"underline":true}],[" Second",{"fg":5,"bold":true,"underline":true}],[" : ",{"underline":true}],["struct",{"fg":2,"bold":true,"underline":true}],["                                                                                                                                           ",{"underline":true}],["|",{"inverse":true}],["@",{"fg":4,"bold":true}],["|",{"inverse":true}],[" ",{"fg":3,"bold":true}]],"16":[["    [prototypes]",{"fg":6,"bold":true}],["                                                                                                                                            ",{}],["|",{"inverse":true}],["@",{"fg":4,"bold":true}],["|",{"inverse":true}],[" ",{"fg":3,"bold":true}]],"47":[["                                                                                                                                                                ",{}]]},"cursor":{"y":15,"visible":true}}],[0.018194,{"lines":{"47":[["                                                                                                                                                     k          ",{}]]},"cursor":{"visible":false}}],[0.032103,{"lines":{"14":[["                                                                                                                                                            ",{"underline":true}],["|",{"inverse":true}],["@",{"fg":4,"bold":true}],["|",{"inverse":true}],[" ",{"fg":3,"bold":true}]],"15":[["▼",{"fg":3,"bold":true}],[" Second",{"fg":5,"bold":true}],[" : ",{}],["struct",{"fg":2,"bold":true}],["                                                                                                                                           ",{}],["|",{"inverse":true}],["@",{"fg":4,"bold":true}],["|",{"inverse":true}],[" ",{"fg":3,"bold":true}]],"47":[["                                                                                                                                                                ",{}]]},"cursor":{"x":0,"y":14,"visible":true}}],[0.013232,{"lines":{"13":[["   ",{"underline":true}],["+",{"fg":2,"bold":true,"underline":true}],["SecondRun2(void)                                                                                                                                        ",{"underline":true}],["|",{"inverse":true}],["@",{"fg":4,"bold":true}],["|",{"inverse":true}],[" ",{"fg":3,"bold":true}]],"14":[["                                                                                                                                                            ",{}],["|",{"inverse":true}],["@",{"fg":4,"bold":true}],["|",{"inverse":true}],[" ",{"fg":3,"bold":true}]]},"cursor":{"x":4,"y":13}}],[0.045408,{"lines":{"47":[["                                                                                                                                                     k          ",{}]]},"cursor":{"visible":false}}],[0.011768,{"lines":{"12":[["   ",{"underline":true}],["+",{"fg":2,"bold":true,"underline":true}],["SecondRun(void)                                                                                                                                         ",{"underline":true}],["|",{"inverse":true}],["@",{"fg":4,"bold":true}],["|",{"inverse":true}],[" ",{"fg":3,"bold":true}]],"13":[["   ",{}],["+",{"fg":2,"bold":true}],["SecondRun2(void)                                                                                                                                        ",{}],["|",{"inverse":true}],["@",{"fg":4,"bold":true}],["|",{"inverse":true}],[" ",{"fg":3,"bold":true}]]},"cursor":{"y":12}}],[0.008876,{"lines":{"11":[["   ",{"underline":true}],["+",{"fg":2,"bold":true,"underline":true}],["~Last()                                                                                                                                                 ",{"underline":true}],["|",{"inverse":true}],["@",{"fg":4,"bold":true}],["|",{"inverse":true}],[" ",{"fg":3,"bold":true}]],"12":[["   ",{}],["+",{"fg":2,"bold":true}],["SecondRun(void)                                                                                                                                         ",{}],["|",{"inverse":true}],["@",{"fg":4,"bold":true}],["|",{"inverse":true}],[" ",{"fg":3,"bold":true}]],"47":[["                                                                                                                                                                ",{}]]},"cursor":{"y":11,"visible":true}}],[0.033417,{"lines":{"47":[["                                                                                                                                                     k          ",{}]]},"cursor":{"visible":false}}],[0.006466,{"lines":{"10":[["   ",{"underline":true}],["+",{"fg":2,"bold":true,"underline":true}],["FirstRun2(void)                                                                                                                                         ",{"underline":true}],["|",{"inverse":true}],["@",{"fg":4,"bold":true}],["|",{"inverse":true}],[" ",{"fg":3,"bold":true}]],"11":[["   ",{}],["+",{"fg":2,"bold":true}],["~Last()                                                                                                                                                 ",{}],["|",{"inverse":true}],["@",{"fg":4,"bold":true}],["|",{"inverse":true}],[" ",{"fg":3,"bold":true}]],"47":[["                                                                                                                                                                ",{}]]},"cursor":{"y":10,"visible":true}}],[0.018228,{"lines":{"47":[["                                                                                                                                                     k          ",{}]]},"cursor":{"visible":false}}],[0.031779,{"lines":{"9":[["   ",{"underline":true}],["+",{"fg":2,"bold":true,"underline":true}],["FirstRun(void)                                                                                                                                          ",{"underline":true}],["|",{"inverse":true}],["@",{"fg":4,"bold":true}],["|",{"inverse":true}],[" ",{"fg":3,"bold":true}]],"10":[["   ",{}],["+",{"fg":2,"bold":true}],["FirstRun2(void)                                                                                                                                         ",{}],["|",{"inverse":true}],["@",{"fg":4,"bold":true}],["|",{"inverse":true}],[" ",{"fg":3,"bold":true}]],"47":[["                                                                                                                                                                ",{}]]},"cursor":{"y":9,"visible":true}}],[0.016125,{"lines":{"8":[["    ",{"fg":6,"bold":true,"underline":true}],["[",{"fg":6,"bg":6,"bold":true}],["functions",{"fg":6,"bold":true,"underline":true}],["]",{"fg":6,"bg":6,"bold":true}],["                                                                                                                                             ",{"underline":true}],["|",{"inverse":true}],["@",{"fg":4,"bold":true}],["|",{"inverse":true}],[" ",{"fg":3,"bold":true}]],"9":[["   ",{}],["+",{"fg":2,"bold":true}],["FirstRun(void)                                                                                                                                          ",{}],["|",{"inverse":true}],["@",{"fg":4,"bold":true}],["|",{"inverse":true}],[" ",{"fg":3,"bold":true}]]},"cursor":{"y":8}}],[0.04272,{"lines":{"47":[["                                                                                                                                                     k          ",{}]]},"cursor":{"visible":false}}],[0.012367,{"lines":{"7":[["▼",{"fg":3,"bold":true,"underline":true}],[" Last",{"fg":5,"bold":true,"underline":true}],[" : ",{"underline":true}],["struct",{"fg":2,"bold":true,"underline":true}],["                                                                                                                                             ",{"underline":true}],["|",{"inverse":true}],["@",{"fg":4,"bold":true}],["|",{"inverse":true}],[" ",{"fg":3,"bold":true}]],"8":[["    [functions]",{"fg":6,"bold":true}],["                                                                                                                                             ",{}],["|",{"inverse":true}],["@",{"fg":4,"bold":true}],["|",{"inverse":true}],[" ",{"fg":3,"bold":true}]]},"cursor":{"y":7}}],[0.009154000000000001,{"lines":{"6":[["                                                                                                                                                            ",{"underline":true}],["|",{"inverse":true}],["@",{"fg":4,"bold":true}],["|",{"inverse":true}],[" ",{"fg":3,"bold":true}]],"7":[["▼",{"fg":3,"bold":true}],[" Last",{"fg":5,"bold":true}],[" : ",{}],["struct",{"fg":2,"bold":true}],["                                                                                                                                             ",{}],["|",{"inverse":true}],["@",{"fg":4,"bold":true}],["|",{"inverse":true}],[" ",{"fg":3,"bold":true}]],"47":[["                                                                                                                                                                ",{}]]},"cursor":{"x":0,"y":6,"visible":true}}],[0.038642,{"lines":{"47":[["                                                                                                                                                     k          ",{}]]},"cursor":{"visible":false}}],[0.008017,{"lines":{"5":[["   ",{"underline":true}],["+",{"fg":2,"bold":true,"underline":true}],["FirstRun2(void)                                                                                                                                         ",{"underline":true}],["|",{"inverse":true}],["@",{"fg":4,"bold":true}],["|",{"inverse":true}],[" ",{"fg":3,"bold":true}]],"6":[["                                                                                                                                                            ",{}],["|",{"inverse":true}],["@",{"fg":4,"bold":true}],["|",{"inverse":true}],[" ",{"fg":3,"bold":true}]],"47":[["                                                                                                                                                                ",{}]]},"cursor":{"x":4,"y":5,"visible":true}}],[0.011173,{"lines":{"47":[["                                                                                                                                                     k          ",{}]]},"cursor":{"visible":false}}],[0.009320999999999999,{"lines":{"4":[["   ",{"underline":true}],["+",{"fg":2,"bold":true,"underline":true}],["FirstRun(void)                                                                                                                                          ",{"underline":true}],["|",{"inverse":true}],["@",{"fg":4,"bold":true}],["|",{"inverse":true}],[" ",{"fg":3,"bold":true}]],"5":[["   ",{}],["+",{"fg":2,"bold":true}],["FirstRun2(void)                                                                                                                                         ",{}],["|",{"inverse":true}],["@",{"fg":4,"bold":true}],["|",{"inverse":true}],[" ",{"fg":3,"bold":true}]],"47":[["                                                                                                                                                                ",{}]]},"cursor":{"y":4,"visible":true}}],[0.033372,{"lines":{"47":[["                                                                                                                                                     k          ",{}]]},"cursor":{"visible":false}}],[0.01033,{"lines":{"3":[["    ",{"fg":6,"bold":true,"underline":true}],["[",{"fg":6,"bg":6,"bold":true}],["prototypes",{"fg":6,"bold":true,"underline":true}],["]",{"fg":6,"bg":6,"bold":true}],["                                                                                                                                            ",{"underline":true}],["|",{"inverse":true}],["@",{"fg":4,"bold":true}],["|",{"inverse":true}],[" ",{"fg":3,"bold":true}]],"4":[["   ",{}],["+",{"fg":2,"bold":true}],["FirstRun(void)                                                                                                                                          ",{}],["|",{"inverse":true}],["@",{"fg":4,"bold":true}],["|",{"inverse":true}],[" ",{"fg":3,"bold":true}]],"47":[["                                                                                                                                                                ",{}]]},"cursor":{"y":3,"visible":true}}],[0.013992,{"lines":{"47":[["                                                                                                                                                     k          ",{}]]},"cursor":{"visible":false}}],[0.033329,{"lines":{"2":[["▼",{"fg":3,"bold":true,"underline":true}],[" First",{"fg":5,"bold":true,"underline":true}],[" : ",{"underline":true}],["struct",{"fg":2,"bold":true,"underline":true}],["                                                                                                                                            ",{"underline":true}],["|",{"inverse":true}],["@",{"fg":4,"bold":true}],["|",{"inverse":true}],[" ",{"fg":3,"bold":true}]],"3":[["    [prototypes]",{"fg":6,"bold":true}],["                                                                                                                                            ",{}],["|",{"inverse":true}],["@",{"fg":4,"bold":true}],["|",{"inverse":true}],[" ",{"fg":3,"bold":true}]],"47":[["                                                                                                                                                                ",{}]]},"cursor":{"y":2,"visible":true}}],[0.012784,{"lines":{"1":[["                                                                                                                                                            ",{"underline":true}],["|",{"inverse":true}],["@",{"fg":4,"bold":true}],["|",{"inverse":true}],[" ",{"fg":3,"bold":true}]],"2":[["▼",{"fg":3,"bold":true}],[" First",{"fg":5,"bold":true}],[" : ",{}],["struct",{"fg":2,"bold":true}],["                                                                                                                                            ",{}],["|",{"inverse":true}],["@",{"fg":4,"bold":true}],["|",{"inverse":true}],[" ",{"fg":3,"bold":true}]]},"cursor":{"x":0,"y":1}}],[0.047568,{"lines":{"47":[["                                                                                                                                                     k          ",{}]]},"cursor":{"visible":false}}],[0.005563,{"lines":{"0":[["\" Press <F1> for help",{"fg":6,"bold":true,"underline":true}],["                                                                                                                                       ",{"underline":true}],["|",{"inverse":true}],["1",{"fg":3,"bold":true}],["|",{"inverse":true}],[" ",{"fg":3,"bold":true}]],"1":[["                                                                                                                                                            ",{}],["|",{"inverse":true}],["@",{"fg":4,"bold":true}],["|",{"inverse":true}],[" ",{"fg":3,"bold":true}]],"47":[["                                                                                                                                                                ",{}]]},"cursor":{"x":4,"y":0,"visible":true}}],[0.200441,{"lines":{"47":[["                                                                                                                                                     j          ",{}]]},"cursor":{"visible":false}}],[0.021204,{"lines":{"0":[["\" Press <F1> for help",{"fg":6,"bold":true}],["                                                                                                                                       ",{}],["|",{"inverse":true}],["1",{"fg":3,"bold":true}],["|",{"inverse":true}],[" ",{"fg":3,"bold":true}]],"1":[["                                                                                                                                                            ",{"underline":true}],["|",{"inverse":true}],["@",{"fg":4,"bold":true}],["|",{"inverse":true}],[" ",{"fg":3,"bold":true}]],"47":[["                                                                                                                                                                ",{}]]},"cursor":{"x":0,"y":1,"visible":true}}],[0.228894,{"lines":{"47":[["                                                                                                                                                     j          ",{}]]},"cursor":{"visible":false}}],[0.021138,{"lines":{"1":[["                                                                                                                                                            ",{}],["|",{"inverse":true}],["@",{"fg":4,"bold":true}],["|",{"inverse":true}],[" ",{"fg":3,"bold":true}]],"2":[["▼",{"fg":3,"bold":true,"underline":true}],[" First",{"fg":5,"bold":true,"underline":true}],[" : ",{"underline":true}],["struct",{"fg":2,"bold":true,"underline":true}],["                                                                                                                                            ",{"underline":true}],["|",{"inverse":true}],["@",{"fg":4,"bold":true}],["|",{"inverse":true}],[" ",{"fg":3,"bold":true}]],"47":[["                                                                                                                                                                ",{}]]},"cursor":{"x":4,"y":2,"visible":true}}],[0.008515,{"lines":{"47":[["                                                                                                                                                     j          ",{}]]},"cursor":{"visible":false}}],[0.051684,{"lines":{"2":[["▼",{"fg":3,"bold":true}],[" First",{"fg":5,"bold":true}],[" : ",{}],["struct",{"fg":2,"bold":true}],["                                                                                                                                            ",{}],["|",{"inverse":true}],["@",{"fg":4,"bold":true}],["|",{"inverse":true}],[" ",{"fg":3,"bold":true}]],"3":[["    ",{"fg":6,"bold":true,"underline":true}],["[",{"fg":6,"bg":6,"bold":true}],["prototypes",{"fg":6,"bold":true,"underline":true}],["]",{"fg":6,"bg":6,"bold":true}],["                                                                                                                                            ",{"underline":true}],["|",{"inverse":true}],["@",{"fg":4,"bold":true}],["|",{"inverse":true}],[" ",{"fg":3,"bold":true}]],"47":[["                                                                                                                                                                ",{}]]},"cursor":{"y":3,"visible":true}}],[0.014867,{"lines":{"3":[["    [prototypes]",{"fg":6,"bold":true}],["                                                                                                                                            ",{}],["|",{"inverse":true}],["@",{"fg":4,"bold":true}],["|",{"inverse":true}],[" ",{"fg":3,"bold":true}]],"4":[["   ",{"underline":true}],["+",{"fg":2,"bold":true,"underline":true}],["FirstRun(void)                                                                                                                                          ",{"underline":true}],["|",{"inverse":true}],["@",{"fg":4,"bold":true}],["|",{"inverse":true}],[" ",{"fg":3,"bold":true}]],"47":[["                                                                                                                                                     j          ",{}]]},"cursor":{"y":4,"visible":false}}],[0.009143,{"lines":{"4":[["   ",{}],["+",{"fg":2,"bold":true}],["FirstRun(void)                                                                                                                                          ",{}],["|",{"inverse":true}],["@",{"fg":4,"bold":true}],["|",{"inverse":true}],[" ",{"fg":3,"bold":true}]],"5":[["   ",{"underline":true}],["+",{"fg":2,"bold":true,"underline":true}],["FirstRun2(void)                                                                                                                                         ",{"underline":true}],["|",{"inverse":true}],["@",{"fg":4,"bold":true}],["|",{"inverse":true}],[" ",{"fg":3,"bold":true}]],"47":[["                                                                                                                                                                ",{}]]},"cursor":{"y":5,"visible":true}}],[0.03874,{"lines":{"47":[["                                                                                                                                                     j          ",{}]]},"cursor":{"visible":false}}],[0.003597,{"lines":{"5":[["   ",{}],["+",{"fg":2,"bold":true}],["FirstRun2(void)                                                                                                                                         ",{}],["|",{"inverse":true}],["@",{"fg":4,"bold":true}],["|",{"inverse":true}],[" ",{"fg":3,"bold":true}]],"6":[["                                                                                                                                                            ",{"underline":true}],["|",{"inverse":true}],["@",{"fg":4,"bold":true}],["|",{"inverse":true}],[" ",{"fg":3,"bold":true}]],"47":[["                                                                                                                                                                ",{}]]},"cursor":{"x":0,"y":6,"visible":true}}],[0.015835,{"lines":{"47":[["                                                                                                                                                     j          ",{}]]},"cursor":{"visible":false}}],[0.008906000000000001,{"lines":{"6":[["                                                                                                                                                            ",{}],["|",{"inverse":true}],["@",{"fg":4,"bold":true}],["|",{"inverse":true}],[" ",{"fg":3,"bold":true}]],"7":[["▼",{"fg":3,"bold":true,"underline":true}],[" Last",{"fg":5,"bold":true,"underline":true}],[" : ",{"underline":true}],["struct",{"fg":2,"bold":true,"underline":true}],["                                                                                                                                             ",{"underline":true}],["|",{"inverse":true}],["@",{"fg":4,"bold":true}],["|",{"inverse":true}],[" ",{"fg":3,"bold":true}]],"47":[["                                                                                                                                                                ",{}]]},"cursor":{"x":4,"y":7,"visible":true}}],[0.032476,{"lines":{"47":[["                                                                                                                                                     j          ",{}]]},"cursor":{"visible":false}}],[0.009672,{"lines":{"7":[["▼",{"fg":3,"bold":true}],[" Last",{"fg":5,"bold":true}],[" : ",{}],["struct",{"fg":2,"bold":true}],["                                                                                                                                             ",{}],["|",{"inverse":true}],["@",{"fg":4,"bold":true}],["|",{"inverse":true}],[" ",{"fg":3,"bold":true}]],"8":[["    ",{"fg":6,"bold":true,"underline":true}],["[",{"fg":6,"bg":6,"bold":true}],["functions",{"fg":6,"bold":true,"underline":true}],["]",{"fg":6,"bg":6,"bold":true}],["                                                                                                                                             ",{"underline":true}],["|",{"inverse":true}],["@",{"fg":4,"bold":true}],["|",{"inverse":true}],[" ",{"fg":3,"bold":true}]],"47":[["                                                                                                                                                                ",{}]]},"cursor":{"y":8,"visible":true}}],[0.015789,{"lines":{"47":[["                                                                                                                                                     j          ",{}]]},"cursor":{"visible":false}}],[0.031348,{"lines":{"8":[["    [functions]",{"fg":6,"bold":true}],["                                                                                                                                             ",{}],["|",{"inverse":true}],["@",{"fg":4,"bold":true}],["|",{"inverse":true}],[" ",{"fg":3,"bold":true}]],"9":[["   ",{"underline":true}],["+",{"fg":2,"bold":true,"underline":true}],["FirstRun(void)                                                                                                                                          ",{"underline":true}],["|",{"inverse":true}],["@",{"fg":4,"bold":true}],["|",{"inverse":true}],[" ",{"fg":3,"bold":true}]],"47":[["                                                                                                                                                                ",{}]]},"cursor":{"y":9,"visible":true}}],[0.01534,{"lines":{"9":[["   ",{}],["+",{"fg":2,"bold":true}],["FirstRun(void)                                                                                                                                          ",{}],["|",{"inverse":true}],["@",{"fg":4,"bold":true}],["|",{"inverse":true}],[" ",{"fg":3,"bold":true}]],"10":[["   ",{"underline":true}],["+",{"fg":2,"bold":true,"underline":true}],["FirstRun2(void)                                                                                                                                         ",{"underline":true}],["|",{"inverse":true}],["@",{"fg":4,"bold":true}],["|",{"inverse":true}],[" ",{"fg":3,"bold":true}]]},"cursor":{"y":10}}],[0.043142,{"lines":{"47":[["                                                                                                                                                     j          ",{}]]},"cursor":{"visible":false}}],[0.013077,{"lines":{"10":[["   ",{}],["+",{"fg":2,"bold":true}],["FirstRun2(void)                                                                                                                                         ",{}],["|",{"inverse":true}],["@",{"fg":4,"bold":true}],["|",{"inverse":true}],[" ",{"fg":3,"bold":true}]],"11":[["   ",{"underline":true}],["+",{"fg":2,"bold":true,"underline":true}],["~Last()                                                                                                                                                 ",{"underline":true}],["|",{"inverse":true}],["@",{"fg":4,"bold":true}],["|",{"inverse":true}],[" ",{"fg":3,"bold":true}]]},"cursor":{"y":11}}],[0.008656,{"lines":{"11":[["   ",{}],["+",{"fg":2,"bold":true}],["~Last()                                                                                                                                                 ",{}],["|",{"inverse":true}],["@",{"fg":4,"bold":true}],["|",{"inverse":true}],[" ",{"fg":3,"bold":true}]],"12":[["   ",{"underline":true}],["+",{"fg":2,"bold":true,"underline":true}],["SecondRun(void)                                                                                                                                         ",{"underline":true}],["|",{"inverse":true}],["@",{"fg":4,"bold":true}],["|",{"inverse":true}],[" ",{"fg":3,"bold":true}]],"47":[["                                                                                                                                                                ",{}]]},"cursor":{"y":12,"visible":true}}],[0.033074,{"lines":{"47":[["                                                                                                                                                     j          ",{}]]},"cursor":{"visible":false}}],[0.006914,{"lines":{"12":[["   ",{}],["+",{"fg":2,"bold":true}],["SecondRun(void)                                                                                                                                         ",{}],["|",{"inverse":true}],["@",{"fg":4,"bold":true}],["|",{"inverse":true}],[" ",{"fg":3,"bold":true}]],"13":[["   ",{"underline":true}],["+",{"fg":2,"bold":true,"underline":true}],["SecondRun2(void)                                                                                                                                        ",{"underline":true}],["|",{"inverse":true}],["@",{"fg":4,"bold":true}],["|",{"inverse":true}],[" ",{"fg":3,"bold":true}]],"47":[["                                                                                                                                                                ",{}]]},"cursor":{"y":13,"visible":true}}],[0.018455,{"lines":{"47":[["                                                                                                                                                     j          ",{}]]},"cursor":{"visible":false}}],[0.033639,{"lines":{"13":[["   ",{}],["+",{"fg":2,"bold":true}],["SecondRun2(void)                                                                                                                                        ",{}],["|",{"inverse":true}],["@",{"fg":4,"bold":true}],["|",{"inverse":true}],[" ",{"fg":3,"bold":true}]],"14":[["                                                                                                                                                            ",{"underline":true}],["|",{"inverse":true}],["@",{"fg":4,"bold":true}],["|",{"inverse":true}],[" ",{"fg":3,"bold":true}]],"47":[["                                                                                                                                                                ",{}]]},"cursor":{"x":0,"y":14,"visible":true}}],[0.010038,{"lines":{"14":[["                                                                                                                                                            ",{}],["|",{"inverse":true}],["@",{"fg":4,"bold":true}],["|",{"inverse":true}],[" ",{"fg":3,"bold":true}]],"15":[["▼",{"fg":3,"bold":true,"underline":true}],[" Second",{"fg":5,"bold":true,"underline":true}],[" : ",{"underline":true}],["struct",{"fg":2,"bold":true,"underline":true}],["                                                                                                                                           ",{"underline":true}],["|",{"inverse":true}],["@",{"fg":4,"bold":true}],["|",{"inverse":true}],[" ",{"fg":3,"bold":true}]]},"cursor":{"x":4,"y":15}}],[0.053811,{"lines":{"47":[["                                                                                                                                                     j          ",{}]]},"cursor":{"visible":false}}],[0.01101,{"lines":{"15":[["▼",{"fg":3,"bold":true}],[" Second",{"fg":5,"bold":true}],[" : ",{}],["struct",{"fg":2,"bold":true}],["                                                                                                                                           ",{}],["|",{"inverse":true}],["@",{"fg":4,"bold":true}],["|",{"inverse":true}],[" ",{"fg":3,"bold":true}]],"16":[["    ",{"fg":6,"bold":true,"underline":true}],["[",{"fg":6,"bg":6,"bold":true}],["prototypes",{"fg":6,"bold":true,"underline":true}],["]",{"fg":6,"bg":6,"bold":true}],["                                                                                                                                            ",{"underline":true}],["|",{"inverse":true}],["@",{"fg":4,"bold":true}],["|",{"inverse":true}],[" ",{"fg":3,"bold":true}]]},"cursor":{"y":16}}],[0.009542999999999999,{"lines":{"16":[["    [prototypes]",{"fg":6,"bold":true}],["                                                                                                                                            ",{}],["|",{"inverse":true}],["@",{"fg":4,"bold":true}],["|",{"inverse":true}],[" ",{"fg":3,"bold":true}]],"17":[["   ",{"underline":true}],["+",{"fg":2,"bold":true,"underline":true}],["SecondRun(void)                                                                                                                                         ",{"underline":true}],["|",{"inverse":true}],["@",{"fg":4,"bold":true}],["|",{"inverse":true}],[" ",{"fg":3,"bold":true}]],"47":[["                                                                                                                                                                ",{}]]},"cursor":{"y":17,"visible":true}}],[0.381792,{"lines":{"0":[["\" Press <F1> for hel",{"fg":6,"bold":true}],["|",{"inverse":true}],["120 ",{"fg":3,"bold":true}],["Sunday: >                                                                                                       ",{}],["|",{"inverse":true}],["                  ",{}],["|",{"inverse":true}],["1",{"fg":3,"bold":true}],["|",{"inverse":true}],[" ",{"fg":3,"bold":true}]],"1":[["                    ",{}],["|",{"inverse":true}],["121 ",{"fg":3,"bold":true}],["  let g:calendar_wruler = 'Su Mo Tu We Th Fr Sa'                                                                ",{}],["|",{"inverse":true}],["                  ",{}],["|",{"inverse":true}],["@",{"fg":4,"bold":true}],["|",{"inverse":true}],[" ",{"fg":3,"bold":true}]],"2":[["▼",{"fg":3,"bold":true}],[" First",{"fg":5,"bold":true}],[" : ",{}],["struct",{"fg":2,"bold":true}],["    ",{}],["|",{"inverse":true}],["122 ",{"fg":3,"bold":true}],["<                                                                                                               ",{}],["|",{"inverse":true}],["                  ",{}],["|",{"inverse":true}],["@",{"fg":4,"bold":true}],["|",{"inverse":true}],[" ",{"fg":3,"bold":true}]],"3":[["    [prototypes]",{"fg":6,"bold":true}],["    ",{}],["|",{"inverse":true}],["123 ",{"fg":3,"bold":true}],["                                                                                                                ",{}],["|",{"inverse":true}],["                  ",{}],["|",{"inverse":true}],["@",{"fg":4,"bold":true}],["|",{"inverse":true}],[" ",{"fg":3,"bold":true}]],"4":[["   ",{}],["+",{"fg":2,"bold":true}],["FirstRun(void)  ",{}],["|",{"inverse":true}],["124 ",{"fg":3,"bold":true}],["                                                *g:calendar_monday*                                             ",{}],["|",{"inverse":true}],["                  ",{}],["|",{"inverse":true}],["@",{"fg":4,"bold":true}],["|",{"inverse":true}],[" ",{"fg":3,"bold":true}]],"5":[["   ",{}],["+",{"fg":2,"bold":true}],["FirstRun2(void) ",{}],["|",{"inverse":true}],["125 ",{"fg":3,"bold":true}],["To make the week start on Monday rather than Sunday, set this variable.  Note                                   ",{}],["|",{"inverse":true}],["                  ",{}],["|",{"inverse":true}],["@",{"fg":4,"bold":true}],["|",{"inverse":true}],[" ",{"fg":3,"bold":true}]],"6":[["                    ",{}],["|",{"inverse":true}],["126 ",{"fg":3,"bold":true}],["that the value of |g:calendar_wruler| is not affected by this; it should                                        ",{}],["|",{"inverse":true}],["                  ",{}],["|",{"inverse":true}],["@",{"fg":4,"bold":true}],["|",{"inverse":true}],[" ",{"fg":3,"bold":true}]],"7":[["▼",{"fg":3,"bold":true}],[" Last",{"fg":5,"bold":true}],[" : ",{}],["struct",{"fg":2,"bold":true}],["     ",{}],["|",{"inverse":true}],["127 ",{"fg":3,"bold":true}],["always begin with Sunday: >                                                                                     ",{}],["|",{"inverse":true}],["                  ",{}],["|",{"inverse":true}],["@",{"fg":4,"bold":true}],["|",{"inverse":true}],[" ",{"fg":3,"bold":true}]],"8":[["    [functions]",{"fg":6,"bold":true}],["     ",{}],["|",{"inverse":true}],["                                                                                                                                       ",{}],["|",{"inverse":true}],["@",{"fg":4,"bold":true}],["|",{"inverse":true}],[" ",{"fg":3,"bold":true}]],"9":[["   ",{}],["+",{"fg":2,"bold":true}],["FirstRun(void)  ",{}],["|",{"inverse":true}],["                                                                                                                                       ",{}],["|",{"inverse":true}],["@",{"fg":4,"bold":true}],["|",{"inverse":true}],[" ",{"fg":3,"bold":true}]],"10":[["   ",{}],["+",{"fg":2,"bold":true}],["FirstRun2(void) ",{}],["|",{"inverse":true}],["                                                                                                                                       ",{}],["|",{"inverse":true}],["@",{"fg":4,"bold":true}],["|",{"inverse":true}],[" ",{"fg":3,"bold":true}]],"11":[["   ",{}],["+",{"fg":2,"bold":true}],["~Last()         ",{}],["|",{"inverse":true}],["                                                                                                                                       ",{}],["|",{"inverse":true}],["@",{"fg":4,"bold":true}],["|",{"inverse":true}],[" ",{"fg":3,"bold":true}]],"12":[["   ",{}],["+",{"fg":2,"bold":true}],["SecondRun(void) ",{}],["|",{"inverse":true}],["                                                                                                                                       ",{}],["|",{"inverse":true}],["@",{"fg":4,"bold":true}],["|",{"inverse":true}],[" ",{"fg":3,"bold":true}]],"13":[["   ",{}],["+",{"fg":2,"bold":true}],["SecondRun2(void)",{}],["|",{"inverse":true}],["                                                                                                                                       ",{}],["|",{"inverse":true}],["@",{"fg":4,"bold":true}],["|",{"inverse":true}],[" ",{"fg":3,"bold":true}]],"14":[["                    ",{}],["|",{"inverse":true}],["                                                                                                                                       ",{}],["|",{"inverse":true}],["@",{"fg":4,"bold":true}],["|",{"inverse":true}],[" ",{"fg":3,"bold":true}]],"15":[["▼",{"fg":3,"bold":true}],[" Second",{"fg":5,"bold":true}],[" : ",{}],["struct",{"fg":2,"bold":true}],["   ",{}],["|",{"inverse":true}],["                                                                                                                                       ",{}],["|",{"inverse":true}],["@",{"fg":4,"bold":true}],["|",{"inverse":true}],[" ",{"fg":3,"bold":true}]],"16":[["    [prototypes]",{"fg":6,"bold":true}],["    ",{}],["|",{"inverse":true}],["                                                                                                                                       ",{}],["|",{"inverse":true}],["@",{"fg":4,"bold":true}],["|",{"inverse":true}],[" ",{"fg":3,"bold":true}]],"17":[["   ",{"underline":true}],["+",{"fg":2,"bold":true,"underline":true}],["SecondRun(void) ",{"underline":true}],["|",{"inverse":true}],["                                                                                                                                       ",{"underline":true}],["|",{"inverse":true}],["@",{"fg":4,"bold":true}],["|",{"inverse":true}],[" ",{"fg":3,"bold":true}]],"18":[["   ",{}],["+",{"fg":2,"bold":true}],["SecondRun2(void)",{}],["|",{"inverse":true}],["                                                                                                                                       ",{}],["|",{"inverse":true}],["@",{"fg":4,"bold":true}],["|",{"inverse":true}],[" ",{"fg":3,"bold":true}]],"19":[["                    ",{}],["|",{"inverse":true}],["                                                                                                                                       ",{}],["|",{"inverse":true}],["@",{"fg":4,"bold":true}],["|",{"inverse":true}],[" ",{"fg":3,"bold":true}]],"20":[["▼",{"fg":3,"bold":true}],[" ",{}],["functions",{"fg":6,"bold":true}],["         ",{}],["|",{"inverse":true}],["                                                                                                                                       ",{}],["|",{"inverse":true}],["@",{"fg":4,"bold":true}],["|",{"inverse":true}],[" ",{"fg":3,"bold":true}]],"21":[["    main(int argc, c",{}],["|",{"inverse":true}],["ar* argv[])                                                                                                                            ",{}],["|",{"inverse":true}],["@",{"fg":4,"bold":true}],["|",{"inverse":true}],[" ",{"fg":3,"bold":true}]],"22":[["~                   ",{"fg":4,"bold":true}],["|",{"inverse":true}],["                                                                                                                                       ",{"fg":4,"bold":true}],["|",{"inverse":true}],["@",{"fg":4,"bold":true}],["|",{"inverse":true}],[" ",{"fg":3,"bold":true}]],"23":[["~                   ",{"fg":4,"bold":true}],["|",{"inverse":true}],["                                                                                                                                       ",{"fg":4,"bold":true}],["|",{"inverse":true}],["@",{"fg":4,"bold":true}],["|",{"inverse":true}],[" ",{"fg":3,"bold":true}]],"24":[["~                   ",{"fg":4,"bold":true}],["|",{"inverse":true}],["                                                                                                                                       ",{"fg":4,"bold":true}],["|",{"inverse":true}],["@",{"fg":4,"bold":true}],["|",{"inverse":true}],[" ",{"fg":3,"bold":true}]],"25":[["~                   ",{"fg":4,"bold":true}],["|",{"inverse":true}],["                                                                                                                                       ",{"fg":4,"bold":true}],["|",{"inverse":true}],["@",{"fg":4,"bold":true}],["|",{"inverse":true}],[" ",{"fg":3,"bold":true}]],"26":[["~                   ",{"fg":4,"bold":true}],["|",{"inverse":true}],["                                                                                                                                       ",{"fg":4,"bold":true}],["|",{"inverse":true}],["@",{"fg":4,"bold":true}],["|",{"inverse":true}],[" ",{"fg":3,"bold":true}]],"27":[["~                   ",{"fg":4,"bold":true}],["|",{"inverse":true}],["                                                                                                                                       ",{"fg":4,"bold":true}],["|",{"inverse":true}],["@",{"fg":4,"bold":true}],["|",{"inverse":true}],[" ",{"fg":3,"bold":true}]],"28":[["~                   ",{"fg":4,"bold":true}],["|",{"inverse":true}],["                                                                                                                                       ",{"fg":4,"bold":true}],["|",{"inverse":true}],["@",{"fg":4,"bold":true}],["|",{"inverse":true}],[" ",{"fg":3,"bold":true}]],"29":[["~                   ",{"fg":4,"bold":true}],["|",{"inverse":true}],["                                                                                                                                       ",{"fg":4,"bold":true}],["|",{"inverse":true}],["@",{"fg":4,"bold":true}],["|",{"inverse":true}],[" ",{"fg":3,"bold":true}]],"30":[["~                   ",{"fg":4,"bold":true}],["|",{"inverse":true}],["                                                                                                                                       ",{"fg":4,"bold":true}],["|",{"inverse":true}],["@",{"fg":4,"bold":true}],["|",{"inverse":true}],[" ",{"fg":3,"bold":true}]],"31":[["~                   ",{"fg":4,"bold":true}],["|",{"inverse":true}],["                                                                                                                                       ",{"fg":4,"bold":true}],["|",{"inverse":true}],["@",{"fg":4,"bold":true}],["|",{"inverse":true}],[" ",{"fg":3,"bold":true}]],"32":[["~                   ",{"fg":4,"bold":true}],["|",{"inverse":true}],["                                                                                                                                       ",{"fg":4,"bold":true}],["|",{"inverse":true}],["@",{"fg":4,"bold":true}],["|",{"inverse":true}],[" ",{"fg":3,"bold":true}]],"33":[["~                   ",{"fg":4,"bold":true}],["|",{"inverse":true}],["                                                                                                                                       ",{"fg":4,"bold":true}],["|",{"inverse":true}],["@",{"fg":4,"bold":true}],["|",{"inverse":true}],[" ",{"fg":3,"bold":true}]],"34":[["~                   ",{"fg":4,"bold":true}],["|",{"inverse":true}],["                                                                                                                                       ",{"fg":4,"bold":true}],["|",{"inverse":true}],["@",{"fg":4,"bold":true}],["|",{"inverse":true}],[" ",{"fg":3,"bold":true}]],"35":[["~                   ",{"fg":4,"bold":true}],["|",{"inverse":true}],["                                                                                                                                       ",{"fg":4,"bold":true}],["|",{"inverse":true}],["@",{"fg":4,"bold":true}],["|",{"inverse":true}],["~",{"fg":4,"bold":true}]],"36":[["~                   ",{"fg":4,"bold":true}],["|",{"inverse":true}],["                                                                                                                                       ",{"fg":4,"bold":true}],["|",{"inverse":true}],["@",{"fg":4,"bold":true}],["|",{"inverse":true}],["~",{"fg":4,"bold":true}]],"37":[["~                   ",{"fg":4,"bold":true}],["|",{"inverse":true}],["                                                                                                                                       ",{"fg":4,"bold":true}],["|",{"inverse":true}],["@",{"fg":4,"bold":true}],["|",{"inverse":true}],["~",{"fg":4,"bold":true}]],"38":[["~                   ",{"fg":4,"bold":true}],["|",{"inverse":true}],["                                                                                                                                       ",{"fg":4,"bold":true}],["|",{"inverse":true}],["@",{"fg":4,"bold":true}],["|",{"inverse":true}],["~",{"fg":4,"bold":true}]],"39":[["~                   ",{"fg":4,"bold":true}],["|",{"inverse":true}],["                                                                                                                                       ",{"fg":4,"bold":true}],["|",{"inverse":true}],["@",{"fg":4,"bold":true}],["|",{"inverse":true}],["~",{"fg":4,"bold":true}]],"40":[["~                   ",{"fg":4,"bold":true}],["|",{"inverse":true}],["                                                                                                                                       ",{"fg":4,"bold":true}],["|",{"inverse":true}],["@",{"fg":4,"bold":true}],["|",{"inverse":true}],["~",{"fg":4,"bold":true}]],"41":[["~                   ",{"fg":4,"bold":true}],["|",{"inverse":true}],["                                                                                                                                       ",{"fg":4,"bold":true}],["|",{"inverse":true}],["@",{"fg":4,"bold":true}],["|",{"inverse":true}],["~",{"fg":4,"bold":true}]],"42":[["~                   ",{"fg":4,"bold":true}],["|",{"inverse":true}],["                                                                                                                                       ",{"fg":4,"bold":true}],["|",{"inverse":true}],["@",{"fg":4,"bold":true}],["|",{"inverse":true}],["~",{"fg":4,"bold":true}]],"43":[["~                   ",{"fg":4,"bold":true}],["|",{"inverse":true}],["                                                                                                                                       ",{"fg":4,"bold":true}],["|",{"inverse":true}],["@",{"fg":4,"bold":true}],["|",{"inverse":true}],["~",{"fg":4,"bold":true}]],"44":[["~                   ",{"fg":4,"bold":true}],["|",{"inverse":true}],["                                                                                                                                       ",{"fg":4,"bold":true}],["|",{"inverse":true}],["@",{"fg":4,"bold":true}],["|",{"inverse":true}],["~",{"fg":4,"bold":true}]],"45":[["~                   ",{"fg":4,"bold":true}],["|",{"inverse":true}],["                                                                                                                                       ",{"fg":4,"bold":true}],["|",{"inverse":true}],["@",{"fg":4,"bold":true}],["|",{"inverse":true}],["~",{"fg":4,"bold":true}]],"46":[[" Tagbar ",{"bold":true}],[" Tree       ",{}],[" ",{"bold":true,"inverse":true}],["                                                                                                                                       ",{}],[" ",{"bold":true,"inverse":true}],["> ",{"inverse":true}],[">",{"bold":true}]]},"cursor":{"x":21,"y":8,"visible":false}}],[0.012424,{"lines":{"0":[["\" Press <F1> for hel",{"fg":6,"bold":true}],["|",{"inverse":true}],["120 ",{"fg":3,"bold":true}],["Sunday: >                                                                                                       ",{}],["|",{"inverse":true}],["  1 ",{"fg":3,"bold":true}],["\" Press ? for help",{"fg":5,"bold":true}]],"1":[["                    ",{}],["|",{"inverse":true}],["121 ",{"fg":3,"bold":true}],["  let g:calendar_wruler = 'Su Mo Tu We Th Fr Sa'                                                                ",{}],["|",{"inverse":true}],["  2 ",{"fg":3,"bold":true}],["                  ",{}]],"2":[["▼",{"fg":3,"bold":true}],[" First",{"fg":5,"bold":true}],[" : ",{}],["struct",{"fg":2,"bold":true}],["    ",{}],["|",{"inverse":true}],["122 ",{"fg":3,"bold":true}],["<                                                                                                               ",{}],["|",{"inverse":true}],["  3 ",{"fg":3,"bold":true}],[".. (up a dir)",{"fg":6,"bold":true}],["     ",{}]],"3":[["    [prototypes]",{"fg":6,"bold":true}],["    ",{}],["|",{"inverse":true}],["123 ",{"fg":3,"bold":true}],["                                                                                                                ",{}],["|",{"inverse":true}],["  4 /root/",{"fg":3,"bold":true}],["            ",{}]],"4":[["   ",{}],["+",{"fg":2,"bold":true}],["FirstRun(void)  ",{}],["|",{"inverse":true}],["124 ",{"fg":3,"bold":true}],["                                                *g:calendar_monday*                                             ",{}],["|",{"inverse":true}],["  5 ",{"fg":3,"bold":true}],["▸ .asciinema/",{"fg":6,"bold":true}],["     ",{}]],"5":[["   ",{}],["+",{"fg":2,"bold":true}],["FirstRun2(void) ",{}],["|",{"inverse":true}],["125 ",{"fg":3,"bold":true}],["To make the week start on Monday rather than Sunday, set this variable.  Note                                   ",{}],["|",{"inverse":true}],["  6 ",{"fg":3,"bold":true}],["▸ .cache/",{"fg":6,"bold":true}],["     ",{}],["|",{"inverse":true}],["@",{"fg":4,"bold":true}],["|",{"inverse":true}],[" ",{"fg":3,"bold":true}]],"8":[["    [functions]",{"fg":6,"bold":true}],["     ",{}],["|",{"inverse":true}],["128 ",{"fg":3,"bold":true}],["  let g:calendar_monday = 1                                                                                     ",{}],["|",{"inverse":true}],["                  ",{}],["|",{"inverse":true}],["@",{"fg":4,"bold":true}],["|",{"inverse":true}],[" ",{"fg":3,"bold":true}]],"9":[["   ",{}],["+",{"fg":2,"bold":true}],["FirstRun(void)  ",{}],["|",{"inverse":true}],["129 ",{"fg":3,"bold":true}],["<                                                                                                               ",{}],["|",{"inverse":true}],["                  ",{}],["|",{"inverse":true}],["@",{"fg":4,"bold":true}],["|",{"inverse":true}],[" ",{"fg":3,"bold":true}]],"10":[["   ",{}],["+",{"fg":2,"bold":true}],["FirstRun2(void) ",{}],["|",{"inverse":true}],["130 ",{"fg":3,"bold":true}],["                                                                                                                ",{}],["|",{"inverse":true}],["                  ",{}],["|",{"inverse":true}],["@",{"fg":4,"bold":true}],["|",{"inverse":true}],[" ",{"fg":3,"bold":true}]],"11":[["   ",{}],["+",{"fg":2,"bold":true}],["~Last()         ",{}],["|",{"inverse":true}],["131 ",{"fg":3,"bold":true}],["                                                *g:calendar_weeknm*                                             ",{}],["|",{"inverse":true}],["                  ",{}],["|",{"inverse":true}],["@",{"fg":4,"bold":true}],["|",{"inverse":true}],[" ",{"fg":3,"bold":true}]],"12":[["   ",{}],["+",{"fg":2,"bold":true}],["SecondRun(void) ",{}],["|",{"inverse":true}],["132 ",{"fg":3,"bold":true}],["To show the week number, set this variable.  There are four valid settings: >                                   ",{}],["|",{"inverse":true}],["                  ",{}],["|",{"inverse":true}],["@",{"fg":4,"bold":true}],["|",{"inverse":true}],[" ",{"fg":3,"bold":true}]],"13":[["   ",{}],["+",{"fg":2,"bold":true}],["SecondRun2(void)",{}],["|",{"inverse":true}],["133 ",{"fg":3,"bold":true}],["  let g:calendar_weeknm = 1 \" WK01                                                                              ",{}],["|",{"inverse":true}],["                  ",{}],["|",{"inverse":true}],["@",{"fg":4,"bold":true}],["|",{"inverse":true}],[" ",{"fg":3,"bold":true}]],"14":[["                    ",{}],["|",{"inverse":true}],["134 ",{"fg":3,"bold":true}],["  let g:calendar_weeknm = 2 \" WK 1                                                                              ",{}],["|",{"inverse":true}],["                  ",{}],["|",{"inverse":true}],["@",{"fg":4,"bold":true}],["|",{"inverse":true}],[" ",{"fg":3,"bold":true}]],"15":[["▼",{"fg":3,"bold":true}],[" Second",{"fg":5,"bold":true}],[" : ",{}],["struct",{"fg":2,"bold":true}],["   ",{}],["|",{"inverse":true}],["135 ",{"fg":3,"bold":true}],["  let g:calendar_weeknm = 3 \" KW01                                                                              ",{}],["|",{"inverse":true}],["                  ",{}],["|",{"inverse":true}],["@",{"fg":4,"bold":true}],["|",{"inverse":true}],[" ",{"fg":3,"bold":true}]],"16":[["    [prototypes]",{"fg":6,"bold":true}],["    ",{}],["|",{"inverse":true}],["136 ",{"fg":3,"bold":true}],["  let g:calendar_weeknm = 4 \" KW 1                                                                              ",{}],["|",{"inverse":true}],["                  ",{}],["|",{"inverse":true}],["@",{"fg":4,"bold":true}],["|",{"inverse":true}],[" ",{"fg":3,"bold":true}]],"17":[["   ",{"underline":true}],["+",{"fg":2,"bold":true,"underline":true}],["SecondRun(void) ",{"underline":true}],["|",{"inverse":true}],["137 ",{"fg":3,"bold":true}],["  let g:calendar_weeknm = 5 \" 1                                                                                 ",{}],["|",{"inverse":true}],["                  ",{"underline":true}],["|",{"inverse":true}],["@",{"fg":4,"bold":true}],["|",{"inverse":true}],[" ",{"fg":3,"bold":true}]],"18":[["   ",{}],["+",{"fg":2,"bold":true}],["SecondRun2(void)",{}],["|",{"inverse":true}],["138 ",{"fg":3,"bold":true}],["<                                                                                                               ",{}],["|",{"inverse":true}],["                  ",{}],["|",{"inverse":true}],["@",{"fg":4,"bold":true}],["|",{"inverse":true}],[" ",{"fg":3,"bold":true}]],"19":[["                    ",{}],["|",{"inverse":true}],["139 ",{"fg":3,"bold":true}],["                                                                                                                ",{}],["|",{"inverse":true}],["                  ",{}],["|",{"inverse":true}],["@",{"fg":4,"bold":true}],["|",{"inverse":true}],[" ",{"fg":3,"bold":true}]],"20":[["▼",{"fg":3,"bold":true}],[" ",{}],["functions",{"fg":6,"bold":true}],["         ",{}],["|",{"inverse":true}],["140 ",{"fg":3,"bold":true}],["                                                *g:calendar_datetime*                                           ",{}],["|",{"inverse":true}],["                  ",{}],["|",{"inverse":true}],["@",{"fg":4,"bold":true}],["|",{"inverse":true}],[" ",{"fg":3,"bold":true}]],"21":[["    main(int argc, c",{}],["|",{"inverse":true}],["141 ",{"fg":3,"bold":true}],["To control display of the current date and time, set this variable.                                             ",{}],["|",{"inverse":true}],["                  ",{}],["|",{"inverse":true}],["@",{"fg":4,"bold":true}],["|",{"inverse":true}],[" ",{"fg":3,"bold":true}]],"22":[["~                   ",{"fg":4,"bold":true}],["|",{"inverse":true}],["142 ",{"fg":3,"bold":true}],["Acceptable values are 'title', 'statusline', and '': >                                                          ",{}],["|",{"inverse":true}],["                  ",{"fg":4,"bold":true}],["|",{"inverse":true}],["@",{"fg":4,"bold":true}],["|",{"inverse":true}],[" ",{"fg":3,"bold":true}]],"23":[["~                   ",{"fg":4,"bold":true}],["|",{"inverse":true}],["143 ",{"fg":3,"bold":true}],["  let g:calendar_datetime = 'title'                                                                             ",{}],["|",{"inverse":true}],["                  ",{"fg":4,"bold":true}],["|",{"inverse":true}],["@",{"fg":4,"bold":true}],["|",{"inverse":true}],[" ",{"fg":3,"bold":true}]],"24":[["~                   ",{"fg":4,"bold":true}],["|",{"inverse":true}],["144 ",{"fg":3,"bold":true}],["<                                                                                                               ",{}],["|",{"inverse":true}],["                  ",{"fg":4,"bold":true}],["|",{"inverse":true}],["@",{"fg":4,"bold":true}],["|",{"inverse":true}],[" ",{"fg":3,"bold":true}]],"25":[["~                   ",{"fg":4,"bold":true}],["|",{"inverse":true}],["145 ",{"fg":3,"bold":true}],["                                                *g:calendar_filetype*                                           ",{}],["|",{"inverse":true}],["                  ",{"fg":4,"bold":true}],["|",{"inverse":true}],["@",{"fg":4,"bold":true}],["|",{"inverse":true}],[" ",{"fg":3,"bold":true}]],"26":[["~                   ",{"fg":4,"bold":true}],["|",{"inverse":true}],["146 ",{"fg":3,"bold":true}],["To control the filetype of calendar entries, set this variable. It defaults to                                  ",{}],["|",{"inverse":true}],["                  ",{"fg":4,"bold":true}],["|",{"inverse":true}],["@",{"fg":4,"bold":true}],["|",{"inverse":true}],[" ",{"fg":3,"bold":true}]],"27":[["~                   ",{"fg":4,"bold":true}],["|",{"inverse":true}],["147 ",{"fg":3,"bold":true}],["'markdown'. Acceptable values are values that are acceptable for |filetype|                                     ",{}],["|",{"inverse":true}],["                  ",{"fg":4,"bold":true}],["|",{"inverse":true}],["@",{"fg":4,"bold":true}],["|",{"inverse":true}],[" ",{"fg":3,"bold":true}]],"28":[["~                   ",{"fg":4,"bold":true}],["|",{"inverse":true}],["148 ",{"fg":3,"bold":true}],["like e.g. 'markdown' or 'pandoc':                                                                               ",{}],["|",{"inverse":true}],["                  ",{"fg":4,"bold":true}],["|",{"inverse":true}],["@",{"fg":4,"bold":true}],["|",{"inverse":true}],[" ",{"fg":3,"bold":true}]],"29":[["~                   ",{"fg":4,"bold":true}],["|",{"inverse":true}],["149 ",{"fg":3,"bold":true}],["  let g:calendar_filetype = 'pandoc'                                                                            ",{}],["|",{"inverse":true}],["                  ",{"fg":4,"bold":true}],["|",{"inverse":true}],["@",{"fg":4,"bold":true}],["|",{"inverse":true}],[" ",{"fg":3,"bold":true}]],"30":[["~                   ",{"fg":4,"bold":true}],["|",{"inverse":true}],["150 ",{"fg":3,"bold":true}],["                                                                                                                ",{}],["|",{"inverse":true}],["                  ",{"fg":4,"bold":true}],["|",{"inverse":true}],["@",{"fg":4,"bold":true}],["|",{"inverse":true}],[" ",{"fg":3,"bold":true}]],"31":[["~                   ",{"fg":4,"bold":true}],["|",{"inverse":true}],["151 ",{"fg":3,"bold":true}],["                                                                                                                ",{}],["|",{"inverse":true}],["                  ",{"fg":4,"bold":true}],["|",{"inverse":true}],["@",{"fg":4,"bold":true}],["|",{"inverse":true}],[" ",{"fg":3,"bold":true}]],"32":[["~                   ",{"fg":4,"bold":true}],["|",{"inverse":true}],["152 ",{"fg":3,"bold":true}],["HOOKS                                           *calendar-hooks*                                                ",{}],["|",{"inverse":true}],["                  ",{"fg":4,"bold":true}],["|",{"inverse":true}],["@",{"fg":4,"bold":true}],["|",{"inverse":true}],[" ",{"fg":3,"bold":true}]],"33":[["~                   ",{"fg":4,"bold":true}],["|",{"inverse":true}],["153 ",{"fg":3,"bold":true}],["                                                                                                                ",{}],["|",{"inverse":true}],["                  ",{"fg":4,"bold":true}],["|",{"inverse":true}],["@",{"fg":4,"bold":true}],["|",{"inverse":true}],[" ",{"fg":3,"bold":true}]],"34":[["~                   ",{"fg":4,"bold":true}],["|",{"inverse":true}],["154 ",{"fg":3,"bold":true}],["calendar.vim provides a number of hooks which allow you to run custom code on                                   ",{}],["|",{"inverse":true}],["                  ",{"fg":4,"bold":true}],["|",{"inverse":true}],["@",{"fg":4,"bold":true}],["|",{"inverse":true}],[" ",{"fg":3,"bold":true}]],"35":[["~                   ",{"fg":4,"bold":true}],["|",{"inverse":true}],["155 ",{"fg":3,"bold":true}],["certain events.  These are documented below.                                                                    ",{}],["|",{"inverse":true}],["                  ",{"fg":4,"bold":true}],["|",{"inverse":true}],["@",{"fg":4,"bold":true}],["|",{"inverse":true}],["~",{"fg":4,"bold":true}]],"36":[["~                   ",{"fg":4,"bold":true}],["|",{"inverse":true}],["156 ",{"fg":3,"bold":true}],["                                                                                                                ",{}],["|",{"inverse":true}],["                  ",{"fg":4,"bold":true}],["|",{"inverse":true}],["@",{"fg":4,"bold":true}],["|",{"inverse":true}],["~",{"fg":4,"bold":true}]],"37":[["~                   ",{"fg":4,"bold":true}],["|",{"inverse":true}],["157 ",{"fg":3,"bold":true}],["                                                *calendar_action*                                               ",{}],["|",{"inverse":true}],["                  ",{"fg":4,"bold":true}],["|",{"inverse":true}],["@",{"fg":4,"bold":true}],["|",{"inverse":true}],["~",{"fg":4,"bold":true}]],"38":[["~                   ",{"fg":4,"bold":true}],["|",{"inverse":true}],["158 ",{"fg":3,"bold":true}],["The function declared in the calendar_action variable is run when the user                                      ",{}],["|",{"inverse":true}],["                  ",{"fg":4,"bold":true}],["|",{"inverse":true}],["@",{"fg":4,"bold":true}],["|",{"inverse":true}],["~",{"fg":4,"bold":true}]],"39":[["~                   ",{"fg":4,"bold":true}],["|",{"inverse":true}],["159 ",{"fg":3,"bold":true}],["presses enter on a date.  Implement and set your function as follows: >                                         ",{}],["|",{"inverse":true}],["                  ",{"fg":4,"bold":true}],["|",{"inverse":true}],["@",{"fg":4,"bold":true}],["|",{"inverse":true}],["~",{"fg":4,"bold":true}]],"40":[["~                   ",{"fg":4,"bold":true}],["|",{"inverse":true}],["160 ",{"fg":3,"bold":true}],["  function MyCalAction(day,month,year,week,dir)                                                                 ",{}],["|",{"inverse":true}],["                  ",{"fg":4,"bold":true}],["|",{"inverse":true}],["@",{"fg":4,"bold":true}],["|",{"inverse":true}],["~",{"fg":4,"bold":true}]],"41":[["~                   ",{"fg":4,"bold":true}],["|",{"inverse":true}],["161 ",{"fg":3,"bold":true}],["    \" day   : day you actioned                                                                                  ",{}],["|",{"inverse":true}],["                  ",{"fg":4,"bold":true}],["|",{"inverse":true}],["@",{"fg":4,"bold":true}],["|",{"inverse":true}],["~",{"fg":4,"bold":true}]],"42":[["~                   ",{"fg":4,"bold":true}],["|",{"inverse":true}],["162 ",{"fg":3,"bold":true}],["    \" month : month you actioned                                                                                ",{}],["|",{"inverse":true}],["                  ",{"fg":4,"bold":true}],["|",{"inverse":true}],["@",{"fg":4,"bold":true}],["|",{"inverse":true}],["~",{"fg":4,"bold":true}]],"43":[["~                   ",{"fg":4,"bold":true}],["|",{"inverse":true}],["163 ",{"fg":3,"bold":true}],["    \" year  : year you actioned                                                                                 ",{}],["|",{"inverse":true}],["                  ",{"fg":4,"bold":true}],["|",{"inverse":true}],["@",{"fg":4,"bold":true}],["|",{"inverse":true}],["~",{"fg":4,"bold":true}]],"44":[["~                   ",{"fg":4,"bold":true}],["|",{"inverse":true}],["164 ",{"fg":3,"bold":true}],["    \" week  : day of week (Mo=1 ... Su=7)                                                                       ",{}],["|",{"inverse":true}],["                  ",{"fg":4,"bold":true}],["|",{"inverse":true}],["@",{"fg":4,"bold":true}],["|",{"inverse":true}],["~",{"fg":4,"bold":true}]],"45":[["~                   ",{"fg":4,"bold":true}],["|",{"inverse":true}],["165 ",{"fg":3,"bold":true}],["    \" dir   : direction of calendar                                                                             ",{"underline":true}],["|",{"inverse":true}],["                  ",{"fg":4,"bold":true}],["|",{"inverse":true}],["@",{"fg":4,"bold":true}],["|",{"inverse":true}],["~",{"fg":4,"bold":true}]],"46":[[" Tagbar ",{"bold":true}],[" Tree       ",{}],[" ",{"bold":true,"inverse":true}],[" ",{"inverse":true}],[".vim/bundle/calendar-vim/doc/",{}],["calendar.txt ",{"bold":true}],["                                                         75% ",{}],["│ LN 165",{"bold":true}],[":1  ",{}],[" ",{"inverse":true}],["                  ",{}],[" ",{"bold":true,"inverse":true}],["> ",{"inverse":true}],[">",{"bold":true}]]},"cursor":{"x":151,"y":5}}],[0.006233,{"lines":{"5":[["   ",{}],["+",{"fg":2,"bold":true}],["FirstRun2(void) ",{}],["|",{"inverse":true}],["125 ",{"fg":3,"bold":true}],["To make the week start on Monday rather than Sunday, set this variable.  Note                                   ",{}],["|",{"inverse":true}],["  6 ",{"fg":3,"bold":true}],["▸ .cache/",{"fg":6,"bold":true}],["         ",{}]],"6":[["                    ",{}],["|",{"inverse":true}],["126 ",{"fg":3,"bold":true}],["that the value of |g:calendar_wruler| is not affected by this; it should                                        ",{}],["|",{"inverse":true}],["  7 ",{"fg":3,"bold":true}],["▸ .config/",{"fg":6,"bold":true}],["        ",{}]],"7":[["▼",{"fg":3,"bold":true}],[" Last",{"fg":5,"bold":true}],[" : ",{}],["struct",{"fg":2,"bold":true}],["     ",{}],["|",{"inverse":true}],["127 ",{"fg":3,"bold":true}],["always begin with Sunday: >                                                                                     ",{}],["|",{"inverse":true}],["  8 ",{"fg":3,"bold":true}],["▸ .dbus/",{"fg":6,"bold":true}],["          ",{}]],"8":[["    [functions]",{"fg":6,"bold":true}],["     ",{}],["|",{"inverse":true}],["128 ",{"fg":3,"bold":true}],["  let g:calendar_monday = 1                                                                                     ",{}],["|",{"inverse":true}],["  9 ",{"fg":3,"bold":true}],["▸ .gnupg/",{"fg":6,"bold":true}],["         ",{}]],"9":[["   ",{}],["+",{"fg":2,"bold":true}],["FirstRun(void)  ",{}],["|",{"inverse":true}],["129 ",{"fg":3,"bold":true}],["<                                                                                                               ",{}],["|",{"inverse":true}],[" 10 ",{"fg":3,"bold":true}],["▸ .kde/",{"fg":6,"bold":true}],["           ",{}]],"10":[["   ",{}],["+",{"fg":2,"bold":true}],["FirstRun2(void) ",{}],["|",{"inverse":true}],["130 ",{"fg":3,"bold":true}],["                                                                                                                ",{}],["|",{"inverse":true}],[" 11 ",{"fg":3,"bold":true}],["▸ .local/",{"fg":6,"bold":true}],["         ",{}]],"11":[["   ",{}],["+",{"fg":2,"bold":true}],["~Last()         ",{}],["|",{"inverse":true}],["131 ",{"fg":3,"bold":true}],["                                                *g:calendar_weeknm*                                             ",{}],["|",{"inverse":true}],[" 12 ",{"fg":3,"bold":true}],["▸ .pki/",{"fg":6,"bold":true}],["           ",{}]],"12":[["   ",{}],["+",{"fg":2,"bold":true}],["SecondRun(void) ",{}],["|",{"inverse":true}],["132 ",{"fg":3,"bold":true}],["To show the week number, set this variable.  There are four valid settings: >                                   ",{}],["|",{"inverse":true}],[" 13 ",{"fg":3,"bold":true}],["▸ .ssh/",{"fg":6,"bold":true}],["           ",{}]],"13":[["   ",{}],["+",{"fg":2,"bold":true}],["SecondRun2(void)",{}],["|",{"inverse":true}],["133 ",{"fg":3,"bold":true}],["  let g:calendar_weeknm = 1 \" WK01                                                                              ",{}],["|",{"inverse":true}],[" 14 ",{"fg":3,"bold":true}],["▸ .vim/",{"fg":6,"bold":true}],["           ",{}]],"14":[["                    ",{}],["|",{"inverse":true}],["134 ",{"fg":3,"bold":true}],["  let g:calendar_weeknm = 2 \" WK 1                                                                              ",{}],["|",{"inverse":true}],[" 15 ",{"fg":3,"bold":true}],["▸ diary/",{"fg":6,"bold":true}],["          ",{}]],"15":[["▼",{"fg":3,"bold":true}],[" Second",{"fg":5,"bold":true}],[" : ",{}],["struct",{"fg":2,"bold":true}],["   ",{}],["|",{"inverse":true}],["135 ",{"fg":3,"bold":true}],["  let g:calendar_weeknm = 3 \" KW01                                                                              ",{}],["|",{"inverse":true}],[" 16 ",{"fg":3,"bold":true}],["▸ temp/",{"fg":6,"bold":true}],["           ",{}]],"16":[["    [prototypes]",{"fg":6,"bold":true}],["    ",{}],["|",{"inverse":true}],["136 ",{"fg":3,"bold":true}],["  let g:calendar_weeknm = 4 \" KW 1                                                                              ",{}],["|",{"inverse":true}],[" 17 ",{"fg":3,"bold":true}],["  .bash_history   ",{}]],"17":[["   ",{"underline":true}],["+",{"fg":2,"bold":true,"underline":true}],["SecondRun(void) ",{"underline":true}],["|",{"inverse":true}],["137 ",{"fg":3,"bold":true}],["  let g:calendar_weeknm = 5 \" 1                                                                                 ",{}],["|",{"inverse":true}],[" 18 ",{"fg":3,"bold":true}],["  .bash_logout    ",{}]],"18":[["   ",{}],["+",{"fg":2,"bold":true}],["SecondRun2(void)",{}],["|",{"inverse":true}],["138 ",{"fg":3,"bold":true}],["<                                                                                                               ",{}],["|",{"inverse":true}],[" 19 ",{"fg":3,"bold":true}],["  .bash_profile   ",{"underline":true}]],"19":[["                    ",{}],["|",{"inverse":true}],["139 ",{"fg":3,"bold":true}],["                                                                                                                ",{}],["|",{"inverse":true}],[" 20 ",{"fg":3,"bold":true}],["  .bashrc         ",{}]],"20":[["▼",{"fg":3,"bold":true}],[" ",{}],["functions",{"fg":6,"bold":true}],["         ",{}],["|",{"inverse":true}],["140 ",{"fg":3,"bold":true}],["                                                *g:calendar_datetime*                                           ",{}],["|",{"inverse":true}],[" 21 ",{"fg":3,"bold":true}],["  .cshrc          ",{}]],"21":[["    main(int argc, c",{}],["|",{"inverse":true}],["141 ",{"fg":3,"bold":true}],["To control display of the current date and time, set this variable.                                             ",{}],["|",{"inverse":true}],[" 22 ",{"fg":3,"bold":true}],["  .dmrc           ",{}]],"22":[["~                   ",{"fg":4,"bold":true}],["|",{"inverse":true}],["142 ",{"fg":3,"bold":true}],["Acceptable values are 'title', 'statusline', and '': >                                                          ",{}],["|",{"inverse":true}],[" 23 ",{"fg":3,"bold":true}],["  .esd_auth       ",{}]],"23":[["~                   ",{"fg":4,"bold":true}],["|",{"inverse":true}],["143 ",{"fg":3,"bold":true}],["  let g:calendar_datetime = 'title'                                                                             ",{}],["|",{"inverse":true}],[" 24 ",{"fg":3,"bold":true}],["  .gtkrc-2.0      ",{}]],"24":[["~                   ",{"fg":4,"bold":true}],["|",{"inverse":true}],["144 ",{"fg":3,"bold":true}],["<                                                                                                               ",{}],["|",{"inverse":true}],[" 25 ",{"fg":3,"bold":true}],["  .gtkrc-2.0-kde4 ",{}]],"25":[["~                   ",{"fg":4,"bold":true}],["|",{"inverse":true}],["145 ",{"fg":3,"bold":true}],["                                                *g:calendar_filetype*                                           ",{}],["|",{"inverse":true}],[" 26 ",{"fg":3,"bold":true}],["  .lesshst        ",{}]],"26":[["~                   ",{"fg":4,"bold":true}],["|",{"inverse":true}],["146 ",{"fg":3,"bold":true}],["To control the filetype of calendar entries, set this variable. It defaults to                                  ",{}],["|",{"inverse":true}],[" 27 ",{"fg":3,"bold":true}],["  .tcshrc         ",{}]],"27":[["~                   ",{"fg":4,"bold":true}],["|",{"inverse":true}],["147 ",{"fg":3,"bold":true}],["'markdown'. Acceptable values are values that are acceptable for |filetype|                                     ",{}],["|",{"inverse":true}],[" 28 ",{"fg":3,"bold":true}],["  .viminfo        ",{}]],"28":[["~                   ",{"fg":4,"bold":true}],["|",{"inverse":true}],["148 ",{"fg":3,"bold":true}],["like e.g. 'markdown' or 'pandoc':                                                                               ",{}],["|",{"inverse":true}],[" 29 ",{"fg":3,"bold":true}],["  .vimrc          ",{}]],"29":[["~                   ",{"fg":4,"bold":true}],["|",{"inverse":true}],["149 ",{"fg":3,"bold":true}],["  let g:calendar_filetype = 'pandoc'                                                                            ",{}],["|",{"inverse":true}],[" 30 ",{"fg":3,"bold":true}],["  .xsession-errors",{}]],"30":[["~                   ",{"fg":4,"bold":true}],["|",{"inverse":true}],["150 ",{"fg":3,"bold":true}],["                                                                                                                ",{}],["|",{"inverse":true}],[" 31 ",{"fg":3,"bold":true}],["  anaconda-ks.cfg ",{}]],"31":[["~                   ",{"fg":4,"bold":true}],["|",{"inverse":true}],["151 ",{"fg":3,"bold":true}],["                                                                                                                ",{}],["|",{"inverse":true}],[" 32 ",{"fg":3,"bold":true}],["  initial-setup-ks",{}]],"32":[["~                   ",{"fg":4,"bold":true}],["|",{"inverse":true}],["152 ",{"fg":3,"bold":true}],["HOOKS                                           *calendar-hooks*                                                ",{}],["|",{"inverse":true}],[" 33 ",{"fg":3,"bold":true}],["  test.c          ",{}]],"33":[["~                   ",{"fg":4,"bold":true}],["|",{"inverse":true}],["153 ",{"fg":3,"bold":true}],["                                                                                                                ",{}],["|",{"inverse":true}],[" 34 ",{"fg":3,"bold":true}],["  test.cpp        ",{}]],"34":[["~                   ",{"fg":4,"bold":true}],["|",{"inverse":true}],["154 ",{"fg":3,"bold":true}],["calendar.vim provides a number of hooks which allow you to run custom code on                                   ",{}],["|",{"inverse":true}],[" 35 ",{"fg":3,"bold":true}],["  .test.cpp.swp   ",{}]],"35":[["~                   ",{"fg":4,"bold":true}],["|",{"inverse":true}],["155 ",{"fg":3,"bold":true}],["certain events.  These are documented below.                                                                    ",{}],["|",{"inverse":true}],["~                     ",{"fg":4,"bold":true}]],"36":[["~                   ",{"fg":4,"bold":true}],["|",{"inverse":true}],["156 ",{"fg":3,"bold":true}],["                                                                                                                ",{}],["|",{"inverse":true}],["~                     ",{"fg":4,"bold":true}]],"37":[["~                   ",{"fg":4,"bold":true}],["|",{"inverse":true}],["157 ",{"fg":3,"bold":true}],["                                                *calendar_action*                                               ",{}],["|",{"inverse":true}],["~                     ",{"fg":4,"bold":true}]],"38":[["~                   ",{"fg":4,"bold":true}],["|",{"inverse":true}],["158 ",{"fg":3,"bold":true}],["The function declared in the calendar_action variable is run when the user                                      ",{}],["|",{"inverse":true}],["~                     ",{"fg":4,"bold":true}]],"39":[["~                   ",{"fg":4,"bold":true}],["|",{"inverse":true}],["159 ",{"fg":3,"bold":true}],["presses enter on a date.  Implement and set your function as follows: >                                         ",{}],["|",{"inverse":true}],["~                     ",{"fg":4,"bold":true}]],"40":[["~                   ",{"fg":4,"bold":true}],["|",{"inverse":true}],["160 ",{"fg":3,"bold":true}],["  function MyCalAction(day,month,year,week,dir)                                                                 ",{}],["|",{"inverse":true}],["~                     ",{"fg":4,"bold":true}]],"41":[["~                   ",{"fg":4,"bold":true}],["|",{"inverse":true}],["161 ",{"fg":3,"bold":true}],["    \" day   : day you actioned                                                                                  ",{}],["|",{"inverse":true}],["~                     ",{"fg":4,"bold":true}]],"42":[["~                   ",{"fg":4,"bold":true}],["|",{"inverse":true}],["162 ",{"fg":3,"bold":true}],["    \" month : month you actioned                                                                                ",{}],["|",{"inverse":true}],["~                     ",{"fg":4,"bold":true}]],"43":[["~                   ",{"fg":4,"bold":true}],["|",{"inverse":true}],["163 ",{"fg":3,"bold":true}],["    \" year  : year you actioned                                                                                 ",{}],["|",{"inverse":true}],["~                     ",{"fg":4,"bold":true}]],"44":[["~                   ",{"fg":4,"bold":true}],["|",{"inverse":true}],["164 ",{"fg":3,"bold":true}],["    \" week  : day of week (Mo=1 ... Su=7)                                                                       ",{}],["|",{"inverse":true}],["~                     ",{"fg":4,"bold":true}]],"45":[["~                   ",{"fg":4,"bold":true}],["|",{"inverse":true}],["165 ",{"fg":3,"bold":true}],["    \" dir   : direction of calendar                                                                             ",{"underline":true}],["|",{"inverse":true}],["~                     ",{"fg":4,"bold":true}]],"46":[[" Tagbar ",{"bold":true}],[" Tree       ",{}],[" ",{"bold":true,"inverse":true}],[" ",{"inverse":true}],[".vim/bundle/calendar-vim/doc/",{}],["calendar.txt ",{"bold":true}],["                                                         75% ",{}],["│ LN 165",{"bold":true}],[":1  ",{}],[" ",{"inverse":true}],[" ~/NERD_tree_1 ",{"bold":true}],["       ",{}]]},"cursor":{"x":4,"y":17,"visible":true}}],[1.186483,{"lines":{"47":[["                                                                                                                                                     ^W         ",{}]]}}],[0.196798,{"lines":{"47":[["                                                                                                                                                     ^Wl        ",{}]]},"cursor":{"visible":false}}],[0.010334,{"lines":{"46":[["[Name] test.cpp      ",{"inverse":true}],[" NORMAL ",{"bold":true}],[" ",{}],["calendar.txt ",{"bold":true}],["                                                        unix │ utf-8 │ text │  75% ",{}],[" LN 165",{"bold":true}],[":1  ",{}],[" ",{"bold":true,"inverse":true}],[" ~/…/calendar-vim/doc>",{"bold":true}]],"47":[["                                                                                                                                                                ",{}]]},"cursor":{"x":25,"y":45,"visible":true}}],[0.78173,{"lines":{"47":[["                                                                                                                                                     ^W         ",{}]]}}],[0.169175,{"lines":{"47":[["                                                                                                                                                     ^Wl        ",{}]]},"cursor":{"visible":false}}],[0.016256,{"lines":{"46":[["[Name] test.cpp       ",{"inverse":true}],[".vim/bundle/calendar-vim/doc/",{}],["calendar.txt ",{"bold":true}],["                                                         75% ",{}],["│ LN 165",{"bold":true}],[":1  ",{}],[" ",{"inverse":true}],[" ~/NERD_tree_1 ",{"bold":true}],["       ",{}]],"47":[["                                                                                                                                                                ",{}]]},"cursor":{"x":142,"y":18,"visible":true}}],[0.884726,{"lines":{"47":[["                                                                                                                                                     k          ",{}]]},"cursor":{"visible":false}}],[0.000853,{"lines":{"17":[["   ",{"underline":true}],["+",{"fg":2,"bold":true,"underline":true}],["SecondRun(void) ",{"underline":true}],["|",{"inverse":true}],["137 ",{"fg":3,"bold":true}],["  let g:calendar_weeknm = 5 \" 1                                                                                 ",{}],["|",{"inverse":true}],[" 18 ",{"fg":3,"bold":true}],["  .bash_logout    ",{"underline":true}]],"18":[["   ",{}],["+",{"fg":2,"bold":true}],["SecondRun2(void)",{}],["|",{"inverse":true}],["138 ",{"fg":3,"bold":true}],["<                                                                                                               ",{}],["|",{"inverse":true}],[" 19 ",{"fg":3,"bold":true}],["  .bash_profile   ",{}]],"47":[["                                                                                                                                                                ",{}]]},"cursor":{"y":17,"visible":true}}],[0.656467,{"lines":{"0":[["\"",{"fg":6,"bold":true}],["|",{"inverse":true}],["1",{"fg":3,"bold":true}],["|",{"inverse":true}],["ess <F1> for hel",{"fg":6,"bold":true}],["|",{"inverse":true}],["120 ",{"fg":3,"bold":true}],["Sunday: >                                                                                                       ",{}],["|",{"inverse":true}],["  1 ",{"fg":3,"bold":true}],["\" Press ? for help",{"fg":5,"bold":true}]],"1":[[" ",{}],["|",{"inverse":true}],["@",{"fg":4,"bold":true}],["|",{"inverse":true}],["                ",{}],["|",{"inverse":true}],["121 ",{"fg":3,"bold":true}],["  let g:calendar_wruler = 'Su Mo Tu We Th Fr Sa'                                                                ",{}],["|",{"inverse":true}],["  2 ",{"fg":3,"bold":true}],["                  ",{}]],"2":[["▼",{"fg":3,"bold":true}],["|",{"inverse":true}],["@",{"fg":4,"bold":true}],["|",{"inverse":true}],["rst",{"fg":5,"bold":true}],[" : ",{}],["struct",{"fg":2,"bold":true}],["    ",{}],["|",{"inverse":true}],["122 ",{"fg":3,"bold":true}],["<                                                                                                               ",{}],["|",{"inverse":true}],["  3 ",{"fg":3,"bold":true}],[".. (up a dir)",{"fg":6,"bold":true}],["     ",{}]],"3":[[" ",{"fg":6,"bold":true}],["|",{"inverse":true}],["@",{"fg":4,"bold":true}],["|",{"inverse":true}],["[prototypes]",{"fg":6,"bold":true}],["    ",{}],["|",{"inverse":true}],["123 ",{"fg":3,"bold":true}],["                                                                                                                ",{}],["|",{"inverse":true}],["  4 /root/",{"fg":3,"bold":true}],["            ",{}]],"4":[[" ",{}],["|",{"inverse":true}],["@",{"fg":4,"bold":true}],["|",{"inverse":true}],["FirstRun(void)  ",{}],["|",{"inverse":true}],["124 ",{"fg":3,"bold":true}],["                                                *g:calendar_monday*                                             ",{}],["|",{"inverse":true}],["  5 ",{"fg":3,"bold":true}],["▸ .asciinema/",{"fg":6,"bold":true}],["     ",{}]],"5":[[" ",{}],["|",{"inverse":true}],["@",{"fg":4,"bold":true}],["|",{"inverse":true}],["FirstRun2(void) ",{}],["|",{"inverse":true}],["125 ",{"fg":3,"bold":true}],["To make the week start on Monday rather than Sunday, set this variable.  Note                                   ",{}],["|",{"inverse":true}],["  6 ",{"fg":3,"bold":true}],["▸ .cache/",{"fg":6,"bold":true}],["         ",{}]],"6":[[" ",{}],["|",{"inverse":true}],["@",{"fg":4,"bold":true}],["|",{"inverse":true}],["                ",{}],["|",{"inverse":true}],["126 ",{"fg":3,"bold":true}],["that the value of |g:calendar_wruler| is not affected by this; it should                                        ",{}],["|",{"inverse":true}],["  7 ",{"fg":3,"bold":true}],["▸ .config/",{"fg":6,"bold":true}],["        ",{}]],"7":[["▼",{"fg":3,"bold":true}],["|",{"inverse":true}],["@",{"fg":4,"bold":true}],["|",{"inverse":true}],["st",{"fg":5,"bold":true}],[" : ",{}],["struct",{"fg":2,"bold":true}],["     ",{}],["|",{"inverse":true}],["127 ",{"fg":3,"bold":true}],["always begin with Sunday: >                                                                                     ",{}],["|",{"inverse":true}],["  8 ",{"fg":3,"bold":true}],["▸ .dbus/",{"fg":6,"bold":true}],["          ",{}]],"8":[[" ",{"fg":6,"bold":true}],["|",{"inverse":true}],["@",{"fg":4,"bold":true}],["|",{"inverse":true}],["[functions]",{"fg":6,"bold":true}],["     ",{}],["|",{"inverse":true}],["128 ",{"fg":3,"bold":true}],["  let g:calendar_monday = 1                                                                                     ",{}],["|",{"inverse":true}],["  9 ",{"fg":3,"bold":true}],["▸ .gnupg/",{"fg":6,"bold":true}],["         ",{}]],"9":[[" ",{}],["|",{"inverse":true}],["@",{"fg":4,"bold":true}],["|",{"inverse":true}],["FirstRun(void)  ",{}],["|",{"inverse":true}],["129 ",{"fg":3,"bold":true}],["<                                                                                                               ",{}],["|",{"inverse":true}],[" 10 ",{"fg":3,"bold":true}],["▸ .kde/",{"fg":6,"bold":true}],["           ",{}]],"10":[[" ",{}],["|",{"inverse":true}],["@",{"fg":4,"bold":true}],["|",{"inverse":true}],["FirstRun2(void) ",{}],["|",{"inverse":true}],["130 ",{"fg":3,"bold":true}],["                                                                                                                ",{}],["|",{"inverse":true}],[" 11 ",{"fg":3,"bold":true}],["▸ .local/",{"fg":6,"bold":true}],["         ",{}]],"11":[[" ",{}],["|",{"inverse":true}],["@",{"fg":4,"bold":true}],["|",{"inverse":true}],["~Last()         ",{}],["|",{"inverse":true}],["131 ",{"fg":3,"bold":true}],["                                                *g:calendar_weeknm*                                             ",{}],["|",{"inverse":true}],[" 12 ",{"fg":3,"bold":true}],["▸ .pki/",{"fg":6,"bold":true}],["           ",{}]],"12":[[" ",{}],["|",{"inverse":true}],["@",{"fg":4,"bold":true}],["|",{"inverse":true}],["SecondRun(void) ",{}],["|",{"inverse":true}],["132 ",{"fg":3,"bold":true}],["To show the week number, set this variable.  There are four valid settings: >                                   ",{}],["|",{"inverse":true}],[" 13 ",{"fg":3,"bold":true}],["▸ .ssh/",{"fg":6,"bold":true}],["           ",{}]],"13":[[" ",{}],["|",{"inverse":true}],["@",{"fg":4,"bold":true}],["|",{"inverse":true}],["SecondRun2(void)",{}],["|",{"inverse":true}],["133 ",{"fg":3,"bold":true}],["  let g:calendar_weeknm = 1 \" WK01                                                                              ",{}],["|",{"inverse":true}],[" 14 ",{"fg":3,"bold":true}],["▸ .vim/",{"fg":6,"bold":true}],["           ",{}]],"14":[[" ",{}],["|",{"inverse":true}],["@",{"fg":4,"bold":true}],["|",{"inverse":true}],["                ",{}],["|",{"inverse":true}],["134 ",{"fg":3,"bold":true}],["  let g:calendar_weeknm = 2 \" WK 1                                                                              ",{}],["|",{"inverse":true}],[" 15 ",{"fg":3,"bold":true}],["▸ diary/",{"fg":6,"bold":true}],["          ",{}]],"15":[["▼",{"fg":3,"bold":true}],["|",{"inverse":true}],["@",{"fg":4,"bold":true}],["|",{"inverse":true}],["cond",{"fg":5,"bold":true}],[" : ",{}],["struct",{"fg":2,"bold":true}],["   ",{}],["|",{"inverse":true}],["135 ",{"fg":3,"bold":true}],["  let g:calendar_weeknm = 3 \" KW01                                                                              ",{}],["|",{"inverse":true}],[" 16 ",{"fg":3,"bold":true}],["▸ temp/",{"fg":6,"bold":true}],["           ",{}]],"16":[[" ",{"fg":6,"bold":true}],["|",{"inverse":true}],["@",{"fg":4,"bold":true}],["|",{"inverse":true}],["[prototypes]",{"fg":6,"bold":true}],["    ",{}],["|",{"inverse":true}],["136 ",{"fg":3,"bold":true}],["  let g:calendar_weeknm = 4 \" KW 1                                                                              ",{}],["|",{"inverse":true}],[" 17 ",{"fg":3,"bold":true}],["  .bash_history   ",{}]],"17":[[" ",{"underline":true}],["|",{"inverse":true}],["@",{"fg":4,"bold":true}],["|",{"inverse":true}],["SecondRun(void) ",{"underline":true}],["|",{"inverse":true}],["137 ",{"fg":3,"bold":true}],["  let g:calendar_weeknm = 5 \" 1                                                                                 ",{}],["|",{"inverse":true}],[" 18 ",{"fg":3,"bold":true}],["  .bash_logout    ",{"underline":true}]],"18":[[" ",{}],["|",{"inverse":true}],["@",{"fg":4,"bold":true}],["|",{"inverse":true}],["SecondRun2(void)",{}],["|",{"inverse":true}],["138 ",{"fg":3,"bold":true}],["<                                                                                                               ",{}],["|",{"inverse":true}],[" 19 ",{"fg":3,"bold":true}],["  .bash_profile   ",{}]],"19":[[" ",{}],["|",{"inverse":true}],["@",{"fg":4,"bold":true}],["|",{"inverse":true}],["                ",{}],["|",{"inverse":true}],["139 ",{"fg":3,"bold":true}],["                                                                                                                ",{}],["|",{"inverse":true}],[" 20 ",{"fg":3,"bold":true}],["  .bashrc         ",{}]],"20":[["▼",{"fg":3,"bold":true}],["|",{"inverse":true}],["@",{"fg":4,"bold":true}],["|",{"inverse":true}],["nctions",{"fg":6,"bold":true}],["         ",{}],["|",{"inverse":true}],["140 ",{"fg":3,"bold":true}],["                                                *g:calendar_datetime*                                           ",{}],["|",{"inverse":true}],[" 21 ",{"fg":3,"bold":true}],["  .cshrc          ",{}]],"21":[[" ",{}],["|",{"inverse":true}],["@",{"fg":4,"bold":true}],["|",{"inverse":true}],["main(int argc, c",{}],["|",{"inverse":true}],["141 ",{"fg":3,"bold":true}],["To control display of the current date and time, set this variable.                                             ",{}],["|",{"inverse":true}],[" 22 ",{"fg":3,"bold":true}],["  .dmrc           ",{}]],"22":[["~",{"fg":4,"bold":true}],["|",{"inverse":true}],["@",{"fg":4,"bold":true}],["|",{"inverse":true}],["                ",{"fg":4,"bold":true}],["|",{"inverse":true}],["142 ",{"fg":3,"bold":true}],["Acceptable values are 'title', 'statusline', and '': >                                                          ",{}],["|",{"inverse":true}],[" 23 ",{"fg":3,"bold":true}],["  .esd_auth       ",{}]],"23":[["~",{"fg":4,"bold":true}],["|",{"inverse":true}],["@",{"fg":4,"bold":true}],["|",{"inverse":true}],["                ",{"fg":4,"bold":true}],["|",{"inverse":true}],["143 ",{"fg":3,"bold":true}],["  let g:calendar_datetime = 'title'                                                                             ",{}],["|",{"inverse":true}],[" 24 ",{"fg":3,"bold":true}],["  .gtkrc-2.0      ",{}]],"24":[["~",{"fg":4,"bold":true}],["|",{"inverse":true}],["@",{"fg":4,"bold":true}],["|",{"inverse":true}],["                ",{"fg":4,"bold":true}],["|",{"inverse":true}],["144 ",{"fg":3,"bold":true}],["<                                                                                                               ",{}],["|",{"inverse":true}],[" 25 ",{"fg":3,"bold":true}],["  .gtkrc-2.0-kde4 ",{}]],"25":[["~",{"fg":4,"bold":true}],["|",{"inverse":true}],["@                 ",{"fg":4,"bold":true}],["|",{"inverse":true}],["145 ",{"fg":3,"bold":true}],["                                                *g:calendar_filetype*                                           ",{}],["|",{"inverse":true}],[" 26 ",{"fg":3,"bold":true}],["  .lesshst        ",{}]],"26":[["~",{"fg":4,"bold":true}],["|",{"inverse":true}],["@                 ",{"fg":4,"bold":true}],["|",{"inverse":true}],["146 ",{"fg":3,"bold":true}],["To control the filetype of calendar entries, set this variable. It defaults to                                  ",{}],["|",{"inverse":true}],[" 27 ",{"fg":3,"bold":true}],["  .tcshrc         ",{}]],"27":[["~",{"fg":4,"bold":true}],["|",{"inverse":true}],["@                 ",{"fg":4,"bold":true}],["|",{"inverse":true}],["147 ",{"fg":3,"bold":true}],["'markdown'. Acceptable values are values that are acceptable for |filetype|                                     ",{}],["|",{"inverse":true}],[" 28 ",{"fg":3,"bold":true}],["  .viminfo        ",{}]],"28":[["~",{"fg":4,"bold":true}],["|",{"inverse":true}],["@                 ",{"fg":4,"bold":true}],["|",{"inverse":true}],["148 ",{"fg":3,"bold":true}],["like e.g. 'markdown' or 'pandoc':                                                                               ",{}],["|",{"inverse":true}],[" 29 ",{"fg":3,"bold":true}],["  .vimrc          ",{}]],"29":[["~",{"fg":4,"bold":true}],["|",{"inverse":true}],["@                 ",{"fg":4,"bold":true}],["|",{"inverse":true}],["149 ",{"fg":3,"bold":true}],["  let g:calendar_filetype = 'pandoc'                                                                            ",{}],["|",{"inverse":true}],[" 30 ",{"fg":3,"bold":true}],["  .xsession-errors",{}]],"30":[["~",{"fg":4,"bold":true}],["|",{"inverse":true}],["@                 ",{"fg":4,"bold":true}],["|",{"inverse":true}],["150 ",{"fg":3,"bold":true}],["                                                                                                                ",{}],["|",{"inverse":true}],[" 31 ",{"fg":3,"bold":true}],["  anaconda-ks.cfg ",{}]],"31":[["~",{"fg":4,"bold":true}],["|",{"inverse":true}],["@                 ",{"fg":4,"bold":true}],["|",{"inverse":true}],["151 ",{"fg":3,"bold":true}],["                                                                                                                ",{}],["|",{"inverse":true}],[" 32 ",{"fg":3,"bold":true}],["  initial-setup-ks",{}]],"32":[["~",{"fg":4,"bold":true}],["|",{"inverse":true}],["@                 ",{"fg":4,"bold":true}],["|",{"inverse":true}],["152 ",{"fg":3,"bold":true}],["HOOKS                                           *calendar-hooks*                                                ",{}],["|",{"inverse":true}],[" 33 ",{"fg":3,"bold":true}],["  test.c          ",{}]],"33":[["~",{"fg":4,"bold":true}],["|",{"inverse":true}],["@                 ",{"fg":4,"bold":true}],["|",{"inverse":true}],["153 ",{"fg":3,"bold":true}],["                                                                                                                ",{}],["|",{"inverse":true}],[" 34 ",{"fg":3,"bold":true}],["  test.cpp        ",{}]],"34":[["~",{"fg":4,"bold":true}],["|",{"inverse":true}],["@                 ",{"fg":4,"bold":true}],["|",{"inverse":true}],["154 ",{"fg":3,"bold":true}],["calendar.vim provides a number of hooks which allow you to run custom code on                                   ",{}],["|",{"inverse":true}],[" 35 ",{"fg":3,"bold":true}],["  .test.cpp.swp   ",{}]],"35":[["~",{"fg":4,"bold":true}],["|",{"inverse":true}],["@                 ",{"fg":4,"bold":true}],["|",{"inverse":true}],["155 ",{"fg":3,"bold":true}],["certain events.  These are documented below.                                                                    ",{}],["|",{"inverse":true}],["~                     ",{"fg":4,"bold":true}]],"36":[["~",{"fg":4,"bold":true}],["|",{"inverse":true}],["@                 ",{"fg":4,"bold":true}],["|",{"inverse":true}],["156 ",{"fg":3,"bold":true}],["                                                                                                                ",{}],["|",{"inverse":true}],["~                     ",{"fg":4,"bold":true}]],"37":[["~",{"fg":4,"bold":true}],["|",{"inverse":true}],["@                 ",{"fg":4,"bold":true}],["|",{"inverse":true}],["157 ",{"fg":3,"bold":true}],["                                                *calendar_action*                                               ",{}],["|",{"inverse":true}],["~                     ",{"fg":4,"bold":true}]],"38":[["~",{"fg":4,"bold":true}],["|",{"inverse":true}],["@                 ",{"fg":4,"bold":true}],["|",{"inverse":true}],["158 ",{"fg":3,"bold":true}],["The function declared in the calendar_action variable is run when the user                                      ",{}],["|",{"inverse":true}],["~                     ",{"fg":4,"bold":true}]],"39":[["~",{"fg":4,"bold":true}],["|",{"inverse":true}],["@                 ",{"fg":4,"bold":true}],["|",{"inverse":true}],["159 ",{"fg":3,"bold":true}],["presses enter on a date.  Implement and set your function as follows: >                                         ",{}],["|",{"inverse":true}],["~                     ",{"fg":4,"bold":true}]],"40":[["~",{"fg":4,"bold":true}],["|",{"inverse":true}],["@                 ",{"fg":4,"bold":true}],["|",{"inverse":true}],["160 ",{"fg":3,"bold":true}],["  function MyCalAction(day,month,year,week,dir)                                                                 ",{}],["|",{"inverse":true}],["~                     ",{"fg":4,"bold":true}]],"41":[["~",{"fg":4,"bold":true}],["|",{"inverse":true}],["@                 ",{"fg":4,"bold":true}],["|",{"inverse":true}],["161 ",{"fg":3,"bold":true}],["    \" day   : day you actioned                                                                                  ",{}],["|",{"inverse":true}],["~                     ",{"fg":4,"bold":true}]],"42":[["~",{"fg":4,"bold":true}],["|",{"inverse":true}],["@                 ",{"fg":4,"bold":true}],["|",{"inverse":true}],["162 ",{"fg":3,"bold":true}],["    \" month : month you actioned                                                                                ",{}],["|",{"inverse":true}],["~                     ",{"fg":4,"bold":true}]],"43":[["~",{"fg":4,"bold":true}],["|",{"inverse":true}],["@                 ",{"fg":4,"bold":true}],["|",{"inverse":true}],["163 ",{"fg":3,"bold":true}],["    \" year  : year you actioned                                                                                 ",{}],["|",{"inverse":true}],["~                     ",{"fg":4,"bold":true}]],"44":[["~",{"fg":4,"bold":true}],["|",{"inverse":true}],["@                 ",{"fg":4,"bold":true}],["|",{"inverse":true}],["164 ",{"fg":3,"bold":true}],["    \" week  : day of week (Mo=1 ... Su=7)                                                                       ",{}],["|",{"inverse":true}],["~                     ",{"fg":4,"bold":true}]],"45":[["~",{"fg":4,"bold":true}],["|",{"inverse":true}],["@                 ",{"fg":4,"bold":true}],["|",{"inverse":true}],["165 ",{"fg":3,"bold":true}],["    \" dir   : direction of calendar                                                                             ",{"underline":true}],["|",{"inverse":true}],["~                     ",{"fg":4,"bold":true}]],"46":[["< ame] test.cpp       ",{"inverse":true}],[".vim/bundle/calendar-vim/doc/",{}],["calendar.txt ",{"bold":true}],["                                                         75% ",{}],["│ LN 165",{"bold":true}],[":1  ",{}],[" ",{"inverse":true}],[" ~/NERD_tree_1 ",{"bold":true}],["       ",{}]]},"cursor":{"x":4,"y":24,"visible":false}}],[0.013144,{"lines":{"0":[["\"",{"fg":6,"bold":true}],["|",{"inverse":true}],["1",{"fg":3,"bold":true}],["|",{"inverse":true}],["  1 ",{"fg":3,"bold":true}],["\" Press ? for help",{"fg":5,"bold":true}],["                                                                                                                                      ",{}]],"1":[[" ",{}],["|",{"inverse":true}],["@",{"fg":4,"bold":true}],["|",{"inverse":true}],["  2 ",{"fg":3,"bold":true}],["                                                                                                                                                        ",{}]],"2":[["▼",{"fg":3,"bold":true}],["|",{"inverse":true}],["@",{"fg":4,"bold":true}],["|",{"inverse":true}],["  3 ",{"fg":3,"bold":true}],[".. (up a dir)",{"fg":6,"bold":true}],["                                                                                                                                           ",{}]],"3":[[" ",{"fg":6,"bold":true}],["|",{"inverse":true}],["@",{"fg":4,"bold":true}],["|",{"inverse":true}],["  4 /root/",{"fg":3,"bold":true}],["                                                                                                                                                  ",{}]],"4":[[" ",{}],["|",{"inverse":true}],["@",{"fg":4,"bold":true}],["|",{"inverse":true}],["  5 ",{"fg":3,"bold":true}],["▸ .asciinema/",{"fg":6,"bold":true}],["                                                                                                                                           ",{}]],"5":[[" ",{}],["|",{"inverse":true}],["@",{"fg":4,"bold":true}],["|",{"inverse":true}],["  6 ",{"fg":3,"bold":true}],["▸ .cache/",{"fg":6,"bold":true}],["                                                                                                                                               ",{}]],"6":[[" ",{}],["|",{"inverse":true}],["@",{"fg":4,"bold":true}],["|",{"inverse":true}],["  7 ",{"fg":3,"bold":true}],["▸ .config/",{"fg":6,"bold":true}],["                                                                                                                                              ",{}]],"7":[["▼",{"fg":3,"bold":true}],["|",{"inverse":true}],["@",{"fg":4,"bold":true}],["|",{"inverse":true}],["  8 ",{"fg":3,"bold":true}],["▸ .dbus/",{"fg":6,"bold":true}],["                                                                                                                                                ",{}]],"8":[[" ",{"fg":6,"bold":true}],["|",{"inverse":true}],["@",{"fg":4,"bold":true}],["|",{"inverse":true}],["  9 ",{"fg":3,"bold":true}],["▸ .gnupg/",{"fg":6,"bold":true}],["                                                                                                                                               ",{}]],"9":[[" ",{}],["|",{"inverse":true}],["@",{"fg":4,"bold":true}],["|",{"inverse":true}],[" 10 ",{"fg":3,"bold":true}],["▸ .kde/",{"fg":6,"bold":true}],["                                                                                                                                                 ",{}]],"10":[[" ",{}],["|",{"inverse":true}],["@",{"fg":4,"bold":true}],["|",{"inverse":true}],[" 11 ",{"fg":3,"bold":true}],["▸ .local/",{"fg":6,"bold":true}],["                                                                                                                                               ",{}]],"11":[[" ",{}],["|",{"inverse":true}],["@",{"fg":4,"bold":true}],["|",{"inverse":true}],[" 12 ",{"fg":3,"bold":true}],["▸ .pki/",{"fg":6,"bold":true}],["                                                                                                                                                 ",{}]],"12":[[" ",{}],["|",{"inverse":true}],["@",{"fg":4,"bold":true}],["|",{"inverse":true}],[" 13 ",{"fg":3,"bold":true}],["▸ .ssh/",{"fg":6,"bold":true}],["                                                                                                                                                 ",{}]],"13":[[" ",{}],["|",{"inverse":true}],["@",{"fg":4,"bold":true}],["|",{"inverse":true}],[" 14 ",{"fg":3,"bold":true}],["▸ .vim/",{"fg":6,"bold":true}],["                                                                                                                                                 ",{}]],"14":[[" ",{}],["|",{"inverse":true}],["@",{"fg":4,"bold":true}],["|",{"inverse":true}],[" 15 ",{"fg":3,"bold":true}],["▸ diary/",{"fg":6,"bold":true}],["                                                                                                                                                ",{}]],"15":[["▼",{"fg":3,"bold":true}],["|",{"inverse":true}],["@",{"fg":4,"bold":true}],["|",{"inverse":true}],[" 16 ",{"fg":3,"bold":true}],["▸ temp/",{"fg":6,"bold":true}],["                                                                                                                                                 ",{}]],"16":[[" ",{"fg":6,"bold":true}],["|",{"inverse":true}],["@",{"fg":4,"bold":true}],["|",{"inverse":true}],[" 17 ",{"fg":3,"bold":true}],["  .bash_history                                                                                                                                         ",{}]],"17":[[" ",{"underline":true}],["|",{"inverse":true}],["@",{"fg":4,"bold":true}],["|",{"inverse":true}],[" 18 ",{"fg":3,"bold":true}],["  .bash_logout                                                                                                                                          ",{"underline":true}]],"18":[[" ",{}],["|",{"inverse":true}],["@",{"fg":4,"bold":true}],["|",{"inverse":true}],[" 19 ",{"fg":3,"bold":true}],["  .bash_profile                                                                                                                                         ",{}]],"19":[[" ",{}],["|",{"inverse":true}],["@",{"fg":4,"bold":true}],["|",{"inverse":true}],[" 20 ",{"fg":3,"bold":true}],["  .bashrc                                                                                                                                               ",{}]],"20":[["▼",{"fg":3,"bold":true}],["|",{"inverse":true}],["@",{"fg":4,"bold":true}],["|",{"inverse":true}],[" 21 ",{"fg":3,"bold":true}],["  .cshrc                                                                                                                                                ",{}]],"21":[[" ",{}],["|",{"inverse":true}],["@",{"fg":4,"bold":true}],["|",{"inverse":true}],[" 22 ",{"fg":3,"bold":true}],["  .dmrc                                                                                                                                                 ",{}]],"22":[["~",{"fg":4,"bold":true}],["|",{"inverse":true}],["@",{"fg":4,"bold":true}],["|",{"inverse":true}],[" 23 ",{"fg":3,"bold":true}],["  .esd_auth                                                                                                                                             ",{}]],"23":[["~",{"fg":4,"bold":true}],["|",{"inverse":true}],["@",{"fg":4,"bold":true}],["|",{"inverse":true}],[" 24 ",{"fg":3,"bold":true}],["  .gtkrc-2.0                                                                                                                                            ",{}]],"24":[["~",{"fg":4,"bold":true}],["|",{"inverse":true}],["@",{"fg":4,"bold":true}],["|",{"inverse":true}],[" 25 ",{"fg":3,"bold":true}],["  .gtkrc-2.0-kde4                                                                                                                                       ",{}]],"25":[["~",{"fg":4,"bold":true}],["|",{"inverse":true}],["@",{"fg":4,"bold":true}],["|",{"inverse":true}],[" 26 ",{"fg":3,"bold":true}],["  .lesshst                                                                                                                                              ",{}]],"26":[["~",{"fg":4,"bold":true}],["|",{"inverse":true}],["@",{"fg":4,"bold":true}],["|",{"inverse":true}],[" 27 ",{"fg":3,"bold":true}],["  .tcshrc                                                                                                                                               ",{}]],"27":[["~",{"fg":4,"bold":true}],["|",{"inverse":true}],["@",{"fg":4,"bold":true}],["|",{"inverse":true}],[" 28 ",{"fg":3,"bold":true}],["  .viminfo                                                                                                                                              ",{}]],"28":[["~",{"fg":4,"bold":true}],["|",{"inverse":true}],["@",{"fg":4,"bold":true}],["|",{"inverse":true}],[" 29 ",{"fg":3,"bold":true}],["  .vimrc                                                                                                                                                ",{}]],"29":[["~",{"fg":4,"bold":true}],["|",{"inverse":true}],["@",{"fg":4,"bold":true}],["|",{"inverse":true}],[" 30 ",{"fg":3,"bold":true}],["  .xsession-errors                                                                                                                                      ",{}]],"30":[["~",{"fg":4,"bold":true}],["|",{"inverse":true}],["@",{"fg":4,"bold":true}],["|",{"inverse":true}],[" 31 ",{"fg":3,"bold":true}],["  anaconda-ks.cfg                                                                                                                                       ",{}]],"31":[["~",{"fg":4,"bold":true}],["|",{"inverse":true}],["@",{"fg":4,"bold":true}],["|",{"inverse":true}],[" 32 ",{"fg":3,"bold":true}],["  initial-setup-ks.cfg                                                                                                                                  ",{}]],"32":[["~",{"fg":4,"bold":true}],["|",{"inverse":true}],["@",{"fg":4,"bold":true}],["|",{"inverse":true}],[" 33 ",{"fg":3,"bold":true}],["  test.c                                                                                                                                                ",{}]],"33":[["~",{"fg":4,"bold":true}],["|",{"inverse":true}],["@",{"fg":4,"bold":true}],["|",{"inverse":true}],[" 34 ",{"fg":3,"bold":true}],["  test.cpp                                                                                                                                              ",{}]],"34":[["~",{"fg":4,"bold":true}],["|",{"inverse":true}],["@",{"fg":4,"bold":true}],["|",{"inverse":true}],[" 35 ",{"fg":3,"bold":true}],["  .test.cpp.swp                                                                                                                                         ",{}]],"35":[["~",{"fg":4,"bold":true}],["|",{"inverse":true}],["@",{"fg":4,"bold":true}],["|",{"inverse":true}],["~                                                                                                                                                           ",{"fg":4,"bold":true}]],"36":[["~",{"fg":4,"bold":true}],["|",{"inverse":true}],["@",{"fg":4,"bold":true}],["|",{"inverse":true}],["~                                                                                                                                                           ",{"fg":4,"bold":true}]],"37":[["~",{"fg":4,"bold":true}],["|",{"inverse":true}],["@",{"fg":4,"bold":true}],["|",{"inverse":true}],["~                                                                                                                                                           ",{"fg":4,"bold":true}]],"38":[["~",{"fg":4,"bold":true}],["|",{"inverse":true}],["@",{"fg":4,"bold":true}],["|",{"inverse":true}],["~                                                                                                                                                           ",{"fg":4,"bold":true}]],"39":[["~",{"fg":4,"bold":true}],["|",{"inverse":true}],["@",{"fg":4,"bold":true}],["|",{"inverse":true}],["~                                                                                                                                                           ",{"fg":4,"bold":true}]],"40":[["~",{"fg":4,"bold":true}],["|",{"inverse":true}],["@",{"fg":4,"bold":true}],["|",{"inverse":true}],["~                                                                                                                                                           ",{"fg":4,"bold":true}]],"41":[["~",{"fg":4,"bold":true}],["|",{"inverse":true}],["@",{"fg":4,"bold":true}],["|",{"inverse":true}],["~                                                                                                                                                           ",{"fg":4,"bold":true}]],"42":[["~",{"fg":4,"bold":true}],["|",{"inverse":true}],["@",{"fg":4,"bold":true}],["|",{"inverse":true}],["~                                                                                                                                                           ",{"fg":4,"bold":true}]],"43":[["~",{"fg":4,"bold":true}],["|",{"inverse":true}],["@",{"fg":4,"bold":true}],["|",{"inverse":true}],["~                                                                                                                                                           ",{"fg":4,"bold":true}]],"44":[["~",{"fg":4,"bold":true}],["|",{"inverse":true}],["@",{"fg":4,"bold":true}],["|",{"inverse":true}],["~                                                                                                                                                           ",{"fg":4,"bold":true}]],"45":[["~",{"fg":4,"bold":true}],["|",{"inverse":true}],["@",{"fg":4,"bold":true}],["|",{"inverse":true}],["~                                                                                                                                                           ",{"fg":4,"bold":true}]],"46":[["< > ",{"inverse":true}],[" ~/NERD_tree_1 ",{"bold":true}],["                                                                                                                                             ",{}]]},"cursor":{"x":8,"y":17,"visible":true}}],[2.001234,{}],[0.981768,{"lines":{"47":[["E21: Cannot make changes, 'modifiable' is off",{"fg":7,"bg":1,"bold":true}],["                                                                                                                   ",{}]]}}],[1.875038,{"lines":{"0":[["\"",{"fg":6,"bold":true}],["|",{"inverse":true}],["120 ",{"fg":3,"bold":true}],["Sunday: >                                                                                                                          ",{}],["|",{"inverse":true}],["                      ",{}]],"1":[[" ",{}],["|",{"inverse":true}],["121 ",{"fg":3,"bold":true}],["  let g:calendar_wruler = 'Su Mo Tu We Th Fr Sa'                                                                                   ",{}],["|",{"inverse":true}],["                      ",{}]],"2":[["▼",{"fg":3,"bold":true}],["|",{"inverse":true}],["122 ",{"fg":3,"bold":true}],["<                                                                                                                                  ",{}],["|",{"inverse":true}],["                      ",{}]],"3":[[" ",{"fg":6,"bold":true}],["|",{"inverse":true}],["123 ",{"fg":3,"bold":true}],["                                                                                                                                   ",{}],["|",{"inverse":true}],["                      ",{}]],"4":[[" ",{}],["|",{"inverse":true}],["124 ",{"fg":3,"bold":true}],["                                                *g:calendar_monday*                                                                ",{}],["|",{"inverse":true}],["                      ",{}]],"5":[[" ",{}],["|",{"inverse":true}],["125 ",{"fg":3,"bold":true}],["To make the week start on Monday rather than Sunday, set this variable.  Note                                                      ",{}],["|",{"inverse":true}],["                      ",{}]],"6":[[" ",{}],["|",{"inverse":true}],["126 ",{"fg":3,"bold":true}],["that the value of |g:calendar_wruler| is not affected by this; it should                                                           ",{}],["|",{"inverse":true}],["                      ",{}]],"7":[["▼",{"fg":3,"bold":true}],["|",{"inverse":true}],["127 ",{"fg":3,"bold":true}],["always begin with Sunday: >                                                                                                        ",{}],["|",{"inverse":true}],["                      ",{}]],"8":[[" ",{"fg":6,"bold":true}],["|",{"inverse":true}],["128 ",{"fg":3,"bold":true}],["  let g:calendar_monday = 1                                                                                                        ",{}],["|",{"inverse":true}],["                      ",{}]],"9":[[" ",{}],["|",{"inverse":true}],["129 ",{"fg":3,"bold":true}],["<                                                                                                                                  ",{}],["|",{"inverse":true}],["                      ",{}]],"10":[[" ",{}],["|",{"inverse":true}],["130 ",{"fg":3,"bold":true}],["                                                                                                                                   ",{}],["|",{"inverse":true}],["                      ",{}]],"11":[[" ",{}],["|",{"inverse":true}],["131 ",{"fg":3,"bold":true}],["                                                *g:calendar_weeknm*                                                                ",{}],["|",{"inverse":true}],["                      ",{}]],"12":[[" ",{}],["|",{"inverse":true}],["132 ",{"fg":3,"bold":true}],["To show the week number, set this variable.  There are four valid settings: >                                                      ",{}],["|",{"inverse":true}],["                      ",{}]],"13":[[" ",{}],["|",{"inverse":true}],["133 ",{"fg":3,"bold":true}],["  let g:",{}],["/",{"fg":6,"bold":true}],["                                                                                                                                                 ",{}]]},"cursor":{"x":14,"y":13,"visible":false}}],[0.010823,{"lines":{"0":[["\"",{"fg":6,"bold":true}],["|",{"inverse":true}],["120 ",{"fg":3,"bold":true}],["Sunday: >                                                                                                                          ",{}],["|",{"inverse":true}],["  1 ",{"fg":3,"bold":true}],["\" Press ? for help",{"fg":5,"bold":true}]],"1":[[" ",{}],["|",{"inverse":true}],["121 ",{"fg":3,"bold":true}],["  let g:calendar_wruler = 'Su Mo Tu We Th Fr Sa'                                                                                   ",{}],["|",{"inverse":true}],["  2 ",{"fg":3,"bold":true}],["                  ",{}]],"2":[["▼",{"fg":3,"bold":true}],["|",{"inverse":true}],["122 ",{"fg":3,"bold":true}],["<                                                                                                                                  ",{}],["|",{"inverse":true}],["  3 ",{"fg":3,"bold":true}],[".. (up a dir)",{"fg":6,"bold":true}],["     ",{}]],"3":[[" ",{"fg":6,"bold":true}],["|",{"inverse":true}],["123 ",{"fg":3,"bold":true}],["                                                                                                                                   ",{}],["|",{"inverse":true}],["  4 /root/",{"fg":3,"bold":true}],["            ",{}]],"4":[[" ",{}],["|",{"inverse":true}],["124 ",{"fg":3,"bold":true}],["                                                *g:calendar_monday*                                                                ",{}],["|",{"inverse":true}],["  5 ",{"fg":3,"bold":true}],["▸ .asciinema/",{"fg":6,"bold":true}],["     ",{}]],"5":[[" ",{}],["|",{"inverse":true}],["125 ",{"fg":3,"bold":true}],["To make the week start on Monday rather than Sunday, set this variable.  Note                                                      ",{}],["|",{"inverse":true}],["  6 ",{"fg":3,"bold":true}],["▸ .cache/",{"fg":6,"bold":true}],["         ",{}]],"6":[[" ",{}],["|",{"inverse":true}],["126 ",{"fg":3,"bold":true}],["that the value of |g:calendar_wruler| is not affected by this; it should                                                           ",{}],["|",{"inverse":true}],["  7 ",{"fg":3,"bold":true}],["▸ .config/",{"fg":6,"bold":true}],["        ",{}]],"7":[["▼",{"fg":3,"bold":true}],["|",{"inverse":true}],["127 ",{"fg":3,"bold":true}],["always begin with Sunday: >                                                                                                        ",{}],["|",{"inverse":true}],["  8 ",{"fg":3,"bold":true}],["▸ .dbus/",{"fg":6,"bold":true}],["          ",{}]],"8":[[" ",{"fg":6,"bold":true}],["|",{"inverse":true}],["128 ",{"fg":3,"bold":true}],["  let g:calendar_monday = 1                                                                                                        ",{}],["|",{"inverse":true}],["  9 ",{"fg":3,"bold":true}],["▸ .gnupg/",{"fg":6,"bold":true}],["         ",{}]],"9":[[" ",{}],["|",{"inverse":true}],["129 ",{"fg":3,"bold":true}],["<                                                                                                                                  ",{}],["|",{"inverse":true}],[" 10 ",{"fg":3,"bold":true}],["▸ .kde/",{"fg":6,"bold":true}],["           ",{}]],"10":[[" ",{}],["|",{"inverse":true}],["130 ",{"fg":3,"bold":true}],["                                                                                                                                   ",{}],["|",{"inverse":true}],[" 11 ",{"fg":3,"bold":true}],["▸ .local/",{"fg":6,"bold":true}],["         ",{}]],"11":[[" ",{}],["|",{"inverse":true}],["131 ",{"fg":3,"bold":true}],["                                                *g:calendar_weeknm*                                                                ",{}],["|",{"inverse":true}],[" 12 ",{"fg":3,"bold":true}],["▸ .pki/",{"fg":6,"bold":true}],["           ",{}]],"12":[[" ",{}],["|",{"inverse":true}],["132 ",{"fg":3,"bold":true}],["To show the week number, set this variable.  There are four valid settings: >                                                      ",{}],["|",{"inverse":true}],[" 13 ",{"fg":3,"bold":true}],["▸ .ssh/",{"fg":6,"bold":true}],["           ",{}]],"13":[[" ",{}],["|",{"inverse":true}],["133 ",{"fg":3,"bold":true}],["  let g:calendar_weeknm = 1 \" WK01                                                                                                 ",{}],["|",{"inverse":true}],[" 14 ",{"fg":3,"bold":true}],["▸ .vim/",{"fg":6,"bold":true}],["           ",{}]],"14":[[" ",{}],["|",{"inverse":true}],["134 ",{"fg":3,"bold":true}],["  let g:calendar_weeknm = 2 \" WK 1                                                                                                 ",{}],["|",{"inverse":true}],[" 15 ",{"fg":3,"bold":true}],["▸ diary/",{"fg":6,"bold":true}],["          ",{}]],"15":[["▼",{"fg":3,"bold":true}],["|",{"inverse":true}],["135 ",{"fg":3,"bold":true}],["  let g:calendar_weeknm = 3 \" KW01                                                                                                 ",{}],["|",{"inverse":true}],[" 16 ",{"fg":3,"bold":true}],["▸ temp/",{"fg":6,"bold":true}],["           ",{}]],"16":[[" ",{"fg":6,"bold":true}],["|",{"inverse":true}],["136 ",{"fg":3,"bold":true}],["  let g:calendar_weeknm = 4 \" KW 1                                                                                                 ",{}],["|",{"inverse":true}],[" 17 ",{"fg":3,"bold":true}],["  .bash_history   ",{}]],"17":[[" ",{"underline":true}],["|",{"inverse":true}],["137 ",{"fg":3,"bold":true}],["  let g:calendar_weeknm = 5 \" 1                                                                                                    ",{}],["|",{"inverse":true}],[" 18 ",{"fg":3,"bold":true}],["  .bash_logout    ",{"underline":true}]],"18":[[" ",{}],["|",{"inverse":true}],["138 ",{"fg":3,"bold":true}],["<                                                                                                                                  ",{}],["|",{"inverse":true}],[" 19 ",{"fg":3,"bold":true}],["  .bash_profile   ",{}]],"19":[[" ",{}],["|",{"inverse":true}],["139 ",{"fg":3,"bold":true}],["                                                                                                                                   ",{}],["|",{"inverse":true}],[" 20 ",{"fg":3,"bold":true}],["  .bashrc         ",{}]],"20":[["▼",{"fg":3,"bold":true}],["|",{"inverse":true}],["140 ",{"fg":3,"bold":true}],["                                                *g:calendar_datetime*                                                              ",{}],["|",{"inverse":true}],[" 21 ",{"fg":3,"bold":true}],["  .cshrc          ",{}]],"21":[[" ",{}],["|",{"inverse":true}],["141 ",{"fg":3,"bold":true}],["To control display of the current date and time, set this variable.                                                                ",{}],["|",{"inverse":true}],[" 22 ",{"fg":3,"bold":true}],["  .dmrc           ",{}]],"22":[["~",{"fg":4,"bold":true}],["|",{"inverse":true}],["142 ",{"fg":3,"bold":true}],["Acceptable values are 'title', 'statusline', and '': >                                                                             ",{}],["|",{"inverse":true}],[" 23 ",{"fg":3,"bold":true}],["  .esd_auth       ",{}]],"23":[["~",{"fg":4,"bold":true}],["|",{"inverse":true}],["143 ",{"fg":3,"bold":true}],["  let g:calendar_datetime = 'title'                                                                                                ",{}],["|",{"inverse":true}],[" 24 ",{"fg":3,"bold":true}],["  .gtkrc-2.0      ",{}]],"24":[["~",{"fg":4,"bold":true}],["|",{"inverse":true}],["144 ",{"fg":3,"bold":true}],["<                                                                                                                                  ",{}],["|",{"inverse":true}],[" 25 ",{"fg":3,"bold":true}],["  .gtkrc-2.0-kde4 ",{}]],"25":[["~",{"fg":4,"bold":true}],["|",{"inverse":true}],["145 ",{"fg":3,"bold":true}],["                                                *g:calendar_filetype*                                                              ",{}],["|",{"inverse":true}],[" 26 ",{"fg":3,"bold":true}],["  .lesshst        ",{}]],"26":[["~",{"fg":4,"bold":true}],["|",{"inverse":true}],["146 ",{"fg":3,"bold":true}],["To control the filetype of calendar entries, set this variable. It defaults to                                                     ",{}],["|",{"inverse":true}],[" 27 ",{"fg":3,"bold":true}],["  .tcshrc         ",{}]],"27":[["~",{"fg":4,"bold":true}],["|",{"inverse":true}],["147 ",{"fg":3,"bold":true}],["'markdown'. Acceptable values are values that are acceptable for |filetype|                                                        ",{}],["|",{"inverse":true}],[" 28 ",{"fg":3,"bold":true}],["  .viminfo        ",{}]],"28":[["~",{"fg":4,"bold":true}],["|",{"inverse":true}],["148 ",{"fg":3,"bold":true}],["like e.g. 'markdown' or 'pandoc':                                                                                                  ",{}],["|",{"inverse":true}],[" 29 ",{"fg":3,"bold":true}],["  .vimrc          ",{}]],"29":[["~",{"fg":4,"bold":true}],["|",{"inverse":true}],["149 ",{"fg":3,"bold":true}],["  let g:calendar_filetype = 'pandoc'                                                                                               ",{}],["|",{"inverse":true}],[" 30 ",{"fg":3,"bold":true}],["  .xsession-errors",{}]],"30":[["~",{"fg":4,"bold":true}],["|",{"inverse":true}],["150 ",{"fg":3,"bold":true}],["                                                                                                                                   ",{}],["|",{"inverse":true}],[" 31 ",{"fg":3,"bold":true}],["  anaconda-ks.cfg ",{}]],"31":[["~",{"fg":4,"bold":true}],["|",{"inverse":true}],["151 ",{"fg":3,"bold":true}],["                                                                                                                                   ",{}],["|",{"inverse":true}],[" 32 ",{"fg":3,"bold":true}],["  initial-setup-ks",{}]],"32":[["~",{"fg":4,"bold":true}],["|",{"inverse":true}],["152 ",{"fg":3,"bold":true}],["HOOKS                                           *calendar-hooks*                                                                   ",{}],["|",{"inverse":true}],[" 33 ",{"fg":3,"bold":true}],["  test.c          ",{}]],"33":[["~",{"fg":4,"bold":true}],["|",{"inverse":true}],["153 ",{"fg":3,"bold":true}],["                                                                                                                                   ",{}],["|",{"inverse":true}],[" 34 ",{"fg":3,"bold":true}],["  test.cpp        ",{}]],"34":[["~",{"fg":4,"bold":true}],["|",{"inverse":true}],["154 ",{"fg":3,"bold":true}],["calendar.vim provides a number of hooks which allow you to run custom code on                                                      ",{}],["|",{"inverse":true}],[" 35 ",{"fg":3,"bold":true}],["  .test.cpp.swp   ",{}]],"35":[["~",{"fg":4,"bold":true}],["|",{"inverse":true}],["155 ",{"fg":3,"bold":true}],["certain events.  These are documented below.                                                                                       ",{}],["|",{"inverse":true}],["~                     ",{"fg":4,"bold":true}]],"36":[["~",{"fg":4,"bold":true}],["|",{"inverse":true}],["156 ",{"fg":3,"bold":true}],["                                                                                                                                   ",{}],["|",{"inverse":true}],["~                     ",{"fg":4,"bold":true}]],"37":[["~",{"fg":4,"bold":true}],["|",{"inverse":true}],["157 ",{"fg":3,"bold":true}],["                                                *calendar_action*                                                                  ",{}],["|",{"inverse":true}],["~                     ",{"fg":4,"bold":true}]],"38":[["~",{"fg":4,"bold":true}],["|",{"inverse":true}],["158 ",{"fg":3,"bold":true}],["The function declared in the calendar_action variable is run when the user                                                         ",{}],["|",{"inverse":true}],["~                     ",{"fg":4,"bold":true}]],"39":[["~",{"fg":4,"bold":true}],["|",{"inverse":true}],["159 ",{"fg":3,"bold":true}],["presses enter on a date.  Implement and set your function as follows: >                                                            ",{}],["|",{"inverse":true}],["~                     ",{"fg":4,"bold":true}]],"40":[["~",{"fg":4,"bold":true}],["|",{"inverse":true}],["160 ",{"fg":3,"bold":true}],["  function MyCalAction(day,month,year,week,dir)                                                                                    ",{}],["|",{"inverse":true}],["~                     ",{"fg":4,"bold":true}]],"41":[["~",{"fg":4,"bold":true}],["|",{"inverse":true}],["161 ",{"fg":3,"bold":true}],["    \" day   : day you actioned                                                                                                     ",{}],["|",{"inverse":true}],["~                     ",{"fg":4,"bold":true}]],"42":[["~",{"fg":4,"bold":true}],["|",{"inverse":true}],["162 ",{"fg":3,"bold":true}],["    \" month : month you actioned                                                                                                   ",{}],["|",{"inverse":true}],["~                     ",{"fg":4,"bold":true}]],"43":[["~",{"fg":4,"bold":true}],["|",{"inverse":true}],["163 ",{"fg":3,"bold":true}],["    \" year  : year you actioned                                                                                                    ",{}],["|",{"inverse":true}],["~                     ",{"fg":4,"bold":true}]],"44":[["~",{"fg":4,"bold":true}],["|",{"inverse":true}],["164 ",{"fg":3,"bold":true}],["    \" week  : day of week (Mo=1 ... Su=7)                                                                                          ",{}],["|",{"inverse":true}],["~                     ",{"fg":4,"bold":true}]],"45":[["~",{"fg":4,"bold":true}],["|",{"inverse":true}],["165 ",{"fg":3,"bold":true}],["    \" dir   : direction of calendar                                                                                                ",{"underline":true}],["|",{"inverse":true}],["~                     ",{"fg":4,"bold":true}]],"46":[["<  ",{"inverse":true}],[".vim/bundle/calendar-vim/doc/",{}],["calendar.txt ",{"bold":true}],["                                                                            75% ",{}],["│ LN 165",{"bold":true}],[":1  ",{}],[" ",{"inverse":true}],[" ~/NERD_tree_1 ",{"bold":true}],["       ",{}]]},"cursor":{"x":142,"y":17,"visible":true}}],[1.825694,{"lines":{"47":[["E21: Cannot make changes, 'modifiable' is off",{"fg":7,"bg":1,"bold":true}],["                                                                                                        ^W         ",{}]]}}],[0.152451,{"lines":{"47":[["E21: Cannot make changes, 'modifiable' is off",{"fg":7,"bg":1,"bold":true}],["                                                                                                        ^Wh        ",{}]]},"cursor":{"visible":false}}],[0.019997,{"lines":{"46":[["< ",{"inverse":true}],[" NORMAL ",{"bold":true}],[" ",{}],["calendar.txt ",{"bold":true}],["                                                                           unix │ utf-8 │ text │  75% ",{}],[" LN 165",{"bold":true}],[":1  ",{}],[" ",{"bold":true,"inverse":true}],[" ~/…/calendar-vim/doc>",{"bold":true}]],"47":[["E21: Cannot make changes, 'modifiable' is off",{"fg":7,"bg":1,"bold":true}],["                                                                                                                   ",{}]]},"cursor":{"x":6,"y":45,"visible":true}}],[0.673138,{"lines":{"47":[["E21: Cannot make changes, 'modifiable' is off",{"fg":7,"bg":1,"bold":true}],["                                                                                                        k          ",{}]]},"cursor":{"visible":false}}],[0.007837999999999999,{"lines":{"44":[["~",{"fg":4,"bold":true}],["|",{"inverse":true}],["164 ",{"fg":3,"bold":true}],["    \" week  : day of week (Mo=1 ... Su=7)                                                                                          ",{"underline":true}],["|",{"inverse":true}],["~                     ",{"fg":4,"bold":true}]],"45":[["~",{"fg":4,"bold":true}],["|",{"inverse":true}],["165 ",{"fg":3,"bold":true}],["    \" dir   : direction of calendar                                                                                                ",{}],["|",{"inverse":true}],["~                     ",{"fg":4,"bold":true}]],"46":[["< ",{"inverse":true}],[" NORMAL ",{"bold":true}],[" ",{}],["calendar.txt ",{"bold":true}],["                                                                           unix │ utf-8 │ text │  74% ",{}],[" LN 164",{"bold":true}],[":1  ",{}],[" ",{"bold":true,"inverse":true}],[" ~/…/calendar-vim/doc>",{"bold":true}]],"47":[["E21: Cannot make changes, 'modifiable' is off",{"fg":7,"bg":1,"bold":true}],["                                                                                                                   ",{}]]},"cursor":{"y":44,"visible":true}}],[0.255013,{"lines":{"47":[["E21: Cannot make changes, 'modifiable' is off",{"fg":7,"bg":1,"bold":true}],["                                                                                                        k          ",{}]]},"cursor":{"visible":false}}],[0.010368,{"lines":{"43":[["~",{"fg":4,"bold":true}],["|",{"inverse":true}],["163 ",{"fg":3,"bold":true}],["    \" year  : year you actioned                                                                                                    ",{"underline":true}],["|",{"inverse":true}],["~                     ",{"fg":4,"bold":true}]],"44":[["~",{"fg":4,"bold":true}],["|",{"inverse":true}],["164 ",{"fg":3,"bold":true}],["    \" week  : day of week (Mo=1 ... Su=7)                                                                                          ",{}],["|",{"inverse":true}],["~                     ",{"fg":4,"bold":true}]],"46":[["< ",{"inverse":true}],[" NORMAL ",{"bold":true}],[" ",{}],["calendar.txt ",{"bold":true}],["                                                                           unix │ utf-8 │ text │  74% ",{}],[" LN 163",{"bold":true}],[":1  ",{}],[" ",{"bold":true,"inverse":true}],[" ~/…/calendar-vim/doc>",{"bold":true}]],"47":[["E21: Cannot make changes, 'modifiable' is off",{"fg":7,"bg":1,"bold":true}],["                                                                                                                   ",{}]]},"cursor":{"y":43,"visible":true}}],[0.239675,{"lines":{"47":[["E21: Cannot make changes, 'modifiable' is off",{"fg":7,"bg":1,"bold":true}],["                                                                                                        k          ",{}]]},"cursor":{"visible":false}}],[0.00747,{"lines":{"42":[["~",{"fg":4,"bold":true}],["|",{"inverse":true}],["162 ",{"fg":3,"bold":true}],["    \" month : month you actioned                                                                                                   ",{"underline":true}],["|",{"inverse":true}],["~                     ",{"fg":4,"bold":true}]],"43":[["~",{"fg":4,"bold":true}],["|",{"inverse":true}],["163 ",{"fg":3,"bold":true}],["    \" year  : year you actioned                                                                                                    ",{}],["|",{"inverse":true}],["~                     ",{"fg":4,"bold":true}]],"46":[["< ",{"inverse":true}],[" NORMAL ",{"bold":true}],[" ",{}],["calendar.txt ",{"bold":true}],["                                                                           unix │ utf-8 │ text │  73% ",{}],[" LN 162",{"bold":true}],[":1  ",{}],[" ",{"bold":true,"inverse":true}],[" ~/…/calendar-vim/doc>",{"bold":true}]],"47":[["E21: Cannot make changes, 'modifiable' is off",{"fg":7,"bg":1,"bold":true}],["                                                                                                                   ",{}]]},"cursor":{"y":42,"visible":true}}],[0.02317,{"lines":{"47":[["E21: Cannot make changes, 'modifiable' is off",{"fg":7,"bg":1,"bold":true}],["                                                                                                        k          ",{}]]},"cursor":{"visible":false}}],[0.031259,{"lines":{"41":[["~",{"fg":4,"bold":true}],["|",{"inverse":true}],["161 ",{"fg":3,"bold":true}],["    \" day   : day you actioned                                                                                                     ",{"underline":true}],["|",{"inverse":true}],["~                     ",{"fg":4,"bold":true}]],"42":[["~",{"fg":4,"bold":true}],["|",{"inverse":true}],["162 ",{"fg":3,"bold":true}],["    \" month : month you actioned                                                                                                   ",{}],["|",{"inverse":true}],["~                     ",{"fg":4,"bold":true}]],"46":[["< ",{"inverse":true}],[" NORMAL ",{"bold":true}],[" ",{}],["calendar.txt ",{"bold":true}],["                                                                           unix │ utf-8 │ text │  73% ",{}],[" LN 161",{"bold":true}],[":1  ",{}],[" ",{"bold":true,"inverse":true}],[" ~/…/calendar-vim/doc>",{"bold":true}]],"47":[["E21: Cannot make changes, 'modifiable' is off",{"fg":7,"bg":1,"bold":true}],["                                                                                                                   ",{}]]},"cursor":{"y":41,"visible":true}}],[0.008351000000000001,{"lines":{"40":[["~",{"fg":4,"bold":true}],["|",{"inverse":true}],["160 ",{"fg":3,"bold":true}],["  function MyCalAction(day,month,year,week,dir)                                                                                    ",{"underline":true}],["|",{"inverse":true}],["~                     ",{"fg":4,"bold":true}]],"41":[["~",{"fg":4,"bold":true}],["|",{"inverse":true}],["161 ",{"fg":3,"bold":true}],["    \" day   : day you actioned                                                                                                     ",{}],["|",{"inverse":true}],["~                     ",{"fg":4,"bold":true}]],"46":[["< ",{"inverse":true}],[" NORMAL ",{"bold":true}],[" ",{}],["calendar.txt ",{"bold":true}],["                                                                           unix │ utf-8 │ text │  72% ",{}],[" LN 160",{"bold":true}],[":1  ",{}],[" ",{"bold":true,"inverse":true}],[" ~/…/calendar-vim/doc>",{"bold":true}]]},"cursor":{"y":40}}],[0.044725,{"lines":{"47":[["E21: Cannot make changes, 'modifiable' is off",{"fg":7,"bg":1,"bold":true}],["                                                                                                        k          ",{}]]},"cursor":{"visible":false}}],[0.00216,{"lines":{"39":[["~",{"fg":4,"bold":true}],["|",{"inverse":true}],["159 ",{"fg":3,"bold":true}],["presses enter on a date.  Implement and set your function as follows: >                                                            ",{"underline":true}],["|",{"inverse":true}],["~                     ",{"fg":4,"bold":true}]],"40":[["~",{"fg":4,"bold":true}],["|",{"inverse":true}],["160 ",{"fg":3,"bold":true}],["  function MyCalAction(day,month,year,week,dir)                                                                                    ",{}],["|",{"inverse":true}],["~                     ",{"fg":4,"bold":true}]],"46":[["< ",{"inverse":true}],[" NORMAL ",{"bold":true}],[" ",{}],["calendar.txt ",{"bold":true}],["                                                                           unix │ utf-8 │ text │  72% ",{}],[" LN 159",{"bold":true}],[":1  ",{}],[" ",{"bold":true,"inverse":true}],[" ~/…/calendar-vim/doc>",{"bold":true}]],"47":[["E21: Cannot make changes, 'modifiable' is off",{"fg":7,"bg":1,"bold":true}],["                                                                                                                   ",{}]]},"cursor":{"y":39,"visible":true}}],[0.015291,{"lines":{"47":[["E21: Cannot make changes, 'modifiable' is off",{"fg":7,"bg":1,"bold":true}],["                                                                                                        k          ",{}]]},"cursor":{"visible":false}}],[0.006162,{"lines":{"38":[["~",{"fg":4,"bold":true}],["|",{"inverse":true}],["158 ",{"fg":3,"bold":true}],["The function declared in the calendar_action variable is run when the user                                                         ",{"underline":true}],["|",{"inverse":true}],["~                     ",{"fg":4,"bold":true}]],"39":[["~",{"fg":4,"bold":true}],["|",{"inverse":true}],["159 ",{"fg":3,"bold":true}],["presses enter on a date.  Implement and set your function as follows: >                                                            ",{}],["|",{"inverse":true}],["~                     ",{"fg":4,"bold":true}]],"46":[["< ",{"inverse":true}],[" NORMAL ",{"bold":true}],[" ",{}],["calendar.txt ",{"bold":true}],["                                                                           unix │ utf-8 │ text │  71% ",{}],[" LN 158",{"bold":true}],[":1  ",{}],[" ",{"bold":true,"inverse":true}],[" ~/…/calendar-vim/doc>",{"bold":true}]],"47":[["E21: Cannot make changes, 'modifiable' is off",{"fg":7,"bg":1,"bold":true}],["                                                                                                                   ",{}]]},"cursor":{"y":38,"visible":true}}],[0.03145,{"lines":{"47":[["E21: Cannot make changes, 'modifiable' is off",{"fg":7,"bg":1,"bold":true}],["                                                                                                        k          ",{}]]},"cursor":{"visible":false}}],[0.002972,{"lines":{"37":[["~",{"fg":4,"bold":true}],["|",{"inverse":true}],["157 ",{"fg":3,"bold":true}],["                                                *calendar_action*                                                                  ",{"underline":true}],["|",{"inverse":true}],["~                     ",{"fg":4,"bold":true}]],"38":[["~",{"fg":4,"bold":true}],["|",{"inverse":true}],["158 ",{"fg":3,"bold":true}],["The function declared in the calendar_action variable is run when the user                                                         ",{}],["|",{"inverse":true}],["~                     ",{"fg":4,"bold":true}]],"46":[["< ",{"inverse":true}],[" NORMAL ",{"bold":true}],[" ",{}],["calendar.txt ",{"bold":true}],["                                                                           unix │ utf-8 │ text │  71% ",{}],[" LN 157",{"bold":true}],[":1  ",{}],[" ",{"bold":true,"inverse":true}],[" ~/…/calendar-vim/doc>",{"bold":true}]],"47":[["E21: Cannot make changes, 'modifiable' is off",{"fg":7,"bg":1,"bold":true}],["                                                                                                                   ",{}]]},"cursor":{"y":37,"visible":true}}],[0.027472,{"lines":{"47":[["E21: Cannot make changes, 'modifiable' is off",{"fg":7,"bg":1,"bold":true}],["                                                                                                        k          ",{}]]},"cursor":{"visible":false}}],[0.024961,{"lines":{"36":[["~",{"fg":4,"bold":true}],["|",{"inverse":true}],["156 ",{"fg":3,"bold":true}],["                                                                                                                                   ",{"underline":true}],["|",{"inverse":true}],["~                     ",{"fg":4,"bold":true}]],"37":[["~",{"fg":4,"bold":true}],["|",{"inverse":true}],["157 ",{"fg":3,"bold":true}],["                                                *calendar_action*                                                                  ",{}],["|",{"inverse":true}],["~                     ",{"fg":4,"bold":true}]],"46":[["< ",{"inverse":true}],[" NORMAL ",{"bold":true}],[" ",{}],["calendar.txt ",{"bold":true}],["                                                                           unix │ utf-8 │ text │  70% ",{}],[" LN 156",{"bold":true}],[":1  ",{}],[" ",{"bold":true,"inverse":true}],[" ~/…/calendar-vim/doc>",{"bold":true}]],"47":[["E21: Cannot make changes, 'modifiable' is off",{"fg":7,"bg":1,"bold":true}],["                                                                                                                   ",{}]]},"cursor":{"y":36,"visible":true}}],[0.015194,{"lines":{"35":[["~",{"fg":4,"bold":true}],["|",{"inverse":true}],["155 ",{"fg":3,"bold":true}],["certain events.  These are documented below.                                                                                       ",{"underline":true}],["|",{"inverse":true}],["~                     ",{"fg":4,"bold":true}]],"36":[["~",{"fg":4,"bold":true}],["|",{"inverse":true}],["156 ",{"fg":3,"bold":true}],["                                                                                                                                   ",{}],["|",{"inverse":true}],["~                     ",{"fg":4,"bold":true}]],"46":[["< ",{"inverse":true}],[" NORMAL ",{"bold":true}],[" ",{}],["calendar.txt ",{"bold":true}],["                                                                           unix │ utf-8 │ text │  70% ",{}],[" LN 155",{"bold":true}],[":1  ",{}],[" ",{"bold":true,"inverse":true}],[" ~/…/calendar-vim/doc>",{"bold":true}]]},"cursor":{"y":35}}],[0.036317,{"lines":{"47":[["E21: Cannot make changes, 'modifiable' is off",{"fg":7,"bg":1,"bold":true}],["                                                                                                        k          ",{}]]},"cursor":{"visible":false}}],[0.002138,{"lines":{"34":[["~",{"fg":4,"bold":true}],["|",{"inverse":true}],["154 ",{"fg":3,"bold":true}],["calendar.vim provides a number of hooks which allow you to run custom code on                                                      ",{"underline":true}],["|",{"inverse":true}],[" 35 ",{"fg":3,"bold":true}],["  .test.cpp.swp   ",{}]],"35":[["~",{"fg":4,"bold":true}],["|",{"inverse":true}],["155 ",{"fg":3,"bold":true}],["certain events.  These are documented below.                                                                                       ",{}],["|",{"inverse":true}],["~                     ",{"fg":4,"bold":true}]],"46":[["< ",{"inverse":true}],[" NORMAL ",{"bold":true}],[" ",{}],["calendar.txt ",{"bold":true}],["                                                                           unix │ utf-8 │ text │  70% ",{}],[" LN 154",{"bold":true}],[":1  ",{}],[" ",{"bold":true,"inverse":true}],[" ~/…/calendar-vim/doc>",{"bold":true}]],"47":[["E21: Cannot make changes, 'modifiable' is off",{"fg":7,"bg":1,"bold":true}],["                                                                                                                   ",{}]]},"cursor":{"y":34,"visible":true}}],[0.023788,{"lines":{"47":[["E21: Cannot make changes, 'modifiable' is off",{"fg":7,"bg":1,"bold":true}],["                                                                                                        k          ",{}]]},"cursor":{"visible":false}}],[0.006409,{"lines":{"33":[["~",{"fg":4,"bold":true}],["|",{"inverse":true}],["153 ",{"fg":3,"bold":true}],["                                                                                                                                   ",{"underline":true}],["|",{"inverse":true}],[" 34 ",{"fg":3,"bold":true}],["  test.cpp        ",{}]],"34":[["~",{"fg":4,"bold":true}],["|",{"inverse":true}],["154 ",{"fg":3,"bold":true}],["calendar.vim provides a number of hooks which allow you to run custom code on                                                      ",{}],["|",{"inverse":true}],[" 35 ",{"fg":3,"bold":true}],["  .test.cpp.swp   ",{}]],"46":[["< ",{"inverse":true}],[" NORMAL ",{"bold":true}],[" ",{}],["calendar.txt ",{"bold":true}],["                                                                           unix │ utf-8 │ text │  69% ",{}],[" LN 153",{"bold":true}],[":1  ",{}],[" ",{"bold":true,"inverse":true}],[" ~/…/calendar-vim/doc>",{"bold":true}]],"47":[["E21: Cannot make changes, 'modifiable' is off",{"fg":7,"bg":1,"bold":true}],["                                                                                                                   ",{}]]},"cursor":{"y":33,"visible":true}}],[0.030669,{"lines":{"47":[["E21: Cannot make changes, 'modifiable' is off",{"fg":7,"bg":1,"bold":true}],["                                                                                                        k          ",{}]]},"cursor":{"visible":false}}],[0.001749,{"lines":{"32":[["~",{"fg":4,"bold":true}],["|",{"inverse":true}],["152 ",{"fg":3,"bold":true}],["HOOKS                                           *calendar-hooks*                                                                   ",{"underline":true}],["|",{"inverse":true}],[" 33 ",{"fg":3,"bold":true}],["  test.c          ",{}]],"33":[["~",{"fg":4,"bold":true}],["|",{"inverse":true}],["153 ",{"fg":3,"bold":true}],["                                                                                                                                   ",{}],["|",{"inverse":true}],[" 34 ",{"fg":3,"bold":true}],["  test.cpp        ",{}]],"46":[["< ",{"inverse":true}],[" NORMAL ",{"bold":true}],[" ",{}],["calendar.txt ",{"bold":true}],["                                                                           unix │ utf-8 │ text │  69% ",{}],[" LN 152",{"bold":true}],[":1  ",{}],[" ",{"bold":true,"inverse":true}],[" ~/…/calendar-vim/doc>",{"bold":true}]],"47":[["E21: Cannot make changes, 'modifiable' is off",{"fg":7,"bg":1,"bold":true}],["                                                                                                                   ",{}]]},"cursor":{"y":32,"visible":true}}],[0.028893,{"lines":{"47":[["E21: Cannot make changes, 'modifiable' is off",{"fg":7,"bg":1,"bold":true}],["                                                                                                        k          ",{}]]},"cursor":{"visible":false}}],[0.023441,{"lines":{"31":[["~",{"fg":4,"bold":true}],["|",{"inverse":true}],["151 ",{"fg":3,"bold":true}],["                                                                                                                                   ",{"underline":true}],["|",{"inverse":true}],[" 32 ",{"fg":3,"bold":true}],["  initial-setup-ks",{}]],"32":[["~",{"fg":4,"bold":true}],["|",{"inverse":true}],["152 ",{"fg":3,"bold":true}],["HOOKS                                           *calendar-hooks*                                                                   ",{}],["|",{"inverse":true}],[" 33 ",{"fg":3,"bold":true}],["  test.c          ",{}]],"46":[["< ",{"inverse":true}],[" NORMAL ",{"bold":true}],[" ",{}],["calendar.txt ",{"bold":true}],["                                                                           unix │ utf-8 │ text │  68% ",{}],[" LN 151",{"bold":true}],[":1  ",{}],[" ",{"bold":true,"inverse":true}],[" ~/…/calendar-vim/doc>",{"bold":true}]],"47":[["E21: Cannot make changes, 'modifiable' is off",{"fg":7,"bg":1,"bold":true}],["                                                                                                                   ",{}]]},"cursor":{"y":31,"visible":true}}],[0.015867,{"lines":{"30":[["~",{"fg":4,"bold":true}],["|",{"inverse":true}],["150 ",{"fg":3,"bold":true}],["                                                                                                                                   ",{"underline":true}],["|",{"inverse":true}],[" 31 ",{"fg":3,"bold":true}],["  anaconda-ks.cfg ",{}]],"31":[["~",{"fg":4,"bold":true}],["|",{"inverse":true}],["151 ",{"fg":3,"bold":true}],["                                                                                                                                   ",{}],["|",{"inverse":true}],[" 32 ",{"fg":3,"bold":true}],["  initial-setup-ks",{}]],"46":[["< ",{"inverse":true}],[" NORMAL ",{"bold":true}],[" ",{}],["calendar.txt ",{"bold":true}],["                                                                           unix │ utf-8 │ text │  68% ",{}],[" LN 150",{"bold":true}],[":1  ",{}],[" ",{"bold":true,"inverse":true}],[" ~/…/calendar-vim/doc>",{"bold":true}]]},"cursor":{"y":30}}],[0.039068,{"lines":{"47":[["E21: Cannot make changes, 'modifiable' is off",{"fg":7,"bg":1,"bold":true}],["                                                                                                        k          ",{}]]},"cursor":{"visible":false}}],[0.002624,{"lines":{"29":[["~",{"fg":4,"bold":true}],["|",{"inverse":true}],["149 ",{"fg":3,"bold":true}],["  let g:calendar_filetype = 'pandoc'                                                                                               ",{"underline":true}],["|",{"inverse":true}],[" 30 ",{"fg":3,"bold":true}],["  .xsession-errors",{}]],"30":[["~",{"fg":4,"bold":true}],["|",{"inverse":true}],["150 ",{"fg":3,"bold":true}],["                                                                                                                                   ",{}],["|",{"inverse":true}],[" 31 ",{"fg":3,"bold":true}],["  anaconda-ks.cfg ",{}]],"46":[["< ",{"inverse":true}],[" NORMAL ",{"bold":true}],[" ",{}],["calendar.txt ",{"bold":true}],["                                                                           unix │ utf-8 │ text │  67% ",{}],[" LN 149",{"bold":true}],[":1  ",{}],[" ",{"bold":true,"inverse":true}],[" ~/…/calendar-vim/doc>",{"bold":true}]],"47":[["E21: Cannot make changes, 'modifiable' is off",{"fg":7,"bg":1,"bold":true}],["                                                                                                                   ",{}]]},"cursor":{"y":29,"visible":true}}],[0.020915,{"lines":{"47":[["E21: Cannot make changes, 'modifiable' is off",{"fg":7,"bg":1,"bold":true}],["                                                                                                        k          ",{}]]},"cursor":{"visible":false}}],[0.026698,{"lines":{"28":[["~",{"fg":4,"bold":true}],["|",{"inverse":true}],["148 ",{"fg":3,"bold":true}],["like e.g. 'markdown' or 'pandoc':                                                                                                  ",{"underline":true}],["|",{"inverse":true}],[" 29 ",{"fg":3,"bold":true}],["  .vimrc          ",{}]],"29":[["~",{"fg":4,"bold":true}],["|",{"inverse":true}],["149 ",{"fg":3,"bold":true}],["  let g:calendar_filetype = 'pandoc'                                                                                               ",{}],["|",{"inverse":true}],[" 30 ",{"fg":3,"bold":true}],["  .xsession-errors",{}]],"46":[["< ",{"inverse":true}],[" NORMAL ",{"bold":true}],[" ",{}],["calendar.txt ",{"bold":true}],["                                                                           unix │ utf-8 │ text │  67% ",{}],[" LN 148",{"bold":true}],[":1  ",{}],[" ",{"bold":true,"inverse":true}],[" ~/…/calendar-vim/doc>",{"bold":true}]],"47":[["E21: Cannot make changes, 'modifiable' is off",{"fg":7,"bg":1,"bold":true}],["                                                                                                                   ",{}]]},"cursor":{"y":28,"visible":true}}],[0.418098,{"lines":{"47":[["E21: Cannot make changes, 'modifiable' is off",{"fg":7,"bg":1,"bold":true}],["                                                                                                        ^W         ",{}]]}}],[0.416911,{"lines":{"47":[["E21: Cannot make changes, 'modifiable' is off",{"fg":7,"bg":1,"bold":true}],["                                                                                                        ^Wh        ",{}]]},"cursor":{"visible":false}}],[0.061904,{"lines":{"0":[["e",{"fg":6,"bold":true}],["|",{"inverse":true}],["120 ",{"fg":3,"bold":true}],["Sunday: >                                                                                                                          ",{}],["|",{"inverse":true}],["  1 ",{"fg":3,"bold":true}],["\" Press ? for help",{"fg":5,"bold":true}]],"2":[["r",{"fg":5,"bold":true}],["|",{"inverse":true}],["122 ",{"fg":3,"bold":true}],["<                                                                                                                                  ",{}],["|",{"inverse":true}],["  3 ",{"fg":3,"bold":true}],[".. (up a dir)",{"fg":6,"bold":true}],["     ",{}]],"3":[["[",{"fg":6,"bold":true}],["|",{"inverse":true}],["123 ",{"fg":3,"bold":true}],["                                                                                                                                   ",{}],["|",{"inverse":true}],["  4 /root/",{"fg":3,"bold":true}],["            ",{}]],"4":[["F",{}],["|",{"inverse":true}],["124 ",{"fg":3,"bold":true}],["                                                *g:calendar_monday*                                                                ",{}],["|",{"inverse":true}],["  5 ",{"fg":3,"bold":true}],["▸ .asciinema/",{"fg":6,"bold":true}],["     ",{}]],"5":[["F",{}],["|",{"inverse":true}],["125 ",{"fg":3,"bold":true}],["To make the week start on Monday rather than Sunday, set this variable.  Note                                                      ",{}],["|",{"inverse":true}],["  6 ",{"fg":3,"bold":true}],["▸ .cache/",{"fg":6,"bold":true}],["         ",{}]],"7":[["s",{"fg":5,"bold":true}],["|",{"inverse":true}],["127 ",{"fg":3,"bold":true}],["always begin with Sunday: >                                                                                                        ",{}],["|",{"inverse":true}],["  8 ",{"fg":3,"bold":true}],["▸ .dbus/",{"fg":6,"bold":true}],["          ",{}]],"8":[["[",{"fg":6,"bold":true}],["|",{"inverse":true}],["128 ",{"fg":3,"bold":true}],["  let g:calendar_monday = 1                                                                                                        ",{}],["|",{"inverse":true}],["  9 ",{"fg":3,"bold":true}],["▸ .gnupg/",{"fg":6,"bold":true}],["         ",{}]],"9":[["F",{}],["|",{"inverse":true}],["129 ",{"fg":3,"bold":true}],["<                                                                                                                                  ",{}],["|",{"inverse":true}],[" 10 ",{"fg":3,"bold":true}],["▸ .kde/",{"fg":6,"bold":true}],["           ",{}]],"10":[["F",{}],["|",{"inverse":true}],["130 ",{"fg":3,"bold":true}],["                                                                                                                                   ",{}],["|",{"inverse":true}],[" 11 ",{"fg":3,"bold":true}],["▸ .local/",{"fg":6,"bold":true}],["         ",{}]],"11":[["~",{}],["|",{"inverse":true}],["131 ",{"fg":3,"bold":true}],["                                                *g:calendar_weeknm*                                                                ",{}],["|",{"inverse":true}],[" 12 ",{"fg":3,"bold":true}],["▸ .pki/",{"fg":6,"bold":true}],["           ",{}]],"12":[["S",{}],["|",{"inverse":true}],["132 ",{"fg":3,"bold":true}],["To show the week number, set this variable.  There are four valid settings: >                                                      ",{}],["|",{"inverse":true}],[" 13 ",{"fg":3,"bold":true}],["▸ .ssh/",{"fg":6,"bold":true}],["           ",{}]],"13":[["S",{}],["|",{"inverse":true}],["133 ",{"fg":3,"bold":true}],["  let g:calendar_weeknm = 1 \" WK01                                                                                                 ",{}],["|",{"inverse":true}],[" 14 ",{"fg":3,"bold":true}],["▸ .vim/",{"fg":6,"bold":true}],["           ",{}]],"15":[["c",{"fg":5,"bold":true}],["|",{"inverse":true}],["135 ",{"fg":3,"bold":true}],["  let g:calendar_weeknm = 3 \" KW01                                                                                                 ",{}],["|",{"inverse":true}],[" 16 ",{"fg":3,"bold":true}],["▸ temp/",{"fg":6,"bold":true}],["           ",{}]],"16":[["[",{"fg":6,"bold":true}],["|",{"inverse":true}],["136 ",{"fg":3,"bold":true}],["  let g:calendar_weeknm = 4 \" KW 1                                                                                                 ",{}],["|",{"inverse":true}],[" 17 ",{"fg":3,"bold":true}],["  .bash_history   ",{}]],"17":[["S",{"underline":true}],["|",{"inverse":true}],["137 ",{"fg":3,"bold":true}],["  let g:calendar_weeknm = 5 \" 1                                                                                                    ",{}],["|",{"inverse":true}],[" 18 ",{"fg":3,"bold":true}],["  .bash_logout    ",{"underline":true}]],"18":[["S",{}],["|",{"inverse":true}],["138 ",{"fg":3,"bold":true}],["<                                                                                                                                  ",{}],["|",{"inverse":true}],[" 19 ",{"fg":3,"bold":true}],["  .bash_profile   ",{}]],"20":[["n",{"fg":6,"bold":true}],["|",{"inverse":true}],["140 ",{"fg":3,"bold":true}],["                                                *g:calendar_datetime*                                                              ",{}],["|",{"inverse":true}],[" 21 ",{"fg":3,"bold":true}],["  .cshrc          ",{}]],"21":[["m",{}],["|",{"inverse":true}],["141 ",{"fg":3,"bold":true}],["To control display of the current date and time, set this variable.                                                                ",{}],["|",{"inverse":true}],[" 22 ",{"fg":3,"bold":true}],["  .dmrc           ",{}]],"46":[[">",{"bold":true}],[" ",{"bold":true,"inverse":true}],[" ",{"inverse":true}],[".vim/bundle/calendar-vim/doc/",{}],["calendar.txt ",{"bold":true}],["                                                                            67% ",{}],["│ LN 148",{"bold":true}],[":1  ",{}],[" ",{"inverse":true}],[" ~/NERD_tree_1 ",{"bold":true}],["       ",{}]],"47":[["E21: Cannot make changes, 'modifiable' is off",{"fg":7,"bg":1,"bold":true}],["                                                                                                                   ",{}]]},"cursor":{"x":0,"y":17,"visible":true}}],[2.13531,{"lines":{"0":[["[",{"fg":6,"bold":true}],["|",{"inverse":true}],["123 ",{"fg":3,"bold":true}],["                                                                                                                                   ",{}],["|",{"inverse":true}],["  4 /root/",{"fg":3,"bold":true}],["            ",{}]],"1":[["F",{}],["|",{"inverse":true}],["124 ",{"fg":3,"bold":true}],["                                                *g:calendar_monday*                                                                ",{}],["|",{"inverse":true}],["  5 ",{"fg":3,"bold":true}],["▸ .asciinema/",{"fg":6,"bold":true}],["     ",{}]],"2":[["F",{}],["|",{"inverse":true}],["125 ",{"fg":3,"bold":true}],["To make the week start on Monday rather than Sunday, set this variable.  Note                                                      ",{}],["|",{"inverse":true}],["  6 ",{"fg":3,"bold":true}],["▸ .cache/",{"fg":6,"bold":true}],["         ",{}]],"3":[[" ",{}],["|",{"inverse":true}],["126 ",{"fg":3,"bold":true}],["that the value of |g:calendar_wruler| is not affected by this; it should                                                           ",{}],["|",{"inverse":true}],["  7 ",{"fg":3,"bold":true}],["▸ .config/",{"fg":6,"bold":true}],["        ",{}]],"4":[["s",{"fg":5,"bold":true}],["|",{"inverse":true}],["127 ",{"fg":3,"bold":true}],["always begin with Sunday: >                                                                                                        ",{}],["|",{"inverse":true}],["  8 ",{"fg":3,"bold":true}],["▸ .dbus/",{"fg":6,"bold":true}],["          ",{}]],"5":[["[",{"fg":6,"bold":true}],["|",{"inverse":true}],["128 ",{"fg":3,"bold":true}],["  let g:calendar_monday = 1                                                                                                        ",{}],["|",{"inverse":true}],["  9 ",{"fg":3,"bold":true}],["▸ .gnupg/",{"fg":6,"bold":true}],["         ",{}]],"6":[["F",{}],["|",{"inverse":true}],["129 ",{"fg":3,"bold":true}],["<                                                                                                                                  ",{}],["|",{"inverse":true}],[" 10 ",{"fg":3,"bold":true}],["▸ .kde/",{"fg":6,"bold":true}],["           ",{}]],"7":[["F",{}],["|",{"inverse":true}],["130 ",{"fg":3,"bold":true}],["                                                                                                                                   ",{}],["|",{"inverse":true}],[" 11 ",{"fg":3,"bold":true}],["▸ .local/",{"fg":6,"bold":true}],["         ",{}]],"8":[["~",{}],["|",{"inverse":true}],["131 ",{"fg":3,"bold":true}],["                                                *g:calendar_weeknm*                                                                ",{}],["|",{"inverse":true}],[" 12 ",{"fg":3,"bold":true}],["▸ .pki/",{"fg":6,"bold":true}],["           ",{}]],"9":[["S",{}],["|",{"inverse":true}],["132 ",{"fg":3,"bold":true}],["To show the week number, set this variable.  There are four valid settings: >                                                      ",{}],["|",{"inverse":true}],[" 13 ",{"fg":3,"bold":true}],["▸ .ssh/",{"fg":6,"bold":true}],["           ",{}]],"10":[["S",{}],["|",{"inverse":true}],["133 ",{"fg":3,"bold":true}],["  let g:calendar_weeknm = 1 \" WK01                                                                                                 ",{}],["|",{"inverse":true}],[" 14 ",{"fg":3,"bold":true}],["▸ .vim/",{"fg":6,"bold":true}],["           ",{}]],"11":[[" ",{}],["|",{"inverse":true}],["134 ",{"fg":3,"bold":true}],["  let g:calendar_weeknm = 2 \" WK 1                                                                                                 ",{}],["|",{"inverse":true}],[" 15 ",{"fg":3,"bold":true}],["▸ diary/",{"fg":6,"bold":true}],["          ",{}]],"12":[["c",{"fg":5,"bold":true}],["|",{"inverse":true}],["135 ",{"fg":3,"bold":true}],["  let g:calendar_weeknm = 3 \" KW01                                                                                                 ",{}],["|",{"inverse":true}],[" 16 ",{"fg":3,"bold":true}],["▸ temp/",{"fg":6,"bold":true}],["           ",{}]],"13":[["[",{"fg":6,"bold":true}],["|",{"inverse":true}],["136 ",{"fg":3,"bold":true}],["  let g:calendar_weeknm = 4 \" KW 1                                                                                                 ",{}],["|",{"inverse":true}],[" 17 ",{"fg":3,"bold":true}],["  .bash_history   ",{}]],"14":[["S",{"underline":true}],["|",{"inverse":true}],["137 ",{"fg":3,"bold":true}],["  let g:calendar_weeknm = 5 \" 1                                                                                                    ",{}],["|",{"inverse":true}],[" 18 ",{"fg":3,"bold":true}],["  .bash_logout    ",{"underline":true}]],"15":[["S",{}],["|",{"inverse":true}],["138 ",{"fg":3,"bold":true}],["<                                                                                                                                  ",{}],["|",{"inverse":true}],[" 19 ",{"fg":3,"bold":true}],["  .bash_profile   ",{}]],"16":[[" ",{}],["|",{"inverse":true}],["139 ",{"fg":3,"bold":true}],["                                                                                                                                   ",{}],["|",{"inverse":true}],[" 20 ",{"fg":3,"bold":true}],["  .bashrc         ",{}]],"17":[["n",{"fg":6,"bold":true}],["|",{"inverse":true}],["140 ",{"fg":3,"bold":true}],["                                                *g:calendar_datetime*                                                              ",{}],["|",{"inverse":true}],[" 21 ",{"fg":3,"bold":true}],["  .cshrc          ",{}]],"18":[["m",{}],["|",{"inverse":true}],["141 ",{"fg":3,"bold":true}],["To control display of the current date and time, set this variable.                                                                ",{}],["|",{"inverse":true}],[" 22 ",{"fg":3,"bold":true}],["  .dmrc           ",{}]],"19":[["~",{"fg":4,"bold":true}],["|",{"inverse":true}],["142 ",{"fg":3,"bold":true}],["Acceptable values are 'title', 'statusline', and '': >                                                                             ",{}],["|",{"inverse":true}],[" 23 ",{"fg":3,"bold":true}],["  .esd_auth       ",{}]],"20":[["~",{"fg":4,"bold":true}],["|",{"inverse":true}],["143 ",{"fg":3,"bold":true}],["  let g:calendar_datetime = 'title'                                                                                                ",{}],["|",{"inverse":true}],[" 24 ",{"fg":3,"bold":true}],["  .gtkrc-2.0      ",{}]],"21":[["~",{"fg":4,"bold":true}],["|",{"inverse":true}],["144 ",{"fg":3,"bold":true}],["<                                                                                                                                  ",{}],["|",{"inverse":true}],[" 25 ",{"fg":3,"bold":true}],["  .gtkrc-2.0-kde4 ",{}]],"22":[["~",{"fg":4,"bold":true}],["|",{"inverse":true}],["145 ",{"fg":3,"bold":true}],["                                                *g:calendar_filetype*                                                              ",{}],["|",{"inverse":true}],[" 26 ",{"fg":3,"bold":true}],["  .lesshst        ",{}]],"23":[["~",{"fg":4,"bold":true}],["|",{"inverse":true}],["146 ",{"fg":3,"bold":true}],["To control the filetype of calendar entries, set this variable. It defaults to                                                     ",{}],["|",{"inverse":true}],[" 27 ",{"fg":3,"bold":true}],["  .tcshrc         ",{}]],"24":[["~",{"fg":4,"bold":true}],["|",{"inverse":true}],["147 ",{"fg":3,"bold":true}],["'markdown'. Acceptable values are values that are acceptable for |filetype|                                                        ",{}],["|",{"inverse":true}],[" 28 ",{"fg":3,"bold":true}],["  .viminfo        ",{}]],"25":[["~",{"fg":4,"bold":true}],["|",{"inverse":true}],["148 ",{"fg":3,"bold":true}],["like e.g. 'markdown' or 'pandoc':                                                                                                  ",{"underline":true}],["|",{"inverse":true}],[" 29 ",{"fg":3,"bold":true}],["  .vimrc          ",{}]],"26":[["~",{"fg":4,"bold":true}],["|",{"inverse":true}],["149 ",{"fg":3,"bold":true}],["  let g:calendar_filetype = 'pandoc'                                                                                               ",{}],["|",{"inverse":true}],[" 30 ",{"fg":3,"bold":true}],["  .xsession-errors",{}]],"27":[["~",{"fg":4,"bold":true}],["|",{"inverse":true}],["150 ",{"fg":3,"bold":true}],["                                                                                                                                   ",{}],["|",{"inverse":true}],[" 31 ",{"fg":3,"bold":true}],["  anaconda-ks.cfg ",{}]],"28":[["~",{"fg":4,"bold":true}],["|",{"inverse":true}],["151 ",{"fg":3,"bold":true}],["                                                                                                                                   ",{}],["|",{"inverse":true}],[" 32 ",{"fg":3,"bold":true}],["  initial-setup-ks",{}]],"29":[["~",{"fg":4,"bold":true}],["|",{"inverse":true}],["152 ",{"fg":3,"bold":true}],["HOOKS                                           *calendar-hooks*                                                                   ",{}],["|",{"inverse":true}],[" 33 ",{"fg":3,"bold":true}],["  test.c          ",{}]],"30":[["~",{"fg":4,"bold":true}],["|",{"inverse":true}],["153 ",{"fg":3,"bold":true}],["                                                                                                                                   ",{}],["|",{"inverse":true}],[" 34 ",{"fg":3,"bold":true}],["  test.cpp        ",{}]],"31":[["~",{"fg":4,"bold":true}],["|",{"inverse":true}],["154 ",{"fg":3,"bold":true}],["calendar.vim provides a number of hooks which allow you to run custom code on                                                      ",{}],["|",{"inverse":true}],[" 35 ",{"fg":3,"bold":true}],["  .test.cpp.swp   ",{}]],"32":[["~",{"fg":4,"bold":true}],["|",{"inverse":true}],["155 ",{"fg":3,"bold":true}],["certain events.  These are documented below.                                                                                       ",{}],["|",{"inverse":true}],["~                     ",{"fg":4,"bold":true}]],"33":[["~",{"fg":4,"bold":true}],["|",{"inverse":true}],["156 ",{"fg":3,"bold":true}],["                                                                                                                                   ",{}],["|",{"inverse":true}],["~                     ",{"fg":4,"bold":true}]],"34":[["~",{"fg":4,"bold":true}],["|",{"inverse":true}],["157 ",{"fg":3,"bold":true}],["                                                *calendar_action*                                                                  ",{}],["|",{"inverse":true}],["~                     ",{"fg":4,"bold":true}]],"35":[["~",{"fg":4,"bold":true}],["|",{"inverse":true}],["158 ",{"fg":3,"bold":true}],["The function declared in the calendar_action variable is run when the user                                                         ",{}],["|",{"inverse":true}],["~                     ",{"fg":4,"bold":true}]],"36":[["~",{"fg":4,"bold":true}],["|",{"inverse":true}],["159 ",{"fg":3,"bold":true}],["presses enter on a date.  Implement and set your function as follows: >                                                            ",{}],["|",{"inverse":true}],["~                     ",{"fg":4,"bold":true}]],"37":[["~",{"fg":4,"bold":true}],["|",{"inverse":true}],["160 ",{"fg":3,"bold":true}],["  function MyCalAction(day,month,year,week,dir)                                                                                    ",{}],["|",{"inverse":true}],["~                     ",{"fg":4,"bold":true}]],"38":[["~",{"fg":4,"bold":true}],["|",{"inverse":true}],["161 ",{"fg":3,"bold":true}],["    \" day   : day you actioned                                                                                                     ",{}],["|",{"inverse":true}],["~                     ",{"fg":4,"bold":true}]],"39":[["~",{"fg":4,"bold":true}],["|",{"inverse":true}],["162 ",{"fg":3,"bold":true}],["    \" month : month you actioned                                                                                                   ",{}],["|",{"inverse":true}],["~                     ",{"fg":4,"bold":true}]],"40":[["~",{"fg":4,"bold":true}],["|",{"inverse":true}],["163 ",{"fg":3,"bold":true}],["    \" year  : year you actioned                                                                                                    ",{}],["|",{"inverse":true}],["~                     ",{"fg":4,"bold":true}]],"41":[["~",{"fg":4,"bold":true}],["|",{"inverse":true}],["164 ",{"fg":3,"bold":true}],["    \" week  : day of week (Mo=1 ... Su=7)                                                                                          ",{}],["|",{"inverse":true}],["~                     ",{"fg":4,"bold":true}]],"42":[["~",{"fg":4,"bold":true}],["|",{"inverse":true}],["165 ",{"fg":3,"bold":true}],["    \" dir   : direction of calendar                                                                                                ",{}],["|",{"inverse":true}],["~                     ",{"fg":4,"bold":true}]],"43":[[">",{"bold":true}],[" ",{"bold":true,"inverse":true}],[" ",{"inverse":true}],[".vim/bundle/calendar-vim/doc/",{}],["calendar.txt ",{"bold":true}],["                                                                            67% ",{}],["│ LN 148",{"bold":true}],[":1  ",{}],[" ",{"inverse":true}],[" ~/NERD_tree_1 ",{"bold":true}],["       ",{}]],"44":[["Error detected while processing function <SNR>65_ShowPrototype..246:",{"fg":7,"bg":1,"bold":true}],["                                                                                            ",{}]],"45":[["line    6:",{"fg":3,"bold":true}],["                                                                                                                                                      ",{}]],"46":[["E684: list index out of range: 0",{"fg":7,"bg":1,"bold":true}],["                                                                                                                                ",{}]],"47":[["Press ENTER or type command to continue",{"fg":2,"bold":true}],["                                                                                                                         ",{}]]},"cursor":{"x":39,"y":47}}],[5.674226,{"lines":{"0":[["s",{"fg":5,"bold":true}],["|",{"inverse":true}],["127 ",{"fg":3,"bold":true}],["always begin with Sunday: >                                                                                                        ",{}],["|",{"inverse":true}],["  8 ",{"fg":3,"bold":true}],["▸ .dbus/",{"fg":6,"bold":true}],["          ",{}]],"1":[["[",{"fg":6,"bold":true}],["|",{"inverse":true}],["128 ",{"fg":3,"bold":true}],["  let g:calendar_monday = 1                                                                                                        ",{}],["|",{"inverse":true}],["  9 ",{"fg":3,"bold":true}],["▸ .gnupg/",{"fg":6,"bold":true}],["         ",{}]],"2":[["F",{}],["|",{"inverse":true}],["129 ",{"fg":3,"bold":true}],["<                                                                                                                                  ",{}],["|",{"inverse":true}],[" 10 ",{"fg":3,"bold":true}],["▸ .kde/",{"fg":6,"bold":true}],["           ",{}]],"3":[["F",{}],["|",{"inverse":true}],["130 ",{"fg":3,"bold":true}],["                                                                                                                                   ",{}],["|",{"inverse":true}],[" 11 ",{"fg":3,"bold":true}],["▸ .local/",{"fg":6,"bold":true}],["         ",{}]],"4":[["~",{}],["|",{"inverse":true}],["131 ",{"fg":3,"bold":true}],["                                                *g:calendar_weeknm*                                                                ",{}],["|",{"inverse":true}],[" 12 ",{"fg":3,"bold":true}],["▸ .pki/",{"fg":6,"bold":true}],["           ",{}]],"5":[["S",{}],["|",{"inverse":true}],["132 ",{"fg":3,"bold":true}],["To show the week number, set this variable.  There are four valid settings: >                                                      ",{}],["|",{"inverse":true}],[" 13 ",{"fg":3,"bold":true}],["▸ .ssh/",{"fg":6,"bold":true}],["           ",{}]],"6":[["S",{}],["|",{"inverse":true}],["133 ",{"fg":3,"bold":true}],["  let g:calendar_weeknm = 1 \" WK01                                                                                                 ",{}],["|",{"inverse":true}],[" 14 ",{"fg":3,"bold":true}],["▸ .vim/",{"fg":6,"bold":true}],["           ",{}]],"7":[[" ",{}],["|",{"inverse":true}],["134 ",{"fg":3,"bold":true}],["  let g:calendar_weeknm = 2 \" WK 1                                                                                                 ",{}],["|",{"inverse":true}],[" 15 ",{"fg":3,"bold":true}],["▸ diary/",{"fg":6,"bold":true}],["          ",{}]],"8":[["c",{"fg":5,"bold":true}],["|",{"inverse":true}],["135 ",{"fg":3,"bold":true}],["  let g:calendar_weeknm = 3 \" KW01                                                                                                 ",{}],["|",{"inverse":true}],[" 16 ",{"fg":3,"bold":true}],["▸ temp/",{"fg":6,"bold":true}],["           ",{}]],"9":[["[",{"fg":6,"bold":true}],["|",{"inverse":true}],["136 ",{"fg":3,"bold":true}],["  let g:calendar_weeknm = 4 \" KW 1                                                                                                 ",{}],["|",{"inverse":true}],[" 17 ",{"fg":3,"bold":true}],["  .bash_history   ",{}]],"10":[["S",{"underline":true}],["|",{"inverse":true}],["137 ",{"fg":3,"bold":true}],["  let g:calendar_weeknm = 5 \" 1                                                                                                    ",{}],["|",{"inverse":true}],[" 18 ",{"fg":3,"bold":true}],["  .bash_logout    ",{"underline":true}]],"11":[["S",{}],["|",{"inverse":true}],["138 ",{"fg":3,"bold":true}],["<                                                                                                                                  ",{}],["|",{"inverse":true}],[" 19 ",{"fg":3,"bold":true}],["  .bash_profile   ",{}]],"12":[[" ",{}],["|",{"inverse":true}],["139 ",{"fg":3,"bold":true}],["                                                                                                                                   ",{}],["|",{"inverse":true}],[" 20 ",{"fg":3,"bold":true}],["  .bashrc         ",{}]],"13":[["n",{"fg":6,"bold":true}],["|",{"inverse":true}],["140 ",{"fg":3,"bold":true}],["                                                *g:calendar_datetime*                                                              ",{}],["|",{"inverse":true}],[" 21 ",{"fg":3,"bold":true}],["  .cshrc          ",{}]],"14":[["m",{}],["|",{"inverse":true}],["141 ",{"fg":3,"bold":true}],["To control display of the current date and time, set this variable.                                                                ",{}],["|",{"inverse":true}],[" 22 ",{"fg":3,"bold":true}],["  .dmrc           ",{}]],"15":[["~",{"fg":4,"bold":true}],["|",{"inverse":true}],["142 ",{"fg":3,"bold":true}],["Acceptable values are 'title', 'statusline', and '': >                                                                             ",{}],["|",{"inverse":true}],[" 23 ",{"fg":3,"bold":true}],["  .esd_auth       ",{}]],"16":[["~",{"fg":4,"bold":true}],["|",{"inverse":true}],["143 ",{"fg":3,"bold":true}],["  let g:calendar_datetime = 'title'                                                                                                ",{}],["|",{"inverse":true}],[" 24 ",{"fg":3,"bold":true}],["  .gtkrc-2.0      ",{}]],"17":[["~",{"fg":4,"bold":true}],["|",{"inverse":true}],["144 ",{"fg":3,"bold":true}],["<                                                                                                                                  ",{}],["|",{"inverse":true}],[" 25 ",{"fg":3,"bold":true}],["  .gtkrc-2.0-kde4 ",{}]],"18":[["~",{"fg":4,"bold":true}],["|",{"inverse":true}],["145 ",{"fg":3,"bold":true}],["                                                *g:calendar_filetype*                                                              ",{}],["|",{"inverse":true}],[" 26 ",{"fg":3,"bold":true}],["  .lesshst        ",{}]],"19":[["~",{"fg":4,"bold":true}],["|",{"inverse":true}],["146 ",{"fg":3,"bold":true}],["To control the filetype of calendar entries, set this variable. It defaults to                                                     ",{}],["|",{"inverse":true}],[" 27 ",{"fg":3,"bold":true}],["  .tcshrc         ",{}]],"20":[["~",{"fg":4,"bold":true}],["|",{"inverse":true}],["147 ",{"fg":3,"bold":true}],["'markdown'. Acceptable values are values that are acceptable for |filetype|                                                        ",{}],["|",{"inverse":true}],[" 28 ",{"fg":3,"bold":true}],["  .viminfo        ",{}]],"21":[["~",{"fg":4,"bold":true}],["|",{"inverse":true}],["148 ",{"fg":3,"bold":true}],["like e.g. 'markdown' or 'pandoc':                                                                                                  ",{"underline":true}],["|",{"inverse":true}],[" 29 ",{"fg":3,"bold":true}],["  .vimrc          ",{}]],"22":[["~",{"fg":4,"bold":true}],["|",{"inverse":true}],["149 ",{"fg":3,"bold":true}],["  let g:calendar_filetype = 'pandoc'                                                                                               ",{}],["|",{"inverse":true}],[" 30 ",{"fg":3,"bold":true}],["  .xsession-errors",{}]],"23":[["~",{"fg":4,"bold":true}],["|",{"inverse":true}],["150 ",{"fg":3,"bold":true}],["                                                                                                                                   ",{}],["|",{"inverse":true}],[" 31 ",{"fg":3,"bold":true}],["  anaconda-ks.cfg ",{}]],"24":[["~",{"fg":4,"bold":true}],["|",{"inverse":true}],["151 ",{"fg":3,"bold":true}],["                                                                                                                                   ",{}],["|",{"inverse":true}],[" 32 ",{"fg":3,"bold":true}],["  initial-setup-ks",{}]],"25":[["~",{"fg":4,"bold":true}],["|",{"inverse":true}],["152 ",{"fg":3,"bold":true}],["HOOKS                                           *calendar-hooks*                                                                   ",{}],["|",{"inverse":true}],[" 33 ",{"fg":3,"bold":true}],["  test.c          ",{}]],"26":[["~",{"fg":4,"bold":true}],["|",{"inverse":true}],["153 ",{"fg":3,"bold":true}],["                                                                                                                                   ",{}],["|",{"inverse":true}],[" 34 ",{"fg":3,"bold":true}],["  test.cpp        ",{}]],"27":[["~",{"fg":4,"bold":true}],["|",{"inverse":true}],["154 ",{"fg":3,"bold":true}],["calendar.vim provides a number of hooks which allow you to run custom code on                                                      ",{}],["|",{"inverse":true}],[" 35 ",{"fg":3,"bold":true}],["  .test.cpp.swp   ",{}]],"28":[["~",{"fg":4,"bold":true}],["|",{"inverse":true}],["155 ",{"fg":3,"bold":true}],["certain events.  These are documented below.                                                                                       ",{}],["|",{"inverse":true}],["~                     ",{"fg":4,"bold":true}]],"29":[["~",{"fg":4,"bold":true}],["|",{"inverse":true}],["156 ",{"fg":3,"bold":true}],["                                                                                                                                   ",{}],["|",{"inverse":true}],["~                     ",{"fg":4,"bold":true}]],"30":[["~",{"fg":4,"bold":true}],["|",{"inverse":true}],["157 ",{"fg":3,"bold":true}],["                                                *calendar_action*                                                                  ",{}],["|",{"inverse":true}],["~                     ",{"fg":4,"bold":true}]],"31":[["~",{"fg":4,"bold":true}],["|",{"inverse":true}],["158 ",{"fg":3,"bold":true}],["The function declared in the calendar_action variable is run when the user                                                         ",{}],["|",{"inverse":true}],["~                     ",{"fg":4,"bold":true}]],"32":[["~",{"fg":4,"bold":true}],["|",{"inverse":true}],["159 ",{"fg":3,"bold":true}],["presses enter on a date.  Implement and set your function as follows: >                                                            ",{}],["|",{"inverse":true}],["~                     ",{"fg":4,"bold":true}]],"33":[["~",{"fg":4,"bold":true}],["|",{"inverse":true}],["160 ",{"fg":3,"bold":true}],["  function MyCalAction(day,month,year,week,dir)                                                                                    ",{}],["|",{"inverse":true}],["~                     ",{"fg":4,"bold":true}]],"34":[["~",{"fg":4,"bold":true}],["|",{"inverse":true}],["161 ",{"fg":3,"bold":true}],["    \" day   : day you actioned                                                                                                     ",{}],["|",{"inverse":true}],["~                     ",{"fg":4,"bold":true}]],"35":[["~",{"fg":4,"bold":true}],["|",{"inverse":true}],["162 ",{"fg":3,"bold":true}],["    \" month : month you actioned                                                                                                   ",{}],["|",{"inverse":true}],["~                     ",{"fg":4,"bold":true}]],"36":[["~",{"fg":4,"bold":true}],["|",{"inverse":true}],["163 ",{"fg":3,"bold":true}],["    \" year  : year you actioned                                                                                                    ",{}],["|",{"inverse":true}],["~                     ",{"fg":4,"bold":true}]],"37":[["~",{"fg":4,"bold":true}],["|",{"inverse":true}],["164 ",{"fg":3,"bold":true}],["    \" week  : day of week (Mo=1 ... Su=7)                                                                                          ",{}],["|",{"inverse":true}],["~                     ",{"fg":4,"bold":true}]],"38":[["~",{"fg":4,"bold":true}],["|",{"inverse":true}],["165 ",{"fg":3,"bold":true}],["    \" dir   : direction of calendar                                                                                                ",{}],["|",{"inverse":true}],["~                     ",{"fg":4,"bold":true}]],"39":[[">",{"bold":true}],[" ",{"bold":true,"inverse":true}],[" ",{"inverse":true}],[".vim/bundle/calendar-vim/doc/",{}],["calendar.txt ",{"bold":true}],["                                                                            67% ",{}],["│ LN 148",{"bold":true}],[":1  ",{}],[" ",{"inverse":true}],[" ~/NERD_tree_1 ",{"bold":true}],["       ",{}]],"40":[["Error detected while processing function <SNR>65_ShowPrototype..246:",{"fg":7,"bg":1,"bold":true}],["                                                                                            ",{}]],"41":[["line    6:",{"fg":3,"bold":true}],["                                                                                                                                                      ",{}]],"42":[["E684: list index out of range: 0",{"fg":7,"bg":1,"bold":true}],["                                                                                                                                ",{}]],"43":[["Press ENTER or type command to continue",{"fg":2,"bold":true}],["                                                                                                                         ",{}]],"46":[["E15: Invalid expression: getbufline(bufnr, self.fields.line)[0]",{"fg":7,"bg":1,"bold":true}],["                                                                                                 ",{}]]}}],[0.7295970000000001,{"lines":{"0":[["F",{}],["|",{"inverse":true}],["129 ",{"fg":3,"bold":true}],["<                                                                                                                                  ",{}],["|",{"inverse":true}],[" 10 ",{"fg":3,"bold":true}],["▸ .kde/",{"fg":6,"bold":true}],["           ",{}]],"1":[["F",{}],["|",{"inverse":true}],["130 ",{"fg":3,"bold":true}],["                                                                                                                                   ",{}],["|",{"inverse":true}],[" 11 ",{"fg":3,"bold":true}],["▸ .local/",{"fg":6,"bold":true}],["         ",{}]],"2":[["~",{}],["|",{"inverse":true}],["131 ",{"fg":3,"bold":true}],["                                                *g:calendar_weeknm*                                                                ",{}],["|",{"inverse":true}],[" 12 ",{"fg":3,"bold":true}],["▸ .pki/",{"fg":6,"bold":true}],["           ",{}]],"3":[["S",{}],["|",{"inverse":true}],["132 ",{"fg":3,"bold":true}],["To show the week number, set this variable.  There are four valid settings: >                                                      ",{}],["|",{"inverse":true}],[" 13 ",{"fg":3,"bold":true}],["▸ .ssh/",{"fg":6,"bold":true}],["           ",{}]],"4":[["S",{}],["|",{"inverse":true}],["133 ",{"fg":3,"bold":true}],["  let g:calendar_weeknm = 1 \" WK01                                                                                                 ",{}],["|",{"inverse":true}],[" 14 ",{"fg":3,"bold":true}],["▸ .vim/",{"fg":6,"bold":true}],["           ",{}]],"5":[[" ",{}],["|",{"inverse":true}],["134 ",{"fg":3,"bold":true}],["  let g:calendar_weeknm = 2 \" WK 1                                                                                                 ",{}],["|",{"inverse":true}],[" 15 ",{"fg":3,"bold":true}],["▸ diary/",{"fg":6,"bold":true}],["          ",{}]],"6":[["c",{"fg":5,"bold":true}],["|",{"inverse":true}],["135 ",{"fg":3,"bold":true}],["  let g:calendar_weeknm = 3 \" KW01                                                                                                 ",{}],["|",{"inverse":true}],[" 16 ",{"fg":3,"bold":true}],["▸ temp/",{"fg":6,"bold":true}],["           ",{}]],"7":[["[",{"fg":6,"bold":true}],["|",{"inverse":true}],["136 ",{"fg":3,"bold":true}],["  let g:calendar_weeknm = 4 \" KW 1                                                                                                 ",{}],["|",{"inverse":true}],[" 17 ",{"fg":3,"bold":true}],["  .bash_history   ",{}]],"8":[["S",{"underline":true}],["|",{"inverse":true}],["137 ",{"fg":3,"bold":true}],["  let g:calendar_weeknm = 5 \" 1                                                                                                    ",{}],["|",{"inverse":true}],[" 18 ",{"fg":3,"bold":true}],["  .bash_logout    ",{"underline":true}]],"9":[["S",{}],["|",{"inverse":true}],["138 ",{"fg":3,"bold":true}],["<                                                                                                                                  ",{}],["|",{"inverse":true}],[" 19 ",{"fg":3,"bold":true}],["  .bash_profile   ",{}]],"10":[[" ",{}],["|",{"inverse":true}],["139 ",{"fg":3,"bold":true}],["                                                                                                                                   ",{}],["|",{"inverse":true}],[" 20 ",{"fg":3,"bold":true}],["  .bashrc         ",{}]],"11":[["n",{"fg":6,"bold":true}],["|",{"inverse":true}],["140 ",{"fg":3,"bold":true}],["                                                *g:calendar_datetime*                                                              ",{}],["|",{"inverse":true}],[" 21 ",{"fg":3,"bold":true}],["  .cshrc          ",{}]],"12":[["m",{}],["|",{"inverse":true}],["141 ",{"fg":3,"bold":true}],["To control display of the current date and time, set this variable.                                                                ",{}],["|",{"inverse":true}],[" 22 ",{"fg":3,"bold":true}],["  .dmrc           ",{}]],"13":[["~",{"fg":4,"bold":true}],["|",{"inverse":true}],["142 ",{"fg":3,"bold":true}],["Acceptable values are 'title', 'statusline', and '': >                                                                             ",{}],["|",{"inverse":true}],[" 23 ",{"fg":3,"bold":true}],["  .esd_auth       ",{}]],"14":[["~",{"fg":4,"bold":true}],["|",{"inverse":true}],["143 ",{"fg":3,"bold":true}],["  let g:calendar_datetime = 'title'                                                                                                ",{}],["|",{"inverse":true}],[" 24 ",{"fg":3,"bold":true}],["  .gtkrc-2.0      ",{}]],"15":[["~",{"fg":4,"bold":true}],["|",{"inverse":true}],["144 ",{"fg":3,"bold":true}],["<                                                                                                                                  ",{}],["|",{"inverse":true}],[" 25 ",{"fg":3,"bold":true}],["  .gtkrc-2.0-kde4 ",{}]],"16":[["~",{"fg":4,"bold":true}],["|",{"inverse":true}],["145 ",{"fg":3,"bold":true}],["                                                *g:calendar_filetype*                                                              ",{}],["|",{"inverse":true}],[" 26 ",{"fg":3,"bold":true}],["  .lesshst        ",{}]],"17":[["~",{"fg":4,"bold":true}],["|",{"inverse":true}],["146 ",{"fg":3,"bold":true}],["To control the filetype of calendar entries, set this variable. It defaults to                                                     ",{}],["|",{"inverse":true}],[" 27 ",{"fg":3,"bold":true}],["  .tcshrc         ",{}]],"18":[["~",{"fg":4,"bold":true}],["|",{"inverse":true}],["147 ",{"fg":3,"bold":true}],["'markdown'. Acceptable values are values that are acceptable for |filetype|                                                        ",{}],["|",{"inverse":true}],[" 28 ",{"fg":3,"bold":true}],["  .viminfo        ",{}]],"19":[["~",{"fg":4,"bold":true}],["|",{"inverse":true}],["148 ",{"fg":3,"bold":true}],["like e.g. 'markdown' or 'pandoc':                                                                                                  ",{"underline":true}],["|",{"inverse":true}],[" 29 ",{"fg":3,"bold":true}],["  .vimrc          ",{}]],"20":[["~",{"fg":4,"bold":true}],["|",{"inverse":true}],["149 ",{"fg":3,"bold":true}],["  let g:calendar_filetype = 'pandoc'                                                                                               ",{}],["|",{"inverse":true}],[" 30 ",{"fg":3,"bold":true}],["  .xsession-errors",{}]],"21":[["~",{"fg":4,"bold":true}],["|",{"inverse":true}],["150 ",{"fg":3,"bold":true}],["                                                                                                                                   ",{}],["|",{"inverse":true}],[" 31 ",{"fg":3,"bold":true}],["  anaconda-ks.cfg ",{}]],"22":[["~",{"fg":4,"bold":true}],["|",{"inverse":true}],["151 ",{"fg":3,"bold":true}],["                                                                                                                                   ",{}],["|",{"inverse":true}],[" 32 ",{"fg":3,"bold":true}],["  initial-setup-ks",{}]],"23":[["~",{"fg":4,"bold":true}],["|",{"inverse":true}],["152 ",{"fg":3,"bold":true}],["HOOKS                                           *calendar-hooks*                                                                   ",{}],["|",{"inverse":true}],[" 33 ",{"fg":3,"bold":true}],["  test.c          ",{}]],"24":[["~",{"fg":4,"bold":true}],["|",{"inverse":true}],["153 ",{"fg":3,"bold":true}],["                                                                                                                                   ",{}],["|",{"inverse":true}],[" 34 ",{"fg":3,"bold":true}],["  test.cpp        ",{}]],"25":[["~",{"fg":4,"bold":true}],["|",{"inverse":true}],["154 ",{"fg":3,"bold":true}],["calendar.vim provides a number of hooks which allow you to run custom code on                                                      ",{}],["|",{"inverse":true}],[" 35 ",{"fg":3,"bold":true}],["  .test.cpp.swp   ",{}]],"26":[["~",{"fg":4,"bold":true}],["|",{"inverse":true}],["155 ",{"fg":3,"bold":true}],["certain events.  These are documented below.                                                                                       ",{}],["|",{"inverse":true}],["~                     ",{"fg":4,"bold":true}]],"27":[["~",{"fg":4,"bold":true}],["|",{"inverse":true}],["156 ",{"fg":3,"bold":true}],["                                                                                                                                   ",{}],["|",{"inverse":true}],["~                     ",{"fg":4,"bold":true}]],"28":[["~",{"fg":4,"bold":true}],["|",{"inverse":true}],["157 ",{"fg":3,"bold":true}],["                                                *calendar_action*                                                                  ",{}],["|",{"inverse":true}],["~                     ",{"fg":4,"bold":true}]],"29":[["~",{"fg":4,"bold":true}],["|",{"inverse":true}],["158 ",{"fg":3,"bold":true}],["The function declared in the calendar_action variable is run when the user                                                         ",{}],["|",{"inverse":true}],["~                     ",{"fg":4,"bold":true}]],"30":[["~",{"fg":4,"bold":true}],["|",{"inverse":true}],["159 ",{"fg":3,"bold":true}],["presses enter on a date.  Implement and set your function as follows: >                                                            ",{}],["|",{"inverse":true}],["~                     ",{"fg":4,"bold":true}]],"31":[["~",{"fg":4,"bold":true}],["|",{"inverse":true}],["160 ",{"fg":3,"bold":true}],["  function MyCalAction(day,month,year,week,dir)                                                                                    ",{}],["|",{"inverse":true}],["~                     ",{"fg":4,"bold":true}]],"32":[["~",{"fg":4,"bold":true}],["|",{"inverse":true}],["161 ",{"fg":3,"bold":true}],["    \" day   : day you actioned                                                                                                     ",{}],["|",{"inverse":true}],["~                     ",{"fg":4,"bold":true}]],"33":[["~",{"fg":4,"bold":true}],["|",{"inverse":true}],["162 ",{"fg":3,"bold":true}],["    \" month : month you actioned                                                                                                   ",{}],["|",{"inverse":true}],["~                     ",{"fg":4,"bold":true}]],"34":[["~",{"fg":4,"bold":true}],["|",{"inverse":true}],["163 ",{"fg":3,"bold":true}],["    \" year  : year you actioned                                                                                                    ",{}],["|",{"inverse":true}],["~                     ",{"fg":4,"bold":true}]],"35":[["~",{"fg":4,"bold":true}],["|",{"inverse":true}],["164 ",{"fg":3,"bold":true}],["    \" week  : day of week (Mo=1 ... Su=7)                                                                                          ",{}],["|",{"inverse":true}],["~                     ",{"fg":4,"bold":true}]],"36":[["~",{"fg":4,"bold":true}],["|",{"inverse":true}],["165 ",{"fg":3,"bold":true}],["    \" dir   : direction of calendar                                                                                                ",{}],["|",{"inverse":true}],["~                     ",{"fg":4,"bold":true}]],"37":[[">",{"bold":true}],[" ",{"bold":true,"inverse":true}],[" ",{"inverse":true}],[".vim/bundle/calendar-vim/doc/",{}],["calendar.txt ",{"bold":true}],["                                                                            67% ",{}],["│ LN 148",{"bold":true}],[":1  ",{}],[" ",{"inverse":true}],[" ~/NERD_tree_1 ",{"bold":true}],["       ",{}]],"38":[["Error detected while processing function <SNR>65_ShowPrototype..246:",{"fg":7,"bg":1,"bold":true}],["                                                                                            ",{}]],"39":[["line    6:",{"fg":3,"bold":true}],["                                                                                                                                                      ",{}]],"40":[["E684: list index out of range: 0",{"fg":7,"bg":1,"bold":true}],["                                                                                                                                ",{}]],"41":[["Press ENTER or type command to continue",{"fg":2,"bold":true}],["                                                                                                                         ",{}]],"42":[["Error detected while processing function <SNR>65_ShowPrototype..246:",{"fg":7,"bg":1,"bold":true}],["                                                                                            ",{}]],"43":[["line    6:",{"fg":3,"bold":true}],["                                                                                                                                                      ",{}]],"44":[["E15: Invalid expression: getbufline(bufnr, self.fields.line)[0]",{"fg":7,"bg":1,"bold":true}],["                                                                                                 ",{}]],"45":[["Press ENTER or type command to continue",{"fg":2,"bold":true}],["                                                                                                                         ",{}]],"46":[["-1                                                                                                                                                              ",{}]]}}],[0.233578,{"lines":{"0":[["e",{"fg":6,"bold":true}],["|",{"inverse":true}],["120 ",{"fg":3,"bold":true}],["Sunday: >                                                                                                                          ",{}],["|",{"inverse":true}],["  1 ",{"fg":3,"bold":true}],["\" Press ? for help",{"fg":5,"bold":true}]],"1":[[" ",{}],["|",{"inverse":true}],["121 ",{"fg":3,"bold":true}],["  let g:calendar_wruler = 'Su Mo Tu We Th Fr Sa'                                                                                   ",{}],["|",{"inverse":true}],["  2 ",{"fg":3,"bold":true}],["                  ",{}]],"2":[["r",{"fg":5,"bold":true}],["|",{"inverse":true}],["122 ",{"fg":3,"bold":true}],["<                                                                                                                                  ",{}],["|",{"inverse":true}],["  3 ",{"fg":3,"bold":true}],[".. (up a dir)",{"fg":6,"bold":true}],["     ",{}]],"3":[["[",{"fg":6,"bold":true}],["|",{"inverse":true}],["123 ",{"fg":3,"bold":true}],["                                                                                                                                   ",{}],["|",{"inverse":true}],["  4 /root/",{"fg":3,"bold":true}],["            ",{}]],"4":[["F",{}],["|",{"inverse":true}],["124 ",{"fg":3,"bold":true}],["                                                *g:calendar_monday*                                                                ",{}],["|",{"inverse":true}],["  5 ",{"fg":3,"bold":true}],["▸ .asciinema/",{"fg":6,"bold":true}],["     ",{}]],"5":[["F",{}],["|",{"inverse":true}],["125 ",{"fg":3,"bold":true}],["To make the week start on Monday rather than Sunday, set this variable.  Note                                                      ",{}],["|",{"inverse":true}],["                      ",{}]],"6":[[" ",{}],["|",{"inverse":true}],["126 ",{"fg":3,"bold":true}],["that the value of |g:calendar_wruler| is not affected by this; it should                                                           ",{}],["|",{"inverse":true}],["                      ",{}]],"7":[["s",{"fg":5,"bold":true}],["|",{"inverse":true}],["127 ",{"fg":3,"bold":true}],["always begin with Sunday: >                                                                                                        ",{}],["|",{"inverse":true}],["                      ",{}]],"8":[["[",{"fg":6,"bold":true}],["|",{"inverse":true}],["128 ",{"fg":3,"bold":true}],["  let g:calendar_monday = 1                                                                                                        ",{}],["|",{"inverse":true}],["                      ",{}]],"9":[["F",{}],["|",{"inverse":true}],["129 ",{"fg":3,"bold":true}],["<                                                                                                                                  ",{}],["|",{"inverse":true}],[" 10 ",{"fg":3,"bold":true}],["▸ .kde/",{"fg":6,"bold":true}],["           ",{}]],"10":[["F",{}],["|",{"inverse":true}],["130 ",{"fg":3,"bold":true}],["                                                                                                                                   ",{}],["|",{"inverse":true}],[" 11 ",{"fg":3,"bold":true}],["▸ .local/",{"fg":6,"bold":true}],["         ",{}]],"11":[["~",{}],["|",{"inverse":true}],["131 ",{"fg":3,"bold":true}],["                                                *g:calendar_weeknm*                                                                ",{}],["|",{"inverse":true}],[" 12 ",{"fg":3,"bold":true}],["▸ .pki/",{"fg":6,"bold":true}],["           ",{}]],"12":[["S",{}],["|",{"inverse":true}],["132 ",{"fg":3,"bold":true}],["To show the week number, set this variable.  There are four valid settings: >                                                      ",{}],["|",{"inverse":true}],[" 13 ",{"fg":3,"bold":true}],["▸ .ssh/",{"fg":6,"bold":true}],["           ",{}]],"13":[["S",{}],["|",{"inverse":true}],["133 ",{"fg":3,"bold":true}],["  let g:calendar_weeknm = 1 \" WK01                                                                                                 ",{}],["|",{"inverse":true}],[" 14 ",{"fg":3,"bold":true}],["▸ .vim/",{"fg":6,"bold":true}],["           ",{}]],"14":[[" ",{}],["|",{"inverse":true}],["134 ",{"fg":3,"bold":true}],["  let g:calendar_weeknm = 2 \" WK 1                                                                                                 ",{}],["|",{"inverse":true}],[" 15 ",{"fg":3,"bold":true}],["▸ diary/",{"fg":6,"bold":true}],["          ",{}]],"15":[["c",{"fg":5,"bold":true}],["|",{"inverse":true}],["135 ",{"fg":3,"bold":true}],["  let g:calendar_weeknm = 3 \" KW01                                                                                                 ",{}],["|",{"inverse":true}],[" 16 ",{"fg":3,"bold":true}],["▸ temp/",{"fg":6,"bold":true}],["           ",{}]],"16":[["[",{"fg":6,"bold":true}],["|",{"inverse":true}],["136 ",{"fg":3,"bold":true}],["  let g:calendar_weeknm = 4 \" KW 1                                                                                                 ",{}],["|",{"inverse":true}],[" 17 ",{"fg":3,"bold":true}],["  .bash_history   ",{}]],"17":[["S",{"underline":true}],["|",{"inverse":true}],["137 ",{"fg":3,"bold":true}],["  let g:calendar_weeknm = 5 \" 1                                                                                                    ",{}],["|",{"inverse":true}],[" 18 ",{"fg":3,"bold":true}],["  .bash_logout    ",{"underline":true}]],"18":[["S",{}],["|",{"inverse":true}],["138 ",{"fg":3,"bold":true}],["<                                                                                                                                  ",{}],["|",{"inverse":true}],[" 19 ",{"fg":3,"bold":true}],["  .bash_profile   ",{}]],"19":[[" ",{}],["|",{"inverse":true}],["139 ",{"fg":3,"bold":true}],["                                                                                                                                   ",{}],["|",{"inverse":true}],[" 20 ",{"fg":3,"bold":true}],["  .bashrc         ",{}]],"20":[["n",{"fg":6,"bold":true}],["|",{"inverse":true}],["140 ",{"fg":3,"bold":true}],["                                                *g:calendar_datetime*                                                              ",{}],["|",{"inverse":true}],[" 21 ",{"fg":3,"bold":true}],["  .cshrc          ",{}]],"21":[["m",{}],["|",{"inverse":true}],["141 ",{"fg":3,"bold":true}],["To control display of the current date and time, set this variable.                                                                ",{}],["|",{"inverse":true}],[" 22 ",{"fg":3,"bold":true}],["  .dmrc           ",{}]],"22":[["~",{"fg":4,"bold":true}],["|",{"inverse":true}],["142 ",{"fg":3,"bold":true}],["Acceptable values are 'title', 'statusline', and '': >                                                                             ",{}],["|",{"inverse":true}],[" 23 ",{"fg":3,"bold":true}],["  .esd_auth       ",{}]],"23":[["~",{"fg":4,"bold":true}],["|",{"inverse":true}],["143 ",{"fg":3,"bold":true}],["  let g:calendar_datetime = 'title'                                                                                                ",{}],["|",{"inverse":true}],[" 24 ",{"fg":3,"bold":true}],["  .gtkrc-2.0      ",{}]],"24":[["~",{"fg":4,"bold":true}],["|",{"inverse":true}],["144 ",{"fg":3,"bold":true}],["<                                                                                                                                  ",{}],["|",{"inverse":true}],[" 25 ",{"fg":3,"bold":true}],["  .gtkrc-2.0-kde4 ",{}]],"25":[["~",{"fg":4,"bold":true}],["|",{"inverse":true}],["145 ",{"fg":3,"bold":true}],["                                                *g:calendar_filetype*                                                              ",{}],["|",{"inverse":true}],[" 26 ",{"fg":3,"bold":true}],["  .lesshst        ",{}]],"26":[["~",{"fg":4,"bold":true}],["|",{"inverse":true}],["146 ",{"fg":3,"bold":true}],["To control the filetype of calendar entries, set this variable. It defaults to                                                     ",{}],["|",{"inverse":true}],[" 27 ",{"fg":3,"bold":true}],["  .tcshrc         ",{}]],"27":[["~",{"fg":4,"bold":true}],["|",{"inverse":true}],["147 ",{"fg":3,"bold":true}],["'markdown'. Acceptable values are values that are acceptable for |filetype|                                                        ",{}],["|",{"inverse":true}],[" 28 ",{"fg":3,"bold":true}],["  .viminfo        ",{}]],"28":[["~",{"fg":4,"bold":true}],["|",{"inverse":true}],["148 ",{"fg":3,"bold":true}],["like e.g. 'markdown' or 'pandoc':                                                                                                  ",{"underline":true}],["|",{"inverse":true}],[" 29 ",{"fg":3,"bold":true}],["  .vimrc          ",{}]],"29":[["~",{"fg":4,"bold":true}],["|",{"inverse":true}],["149 ",{"fg":3,"bold":true}],["  let g:calendar_filetype = 'pandoc'                                                                                               ",{}],["|",{"inverse":true}],[" 30 ",{"fg":3,"bold":true}],["  .xsession-errors",{}]],"30":[["~",{"fg":4,"bold":true}],["|",{"inverse":true}],["150 ",{"fg":3,"bold":true}],["                                                                                                                                   ",{}],["|",{"inverse":true}],[" 31 ",{"fg":3,"bold":true}],["  anaconda-ks.cfg ",{}]],"31":[["~",{"fg":4,"bold":true}],["|",{"inverse":true}],["151 ",{"fg":3,"bold":true}],["                                                                                                                                   ",{}],["|",{"inverse":true}],[" 32 ",{"fg":3,"bold":true}],["  initial-setup-ks",{}]],"32":[["~",{"fg":4,"bold":true}],["|",{"inverse":true}],["152 ",{"fg":3,"bold":true}],["HOOKS                                           *calendar-hooks*                                                                   ",{}],["|",{"inverse":true}],[" 33 ",{"fg":3,"bold":true}],["  test.c          ",{}]],"33":[["~",{"fg":4,"bold":true}],["|",{"inverse":true}],["153 ",{"fg":3,"bold":true}],["                                                                                                                                   ",{}],["|",{"inverse":true}],[" 34 ",{"fg":3,"bold":true}],["  test.cpp        ",{}]],"34":[["~",{"fg":4,"bold":true}],["|",{"inverse":true}],["154 ",{"fg":3,"bold":true}],["calendar.vim provides a number of hooks which allow you to run custom code on                                                      ",{}],["|",{"inverse":true}],[" 35 ",{"fg":3,"bold":true}],["  .test.cpp.swp   ",{}]],"35":[["~",{"fg":4,"bold":true}],["|",{"inverse":true}],["155 ",{"fg":3,"bold":true}],["certain events.  These are documented below.                                                                                       ",{}],["|",{"inverse":true}],["~                     ",{"fg":4,"bold":true}]],"36":[["~",{"fg":4,"bold":true}],["|",{"inverse":true}],["156 ",{"fg":3,"bold":true}],["                                                                                                                                   ",{}],["|",{"inverse":true}],["~                     ",{"fg":4,"bold":true}]],"37":[["~",{"fg":4,"bold":true}],["|",{"inverse":true}],["157 ",{"fg":3,"bold":true}],["                                                *calendar_action*                                                                  ",{}],["|",{"inverse":true}],["~                     ",{"fg":4,"bold":true}]],"38":[["~",{"fg":4,"bold":true}],["|",{"inverse":true}],["158 ",{"fg":3,"bold":true}],["The function declared in the calendar_action variable is run when the user                                                         ",{}],["|",{"inverse":true}],["~                     ",{"fg":4,"bold":true}]],"39":[["~",{"fg":4,"bold":true}],["|",{"inverse":true}],["159 ",{"fg":3,"bold":true}],["presses enter on a date.  Implement and set your function as follows: >                                                            ",{}],["|",{"inverse":true}],["~                     ",{"fg":4,"bold":true}]],"40":[["~",{"fg":4,"bold":true}],["|",{"inverse":true}],["160 ",{"fg":3,"bold":true}],["  function MyCalAction(day,month,year,week,dir)                                                                                    ",{}],["|",{"inverse":true}],["~                     ",{"fg":4,"bold":true}]],"41":[["~",{"fg":4,"bold":true}],["|",{"inverse":true}],["161 ",{"fg":3,"bold":true}],["    \" day   : day you actioned                                                                                                     ",{}],["|",{"inverse":true}],["~                     ",{"fg":4,"bold":true}]],"42":[["~",{"fg":4,"bold":true}],["|",{"inverse":true}],["162 ",{"fg":3,"bold":true}],["    \" month : month you actioned                                                                                                   ",{}],["|",{"inverse":true}],["~                     ",{"fg":4,"bold":true}]],"43":[["~",{"fg":4,"bold":true}],["|",{"inverse":true}],["163 ",{"fg":3,"bold":true}],["    \" year  : year you actioned                                                                                                    ",{}],["|",{"inverse":true}],["~                     ",{"fg":4,"bold":true}]],"44":[["~",{"fg":4,"bold":true}],["|",{"inverse":true}],["164 ",{"fg":3,"bold":true}],["    \" week  : day of week (Mo=1 ... Su=7)                                                                                          ",{}],["|",{"inverse":true}],["~                     ",{"fg":4,"bold":true}]],"45":[["~",{"fg":4,"bold":true}],["|",{"inverse":true}],["165 ",{"fg":3,"bold":true}],["    \" dir   : direction of calendar                                                                                                ",{}],["|",{"inverse":true}],["~                     ",{"fg":4,"bold":true}]],"46":[[">",{"bold":true}],[" ",{"bold":true,"inverse":true}],[" ",{"inverse":true}],[".vim/bundle/calendar-vim/doc/",{}],["calendar.txt ",{"bold":true}],["                                                                            67% ",{}],["│ LN 148",{"bold":true}],[":1  ",{}],[" ",{"inverse":true}],[" ~/NERD_tree_1 ",{"bold":true}],["       ",{}]],"47":[["Error detected while processing function <SNR>65_ShowPrototype..246:",{"fg":7,"bg":1,"bold":true}],["                                                                                            ",{}]]},"cursor":{"x":138,"y":5,"visible":false}}],[0.000289,{"lines":{"5":[["F",{}],["|",{"inverse":true}],["125 ",{"fg":3,"bold":true}],["To make the week start on Monday rather than Sunday, set this variable.  Note                                                      ",{}],["|",{"inverse":true}],["  6 ",{"fg":3,"bold":true}],["▸ .cache/",{"fg":6,"bold":true}],["         ",{}]],"6":[[" ",{}],["|",{"inverse":true}],["126 ",{"fg":3,"bold":true}],["that the value of |g:calendar_wruler| is not affected by this; it should                                                           ",{}],["|",{"inverse":true}],["  7 ",{"fg":3,"bold":true}],["▸ .config/",{"fg":6,"bold":true}],["        ",{}]],"7":[["s",{"fg":5,"bold":true}],["|",{"inverse":true}],["127 ",{"fg":3,"bold":true}],["always begin with Sunday: >                                                                                                        ",{}],["|",{"inverse":true}],["  8 ",{"fg":3,"bold":true}],["▸ .dbus/",{"fg":6,"bold":true}],["          ",{}]],"8":[["[",{"fg":6,"bold":true}],["|",{"inverse":true}],["128 ",{"fg":3,"bold":true}],["  let g:calendar_monday = 1                                                                                                        ",{}],["|",{"inverse":true}],["  9 ",{"fg":3,"bold":true}],["▸ .gnupg/",{"fg":6,"bold":true}],["         ",{}]],"47":[["                                                                                                                                                                ",{}]]},"cursor":{"x":0,"y":17,"visible":true}}],[1.902393,{"lines":{"0":[["ess <F1> for help",{"fg":6,"bold":true}],["                                                                                                                                           ",{}],["|",{"inverse":true}],["elp",{"fg":5,"bold":true}]],"1":[["                                                                                                                                                            ",{}],["|",{"inverse":true}],["   ",{}]],"2":[["rst",{"fg":5,"bold":true}],[" : ",{}],["struct",{"fg":2,"bold":true}],["                                                                                                                                                ",{}],["|",{"inverse":true}],["   ",{}]],"3":[["[prototypes]",{"fg":6,"bold":true}],["                                                                                                                                                ",{}],["|",{"inverse":true}],["   ",{}]],"4":[["FirstRun(void)                                                                                                                                              ",{}],["|",{"inverse":true}],["   ",{}]],"5":[["FirstRun2(void)                                                                                                                                             ",{}],["|",{"inverse":true}],["   ",{}]],"6":[["                                                                                                                                                            ",{}],["|",{"inverse":true}],["   ",{}]],"7":[["st",{"fg":5,"bold":true}],[" : ",{}],["struct",{"fg":2,"bold":true}],["                                                                                                                                                 ",{}],["|",{"inverse":true}],["   ",{}]],"8":[["[functions]",{"fg":6,"bold":true}],["                                                                                                                                                 ",{}],["|",{"inverse":true}],["   ",{}]],"9":[["FirstRun(void)                                                                                                                                              ",{}],["|",{"inverse":true}],["   ",{}]],"10":[["FirstRun2(void)                                                                                                                                             ",{}],["|",{"inverse":true}],["   ",{}]],"11":[["~Last()                                                                                                                                                     ",{}],["|",{"inverse":true}],["   ",{}]],"12":[["SecondRun(void)                                                              ngs: >                                                      ",{}],["|",{"inverse":true}],[" 13 ",{"fg":3,"bold":true}],["▸ .ssh/",{"fg":6,"bold":true}],["           ",{}]]},"cursor":{"x":77,"y":12,"visible":false}}],[0.011258,{"lines":{"0":[["ess <F1> for help",{"fg":6,"bold":true}],["                                                                                                                                           ",{}],["|",{"inverse":true}],["1",{"fg":3,"bold":true}],["|",{"inverse":true}],[" ",{"fg":3,"bold":true}]],"1":[["                                                                                                                                                            ",{}],["|",{"inverse":true}],["@",{"fg":4,"bold":true}],["|",{"inverse":true}],[" ",{"fg":3,"bold":true}]],"2":[["rst",{"fg":5,"bold":true}],[" : ",{}],["struct",{"fg":2,"bold":true}],["                                                                                                                                                ",{}],["|",{"inverse":true}],["@",{"fg":4,"bold":true}],["|",{"inverse":true}],[" ",{"fg":3,"bold":true}]],"3":[["[prototypes]",{"fg":6,"bold":true}],["                                                                                                                                                ",{}],["|",{"inverse":true}],["@",{"fg":4,"bold":true}],["|",{"inverse":true}],[" ",{"fg":3,"bold":true}]],"4":[["FirstRun(void)                                                                                                                                              ",{}],["|",{"inverse":true}],["@",{"fg":4,"bold":true}],["|",{"inverse":true}],[" ",{"fg":3,"bold":true}]],"5":[["FirstRun2(void)                                                                                                                                             ",{}],["|",{"inverse":true}],["@",{"fg":4,"bold":true}],["|",{"inverse":true}],[" ",{"fg":3,"bold":true}]],"6":[["                                                                                                                                                            ",{}],["|",{"inverse":true}],["@",{"fg":4,"bold":true}],["|",{"inverse":true}],[" ",{"fg":3,"bold":true}]],"7":[["st",{"fg":5,"bold":true}],[" : ",{}],["struct",{"fg":2,"bold":true}],["                                                                                                                                                 ",{}],["|",{"inverse":true}],["@",{"fg":4,"bold":true}],["|",{"inverse":true}],[" ",{"fg":3,"bold":true}]],"8":[["[functions]",{"fg":6,"bold":true}],["                                                                                                                                                 ",{}],["|",{"inverse":true}],["@",{"fg":4,"bold":true}],["|",{"inverse":true}],[" ",{"fg":3,"bold":true}]],"9":[["FirstRun(void)                                                                                                                                              ",{}],["|",{"inverse":true}],["@",{"fg":4,"bold":true}],["|",{"inverse":true}],[" ",{"fg":3,"bold":true}]],"10":[["FirstRun2(void)                                                                                                                                             ",{}],["|",{"inverse":true}],["@",{"fg":4,"bold":true}],["|",{"inverse":true}],[" ",{"fg":3,"bold":true}]],"11":[["~Last()                                                                                                                                                     ",{}],["|",{"inverse":true}],["@",{"fg":4,"bold":true}],["|",{"inverse":true}],[" ",{"fg":3,"bold":true}]],"12":[["SecondRun(void)                                                                                                                                             ",{}],["|",{"inverse":true}],["@",{"fg":4,"bold":true}],["|",{"inverse":true}],[" ",{"fg":3,"bold":true}]],"13":[["SecondRun2(void)                                                                                                                                            ",{}],["|",{"inverse":true}],["@",{"fg":4,"bold":true}],["|",{"inverse":true}],[" ",{"fg":3,"bold":true}]],"14":[["                                                                                                                                                            ",{}],["|",{"inverse":true}],["@",{"fg":4,"bold":true}],["|",{"inverse":true}],[" ",{"fg":3,"bold":true}]],"15":[["cond",{"fg":5,"bold":true}],[" : ",{}],["struct",{"fg":2,"bold":true}],["                                                                                                                                               ",{}],["|",{"inverse":true}],["@",{"fg":4,"bold":true}],["|",{"inverse":true}],[" ",{"fg":3,"bold":true}]],"16":[["[prototypes]",{"fg":6,"bold":true}],["                                                                                                                                                ",{}],["|",{"inverse":true}],["@",{"fg":4,"bold":true}],["|",{"inverse":true}],[" ",{"fg":3,"bold":true}]],"17":[["SecondRun(void)                                                                                                                                             ",{"underline":true}],["|",{"inverse":true}],["@",{"fg":4,"bold":true}],["|",{"inverse":true}],[" ",{"fg":3,"bold":true}]],"18":[["SecondRun2(void)                                                                                                                                            ",{}],["|",{"inverse":true}],["@",{"fg":4,"bold":true}],["|",{"inverse":true}],[" ",{"fg":3,"bold":true}]],"19":[["                                                                                                                                                            ",{}],["|",{"inverse":true}],["@",{"fg":4,"bold":true}],["|",{"inverse":true}],[" ",{"fg":3,"bold":true}]],"20":[["nctions",{"fg":6,"bold":true}],["                                                                                                                                                     ",{}],["|",{"inverse":true}],["@",{"fg":4,"bold":true}],["|",{"inverse":true}],[" ",{"fg":3,"bold":true}]],"21":[["main(int argc, char* argv[])                                                                                                                                ",{}],["|",{"inverse":true}],["@",{"fg":4,"bold":true}],["|",{"inverse":true}],[" ",{"fg":3,"bold":true}]],"22":[["~                                                                                                                                                           ",{"fg":4,"bold":true}],["|",{"inverse":true}],["@",{"fg":4,"bold":true}],["|",{"inverse":true}],[" ",{"fg":3,"bold":true}]],"23":[["~                                                                                                                                                           ",{"fg":4,"bold":true}],["|",{"inverse":true}],["@",{"fg":4,"bold":true}],["|",{"inverse":true}],[" ",{"fg":3,"bold":true}]],"24":[["~                                                                                                                                                           ",{"fg":4,"bold":true}],["|",{"inverse":true}],["@",{"fg":4,"bold":true}],["|",{"inverse":true}],[" ",{"fg":3,"bold":true}]],"25":[["~                                                                                                                                                           ",{"fg":4,"bold":true}],["|",{"inverse":true}],["@",{"fg":4,"bold":true}],["|",{"inverse":true}],[" ",{"fg":3,"bold":true}]],"26":[["~                                                                                                                                                           ",{"fg":4,"bold":true}],["|",{"inverse":true}],["@",{"fg":4,"bold":true}],["|",{"inverse":true}],[" ",{"fg":3,"bold":true}]],"27":[["~                                                                                                                                                           ",{"fg":4,"bold":true}],["|",{"inverse":true}],["@",{"fg":4,"bold":true}],["|",{"inverse":true}],[" ",{"fg":3,"bold":true}]],"28":[["~                                                                                                                                                           ",{"fg":4,"bold":true}],["|",{"inverse":true}],["@",{"fg":4,"bold":true}],["|",{"inverse":true}],[" ",{"fg":3,"bold":true}]],"29":[["~                                                                                                                                                           ",{"fg":4,"bold":true}],["|",{"inverse":true}],["@",{"fg":4,"bold":true}],["|",{"inverse":true}],[" ",{"fg":3,"bold":true}]],"30":[["~                                                                                                                                                           ",{"fg":4,"bold":true}],["|",{"inverse":true}],["@",{"fg":4,"bold":true}],["|",{"inverse":true}],[" ",{"fg":3,"bold":true}]],"31":[["~                                                                                                                                                           ",{"fg":4,"bold":true}],["|",{"inverse":true}],["@",{"fg":4,"bold":true}],["|",{"inverse":true}],[" ",{"fg":3,"bold":true}]],"32":[["~                                                                                                                                                           ",{"fg":4,"bold":true}],["|",{"inverse":true}],["@",{"fg":4,"bold":true}],["|",{"inverse":true}],[" ",{"fg":3,"bold":true}]],"33":[["~                                                                                                                                                           ",{"fg":4,"bold":true}],["|",{"inverse":true}],["@",{"fg":4,"bold":true}],["|",{"inverse":true}],[" ",{"fg":3,"bold":true}]],"34":[["~                                                                                                                                                           ",{"fg":4,"bold":true}],["|",{"inverse":true}],["@",{"fg":4,"bold":true}],["|",{"inverse":true}],[" ",{"fg":3,"bold":true}]],"35":[["~                                                                                                                                                           ",{"fg":4,"bold":true}],["|",{"inverse":true}],["@",{"fg":4,"bold":true}],["|",{"inverse":true}],["~",{"fg":4,"bold":true}]],"36":[["~                                                                                                                                                           ",{"fg":4,"bold":true}],["|",{"inverse":true}],["@",{"fg":4,"bold":true}],["|",{"inverse":true}],["~",{"fg":4,"bold":true}]],"37":[["~                                                                                                                                                           ",{"fg":4,"bold":true}],["|",{"inverse":true}],["@",{"fg":4,"bold":true}],["|",{"inverse":true}],["~",{"fg":4,"bold":true}]],"38":[["~                                                                                                                                                           ",{"fg":4,"bold":true}],["|",{"inverse":true}],["@",{"fg":4,"bold":true}],["|",{"inverse":true}],["~",{"fg":4,"bold":true}]],"39":[["~                                                                                                                                                           ",{"fg":4,"bold":true}],["|",{"inverse":true}],["@",{"fg":4,"bold":true}],["|",{"inverse":true}],["~",{"fg":4,"bold":true}]],"40":[["~                                                                                                                                                           ",{"fg":4,"bold":true}],["|",{"inverse":true}],["@",{"fg":4,"bold":true}],["|",{"inverse":true}],["~",{"fg":4,"bold":true}]],"41":[["~                                                                                                                                                           ",{"fg":4,"bold":true}],["|",{"inverse":true}],["@",{"fg":4,"bold":true}],["|",{"inverse":true}],["~",{"fg":4,"bold":true}]],"42":[["~                                                                                                                                                           ",{"fg":4,"bold":true}],["|",{"inverse":true}],["@",{"fg":4,"bold":true}],["|",{"inverse":true}],["~",{"fg":4,"bold":true}]],"43":[["~                                                                                                                                                           ",{"fg":4,"bold":true}],["|",{"inverse":true}],["@",{"fg":4,"bold":true}],["|",{"inverse":true}],["~",{"fg":4,"bold":true}]],"44":[["~                                                                                                                                                           ",{"fg":4,"bold":true}],["|",{"inverse":true}],["@",{"fg":4,"bold":true}],["|",{"inverse":true}],["~",{"fg":4,"bold":true}]],"45":[["~                                                                                                                                                           ",{"fg":4,"bold":true}],["|",{"inverse":true}],["@",{"fg":4,"bold":true}],["|",{"inverse":true}],["~",{"fg":4,"bold":true}]],"46":[[" Tagbar ",{"bold":true}],[" Tree                                                                                                                                               ",{}],[" ",{"bold":true,"inverse":true}],["> ",{"inverse":true}],[">",{"bold":true}]]},"cursor":{"x":0,"y":17,"visible":true}}],[0.832775,{"lines":{"0":[["e",{"fg":6,"bold":true}],["|",{"inverse":true}],["120 ",{"fg":3,"bold":true}],["Sunday: >                                                                                                                          ",{}],["|",{"inverse":true}],["                  ",{}],["|",{"inverse":true}],["1",{"fg":3,"bold":true}],["|",{"inverse":true}],[" ",{"fg":3,"bold":true}]],"1":[[" ",{}],["|",{"inverse":true}],["121 ",{"fg":3,"bold":true}],["  let g:calendar_wruler = 'Su Mo Tu We Th Fr Sa'                                                                                   ",{}],["|",{"inverse":true}],["                  ",{}],["|",{"inverse":true}],["@",{"fg":4,"bold":true}],["|",{"inverse":true}],[" ",{"fg":3,"bold":true}]],"2":[["r",{"fg":5,"bold":true}],["|",{"inverse":true}],["122 ",{"fg":3,"bold":true}],["<                                                                                                                                  ",{}],["|",{"inverse":true}],["                  ",{}],["|",{"inverse":true}],["@",{"fg":4,"bold":true}],["|",{"inverse":true}],[" ",{"fg":3,"bold":true}]],"3":[["[",{"fg":6,"bold":true}],["|",{"inverse":true}],["123 ",{"fg":3,"bold":true}],["                                                                                                                                   ",{}],["|",{"inverse":true}],["                  ",{}],["|",{"inverse":true}],["@",{"fg":4,"bold":true}],["|",{"inverse":true}],[" ",{"fg":3,"bold":true}]],"4":[["F",{}],["|",{"inverse":true}],["124 ",{"fg":3,"bold":true}],["                                                *g:calendar_monday*                                                                ",{}],["|",{"inverse":true}],["                  ",{}],["|",{"inverse":true}],["@",{"fg":4,"bold":true}],["|",{"inverse":true}],[" ",{"fg":3,"bold":true}]],"5":[["F",{}],["|",{"inverse":true}],["125 ",{"fg":3,"bold":true}],["To make the week start on Monday rather than Sunday, set this variable.  Note                                                      ",{}],["|",{"inverse":true}],["                  ",{}],["|",{"inverse":true}],["@",{"fg":4,"bold":true}],["|",{"inverse":true}],[" ",{"fg":3,"bold":true}]],"6":[[" ",{}],["|",{"inverse":true}],["126 ",{"fg":3,"bold":true}],["that the value of |g:calendar_wruler| is not affected by this; it should                                                           ",{}],["|",{"inverse":true}],["                  ",{}],["|",{"inverse":true}],["@",{"fg":4,"bold":true}],["|",{"inverse":true}],[" ",{"fg":3,"bold":true}]],"7":[["s",{"fg":5,"bold":true}],["|",{"inverse":true}],["127 ",{"fg":3,"bold":true}],["always begin                                                                                                                                          ",{}],["|",{"inverse":true}],["@",{"fg":4,"bold":true}],["|",{"inverse":true}],[" ",{"fg":3,"bold":true}]],"8":[["[",{"fg":6,"bold":true}],["|",{"inverse":true}],["unctions]",{"fg":6,"bold":true}],["                                                                                                                                                 ",{}],["|",{"inverse":true}],["@",{"fg":4,"bold":true}],["|",{"inverse":true}],[" ",{"fg":3,"bold":true}]],"9":[["F",{}],["|",{"inverse":true}],["rstRun(void)                                                                                                                                              ",{}],["|",{"inverse":true}],["@",{"fg":4,"bold":true}],["|",{"inverse":true}],[" ",{"fg":3,"bold":true}]],"10":[["F",{}],["|",{"inverse":true}],["rstRun2(void)                                                                                                                                             ",{}],["|",{"inverse":true}],["@",{"fg":4,"bold":true}],["|",{"inverse":true}],[" ",{"fg":3,"bold":true}]],"11":[["~",{}],["|",{"inverse":true}],["ast()                                                                                                                                                     ",{}],["|",{"inverse":true}],["@",{"fg":4,"bold":true}],["|",{"inverse":true}],[" ",{"fg":3,"bold":true}]],"12":[["S",{}],["|",{"inverse":true}],["condRun(void)                                                                                                                                             ",{}],["|",{"inverse":true}],["@",{"fg":4,"bold":true}],["|",{"inverse":true}],[" ",{"fg":3,"bold":true}]],"13":[["S",{}],["|",{"inverse":true}],["condRun2(void)                                                                                                                                            ",{}],["|",{"inverse":true}],["@",{"fg":4,"bold":true}],["|",{"inverse":true}],[" ",{"fg":3,"bold":true}]],"14":[[" ",{}],["|",{"inverse":true}],["                                                                                                                                                          ",{}],["|",{"inverse":true}],["@",{"fg":4,"bold":true}],["|",{"inverse":true}],[" ",{"fg":3,"bold":true}]],"15":[["c",{"fg":5,"bold":true}],["|",{"inverse":true}],["nd",{"fg":5,"bold":true}],[" : ",{}],["struct",{"fg":2,"bold":true}],["                                                                                                                                               ",{}],["|",{"inverse":true}],["@",{"fg":4,"bold":true}],["|",{"inverse":true}],[" ",{"fg":3,"bold":true}]],"16":[["[",{"fg":6,"bold":true}],["|",{"inverse":true}],["rototypes]",{"fg":6,"bold":true}],["                                                                                                                                                ",{}],["|",{"inverse":true}],["@",{"fg":4,"bold":true}],["|",{"inverse":true}],[" ",{"fg":3,"bold":true}]],"17":[["S",{"underline":true}],["|",{"inverse":true}],["condRun(void)                                                                                                                                             ",{"underline":true}],["|",{"inverse":true}],["@",{"fg":4,"bold":true}],["|",{"inverse":true}],[" ",{"fg":3,"bold":true}]],"18":[["S",{}],["|",{"inverse":true}],["condRun2(void)                                                                                                                                            ",{}],["|",{"inverse":true}],["@",{"fg":4,"bold":true}],["|",{"inverse":true}],[" ",{"fg":3,"bold":true}]],"19":[[" ",{}],["|",{"inverse":true}],["                                                                                                                                                          ",{}],["|",{"inverse":true}],["@",{"fg":4,"bold":true}],["|",{"inverse":true}],[" ",{"fg":3,"bold":true}]],"20":[["n",{"fg":6,"bold":true}],["|",{"inverse":true}],["tions",{"fg":6,"bold":true}],["                                                                                                                                                     ",{}],["|",{"inverse":true}],["@",{"fg":4,"bold":true}],["|",{"inverse":true}],[" ",{"fg":3,"bold":true}]],"21":[["m",{}],["|",{"inverse":true}],["in(int argc, char* argv[])                                                                                                                                ",{}],["|",{"inverse":true}],["@",{"fg":4,"bold":true}],["|",{"inverse":true}],[" ",{"fg":3,"bold":true}]],"22":[["~",{"fg":4,"bold":true}],["|",{"inverse":true}],["                                                                                                                                                          ",{"fg":4,"bold":true}],["|",{"inverse":true}],["@",{"fg":4,"bold":true}],["|",{"inverse":true}],[" ",{"fg":3,"bold":true}]],"23":[["~",{"fg":4,"bold":true}],["|",{"inverse":true}],["                                                                                                                                                          ",{"fg":4,"bold":true}],["|",{"inverse":true}],["@",{"fg":4,"bold":true}],["|",{"inverse":true}],[" ",{"fg":3,"bold":true}]],"24":[["~",{"fg":4,"bold":true}],["|",{"inverse":true}],["                                                                                                                                                          ",{"fg":4,"bold":true}],["|",{"inverse":true}],["@",{"fg":4,"bold":true}],["|",{"inverse":true}],[" ",{"fg":3,"bold":true}]],"25":[["~",{"fg":4,"bold":true}],["|",{"inverse":true}],["                                                                                                                                                          ",{"fg":4,"bold":true}],["|",{"inverse":true}],["@",{"fg":4,"bold":true}],["|",{"inverse":true}],[" ",{"fg":3,"bold":true}]],"26":[["~",{"fg":4,"bold":true}],["|",{"inverse":true}],["                                                                                                                                                          ",{"fg":4,"bold":true}],["|",{"inverse":true}],["@",{"fg":4,"bold":true}],["|",{"inverse":true}],[" ",{"fg":3,"bold":true}]],"27":[["~",{"fg":4,"bold":true}],["|",{"inverse":true}],["                                                                                                                                                          ",{"fg":4,"bold":true}],["|",{"inverse":true}],["@",{"fg":4,"bold":true}],["|",{"inverse":true}],[" ",{"fg":3,"bold":true}]],"28":[["~",{"fg":4,"bold":true}],["|",{"inverse":true}],["                                                                                                                                                          ",{"fg":4,"bold":true}],["|",{"inverse":true}],["@",{"fg":4,"bold":true}],["|",{"inverse":true}],[" ",{"fg":3,"bold":true}]],"29":[["~",{"fg":4,"bold":true}],["|",{"inverse":true}],["                                                                                                                                                          ",{"fg":4,"bold":true}],["|",{"inverse":true}],["@",{"fg":4,"bold":true}],["|",{"inverse":true}],[" ",{"fg":3,"bold":true}]],"30":[["~",{"fg":4,"bold":true}],["|",{"inverse":true}],["                                                                                                                                                          ",{"fg":4,"bold":true}],["|",{"inverse":true}],["@",{"fg":4,"bold":true}],["|",{"inverse":true}],[" ",{"fg":3,"bold":true}]],"31":[["~",{"fg":4,"bold":true}],["|",{"inverse":true}],["                                                                                                                                                          ",{"fg":4,"bold":true}],["|",{"inverse":true}],["@",{"fg":4,"bold":true}],["|",{"inverse":true}],[" ",{"fg":3,"bold":true}]],"32":[["~",{"fg":4,"bold":true}],["|",{"inverse":true}],["                                                                                                                                                          ",{"fg":4,"bold":true}],["|",{"inverse":true}],["@",{"fg":4,"bold":true}],["|",{"inverse":true}],[" ",{"fg":3,"bold":true}]],"33":[["~",{"fg":4,"bold":true}],["|",{"inverse":true}],["                                                                                                                                                          ",{"fg":4,"bold":true}],["|",{"inverse":true}],["@",{"fg":4,"bold":true}],["|",{"inverse":true}],[" ",{"fg":3,"bold":true}]],"34":[["~",{"fg":4,"bold":true}],["|",{"inverse":true}],["                                                                                                                                                          ",{"fg":4,"bold":true}],["|",{"inverse":true}],["@",{"fg":4,"bold":true}],["|",{"inverse":true}],[" ",{"fg":3,"bold":true}]],"35":[["~",{"fg":4,"bold":true}],["|",{"inverse":true}],["                                                                                                                                                          ",{"fg":4,"bold":true}],["|",{"inverse":true}],["@",{"fg":4,"bold":true}],["|",{"inverse":true}],["~",{"fg":4,"bold":true}]],"36":[["~",{"fg":4,"bold":true}],["|",{"inverse":true}],["                                                                                                                                                          ",{"fg":4,"bold":true}],["|",{"inverse":true}],["@",{"fg":4,"bold":true}],["|",{"inverse":true}],["~",{"fg":4,"bold":true}]],"37":[["~",{"fg":4,"bold":true}],["|",{"inverse":true}],["                                                                                                                                                          ",{"fg":4,"bold":true}],["|",{"inverse":true}],["@",{"fg":4,"bold":true}],["|",{"inverse":true}],["~",{"fg":4,"bold":true}]],"38":[["~",{"fg":4,"bold":true}],["|",{"inverse":true}],["                                                                                                                                                          ",{"fg":4,"bold":true}],["|",{"inverse":true}],["@",{"fg":4,"bold":true}],["|",{"inverse":true}],["~",{"fg":4,"bold":true}]],"39":[["~",{"fg":4,"bold":true}],["|",{"inverse":true}],["                                                                                                                                                          ",{"fg":4,"bold":true}],["|",{"inverse":true}],["@",{"fg":4,"bold":true}],["|",{"inverse":true}],["~",{"fg":4,"bold":true}]],"40":[["~",{"fg":4,"bold":true}],["|",{"inverse":true}],["                                                                                                                                                          ",{"fg":4,"bold":true}],["|",{"inverse":true}],["@",{"fg":4,"bold":true}],["|",{"inverse":true}],["~",{"fg":4,"bold":true}]],"41":[["~",{"fg":4,"bold":true}],["|",{"inverse":true}],["                                                                                                                                                          ",{"fg":4,"bold":true}],["|",{"inverse":true}],["@",{"fg":4,"bold":true}],["|",{"inverse":true}],["~",{"fg":4,"bold":true}]],"42":[["~",{"fg":4,"bold":true}],["|",{"inverse":true}],["                                                                                                                                                          ",{"fg":4,"bold":true}],["|",{"inverse":true}],["@",{"fg":4,"bold":true}],["|",{"inverse":true}],["~",{"fg":4,"bold":true}]],"43":[["~",{"fg":4,"bold":true}],["|",{"inverse":true}],["                                                                                                                                                          ",{"fg":4,"bold":true}],["|",{"inverse":true}],["@",{"fg":4,"bold":true}],["|",{"inverse":true}],["~",{"fg":4,"bold":true}]],"44":[["~",{"fg":4,"bold":true}],["|",{"inverse":true}],["                                                                                                                                                          ",{"fg":4,"bold":true}],["|",{"inverse":true}],["@",{"fg":4,"bold":true}],["|",{"inverse":true}],["~",{"fg":4,"bold":true}]],"45":[["~",{"fg":4,"bold":true}],["|",{"inverse":true}],["                                                                                                                                                          ",{"fg":4,"bold":true}],["|",{"inverse":true}],["@",{"fg":4,"bold":true}],["|",{"inverse":true}],["~",{"fg":4,"bold":true}]],"46":[[">",{"bold":true}],[" ",{"bold":true,"inverse":true}],["agbar ",{"bold":true}],[" Tree                                                                                                                                               ",{}],[" ",{"bold":true,"inverse":true}],["> ",{"inverse":true}],[">",{"bold":true}]]},"cursor":{"x":18,"y":7,"visible":false}}],[0.000812,{"lines":{"7":[["s",{"fg":5,"bold":true}],["|",{"inverse":true}],["127 ",{"fg":3,"bold":true}],["always begin with Sunday: >                                                                                                        ",{}],["|",{"inverse":true}],["                  ",{}],["|",{"inverse":true}],["@",{"fg":4,"bold":true}],["|",{"inverse":true}],[" ",{"fg":3,"bold":true}]],"8":[["[",{"fg":6,"bold":true}],["|",{"inverse":true}],["128 ",{"fg":3,"bold":true}],["  let g:calendar_monday = 1                                                                                                        ",{}],["|",{"inverse":true}],["                  ",{}],["|",{"inverse":true}],["@",{"fg":4,"bold":true}],["|",{"inverse":true}],[" ",{"fg":3,"bold":true}]],"9":[["F",{}],["|",{"inverse":true}],["129 ",{"fg":3,"bold":true}],["<                                                                                                                                  ",{}],["|",{"inverse":true}],["                  ",{}],["|",{"inverse":true}],["@",{"fg":4,"bold":true}],["|",{"inverse":true}],[" ",{"fg":3,"bold":true}]],"10":[["F",{}],["|",{"inverse":true}],["130 ",{"fg":3,"bold":true}],["                                                                                                                                   ",{}],["|",{"inverse":true}],["                  ",{}],["|",{"inverse":true}],["@",{"fg":4,"bold":true}],["|",{"inverse":true}],[" ",{"fg":3,"bold":true}]],"11":[["~",{}],["|",{"inverse":true}],["131 ",{"fg":3,"bold":true}],["                                                *g:calendar_weeknm*                                                                ",{}],["|",{"inverse":true}],["                  ",{}],["|",{"inverse":true}],["@",{"fg":4,"bold":true}],["|",{"inverse":true}],[" ",{"fg":3,"bold":true}]],"12":[["S",{}],["|",{"inverse":true}],["132 ",{"fg":3,"bold":true}],["To show the week number, set this variable.  There are four valid settings: >                                                      ",{}],["|",{"inverse":true}],["                  ",{}],["|",{"inverse":true}],["@",{"fg":4,"bold":true}],["|",{"inverse":true}],[" ",{"fg":3,"bold":true}]],"13":[["S",{}],["|",{"inverse":true}],["133 ",{"fg":3,"bold":true}],["  let g:calendar_weeknm = 1 \" WK01                                                                                                 ",{}],["|",{"inverse":true}],["                  ",{}],["|",{"inverse":true}],["@",{"fg":4,"bold":true}],["|",{"inverse":true}],[" ",{"fg":3,"bold":true}]],"14":[[" ",{}],["|",{"inverse":true}],["134 ",{"fg":3,"bold":true}],["  let g:calendar_weeknm = 2 \" WK 1                                                                                                 ",{}],["|",{"inverse":true}],["                  ",{}],["|",{"inverse":true}],["@",{"fg":4,"bold":true}],["|",{"inverse":true}],[" ",{"fg":3,"bold":true}]],"15":[["c",{"fg":5,"bold":true}],["|",{"inverse":true}],["135 ",{"fg":3,"bold":true}],["  let g:calendar_weeknm = 3 \" KW01                                                                                                 ",{}],["|",{"inverse":true}],["                  ",{}],["|",{"inverse":true}],["@",{"fg":4,"bold":true}],["|",{"inverse":true}],[" ",{"fg":3,"bold":true}]],"16":[["[",{"fg":6,"bold":true}],["|",{"inverse":true}],["136 ",{"fg":3,"bold":true}],["  let g:calendar_weeknm = 4 \" KW 1                                                                                                 ",{}],["|",{"inverse":true}],["                  ",{}],["|",{"inverse":true}],["@",{"fg":4,"bold":true}],["|",{"inverse":true}],[" ",{"fg":3,"bold":true}]],"17":[["S",{"underline":true}],["|",{"inverse":true}],["137 ",{"fg":3,"bold":true}],["  let g:calendar_weeknm = 5 \" 1                                                                                                    ",{}],["|",{"inverse":true}],["                  ",{"underline":true}],["|",{"inverse":true}],["@",{"fg":4,"bold":true}],["|",{"inverse":true}],[" ",{"fg":3,"bold":true}]],"18":[["S",{}],["|",{"inverse":true}],["138 ",{"fg":3,"bold":true}],["<                                                                                                                                  ",{}],["|",{"inverse":true}],["                  ",{}],["|",{"inverse":true}],["@",{"fg":4,"bold":true}],["|",{"inverse":true}],[" ",{"fg":3,"bold":true}]],"19":[[" ",{}],["|",{"inverse":true}],["139 ",{"fg":3,"bold":true}],["                                                                                                                                   ",{}],["|",{"inverse":true}],["                  ",{}],["|",{"inverse":true}],["@",{"fg":4,"bold":true}],["|",{"inverse":true}],[" ",{"fg":3,"bold":true}]],"20":[["n",{"fg":6,"bold":true}],["|",{"inverse":true}],["140 ",{"fg":3,"bold":true}],["                                                *g:calendar_datetime*                                                              ",{}],["|",{"inverse":true}],["                  ",{}],["|",{"inverse":true}],["@",{"fg":4,"bold":true}],["|",{"inverse":true}],[" ",{"fg":3,"bold":true}]],"21":[["m",{}],["|",{"inverse":true}],["141 ",{"fg":3,"bold":true}],["To control display of the                                                                                                                             ",{}],["|",{"inverse":true}],["@",{"fg":4,"bold":true}],["|",{"inverse":true}],[" ",{"fg":3,"bold":true}]]},"cursor":{"x":32,"y":21}}],[0.034428,{"lines":{"21":[["m",{}],["|",{"inverse":true}],["141 ",{"fg":3,"bold":true}],["To control display of the current date and time, set this variable.                                                                ",{}],["|",{"inverse":true}],["                  ",{}],["|",{"inverse":true}],["@",{"fg":4,"bold":true}],["|",{"inverse":true}],[" ",{"fg":3,"bold":true}]],"22":[["~",{"fg":4,"bold":true}],["|",{"inverse":true}],["142 ",{"fg":3,"bold":true}],["Acceptable values are 'title', 'statusline', and '': >                                                                             ",{}],["|",{"inverse":true}],["                  ",{"fg":4,"bold":true}],["|",{"inverse":true}],["@",{"fg":4,"bold":true}],["|",{"inverse":true}],[" ",{"fg":3,"bold":true}]],"23":[["~",{"fg":4,"bold":true}],["|",{"inverse":true}],["143 ",{"fg":3,"bold":true}],["  let g:calendar_datetime = 'title'                                                                                                ",{}],["|",{"inverse":true}],["                  ",{"fg":4,"bold":true}],["|",{"inverse":true}],["@",{"fg":4,"bold":true}],["|",{"inverse":true}],[" ",{"fg":3,"bold":true}]],"24":[["~",{"fg":4,"bold":true}],["|",{"inverse":true}],["144 ",{"fg":3,"bold":true}],["<                                                                                                                                  ",{}],["|",{"inverse":true}],["                  ",{"fg":4,"bold":true}],["|",{"inverse":true}],["@",{"fg":4,"bold":true}],["|",{"inverse":true}],[" ",{"fg":3,"bold":true}]],"25":[["~",{"fg":4,"bold":true}],["|",{"inverse":true}],["145 ",{"fg":3,"bold":true}],["                                                *g:calendar_filetype*                                                              ",{}],["|",{"inverse":true}],["                  ",{"fg":4,"bold":true}],["|",{"inverse":true}],["@",{"fg":4,"bold":true}],["|",{"inverse":true}],[" ",{"fg":3,"bold":true}]],"26":[["~",{"fg":4,"bold":true}],["|",{"inverse":true}],["146 ",{"fg":3,"bold":true}],["To control the filetype of calendar entries, set this variable. It defaults to                                                     ",{}],["|",{"inverse":true}],["                  ",{"fg":4,"bold":true}],["|",{"inverse":true}],["@",{"fg":4,"bold":true}],["|",{"inverse":true}],[" ",{"fg":3,"bold":true}]],"27":[["~",{"fg":4,"bold":true}],["|",{"inverse":true}],["147 ",{"fg":3,"bold":true}],["'markdown'. Acceptable values are values that are acceptable for |filetype|                                                  ",{}],["                         ",{"fg":4,"bold":true}],["|",{"inverse":true}],["@",{"fg":4,"bold":true}],["|",{"inverse":true}],[" ",{"fg":3,"bold":true}]]},"cursor":{"x":131,"y":27}}],[0.003259,{"lines":{"0":[["e",{"fg":6,"bold":true}],["|",{"inverse":true}],["120 ",{"fg":3,"bold":true}],["Sunday: >                                                                                                                          ",{}],["|",{"inverse":true}],["  1 ",{"fg":3,"bold":true}],["\" Press ? for help",{"fg":5,"bold":true}]],"1":[[" ",{}],["|",{"inverse":true}],["121 ",{"fg":3,"bold":true}],["  let g:calendar_wruler = 'Su Mo Tu We Th Fr Sa'                                                                                   ",{}],["|",{"inverse":true}],["  2 ",{"fg":3,"bold":true}],["                  ",{}]],"2":[["r",{"fg":5,"bold":true}],["|",{"inverse":true}],["122 ",{"fg":3,"bold":true}],["<                                                                                                                                  ",{}],["|",{"inverse":true}],["  3 ",{"fg":3,"bold":true}],[".. (up a dir)",{"fg":6,"bold":true}],["     ",{}]],"3":[["[",{"fg":6,"bold":true}],["|",{"inverse":true}],["123 ",{"fg":3,"bold":true}],["                                                                                                                                   ",{}],["|",{"inverse":true}],["  4 /root/",{"fg":3,"bold":true}],["            ",{}]],"4":[["F",{}],["|",{"inverse":true}],["124 ",{"fg":3,"bold":true}],["                                                *g:calendar_monday*                                                                ",{}],["|",{"inverse":true}],["  5 ",{"fg":3,"bold":true}],["▸ .asciinema/",{"fg":6,"bold":true}],["     ",{}]],"5":[["F",{}],["|",{"inverse":true}],["125 ",{"fg":3,"bold":true}],["To make the week start on Monday rather than Sunday, set this variable.  Note                                                      ",{}],["|",{"inverse":true}],["  6 ",{"fg":3,"bold":true}],["▸ .cache/",{"fg":6,"bold":true}],["         ",{}]],"6":[[" ",{}],["|",{"inverse":true}],["126 ",{"fg":3,"bold":true}],["that the value of |g:calendar_wruler| is not affected by this; it should                                                           ",{}],["|",{"inverse":true}],["  7 ",{"fg":3,"bold":true}],["▸ .config/",{"fg":6,"bold":true}],["        ",{}]],"7":[["s",{"fg":5,"bold":true}],["|",{"inverse":true}],["127 ",{"fg":3,"bold":true}],["always begin with Sunday: >                                                                                                        ",{}],["|",{"inverse":true}],["  8 ",{"fg":3,"bold":true}],["▸ .dbus/",{"fg":6,"bold":true}],["          ",{}]],"8":[["[",{"fg":6,"bold":true}],["|",{"inverse":true}],["128 ",{"fg":3,"bold":true}],["  let g:calendar_monday = 1                                                                                                        ",{}],["|",{"inverse":true}],["  9 ",{"fg":3,"bold":true}],["▸ .gnupg/",{"fg":6,"bold":true}],["         ",{}]],"9":[["F",{}],["|",{"inverse":true}],["129 ",{"fg":3,"bold":true}],["<                                                                                                                                  ",{}],["|",{"inverse":true}],[" 10 ",{"fg":3,"bold":true}],["▸ .kde/",{"fg":6,"bold":true}],["           ",{}]],"10":[["F",{}],["|",{"inverse":true}],["130 ",{"fg":3,"bold":true}],["                                                                                                                                   ",{}],["|",{"inverse":true}],[" 11 ",{"fg":3,"bold":true}],["▸ .local/",{"fg":6,"bold":true}],["         ",{}]],"11":[["~",{}],["|",{"inverse":true}],["131 ",{"fg":3,"bold":true}],["                                                *g:calendar_weeknm*                                                                ",{}],["|",{"inverse":true}],[" 12 ",{"fg":3,"bold":true}],["▸ .pki/",{"fg":6,"bold":true}],["           ",{}]],"12":[["S",{}],["|",{"inverse":true}],["132 ",{"fg":3,"bold":true}],["To show the week number, set this variable.  There are four valid settings: >                                                      ",{}],["|",{"inverse":true}],[" 13 ",{"fg":3,"bold":true}],["▸ .ssh/",{"fg":6,"bold":true}],["           ",{}]],"13":[["S",{}],["|",{"inverse":true}],["133 ",{"fg":3,"bold":true}],["  let g:calendar_weeknm = 1 \" WK01                                                                                                 ",{}],["|",{"inverse":true}],[" 14 ",{"fg":3,"bold":true}],["▸ .vim/",{"fg":6,"bold":true}],["           ",{}]],"14":[[" ",{}],["|",{"inverse":true}],["134 ",{"fg":3,"bold":true}],["  let g:calendar_weeknm = 2 \" WK 1                                                                                                 ",{}],["|",{"inverse":true}],[" 15 ",{"fg":3,"bold":true}],["▸ diary/",{"fg":6,"bold":true}],["          ",{}]],"15":[["c",{"fg":5,"bold":true}],["|",{"inverse":true}],["135 ",{"fg":3,"bold":true}],["  let g:calendar_weeknm = 3 \" KW01                                                                                                 ",{}],["|",{"inverse":true}],[" 16 ",{"fg":3,"bold":true}],["▸ temp/",{"fg":6,"bold":true}],["           ",{}]],"16":[["[",{"fg":6,"bold":true}],["|",{"inverse":true}],["136 ",{"fg":3,"bold":true}],["  let g:calendar_weeknm = 4 \" KW 1                                                                                                 ",{}],["|",{"inverse":true}],[" 17 ",{"fg":3,"bold":true}],["  .bash_history   ",{}]],"17":[["S",{"underline":true}],["|",{"inverse":true}],["137 ",{"fg":3,"bold":true}],["  let g:calendar_weeknm = 5 \" 1                                                                                                    ",{}],["|",{"inverse":true}],[" 18 ",{"fg":3,"bold":true}],["  .bash_logout    ",{"underline":true}]],"18":[["S",{}],["|",{"inverse":true}],["138 ",{"fg":3,"bold":true}],["<                                                                                                                                  ",{}],["|",{"inverse":true}],[" 19 ",{"fg":3,"bold":true}],["  .bash_profile   ",{}]],"19":[[" ",{}],["|",{"inverse":true}],["139 ",{"fg":3,"bold":true}],["                                                                                                                                   ",{}],["|",{"inverse":true}],[" 20 ",{"fg":3,"bold":true}],["  .bashrc         ",{}]],"20":[["n",{"fg":6,"bold":true}],["|",{"inverse":true}],["140 ",{"fg":3,"bold":true}],["                                                *g:calendar_datetime*                                                              ",{}],["|",{"inverse":true}],[" 21 ",{"fg":3,"bold":true}],["  .cshrc          ",{}]],"21":[["m",{}],["|",{"inverse":true}],["141 ",{"fg":3,"bold":true}],["To control display of the current date and time, set this variable.                                                                ",{}],["|",{"inverse":true}],[" 22 ",{"fg":3,"bold":true}],["  .dmrc           ",{}]],"22":[["~",{"fg":4,"bold":true}],["|",{"inverse":true}],["142 ",{"fg":3,"bold":true}],["Acceptable values are 'title', 'statusline', and '': >                                                                             ",{}],["|",{"inverse":true}],[" 23 ",{"fg":3,"bold":true}],["  .esd_auth       ",{}]],"23":[["~",{"fg":4,"bold":true}],["|",{"inverse":true}],["143 ",{"fg":3,"bold":true}],["  let g:calendar_datetime = 'title'                                                                                                ",{}],["|",{"inverse":true}],[" 24 ",{"fg":3,"bold":true}],["  .gtkrc-2.0      ",{}]],"24":[["~",{"fg":4,"bold":true}],["|",{"inverse":true}],["144 ",{"fg":3,"bold":true}],["<                                                                                                                                  ",{}],["|",{"inverse":true}],[" 25 ",{"fg":3,"bold":true}],["  .gtkrc-2.0-kde4 ",{}]],"25":[["~",{"fg":4,"bold":true}],["|",{"inverse":true}],["145 ",{"fg":3,"bold":true}],["                                                *g:calendar_filetype*                                                              ",{}],["|",{"inverse":true}],[" 26 ",{"fg":3,"bold":true}],["  .lesshst        ",{}]],"26":[["~",{"fg":4,"bold":true}],["|",{"inverse":true}],["146 ",{"fg":3,"bold":true}],["To control the filetype of calendar entries, set this variable. It defaults to                                                     ",{}],["|",{"inverse":true}],[" 27 ",{"fg":3,"bold":true}],["  .tcshrc         ",{}]],"27":[["~",{"fg":4,"bold":true}],["|",{"inverse":true}],["147 ",{"fg":3,"bold":true}],["'markdown'. Acceptable values are values that are acceptable for |filetype|                                                        ",{}],["|",{"inverse":true}],[" 28 ",{"fg":3,"bold":true}],["  .viminfo        ",{}]],"28":[["~",{"fg":4,"bold":true}],["|",{"inverse":true}],["148 ",{"fg":3,"bold":true}],["like e.g. 'markdown' or 'pandoc':                                                                                                  ",{"underline":true}],["|",{"inverse":true}],[" 29 ",{"fg":3,"bold":true}],["  .vimrc          ",{}]],"29":[["~",{"fg":4,"bold":true}],["|",{"inverse":true}],["149 ",{"fg":3,"bold":true}],["  let g:calendar_filetype = 'pandoc'                                                                                               ",{}],["|",{"inverse":true}],[" 30 ",{"fg":3,"bold":true}],["  .xsession-errors",{}]],"30":[["~",{"fg":4,"bold":true}],["|",{"inverse":true}],["150 ",{"fg":3,"bold":true}],["                                                                                                                                   ",{}],["|",{"inverse":true}],[" 31 ",{"fg":3,"bold":true}],["  anaconda-ks.cfg ",{}]],"31":[["~",{"fg":4,"bold":true}],["|",{"inverse":true}],["151 ",{"fg":3,"bold":true}],["                                                                                                                                   ",{}],["|",{"inverse":true}],[" 32 ",{"fg":3,"bold":true}],["  initial-setup-ks",{}]],"32":[["~",{"fg":4,"bold":true}],["|",{"inverse":true}],["152 ",{"fg":3,"bold":true}],["HOOKS                                           *calendar-hooks*                                                                   ",{}],["|",{"inverse":true}],[" 33 ",{"fg":3,"bold":true}],["  test.c          ",{}]],"33":[["~",{"fg":4,"bold":true}],["|",{"inverse":true}],["153 ",{"fg":3,"bold":true}],["                                                                                                                                   ",{}],["|",{"inverse":true}],[" 34 ",{"fg":3,"bold":true}],["  test.cpp        ",{}]],"34":[["~",{"fg":4,"bold":true}],["|",{"inverse":true}],["154 ",{"fg":3,"bold":true}],["calendar.vim provides a number of hooks which allow you to run custom code on                                                      ",{}],["|",{"inverse":true}],[" 35 ",{"fg":3,"bold":true}],["  .test.cpp.swp   ",{}]],"35":[["~",{"fg":4,"bold":true}],["|",{"inverse":true}],["155 ",{"fg":3,"bold":true}],["certain events.  These are documented below.                                                                                       ",{}],["|",{"inverse":true}],["~                     ",{"fg":4,"bold":true}]],"36":[["~",{"fg":4,"bold":true}],["|",{"inverse":true}],["156 ",{"fg":3,"bold":true}],["                                                                                                                                   ",{}],["|",{"inverse":true}],["~                     ",{"fg":4,"bold":true}]],"37":[["~",{"fg":4,"bold":true}],["|",{"inverse":true}],["157 ",{"fg":3,"bold":true}],["                                                *calendar_action*                                                                  ",{}],["|",{"inverse":true}],["~                     ",{"fg":4,"bold":true}]],"38":[["~",{"fg":4,"bold":true}],["|",{"inverse":true}],["158 ",{"fg":3,"bold":true}],["The function declared in the calendar_action variable is run when the user                                                         ",{}],["|",{"inverse":true}],["~                     ",{"fg":4,"bold":true}]],"39":[["~",{"fg":4,"bold":true}],["|",{"inverse":true}],["159 ",{"fg":3,"bold":true}],["presses enter on a date.  Implement and set your function as follows: >                                                            ",{}],["|",{"inverse":true}],["~                     ",{"fg":4,"bold":true}]],"40":[["~",{"fg":4,"bold":true}],["|",{"inverse":true}],["160 ",{"fg":3,"bold":true}],["  function MyCalAction(day,month,year,week,dir)                                                                                    ",{}],["|",{"inverse":true}],["~                     ",{"fg":4,"bold":true}]],"41":[["~",{"fg":4,"bold":true}],["|",{"inverse":true}],["161 ",{"fg":3,"bold":true}],["    \" day   : day you actioned                                                                                                     ",{}],["|",{"inverse":true}],["~                     ",{"fg":4,"bold":true}]],"42":[["~",{"fg":4,"bold":true}],["|",{"inverse":true}],["162 ",{"fg":3,"bold":true}],["    \" month : month you actioned                                                                                                   ",{}],["|",{"inverse":true}],["~                     ",{"fg":4,"bold":true}]],"43":[["~",{"fg":4,"bold":true}],["|",{"inverse":true}],["163 ",{"fg":3,"bold":true}],["    \" year  : year you actioned                                                                                                    ",{}],["|",{"inverse":true}],["~                     ",{"fg":4,"bold":true}]],"44":[["~",{"fg":4,"bold":true}],["|",{"inverse":true}],["164 ",{"fg":3,"bold":true}],["    \" week  : day of week (Mo=1 ... Su=7)                                                                                          ",{}],["|",{"inverse":true}],["~                     ",{"fg":4,"bold":true}]],"45":[["~",{"fg":4,"bold":true}],["|",{"inverse":true}],["165 ",{"fg":3,"bold":true}],["    \" dir   : direction of calendar                                                                                                ",{}],["|",{"inverse":true}],["~                     ",{"fg":4,"bold":true}]],"46":[[">",{"bold":true}],[" ",{"bold":true,"inverse":true}],[" ",{"inverse":true}],[".vim/bundle/calendar-vim/doc/",{}],["calendar.txt ",{"bold":true}],["                                                                            67% ",{}],["│ LN 148",{"bold":true}],[":1  ",{}],[" ",{"inverse":true}],[" ~/NERD_tree_1 ",{"bold":true}],["       ",{}]]},"cursor":{"x":0,"y":17,"visible":true}}],[2.007812,{"lines":{"0":[["[",{"fg":6,"bold":true}],["|",{"inverse":true}],["123 ",{"fg":3,"bold":true}],["                                                                                                                                   ",{}],["|",{"inverse":true}],["  4 /root/",{"fg":3,"bold":true}],["            ",{}]],"1":[["F",{}],["|",{"inverse":true}],["124 ",{"fg":3,"bold":true}],["                                                *g:calendar_monday*                                                                ",{}],["|",{"inverse":true}],["  5 ",{"fg":3,"bold":true}],["▸ .asciinema/",{"fg":6,"bold":true}],["     ",{}]],"2":[["F",{}],["|",{"inverse":true}],["125 ",{"fg":3,"bold":true}],["To make the week start on Monday rather than Sunday, set this variable.  Note                                                      ",{}],["|",{"inverse":true}],["  6 ",{"fg":3,"bold":true}],["▸ .cache/",{"fg":6,"bold":true}],["         ",{}]],"3":[[" ",{}],["|",{"inverse":true}],["126 ",{"fg":3,"bold":true}],["that the value of |g:calendar_wruler| is not affected by this; it should                                                           ",{}],["|",{"inverse":true}],["  7 ",{"fg":3,"bold":true}],["▸ .config/",{"fg":6,"bold":true}],["        ",{}]],"4":[["s",{"fg":5,"bold":true}],["|",{"inverse":true}],["127 ",{"fg":3,"bold":true}],["always begin with Sunday: >                                                                                                        ",{}],["|",{"inverse":true}],["  8 ",{"fg":3,"bold":true}],["▸ .dbus/",{"fg":6,"bold":true}],["          ",{}]],"5":[["[",{"fg":6,"bold":true}],["|",{"inverse":true}],["128 ",{"fg":3,"bold":true}],["  let g:calendar_monday = 1                                                                                                        ",{}],["|",{"inverse":true}],["  9 ",{"fg":3,"bold":true}],["▸ .gnupg/",{"fg":6,"bold":true}],["         ",{}]],"6":[["F",{}],["|",{"inverse":true}],["129 ",{"fg":3,"bold":true}],["<                                                                                                                                  ",{}],["|",{"inverse":true}],[" 10 ",{"fg":3,"bold":true}],["▸ .kde/",{"fg":6,"bold":true}],["           ",{}]],"7":[["F",{}],["|",{"inverse":true}],["130 ",{"fg":3,"bold":true}],["                                                                                                                                   ",{}],["|",{"inverse":true}],[" 11 ",{"fg":3,"bold":true}],["▸ .local/",{"fg":6,"bold":true}],["         ",{}]],"8":[["~",{}],["|",{"inverse":true}],["131 ",{"fg":3,"bold":true}],["                                                *g:calendar_weeknm*                                                                ",{}],["|",{"inverse":true}],[" 12 ",{"fg":3,"bold":true}],["▸ .pki/",{"fg":6,"bold":true}],["           ",{}]],"9":[["S",{}],["|",{"inverse":true}],["132 ",{"fg":3,"bold":true}],["To show the week number, set this variable.  There are four valid settings: >                                                      ",{}],["|",{"inverse":true}],[" 13 ",{"fg":3,"bold":true}],["▸ .ssh/",{"fg":6,"bold":true}],["           ",{}]],"10":[["S",{}],["|",{"inverse":true}],["133 ",{"fg":3,"bold":true}],["  let g:calendar_weeknm = 1 \" WK01                                                                                                 ",{}],["|",{"inverse":true}],[" 14 ",{"fg":3,"bold":true}],["▸ .vim/",{"fg":6,"bold":true}],["           ",{}]],"11":[[" ",{}],["|",{"inverse":true}],["134 ",{"fg":3,"bold":true}],["  let g:calendar_weeknm = 2 \" WK 1                                                                                                 ",{}],["|",{"inverse":true}],[" 15 ",{"fg":3,"bold":true}],["▸ diary/",{"fg":6,"bold":true}],["          ",{}]],"12":[["c",{"fg":5,"bold":true}],["|",{"inverse":true}],["135 ",{"fg":3,"bold":true}],["  let g:calendar_weeknm = 3 \" KW01                                                                                                 ",{}],["|",{"inverse":true}],[" 16 ",{"fg":3,"bold":true}],["▸ temp/",{"fg":6,"bold":true}],["           ",{}]],"13":[["[",{"fg":6,"bold":true}],["|",{"inverse":true}],["136 ",{"fg":3,"bold":true}],["  let g:calendar_weeknm = 4 \" KW 1                                                                                                 ",{}],["|",{"inverse":true}],[" 17 ",{"fg":3,"bold":true}],["  .bash_history   ",{}]],"14":[["S",{"underline":true}],["|",{"inverse":true}],["137 ",{"fg":3,"bold":true}],["  let g:calendar_weeknm = 5 \" 1                                                                                                    ",{}],["|",{"inverse":true}],[" 18 ",{"fg":3,"bold":true}],["  .bash_logout    ",{"underline":true}]],"15":[["S",{}],["|",{"inverse":true}],["138 ",{"fg":3,"bold":true}],["<                                                                                                                                  ",{}],["|",{"inverse":true}],[" 19 ",{"fg":3,"bold":true}],["  .bash_profile   ",{}]],"16":[[" ",{}],["|",{"inverse":true}],["139 ",{"fg":3,"bold":true}],["                                                                                                                                   ",{}],["|",{"inverse":true}],[" 20 ",{"fg":3,"bold":true}],["  .bashrc         ",{}]],"17":[["n",{"fg":6,"bold":true}],["|",{"inverse":true}],["140 ",{"fg":3,"bold":true}],["                                                *g:calendar_datetime*                                                              ",{}],["|",{"inverse":true}],[" 21 ",{"fg":3,"bold":true}],["  .cshrc          ",{}]],"18":[["m",{}],["|",{"inverse":true}],["141 ",{"fg":3,"bold":true}],["To control display of the current date and time, set this variable.                                                                ",{}],["|",{"inverse":true}],[" 22 ",{"fg":3,"bold":true}],["  .dmrc           ",{}]],"19":[["~",{"fg":4,"bold":true}],["|",{"inverse":true}],["142 ",{"fg":3,"bold":true}],["Acceptable values are 'title', 'statusline', and '': >                                                                             ",{}],["|",{"inverse":true}],[" 23 ",{"fg":3,"bold":true}],["  .esd_auth       ",{}]],"20":[["~",{"fg":4,"bold":true}],["|",{"inverse":true}],["143 ",{"fg":3,"bold":true}],["  let g:calendar_datetime = 'title'                                                                                                ",{}],["|",{"inverse":true}],[" 24 ",{"fg":3,"bold":true}],["  .gtkrc-2.0      ",{}]],"21":[["~",{"fg":4,"bold":true}],["|",{"inverse":true}],["144 ",{"fg":3,"bold":true}],["<                                                                                                                                  ",{}],["|",{"inverse":true}],[" 25 ",{"fg":3,"bold":true}],["  .gtkrc-2.0-kde4 ",{}]],"22":[["~",{"fg":4,"bold":true}],["|",{"inverse":true}],["145 ",{"fg":3,"bold":true}],["                                                *g:calendar_filetype*                                                              ",{}],["|",{"inverse":true}],[" 26 ",{"fg":3,"bold":true}],["  .lesshst        ",{}]],"23":[["~",{"fg":4,"bold":true}],["|",{"inverse":true}],["146 ",{"fg":3,"bold":true}],["To control the filetype of calendar entries, set this variable. It defaults to                                                     ",{}],["|",{"inverse":true}],[" 27 ",{"fg":3,"bold":true}],["  .tcshrc         ",{}]],"24":[["~",{"fg":4,"bold":true}],["|",{"inverse":true}],["147 ",{"fg":3,"bold":true}],["'markdown'. Acceptable values are values that are acceptable for |filetype|                                                        ",{}],["|",{"inverse":true}],[" 28 ",{"fg":3,"bold":true}],["  .viminfo        ",{}]],"25":[["~",{"fg":4,"bold":true}],["|",{"inverse":true}],["148 ",{"fg":3,"bold":true}],["like e.g. 'markdown' or 'pandoc':                                                                                                  ",{"underline":true}],["|",{"inverse":true}],[" 29 ",{"fg":3,"bold":true}],["  .vimrc          ",{}]],"26":[["~",{"fg":4,"bold":true}],["|",{"inverse":true}],["149 ",{"fg":3,"bold":true}],["  let g:calendar_filetype = 'pandoc'                                                                                               ",{}],["|",{"inverse":true}],[" 30 ",{"fg":3,"bold":true}],["  .xsession-errors",{}]],"27":[["~",{"fg":4,"bold":true}],["|",{"inverse":true}],["150 ",{"fg":3,"bold":true}],["                                                                                                                                   ",{}],["|",{"inverse":true}],[" 31 ",{"fg":3,"bold":true}],["  anaconda-ks.cfg ",{}]],"28":[["~",{"fg":4,"bold":true}],["|",{"inverse":true}],["151 ",{"fg":3,"bold":true}],["                                                                                                                                   ",{}],["|",{"inverse":true}],[" 32 ",{"fg":3,"bold":true}],["  initial-setup-ks",{}]],"29":[["~",{"fg":4,"bold":true}],["|",{"inverse":true}],["152 ",{"fg":3,"bold":true}],["HOOKS                                           *calendar-hooks*                                                                   ",{}],["|",{"inverse":true}],[" 33 ",{"fg":3,"bold":true}],["  test.c          ",{}]],"30":[["~",{"fg":4,"bold":true}],["|",{"inverse":true}],["153 ",{"fg":3,"bold":true}],["                                                                                                                                   ",{}],["|",{"inverse":true}],[" 34 ",{"fg":3,"bold":true}],["  test.cpp        ",{}]],"31":[["~",{"fg":4,"bold":true}],["|",{"inverse":true}],["154 ",{"fg":3,"bold":true}],["calendar.vim provides a number of hooks which allow you to run custom code on                                                      ",{}],["|",{"inverse":true}],[" 35 ",{"fg":3,"bold":true}],["  .test.cpp.swp   ",{}]],"32":[["~",{"fg":4,"bold":true}],["|",{"inverse":true}],["155 ",{"fg":3,"bold":true}],["certain events.  These are documented below.                                                                                       ",{}],["|",{"inverse":true}],["~                     ",{"fg":4,"bold":true}]],"33":[["~",{"fg":4,"bold":true}],["|",{"inverse":true}],["156 ",{"fg":3,"bold":true}],["                                                                                                                                   ",{}],["|",{"inverse":true}],["~                     ",{"fg":4,"bold":true}]],"34":[["~",{"fg":4,"bold":true}],["|",{"inverse":true}],["157 ",{"fg":3,"bold":true}],["                                                *calendar_action*                                                                  ",{}],["|",{"inverse":true}],["~                     ",{"fg":4,"bold":true}]],"35":[["~",{"fg":4,"bold":true}],["|",{"inverse":true}],["158 ",{"fg":3,"bold":true}],["The function declared in the calendar_action variable is run when the user                                                         ",{}],["|",{"inverse":true}],["~                     ",{"fg":4,"bold":true}]],"36":[["~",{"fg":4,"bold":true}],["|",{"inverse":true}],["159 ",{"fg":3,"bold":true}],["presses enter on a date.  Implement and set your function as follows: >                                                            ",{}],["|",{"inverse":true}],["~                     ",{"fg":4,"bold":true}]],"37":[["~",{"fg":4,"bold":true}],["|",{"inverse":true}],["160 ",{"fg":3,"bold":true}],["  function MyCalAction(day,month,year,week,dir)                                                                                    ",{}],["|",{"inverse":true}],["~                     ",{"fg":4,"bold":true}]],"38":[["~",{"fg":4,"bold":true}],["|",{"inverse":true}],["161 ",{"fg":3,"bold":true}],["    \" day   : day you actioned                                                                                                     ",{}],["|",{"inverse":true}],["~                     ",{"fg":4,"bold":true}]],"39":[["~",{"fg":4,"bold":true}],["|",{"inverse":true}],["162 ",{"fg":3,"bold":true}],["    \" month : month you actioned                                                                                                   ",{}],["|",{"inverse":true}],["~                     ",{"fg":4,"bold":true}]],"40":[["~",{"fg":4,"bold":true}],["|",{"inverse":true}],["163 ",{"fg":3,"bold":true}],["    \" year  : year you actioned                                                                                                    ",{}],["|",{"inverse":true}],["~                     ",{"fg":4,"bold":true}]],"41":[["~",{"fg":4,"bold":true}],["|",{"inverse":true}],["164 ",{"fg":3,"bold":true}],["    \" week  : day of week (Mo=1 ... Su=7)                                                                                          ",{}],["|",{"inverse":true}],["~                     ",{"fg":4,"bold":true}]],"42":[["~",{"fg":4,"bold":true}],["|",{"inverse":true}],["165 ",{"fg":3,"bold":true}],["    \" dir   : direction of calendar                                                                                                ",{}],["|",{"inverse":true}],["~                     ",{"fg":4,"bold":true}]],"43":[[">",{"bold":true}],[" ",{"bold":true,"inverse":true}],[" ",{"inverse":true}],[".vim/bundle/calendar-vim/doc/",{}],["calendar.txt ",{"bold":true}],["                                                                            67% ",{}],["│ LN 148",{"bold":true}],[":1  ",{}],[" ",{"inverse":true}],[" ~/NERD_tree_1 ",{"bold":true}],["       ",{}]],"44":[["Error detected while processing function <SNR>65_ShowPrototype..246:",{"fg":7,"bg":1,"bold":true}],["                                                                                            ",{}]],"45":[["line    6:",{"fg":3,"bold":true}],["                                                                                                                                                      ",{}]],"46":[["E684: list index out of range: 0",{"fg":7,"bg":1,"bold":true}],["                                                                                                                                ",{}]],"47":[["Press ENTER or type command to continue",{"fg":2,"bold":true}],["                                                                                                                         ",{}]]},"cursor":{"x":39,"y":47}}],[1.335003,{"lines":{"0":[["e",{"fg":6,"bold":true}],["|",{"inverse":true}],["120 ",{"fg":3,"bold":true}],["Sunday: >                                                                                                                          ",{}],["|",{"inverse":true}],["                      ",{}]],"1":[[" ",{}],["|",{"inverse":true}],["121 ",{"fg":3,"bold":true}],["  let g:calendar_wruler = 'Su Mo Tu We Th Fr Sa'                                                                                   ",{}],["|",{"inverse":true}],["                      ",{}]],"2":[["r",{"fg":5,"bold":true}],["|",{"inverse":true}],["122 ",{"fg":3,"bold":true}],["<                                                                                                                                  ",{}],["|",{"inverse":true}],["                      ",{}]],"3":[["[",{"fg":6,"bold":true}],["|",{"inverse":true}],["123 ",{"fg":3,"bold":true}],["                                                                                                                                   ",{}],["|",{"inverse":true}],["                      ",{}]],"4":[["F",{}],["|",{"inverse":true}],["124 ",{"fg":3,"bold":true}],["                                                *g:calendar_monday*                                                                ",{}],["|",{"inverse":true}],["                      ",{}]],"5":[["F",{}],["|",{"inverse":true}],["125 ",{"fg":3,"bold":true}],["To make the week start on Monday rather than Sunday, set this variable.  Note                                                      ",{}],["|",{"inverse":true}],["                      ",{}]],"6":[[" ",{}],["|",{"inverse":true}],["126 ",{"fg":3,"bold":true}],["that the value of |g:calendar_wruler| is not affected by this; it should                                                           ",{}],["|",{"inverse":true}],["                      ",{}]],"7":[["s",{"fg":5,"bold":true}],["|",{"inverse":true}],["                                                                                                                                                              ",{}]],"8":[["[",{"fg":6,"bold":true}],["|",{"inverse":true}],["                                                                                                                                                              ",{}]],"9":[["F",{}],["|",{"inverse":true}],["129 ",{"fg":3,"bold":true}],["<                                                                                                                                  ",{}],["|",{"inverse":true}],[" 10 ",{"fg":3,"bold":true}],["▸ .kde/",{"fg":6,"bold":true}],["           ",{}]],"10":[["F",{}],["|",{"inverse":true}],["130 ",{"fg":3,"bold":true}],["                                                                                                                                   ",{}],["|",{"inverse":true}],[" 11 ",{"fg":3,"bold":true}],["▸ .local/",{"fg":6,"bold":true}],["         ",{}]],"11":[["~",{}],["|",{"inverse":true}],["131 ",{"fg":3,"bold":true}],["                                                *g:calendar_weeknm*                                                                ",{}],["|",{"inverse":true}],[" 12 ",{"fg":3,"bold":true}],["▸ .pki/",{"fg":6,"bold":true}],["           ",{}]],"12":[["S",{}],["|",{"inverse":true}],["132 ",{"fg":3,"bold":true}],["To show the week number, set this variable.  There are four valid settings: >                                                      ",{}],["|",{"inverse":true}],[" 13 ",{"fg":3,"bold":true}],["▸ .ssh/",{"fg":6,"bold":true}],["           ",{}]],"13":[["S",{}],["|",{"inverse":true}],["133 ",{"fg":3,"bold":true}],["  let g:calendar_weeknm = 1 \" WK01                                                                                                 ",{}],["|",{"inverse":true}],[" 14 ",{"fg":3,"bold":true}],["▸ .vim/",{"fg":6,"bold":true}],["           ",{}]],"14":[[" ",{}],["|",{"inverse":true}],["134 ",{"fg":3,"bold":true}],["  let g:calendar_weeknm = 2 \" WK 1                                                                                                 ",{}],["|",{"inverse":true}],[" 15 ",{"fg":3,"bold":true}],["▸ diary/",{"fg":6,"bold":true}],["          ",{}]],"15":[["c",{"fg":5,"bold":true}],["|",{"inverse":true}],["135 ",{"fg":3,"bold":true}],["  let g:calendar_weeknm = 3 \" KW01                                                                                                 ",{}],["|",{"inverse":true}],[" 16 ",{"fg":3,"bold":true}],["▸ temp/",{"fg":6,"bold":true}],["           ",{}]],"16":[["[",{"fg":6,"bold":true}],["|",{"inverse":true}],["136 ",{"fg":3,"bold":true}],["  let g:calendar_weeknm = 4 \" KW 1                                                                                                 ",{}],["|",{"inverse":true}],[" 17 ",{"fg":3,"bold":true}],["  .bash_history   ",{}]],"17":[["S",{"underline":true}],["|",{"inverse":true}],["137 ",{"fg":3,"bold":true}],["  let g:calendar_weeknm = 5 \" 1                                                                                                    ",{}],["|",{"inverse":true}],[" 18 ",{"fg":3,"bold":true}],["  .bash_logout    ",{"underline":true}]],"18":[["S",{}],["|",{"inverse":true}],["138 ",{"fg":3,"bold":true}],["<                                                                                                                                  ",{}],["|",{"inverse":true}],[" 19 ",{"fg":3,"bold":true}],["  .bash_profile   ",{}]],"19":[[" ",{}],["|",{"inverse":true}],["139 ",{"fg":3,"bold":true}],["                                                                                                                                   ",{}],["|",{"inverse":true}],[" 20 ",{"fg":3,"bold":true}],["  .bashrc         ",{}]],"20":[["n",{"fg":6,"bold":true}],["|",{"inverse":true}],["140 ",{"fg":3,"bold":true}],["                                                *g:calendar_datetime*                                                              ",{}],["|",{"inverse":true}],[" 21 ",{"fg":3,"bold":true}],["  .cshrc          ",{}]],"21":[["m",{}],["|",{"inverse":true}],["141 ",{"fg":3,"bold":true}],["To control display of the current date and time, set this variable.                                                                ",{}],["|",{"inverse":true}],[" 22 ",{"fg":3,"bold":true}],["  .dmrc           ",{}]],"22":[["~",{"fg":4,"bold":true}],["|",{"inverse":true}],["142 ",{"fg":3,"bold":true}],["Acceptable values are 'title', 'statusline', and '': >                                                                             ",{}],["|",{"inverse":true}],[" 23 ",{"fg":3,"bold":true}],["  .esd_auth       ",{}]],"23":[["~",{"fg":4,"bold":true}],["|",{"inverse":true}],["143 ",{"fg":3,"bold":true}],["  let g:calendar_datetime = 'title'                                                                                                ",{}],["|",{"inverse":true}],[" 24 ",{"fg":3,"bold":true}],["  .gtkrc-2.0      ",{}]],"24":[["~",{"fg":4,"bold":true}],["|",{"inverse":true}],["144 ",{"fg":3,"bold":true}],["<                                                                                                                                  ",{}],["|",{"inverse":true}],[" 25 ",{"fg":3,"bold":true}],["  .gtkrc-2.0-kde4 ",{}]],"25":[["~",{"fg":4,"bold":true}],["|",{"inverse":true}],["145 ",{"fg":3,"bold":true}],["                                                *g:calendar_filetype*                                                              ",{}],["|",{"inverse":true}],[" 26 ",{"fg":3,"bold":true}],["  .lesshst        ",{}]],"26":[["~",{"fg":4,"bold":true}],["|",{"inverse":true}],["146 ",{"fg":3,"bold":true}],["To control the filetype of calendar entries, set this variable. It defaults to                                                     ",{}],["|",{"inverse":true}],[" 27 ",{"fg":3,"bold":true}],["  .tcshrc         ",{}]],"27":[["~",{"fg":4,"bold":true}],["|",{"inverse":true}],["147 ",{"fg":3,"bold":true}],["'markdown'. Acceptable values are values that are acceptable for |filetype|                                                        ",{}],["|",{"inverse":true}],[" 28 ",{"fg":3,"bold":true}],["  .viminfo        ",{}]],"28":[["~",{"fg":4,"bold":true}],["|",{"inverse":true}],["148 ",{"fg":3,"bold":true}],["like e.g. 'markdown' or 'pandoc':                                                                                                  ",{"underline":true}],["|",{"inverse":true}],[" 29 ",{"fg":3,"bold":true}],["  .vimrc          ",{}]],"29":[["~",{"fg":4,"bold":true}],["|",{"inverse":true}],["149 ",{"fg":3,"bold":true}],["  let g:calendar_filetype = 'pandoc'                                                                                               ",{}],["|",{"inverse":true}],[" 30 ",{"fg":3,"bold":true}],["  .xsession-errors",{}]],"30":[["~",{"fg":4,"bold":true}],["|",{"inverse":true}],["150 ",{"fg":3,"bold":true}],["                                                                                                                                   ",{}],["|",{"inverse":true}],[" 31 ",{"fg":3,"bold":true}],["  anaconda-ks.cfg ",{}]],"31":[["~",{"fg":4,"bold":true}],["|",{"inverse":true}],["151 ",{"fg":3,"bold":true}],["                                                                                                                                   ",{}],["|",{"inverse":true}],[" 32 ",{"fg":3,"bold":true}],["  initial-setup-ks",{}]],"32":[["~",{"fg":4,"bold":true}],["|",{"inverse":true}],["152 ",{"fg":3,"bold":true}],["HOOKS                                           *calendar-hooks*                                                                   ",{}],["|",{"inverse":true}],[" 33 ",{"fg":3,"bold":true}],["  test.c          ",{}]],"33":[["~",{"fg":4,"bold":true}],["|",{"inverse":true}],["153 ",{"fg":3,"bold":true}],["                                                                                                                                   ",{}],["|",{"inverse":true}],[" 34 ",{"fg":3,"bold":true}],["  test.cpp        ",{}]],"34":[["~",{"fg":4,"bold":true}],["|",{"inverse":true}],["154 ",{"fg":3,"bold":true}],["calendar.vim provides a number of hooks which allow you to run custom code on                                                      ",{}],["|",{"inverse":true}],[" 35 ",{"fg":3,"bold":true}],["  .test.cpp.swp   ",{}]],"35":[["~",{"fg":4,"bold":true}],["|",{"inverse":true}],["155 ",{"fg":3,"bold":true}],["certain events.  These are documented below.                                                                                       ",{}],["|",{"inverse":true}],["~                     ",{"fg":4,"bold":true}]],"36":[["~",{"fg":4,"bold":true}],["|",{"inverse":true}],["156 ",{"fg":3,"bold":true}],["                                                                                                                                   ",{}],["|",{"inverse":true}],["~                     ",{"fg":4,"bold":true}]],"37":[["~",{"fg":4,"bold":true}],["|",{"inverse":true}],["157 ",{"fg":3,"bold":true}],["                                                *calendar_action*                                                                  ",{}],["|",{"inverse":true}],["~                     ",{"fg":4,"bold":true}]],"38":[["~",{"fg":4,"bold":true}],["|",{"inverse":true}],["158 ",{"fg":3,"bold":true}],["The function declared in the calendar_action variable is run when the user                                                         ",{}],["|",{"inverse":true}],["~                     ",{"fg":4,"bold":true}]],"39":[["~",{"fg":4,"bold":true}],["|",{"inverse":true}],["159 ",{"fg":3,"bold":true}],["presses enter on a date.  Implement and set your function as follows: >                                                            ",{}],["|",{"inverse":true}],["~                     ",{"fg":4,"bold":true}]],"40":[["~",{"fg":4,"bold":true}],["|",{"inverse":true}],["160 ",{"fg":3,"bold":true}],["  function MyCalAction(day,month,year,week,dir)                                                                                    ",{}],["|",{"inverse":true}],["~                     ",{"fg":4,"bold":true}]],"41":[["~",{"fg":4,"bold":true}],["|",{"inverse":true}],["161 ",{"fg":3,"bold":true}],["    \" day   : day you actioned                                                                                                     ",{}],["|",{"inverse":true}],["~                     ",{"fg":4,"bold":true}]],"42":[["~",{"fg":4,"bold":true}],["|",{"inverse":true}],["162 ",{"fg":3,"bold":true}],["    \" month : month you actioned                                                                                                   ",{}],["|",{"inverse":true}],["~                     ",{"fg":4,"bold":true}]],"43":[["~",{"fg":4,"bold":true}],["|",{"inverse":true}],["163 ",{"fg":3,"bold":true}],["    \" year  : year you actioned                                                                                                    ",{}],["|",{"inverse":true}],["~                     ",{"fg":4,"bold":true}]],"44":[["~",{"fg":4,"bold":true}],["|",{"inverse":true}],["164 ",{"fg":3,"bold":true}],["    \" week  : day of week (Mo=1 ... Su=7)                                                                                          ",{}],["|",{"inverse":true}],["~                     ",{"fg":4,"bold":true}]],"45":[["~",{"fg":4,"bold":true}],["|",{"inverse":true}],["165 ",{"fg":3,"bold":true}],["    \" dir   : direction of calendar                                                                                                ",{}],["|",{"inverse":true}],["~                     ",{"fg":4,"bold":true}]],"46":[[">",{"bold":true}],[" ",{"bold":true,"inverse":true}],[" ",{"inverse":true}],[".vim/bundle/calendar-vim/doc/",{}],["calendar.txt ",{"bold":true}],["                                                                            67% ",{}],["│ LN 148",{"bold":true}],[":1  ",{}],[" ",{"inverse":true}],[" ~/NERD_tree_1 ",{"bold":true}],["       ",{}]],"47":[["Error detected while processing function <SNR>65_ShowPrototype..246:",{"fg":7,"bg":1,"bold":true}],["                                                                                            ",{}]]},"cursor":{"x":2,"y":7,"visible":false}}],[0.000467,{"lines":{"0":[["e",{"fg":6,"bold":true}],["|",{"inverse":true}],["120 ",{"fg":3,"bold":true}],["Sunday: >                                                                                                                          ",{}],["|",{"inverse":true}],["  1 ",{"fg":3,"bold":true}],["\" Press ? for help",{"fg":5,"bold":true}]],"1":[[" ",{}],["|",{"inverse":true}],["121 ",{"fg":3,"bold":true}],["  let g:calendar_wruler = 'Su Mo Tu We Th Fr Sa'                                                                                   ",{}],["|",{"inverse":true}],["  2 ",{"fg":3,"bold":true}],["                  ",{}]],"2":[["r",{"fg":5,"bold":true}],["|",{"inverse":true}],["122 ",{"fg":3,"bold":true}],["<                                                                                                                                  ",{}],["|",{"inverse":true}],["  3 ",{"fg":3,"bold":true}],[".. (up a dir)",{"fg":6,"bold":true}],["     ",{}]],"3":[["[",{"fg":6,"bold":true}],["|",{"inverse":true}],["123 ",{"fg":3,"bold":true}],["                                                                                                                                   ",{}],["|",{"inverse":true}],["  4 /root/",{"fg":3,"bold":true}],["            ",{}]],"4":[["F",{}],["|",{"inverse":true}],["124 ",{"fg":3,"bold":true}],["                                                *g:calendar_monday*                                                                ",{}],["|",{"inverse":true}],["  5 ",{"fg":3,"bold":true}],["▸ .asciinema/",{"fg":6,"bold":true}],["     ",{}]],"5":[["F",{}],["|",{"inverse":true}],["125 ",{"fg":3,"bold":true}],["To make the week start on Monday rather than Sunday, set this variable.  Note                                                      ",{}],["|",{"inverse":true}],["  6 ",{"fg":3,"bold":true}],["▸ .cache/",{"fg":6,"bold":true}],["         ",{}]],"6":[[" ",{}],["|",{"inverse":true}],["126 ",{"fg":3,"bold":true}],["that the value of |g:calendar_wruler| is not affected by this; it should                                                           ",{}],["|",{"inverse":true}],["  7 ",{"fg":3,"bold":true}],["▸ .config/",{"fg":6,"bold":true}],["        ",{}]],"7":[["s",{"fg":5,"bold":true}],["|",{"inverse":true}],["127 ",{"fg":3,"bold":true}],["always begin with Sunday: >                                                                                                        ",{}],["|",{"inverse":true}],["  8 ",{"fg":3,"bold":true}],["▸ .dbus/",{"fg":6,"bold":true}],["          ",{}]],"8":[["[",{"fg":6,"bold":true}],["|",{"inverse":true}],["128 ",{"fg":3,"bold":true}],["  let g:calendar_monday = 1                                                                                                        ",{}],["|",{"inverse":true}],["  9 ",{"fg":3,"bold":true}],["▸ .gnupg/",{"fg":6,"bold":true}],["         ",{}]],"47":[["                                                                                                                                                     ^W         ",{}]]},"cursor":{"x":0,"y":17,"visible":true}}],[1.253628,{"lines":{"47":[["                                                                                                                                                     ^W^W       ",{}]]},"cursor":{"visible":false}}],[0.027411,{"lines":{"46":[["< ",{"inverse":true}],[" NORMAL ",{"bold":true}],[" ",{}],["calendar.txt ",{"bold":true}],["                                                                           unix │ utf-8 │ text │  67% ",{}],[" LN 148",{"bold":true}],[":1  ",{}],[" ",{"bold":true,"inverse":true}],[" ~/…/calendar-vim/doc>",{"bold":true}]],"47":[["                                                                                                                                                                ",{}]]},"cursor":{"x":6,"y":28,"visible":true}}],[0.726652,{"lines":{"47":[["                                                                                                                                                     +          ",{}]]},"cursor":{"visible":false}}],[0.006147,{"lines":{"28":[["~",{"fg":4,"bold":true}],["|",{"inverse":true}],["148 ",{"fg":3,"bold":true}],["like e.g. 'markdown' or 'pandoc':                                                                                                  ",{}],["|",{"inverse":true}],[" 29 ",{"fg":3,"bold":true}],["  .vimrc          ",{}]],"29":[["~",{"fg":4,"bold":true}],["|",{"inverse":true}],["149 ",{"fg":3,"bold":true}],["  let g:calendar_filetype = 'pandoc'                                                                                               ",{"underline":true}],["|",{"inverse":true}],[" 30 ",{"fg":3,"bold":true}],["  .xsession-errors",{}]],"46":[["< ",{"inverse":true}],[" NORMAL ",{"bold":true}],[" ",{}],["calendar.txt ",{"bold":true}],["                                                                           unix │ utf-8 │ text │  67% ",{}],[" LN 149",{"bold":true}],[":3  ",{}],[" ",{"bold":true,"inverse":true}],[" ~/…/calendar-vim/doc>",{"bold":true}]],"47":[["                                                                                                                                                                ",{}]]},"cursor":{"x":8,"y":29,"visible":true}}],[1.207603,{"lines":{"47":[["                                                                                                                                                     ^W         ",{}]]}}],[0.292323,{"lines":{"47":[["                                                                                                                                                     ^Wl        ",{}]]},"cursor":{"visible":false}}],[0.018269,{"lines":{"46":[["<  ",{"inverse":true}],[".vim/bundle/calendar-vim/doc/",{}],["calendar.txt ",{"bold":true}],["                                                                            67% ",{}],["│ LN 149",{"bold":true}],[":3  ",{}],[" ",{"inverse":true}],[" ~/NERD_tree_1 ",{"bold":true}],["       ",{}]],"47":[["                                                                                                                                                                ",{}]]},"cursor":{"x":142,"y":17,"visible":true}}],[2.004173,{}],[0.724082,{"lines":{"47":[["                                                                                                                                                     ^W         ",{}]]}}],[0.196613,{"lines":{"47":[["                                                                                                                                                     ^Wh        ",{}]]},"cursor":{"visible":false}}],[0.020162,{"lines":{"46":[["< ",{"inverse":true}],[" NORMAL ",{"bold":true}],[" ",{}],["calendar.txt ",{"bold":true}],["                                                                           unix │ utf-8 │ text │  67% ",{}],[" LN 149",{"bold":true}],[":3  ",{}],[" ",{"bold":true,"inverse":true}],[" ~/…/calendar-vim/doc>",{"bold":true}]],"47":[["                                                                                                                                                                ",{}]]},"cursor":{"x":8,"y":29,"visible":true}}],[0.437888,{"lines":{"47":[["                                                                                                                                                     ^O         ",{}]]},"cursor":{"visible":false}}],[0.004929,{"lines":{"47":[["\"test.cpp\" 71L, 1060C                                                                                                                                           ",{}]]},"cursor":{"x":21,"y":47}}],[0.210125,{"lines":{"0":[["\"",{"fg":6,"bold":true}],["|",{"inverse":true}],["  1 ",{"fg":3,"bold":true}],["#include ",{"fg":4,"bold":true,"underline":true}],["<iostream>",{"fg":5,"bold":true,"underline":true}],["                                                                                                                ",{"underline":true}],["|",{"inverse":true}],["  1 ",{"fg":3,"bold":true}],["\" Press ? for help",{"fg":5,"bold":true}]],"1":[[" ",{}],["|",{"inverse":true}],["  2 ",{"fg":3,"bold":true}],["#include ",{"fg":4,"bold":true}],["<vector>",{"fg":5,"bold":true}],["                                                                                                                  ",{}],["|",{"inverse":true}],["  2 ",{"fg":3,"bold":true}],["                  ",{}]],"2":[["▼",{"fg":3,"bold":true}],["|",{"inverse":true}],["  3 ",{"fg":3,"bold":true}],["                                                                                                                                   ",{}],["|",{"inverse":true}],["  3 ",{"fg":3,"bold":true}],[".. (up a dir)",{"fg":6,"bold":true}],["     ",{}]],"3":[[" ",{"fg":6,"bold":true}],["|",{"inverse":true}],["  4 using",{"fg":3,"bold":true}],[" ",{}],["namespace",{"fg":2,"bold":true}],[" std;                                                                                                               ",{}],["|",{"inverse":true}],["  4 /root/",{"fg":3,"bold":true}],["            ",{}]],"4":[[" ",{}],["|",{"inverse":true}],["  5 ",{"fg":3,"bold":true}],["                                                                                                                                   ",{}],["|",{"inverse":true}],["  5 ",{"fg":3,"bold":true}],["▸ .asciinema/",{"fg":6,"bold":true}],["     ",{}]],"5":[[" ",{}],["|",{"inverse":true}],["  6 ",{"fg":3,"bold":true}],["struct",{"fg":2,"bold":true}],[" First                                                                                                                       ",{}],["|",{"inverse":true}],["  6 ",{"fg":3,"bold":true}],["▸ .cache/",{"fg":6,"bold":true}],["         ",{}]],"6":[[" ",{}],["|",{"inverse":true}],["  7 ",{"fg":3,"bold":true}],["{                                                                                                                                  ",{}],["|",{"inverse":true}],["  7 ",{"fg":3,"bold":true}],["▸ .config/",{"fg":6,"bold":true}],["        ",{}]],"7":[["▼",{"fg":3,"bold":true}],["|",{"inverse":true}],["  8 ",{"fg":3,"bold":true}],["    ",{}],["virtual",{"fg":2,"bold":true}],[" ",{}],["void",{"fg":2,"bold":true}],[" FirstRun(",{}],["void",{"fg":2,"bold":true}],[") = ",{}],["0",{"fg":5,"bold":true}],[";                                                                                               ",{}],["|",{"inverse":true}],["  8 ",{"fg":3,"bold":true}],["▸ .dbus/",{"fg":6,"bold":true}],["          ",{}]],"8":[[" ",{"fg":6,"bold":true}],["|",{"inverse":true}],["  9 ",{"fg":3,"bold":true}],["    ",{}],["virtual",{"fg":2,"bold":true}],[" ",{}],["void",{"fg":2,"bold":true}],[" Firday = 1                                                                                                        ",{}],["|",{"inverse":true}],["  9 ",{"fg":3,"bold":true}],["▸ .gnupg/",{"fg":6,"bold":true}],["         ",{}]],"9":[[" ",{}],["|",{"inverse":true}],["129 ",{"fg":3,"bold":true}],["<                                                                                                                                  ",{}],["|",{"inverse":true}],[" 10 ",{"fg":3,"bold":true}],["▸ .kde/",{"fg":6,"bold":true}],["           ",{}]],"10":[[" ",{}],["|",{"inverse":true}],["130 ",{"fg":3,"bold":true}],["                                                                                                                                   ",{}],["|",{"inverse":true}],[" 11 ",{"fg":3,"bold":true}],["▸ .local/",{"fg":6,"bold":true}],["         ",{}]],"11":[[" ",{}],["|",{"inverse":true}],["131 ",{"fg":3,"bold":true}],["                                                *g:calendar_weeknm*                                                                ",{}],["|",{"inverse":true}],[" 12 ",{"fg":3,"bold":true}],["▸ .pki/",{"fg":6,"bold":true}],["           ",{}]],"12":[[" ",{}],["|",{"inverse":true}],["132 ",{"fg":3,"bold":true}],["To show the week number, set this variable.  There are four valid settings: >                                                      ",{}],["|",{"inverse":true}],[" 13 ",{"fg":3,"bold":true}],["▸ .ssh/",{"fg":6,"bold":true}],["           ",{}]],"13":[[" ",{}],["|",{"inverse":true}],["133 ",{"fg":3,"bold":true}],["  let g:calendar_weeknm = 1 \" WK01                                                                                                 ",{}],["|",{"inverse":true}],[" 14 ",{"fg":3,"bold":true}],["▸ .vim/",{"fg":6,"bold":true}],["           ",{}]],"15":[["▼",{"fg":3,"bold":true}],["|",{"inverse":true}],["135 ",{"fg":3,"bold":true}],["  let g:calendar_weeknm = 3 \" KW01                                                                                                 ",{}],["|",{"inverse":true}],[" 16 ",{"fg":3,"bold":true}],["▸ temp/",{"fg":6,"bold":true}],["           ",{}]],"16":[[" ",{"fg":6,"bold":true}],["|",{"inverse":true}],["136 ",{"fg":3,"bold":true}],["  let g:calendar_weeknm = 4 \" KW 1                                                                                                 ",{}],["|",{"inverse":true}],[" 17 ",{"fg":3,"bold":true}],["  .bash_history   ",{}]],"17":[[" ",{"underline":true}],["|",{"inverse":true}],["137 ",{"fg":3,"bold":true}],["  let g:calendar_weeknm = 5 \" 1                                                                                                    ",{}],["|",{"inverse":true}],[" 18 ",{"fg":3,"bold":true}],["  .bash_logout    ",{"underline":true}]],"18":[[" ",{}],["|",{"inverse":true}],["138 ",{"fg":3,"bold":true}],["<                                                                                                                                  ",{}],["|",{"inverse":true}],[" 19 ",{"fg":3,"bold":true}],["  .bash_profile   ",{}]],"20":[["▼",{"fg":3,"bold":true}],["|",{"inverse":true}],["140 ",{"fg":3,"bold":true}],["                                                *g:calendar_datetime*                                                              ",{}],["|",{"inverse":true}],[" 21 ",{"fg":3,"bold":true}],["  .cshrc          ",{}]],"21":[[" ",{}],["|",{"inverse":true}],["141 ",{"fg":3,"bold":true}],["To control display of the current date and time, set this variable.                                                                ",{}],["|",{"inverse":true}],[" 22 ",{"fg":3,"bold":true}],["  .dmrc           ",{}]]},"cursor":{"x":26,"y":8}}],[0.012983,{"lines":{"8":[[" ",{"fg":6,"bold":true}],["|",{"inverse":true}],["  9 ",{"fg":3,"bold":true}],["    ",{}],["virtual",{"fg":2,"bold":true}],[" ",{}],["void",{"fg":2,"bold":true}],[" FirstRun2(",{}],["void",{"fg":2,"bold":true}],[") = ",{}],["0",{"fg":5,"bold":true}],[";                                                                                              ",{}],["|",{"inverse":true}],["  9 ",{"fg":3,"bold":true}],["▸ .gnupg/",{"fg":6,"bold":true}],["         ",{}]],"9":[[" ",{}],["|",{"inverse":true}],[" 10 ",{"fg":3,"bold":true}],["};                                                                                                                                 ",{}],["|",{"inverse":true}],[" 10 ",{"fg":3,"bold":true}],["▸ .kde/",{"fg":6,"bold":true}],["           ",{}]],"10":[[" ",{}],["|",{"inverse":true}],[" 11 ",{"fg":3,"bold":true}],["                                                                                                                                   ",{}],["|",{"inverse":true}],[" 11 ",{"fg":3,"bold":true}],["▸ .local/",{"fg":6,"bold":true}],["         ",{}]],"11":[[" ",{}],["|",{"inverse":true}],[" 12 ",{"fg":3,"bold":true}],["struct",{"fg":2,"bold":true}],[" Second                                                                                                                      ",{}],["|",{"inverse":true}],[" 12 ",{"fg":3,"bold":true}],["▸ .pki/",{"fg":6,"bold":true}],["           ",{}]],"12":[[" ",{}],["|",{"inverse":true}],[" 13 ",{"fg":3,"bold":true}],["{                                                                                                                                  ",{}],["|",{"inverse":true}],[" 13 ",{"fg":3,"bold":true}],["▸ .ssh/",{"fg":6,"bold":true}],["           ",{}]],"13":[[" ",{}],["|",{"inverse":true}],[" 14 ",{"fg":3,"bold":true}],["    ",{}],["virtual",{"fg":2,"bold":true}],[" ",{}],["void",{"fg":2,"bold":true}],[" SecondRun(",{}],["void",{"fg":2,"bold":true}],[") = ",{}],["0",{"fg":5,"bold":true}],[";                                                                                              ",{}],["|",{"inverse":true}],[" 14 ",{"fg":3,"bold":true}],["▸ .vim/",{"fg":6,"bold":true}],["           ",{}]],"14":[[" ",{}],["|",{"inverse":true}],[" 15 ",{"fg":3,"bold":true}],["    ",{}],["virtual",{"fg":2,"bold":true}],[" ",{}],["void",{"fg":2,"bold":true}],[" SecondRun2(",{}],["void",{"fg":2,"bold":true}],[") = ",{}],["0",{"fg":5,"bold":true}],[";                                                                                             ",{}],["|",{"inverse":true}],[" 15 ",{"fg":3,"bold":true}],["▸ diary/",{"fg":6,"bold":true}],["          ",{}]],"15":[["▼",{"fg":3,"bold":true}],["|",{"inverse":true}],[" 16 ",{"fg":3,"bold":true}],["};                                                                                                                                 ",{}],["|",{"inverse":true}],[" 16 ",{"fg":3,"bold":true}],["▸ temp/",{"fg":6,"bold":true}],["           ",{}]],"16":[[" ",{"fg":6,"bold":true}],["|",{"inverse":true}],[" 17 ",{"fg":3,"bold":true}],["                                                                                                                                   ",{}],["|",{"inverse":true}],[" 17 ",{"fg":3,"bold":true}],["  .bash_history   ",{}]],"17":[[" ",{"underline":true}],["|",{"inverse":true}],[" 18 ",{"fg":3,"bold":true}],["struct",{"fg":2,"bold":true}],[" Last: ",{}],["public",{"fg":3,"bold":true}],[" First,                                                                                                         ",{}],["|",{"inverse":true}],[" 18 ",{"fg":3,"bold":true}],["  .bash_logout    ",{"underline":true}]],"18":[[" ",{}],["|",{"inverse":true}],[" 19 ",{"fg":3,"bold":true}],["    ",{}],["public",{"fg":3,"bold":true}],[" Second                                                                                                                  ",{}],["|",{"inverse":true}],[" 19 ",{"fg":3,"bold":true}],["  .bash_profile   ",{}]],"19":[[" ",{}],["|",{"inverse":true}],[" 20 ",{"fg":3,"bold":true}],["{                                                                                                                                  ",{}],["|",{"inverse":true}],[" 20 ",{"fg":3,"bold":true}],["  .bashrc         ",{}]],"20":[["▼",{"fg":3,"bold":true}],["|",{"inverse":true}],[" 21 ",{"fg":3,"bold":true}],["    ",{}],["// 基类First的虚方法",{"fg":6,"bold":true}],["                                                                                                           ",{}],["|",{"inverse":true}],[" 21 ",{"fg":3,"bold":true}],["  .cshrc          ",{}]],"21":[[" ",{}],["|",{"inverse":true}],[" 22 ",{"fg":3,"bold":true}],["    ",{}],["virtual",{"fg":2,"bold":true}],[" ",{}],["void",{"fg":2,"bold":true}],[" FirstRun(",{}],["void",{"fg":2,"bold":true}],[")                                                                                                    ",{}],["|",{"inverse":true}],[" 22 ",{"fg":3,"bold":true}],["  .dmrc           ",{}]],"22":[["~",{"fg":4,"bold":true}],["|",{"inverse":true}],[" 23 ",{"fg":3,"bold":true}],["    {                                                                                                                              ",{}],["|",{"inverse":true}],[" 23 ",{"fg":3,"bold":true}],["  .esd_auth       ",{}]],"23":[["~",{"fg":4,"bold":true}],["|",{"inverse":true}],[" 24 ",{"fg":3,"bold":true}],["    ",{}],["|",{"fg":2,"bold":true}],["   cout << ",{}],["\"First\"",{"fg":5,"bold":true}],[" << endl;                                                                                                   ",{}],["|",{"inverse":true}],[" 24 ",{"fg":3,"bold":true}],["  .gtkrc-2.0      ",{}]],"24":[["~",{"fg":4,"bold":true}],["|",{"inverse":true}],[" 25 ",{"fg":3,"bold":true}],["    }                                                                                                                              ",{}],["|",{"inverse":true}],[" 25 ",{"fg":3,"bold":true}],["  .gtkrc-2.0-kde4 ",{}]],"25":[["~",{"fg":4,"bold":true}],["|",{"inverse":true}],[" 26 ",{"fg":3,"bold":true}],["                                                                                                                                   ",{}],["|",{"inverse":true}],[" 26 ",{"fg":3,"bold":true}],["  .lesshst        ",{}]],"26":[["~",{"fg":4,"bold":true}],["|",{"inverse":true}],[" 27 ",{"fg":3,"bold":true}],["    ",{}],["virtual",{"fg":2,"bold":true}],[" ",{}],["void",{"fg":2,"bold":true}],[" FirstRun2(",{}],["void",{"fg":2,"bold":true}],[")                                                                                                   ",{}],["|",{"inverse":true}],[" 27 ",{"fg":3,"bold":true}],["  .tcshrc         ",{}]],"27":[["~",{"fg":4,"bold":true}],["|",{"inverse":true}],[" 28 ",{"fg":3,"bold":true}],["    {                                                                                                                              ",{}],["|",{"inverse":true}],[" 28 ",{"fg":3,"bold":true}],["  .viminfo        ",{}]],"28":[["~",{"fg":4,"bold":true}],["|",{"inverse":true}],[" 29 ",{"fg":3,"bold":true}],["    ",{}],["|",{"fg":2,"bold":true}],["   cout << ",{}],["\"First2\"",{"fg":5,"bold":true}],[" << endl;                                                                                                  ",{}],["|",{"inverse":true}],[" 29 ",{"fg":3,"bold":true}],["  .vimrc          ",{}]],"29":[["~",{"fg":4,"bold":true}],["|",{"inverse":true}],[" 30 ",{"fg":3,"bold":true}],["    }                                                                                                                              ",{}],["|",{"inverse":true}],[" 30 ",{"fg":3,"bold":true}],["  .xsession-errors",{}]],"30":[["~",{"fg":4,"bold":true}],["|",{"inverse":true}],[" 31 ",{"fg":3,"bold":true}],["                                                                                                                                   ",{}],["|",{"inverse":true}],[" 31 ",{"fg":3,"bold":true}],["  anaconda-ks.cfg ",{}]],"31":[["~",{"fg":4,"bold":true}],["|",{"inverse":true}],[" 32 ",{"fg":3,"bold":true}],["    ",{}],["// 基类Second虚方法",{"fg":6,"bold":true}],["                                                                                                            ",{}],["|",{"inverse":true}],[" 32 ",{"fg":3,"bold":true}],["  initial-setup-ks",{}]],"32":[["~",{"fg":4,"bold":true}],["|",{"inverse":true}],[" 33 ",{"fg":3,"bold":true}],["    ",{}],["virtual",{"fg":2,"bold":true}],[" ",{}],["void",{"fg":2,"bold":true}],[" SecondRun(",{}],["void",{"fg":2,"bold":true}],[")                                                                                                   ",{}],["|",{"inverse":true}],[" 33 ",{"fg":3,"bold":true}],["  test.c          ",{}]],"33":[["~",{"fg":4,"bold":true}],["|",{"inverse":true}],[" 34 ",{"fg":3,"bold":true}],["    {                                                                                                                              ",{}],["|",{"inverse":true}],[" 34 ",{"fg":3,"bold":true}],["  test.cpp        ",{}]],"34":[["~",{"fg":4,"bold":true}],["|",{"inverse":true}],[" 35 ",{"fg":3,"bold":true}],["    ",{}],["|",{"fg":2,"bold":true}],["   cout <<",{}],["\"Second\"",{"fg":5,"bold":true}],[" << endl;                                                                                                   ",{}],["|",{"inverse":true}],[" 35 ",{"fg":3,"bold":true}],["  .test.cpp.swp   ",{}]],"35":[["~",{"fg":4,"bold":true}],["|",{"inverse":true}],[" 36 ",{"fg":3,"bold":true}],["    }                                                                                                                              ",{}],["|",{"inverse":true}],["~                     ",{"fg":4,"bold":true}]],"36":[["~",{"fg":4,"bold":true}],["|",{"inverse":true}],[" 37 ",{"fg":3,"bold":true}],["                                                                                                                                   ",{}],["|",{"inverse":true}],["~                     ",{"fg":4,"bold":true}]],"37":[["~",{"fg":4,"bold":true}],["|",{"inverse":true}],[" 38 ",{"fg":3,"bold":true}],["    ",{}],["virtual",{"fg":2,"bold":true}],[" ",{}],["void",{"fg":2,"bold":true}],[" SecondRun2(",{}],["void",{"fg":2,"bold":true}],[")                                                                                                  ",{}],["|",{"inverse":true}],["~                     ",{"fg":4,"bold":true}]],"38":[["~",{"fg":4,"bold":true}],["|",{"inverse":true}],[" 39 ",{"fg":3,"bold":true}],["    {                                                                                                                              ",{}],["|",{"inverse":true}],["~                     ",{"fg":4,"bold":true}]],"39":[["~",{"fg":4,"bold":true}],["|",{"inverse":true}],[" 40 ",{"fg":3,"bold":true}],["    ",{}],["|",{"fg":2,"bold":true}],["   cout <<",{}],["\"Second2\"",{"fg":5,"bold":true}],[" << endl;                                                                                                  ",{}],["|",{"inverse":true}],["~                     ",{"fg":4,"bold":true}]],"40":[["~",{"fg":4,"bold":true}],["|",{"inverse":true}],[" 41 ",{"fg":3,"bold":true}],["    }                                                                                                                              ",{}],["|",{"inverse":true}],["~                     ",{"fg":4,"bold":true}]],"41":[["~",{"fg":4,"bold":true}],["|",{"inverse":true}],[" 42 ",{"fg":3,"bold":true}],["                                                                                                                                   ",{}],["|",{"inverse":true}],["~                     ",{"fg":4,"bold":true}]],"42":[["~",{"fg":4,"bold":true}],["|",{"inverse":true}],[" 43 ",{"fg":3,"bold":true}],["    ",{}],["virtual",{"fg":2,"bold":true}],[" ~Last()                                                                                                                ",{}],["|",{"inverse":true}],["~                     ",{"fg":4,"bold":true}]],"43":[["~",{"fg":4,"bold":true}],["|",{"inverse":true}],[" 44 ",{"fg":3,"bold":true}],["    {                                                                                                                              ",{}],["|",{"inverse":true}],["~                     ",{"fg":4,"bold":true}]],"44":[["~",{"fg":4,"bold":true}],["|",{"inverse":true}],[" 45 ",{"fg":3,"bold":true}],["                                                                                                                                   ",{}],["|",{"inverse":true}],["~                     ",{"fg":4,"bold":true}]],"45":[["~",{"fg":4,"bold":true}],["|",{"inverse":true}],[" 46 ",{"fg":3,"bold":true}],["    }                                                                                                                              ",{}],["|",{"inverse":true}],["~                     ",{"fg":4,"bold":true}]],"46":[["< ",{"inverse":true}],[" NORMAL ",{"bold":true}],[" ",{}],["test.cpp ",{"bold":true}],["                                                                                unix │ utf-8 │ cpp │   1% ",{}],[" LN   1",{"bold":true}],[":1  ",{}],[" ",{"bold":true,"inverse":true}],[" ~/NERD_tree_1 ",{"bold":true}],["       ",{}]]},"cursor":{"x":6,"y":0,"visible":true}}],[1.532625,{"lines":{"47":[["\"test.cpp\" 71L, 1060C                                                                                                                                ,          ",{}]]}}],[0.203265,{"lines":{"47":[["\"test.cpp\" 71L, 1060C                                                                                                                                ,t         ",{}]]}}],[0.224181,{"lines":{"47":[["\"test.cpp\" 71L, 1060C                                                                                                                                           ",{}]]},"cursor":{"visible":false}}],[0.068962,{"lines":{"0":[["  1 ",{"fg":3,"bold":true}],["#include ",{"fg":4,"bold":true,"underline":true}],["<iostream>",{"fg":5,"bold":true,"underline":true}],["                                                                                                                  ",{"underline":true}],["|",{"inverse":true}],["  1 ",{"fg":3,"bold":true}],["\" Press ? for help",{"fg":5,"bold":true}]],"1":[["  2 ",{"fg":3,"bold":true}],["#include ",{"fg":4,"bold":true}],["<vector>",{"fg":5,"bold":true}],["                                                                                                                    ",{}],["|",{"inverse":true}],["  2 ",{"fg":3,"bold":true}],["                  ",{}]],"2":[["  3 ",{"fg":3,"bold":true}],["                                                                                                                                     ",{}],["|",{"inverse":true}],["  3 ",{"fg":3,"bold":true}],[".. (up a dir)",{"fg":6,"bold":true}],["     ",{}]],"3":[["  4 using",{"fg":3,"bold":true}],[" ",{}],["namespace",{"fg":2,"bold":true}],[" std;                                                                                                                 ",{}],["|",{"inverse":true}],["  4 /root/",{"fg":3,"bold":true}],["            ",{}]],"4":[["  5 ",{"fg":3,"bold":true}],["                                                                                                                                     ",{}],["|",{"inverse":true}],["  5 ",{"fg":3,"bold":true}],["▸ .asciinema/",{"fg":6,"bold":true}],["     ",{}]],"5":[["  6 ",{"fg":3,"bold":true}],["struct",{"fg":2,"bold":true}],[" First                                                                                                                         ",{}],["|",{"inverse":true}],["  6 ",{"fg":3,"bold":true}],["▸ .cache/",{"fg":6,"bold":true}],["         ",{}]],"6":[["  7 ",{"fg":3,"bold":true}],["{                                                                                                                                    ",{}],["|",{"inverse":true}],["  7 ",{"fg":3,"bold":true}],["▸ .config/",{"fg":6,"bold":true}],["        ",{}]],"7":[["  8 ",{"fg":3,"bold":true}],["    ",{}],["virtual",{"fg":2,"bold":true}],[" ",{}],["void",{"fg":2,"bold":true}],[" FirstRun(",{}],["void",{"fg":2,"bold":true}],[") = ",{}],["0",{"fg":5,"bold":true}],[";                                                                                                 ",{}],["|",{"inverse":true}],["  8 ",{"fg":3,"bold":true}],["▸ .dbus/",{"fg":6,"bold":true}],["          ",{}]],"8":[["  9 ",{"fg":3,"bold":true}],["    ",{}],["virtual",{"fg":2,"bold":true}],[" ",{}],["void",{"fg":2,"bold":true}],[" FirstRun2(",{}],["void",{"fg":2,"bold":true}],[") = ",{}],["0",{"fg":5,"bold":true}],[";                                                                                                ",{}],["|",{"inverse":true}],["  9 ",{"fg":3,"bold":true}],["▸ .gnupg/",{"fg":6,"bold":true}],["         ",{}]],"9":[[" 10 ",{"fg":3,"bold":true}],["};                                                                                                                                   ",{}],["|",{"inverse":true}],[" 10 ",{"fg":3,"bold":true}],["▸ .kde/",{"fg":6,"bold":true}],["           ",{}]],"10":[[" 11 ",{"fg":3,"bold":true}],["                                                                                                                                     ",{}],["|",{"inverse":true}],[" 11 ",{"fg":3,"bold":true}],["▸ .local/",{"fg":6,"bold":true}],["         ",{}]],"11":[[" 12 ",{"fg":3,"bold":true}],["struct",{"fg":2,"bold":true}],[" Second                                                                                                                        ",{}],["|",{"inverse":true}],[" 12 ",{"fg":3,"bold":true}],["▸ .pki/",{"fg":6,"bold":true}],["           ",{}]],"12":[[" 13 ",{"fg":3,"bold":true}],["{                                                                                                                                    ",{}],["|",{"inverse":true}],[" 13 ",{"fg":3,"bold":true}],["▸ .ssh/",{"fg":6,"bold":true}],["           ",{}]],"13":[[" 14 ",{"fg":3,"bold":true}],["    ",{}],["virtual",{"fg":2,"bold":true}],[" ",{}],["void",{"fg":2,"bold":true}],[" SecondRun(",{}],["void",{"fg":2,"bold":true}],[") = ",{}],["0",{"fg":5,"bold":true}],[";                                                                                                ",{}],["|",{"inverse":true}],[" 14 ",{"fg":3,"bold":true}],["▸ .vim/",{"fg":6,"bold":true}],["           ",{}]],"14":[[" 15 ",{"fg":3,"bold":true}],["    ",{}],["virtual",{"fg":2,"bold":true}],[" ",{}],["void",{"fg":2,"bold":true}],[" SecondRun2(",{}],["void",{"fg":2,"bold":true}],[") = ",{}],["0",{"fg":5,"bold":true}],[";                                                                                               ",{}],["|",{"inverse":true}],[" 15 ",{"fg":3,"bold":true}],["▸ diary/",{"fg":6,"bold":true}],["          ",{}]],"15":[[" 16 ",{"fg":3,"bold":true}],["};                                                                                                                                   ",{}],["|",{"inverse":true}],[" 16 ",{"fg":3,"bold":true}],["▸ temp/",{"fg":6,"bold":true}],["           ",{}]],"16":[[" 17 ",{"fg":3,"bold":true}],["                                                                                                                                     ",{}],["|",{"inverse":true}],[" 17 ",{"fg":3,"bold":true}],["  .bash_history   ",{}]],"17":[[" 18 ",{"fg":3,"bold":true}],["struct",{"fg":2,"bold":true}],[" Last: ",{}],["public",{"fg":3,"bold":true}],[" First,                                                                                                           ",{}],["|",{"inverse":true}],[" 18 ",{"fg":3,"bold":true}],["  .bash_logout    ",{"underline":true}]]},"cursor":{"x":0,"y":18}}],[0.000686,{"lines":{"18":[[" 19 ",{"fg":3,"bold":true}],["    ",{}],["public",{"fg":3,"bold":true}],[" Second                                                                                                                    ",{}],["|",{"inverse":true}],[" 19 ",{"fg":3,"bold":true}],["  .bash_profile   ",{}]],"19":[[" 20 ",{"fg":3,"bold":true}],["{                                                                                                                                    ",{}],["|",{"inverse":true}],[" 20 ",{"fg":3,"bold":true}],["  .bashrc         ",{}]],"20":[[" 21 ",{"fg":3,"bold":true}],["    ",{}],["// 基类First的虚方法",{"fg":6,"bold":true}],["                                                                                                             ",{}],["|",{"inverse":true}],[" 21 ",{"fg":3,"bold":true}],["  .cshrc          ",{}]],"21":[[" 22 ",{"fg":3,"bold":true}],["    ",{}],["virtual",{"fg":2,"bold":true}],[" ",{}],["void",{"fg":2,"bold":true}],[" FirstRun(",{}],["void",{"fg":2,"bold":true}],[")                                                                                                      ",{}],["|",{"inverse":true}],[" 22 ",{"fg":3,"bold":true}],["  .dmrc           ",{}]],"22":[[" 23 ",{"fg":3,"bold":true}],["    {                                                                                                                                ",{}],["|",{"inverse":true}],[" 23 ",{"fg":3,"bold":true}],["  .esd_auth       ",{}]],"23":[[" 24 ",{"fg":3,"bold":true}],["    ",{}],["|",{"fg":2,"bold":true}],["   cout << ",{}],["\"First\"",{"fg":5,"bold":true}],[" << endl;                                                                                                     ",{}],["|",{"inverse":true}],[" 24 ",{"fg":3,"bold":true}],["  .gtkrc-2.0      ",{}]],"24":[[" 25 ",{"fg":3,"bold":true}],["    }                                                                                                                                ",{}],["|",{"inverse":true}],[" 25 ",{"fg":3,"bold":true}],["  .gtkrc-2.0-kde4 ",{}]],"25":[[" 26 ",{"fg":3,"bold":true}],["                                                                                                                                     ",{}],["|",{"inverse":true}],[" 26 ",{"fg":3,"bold":true}],["  .lesshst        ",{}]],"26":[[" 27 ",{"fg":3,"bold":true}],["    ",{}],["virtual",{"fg":2,"bold":true}],[" ",{}],["void",{"fg":2,"bold":true}],[" FirstRun2(",{}],["void",{"fg":2,"bold":true}],[")                                                                                                     ",{}],["|",{"inverse":true}],[" 27 ",{"fg":3,"bold":true}],["  .tcshrc         ",{}]],"27":[[" 28 ",{"fg":3,"bold":true}],["    {                                                                                                                                ",{}],["|",{"inverse":true}],[" 28 ",{"fg":3,"bold":true}],["  .viminfo        ",{}]],"28":[[" 29 ",{"fg":3,"bold":true}],["    ",{}],["|",{"fg":2,"bold":true}],["   cout << ",{}],["\"First2\"",{"fg":5,"bold":true}],[" << endl;                                                                                                    ",{}],["|",{"inverse":true}],[" 29 ",{"fg":3,"bold":true}],["  .vimrc          ",{}]],"29":[[" 30 ",{"fg":3,"bold":true}],["    }                                                                                                                                ",{}],["|",{"inverse":true}],[" 30 ",{"fg":3,"bold":true}],["  .xsession-errors",{}]],"30":[[" 31 ",{"fg":3,"bold":true}],["                                                                                                                                     ",{}],["|",{"inverse":true}],[" 31 ",{"fg":3,"bold":true}],["  anaconda-ks.cfg ",{}]],"31":[[" 32 ",{"fg":3,"bold":true}],["    ",{}],["// 基类Second虚方法",{"fg":6,"bold":true}],["                                                                                                              ",{}],["|",{"inverse":true}],[" 32 ",{"fg":3,"bold":true}],["  initial-setup-ks",{}]],"32":[[" 33 ",{"fg":3,"bold":true}],["    ",{}],["virtual",{"fg":2,"bold":true}],[" ",{}],["void",{"fg":2,"bold":true}],[" SecondRun(",{}],["void",{"fg":2,"bold":true}],[")                                                                                                     ",{}],["|",{"inverse":true}],[" 33 ",{"fg":3,"bold":true}],["  test.c          ",{}]],"33":[[" 34 ",{"fg":3,"bold":true}],["    {                                                                                                                                ",{}],["|",{"inverse":true}],[" 34 ",{"fg":3,"bold":true}],["  test.cpp        ",{}]],"34":[[" 35 ",{"fg":3,"bold":true}],["    ",{}],["|",{"fg":2,"bold":true}],["   cout <<",{}],["\"Second\"",{"fg":5,"bold":true}],[" << endl;                                                                                                     ",{}],["|",{"inverse":true}],[" 35 ",{"fg":3,"bold":true}],["  .test.cpp.swp   ",{}]],"35":[[" 36 ",{"fg":3,"bold":true}],["    }                                                                                                                                ",{}],["|",{"inverse":true}],["~                     ",{"fg":4,"bold":true}]],"36":[[" 37 ",{"fg":3,"bold":true}],["                                                                                                                                     ",{}],["|",{"inverse":true}],["~                     ",{"fg":4,"bold":true}]],"37":[[" 38 ",{"fg":3,"bold":true}],["    ",{}],["virtual",{"fg":2,"bold":true}],[" ",{}],["void",{"fg":2,"bold":true}],[" SecondRun2(",{}],["void",{"fg":2,"bold":true}],[")                                                                                                    ",{}],["|",{"inverse":true}],["~                     ",{"fg":4,"bold":true}]],"38":[[" 39 ",{"fg":3,"bold":true}],["    {                                                                                                                                ",{}],["|",{"inverse":true}],["~                     ",{"fg":4,"bold":true}]],"39":[[" 40 ",{"fg":3,"bold":true}],["    ",{}],["|",{"fg":2,"bold":true}],["   cout <<",{}],["\"Second2\"",{"fg":5,"bold":true}],[" << endl;                                                                                                    ",{}],["|",{"inverse":true}],["~                     ",{"fg":4,"bold":true}]],"40":[[" 41 ",{"fg":3,"bold":true}],["    }                                                                                                                                ",{}],["|",{"inverse":true}],["~                     ",{"fg":4,"bold":true}]],"41":[[" 42 ",{"fg":3,"bold":true}],["                                                                                                                                     ",{}],["|",{"inverse":true}],["~                     ",{"fg":4,"bold":true}]],"42":[[" 43 ",{"fg":3,"bold":true}],["    ",{}],["virtual",{"fg":2,"bold":true}],[" ~Last()                                                                                                                  ",{}],["|",{"inverse":true}],["~                     ",{"fg":4,"bold":true}]],"43":[[" 44 ",{"fg":3,"bold":true}],["    {                                                                                                                                ",{}],["|",{"inverse":true}],["~                     ",{"fg":4,"bold":true}]],"44":[[" 45 ",{"fg":3,"bold":true}],["                                                                                                                                     ",{}],["|",{"inverse":true}],["~                     ",{"fg":4,"bold":true}]],"45":[[" 46 ",{"fg":3,"bold":true}],["    }                                                                                                                                ",{}],["|",{"inverse":true}],["~                     ",{"fg":4,"bold":true}]],"46":[[" NORMAL ",{"bold":true}],[" ",{}],["test.cpp ",{"bold":true}],["                                                                                  unix │ utf-8 │ cpp │   1% ",{}],[" LN   1",{"bold":true}],[":1  ",{}],[" ",{"bold":true,"inverse":true}],[" ~/NERD_tree_1 ",{"bold":true}],["       ",{}]]},"cursor":{"x":4,"y":0,"visible":true}}],[0.635998,{"lines":{"47":[["\"test.cpp\" 71L, 1060C                                                                                                                                ,          ",{}]]}}],[0.175709,{"lines":{"47":[["\"test.cpp\" 71L, 1060C                                                                                                                                ,t         ",{}]]}}],[0.238697,{"lines":{"47":[["\"test.cpp\" 71L, 1060C                                                                                                                                           ",{}]]},"cursor":{"visible":false}}],[0.092349,{"lines":{"0":[["\" Press <F1> for hel",{"fg":6,"bold":true}],["|",{"inverse":true}],["m>",{"fg":5,"bold":true,"underline":true}],["                                                                                                                  ",{"underline":true}],["|",{"inverse":true}],["  1 ",{"fg":3,"bold":true}],["\" Press ? for help",{"fg":5,"bold":true}]],"1":[["                    ",{}],["|",{"inverse":true}],["                                                                                                                    ",{}],["|",{"inverse":true}],["  2 ",{"fg":3,"bold":true}],["                  ",{}]],"2":[["▼",{"fg":3,"bold":true}],[" First",{"fg":5,"bold":true}],[" : ",{}],["struct",{"fg":2,"bold":true}],["    ",{}],["|",{"inverse":true}],["                                                                                                                    ",{}],["|",{"inverse":true}],["  3 ",{"fg":3,"bold":true}],[".. (up a dir)",{"fg":6,"bold":true}],["     ",{}]],"3":[["    [prototypes]",{"fg":6,"bold":true}],["    ",{}],["|",{"inverse":true}],["td;                                                                                                                 ",{}],["|",{"inverse":true}],["  4 /root/",{"fg":3,"bold":true}],["            ",{}]],"4":[["   ",{}],["+",{"fg":2,"bold":true}],["FirstRun(void)  ",{}],["|",{"inverse":true}],["                                                                                                                    ",{}],["|",{"inverse":true}],["  5 ",{"fg":3,"bold":true}],["▸ .asciinema/",{"fg":6,"bold":true}],["     ",{}]],"5":[["   ",{}],["+",{"fg":2,"bold":true}],["FirstRun2(void) ",{}],["|",{"inverse":true}],["                                                                                                                    ",{}],["|",{"inverse":true}],["  6 ",{"fg":3,"bold":true}],["▸ .cache/",{"fg":6,"bold":true}],["         ",{}]],"6":[["                    ",{}],["|",{"inverse":true}],["                                                                                                                    ",{}],["|",{"inverse":true}],["  7 ",{"fg":3,"bold":true}],["▸ .config/",{"fg":6,"bold":true}],["        ",{}]],"7":[["▼",{"fg":3,"bold":true,"underline":true}],[" ",{"fg":5,"bold":true,"underline":true}],["Last",{"fg":0,"bg":3,"bold":true}],[" : ",{"underline":true}],["struct",{"fg":2,"bold":true,"underline":true}],["     ",{"underline":true}],["|",{"inverse":true}],["FirstRun(",{}],["void",{"fg":2,"bold":true}],[") = ",{}],["0",{"fg":5,"bold":true}],[";                                                                                                 ",{}],["|",{"inverse":true}],["  8 ",{"fg":3,"bold":true}],["▸ .dbus/",{"fg":6,"bold":true}],["          ",{}]],"8":[["    [functions]",{"fg":6,"bold":true}],["     ",{}],["|",{"inverse":true}],["FirstRun2(",{}],["void",{"fg":2,"bold":true}],[") = ",{}],["0",{"fg":5,"bold":true}],[";                                                                                                ",{}],["|",{"inverse":true}],["  9 ",{"fg":3,"bold":true}],["▸ .gnupg/",{"fg":6,"bold":true}],["         ",{}]],"9":[["   ",{}],["+",{"fg":2,"bold":true}],["FirstRun(void)  ",{}],["|",{"inverse":true}],["                                                                                                                    ",{}],["|",{"inverse":true}],[" 10 ",{"fg":3,"bold":true}],["▸ .kde/",{"fg":6,"bold":true}],["           ",{}]],"10":[["   ",{}],["+",{"fg":2,"bold":true}],["FirstRun2(void) ",{}],["|",{"inverse":true}],["                                                                                                                    ",{}],["|",{"inverse":true}],[" 11 ",{"fg":3,"bold":true}],["▸ .local/",{"fg":6,"bold":true}],["         ",{}]],"11":[["   ",{}],["+",{"fg":2,"bold":true}],["~Last()         ",{}],["|",{"inverse":true}],["                                                                                                                    ",{}],["|",{"inverse":true}],[" 12 ",{"fg":3,"bold":true}],["▸ .pki/",{"fg":6,"bold":true}],["           ",{}]],"12":[["   ",{}],["+",{"fg":2,"bold":true}],["SecondRun(void) ",{}],["|",{"inverse":true}],["                                                                                                                    ",{}],["|",{"inverse":true}],[" 13 ",{"fg":3,"bold":true}],["▸ .ssh/",{"fg":6,"bold":true}],["           ",{}]],"13":[["   ",{}],["+",{"fg":2,"bold":true}],["SecondRun2(void)",{}],["|",{"inverse":true}],["SecondRun(",{}],["void",{"fg":2,"bold":true}],[") = ",{}],["0",{"fg":5,"bold":true}],[";                                                                                                ",{}],["|",{"inverse":true}],[" 14 ",{"fg":3,"bold":true}],["▸ .vim/",{"fg":6,"bold":true}],["           ",{}]],"14":[["                    ",{}],["|",{"inverse":true}],["SecondRun2(",{}],["void",{"fg":2,"bold":true}],[") = ",{}],["0",{"fg":5,"bold":true}],[";                                                                                               ",{}],["|",{"inverse":true}],[" 15 ",{"fg":3,"bold":true}],["▸ diary/",{"fg":6,"bold":true}],["          ",{}]],"15":[["▼",{"fg":3,"bold":true}],[" Second",{"fg":5,"bold":true}],[" : ",{}],["struct",{"fg":2,"bold":true}],["   ",{}],["|",{"inverse":true}],["                                                                                                                    ",{}],["|",{"inverse":true}],[" 16 ",{"fg":3,"bold":true}],["▸ temp/",{"fg":6,"bold":true}],["           ",{}]],"16":[["    [prototypes]",{"fg":6,"bold":true}],["    ",{}],["|",{"inverse":true}],["                                                                                                                    ",{}],["|",{"inverse":true}],[" 17 ",{"fg":3,"bold":true}],["  .bash_history   ",{}]],"17":[["   ",{}],["+",{"fg":2,"bold":true}],["SecondRun(void) ",{}],["|",{"inverse":true}],["ic",{"fg":3,"bold":true}],[" First,                                                                                                           ",{}],["|",{"inverse":true}],[" 18 ",{"fg":3,"bold":true}],["  .bash_logout    ",{"underline":true}]],"18":[["   ",{}],["+",{"fg":2,"bold":true}],["SecondRun2(void)",{}],["|",{"inverse":true}],["                                                                                                                    ",{}],["|",{"inverse":true}],[" 19 ",{"fg":3,"bold":true}],["  .bash_profile   ",{}]],"19":[["                    ",{}],["|",{"inverse":true}],["                                                                                                                    ",{}],["|",{"inverse":true}],[" 20 ",{"fg":3,"bold":true}],["  .bashrc         ",{}]],"20":[["▼",{"fg":3,"bold":true}],[" ",{}],["functions",{"fg":6,"bold":true}],["         ",{}],["|",{"inverse":true}],["虚方法",{"fg":6,"bold":true}],["                                                                                                             ",{}],["|",{"inverse":true}],[" 21 ",{"fg":3,"bold":true}],["  .cshrc          ",{}]],"21":[["    main(",{}],["irtual",{"fg":2,"bold":true}],[" ",{}],["void",{"fg":2,"bold":true}],[" FirstRun(",{}],["void",{"fg":2,"bold":true}],[")                                                                                                      ",{}],["|",{"inverse":true}],[" 22 ",{"fg":3,"bold":true}],["  .dmrc           ",{}]]},"cursor":{"x":9,"y":21}}],[0.009049,{"lines":{"0":[["\" Press <F1> for hel",{"fg":6,"bold":true}],["|",{"inverse":true}],["  1 ",{"fg":3,"bold":true}],["#include ",{"fg":4,"bold":true,"underline":true}],["<iostream>",{"fg":5,"bold":true,"underline":true}],["                                                                                             ",{"underline":true}],["|",{"inverse":true}],["  1 ",{"fg":3,"bold":true}],["\" Press ? for help",{"fg":5,"bold":true}]],"1":[["                    ",{}],["|",{"inverse":true}],["  2 ",{"fg":3,"bold":true}],["#include ",{"fg":4,"bold":true}],["<vector>",{"fg":5,"bold":true}],["                                                                                               ",{}],["|",{"inverse":true}],["  2 ",{"fg":3,"bold":true}],["                  ",{}]],"2":[["▼",{"fg":3,"bold":true}],[" First",{"fg":5,"bold":true}],[" : ",{}],["struct",{"fg":2,"bold":true}],["    ",{}],["|",{"inverse":true}],["  3 ",{"fg":3,"bold":true}],["                                                                                                                ",{}],["|",{"inverse":true}],["  3 ",{"fg":3,"bold":true}],[".. (up a dir)",{"fg":6,"bold":true}],["     ",{}]],"3":[["    [prototypes]",{"fg":6,"bold":true}],["    ",{}],["|",{"inverse":true}],["  4 using",{"fg":3,"bold":true}],[" ",{}],["namespace",{"fg":2,"bold":true}],[" std;                                                                                            ",{}],["|",{"inverse":true}],["  4 /root/",{"fg":3,"bold":true}],["            ",{}]],"4":[["   ",{}],["+",{"fg":2,"bold":true}],["FirstRun(void)  ",{}],["|",{"inverse":true}],["  5 ",{"fg":3,"bold":true}],["                                                                                                                ",{}],["|",{"inverse":true}],["  5 ",{"fg":3,"bold":true}],["▸ .asciinema/",{"fg":6,"bold":true}],["     ",{}]],"5":[["   ",{}],["+",{"fg":2,"bold":true}],["FirstRun2(void) ",{}],["|",{"inverse":true}],["  6 ",{"fg":3,"bold":true}],["struct",{"fg":2,"bold":true}],[" First                                                                                                    ",{}],["|",{"inverse":true}],["  6 ",{"fg":3,"bold":true}],["▸ .cache/",{"fg":6,"bold":true}],["         ",{}]],"6":[["                    ",{}],["|",{"inverse":true}],["  7 ",{"fg":3,"bold":true}],["{                                                                                                               ",{}],["|",{"inverse":true}],["  7 ",{"fg":3,"bold":true}],["▸ .config/",{"fg":6,"bold":true}],["        ",{}]],"7":[["▼",{"fg":3,"bold":true,"underline":true}],[" Last",{"fg":5,"bold":true,"underline":true}],[" : ",{"underline":true}],["struct",{"fg":2,"bold":true,"underline":true}],["     ",{"underline":true}],["|",{"inverse":true}],["  8 ",{"fg":3,"bold":true}],["    ",{}],["virtual",{"fg":2,"bold":true}],[" ",{}],["void",{"fg":2,"bold":true}],[" FirstRun(",{}],["void",{"fg":2,"bold":true}],[") = ",{}],["0",{"fg":5,"bold":true}],[";                                                                            ",{}],["|",{"inverse":true}],["  8 ",{"fg":3,"bold":true}],["▸ .dbus/",{"fg":6,"bold":true}],["          ",{}]],"8":[["    [functions]",{"fg":6,"bold":true}],["     ",{}],["|",{"inverse":true}],["  9 ",{"fg":3,"bold":true}],["    ",{}],["virtual",{"fg":2,"bold":true}],[" ",{}],["void",{"fg":2,"bold":true}],[" FirstRun2(",{}],["void",{"fg":2,"bold":true}],[") = ",{}],["0",{"fg":5,"bold":true}],[";                                                                           ",{}],["|",{"inverse":true}],["  9 ",{"fg":3,"bold":true}],["▸ .gnupg/",{"fg":6,"bold":true}],["         ",{}]],"9":[["   ",{}],["+",{"fg":2,"bold":true}],["FirstRun(void)  ",{}],["|",{"inverse":true}],[" 10 ",{"fg":3,"bold":true}],["};                                                                                                              ",{}],["|",{"inverse":true}],[" 10 ",{"fg":3,"bold":true}],["▸ .kde/",{"fg":6,"bold":true}],["           ",{}]],"10":[["   ",{}],["+",{"fg":2,"bold":true}],["FirstRun2(void) ",{}],["|",{"inverse":true}],[" 11 ",{"fg":3,"bold":true}],["                                                                                                                ",{}],["|",{"inverse":true}],[" 11 ",{"fg":3,"bold":true}],["▸ .local/",{"fg":6,"bold":true}],["         ",{}]],"11":[["   ",{}],["+",{"fg":2,"bold":true}],["~Last()         ",{}],["|",{"inverse":true}],[" 12 ",{"fg":3,"bold":true}],["struct",{"fg":2,"bold":true}],[" Second                                                                                                   ",{}],["|",{"inverse":true}],[" 12 ",{"fg":3,"bold":true}],["▸ .pki/",{"fg":6,"bold":true}],["           ",{}]],"12":[["   ",{}],["+",{"fg":2,"bold":true}],["SecondRun(void) ",{}],["|",{"inverse":true}],[" 13 ",{"fg":3,"bold":true}],["{                                                                                                               ",{}],["|",{"inverse":true}],[" 13 ",{"fg":3,"bold":true}],["▸ .ssh/",{"fg":6,"bold":true}],["           ",{}]],"13":[["   ",{}],["+",{"fg":2,"bold":true}],["SecondRun2(void)",{}],["|",{"inverse":true}],[" 14 ",{"fg":3,"bold":true}],["    ",{}],["virtual",{"fg":2,"bold":true}],[" ",{}],["void",{"fg":2,"bold":true}],[" SecondRun(",{}],["void",{"fg":2,"bold":true}],[") = ",{}],["0",{"fg":5,"bold":true}],[";                                                                           ",{}],["|",{"inverse":true}],[" 14 ",{"fg":3,"bold":true}],["▸ .vim/",{"fg":6,"bold":true}],["           ",{}]],"14":[["                    ",{}],["|",{"inverse":true}],[" 15 ",{"fg":3,"bold":true}],["    ",{}],["virtual",{"fg":2,"bold":true}],[" ",{}],["void",{"fg":2,"bold":true}],[" SecondRun2(",{}],["void",{"fg":2,"bold":true}],[") = ",{}],["0",{"fg":5,"bold":true}],[";                                                                          ",{}],["|",{"inverse":true}],[" 15 ",{"fg":3,"bold":true}],["▸ diary/",{"fg":6,"bold":true}],["          ",{}]],"15":[["▼",{"fg":3,"bold":true}],[" Second",{"fg":5,"bold":true}],[" : ",{}],["struct",{"fg":2,"bold":true}],["   ",{}],["|",{"inverse":true}],[" 16 ",{"fg":3,"bold":true}],["};                                                                                                              ",{}],["|",{"inverse":true}],[" 16 ",{"fg":3,"bold":true}],["▸ temp/",{"fg":6,"bold":true}],["           ",{}]],"16":[["    [prototypes]",{"fg":6,"bold":true}],["    ",{}],["|",{"inverse":true}],[" 17 ",{"fg":3,"bold":true}],["                                                                                                                ",{}],["|",{"inverse":true}],[" 17 ",{"fg":3,"bold":true}],["  .bash_history   ",{}]],"17":[["   ",{}],["+",{"fg":2,"bold":true}],["SecondRun(void) ",{}],["|",{"inverse":true}],[" 18 ",{"fg":3,"bold":true}],["struct",{"fg":2,"bold":true}],[" Last: ",{}],["public",{"fg":3,"bold":true}],[" First,                                                                                      ",{}],["|",{"inverse":true}],[" 18 ",{"fg":3,"bold":true}],["  .bash_logout    ",{"underline":true}]],"18":[["   ",{}],["+",{"fg":2,"bold":true}],["SecondRun2(void)",{}],["|",{"inverse":true}],[" 19 ",{"fg":3,"bold":true}],["    ",{}],["public",{"fg":3,"bold":true}],[" Second                                                                                               ",{}],["|",{"inverse":true}],[" 19 ",{"fg":3,"bold":true}],["  .bash_profile   ",{}]],"19":[["                    ",{}],["|",{"inverse":true}],[" 20 ",{"fg":3,"bold":true}],["{                                                                                                               ",{}],["|",{"inverse":true}],[" 20 ",{"fg":3,"bold":true}],["  .bashrc         ",{}]],"20":[["▼",{"fg":3,"bold":true}],[" ",{}],["functions",{"fg":6,"bold":true}],["         ",{}],["|",{"inverse":true}],[" 21 ",{"fg":3,"bold":true}],["    ",{}],["// 基类First的虚方法",{"fg":6,"bold":true}],["                                                                                        ",{}],["|",{"inverse":true}],[" 21 ",{"fg":3,"bold":true}],["  .cshrc          ",{}]],"21":[["    main(int argc, c",{}],["|",{"inverse":true}],[" 22 ",{"fg":3,"bold":true}],["    ",{}],["virtual",{"fg":2,"bold":true}],[" ",{}],["void",{"fg":2,"bold":true}],[" FirstRun(",{}],["void",{"fg":2,"bold":true}],[")                                                                                 ",{}],["|",{"inverse":true}],[" 22 ",{"fg":3,"bold":true}],["  .dmrc           ",{}]],"22":[["~                   ",{"fg":4,"bold":true}],["|",{"inverse":true}],[" 23 ",{"fg":3,"bold":true}],["    {                                                                                                           ",{}],["|",{"inverse":true}],[" 23 ",{"fg":3,"bold":true}],["  .esd_auth       ",{}]],"23":[["~                   ",{"fg":4,"bold":true}],["|",{"inverse":true}],[" 24 ",{"fg":3,"bold":true}],["    ",{}],["|",{"fg":2,"bold":true}],["   cout << ",{}],["\"First\"",{"fg":5,"bold":true}],[" << endl;                                                                                ",{}],["|",{"inverse":true}],[" 24 ",{"fg":3,"bold":true}],["  .gtkrc-2.0      ",{}]],"24":[["~                   ",{"fg":4,"bold":true}],["|",{"inverse":true}],[" 25 ",{"fg":3,"bold":true}],["    }                                                                                                           ",{}],["|",{"inverse":true}],[" 25 ",{"fg":3,"bold":true}],["  .gtkrc-2.0-kde4 ",{}]],"25":[["~                   ",{"fg":4,"bold":true}],["|",{"inverse":true}],[" 26 ",{"fg":3,"bold":true}],["                                                                                                                ",{}],["|",{"inverse":true}],[" 26 ",{"fg":3,"bold":true}],["  .lesshst        ",{}]],"26":[["~                   ",{"fg":4,"bold":true}],["|",{"inverse":true}],[" 27 ",{"fg":3,"bold":true}],["    ",{}],["virtual",{"fg":2,"bold":true}],[" ",{}],["void",{"fg":2,"bold":true}],[" FirstRun2(",{}],["void",{"fg":2,"bold":true}],[")                                                                                ",{}],["|",{"inverse":true}],[" 27 ",{"fg":3,"bold":true}],["  .tcshrc         ",{}]],"27":[["~                   ",{"fg":4,"bold":true}],["|",{"inverse":true}],[" 28 ",{"fg":3,"bold":true}],["    {                                                                                                           ",{}],["|",{"inverse":true}],[" 28 ",{"fg":3,"bold":true}],["  .viminfo        ",{}]],"28":[["~                   ",{"fg":4,"bold":true}],["|",{"inverse":true}],[" 29 ",{"fg":3,"bold":true}],["    ",{}],["|",{"fg":2,"bold":true}],["   cout << ",{}],["\"First2\"",{"fg":5,"bold":true}],[" << endl;                                                                               ",{}],["|",{"inverse":true}],[" 29 ",{"fg":3,"bold":true}],["  .vimrc          ",{}]],"29":[["~                   ",{"fg":4,"bold":true}],["|",{"inverse":true}],[" 30 ",{"fg":3,"bold":true}],["    }                                                                                                           ",{}],["|",{"inverse":true}],[" 30 ",{"fg":3,"bold":true}],["  .xsession-errors",{}]],"30":[["~                   ",{"fg":4,"bold":true}],["|",{"inverse":true}],[" 31 ",{"fg":3,"bold":true}],["                                                                                                                ",{}],["|",{"inverse":true}],[" 31 ",{"fg":3,"bold":true}],["  anaconda-ks.cfg ",{}]],"31":[["~                   ",{"fg":4,"bold":true}],["|",{"inverse":true}],[" 32 ",{"fg":3,"bold":true}],["    ",{}],["// 基类Second虚方法",{"fg":6,"bold":true}],["                                                                                         ",{}],["|",{"inverse":true}],[" 32 ",{"fg":3,"bold":true}],["  initial-setup-ks",{}]],"32":[["~                   ",{"fg":4,"bold":true}],["|",{"inverse":true}],[" 33 ",{"fg":3,"bold":true}],["    ",{}],["virtual",{"fg":2,"bold":true}],[" ",{}],["void",{"fg":2,"bold":true}],[" SecondRun(",{}],["void",{"fg":2,"bold":true}],[")                                                                                ",{}],["|",{"inverse":true}],[" 33 ",{"fg":3,"bold":true}],["  test.c          ",{}]],"33":[["~                   ",{"fg":4,"bold":true}],["|",{"inverse":true}],[" 34 ",{"fg":3,"bold":true}],["    {                                                                                                           ",{}],["|",{"inverse":true}],[" 34 ",{"fg":3,"bold":true}],["  test.cpp        ",{}]],"34":[["~                   ",{"fg":4,"bold":true}],["|",{"inverse":true}],[" 35 ",{"fg":3,"bold":true}],["    ",{}],["|",{"fg":2,"bold":true}],["   cout <<",{}],["\"Second\"",{"fg":5,"bold":true}],[" << endl;                                                                                ",{}],["|",{"inverse":true}],[" 35 ",{"fg":3,"bold":true}],["  .test.cpp.swp   ",{}]],"35":[["~                   ",{"fg":4,"bold":true}],["|",{"inverse":true}],[" 36 ",{"fg":3,"bold":true}],["    }                                                                                                           ",{}],["|",{"inverse":true}],["~                     ",{"fg":4,"bold":true}]],"36":[["~                   ",{"fg":4,"bold":true}],["|",{"inverse":true}],[" 37 ",{"fg":3,"bold":true}],["                                                                                                                ",{}],["|",{"inverse":true}],["~                     ",{"fg":4,"bold":true}]],"37":[["~                   ",{"fg":4,"bold":true}],["|",{"inverse":true}],[" 38 ",{"fg":3,"bold":true}],["    ",{}],["virtual",{"fg":2,"bold":true}],[" ",{}],["void",{"fg":2,"bold":true}],[" SecondRun2(",{}],["void",{"fg":2,"bold":true}],[")                                                                               ",{}],["|",{"inverse":true}],["~                     ",{"fg":4,"bold":true}]],"38":[["~                   ",{"fg":4,"bold":true}],["|",{"inverse":true}],[" 39 ",{"fg":3,"bold":true}],["    {                                                                                                           ",{}],["|",{"inverse":true}],["~                     ",{"fg":4,"bold":true}]],"39":[["~                   ",{"fg":4,"bold":true}],["|",{"inverse":true}],[" 40 ",{"fg":3,"bold":true}],["    ",{}],["|",{"fg":2,"bold":true}],["   cout <<",{}],["\"Second2\"",{"fg":5,"bold":true}],[" << endl;                                                                               ",{}],["|",{"inverse":true}],["~                     ",{"fg":4,"bold":true}]],"40":[["~                   ",{"fg":4,"bold":true}],["|",{"inverse":true}],[" 41 ",{"fg":3,"bold":true}],["    }                                                                                                           ",{}],["|",{"inverse":true}],["~                     ",{"fg":4,"bold":true}]],"41":[["~                   ",{"fg":4,"bold":true}],["|",{"inverse":true}],[" 42 ",{"fg":3,"bold":true}],["                                                                                                                ",{}],["|",{"inverse":true}],["~                     ",{"fg":4,"bold":true}]],"42":[["~                   ",{"fg":4,"bold":true}],["|",{"inverse":true}],[" 43 ",{"fg":3,"bold":true}],["    ",{}],["virtual",{"fg":2,"bold":true}],[" ~Last()                                                                                             ",{}],["|",{"inverse":true}],["~                     ",{"fg":4,"bold":true}]],"43":[["~                   ",{"fg":4,"bold":true}],["|",{"inverse":true}],[" 44 ",{"fg":3,"bold":true}],["    {                                                                                                           ",{}],["|",{"inverse":true}],["~                     ",{"fg":4,"bold":true}]],"44":[["~                   ",{"fg":4,"bold":true}],["|",{"inverse":true}],[" 45 ",{"fg":3,"bold":true}],["                                                                                                                ",{}],["|",{"inverse":true}],["~                     ",{"fg":4,"bold":true}]],"45":[["~                   ",{"fg":4,"bold":true}],["|",{"inverse":true}],[" 46 ",{"fg":3,"bold":true}],["    }                                                                                                           ",{}],["|",{"inverse":true}],["~                     ",{"fg":4,"bold":true}]],"46":[["[Name] test.cpp      ",{"bold":true,"inverse":true}],[" ",{"inverse":true}],["test.cpp ",{"bold":true}],["                                                                                           1% ",{}],["│ LN   1",{"bold":true}],[":1  ",{}],[" ",{"inverse":true}],[" ~/NERD_tree_1 ",{"bold":true}],["       ",{}]]},"cursor":{"x":6,"y":7}}],[0.021327,{"lines":{"46":[["[Name] test.cpp      ",{"inverse":true}],[" NORMAL ",{"bold":true}],[" ",{}],["test.cpp ",{"bold":true}],["                                                             unix │ utf-8 │ cpp │   1% ",{}],[" LN   1",{"bold":true}],[":1  ",{}],[" ",{"bold":true,"inverse":true}],[" ~/NERD_tree_1 ",{"bold":true}],["       ",{}]]},"cursor":{"x":25,"y":0,"visible":true}}],[2.007816,{}],[0.163919,{"lines":{"47":[["\"test.cpp\" 71L, 1060C                                                                                                                                k          ",{}]]},"cursor":{"visible":false}}],[0.001882,{"lines":{"47":[["\"test.cpp\" 71L, 1060C                                                                                                                                           ",{}]]},"cursor":{"visible":true}}],[0.60992,{}],[0.262732,{}],[0.179233,{}],[0.6716569999999999,{"lines":{"47":[[":                                                                                                                                                               ",{}]]},"cursor":{"x":1,"y":47}}],[0.192068,{"lines":{"47":[[":q                                                                                                                                                              ",{}]]},"cursor":{"x":2}}],[0.225163,{"lines":{"47":[[":qa                                                                                                                                                             ",{}]]},"cursor":{"x":3}}],[0.159127,{"cursor":{"x":0}}],[0.104715,{}],[0.044141,{}],[0.009552999999999999,{"lines":{"47":[["[root@localhost ~]#                                                                                                                                             ",{}]]},"cursor":{"x":20}}],[0.980176,{"lines":{"47":[["[root@localhost ~]# c                                                                                                                                           ",{}]]},"cursor":{"x":21}}],[0.09604699999999999,{"lines":{"47":[["[root@localhost ~]# cl                                                                                                                                          ",{}]]},"cursor":{"x":22}}],[0.148928,{"lines":{"47":[["[root@localhost ~]# cle                                                                                                                                         ",{}]]},"cursor":{"x":23}}],[0.087701,{"lines":{"47":[["[root@localhost ~]# clea                                                                                                                                        ",{}]]},"cursor":{"x":24}}],[0.07108399999999999,{"lines":{"47":[["[root@localhost ~]# clear                                                                                                                                       ",{}]]},"cursor":{"x":25}}],[0.174067,{"lines":{"0":[["                    ",{}],["|",{"inverse":true}],["  2 ",{"fg":3,"bold":true}],["#include ",{"fg":4,"bold":true}],["<vector>",{"fg":5,"bold":true}],["                                                                                               ",{}],["|",{"inverse":true}],["  2 ",{"fg":3,"bold":true}],["                  ",{}]],"1":[["▼",{"fg":3,"bold":true}],[" First",{"fg":5,"bold":true}],[" : ",{}],["struct",{"fg":2,"bold":true}],["    ",{}],["|",{"inverse":true}],["  3 ",{"fg":3,"bold":true}],["                                                                                                                ",{}],["|",{"inverse":true}],["  3 ",{"fg":3,"bold":true}],[".. (up a dir)",{"fg":6,"bold":true}],["     ",{}]],"2":[["    [prototypes]",{"fg":6,"bold":true}],["    ",{}],["|",{"inverse":true}],["  4 using",{"fg":3,"bold":true}],[" ",{}],["namespace",{"fg":2,"bold":true}],[" std;                                                                                            ",{}],["|",{"inverse":true}],["  4 /root/",{"fg":3,"bold":true}],["            ",{}]],"3":[["   ",{}],["+",{"fg":2,"bold":true}],["FirstRun(void)  ",{}],["|",{"inverse":true}],["  5 ",{"fg":3,"bold":true}],["                                                                                                                ",{}],["|",{"inverse":true}],["  5 ",{"fg":3,"bold":true}],["▸ .asciinema/",{"fg":6,"bold":true}],["     ",{}]],"4":[["   ",{}],["+",{"fg":2,"bold":true}],["FirstRun2(void) ",{}],["|",{"inverse":true}],["  6 ",{"fg":3,"bold":true}],["struct",{"fg":2,"bold":true}],[" First                                                                                                    ",{}],["|",{"inverse":true}],["  6 ",{"fg":3,"bold":true}],["▸ .cache/",{"fg":6,"bold":true}],["         ",{}]],"5":[["                    ",{}],["|",{"inverse":true}],["  7 ",{"fg":3,"bold":true}],["{                                                                                                               ",{}],["|",{"inverse":true}],["  7 ",{"fg":3,"bold":true}],["▸ .config/",{"fg":6,"bold":true}],["        ",{}]],"6":[["▼",{"fg":3,"bold":true,"underline":true}],[" Last",{"fg":5,"bold":true,"underline":true}],[" : ",{"underline":true}],["struct",{"fg":2,"bold":true,"underline":true}],["     ",{"underline":true}],["|",{"inverse":true}],["  8 ",{"fg":3,"bold":true}],["    ",{}],["virtual",{"fg":2,"bold":true}],[" ",{}],["void",{"fg":2,"bold":true}],[" FirstRun(",{}],["void",{"fg":2,"bold":true}],[") = ",{}],["0",{"fg":5,"bold":true}],[";                                                                            ",{}],["|",{"inverse":true}],["  8 ",{"fg":3,"bold":true}],["▸ .dbus/",{"fg":6,"bold":true}],["          ",{}]],"7":[["    [functions]",{"fg":6,"bold":true}],["     ",{}],["|",{"inverse":true}],["  9 ",{"fg":3,"bold":true}],["    ",{}],["virtual",{"fg":2,"bold":true}],[" ",{}],["void",{"fg":2,"bold":true}],[" FirstRun2(",{}],["void",{"fg":2,"bold":true}],[") = ",{}],["0",{"fg":5,"bold":true}],[";                                                                           ",{}],["|",{"inverse":true}],["  9 ",{"fg":3,"bold":true}],["▸ .gnupg/",{"fg":6,"bold":true}],["         ",{}]],"8":[["   ",{}],["+",{"fg":2,"bold":true}],["FirstRun(void)  ",{}],["|",{"inverse":true}],[" 10 ",{"fg":3,"bold":true}],["};                                                                                                              ",{}],["|",{"inverse":true}],[" 10 ",{"fg":3,"bold":true}],["▸ .kde/",{"fg":6,"bold":true}],["           ",{}]],"9":[["   ",{}],["+",{"fg":2,"bold":true}],["FirstRun2(void) ",{}],["|",{"inverse":true}],[" 11 ",{"fg":3,"bold":true}],["                                                                                                                ",{}],["|",{"inverse":true}],[" 11 ",{"fg":3,"bold":true}],["▸ .local/",{"fg":6,"bold":true}],["         ",{}]],"10":[["   ",{}],["+",{"fg":2,"bold":true}],["~Last()         ",{}],["|",{"inverse":true}],[" 12 ",{"fg":3,"bold":true}],["struct",{"fg":2,"bold":true}],[" Second                                                                                                   ",{}],["|",{"inverse":true}],[" 12 ",{"fg":3,"bold":true}],["▸ .pki/",{"fg":6,"bold":true}],["           ",{}]],"11":[["   ",{}],["+",{"fg":2,"bold":true}],["SecondRun(void) ",{}],["|",{"inverse":true}],[" 13 ",{"fg":3,"bold":true}],["{                                                                                                               ",{}],["|",{"inverse":true}],[" 13 ",{"fg":3,"bold":true}],["▸ .ssh/",{"fg":6,"bold":true}],["           ",{}]],"12":[["   ",{}],["+",{"fg":2,"bold":true}],["SecondRun2(void)",{}],["|",{"inverse":true}],[" 14 ",{"fg":3,"bold":true}],["    ",{}],["virtual",{"fg":2,"bold":true}],[" ",{}],["void",{"fg":2,"bold":true}],[" SecondRun(",{}],["void",{"fg":2,"bold":true}],[") = ",{}],["0",{"fg":5,"bold":true}],[";                                                                           ",{}],["|",{"inverse":true}],[" 14 ",{"fg":3,"bold":true}],["▸ .vim/",{"fg":6,"bold":true}],["           ",{}]],"13":[["                    ",{}],["|",{"inverse":true}],[" 15 ",{"fg":3,"bold":true}],["    ",{}],["virtual",{"fg":2,"bold":true}],[" ",{}],["void",{"fg":2,"bold":true}],[" SecondRun2(",{}],["void",{"fg":2,"bold":true}],[") = ",{}],["0",{"fg":5,"bold":true}],[";                                                                          ",{}],["|",{"inverse":true}],[" 15 ",{"fg":3,"bold":true}],["▸ diary/",{"fg":6,"bold":true}],["          ",{}]],"14":[["▼",{"fg":3,"bold":true}],[" Second",{"fg":5,"bold":true}],[" : ",{}],["struct",{"fg":2,"bold":true}],["   ",{}],["|",{"inverse":true}],[" 16 ",{"fg":3,"bold":true}],["};                                                                                                              ",{}],["|",{"inverse":true}],[" 16 ",{"fg":3,"bold":true}],["▸ temp/",{"fg":6,"bold":true}],["           ",{}]],"15":[["    [prototypes]",{"fg":6,"bold":true}],["    ",{}],["|",{"inverse":true}],[" 17 ",{"fg":3,"bold":true}],["                                                                                                                ",{}],["|",{"inverse":true}],[" 17 ",{"fg":3,"bold":true}],["  .bash_history   ",{}]],"16":[["   ",{}],["+",{"fg":2,"bold":true}],["SecondRun(void) ",{}],["|",{"inverse":true}],[" 18 ",{"fg":3,"bold":true}],["struct",{"fg":2,"bold":true}],[" Last: ",{}],["public",{"fg":3,"bold":true}],[" First,                                                                                      ",{}],["|",{"inverse":true}],[" 18 ",{"fg":3,"bold":true}],["  .bash_logout    ",{"underline":true}]],"17":[["   ",{}],["+",{"fg":2,"bold":true}],["SecondRun2(void)",{}],["|",{"inverse":true}],[" 19 ",{"fg":3,"bold":true}],["    ",{}],["public",{"fg":3,"bold":true}],[" Second                                                                                               ",{}],["|",{"inverse":true}],[" 19 ",{"fg":3,"bold":true}],["  .bash_profile   ",{}]],"18":[["                    ",{}],["|",{"inverse":true}],[" 20 ",{"fg":3,"bold":true}],["{                                                                                                               ",{}],["|",{"inverse":true}],[" 20 ",{"fg":3,"bold":true}],["  .bashrc         ",{}]],"19":[["▼",{"fg":3,"bold":true}],[" ",{}],["functions",{"fg":6,"bold":true}],["         ",{}],["|",{"inverse":true}],[" 21 ",{"fg":3,"bold":true}],["    ",{}],["// 基类First的虚方法",{"fg":6,"bold":true}],["                                                                                        ",{}],["|",{"inverse":true}],[" 21 ",{"fg":3,"bold":true}],["  .cshrc          ",{}]],"20":[["    main(int argc, c",{}],["|",{"inverse":true}],[" 22 ",{"fg":3,"bold":true}],["    ",{}],["virtual",{"fg":2,"bold":true}],[" ",{}],["void",{"fg":2,"bold":true}],[" FirstRun(",{}],["void",{"fg":2,"bold":true}],[")                                                                                 ",{}],["|",{"inverse":true}],[" 22 ",{"fg":3,"bold":true}],["  .dmrc           ",{}]],"21":[["~                   ",{"fg":4,"bold":true}],["|",{"inverse":true}],[" 23 ",{"fg":3,"bold":true}],["    {                                                                                                           ",{}],["|",{"inverse":true}],[" 23 ",{"fg":3,"bold":true}],["  .esd_auth       ",{}]],"22":[["~                   ",{"fg":4,"bold":true}],["|",{"inverse":true}],[" 24 ",{"fg":3,"bold":true}],["    ",{}],["|",{"fg":2,"bold":true}],["   cout << ",{}],["\"First\"",{"fg":5,"bold":true}],[" << endl;                                                                                ",{}],["|",{"inverse":true}],[" 24 ",{"fg":3,"bold":true}],["  .gtkrc-2.0      ",{}]],"23":[["~                   ",{"fg":4,"bold":true}],["|",{"inverse":true}],[" 25 ",{"fg":3,"bold":true}],["    }                                                                                                           ",{}],["|",{"inverse":true}],[" 25 ",{"fg":3,"bold":true}],["  .gtkrc-2.0-kde4 ",{}]],"24":[["~                   ",{"fg":4,"bold":true}],["|",{"inverse":true}],[" 26 ",{"fg":3,"bold":true}],["                                                                                                                ",{}],["|",{"inverse":true}],[" 26 ",{"fg":3,"bold":true}],["  .lesshst        ",{}]],"25":[["~                   ",{"fg":4,"bold":true}],["|",{"inverse":true}],[" 27 ",{"fg":3,"bold":true}],["    ",{}],["virtual",{"fg":2,"bold":true}],[" ",{}],["void",{"fg":2,"bold":true}],[" FirstRun2(",{}],["void",{"fg":2,"bold":true}],[")                                                                                ",{}],["|",{"inverse":true}],[" 27 ",{"fg":3,"bold":true}],["  .tcshrc         ",{}]],"26":[["~                   ",{"fg":4,"bold":true}],["|",{"inverse":true}],[" 28 ",{"fg":3,"bold":true}],["    {                                                                                                           ",{}],["|",{"inverse":true}],[" 28 ",{"fg":3,"bold":true}],["  .viminfo        ",{}]],"27":[["~                   ",{"fg":4,"bold":true}],["|",{"inverse":true}],[" 29 ",{"fg":3,"bold":true}],["    ",{}],["|",{"fg":2,"bold":true}],["   cout << ",{}],["\"First2\"",{"fg":5,"bold":true}],[" << endl;                                                                               ",{}],["|",{"inverse":true}],[" 29 ",{"fg":3,"bold":true}],["  .vimrc          ",{}]],"28":[["~                   ",{"fg":4,"bold":true}],["|",{"inverse":true}],[" 30 ",{"fg":3,"bold":true}],["    }                                                                                                           ",{}],["|",{"inverse":true}],[" 30 ",{"fg":3,"bold":true}],["  .xsession-errors",{}]],"29":[["~                   ",{"fg":4,"bold":true}],["|",{"inverse":true}],[" 31 ",{"fg":3,"bold":true}],["                                                                                                                ",{}],["|",{"inverse":true}],[" 31 ",{"fg":3,"bold":true}],["  anaconda-ks.cfg ",{}]],"30":[["~                   ",{"fg":4,"bold":true}],["|",{"inverse":true}],[" 32 ",{"fg":3,"bold":true}],["    ",{}],["// 基类Second虚方法",{"fg":6,"bold":true}],["                                                                                         ",{}],["|",{"inverse":true}],[" 32 ",{"fg":3,"bold":true}],["  initial-setup-ks",{}]],"31":[["~                   ",{"fg":4,"bold":true}],["|",{"inverse":true}],[" 33 ",{"fg":3,"bold":true}],["    ",{}],["virtual",{"fg":2,"bold":true}],[" ",{}],["void",{"fg":2,"bold":true}],[" SecondRun(",{}],["void",{"fg":2,"bold":true}],[")                                                                                ",{}],["|",{"inverse":true}],[" 33 ",{"fg":3,"bold":true}],["  test.c          ",{}]],"32":[["~                   ",{"fg":4,"bold":true}],["|",{"inverse":true}],[" 34 ",{"fg":3,"bold":true}],["    {                                                                                                           ",{}],["|",{"inverse":true}],[" 34 ",{"fg":3,"bold":true}],["  test.cpp        ",{}]],"33":[["~                   ",{"fg":4,"bold":true}],["|",{"inverse":true}],[" 35 ",{"fg":3,"bold":true}],["    ",{}],["|",{"fg":2,"bold":true}],["   cout <<",{}],["\"Second\"",{"fg":5,"bold":true}],[" << endl;                                                                                ",{}],["|",{"inverse":true}],[" 35 ",{"fg":3,"bold":true}],["  .test.cpp.swp   ",{}]],"34":[["~                   ",{"fg":4,"bold":true}],["|",{"inverse":true}],[" 36 ",{"fg":3,"bold":true}],["    }                                                                                                           ",{}],["|",{"inverse":true}],["~                     ",{"fg":4,"bold":true}]],"35":[["~                   ",{"fg":4,"bold":true}],["|",{"inverse":true}],[" 37 ",{"fg":3,"bold":true}],["                                                                                                                ",{}],["|",{"inverse":true}],["~                     ",{"fg":4,"bold":true}]],"36":[["~                   ",{"fg":4,"bold":true}],["|",{"inverse":true}],[" 38 ",{"fg":3,"bold":true}],["    ",{}],["virtual",{"fg":2,"bold":true}],[" ",{}],["void",{"fg":2,"bold":true}],[" SecondRun2(",{}],["void",{"fg":2,"bold":true}],[")                                                                               ",{}],["|",{"inverse":true}],["~                     ",{"fg":4,"bold":true}]],"37":[["~                   ",{"fg":4,"bold":true}],["|",{"inverse":true}],[" 39 ",{"fg":3,"bold":true}],["    {                                                                                                           ",{}],["|",{"inverse":true}],["~                     ",{"fg":4,"bold":true}]],"38":[["~                   ",{"fg":4,"bold":true}],["|",{"inverse":true}],[" 40 ",{"fg":3,"bold":true}],["    ",{}],["|",{"fg":2,"bold":true}],["   cout <<",{}],["\"Second2\"",{"fg":5,"bold":true}],[" << endl;                                                                               ",{}],["|",{"inverse":true}],["~                     ",{"fg":4,"bold":true}]],"39":[["~                   ",{"fg":4,"bold":true}],["|",{"inverse":true}],[" 41 ",{"fg":3,"bold":true}],["    }                                                                                                           ",{}],["|",{"inverse":true}],["~                     ",{"fg":4,"bold":true}]],"40":[["~                   ",{"fg":4,"bold":true}],["|",{"inverse":true}],[" 42 ",{"fg":3,"bold":true}],["                                                                                                                ",{}],["|",{"inverse":true}],["~                     ",{"fg":4,"bold":true}]],"41":[["~                   ",{"fg":4,"bold":true}],["|",{"inverse":true}],[" 43 ",{"fg":3,"bold":true}],["    ",{}],["virtual",{"fg":2,"bold":true}],[" ~Last()                                                                                             ",{}],["|",{"inverse":true}],["~                     ",{"fg":4,"bold":true}]],"42":[["~                   ",{"fg":4,"bold":true}],["|",{"inverse":true}],[" 44 ",{"fg":3,"bold":true}],["    {                                                                                                           ",{}],["|",{"inverse":true}],["~                     ",{"fg":4,"bold":true}]],"43":[["~                   ",{"fg":4,"bold":true}],["|",{"inverse":true}],[" 45 ",{"fg":3,"bold":true}],["                                                                                                                ",{}],["|",{"inverse":true}],["~                     ",{"fg":4,"bold":true}]],"44":[["~                   ",{"fg":4,"bold":true}],["|",{"inverse":true}],[" 46 ",{"fg":3,"bold":true}],["    }                                                                                                           ",{}],["|",{"inverse":true}],["~                     ",{"fg":4,"bold":true}]],"45":[["[Name] test.cpp      ",{"inverse":true}],[" NORMAL ",{"bold":true}],[" ",{}],["test.cpp ",{"bold":true}],["                                                             unix │ utf-8 │ cpp │   1% ",{}],[" LN   1",{"bold":true}],[":1  ",{}],[" ",{"bold":true,"inverse":true}],[" ~/NERD_tree_1 ",{"bold":true}],["       ",{}]],"46":[["[root@localhost ~]# clear                                                                                                                                       ",{}]],"47":[["                                                                                                                                                                ",{}]]},"cursor":{"x":0}}],[0.012164,{"lines":{"0":[["[root@localhost ~]#                                                                                                                                             ",{}]],"1":[["                                                                                                                                                                ",{}]],"2":[["                                                                                                                                                                ",{}]],"3":[["                                                                                                                                                                ",{}]],"4":[["                                                                                                                                                                ",{}]],"5":[["                                                                                                                                                                ",{}]],"6":[["                                                                                                                                                                ",{}]],"7":[["                                                                                                                                                                ",{}]],"8":[["                                                                                                                                                                ",{}]],"9":[["                                                                                                                                                                ",{}]],"10":[["                                                                                                                                                                ",{}]],"11":[["                                                                                                                                                                ",{}]],"12":[["                                                                                                                                                                ",{}]],"13":[["                                                                                                                                                                ",{}]],"14":[["                                                                                                                                                                ",{}]],"15":[["                                                                                                                                                                ",{}]],"16":[["                                                                                                                                                                ",{}]],"17":[["                                                                                                                                                                ",{}]],"18":[["                                                                                                                                                                ",{}]],"19":[["                                                                                                                                                                ",{}]],"20":[["                                                                                                                                                                ",{}]],"21":[["                                                                                                                                                                ",{}]],"22":[["                                                                                                                                                                ",{}]],"23":[["                                                                                                                                                                ",{}]],"24":[["                                                                                                                                                                ",{}]],"25":[["                                                                                                                                                                ",{}]],"26":[["                                                                                                                                                                ",{}]],"27":[["                                                                                                                                                                ",{}]],"28":[["                                                                                                                                                                ",{}]],"29":[["                                                                                                                                                                ",{}]],"30":[["                                                                                                                                                                ",{}]],"31":[["                                                                                                                                                                ",{}]],"32":[["                                                                                                                                                                ",{}]],"33":[["                                                                                                                                                                ",{}]],"34":[["                                                                                                                                                                ",{}]],"35":[["                                                                                                                                                                ",{}]],"36":[["                                                                                                                                                                ",{}]],"37":[["                                                                                                                                                                ",{}]],"38":[["                                                                                                                                                                ",{}]],"39":[["                                                                                                                                                                ",{}]],"40":[["                                                                                                                                                                ",{}]],"41":[["                                                                                                                                                                ",{}]],"42":[["                                                                                                                                                                ",{}]],"43":[["                                                                                                                                                                ",{}]],"44":[["                                                                                                                                                                ",{}]],"45":[["                                                                                                                                                                ",{}]],"46":[["                                                                                                                                                                ",{}]]},"cursor":{"x":20,"y":0}}],[0.294853,{"lines":{"0":[["[root@localhost ~]# l                                                                                                                                           ",{}]]},"cursor":{"x":21}}],[0.146224,{"lines":{"0":[["[root@localhost ~]# ls                                                                                                                                          ",{}]]},"cursor":{"x":22}}],[0.063899,{"cursor":{"x":0,"y":1}}],[0.01021,{"lines":{"1":[["anaconda-ks.cfg  ",{}],["diary",{"fg":4,"bold":true}],["  initial-setup-ks.cfg  ",{}],["temp",{"fg":4,"bold":true}],["  test.c  test.cpp                                                                                            ",{}]],"2":[["[root@localhost ~]#                                                                                                                                             ",{}]]},"cursor":{"x":20,"y":2}}],[1.001919,{"lines":{"2":[["[root@localhost ~]# v                                                                                                                                           ",{}]]},"cursor":{"x":21}}],[0.119225,{"lines":{"2":[["[root@localhost ~]# vi                                                                                                                                          ",{}]]},"cursor":{"x":22}}],[0.060638,{"lines":{"2":[["[root@localhost ~]# vim                                                                                                                                         ",{}]]},"cursor":{"x":23}}],[0.092236,{"cursor":{"x":24}}],[0.093528,{"lines":{"2":[["[root@localhost ~]# vim t                                                                                                                                       ",{}]]},"cursor":{"x":25}}],[0.102915,{"lines":{"2":[["[root@localhost ~]# vim te                                                                                                                                      ",{}]]},"cursor":{"x":26}}],[0.005068,{"lines":{"2":[["[root@localhost ~]# vim tes                                                                                                                                     ",{}]]},"cursor":{"x":27}}],[0.125461,{"lines":{"2":[["[root@localhost ~]# vim test                                                                                                                                    ",{}]]},"cursor":{"x":28}}],[0.329178,{"lines":{"2":[["[root@localhost ~]# vim test.                                                                                                                                   ",{}]]},"cursor":{"x":29}}],[0.069382,{"lines":{"2":[["[root@localhost ~]# vim test.c                                                                                                                                  ",{}]]},"cursor":{"x":30}}],[0.11211,{"cursor":{"x":0,"y":3}}],[0.203342,{"lines":{"0":[["  oot@localhost ~]# ls                                                                                                                                          ",{}]],"1":[["▽naconda-ks.cfg  ",{}],["diary",{"fg":4,"bold":true}],["  initial-setup-ks.cfg  ",{}],["temp",{"fg":4,"bold":true}],["  test.c  test.cpp                                                                                            ",{}]]},"cursor":{"y":0}}],[0.007454000000000001,{"lines":{"0":[["                                                                                                                                                                ",{}]],"1":[["                                                                                                                                                                ",{}]],"2":[["                                                                                                                                                                ",{}]],"47":[["\"test.c\" 11L, 134C                                                                                                                                              ",{}]]},"cursor":{"x":18,"y":47,"visible":false}}],[0.348258,{"lines":{"0":[["  1 ",{"fg":3,"bold":true}],["#include ",{"fg":4,"bold":true}],["<stdio.h>",{"fg":5,"bold":true}],["                                                                                                                                          ",{}]],"1":[["  2 ",{"fg":3,"bold":true}],["                                                                                                                                                            ",{}]],"2":[["  3 ",{"fg":3,"bold":true}],["int",{"fg":2,"bold":true}],[" main(",{}],["int",{"fg":2,"bold":true}],[" argc, ",{}],["const",{"fg":2,"bold":true}],[" ",{}],["char",{"fg":2,"bold":true}],[" *argv[])                                                                                                                      ",{}]],"3":[["  4 ",{"fg":3,"bold":true}],["{                                                                                                                                                           ",{}]],"4":[["  5 ",{"fg":3,"bold":true}],["    printf(",{}],["\"hello world\"",{"fg":5,"bold":true}],[");                                                                                                                                  ",{}]],"5":[["  6 ",{"fg":3,"bold":true}],["    printf(",{"underline":true}],["\"hello world\"",{"fg":5,"bold":true,"underline":true}],[");                                                                                                                                  ",{"underline":true}]],"6":[["  7 ",{"fg":3,"bold":true}],["                                                                                                                                                            ",{}]],"7":[["  8 ",{"fg":3,"bold":true}],["                                                                                                                                                            ",{}]],"8":[["  9 ",{"fg":3,"bold":true}],["    ",{}],["return",{"fg":3,"bold":true}],[" ",{}],["0",{"fg":5,"bold":true}],[";                                                                                                                                               ",{}]],"9":[[" 10 ",{"fg":3,"bold":true}],["}                                                                                                                                                           ",{}]],"10":[[" 11 ",{"fg":3,"bold":true}],["                                                                                                                                                            ",{}]],"11":[["~                                                                                                                                                               ",{"fg":4,"bold":true}]],"12":[["~                                                                                                                                                               ",{"fg":4,"bold":true}]],"13":[["~                                                                                          ",{"fg":4,"bold":true}],["                                                                     ",{}]]},"cursor":{"x":91,"y":13}}],[0.009001,{"lines":{"13":[["~                                                                                                                                                               ",{"fg":4,"bold":true}]],"14":[["~                                                                                                                                                               ",{"fg":4,"bold":true}]],"15":[["~                                                                                                                                                               ",{"fg":4,"bold":true}]],"16":[["~                                                                                                                                                               ",{"fg":4,"bold":true}]],"17":[["~                                                                                                                                                               ",{"fg":4,"bold":true}]],"18":[["~                                                                                                                                                               ",{"fg":4,"bold":true}]],"19":[["~                                                                                                                                                               ",{"fg":4,"bold":true}]],"20":[["~                                                                                                                                                               ",{"fg":4,"bold":true}]],"21":[["~                                                                                                                                                               ",{"fg":4,"bold":true}]],"22":[["~                                                                                                                                                               ",{"fg":4,"bold":true}]],"23":[["~                                                                                                                                                               ",{"fg":4,"bold":true}]],"24":[["~                                                                                                                                                               ",{"fg":4,"bold":true}]],"25":[["~                                                                                                                                                               ",{"fg":4,"bold":true}]],"26":[["~                                                                                                                                                               ",{"fg":4,"bold":true}]],"27":[["~                                                                                                                                                               ",{"fg":4,"bold":true}]],"28":[["~                                                                                                                                                               ",{"fg":4,"bold":true}]],"29":[["~                                                                                                                                                               ",{"fg":4,"bold":true}]],"30":[["~                                                                                                                                                               ",{"fg":4,"bold":true}]],"31":[["~                                                                                                                                                               ",{"fg":4,"bold":true}]],"32":[["~                                                                                                                                                               ",{"fg":4,"bold":true}]],"33":[["~                                                                                                                                                               ",{"fg":4,"bold":true}]],"34":[["~                                                                                                                                                               ",{"fg":4,"bold":true}]],"35":[["~                                                                                                                                                               ",{"fg":4,"bold":true}]],"36":[["~                                                                                                                                                               ",{"fg":4,"bold":true}]],"37":[["~                                                                                                                                                               ",{"fg":4,"bold":true}]],"38":[["~                                                                                                                                                               ",{"fg":4,"bold":true}]],"39":[["~                                                                                                                                                               ",{"fg":4,"bold":true}]],"40":[["~                                                                                                                                                               ",{"fg":4,"bold":true}]],"41":[["~                                                                                                                                                               ",{"fg":4,"bold":true}]],"42":[["~                                                                                                                                                               ",{"fg":4,"bold":true}]],"43":[["~                                                                                                                                                               ",{"fg":4,"bold":true}]],"44":[["~                                                                                                                                                               ",{"fg":4,"bold":true}]],"45":[["~                                                                                                                                                               ",{"fg":4,"bold":true}]]},"cursor":{"x":160,"y":45}}],[0.132927,{"lines":{"46":[[" NORMAL ",{"bold":true}],[" ",{}],["test.c ",{"bold":true}],[" main()                                                                                                      unix │ utf-8 │ c │  54% ",{}],[" LN   6",{"bold":true}],[":6  ",{}]]},"cursor":{"x":9,"y":5,"visible":true}}],[2.051185,{"lines":{"0":[["  ",{"fg":6,"bg":0,"bold":true}],["  1 ",{"fg":3,"bold":true}],["#include ",{"fg":4,"bold":true}],["<stdio.h>",{"fg":5,"bold":true}],["                                                                                                                                        ",{}]],"1":[["  ",{"fg":6,"bg":0,"bold":true}],["  2 ",{"fg":3,"bold":true}],["                                                                                                                                                          ",{}]],"2":[[">>",{"fg":7,"bg":1,"bold":true}],["  3 ",{"fg":3,"bold":true}],["int",{"fg":2,"bold":true}],[" main(",{}],["int",{"fg":2,"bold":true}],[" argc, ",{}],["const",{"fg":2,"bold":true}],[" ",{}],["char",{"fg":2,"bold":true}],[" *argv[])                                                                                                                    ",{}]],"3":[["  ",{"fg":6,"bg":0,"bold":true}],["  4 ",{"fg":3,"bold":true}],["{                                                                                                                                                         ",{}]],"4":[["  ",{"fg":6,"bg":0,"bold":true}],["  5 ",{"fg":3,"bold":true}],["    printf(",{}],["\"hello world\"",{"fg":5,"bold":true}],[");                                                                                                                                ",{}]],"5":[["  ",{"fg":6,"bg":0,"bold":true}],["  6 ",{"fg":3,"bold":true}],["    printf(",{"underline":true}],["\"hello world\"",{"fg":5,"bold":true,"underline":true}],[");                                                                                                                                ",{"underline":true}]],"6":[["  ",{"fg":6,"bg":0,"bold":true}],["  7 ",{"fg":3,"bold":true}],["                                                                                                                                                          ",{}]],"7":[["  ",{"fg":6,"bg":0,"bold":true}],["  8 ",{"fg":3,"bold":true}],["                                                                                                                                                          ",{}]],"8":[["  ",{"fg":6,"bg":0,"bold":true}],["  9 ",{"fg":3,"bold":true}],["    ",{}],["return",{"fg":3,"bold":true}],[" ",{}],["0",{"fg":5,"bold":true}],[";                                                                                                                                             ",{}]],"9":[["  ",{"fg":6,"bg":0,"bold":true}],[" 10 ",{"fg":3,"bold":true}],["}                                                                                                                                                         ",{}]],"10":[["  ",{"fg":6,"bg":0,"bold":true}],[" 11 ",{"fg":3,"bold":true}],["                                                                                                                                                          ",{}]],"11":[["  ",{"fg":6,"bg":0,"bold":true}],["~                                                                                                                                                             ",{"fg":4,"bold":true}]],"12":[["  ",{"fg":6,"bg":0,"bold":true}],["~                                                                                                                                                             ",{"fg":4,"bold":true}]],"13":[["  ",{"fg":6,"bg":0,"bold":true}],["~                                                                                                                                                             ",{"fg":4,"bold":true}]],"14":[["  ",{"fg":6,"bg":0,"bold":true}],["~                                                                                                                                                             ",{"fg":4,"bold":true}]],"15":[["  ",{"fg":6,"bg":0,"bold":true}],["~                                                                                                                                                             ",{"fg":4,"bold":true}]],"16":[["  ",{"fg":6,"bg":0,"bold":true}],["~                                                                                                                                                             ",{"fg":4,"bold":true}]],"17":[["  ",{"fg":6,"bg":0,"bold":true}],["~                                                                                                                                                             ",{"fg":4,"bold":true}]],"18":[["  ",{"fg":6,"bg":0,"bold":true}],["~                                                                                                                                                             ",{"fg":4,"bold":true}]],"19":[["  ",{"fg":6,"bg":0,"bold":true}],["~                                                                                                                                                             ",{"fg":4,"bold":true}]],"20":[["  ",{"fg":6,"bg":0,"bold":true}],["~                                                                                                                                                             ",{"fg":4,"bold":true}]],"21":[["  ",{"fg":6,"bg":0,"bold":true}],["~                                                                                                                                                             ",{"fg":4,"bold":true}]],"22":[["  ",{"fg":6,"bg":0,"bold":true}],["~                                                                                                                                                             ",{"fg":4,"bold":true}]],"23":[["  ",{"fg":6,"bg":0,"bold":true}],["~                                                                                                                                                             ",{"fg":4,"bold":true}]],"24":[["  ",{"fg":6,"bg":0,"bold":true}],["~                                                                                                                                                             ",{"fg":4,"bold":true}]],"25":[["  ",{"fg":6,"bg":0,"bold":true}],["~                                                                                                                                                             ",{"fg":4,"bold":true}]],"26":[["  ",{"fg":6,"bg":0,"bold":true}],["                                                                                                                                                              ",{"fg":4,"bold":true}]],"27":[["  ",{"fg":6,"bg":0,"bold":true}],["                                                                                                                                                              ",{"fg":4,"bold":true}]],"28":[["  ",{"fg":6,"bg":0,"bold":true}],["                                                                                                                                                              ",{"fg":4,"bold":true}]],"29":[["  ",{"fg":6,"bg":0,"bold":true}],["                                                                                                                                                              ",{"fg":4,"bold":true}]],"30":[["  ",{"fg":6,"bg":0,"bold":true}],["                                                                                                                                                              ",{"fg":4,"bold":true}]],"31":[["  ",{"fg":6,"bg":0,"bold":true}],["                                                                                                                                                              ",{"fg":4,"bold":true}]],"32":[["  ",{"fg":6,"bg":0,"bold":true}],["                                                                                                                                                              ",{"fg":4,"bold":true}]],"33":[["  ",{"fg":6,"bg":0,"bold":true}],["                                                                                                                                                              ",{"fg":4,"bold":true}]],"34":[["  ",{"fg":6,"bg":0,"bold":true}],["                                                                                                                                                              ",{"fg":4,"bold":true}]],"35":[["  ",{"fg":6,"bg":0,"bold":true}],["                                                                                                                                                              ",{"fg":4,"bold":true}]],"36":[["  ",{"fg":6,"bg":0,"bold":true}],["                                                                                                                                                              ",{"fg":4,"bold":true}]],"37":[["  ",{"fg":6,"bg":0,"bold":true}],["                                                                                                                                                              ",{"fg":4,"bold":true}]],"38":[["  ",{"fg":6,"bg":0,"bold":true}],["                                                                                                                                                              ",{"fg":4,"bold":true}]],"39":[["  ",{"fg":6,"bg":0,"bold":true}],["                                                                                                                                                              ",{"fg":4,"bold":true}]],"40":[["  ",{"fg":6,"bg":0,"bold":true}],["                                                                                                                                                              ",{"fg":4,"bold":true}]],"41":[["  ",{"fg":6,"bg":0,"bold":true}],["                                                                                                                                                              ",{"fg":4,"bold":true}]],"42":[["  ",{"fg":6,"bg":0,"bold":true}],["                                                                                                                                                              ",{"fg":4,"bold":true}]],"43":[["  ",{"fg":6,"bg":0,"bold":true}],["                                                                                                                                                              ",{"fg":4,"bold":true}]],"44":[["  ",{"fg":6,"bg":0,"bold":true}],["                                                                                                                                                              ",{"fg":4,"bold":true}]],"45":[["  ",{"fg":6,"bg":0,"bold":true}],["                                                                                                                                                              ",{"fg":4,"bold":true}]]},"cursor":{"x":2,"y":26,"visible":false}}],[9.1e-05,{"lines":{"2":[[">>",{"fg":7,"bg":1,"bold":true}],["  3 ",{"fg":3,"bold":true}],["int",{"fg":2,"bold":true}],[" main(",{}],["int",{"fg":2,"bold":true}],[" ",{}],["argc",{"bg":1}],[", ",{}],["const",{"fg":2,"bold":true}],[" ",{}],["char",{"fg":2,"bold":true}],[" *",{}],["argv",{"bg":1}],["[])                                                                                                                    ",{}]],"26":[["  ",{"fg":6,"bg":0,"bold":true}],["~                                                                                                                                                             ",{"fg":4,"bold":true}]],"27":[["  ",{"fg":6,"bg":0,"bold":true}],["~                                                                                                                                                             ",{"fg":4,"bold":true}]],"28":[["  ",{"fg":6,"bg":0,"bold":true}],["~                                                                                                                                                             ",{"fg":4,"bold":true}]],"29":[["  ",{"fg":6,"bg":0,"bold":true}],["~                                                                                                                                                             ",{"fg":4,"bold":true}]],"30":[["  ",{"fg":6,"bg":0,"bold":true}],["~                                                                                                                                                             ",{"fg":4,"bold":true}]],"31":[["  ",{"fg":6,"bg":0,"bold":true}],["~                                                                                                                                                             ",{"fg":4,"bold":true}]],"32":[["  ",{"fg":6,"bg":0,"bold":true}],["~                                                                                                                                                             ",{"fg":4,"bold":true}]],"33":[["  ",{"fg":6,"bg":0,"bold":true}],["~                                                                                                                                                             ",{"fg":4,"bold":true}]],"34":[["  ",{"fg":6,"bg":0,"bold":true}],["~                                                                                                                                                             ",{"fg":4,"bold":true}]],"35":[["  ",{"fg":6,"bg":0,"bold":true}],["~                                                                                                                                                             ",{"fg":4,"bold":true}]],"36":[["  ",{"fg":6,"bg":0,"bold":true}],["~                                                                                                                                                             ",{"fg":4,"bold":true}]],"37":[["  ",{"fg":6,"bg":0,"bold":true}],["~                                                                                                                                                             ",{"fg":4,"bold":true}]],"38":[["  ",{"fg":6,"bg":0,"bold":true}],["~                                                                                                                                                             ",{"fg":4,"bold":true}]],"39":[["  ",{"fg":6,"bg":0,"bold":true}],["~                                                                                                                                                             ",{"fg":4,"bold":true}]],"40":[["  ",{"fg":6,"bg":0,"bold":true}],["~                                                                                                                                                             ",{"fg":4,"bold":true}]],"41":[["  ",{"fg":6,"bg":0,"bold":true}],["~                                                                                                                                                             ",{"fg":4,"bold":true}]],"42":[["  ",{"fg":6,"bg":0,"bold":true}],["~                                                                                                                                                             ",{"fg":4,"bold":true}]],"43":[["  ",{"fg":6,"bg":0,"bold":true}],["~                                                                                                                                                             ",{"fg":4,"bold":true}]],"44":[["  ",{"fg":6,"bg":0,"bold":true}],["~                                                                                                                                                             ",{"fg":4,"bold":true}]],"45":[["  ",{"fg":6,"bg":0,"bold":true}],["~                                                                                                                                                             ",{"fg":4,"bold":true}]]},"cursor":{"x":11,"y":5,"visible":true}}],[1.078746,{"lines":{"47":[["\"test.c\" 11L, 134C                                                                                                                                   k          ",{}]]},"cursor":{"visible":false}}],[0.002446,{"lines":{"4":[["  ",{"fg":6,"bg":0,"bold":true}],["  5 ",{"fg":3,"bold":true}],["    printf(",{"underline":true}],["\"hello world\"",{"fg":5,"bold":true,"underline":true}],[");                                                                                                                                ",{"underline":true}]],"5":[["  ",{"fg":6,"bg":0,"bold":true}],["  6 ",{"fg":3,"bold":true}],["    printf(",{}],["\"hello world\"",{"fg":5,"bold":true}],[");                                                                                                                                ",{}]],"46":[[" NORMAL ",{"bold":true}],[" ",{}],["test.c ",{"bold":true}],[" main()                                                                                                      unix │ utf-8 │ c │  45% ",{}],[" LN   5",{"bold":true}],[":6  ",{}]],"47":[["\"test.c\" 11L, 134C                                                                                                                                              ",{}]]},"cursor":{"y":4,"visible":true}}],[0.210557,{"lines":{"47":[["\"test.c\" 11L, 134C                                                                                                                                   k          ",{}]]},"cursor":{"visible":false}}],[0.003684,{"lines":{"3":[["  ",{"fg":6,"bg":0,"bold":true}],["  4 ",{"fg":3,"bold":true}],["{",{"bg":6}],["                                                                                                                                                         ",{"underline":true}]],"4":[["  ",{"fg":6,"bg":0,"bold":true}],["  5 ",{"fg":3,"bold":true}],["    printf(",{}],["\"hello world\"",{"fg":5,"bold":true}],[");                                                                                                                                ",{}]],"9":[["  ",{"fg":6,"bg":0,"bold":true}],[" 10 ",{"fg":3,"bold":true}],["}",{"bg":6}],["                                                                                                                                                         ",{}]],"46":[[" NORMAL ",{"bold":true}],[" ",{}],["test.c ",{"bold":true}],[" main()                                                                                                      unix │ utf-8 │ c │  36% ",{}],[" LN   4",{"bold":true}],[":1  ",{}]],"47":[["\"test.c\" 11L, 134C                                                                                                                                              ",{}]]},"cursor":{"x":6,"y":3,"visible":true}}],[0.160287,{"lines":{"47":[["unused parameter 'argc'                                                                                                                                         ",{}]]},"cursor":{"x":23,"y":47,"visible":false}}],[0.003478,{"lines":{"2":[[">>",{"fg":7,"bg":1,"bold":true}],["  3 ",{"fg":3,"bold":true}],["int",{"fg":2,"bold":true,"underline":true}],[" main(",{"underline":true}],["int",{"fg":2,"bold":true,"underline":true}],[" ",{"underline":true}],["argc",{"bg":1}],[", ",{"underline":true}],["const",{"fg":2,"bold":true,"underline":true}],[" ",{"underline":true}],["char",{"fg":2,"bold":true,"underline":true}],[" *",{"underline":true}],["argv",{"bg":1}],["[])                                                                                                                    ",{"underline":true}]],"3":[["  ",{"fg":6,"bg":0,"bold":true}],["  4 ",{"fg":3,"bold":true}],["{                                                                                                                                                         ",{}]],"9":[["  ",{"fg":6,"bg":0,"bold":true}],[" 10 ",{"fg":3,"bold":true}],["}                                                                                                                                                         ",{}]],"46":[[" NORMAL ",{"bold":true}],[" ",{}],["test.c ",{"bold":true}],[" main()                                                                                                      unix │ utf-8 │ c │  27% ",{}],[" LN   3",{"bold":true}],[":6  ",{}]]},"cursor":{"x":11,"y":2,"visible":true}}],[0.172786,{"lines":{"47":[["                                                                                                                                                                ",{}]]},"cursor":{"x":0,"y":47,"visible":false}}],[0.004301,{"lines":{"1":[["  ",{"fg":6,"bg":0,"bold":true}],["  2 ",{"fg":3,"bold":true}],["                                                                                                                                                          ",{"underline":true}]],"2":[[">>",{"fg":7,"bg":1,"bold":true}],["  3 ",{"fg":3,"bold":true}],["int",{"fg":2,"bold":true}],[" main(",{}],["int",{"fg":2,"bold":true}],[" ",{}],["argc",{"bg":1}],[", ",{}],["const",{"fg":2,"bold":true}],[" ",{}],["char",{"fg":2,"bold":true}],[" *",{}],["argv",{"bg":1}],["[])                                                                                                                    ",{}]],"46":[[" NORMAL ",{"bold":true}],[" ",{}],["test.c ",{"bold":true}],["                                                                                                             unix │ utf-8 │ c │  18% ",{}],[" LN   2",{"bold":true}],[":1  ",{}]]},"cursor":{"x":6,"y":1,"visible":true}}],[0.479659,{"lines":{"47":[["unused parameter 'argc'                                                                                                                                         ",{}]]},"cursor":{"x":23,"y":47,"visible":false}}],[0.007118,{"lines":{"1":[["  ",{"fg":6,"bg":0,"bold":true}],["  2 ",{"fg":3,"bold":true}],["                                                                                                                                                          ",{}]],"2":[[">>",{"fg":7,"bg":1,"bold":true}],["  3 ",{"fg":3,"bold":true}],["int",{"fg":2,"bold":true,"underline":true}],[" main(",{"underline":true}],["int",{"fg":2,"bold":true,"underline":true}],[" ",{"underline":true}],["argc",{"bg":1}],[", ",{"underline":true}],["const",{"fg":2,"bold":true,"underline":true}],[" ",{"underline":true}],["char",{"fg":2,"bold":true,"underline":true}],[" *",{"underline":true}],["argv",{"bg":1}],["[])                                                                                                                    ",{"underline":true}]],"46":[[" NORMAL ",{"bold":true}],[" ",{}],["test.c ",{"bold":true}],[" main()                                                                                                      unix │ utf-8 │ c │  27% ",{}],[" LN   3",{"bold":true}],[":6  ",{}]]},"cursor":{"x":11,"y":2,"visible":true}}],[2.008453,{}],[13.540564,{"lines":{"47":[[":                                                                                                                                                               ",{}]]},"cursor":{"x":1,"y":47}}],[0.197017,{"lines":{"47":[[":q                                                                                                                                                              ",{}]]},"cursor":{"x":2}}],[0.243776,{"cursor":{"x":0}}],[0.023632,{"lines":{"0":[["  1 ",{"fg":3,"bold":true}],["#include ",{"fg":4,"bold":true}],["<stdio.h>",{"fg":5,"bold":true}],["                                                                                                                                          ",{}]],"1":[["  2 ",{"fg":3,"bold":true}],["                                                                                                                                                            ",{}]],"2":[["  3 ",{"fg":3,"bold":true}],["int",{"fg":2,"bold":true,"underline":true}],[" main(",{"underline":true}],["int",{"fg":2,"bold":true,"underline":true}],[" ",{"underline":true}],["argc",{"bg":1}],[", ",{"underline":true}],["const",{"fg":2,"bold":true,"underline":true}],[" ",{"underline":true}],["char",{"fg":2,"bold":true,"underline":true}],[" *",{"underline":true}],["argv",{"bg":1}],["[])                                                                                                                      ",{"underline":true}]],"3":[["  4 ",{"fg":3,"bold":true}],["{                                                                                                                                                           ",{}]],"4":[["  5 ",{"fg":3,"bold":true}],["    printf(",{}],["\"hello world\"",{"fg":5,"bold":true}],[");                                                                                                                                  ",{}]],"5":[["  6 ",{"fg":3,"bold":true}],["    printf(",{}],["\"hello world\"",{"fg":5,"bold":true}],[");                                                                                                                                  ",{}]],"6":[["  7 ",{"fg":3,"bold":true}],["                                                                                                                                                            ",{}]],"7":[["  8 ",{"fg":3,"bold":true}],["                                                                                                                                                            ",{}]],"8":[["  9 ",{"fg":3,"bold":true}],["    ",{}],["return",{"fg":3,"bold":true}],[" ",{}],["0",{"fg":5,"bold":true}],[";                                                                                                                                               ",{}]],"9":[[" 10 ",{"fg":3,"bold":true}],["}                                                                                                                                                           ",{}]],"10":[[" 11 ",{"fg":3,"bold":true}],["                                                                                                                                                            ",{}]],"11":[["~                                                                                                                                                               ",{"fg":4,"bold":true}]],"12":[["~                                                                                                                                                               ",{"fg":4,"bold":true}]],"13":[["~                                                                                                                                                               ",{"fg":4,"bold":true}]],"14":[["~                                                                                                                                                               ",{"fg":4,"bold":true}]],"15":[["~                                                                                                                                                               ",{"fg":4,"bold":true}]],"16":[["~                                                                                                                                                               ",{"fg":4,"bold":true}]],"17":[["~                                                                                                                                                               ",{"fg":4,"bold":true}]],"18":[["~                                                                                                                                                               ",{"fg":4,"bold":true}]],"19":[["~                                                                                                                                                               ",{"fg":4,"bold":true}]],"20":[["~                                                                                                                                                               ",{"fg":4,"bold":true}]],"21":[["~                                                                                                                                                               ",{"fg":4,"bold":true}]],"22":[["~                                                                                                                                                               ",{"fg":4,"bold":true}]],"23":[["~                                                                                                                                                               ",{"fg":4,"bold":true}]],"24":[["~                                                                                                                                                               ",{"fg":4,"bold":true}]],"25":[["~                                                                                                                                                               ",{"fg":4,"bold":true}]],"26":[["~                                                                                                                                                               ",{"fg":4,"bold":true}]],"27":[["~                                                                                                                                                               ",{"fg":4,"bold":true}]],"28":[["~                                                                                                                                                               ",{"fg":4,"bold":true}]],"29":[["~                                                                                                                                                               ",{"fg":4,"bold":true}]],"30":[["~                                                                                                                                                               ",{"fg":4,"bold":true}]],"31":[["~                                                                                                                                                               ",{"fg":4,"bold":true}]],"32":[["~                                                                                                                                                               ",{"fg":4,"bold":true}]],"33":[["~                                                                                                                                                               ",{"fg":4,"bold":true}]],"34":[["~                                                                                                                                                               ",{"fg":4,"bold":true}]],"35":[["~                                                                                                                                                               ",{"fg":4,"bold":true}]],"36":[["~                                                                                                                                                               ",{"fg":4,"bold":true}]],"37":[["~                                                                                                                                                               ",{"fg":4,"bold":true}]],"38":[["~                                                                                                                                                               ",{"fg":4,"bold":true}]],"39":[["~                                                                                                                                                               ",{"fg":4,"bold":true}]],"40":[["~                                                                                                                                                               ",{"fg":4,"bold":true}]],"41":[["~                                                                                                                                                               ",{"fg":4,"bold":true}]],"42":[["~                                                                                                                                                               ",{"fg":4,"bold":true}]],"43":[["~                                                                                                                                                               ",{"fg":4,"bold":true}]],"44":[["~                                                                                                                                                               ",{"fg":4,"bold":true}]],"45":[["~                                                                                                                                                               ",{"fg":4,"bold":true}]]},"cursor":{"x":3,"y":45}}],[0.053768,{"lines":{"47":[["                                                                                                                                                                ",{}]]},"cursor":{"x":0,"y":47}}],[0.000544,{"lines":{"47":[["[root@localhost ~]#                                                                                                                                             ",{}]]},"cursor":{"x":20}}],[1.18681,{"lines":{"47":[["[root@localhost ~]# c                                                                                                                                           ",{}]]},"cursor":{"x":21}}],[0.08969199999999999,{"lines":{"47":[["[root@localhost ~]# cl                                                                                                                                          ",{}]]},"cursor":{"x":22}}],[0.2291,{"lines":{"47":[["[root@localhost ~]# cla                                                                                                                                         ",{}]]},"cursor":{"x":23}}],[0.13525,{"lines":{"47":[["[root@localhost ~]# clar                                                                                                                                        ",{}]]},"cursor":{"x":24}}],[0.111646,{"lines":{"47":[["[root@localhost ~]# clare                                                                                                                                       ",{}]]},"cursor":{"x":25}}],[0.39648,{"lines":{"47":[["[root@localhost ~]# clar                                                                                                                                        ",{}]]},"cursor":{"x":24}}],[0.131585,{"lines":{"47":[["[root@localhost ~]# cla                                                                                                                                         ",{}]]},"cursor":{"x":23}}],[0.131338,{"lines":{"47":[["[root@localhost ~]# cl                                                                                                                                          ",{}]]},"cursor":{"x":22}}],[0.165964,{"lines":{"47":[["[root@localhost ~]# cle                                                                                                                                         ",{}]]},"cursor":{"x":23}}],[0.077031,{"lines":{"47":[["[root@localhost ~]# clea                                                                                                                                        ",{}]]},"cursor":{"x":24}}],[0.067093,{"lines":{"47":[["[root@localhost ~]# clear                                                                                                                                       ",{}]]},"cursor":{"x":25}}],[0.119921,{"lines":{"0":[["  2 ",{"fg":3,"bold":true}],["                                                                                                                                                            ",{}]],"1":[["  3 ",{"fg":3,"bold":true}],["int",{"fg":2,"bold":true,"underline":true}],[" main(",{"underline":true}],["int",{"fg":2,"bold":true,"underline":true}],[" ",{"underline":true}],["argc",{"bg":1}],[", ",{"underline":true}],["const",{"fg":2,"bold":true,"underline":true}],[" ",{"underline":true}],["char",{"fg":2,"bold":true,"underline":true}],[" *",{"underline":true}],["argv",{"bg":1}],["[])                                                                                                                      ",{"underline":true}]],"2":[["  4 ",{"fg":3,"bold":true}],["{                                                                                                                                                           ",{}]],"3":[["  5 ",{"fg":3,"bold":true}],["    printf(",{}],["\"hello world\"",{"fg":5,"bold":true}],[");                                                                                                                                  ",{}]],"4":[["  6 ",{"fg":3,"bold":true}],["    printf(",{}],["\"hello world\"",{"fg":5,"bold":true}],[");                                                                                                                                  ",{}]],"5":[["  7 ",{"fg":3,"bold":true}],["                                                                                                                                                            ",{}]],"6":[["  8 ",{"fg":3,"bold":true}],["                                                                                                                                                            ",{}]],"7":[["  9 ",{"fg":3,"bold":true}],["    ",{}],["return",{"fg":3,"bold":true}],[" ",{}],["0",{"fg":5,"bold":true}],[";                                                                                                                                               ",{}]],"8":[[" 10 ",{"fg":3,"bold":true}],["}                                                                                                                                                           ",{}]],"9":[[" 11 ",{"fg":3,"bold":true}],["                                                                                                                                                            ",{}]],"10":[["~                                                                                                                                                               ",{"fg":4,"bold":true}]],"45":[[" NORMAL ",{"bold":true}],[" ",{}],["test.c ",{"bold":true}],[" main()                                                                                                      unix │ utf-8 │ c │  27% ",{}],[" LN   3",{"bold":true}],[":6  ",{}]],"46":[["[root@localhost ~]# clear                                                                                                                                       ",{}]],"47":[["                                                                                                                                                                ",{}]]},"cursor":{"x":0}}],[0.009582,{"lines":{"0":[["[root@localhost ~]#                                                                                                                                             ",{}]],"1":[["                                                                                                                                                                ",{}]],"2":[["                                                                                                                                                                ",{}]],"3":[["                                                                                                                                                                ",{}]],"4":[["                                                                                                                                                                ",{}]],"5":[["                                                                                                                                                                ",{}]],"6":[["                                                                                                                                                                ",{}]],"7":[["                                                                                                                                                                ",{}]],"8":[["                                                                                                                                                                ",{}]],"9":[["                                                                                                                                                                ",{}]],"10":[["                                                                                                                                                                ",{}]],"11":[["                                                                                                                                                                ",{}]],"12":[["                                                                                                                                                                ",{}]],"13":[["                                                                                                                                                                ",{}]],"14":[["                                                                                                                                                                ",{}]],"15":[["                                                                                                                                                                ",{}]],"16":[["                                                                                                                                                                ",{}]],"17":[["                                                                                                                                                                ",{}]],"18":[["                                                                                                                                                                ",{}]],"19":[["                                                                                                                                                                ",{}]],"20":[["                                                                                                                                                                ",{}]],"21":[["                                                                                                                                                                ",{}]],"22":[["                                                                                                                                                                ",{}]],"23":[["                                                                                                                                                                ",{}]],"24":[["                                                                                                                                                                ",{}]],"25":[["                                                                                                                                                                ",{}]],"26":[["                                                                                                                                                                ",{}]],"27":[["                                                                                                                                                                ",{}]],"28":[["                                                                                                                                                                ",{}]],"29":[["                                                                                                                                                                ",{}]],"30":[["                                                                                                                                                                ",{}]],"31":[["                                                                                                                                                                ",{}]],"32":[["                                                                                                                                                                ",{}]],"33":[["                                                                                                                                                                ",{}]],"34":[["                                                                                                                                                                ",{}]],"35":[["                                                                                                                                                                ",{}]],"36":[["                                                                                                                                                                ",{}]],"37":[["                                                                                                                                                                ",{}]],"38":[["                                                                                                                                                                ",{}]],"39":[["                                                                                                                                                                ",{}]],"40":[["                                                                                                                                                                ",{}]],"41":[["                                                                                                                                                                ",{}]],"42":[["                                                                                                                                                                ",{}]],"43":[["                                                                                                                                                                ",{}]],"44":[["                                                                                                                                                                ",{}]],"45":[["                                                                                                                                                                ",{}]],"46":[["                                                                                                                                                                ",{}]]},"cursor":{"x":20,"y":0}}],[0.288792,{"lines":{"0":[["[root@localhost ~]# l                                                                                                                                           ",{}]]},"cursor":{"x":21}}],[0.197487,{"lines":{"0":[["[root@localhost ~]# ls                                                                                                                                          ",{}]]},"cursor":{"x":22}}],[0.107261,{"cursor":{"x":0,"y":1}}],[0.005258000000000001,{"lines":{"1":[["anaconda-ks.cfg  ",{}],["diary",{"fg":4,"bold":true}],["  initial-setup-ks.cfg  ",{}],["temp",{"fg":4,"bold":true}],["  test.c  test.cpp                                                                                            ",{}]],"2":[["[root@localhost ~]#                                                                                                                                             ",{}]]},"cursor":{"x":20,"y":2}}],[1.85205,{"lines":{"2":[["[root@localhost ~]# e                                                                                                                                           ",{}]]},"cursor":{"x":21}}],[0.379624,{"lines":{"2":[["[root@localhost ~]# en                                                                                                                                          ",{}]]},"cursor":{"x":22}}],[0.149066,{"lines":{"2":[["[root@localhost ~]# env                                                                                                                                         ",{}]]},"cursor":{"x":23}}],[0.394818,{"cursor":{"x":0,"y":3}}],[0.081358,{"lines":{"3":[["XDG_VTNR=1                                                                                                                                                      ",{}]],"4":[["XDG_SESSION_ID=5                                                                                                                                                ",{}]],"5":[["HOSTNAME=localhost.localdomain                                                                                                                                  ",{}]],"6":[["SHELL=/bin/bash                                                                                                                                                 ",{}]],"7":[["TERM=linux                                                                                                                                                      ",{}]],"8":[["HISTSIZE=1000                                                                                                                                                   ",{}]],"9":[["QT_GRAPHICSSYSTEM_CHECKED=1                                                                                                                                     ",{}]],"10":[["USER=root                                                                                                                                                       ",{}]],"11":[["LS_COLORS=rs=0:di=01;34:ln=01;36:mh=00:pi=40;33:so=01;35:do=01;35:bd=40;33;01:cd=40;33;01:or=40;31;01:mi=01;05;37;41:su=37;41:sg=30;43:ca=30;41:tw=30;42:ow=34;4",{}]],"12":[["2:st=37;44:ex=01;32:*.tar=01;31:*.tgz=01;31:*.arc=01;31:*.arj=01;31:*.taz=01;31:*.lha=01;31:*.lzh=01;31:*.lzma=01;31:*.tlz=01;31:*.txz=01;31:*.tzo=01;31:*.t7z=0",{}]],"13":[["1;31:*.zip=01;31:*.z=01;31:*.Z=01;31:*.dz=01;31:*.gz=01;31:*.lrz=01;31:*.lz=01;31:*.lzo=01;31:*.xz=01;31:*.bz2=01;31:*.bz=01;31:*.tbz=01;31:*.tbz2=01;31:*.tz=01",{}]],"14":[[";31:*.deb=01;31:*.rpm=01;31:*.jar=01;31:*.war=01;31:*.ear=01;31:*.sar=01;31:*.rar=01;31:*.alz=01;31:*.ace=01;31:*.zoo=01;31:*.cpio=01;31:*.7z=01;31:*.rz=01;31:*",{}]],"15":[[".cab=01;31:*.jpg=01;35:*.jpeg=01;35:*.gif=01;35:*.bmp=01;35:*.pbm=01;35:*.pgm=01;35:*.ppm=01;35:*.tga=01;35:*.xbm=01;35:*.xpm=01;35:*.tif=01;35:*.tiff=01;35:*.p",{}]],"16":[["ng=01;35:*.svg=01;35:*.svgz=01;35:*.mng=01;35:*.pcx=01;35:*.mov=01;35:*.mpg=01                                                                                  ",{}]]},"cursor":{"x":78,"y":16}}],[0.002251,{"lines":{"16":[["ng=01;35:*.svg=01;35:*.svgz=01;35:*.mng=01;35:*.pcx=01;35:*.mov=01;35:*.mpg=01;35:*.mpeg=01;35:*.m2v=01;35:*.mkv=01;35:*.ogm=01;35:*.mp4=01;35:*.m4v=01;35:*.mp4",{}]],"17":[["v=01;35:*.vob=01;35:*.qt=01;35:*.nuv=01;35:*.wmv=01;35:*.asf=01;35:*.rm=01;35:*.rmvb=01;35:*.flc=01;35:*.avi=01;35:*.fli=01;35:*.flv=01;35:*.gl=01;35:*.dl=01;35",{}]],"18":[[":*.xcf=01;35:*.xwd=01;35:*.yuv=01;35:*.cgm=01;35:*.emf=01;35:*.axv=01;35:*.anx=01;35:*.ogv=01;35:*.ogx=01;35:*.aac=01;36:*.au=01;36:*.flac=01;36:*.mid=01;36:*.m",{}]],"19":[["idi=01;36:*.mka=01;36:*.mp3=01;36:*.mpc=01;36:*.ogg=01;36:*.ra=01;36:*.wav=01;36:*.axa=01;36:*.oga=01;36:*.spx=01;36:*.xspf=01;36:                              ",{}]],"20":[["LD_LIBRARY_PATH=:/usr/lib/llvm/:/root/.vim/bundle/YouCompleteMe/third_party/ycmd/:/usr/lib/llvm/:/root/.vim/bundle/YouCompleteMe/third_party/ycmd/              ",{}]],"21":[["PATH=/opt/bin/:/opt/bin/:/usr/local/sbin:/usr/local/bin:/sbin:/bin:/usr/sbin:/usr/bin:/root/bin                                                                 ",{}]],"22":[["MAIL=/var/spool/mail/root                                                                                                                                       ",{}]],"23":[["PWD=/root                                                                                                                                                       ",{}]],"24":[["KDE_IS_PRELINKED=1                                                                                                                                              ",{}]],"25":[["LANG=en_US.UTF-8                                                                                                                                                ",{}]],"26":[["KDEDIRS=/usr                                                                                                                                                    ",{}]],"27":[["HISTCONTROL=ignoredups                                                                                                                                          ",{}]],"28":[["HOME=/root                                                                                                                                                      ",{}]],"29":[["XDG_SEAT=seat0                                                                                                                                                  ",{}]],"30":[["SHLVL=2                                                                                                                                                         ",{}]],"31":[["LOGNAME=root                                                                                                                                                    ",{}]],"32":[["LESSOPEN=||/usr/bin/lesspipe.sh %s                                                                                                                              ",{}]],"33":[["XDG_RUNTIME_DIR=/run/user/0                                                                                                                                     ",{}]],"34":[["QT_PLUGIN_PATH=/usr/lib64/kde4/plugins:/usr/lib/kde4/plugins                                                                                                    ",{}]],"35":[["_=/bin/env                                                                                                                                                      ",{}]],"36":[["[root@localhost ~]#                                                                                                                                             ",{}]]},"cursor":{"x":20,"y":36}}],[2.893088,{"lines":{"36":[["[root@localhost ~]# c                                                                                                                                           ",{}]]},"cursor":{"x":21}}],[0.09364,{"lines":{"36":[["[root@localhost ~]# cl                                                                                                                                          ",{}]]},"cursor":{"x":22}}],[0.153681,{"lines":{"36":[["[root@localhost ~]# cla                                                                                                                                         ",{}]]},"cursor":{"x":23}}],[0.071017,{"lines":{"36":[["[root@localhost ~]# clae                                                                                                                                        ",{}]]},"cursor":{"x":24}}],[0.922745,{"lines":{"36":[["[root@localhost ~]# cla                                                                                                                                         ",{}]]},"cursor":{"x":23}}],[0.226941,{"lines":{"36":[["[root@localhost ~]# cl                                                                                                                                          ",{}]]},"cursor":{"x":22}}],[0.246122,{"lines":{"36":[["[root@localhost ~]# cla                                                                                                                                         ",{}]]},"cursor":{"x":23}}],[0.135315,{"lines":{"36":[["[root@localhost ~]# clar                                                                                                                                        ",{}]]},"cursor":{"x":24}}],[0.527586,{"lines":{"36":[["[root@localhost ~]# cla                                                                                                                                         ",{}]]},"cursor":{"x":23}}],[0.474307,{"lines":{"36":[["[root@localhost ~]# clae                                                                                                                                        ",{}]]},"cursor":{"x":24}}],[0.164301,{"lines":{"36":[["[root@localhost ~]# claea                                                                                                                                       ",{}]]},"cursor":{"x":25}}],[0.258473,{"lines":{"36":[["[root@localhost ~]# clae                                                                                                                                        ",{}]]},"cursor":{"x":24}}],[0.152663,{"lines":{"36":[["[root@localhost ~]# cla                                                                                                                                         ",{}]]},"cursor":{"x":23}}],[0.115892,{"lines":{"36":[["[root@localhost ~]# cl                                                                                                                                          ",{}]]},"cursor":{"x":22}}],[0.439952,{"lines":{"36":[["[root@localhost ~]# cle                                                                                                                                         ",{}]]},"cursor":{"x":23}}],[0.128031,{"lines":{"36":[["[root@localhost ~]# clea                                                                                                                                        ",{}]]},"cursor":{"x":24}}],[0.095974,{"lines":{"36":[["[root@localhost ~]# clear                                                                                                                                       ",{}]]},"cursor":{"x":25}}],[0.293575,{"lines":{"0":[["                                                                                                                                                                ",{}]],"1":[["                                                                                                                                                                ",{}]],"2":[["                                                                                                                                                                ",{}]],"3":[["                                                                                                                                                                ",{}]],"4":[["                                                                                                                                                                ",{}]],"5":[["                                                                                                                                                                ",{}]],"6":[["                                                                                                                                                                ",{}]],"7":[["                                                                                                                                                                ",{}]],"8":[["                                                                                                                                                                ",{}]],"9":[["                                                                                                                                                                ",{}]],"10":[["                                                                                                                                                                ",{}]],"11":[["                                                                                                                                                                ",{}]],"12":[["                                                                                                                                                                ",{}]],"13":[["                                                                                                                                                                ",{}]],"14":[["                                                                                                                                                                ",{}]],"15":[["                                                                                                                                                                ",{}]],"16":[["                                                                                                                                                                ",{}]],"17":[["                                                                                                                                                                ",{}]],"18":[["                                                                                                                                                                ",{}]],"19":[["                                                                                                                                                                ",{}]],"20":[["                                                                                                                                                                ",{}]],"21":[["                                                                                                                                                                ",{}]],"22":[["                                                                                                                                                                ",{}]],"23":[["                                                                                                                                                                ",{}]],"24":[["                                                                                                                                                                ",{}]],"25":[["                                                                                                                                                                ",{}]],"26":[["                                                                                                                                                                ",{}]],"27":[["                                                                                                                                                                ",{}]],"28":[["                                                                                                                                                                ",{}]],"29":[["                                                                                                                                                                ",{}]],"30":[["                                                                                                                                                                ",{}]],"31":[["                                                                                                                                                                ",{}]],"32":[["                                                                                                                                                                ",{}]],"33":[["                                                                                                                                                                ",{}]],"34":[["                                                                                                                                                                ",{}]],"35":[["                                                                                                                                                                ",{}]],"36":[["                                                                                                                                                                ",{}]]},"cursor":{"x":0,"y":0}}],[0.00013,{"lines":{"0":[["[root@localhost ~]#                                                                                                                                             ",{}]]},"cursor":{"x":20}}],[110.850337,{"lines":{"0":[["[root@localhost ~]# e                                                                                                                                           ",{}]]},"cursor":{"x":21}}],[0.195396,{"lines":{"0":[["[root@localhost ~]# ex                                                                                                                                          ",{}]]},"cursor":{"x":22}}],[0.492564,{"lines":{"0":[["[root@localhost ~]# exi                                                                                                                                         ",{}]]},"cursor":{"x":23}}],[0.10887,{"lines":{"0":[["[root@localhost ~]# exit                                                                                                                                        ",{}]]},"cursor":{"x":24}}],[0.129632,{"lines":{"1":[["exit                                                                                                                                                            ",{}]]},"cursor":{"x":0,"y":2}}]]